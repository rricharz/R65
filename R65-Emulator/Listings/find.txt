
R65 COMPILE 4.2: program FIND             10/2/24 page 1


   1 (    4) program find;
   2 (    4) { find files on drive 0 and drive 1.
   3 (    4)   Wildcards * and ? are allowed.
   4 (    4)   The cyclus is ignored.
   5 (    4)   File type is required either as
   6 (    4)   name:x, name* or name:?
   7 (    4) 
   8 (    4)   2023 rricharz                       }
   9 (    4) 
  10 (    4) uses syslib,arglib,wildlib,disklib;
  11 ( 2095) 
  12 ( 2095) const afloppy=$c827;
  13 ( 2098) 
  14 ( 2098) mem   filerr=$db: integer&;
  15 ( 2098) 
  16 ( 2098) var   cyclus,drive,entry: integer;
  17 ( 2098)       default,found,last: boolean;
  18 ( 2098)       name: array[namesize] of char;
  19 ( 2098) 
  20 ( 2098) proc findond(nm:array[15] of char; drv:integer);
  21 ( 2098) {********************************************}
  22 ( 2098) 
  23 ( 2098) const  prflab     = $ece3;
  24 ( 2101) 
  25 ( 2101) var first: boolean;
  26 ( 2101)     i: integer;
  27 ( 2101)     nm2: array[namesize] of char;
  28 ( 2101) 
  29 ( 2101) begin
  30 ( 2101)   filerr:=0;
  31 ( 2105)   first:=true;
  32 ( 2111)   fildrv:=drv;
  33 ( 2115)   if nm[0]<>' ' then begin
  34 ( 2132)     cyclus:=0; drive:=drv;
  35 ( 2141)     asetfile(nm,cyclus,drive,' ');
  36 ( 2171)     call(afloppy);
  37 ( 2175)   end else begin
  38 ( 2178)     dskname;
  39 ( 2182)     for i:=0 to namesize do nm2[i]:=filnam[i];
  40 ( 2210)   end;
  41 ( 2230)   if filerr=0 then begin
  42 ( 2236)     last:=false; entry:=0;
  43 ( 2247)     while (entry<numentries) and not last do begin
  44 ( 2267)       cyclus:=0;
  45 ( 2269)       findentry(name,drv,entry,found,last);
  46 ( 2319)       if found and (not last) then begin
  47 ( 2329)         if first then begin
  48 ( 2336)           write(invvid,'Disk ');
  49 ( 2348)           if nm[0]=' ' then
  50 ( 2356)             writename(nm2)
  51 ( 2360)           else
  52 ( 2372)             writename(nm);
  53 ( 2387)           write(':',norvid);
  54 ( 2392)           writeln('  (',freedsk(drv,false),'% free)');
  55 ( 2425)           first:=false;
  56 ( 2427)         end;
  57 ( 2431)         call(prflab); writeln;
  58 ( 2435)         end;
  59 ( 2441)       end;
  60 ( 2441)     entry:=entry+1;
  61 ( 2450)   end else begin
  62 ( 2458)     write('disk ');
  63 ( 2464)     writename(nm);
  64 ( 2476)     writeln(' not found');
  65 ( 2493)   end;
  66 ( 2493) end;
  67 ( 2493) 
  68 ( 2494) begin
  69 ( 2494)   cyclus:=0; drive:=255;
  70 ( 2504)   agetstring(name,default,cyclus,drive);
  71 ( 2548)   if drive<>255 then
  72 ( 2554)     findond('                ',drive)
  73 ( 2576)   else begin
  74 ( 2589)     findond('WORK            ',1);
  75 ( 2615)     findond('PROGRAMS        ',0);
  76 ( 2641)     findond('SOURCE          ',0);
  77 ( 2667)     findond('BASIC           ',0);
  78 ( 2693)     findond('HELP            ',0);
  79 ( 2719)     findond('PSOURCE         ',0);
  80 ( 2745)     findond('PASCAL          ',0);
  81 ( 2771)   end;
  82 ( 2771) end.
  83 ( 2771) 

End compile

Code lenght:          2770
Compiler stack size:  65
Ident stack size:     94
Pascal errors:        0
