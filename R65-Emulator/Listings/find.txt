
R65 Pascal program FIND            6/11/23     page 1


                   1 (    4) program find;
                   2 (    4) { find files on drive 0 and drive 1.
                   3 (    4)   Wildcards * and ? are allowed.
                   4 (    4)   The cyclus is ignored.
                   5 (    4)   File type is required either as
                   6 (    4)   name:x, name* or name:?
                   7 (    4)  
                   8 (    4)   2023 rricharz                       }
                   9 (    4)  
                  10 (    4) uses syslib,arglib,wildlib;
                  11 ( 1819)  
                  12 ( 1819) const afloppy=$c827;
                  13 ( 1822)  
                  14 ( 1822) mem   filerr=$db: integer&;
                  15 ( 1822)  
                  16 ( 1822) var   cyclus,drive,entry: integer;
                  17 ( 1822)       default,found,last: boolean;
                  18 ( 1822)       name: array[namesize] of char;
                  19 ( 1822)  
                  20 ( 1822) proc findond(nm:array[15] of char; d:integer);
                  21 ( 1822) {********************************************}
                  22 ( 1822)  
                  23 ( 1822) const  prflab     = $ece3;
                  24 ( 1825)  
                  25 ( 1825) var first: boolean;
                  26 ( 1825)     i: integer;
                  27 ( 1825)  
                  28 ( 1825) begin
                  29 ( 1825)   filerr:=0;
                  30 ( 1829)   first:=true;
                  31 ( 1835)   if nm[0]<>' ' then begin
                  32 ( 1848)     cyclus:=0; drive:=d;
                  33 ( 1857)     asetfile(nm,cyclus,drive,' ');
                  34 ( 1887)     call(afloppy);
                  35 ( 1891)   end;
                  36 ( 1891)   if filerr=0 then begin
                  37 ( 1897)     last:=false; entry:=0;
                  38 ( 1908)     while (entry<numentries) and not last do begin
                  39 ( 1928)       cyclus:=0;
                  40 ( 1930)       findentry(name,d,entry,found,last);
                  41 ( 1980)       if found and (not last) then begin
                  42 ( 1990)         if first then begin
                  43 ( 1997)           write(invvid,'Disk ');
                  44 ( 2009)           if nm[0]=' ' then
                  45 ( 2017)             write(drive)
                  46 ( 2021)           else
                  47 ( 2026)             writename(nm);
                  48 ( 2041)           writeln(':',norvid);
                  49 ( 2052)           first:=false;
                  50 ( 2054)         end;
                  51 ( 2058)         call(prflab); writeln;
                  52 ( 2062)         end;
                  53 ( 2068)       end;
                  54 ( 2068)     entry:=entry+1;
                  55 ( 2077)   end else begin
                  56 ( 2085)     write('disk ');
                  57 ( 2091)     writename(nm);
                  58 ( 2103)     writeln(' not found');
                  59 ( 2120)   end;

----------------------------------------------------------------------

R65 Pascal program FIND            6/11/23     page 2

                  60 ( 2120) end;
                  61 ( 2120)  
                  62 ( 2121) begin
                  63 ( 2121)   cyclus:=0; drive:=255;
                  64 ( 2131)   agetstring(name,default,cyclus,drive);
                  65 ( 2175)   if drive<>255 then
                  66 ( 2181)     findond('                ',drive)
                  67 ( 2203)   else begin
                  68 ( 2216)     findond('WORK            ',1);
                  69 ( 2242)     findond('PROGRAMS        ',0);
                  70 ( 2268)     findond('SOURCE          ',0);
                  71 ( 2294)     findond('BASIC           ',0);
                  72 ( 2320)     findond('PSOURCE         ',0);
                  73 ( 2346)     findond('PASCAL          ',0);
                  74 ( 2372)   end;
                  75 ( 2372) end.
                  76 ( 2372) 

End compile

Code lenght:          2371
Compiler stack size:  62
Ident stack size:     90
Pascal errors:        0
