
R65 COMPILE 4.2: program TIMELIB          5/12/23 page 1


   1 (    4) 
   2 (    4) {  ***************************************  }
   3 (    4) {  *                                     *  }
   4 (    4) {  *  R65 Computer System                *  }
   5 (    4) {  *  Pascal Library TIMELIB             *  }
   6 (    4) {  *                                     *  }
   7 (    4) {  ***************************************  }
   8 (    4) 
   9 (    4) library timelib;
  10 (    4) 
  11 (    4) var tenmillis,seconds,minutes,hours: integer;
  12 (    7) 
  13 (    7) proc gettime;
  14 (    7) { get time from host system }
  15 (    7) var dummy: integer;
  16 (   10) 
  17 (   10)   func getbcd0(address: integer): integer;
  18 (   10)   { This function is available in syslib     }
  19 (   10)   { But libraries cannot use other libraries }
  20 (   10)   var data: integer;
  21 (   13)   begin
  22 (   13)     data:=mem[address];
  23 (   19)     getbcd0:=data- 6*(data div 16);
  24 (   37)   end;
  25 (   43) 
  26 (   44) begin
  27 (   44)   { required to get date and time from host  }
  28 (   44)   dummy:=getbcd0($17b9);
  29 (   57)   { now get the data }
  30 (   61)   tenmillis:=getbcd0($17b5);
  31 (   72)   seconds:=getbcd0($17b6);
  32 (   87)   minutes:=getbcd0($17b7);
  33 (  102)   hours:=getbcd0($17b8);
  34 (  117) end;
  35 (  121) 
  36 (  122) proc prttime(device: file);
  37 (  122) { print current time }
  38 (  122) 
  39 (  122)   proc write2digs(device: file; i:integer);
  40 (  125)   begin
  41 (  125)     if i<10 then write(@device,'0');
  42 (  148)     write(@device,i);
  43 (  159)   end;
  44 (  159) 
  45 (  160) begin
  46 (  160)   gettime;
  47 (  166)   write2digs(device,hours);
  48 (  180)   write(@device,':');
  49 (  188)   write2digs(device,minutes);
  50 (  202)   write(@device,':');
  51 (  210)   write2digs(device,seconds);
  52 (  224) end;
  53 (  224) 
  54 (  225) func timediff: integer;
  55 (  225) { time in seconds since last call to gettime, }
  56 (  225) { prttime, timediff or start of program       }
  57 (  225) { returns -1 if time difference is too large  }
  58 (  225) var lastsec,lastmin,lasthrs,value: integer;
  59 (  228) begin

----------------------------------------------------------------------

R65 COMPILE 4.2: library TIMELIB          5/12/23 page 2

  60 (  228)   lastsec:=seconds;
  61 (  230)   lastmin:=minutes;
  62 (  238)   lasthrs:=hours;
  63 (  246)   gettime;
  64 (  258)   value:=hours-lasthrs;
  65 (  262)   if value<0 then value:=value+24;
  66 (  287)   value:=60*value+minutes-lastmin;
  67 (  304)   if (value>546) then { overflow }
  68 (  321)     value:=-1
  69 (  324)   else
  70 (  326)     value:=60*value+seconds-lastsec;
  71 (  346)   timediff:=value;
  72 (  355) end;
  73 (  363) 
  74 (  364) begin
  75 (  364)   gettime;
  76 (  370) end.

End compile

Code lenght:          369
Compiler stack size:  5
Ident stack size:     12
Pascal errors:        0
