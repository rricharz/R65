

----------------------------------------------------------------------

R65 PASCAL: LABELS                 05/12/23   R65 ASSEMBLER  PAGE 01

0001                    *
0002                   *       **********************
0003                   *       * R65 PASCAL RUNTIME *
0004                   *       **********************
0005                   *
0006                   * VERSION 5.3   01/06/82 RRICHARZ,RBAUMANN
0007                   * IMPROVED 2019-2023 RRICHARZ
0008                   * VERSION 5.6   SOURCE LINES WITH /L IN COMPILER
0009                   * VERSION 5.7   BREAKPOINT AT LINE BRKPNT
0010                   *
0011                           TIT R65 PASCAL RUNTIME VERSION 5.7
0012                   *
0013                   * INCLUDES RANDOM ACCESS FILE HANDLING,
0014                   * FLOATING POINT MATH, FILE HANDLING ERROR
0015                   * TESTING (OPTIONAL) AND CPNT POINTERS
0016                   *
0017                           ORG 0
0018                   *
0019  0000-            ACCU    BSS 4   TOP OF STACKELEMENT
0020                   X1      EQU ACCU        FLP ACCU
0021                   M1      EQU ACCU+1
0022  0004-            E       BSS 4   FLP SCRATCH REGISTER
0023  0008-            SP      BSS 2   CURRENT STACK (-128)
0024  000A-            PC      BSS 2   PROGRAM COUNTER
0025  000C-            RUNERR  BSS 1   RUNTIME ERROR CODE
0026  000D-            DEVICE  BSS 1   I/O DEVICE CODE
0027  000E-            ENDSTK  BSS 2   END OF STACK (-128)
0028  0010-            SIGN    BSS 1   TEMPORARY SIGN
0029  0011-            STPROG  BSS 2   START OF USER PROGRAM
0030  0013-            EOPROG  BSS 2   END OF USER PROGRAM
0031  0015-            BUFFPN  BSS 1   INPUT BUFFER POINTER
0032  0016-            ENDBUF  BSS 1   END OF INPUT BUFFER
0033  0017-            BASE    BSS 2   CURRENT BASE (-128)
0034  0019-            ABASE   BSS 2   ALTERNATE BASE (-128)
0035  001B-            ARG1    BSS 2   TEMPORARY ARGUMENT
0036  001D-            ARG3    BSS 4   TEMPORARY REGISTERS
0037  0021-            ARG2    BSS 2
0038                   X2      EQU ARG1        FLP REGISTER
0039                   M2      EQU ARG1+1
0040  0023-            IOCHECK BSS 1   IO ERROR CHECKING FLAG
0041  0024-            LINBUF  BSS 56  INPUT LINE BUFFER
0042                   *
0043                   * SPACE FOR ARGNUM,ARGLIST AND ARGTYPE
0044                   *
0045  005C-                            ORG $C0
0046  00C0-            LSTLIN  BSS 2   LAST SOURCE LINE
0047  00C2-            BRKPNT  BSS 2   BREAK POINT LINE NUMBER
0048                   *
0049                   FILFLG  EQU $DA
0050                   FILERR  EQU $DB

----------------------------------------------------------------------

R65 PASCAL RUNTIME VERSION 5.7     05/12/23   R65 ASSEMBLER  PAGE 01

0051                   FILDRV  EQU $DC
0052                   TRACK   EQU $DD
0053                   SECTOR  EQU $DE
0054                   DATA    EQU $E0
0055                   VIDPNT  EQU $E9
0056                   POINT   EQU $FA
0057                   KCHAR   EQU $FE
0058                   *
0059                   EMUCOM  EQU $1430       EMULATOR COMMAND REG
0060                   MULTA   EQU $14E0
0061                   MULTB   EQU $14E1
0062                   MULTR   EQU $14E2
0063                   *
0064                   FILTYP  EQU $0300
0065                   FILNAM  EQU $0301
0066                   FILCYC  EQU $0311
0067                   FILSTP  EQU $0312
0068                   FILLOC  EQU $0313
0069                   FILSIZ  EQU $0315
0070                   FILSA   EQU $031A
0071                   FILEA   EQU $031C
0072                   FILNM1  EQU $0320
0073                   FILCY1  EQU $0330
0074                   FILSA1  EQU $0331
0075                   SAVRST  EQU $0333
0076                   CURSEQ  EQU $0335
0077                   MAXSEQ  EQU $0336
0078                   MAXSIZ  EQU $0337
0079                   FIDRTB  EQU $0339
0080                   FIDVTB  EQU $0341
0081                   FIBPTB  EQU $0349
0082                   FIRCTB  EQU $0351
0083                   GRX     EQU $03AE
0084                   GRY     EQU $03AF
0085                   GRC     EQU $03B0
0086                   SFLAG   EQU $1781
0087                   NUMCHR  EQU $178A
0088                   VMON    EQU $17D5
0089                   SAVS    EQU $17FF
0090                   *
0091                   APLOTCH EQU $C818
0092                   GETKEY  EQU $E000
0093                   AUTOPR  EQU $E00C
0094                   ENDLIN  EQU $E024
0095                   PRTINF  EQU $E027
0096                   GETCHR  EQU $E003
0097                   GETLIN  EQU $E006
0098                   PRTCHR  EQU $E009
0099                   PRTBYT  EQU $E02D
0100                   PRTAX   EQU $E030

----------------------------------------------------------------------

R65 PASCAL RUNTIME VERSION 5.7     05/12/23   R65 ASSEMBLER  PAGE 02

0101                   PRTRSA  EQU $E836
0102                   RDFILE  EQU $E815
0103                   SETFID  EQU $E81E
0104                   OPEN    EQU $F00F
0105                   READCH  EQU $F018
0106                   WRITCH  EQU $F01B
0107                   GETNAM  EQU $F815
0108                   *
0109  00C4-                    ORG $2000
0110                   *
0111                           PAG

----------------------------------------------------------------------

R65 PASCAL RUNTIME VERSION 5.7     05/12/23   R65 ASSEMBLER  PAGE 03

0112                   *
0113                   * ENTRY VECTORS
0114                   *
0115  2000- 4C 5E 2C           JMP COLDST      COLD START ENTRY VECTOR
0116  2003- 4C CA 2A           JMP WARMST      WARM START ENTRY VECTOR
0117  2006- 4C 4D 2A           JMP PERROR      PASCAL ERROR
0118                   *
0119  2009- 24 2F      USERST  WRD ENDCODE+32
0120  200B- FF C7      USEREND WRD $C7FF
0121                   *
0122  200D- 4C F2 FC   HARGUM  JMP $FCF2       #######
0123                   *
0124                   *
0125                   * P-CODE 00:  STOP      (END OF EXECUTION)
0126                   ******************
0127                   * NO ARGUMENTS
0128                   *
0129  2010- A9 00      STOP    LDA =0
0130  2012- 85 C0              STA LSTLIN      CLEAR LSTLIN
0131  2014- 85 C1              STA LSTLIN+1
0132  2016- A9 2F              LDA =47
0133  2018- 8D 8A 17           STA NUMCHR      FORCE 48 CHARS/LINE
0134  201B- 20 92 20           JSR CLOSAL      CLOSE ALL OPEN FILES
0135  201E- A5 11              LDA STPROG      IS ANOTHER PROGRAM
0136  2020- A6 12              LDX STPROG+1    RUNNING?
0137  2022- CD 09 20           CMP USERST
0138  2025- D0 20              BNE STOP1
0139  2027- EC 0A 20           CPX USERST+1
0140  202A- D0 1B              BNE STOP1
0141                   *
0142  202C- 20 27 E0           JSR PRTINF      NO, STOP PASCAL
0143  202F- 0D 0A 51           BYT $0D,$0A,'Quit Pascal'+$80
0143  2032- 75 69 74 
0143  2035- 20 50 61 
0143  2038- 73 63 61 
0143  203B- EC 
0144  203C- AD 81 17           LDA SFLAG
0145  203F- 29 FE              AND =$FE        CLEAR PASCAL RUNTIME BIT
0146  2041- 8D 81 17           STA SFLAG       IN SFLAG
0147  2044- 6C D5 17           JMP (VMON)
0148                   *
0149  2047- 38         STOP1   SEC             YES, COMPUTE OLD SP
0150  2048- E9 8C              SBC =140
0151  204A- B0 01              BCS *+3
0152  204C- CA                 DEX
0153  204D- 85 08              STA SP
0154  204F- 86 09              STX SP+1
0155  2051- A0 8C              LDY =140
0156  2053- 20 75 27           JSR GETBACK
0157  2056- 85 13              STA EOPROG

----------------------------------------------------------------------

R65 PASCAL RUNTIME VERSION 5.7     05/12/23   R65 ASSEMBLER  PAGE 04

0158  2058- 86 14              STX EOPROG+1
0159  205A- 20 75 27           JSR GETBACK
0160  205D- 85 11              STA STPROG
0161  205F- 86 12              STX STPROG+1
0162  2061- 20 75 27           JSR GETBACK
0163  2064- 85 0A              STA PC
0164  2066- 86 0B              STX PC+1
0165  2068- 20 75 27           JSR GETBACK
0166  206B- 85 17              STA BASE
0167  206D- 86 18              STX BASE+1
0168  206F- 20 75 27           JSR GETBACK
0169  2072- 85 00              STA ACCU
0170  2074- 86 01              STX ACCU+1
0171  2076- AE FF 17           LDX SAVS        RESTORE STACK POINTER
0172  2079- 9A                 TXS
0173  207A- 4C 63 2B           JMP LOOP
0174                   *
0175                   *
0176  207D- 4C FF F0   DOPEN1  JMP $F0FF
0177  2080- 4C 45 F1   DOPEN4  JMP $F145
0178  2083- 4C 51 F1   PRFLB1  JMP $F151
0179  2086- 4C 59 F1   CPOINT  JMP $F159
0180  2089- 4C E0 F1   PREPSR  JMP $F1E0
0181  208C- 4C 9E F2   PREPSR1 JMP $F29E
0182  208F- 4C 12 F0   CLOSE   JMP $F012
0183  2092- 4C 15 F0   CLOSAL  JMP $F015
0184  2095- 4C 57 F4   READ    JMP $F457
0185  2098- 4C 25 F4   WRITE   JMP $F425
0186  209B- 4C A7 F4   PREPDO  JMP $F4A7
0187  209E- 4C FD F5   DISCER1 JMP $F5FD
0188  20A1- 4C 25 F6   ENDDO   JMP $F625
0189  20A4- 4C 2C F6   PREPRD  JMP $F62C
0190  20A7- 4C 51 F6   PREPWRA JMP $F651
0191  20AA- 4C 6D F6   PREPWRB JMP $F66D
0192                   *
0193                   *
0194                   * P-CODE 01: RETN       (RETURN FROM PROCEDURE
0195                   *****************
0196                   * NO ARGUMENTS
0197                   *
0198  20AD- A5 17      RETN    LDA BASE        SP=BASE-2
0199  20AF- 38                 SEC
0200  20B0- E9 02              SBC =2
0201  20B2- 85 08              STA SP
0202  20B4- A5 18              LDA BASE+1
0203  20B6- E9 00              SBC =0
0204  20B8- 85 09              STA SP+1
0205  20BA- A0 80              LDY =128        GET STACK TOP ELEMENT
0206  20BC- B1 08              LDA (SP),Y
0207  20BE- 85 00              STA ACCU

----------------------------------------------------------------------

R65 PASCAL RUNTIME VERSION 5.7     05/12/23   R65 ASSEMBLER  PAGE 05

0208  20C0- C8                 INY
0209  20C1- B1 08              LDA (SP),Y
0210  20C3- 85 01              STA ACCU+1
0211  20C5- A0 84              LDY =132
0212  20C7- B1 08              LDA (SP),Y      GET SAVED OLD BASE
0213  20C9- 85 17              STA BASE
0214  20CB- C8                 INY
0215  20CC- B1 08              LDA (SP),Y
0216  20CE- 85 18              STA BASE+1
0217  20D0- C8                 INY
0218  20D1- B1 08              LDA (SP),Y      AND RETURN ADDRESS
0219  20D3- 18                 CLC
0220  20D4- 69 02              ADC =2
0221  20D6- 85 0A              STA PC
0222  20D8- C8                 INY
0223  20D9- B1 08              LDA (SP),Y
0224  20DB- 69 00              ADC =0
0225  20DD- 85 0B              STA PC+1
0226  20DF- 60                 RTS
0227                   *
0228                   * P-CODE 02: NEGA       (NEGATE ACCU)
0229                   *****************
0230                   * NO ARGUMENTS
0231                   *
0232  20E0- A9 00      NEGA    LDA =0
0233  20E2- 38                 SEC
0234  20E3- E5 00              SBC ACCU
0235  20E5- 85 00              STA ACCU
0236  20E7- A9 00              LDA =0
0237  20E9- E5 01              SBC ACCU+1
0238  20EB- 85 01              STA ACCU+1
0239  20ED- 60                 RTS
0240                   *
0241                   * P-CODE 03: ADDA       (ADD)
0242                   *****************
0243                   * NO ARGUMENTS
0244                   *
0245  20EE- A0 7E      ADDA    LDY =126
0246  20F0- 18                 CLC
0247  20F1- B1 08              LDA (SP),Y
0248  20F3- 65 00              ADC ACCU
0249  20F5- 85 00              STA ACCU
0250  20F7- C8                 INY
0251  20F8- B1 08              LDA (SP),Y
0252  20FA- 65 01              ADC ACCU+1
0253  20FC- 85 01              STA ACCU+1
0254                   *
0255  20FE- A5 08     DECS2   LDA SP
0256  2100- 38                 SEC
0257  2101- E9 02              SBC =2

----------------------------------------------------------------------

R65 PASCAL RUNTIME VERSION 5.7     05/12/23   R65 ASSEMBLER  PAGE 06

0258  2103- 85 08              STA SP
0259  2105- B0 02              BCS *+4
0260  2107- C6 09              DEC SP+1
0261  2109- 60                 RTS
0262                   *
0263                   * P-CODE 04: SUBA       (SUBTRACT)
0264                   *****************
0265                   * NO ARGUMENTS
0266                   *
0267  210A- A0 7E      SUBA    LDY =126
0268  210C- 38                 SEC
0269  210D- B1 08              LDA (SP),Y
0270  210F- E5 00              SBC ACCU
0271  2111- 85 00              STA ACCU
0272  2113- C8                 INY
0273  2114- B1 08              LDA (SP),Y
0274  2116- E5 01              SBC ACCU+1
0275  2118- 85 01              STA ACCU+1
0276  211A- 4C FE 20           JMP DECS2
0277                   *
0278                   * P-CODE 05: MULA       (MULTIPLY)
0279                   *****************
0280                   * NO ARGUMENTS
0281                   *
0282  211D- 20 57 21   MULA    JSR GETSIGN     COMPUTE SIGN OF RESULT
0283  2120- A5 00              LDA ACCU
0284  2122- 78                 SEI
0285  2123- 8D E0 14           STA MULTA
0286  2126- A5 1B              LDA ARG1        GET SAVED ARGUMENT
0287  2128- 8D E1 14           STA MULTB
0288  212B- AD E2 14           LDA MULTR
0289  212E- 85 00              STA ACCU
0290  2130- AD E3 14           LDA MULTR+1
0291  2133- A6 1C              LDX ARG1+1
0292  2135- 8E E1 14           STX MULTB
0293  2138- 18                 CLC
0294  2139- 6D E2 14           ADC MULTR
0295  213C- A6 01              LDX ACCU+1
0296  213E- 8E E0 14           STX MULTA
0297  2141- A6 1B              LDX ARG1
0298  2143- 8E E1 14           STX MULTB
0299  2146- 18                 CLC
0300  2147- 6D E2 14           ADC MULTR
0301  214A- 58                 CLI
0302  214B- 29 7F              AND =$7F
0303  214D- 85 01              STA ACCU+1
0304  214F- 20 FE 20           JSR DECS2
0305  2152- A5 10              LDA SIGN
0306  2154- 30 8A              BMI NEGA
0307  2156- 60                 RTS

----------------------------------------------------------------------

R65 PASCAL RUNTIME VERSION 5.7     05/12/23   R65 ASSEMBLER  PAGE 07

0308                   *
0309  2157- A5 01      GETSIGN LDA ACCU+1
0310  2159- 85 10              STA SIGN
0311  215B- 10 03              BPL *+5
0312  215D- 20 E0 20           JSR NEGA
0313                   *
0314  2160- A0 7F              LDY =127
0315  2162- B1 08              LDA (SP),Y
0316  2164- 10 14              BPL GETSI1
0317  2166- 45 10              EOR SIGN
0318  2168- 85 10              STA SIGN
0319  216A- 88                 DEY
0320  216B- A9 00              LDA =0
0321  216D- 38                 SEC
0322  216E- F1 08              SBC (SP),Y
0323  2170- 85 1B              STA ARG1
0324  2172- C8                 INY
0325  2173- A9 00              LDA =0
0326  2175- F1 08              SBC (SP),Y
0327  2177- 85 1C              STA ARG1+1
0328  2179- 60                 RTS
0329                   *
0330  217A- 85 1C      GETSI1  STA ARG1+1
0331  217C- 88                 DEY
0332  217D- B1 08              LDA (SP),Y
0333  217F- 85 1B              STA ARG1
0334  2181- 60                 RTS
0335                   *
0336                   * PCODE 06: DIVA        (DIVIDE)
0337                   ****************
0338                   *
0339  2182- A0 7E      DIVA    LDY =126
0340  2184- B1 08              LDA (SP),Y
0341  2186- 85 1B              STA ARG1
0342  2188- C8                 INY
0343  2189- B1 08              LDA (SP),Y
0344  218B- 85 1C              STA ARG1+1
0345  218D- 20 FE 20           JSR DECS2
0346                   *
0347  2190- A5 1C              LDA ARG1+1
0348  2192- 29 80              AND =$80
0349  2194- F0 02              BEQ *+4
0350  2196- A9 FF              LDA =$FF
0351  2198- 85 21              STA ARG2
0352  219A- 85 22              STA ARG2+1
0353  219C- AA                 TAX
0354  219D- 18                 CLC
0355  219E- 65 1B              ADC ARG1
0356  21A0- 85 1B              STA ARG1
0357  21A2- 8A                 TXA

----------------------------------------------------------------------

R65 PASCAL RUNTIME VERSION 5.7     05/12/23   R65 ASSEMBLER  PAGE 08

0358  21A3- 65 1C              ADC ARG1+1
0359  21A5- 85 1C              STA ARG1+1
0360  21A7- 8A                 TXA
0361  21A8- 45 01              EOR ACCU+1
0362  21AA- 85 10              STA SIGN
0363  21AC- 10 03              BPL *+5
0364  21AE- 20 E0 20           JSR NEGA
0365  21B1- A0 11              LDY =$11
0366  21B3- A5 00              LDA ACCU
0367  21B5- 05 01              ORA ACCU+1
0368  21B7- D0 05              BNE DIV1
0369  21B9- A2 81              LDX =$81        PASCAL RUNTIME ERROR
0370  21BB- 4C 4D 2A           JMP PERROR      DIVISION BY ZERO
0371                   *
0372  21BE- 38         DIV1    SEC
0373  21BF- A5 21              LDA ARG2
0374  21C1- E5 00              SBC ACCU
0375  21C3- 48                 PHA
0376  21C4- A5 22              LDA ARG2+1
0377  21C6- E5 01              SBC ACCU+1
0378  21C8- 48                 PHA
0379  21C9- 45 22              EOR ARG2+1
0380  21CB- 30 09              BMI DIV2
0381  21CD- 68                 PLA
0382  21CE- 85 22              STA ARG2+1
0383  21D0- 68                 PLA
0384  21D1- 85 21              STA ARG2
0385  21D3- 38                 SEC
0386  21D4- B0 03              BCS DIV3
0387                   *
0388  21D6- 68         DIV2    PLA
0389  21D7- 68                 PLA
0390  21D8- 18                 CLC
0391  21D9- 26 1B      DIV3    ROL ARG1
0392  21DB- 26 1C              ROL ARG1+1
0393  21DD- 26 21              ROL ARG2
0394  21DF- 26 22              ROL ARG2+1
0395  21E1- 88                 DEY
0396  21E2- D0 DA              BNE DIV1
0397  21E4- A5 1B              LDA ARG1
0398  21E6- A6 1C              LDX ARG1+1
0399  21E8- 85 00              STA ACCU
0400  21EA- 86 01              STX ACCU+1
0401  21EC- A5 10              LDA SIGN
0402  21EE- 10 03              BPL *+5
0403  21F0- 4C E0 20           JMP NEGA
0404  21F3- 60                 RTS
0405                   *
0406                   * P-CODE 07: LOWB       (LOW BIT)
0407                   *****************

----------------------------------------------------------------------

R65 PASCAL RUNTIME VERSION 5.7     05/12/23   R65 ASSEMBLER  PAGE 09

0408                   * NO ARGUMENTS
0409                   *
0410  21F4- A5 00      LOWB    LDA ACCU
0411  21F6- 29 01              AND =1
0412  21F8- 85 00      LOWB1   STA ACCU
0413  21FA- A9 00              LDA =0
0414  21FC- 85 01              STA ACCU+1
0415  21FE- 60                 RTS
0416                   *
0417                   * P-CODE 08: TEQU       (TEST EQUAL)
0418                   *****************
0419                   *
0420  21FF- 20 0A 21  TEQU    JSR SUBA
0421  2202- A5 00              LDA ACCU
0422  2204- 05 01              ORA ACCU+1
0423  2206- F0 04              BEQ TEQU1
0424  2208- A9 00              LDA =0
0425  220A- F0 EC              BEQ LOWB1       UNCOND.
0426                   *
0427  220C- A9 01      TEQU1   LDA =1
0428  220E- D0 E8              BNE LOWB1       UNCOND.
0429                   *
0430                   * PCODE 09: TNEQ        (TEST NOT EQUAL)
0431                   ****************
0432                   *
0433  2210- 20 FF 21   TNEQ    JSR TEQU
0434  2213- A5 00              LDA ACCU
0435  2215- 49 01              EOR =1
0436  2217- 85 00              STA ACCU
0437  2219- 60                 RTS
0438                   *
0439                   * P-CODE 0A: TLES       (TEST LESS)
0440                   *****************
0441                   *
0442  221A- 20 0A 21   TLES    JSR SUBA
0443  221D- A9 00              LDA =0
0444  221F- 06 01              ASL ACCU+1
0445  2221- 2A                 ROL A
0446  2222- 90 D4              BCC LOWB1       UNCOND.
0447                   *
0448                   * P-CODE 0B: TGRE       (TEST GREATER OR EQUAL)
0449                   *****************
0450                   *
0451  2224- 20 1A 22   TGRE    JSR TLES
0452  2227- 4C 13 22           JMP TNEQ+3
0453                   *
0454                   * P-CODE 0C: TGRTS      (TEST GREATER)
0455                   ******************
0456                   *
0457  222A- 20 FF 26   TGRT    JSR EXST

----------------------------------------------------------------------

R65 PASCAL RUNTIME VERSION 5.7     05/12/23   R65 ASSEMBLER  PAGE 10

0458  222D- 4C 1A 22           JMP TLES
0459                   *
0460                   * P-CODE 0D: TLEE       (TEST LESS OR EQUAL)
0461                   *****************
0462                   *
0463  2230- 20 2A 22   TLEE    JSR TGRT
0464  2233- 4C 13 22           JMP TNEQ+3
0465                   *
0466                   * P-CODE 0E: ORAC       (BITWISE OR)
0467                   *****************
0468                   *
0469  2236- A0 7E      ORAC    LDY =126
0470  2238- B1 08              LDA (SP),Y
0471  223A- 05 00              ORA ACCU
0472  223C- 85 00              STA ACCU
0473  223E- C8                 INY
0474  223F- B1 08              LDA (SP),Y
0475  2241- 05 01              ORA ACCU+1
0476  2243- 85 01              STA ACCU+1
0477  2245- 4C FE 20           JMP DECS2
0478                   *
0479                   * P-CODE 0F: ANDA       (BITWISE AND)
0480                   *****************
0481                   *
0482  2248- A0 7E      ANDA    LDY =126
0483  224A- B1 08              LDA (SP),Y
0484  224C- 25 00              AND ACCU
0485  224E- 85 00              STA ACCU
0486  2250- C8                 INY
0487  2251- B1 08              LDA (SP),Y
0488  2253- 25 01              AND ACCU+1
0489  2255- 85 01              STA ACCU+1
0490  2257- 4C FE 20           JMP DECS2
0491                   *
0492                   * PCODE 10: EORA        (BITWISE OR)
0493                   ****************
0494                   *
0495  225A- A0 7E      EORA    LDY =126
0496  225C- B1 08              LDA (SP),Y
0497  225E- 45 00              EOR ACCU
0498  2260- 85 00              STA ACCU
0499  2262- C8                 INY
0500  2263- B1 08              LDA (SP),Y
0501  2265- 45 01              EOR ACCU+1
0502  2267- 85 01              STA ACCU+1
0503  2269- 4C FE 20           JMP DECS2
0504                   *
0505                   * P-CODE 11: NOTA       (BITWISE NOT)
0506                   *****************
0507                   *

----------------------------------------------------------------------

R65 PASCAL RUNTIME VERSION 5.7     05/12/23   R65 ASSEMBLER  PAGE 11

0508  226C- A5 00      NOTA    LDA ACCU
0509  226E- 49 FF              EOR =$FF
0510  2270- 85 00              STA ACCU
0511  2272- A5 01              LDA ACCU+1
0512  2274- 49 FF              EOR =$FF
0513  2276- 85 01              STA ACCU+1
0514  2278- 60                 RTS
0515                   *
0516                   * P-CODE 12: LEFT       (SHIFT LEFT N BYTES)
0517                   *****************
0518                   *
0519  2279- 20 E0 20           JSR NEGA
0520  227C- A5 01      LEFT    LDA ACCU+1
0521  227E- 30 12              BMI RIGH-3      ARGUMENT NEGATIVE
0522                   *
0523  2280- A6 00              LDX ACCU
0524  2282- F0 0B              BEQ LEFT2       TAKE ONLY LOW BYTE
0525  2284- 20 EF 22           JSR GETS2       GET SECOND NO FROM ST
0526  2287- 06 00      LEFT1   ASL ACCU
0527  2289- 26 01              ROL ACCU+1
0528  228B- CA                 DEX
0529  228C- D0 F9              BNE LEFT1
0530  228E- 60                 RTS
0531                   *
0532  228F- 4C EF 22   LEFT2   JMP GETS2
0533                   *
0534                   * P-CODE 13: RIGH       (SHIFT RIGHT N BYTES)
0535                   *****************
0536                   *
0537  2292- 20 E0 20           JSR NEGA
0538  2295- A5 01      RIGH    LDA ACCU+1
0539  2297- 30 E0              BMI LEFT-3
0540  2299- A6 00              LDX ACCU
0541  229B- F0 F2              BEQ LEFT2
0542  229D- 20 EF 22           JSR GETS2
0543  22A0- 46 01      RIGH1   LSR ACCU+1
0544  22A2- A9 00              LDA =0
0545  22A4- 90 02              BCC *+4
0546  22A6- A9 80              LDA =128
0547  22A8- 46 00              LSR ACCU
0548  22AA- 05 00              ORA ACCU
0549  22AC- 85 00              STA ACCU
0550  22AE- CA                 DEX
0551  22AF- D0 EF              BNE RIGH1
0552  22B1- 60                 RTS
0553                   *
0554                   * P-CODE 14:INCA        (INCREMENT ACCU)
0555                   ****************
0556                   *
0557  22B2- E6 00      INCA    INC ACCU

----------------------------------------------------------------------

R65 PASCAL RUNTIME VERSION 5.7     05/12/23   R65 ASSEMBLER  PAGE 12

0558  22B4- D0 02              BNE *+4
0559  22B6- E6 01              INC ACCU+1
0560  22B8- 60                 RTS
0561                   *
0562                   * P-CODE 15: DECA       (DECREMENT ACCU)
0563                   *****************
0564                   *
0565  22B9- A5 00      DECA    LDA ACCU
0566  22BB- D0 02              BNE *+4
0567  22BD- C6 01              DEC ACCU+1
0568  22BF- C6 00              DEC ACCU
0569  22C1- 60                 RTS
0570                   *
0571                   * P-CODE 16: COPY       (COPY ACCU0
0572                   *****************
0573                   *
0574  22C2- 20 D1 22   COPY    JSR INCS2       INCREMENT STACK
0575  22C5- A0 7E              LDY =126
0576  22C7- A5 00              LDA ACCU
0577  22C9- 91 08              STA (SP),Y
0578  22CB- C8                 INY
0579  22CC- A5 01              LDA ACCU+1
0580  22CE- 91 08              STA (SP),Y
0581  22D0- 60                 RTS
0582                   *
0583  22D1- A9 02      INCS2   LDA =2
0584  22D3- 18                 CLC
0585  22D4- 65 08              ADC SP
0586  22D6- 85 08              STA SP
0587  22D8- 90 02              BCC *+4
0588  22DA- E6 09              INC SP+1
0589  22DC- C5 0E      INCS2A  CMP ENDSTK      TEST STACK OVERFLOW
0590  22DE- A5 09              LDA SP+1
0591  22E0- E5 0F              SBC ENDSTK+1
0592  22E2- B0 06              BCS INCS2B
0593  22E4- A9 05              LDA =5          LET EMULATOR KNOW THAT
0594  22E6- 8D 30 14           STA EMUCOM      SP HAS BEEN INCREASED
0595  22E9- 60                 RTS
0596                   *
0597  22EA- A0 82      INCS2B  LDY =$82        PASCAL RUN TIME ERROR
0598  22EC- 4C 4D 2A           JMP PERROR      STACK OVERFLOW
0599                   *
0600                   * GETS2
0601                   *
0602  22EF- A0 7E      GETS2   LDY =126
0603  22F1- B1 08              LDA (SP),Y
0604  22F3- 85 00              STA ACCU
0605  22F5- C8                 INY
0606  22F6- B1 08              LDA (SP),Y
0607  22F8- 85 01              STA ACCU+1

----------------------------------------------------------------------

R65 PASCAL RUNTIME VERSION 5.7     05/12/23   R65 ASSEMBLER  PAGE 13

0608  22FA- 4C FE 20           JMP DECS2
0609                   *
0610                   * P-CODE 17: PEEK
0611                   *****************
0612                   *
0613  22FD- A0 00      PEEK    LDY =0
0614  22FF- B1 00             LDA (ACCU),Y
0615  2301- 85 00              STA ACCU
0616  2303- 84 01              STY ACCU+1
0617  2305- 60                 RTS
0618                   *
0619                   * P-CODE 18: POKE
0620                   *****************
0621                   *
0622  2306- A6 00      POKE    LDX ACCU
0623  2308- 20 EF 22           JSR GETS2
0624  230B- A0 00              LDY =0
0625  230D- 8A                 TXA
0626  230E- 91 00              STA (ACCU),Y
0627  2310- 4C EF 22           JMP GETS2
0628                   *
0629                   * P-CODE 19: CALA
0630                   *****************
0631                   *
0632  2313- 20 19 23   CALA    JSR CALA1
0633  2316- 4C EF 22           JMP GETS2
0634                   *
0635  2319- 6C 00 00   CALA1   JMP (ACCU)
0636                   *
0637                   * P-CODE 1A: RLIN
0638                   *****************
0639                   *
0640  231C- 20 06 E0   RLIN    JSR GETLIN
0641  231F- A2 00              LDX =0
0642  2321- B1 E9              LDA (VIDPNT),Y
0643  2323- 29 7F              AND =$7F
0644  2325- 95 24              STA LINBUF,X
0645  2327- E8                 INX
0646  2328- C8                 INY
0647  2329- CC 8A 17           CPY NUMCHR
0648  232C- 90 F3              BCC *-11
0649  232E- F0 F1              BEQ *-13
0650  2330- CA                 DEX
0651  2331- 30 06              BMI *+8
0652  2333- B5 24              LDA LINBUF,X
0653  2335- C9 20              CMP =$20
0654  2337- F0 F7              BEQ *-7
0655  2339- E8                 INX
0656  233A- 86 16              STX ENDBUF
0657  233C- A9 00              LDA =0

----------------------------------------------------------------------

R65 PASCAL RUNTIME VERSION 5.7     05/12/23   R65 ASSEMBLER  PAGE 14

0658  233E- 85 15              STA BUFFPN
0659  2340- 20 27 E0           JSR PRTINF
0660  2343- 0D 8A              BYT $D,$8A
0661  2345- 60                 RTS
0662                   *
0663                   * P-CODE 1B: GETC
0664                   *****************
0665                   *
0666  2346- 20 C2 22   GETC    JSR COPY
0667  2349- 20 E2 29           JSR GETCHR0
0668  234C- 85 00      GETC1   STA ACCU
0669  234E- A9 00              LDA =0
0670  2350- 85 01              STA ACCU+1
0671  2352- 60                 RTS
0672                   *
0673                   * P-CODE 1C: GETN
0674                   *****************
0675                   *
0676  2353- 20 C2 22   GETN    JSR COPY
0677  2356- A9 00              LDA =0
0678  2358- 85 00              STA ACCU
0679  235A- 85 01              STA ACCU+1
0680  235C- 85 10              STA SIGN
0681  235E- 20 E2 29   GETN0   JSR GETCHR0
0682  2361- C9 20              CMP =' '
0683  2363- F0 F9              BEQ GETN0
0684  2365- C9 2D              CMP ='-'
0685  2367- D0 05              BNE GETN1
0686                   *
0687  2369- C6 10              DEC SIGN
0688  236B- 4C 72 23           JMP GETN2
0689                   *
0690  236E- C9 2B      GETN1    CMP ='+'
0691  2370- D0 03              BNE GETN2+3
0692                   *
0693  2372- 20 E2 29   GETN2   JSR GETCHR0
0694  2375- C9 30              CMP ='0'
0695  2377- 90 2F              BCC GETN3
0696  2379- C9 3A              CMP ='9'+1
0697  237B- B0 2B              BCS GETN3
0698  237D- 38                 SEC
0699  237E- E9 30              SBC ='0'
0700  2380- 48                 PHA
0701  2381- 06 00              ASL ACCU
0702  2383- 26 01              ROL ACCU+1
0703  2385- A6 00              LDX ACCU
0704  2387- A4 01              LDY ACCU+1
0705  2389- 06 00              ASL ACCU
0706  238B- 26 01              ROL ACCU+1
0707  238D- 06 00              ASL ACCU

----------------------------------------------------------------------

R65 PASCAL RUNTIME VERSION 5.7     05/12/23   R65 ASSEMBLER  PAGE 15

0708  238F- 26 01              ROL ACCU+1
0709  2391- 18                 CLC
0710  2392- 8A                 TXA
0711  2393- 65 00              ADC ACCU
0712  2395- 85 00              STA ACCU
0713  2397- 98                 TYA
0714  2398- 65 01              ADC ACCU+1
0715  239A- 85 01              STA ACCU+1
0716  239C- 68                 PLA
0717  239D- 18                 CLC
0718  239E- 65 00              ADC ACCU
0719  23A0- 85 00              STA ACCU
0720  23A2- 90 CE              BCC GETN2
0721  23A4- E6 01              INC ACCU+1
0722  23A6- B0 CA              BCS GETN2
0723                   *
0724  23A8- A5 10      GETN3   LDA SIGN
0725  23AA- F0 03              BEQ *+5
0726  23AC- 4C E0 20           JMP NEGA
0727  23AF- 60                 RTS
0728                   *
0729                   * P-CODE 1D: PRTC
0730                   *****************
0731                   *
0732  23B0- A5 00      PRTC    LDA ACCU
0733  23B2- 20 12 2A           JSR PRTCHR0
0734  23B5- 4C EF 22           JMP GETS2
0735                   *
0736                   * P-CODE 1E: PRTN
0737                   *****************
0738                   *
0739  23B8- A5 01      PRTN    LDA ACCU+1
0740  23BA- 10 08              BPL PRTN1
0741  23BC- 20 E0 20           JSR NEGA
0742  23BF- A9 2D              LDA ='-'
0743  23C1- 20 12 2A           JSR PRTCHR0
0744                   *
0745  23C4- A5 00      PRTN1   LDA ACCU
0746  23C6- A6 01              LDX ACCU+1
0747  23C8- 85 21              STA ARG2
0748  23CA- 86 22              STX ARG2+1
0749  23CC- A9 1F              LDA =$1F
0750  23CE- 85 1D              STA ARG3
0751  23D0- 85 1F              STA ARG3+2
0752  23D2- A9 2A              LDA =$2A
0753  23D4- 85 1E              STA ARG3+1
0754  23D6- 85 20              STA ARG3+3
0755  23D8- A6 21              LDX ARG2
0756  23DA- A4 22              LDY ARG2+1
0757  23DC- 38                 SEC

----------------------------------------------------------------------

R65 PASCAL RUNTIME VERSION 5.7     05/12/23   R65 ASSEMBLER  PAGE 16

0758  23DD- E6 1D      PRTN2   INC ARG3
0759  23DF- 8A                 TXA
0760  23E0- E9 10              SBC =$10
0761  23E2- AA                 TAX
0762  23E3- 98                 TYA
0763  23E4- E9 27              SBC =$27
0764  23E6- A8                 TAY
0765  23E7- B0 F4              BCS PRTN2
0766  23E9- C6 1E      PRTN3   DEC ARG3+1
0767  23EB- 8A                 TXA
0768  23EC- 69 E8              ADC =$E8
0769  23EE- AA                 TAX
0770  23EF- 98                 TYA
0771  23F0- 69 03              ADC =$03
0772  23F2- A8                 TAY
0773  23F3- 90 F4              BCC PRTN3
0774  23F5- 8A                 TXA
0775  23F6- 38         PRTN4   SEC
0776  23F7- E6 1F      PRTN5   INC ARG3+2
0777  23F9- E9 64              SBC =$64
0778  23FB- B0 FA              BCS PRTN5
0779  23FD- 88                 DEY
0780  23FE- 10 F6             BPL PRTN4
0781  2400- C6 20      PRTN6   DEC ARG3+3
0782  2402- 69 0A              ADC =$A
0783  2404- 90 FA              BCC PRTN6
0784  2406- 09 30              ORA =$30
0785  2408- 85 21              STA ARG2
0786  240A- A9 20              LDA =$20
0787  240C- 85 22              STA ARG2+1
0788  240E- A2 FB              LDX =$FB
0789  2410- 86 10      PRTN7   STX SIGN
0790  2412- B5 22              LDA ARG2+1,X
0791  2414- 05 22              ORA ARG2+1
0792  2416- C9 20              CMP =$20
0793  2418- F0 09              BEQ PRTN8
0794  241A- A0 30              LDY =$30
0795  241C- 84 22              STY ARG2+1
0796  241E- 05 22              ORA ARG2+1
0797  2420- 20 12 2A           JSR PRTCHR0
0798  2423- A6 10      PRTN8   LDX SIGN
0799  2425- E8                 INX
0800  2426- D0 E8              BNE PRTN7
0801  2428- 4C EF 22           JMP GETS2
0802                   *
0803                   * P-CODE 1F: PRTS
0804                   *****************
0805                   *
0806  242B- 06 00      PRTS    ASL ACCU
0807  242D- 26 01              ROL ACCU+1

----------------------------------------------------------------------

R65 PASCAL RUNTIME VERSION 5.7     05/12/23   R65 ASSEMBLER  PAGE 17

0808  242F- A5 08              LDA SP
0809  2431- 38                 SEC
0810  2432- E5 00              SBC ACCU
0811  2434- 85 00              STA ACCU
0812  2436- 48                 PHA
0813  2437- A5 09              LDA SP+1
0814  2439- E5 01              SBC ACCU+1
0815  243B- 85 01              STA ACCU+1
0816  243D- 48                 PHA
0817  243E- A0 80      OUTST1  LDY =128
0818  2440- B1 00              LDA (ACCU),Y
0819  2442- 20 12 2A           JSR PRTCHR0
0820  2445- A5 00              LDA ACCU
0821  2447- 18                 CLC
0822  2448- 69 02              ADC =2
0823  244A- 85 00              STA ACCU
0824  244C- 90 02              BCC *+4
0825  244E- E6 01              INC ACCU+1
0826  2450- C5 08              CMP SP
0827  2452- A5 01              LDA ACCU+1
0828  2454- E5 09              SBC SP+1
0829  2456- 90 E6              BCC OUTST1
0830  2458- 68                 PLA
0831  2459- 85 09              STA SP+1
0832  245B- 68                 PLA
0833  245C- 85 08              STA SP
0834  245E- 4C EF 22           JMP GETS2
0835                   *
0836                   * P-CODE 20: LITB
0837                   *****************
0838                   *
0839  2461- 20 C2 22   LITB    JSR COPY
0840  2464- 20 AB 24           JSR FETCH
0841  2467- 85 00              STA ACCU
0842  2469- A9 00              LDA =0
0843  246B- 85 01              STA ACCU+1
0844  246D- 60                 RTS
0845                   *
0846                   * P-CODE 21: INCB
0847                   *****************
0848                   *
0849  246E- A0 80      INCB    LDY =128        SAVE CURRENT ACCU
0850  2470- A5 00              LDA ACCU
0851  2472- 91 08              STA (SP),Y
0852  2474- C8                 INY
0853  2475- A5 01              LDA ACCU+1
0854  2477- 91 08              STA (SP),Y
0855  2479- 20 AB 24           JSR FETCH
0856  247C- A2 00              LDX =0
0857  247E- A8                 TAY             TEST A

----------------------------------------------------------------------

R65 PASCAL RUNTIME VERSION 5.7     05/12/23   R65 ASSEMBLER  PAGE 18

0858  247F- 10 01              BPL *+3
0859  2481- CA                 DEX
0860  2482- 18                 CLC
0861  2483- 65 08              ADC SP
0862  2485- 85 08              STA SP
0863  2487- 8A                 TXA
0864  2488- 65 09              ADC SP+1
0865  248A- 85 09              STA SP+1
0866  248C- A5 08      INCB1   LDA SP
0867  248E- 20 DC 22           JSR INCS2A      TEST STACK OVERFLOW
0868  2491- A0 80              LDY =128        AND GET NEW ACCU
0869  2493- B1 08              LDA (SP),Y
0870  2495- 85 00              STA ACCU
0871  2497- C8                 INY
0872  2498- B1 08              LDA (SP),Y
0873  249A- 85 01              STA ACCU+1
0874  249C- 60                 RTS
0875                   *
0876                   * P-CODE 22: LITW
0877                   *****************
0878                   *
0879  249D- 20 C2 22   LITW    JSR COPY
0880  24A0- 20 AB 24           JSR FETCH
0881  24A3- 85 00              STA ACCU
0882  24A5- 20 AB 24           JSR FETCH
0883  24A8- 85 01              STA ACCU+1
0884  24AA- 60                 RTS
0885                   *
0886                   * FETCH
0887                   *
0888  24AB- A0 00      FETCH   LDY =0
0889  24AD- B1 0A              LDA (PC),Y
0890  24AF- E6 0A              INC PC
0891  24B1- D0 02              BNE *+4
0892  24B3- E6 0B              INC PC+1
0893  24B5- 60                 RTS
0894                   *
0895                   * P-CODE 23: INCW
0896                   *****************
0897                   *
0898  24B6- A0 80      INCW    LDY =128        SAVE CURRENT ACCU
0899  24B8- A5 00              LDA ACCU
0900  24BA- 91 08              STA (SP),Y
0901  24BC- C8                 INY
0902  24BD- A5 01              LDA ACCU+1
0903  24BF- 91 08              STA (SP),Y
0904  24C1- 20 AB 24           JSR FETCH
0905  24C4- 18                 CLC
0906  24C5- 65 08              ADC SP
0907  24C7- 85 08              STA SP

----------------------------------------------------------------------

R65 PASCAL RUNTIME VERSION 5.7     05/12/23   R65 ASSEMBLER  PAGE 19

0908  24C9- 20 AB 24           JSR FETCH
0909  24CC- 65 09              ADC SP+1
0910  24CE- 85 09              STA SP+1
0911  24D0- 4C 8C 24           JMP INCB1
0912                   *
0913                   * P-CODE 24: JUMP
0914                   *****************
0915                   *
0916  24D3- A0 00      JUMP    LDY =0
0917  24D5- B1 0A              LDA (PC),Y
0918  24D7- 18                 CLC
0919  24D8- 65 0A              ADC PC
0920  24DA- AA                 TAX
0921  24DB- C8                 INY
0922  24DC- B1 0A              LDA (PC),Y
0923  24DE- 65 0B              ADC PC+1
0924  24E0- 86 0A              STX PC
0925  24E2- 85 0B              STA PC+1
0926  24E4- 60                 RTS
0927                   *
0928                   * P-CODE 25: JMPZ
0929                   *****************
0930                   *
0931  24E5- 46 00      JMPZ    LSR ACCU
0932  24E7- 08                 PHP
0933  24E8- 20 EF 22           JSR GETS2
0934  24EB- 28                 PLP
0935  24EC- 90 E5              BCC JUMP
0936                   *
0937  24EE- A5 0A              LDA PC
0938  24F0- 18                 CLC
0939  24F1- 69 02              ADC =2
0940  24F3- 85 0A              STA PC
0941  24F5- 90 02              BCC *+4
0942  24F7- E6 0B              INC PC+1
0943  24F9- 60                 RTS
0944                   *
0945                   * P-CODE 26: JMPO
0946                   *****************
0947                   *
0948  24FA- A5 00      JMPO    LDA ACCU
0949  24FC- 49 01              EOR =1
0950  24FE- 85 00             STA ACCU
0951  2500- 4C E5 24           JMP JMPZ
0952                   *
0953                   * P-CODE 27: LOAD
0954                   *****************
0955                   *
0956  2503- 20 C2 22   LOAD    JSR COPY
0957  2506- 20 AB 24           JSR FETCH

----------------------------------------------------------------------

R65 PASCAL RUNTIME VERSION 5.7     05/12/23   R65 ASSEMBLER  PAGE 20

0958  2509- AA                 TAX             LEVEL DIFFERENCE
0959  250A- 20 AB 24           JSR FETCH
0960  250D- 85 1B              STA ARG1
0961  250F- 20 AB 24           JSR FETCH
0962  2512- 85 1C      LOAD1   STA ARG1+1
0963  2514- 20 40 25           JSR FBASE3
0964  2517- A0 80      LOAD2   LDY =128
0965  2519- B1 19              LDA (ABASE),Y
0966  251B- 85 00              STA ACCU
0967  251D- C8                 INY
0968  251E- B1 19              LDA (ABASE),Y
0969  2520- 85 01              STA ACCU+1
0970  2522- 60                 RTS
0971                   *
0972                   * FBASE
0973                   *
0974  2523- A5 17      FBASE   LDA BASE
0975  2525- A4 18              LDY BASE+1
0976  2527- 85 19              STA ABASE
0977  2529- 84 1A              STY ABASE+1
0978  252B- E0 00              CPX =0
0979  252D- F0 10              BEQ FBASE2
0980                   *
0981  252F- A0 80      FBASE1  LDY =128
0982  2531- B1 19              LDA (ABASE),Y
0983  2533- 48                 PHA
0984  2534- C8                 INY
0985  2535- B1 19              LDA (ABASE),Y
0986  2537- 85 1A              STA ABASE+1
0987  2539- 68                 PLA
0988  253A- 85 19              STA ABASE
0989  253C- CA                 DEX
0990  253D- D0 F0              BNE FBASE1
0991  253F- 60         FBASE2  RTS
0992                   *
0993  2540- 20 23 25   FBASE3  JSR FBASE
0994  2543- 18                 CLC
0995  2544- A5 1B              LDA ARG1
0996  2546- 65 19              ADC ABASE
0997  2548- 85 19              STA ABASE
0998  254A- A5 1C              LDA ARG1+1
0999  254C- 65 1A              ADC ABASE+1
1000  254E- 85 1A              STA ABASE+1
1001  2550- 60                 RTS
1002                   *
1003                   * P-CODE 28: LODX
1004                   *****************
1005                   *
1006  2551- 20 AB 24   LODX    JSR FETCH
1007  2554- AA                 TAX

----------------------------------------------------------------------

R65 PASCAL RUNTIME VERSION 5.7     05/12/23   R65 ASSEMBLER  PAGE 21

1008  2555- 20 AB 24           JSR FETCH
1009  2558- 06 00              ASL ACCU
1010  255A- 26 01              ROL ACCU+1
1011  255C- 18                 CLC
1012  255D- 65 00              ADC ACCU
1013  255F- 85 1B              STA ARG1
1014  2561- 08                 PHP
1015  2562- 20 AB 24           JSR FETCH
1016  2565- 28                 PLP
1017  2566- 65 01              ADC ACCU+1
1018  2568- 4C 12 25           JMP LOAD1
1019                   *
1020                   * P-CODE 29: STOR
1021                   *****************
1022                   *
1023  256B- 20 AB 24   STOR    JSR FETCH
1024  256E- AA                 TAX
1025  256F- 20 AB 24           JSR FETCH
1026  2572- 85 1B              STA ARG1
1027  2574- 20 AB 24           JSR FETCH
1028  2577- 85 1C              STA ARG1+1
1029  2579- 20 40 25   STOR1   JSR FBASE3
1030  257C- A0 80      STOR2   LDY =128
1031  257E- A5 00              LDA ACCU
1032  2580- 91 19              STA (ABASE),Y
1033  2582- C8                 INY
1034  2583- A5 01              LDA ACCU+1
1035  2585- 91 19              STA (ABASE),Y
1036  2587- 4C EF 22           JMP GETS2
1037                   *
1038                   * P-CODE 2A: STOX
1039                   *****************
1040                   *
1041  258A- 20 AB 24   STOX    JSR FETCH
1042  258D- AA                 TAX
1043  258E- A0 7E              LDY =126
1044  2590- B1 08              LDA (SP),Y
1045  2592- 0A                 ASL A
1046  2593- 85 1B              STA ARG1
1047  2595- C8                 INY
1048  2596- B1 08              LDA (SP),Y
1049  2598- 2A                 ROL A
1050  2599- 85 1C              STA ARG1+1
1051  259B- 20 AB 24           JSR FETCH
1052  259E- 18                 CLC
1053  259F- 65 1B              ADC ARG1
1054  25A1- 85 1B              STA ARG1
1055  25A3- 20 AB 24           JSR FETCH
1056  25A6- 65 1C              ADC ARG1+1
1057  25A8- 85 1C              STA ARG1+1

----------------------------------------------------------------------

R65 PASCAL RUNTIME VERSION 5.7     05/12/23   R65 ASSEMBLER  PAGE 22

1058  25AA- 20 FE 20           JSR DECS2
1059  25AD- 4C 79 25           JMP STOR1
1060                   *
1061                   * P-CODE 2B: CALL
1062                   *****************
1063                   *
1064  25B0- 20 AB 24   CALL    JSR FETCH
1065  25B3- AA                 TAX
1066  25B4- 20 23 25           JSR FBASE
1067  25B7- A0 82              LDY =130
1068  25B9- A5 19              LDA ABASE
1069  25BB- 91 08              STA (SP),Y
1070  25BD- C8                 INY
1071  25BE- A5 1A              LDA ABASE+1
1072  25C0- 91 08              STA (SP),Y
1073  25C2- C8                 INY
1074  25C3- A5 17              LDA BASE
1075  25C5- 91 08              STA (SP),Y
1076  25C7- C8                 INY
1077  25C8- A5 18              LDA BASE+1
1078  25CA- 91 08              STA (SP),Y
1079  25CC- C8                 INY
1080  25CD- A5 0A              LDA PC
1081  25CF- 91 08              STA (SP),Y
1082  25D1- C8                 INY
1083  25D2- A5 0B              LDA PC+1
1084  25D4- 91 08              STA (SP),Y
1085  25D6- A5 08              LDA SP
1086  25D8- 18                 CLC
1087  25D9- 69 02              ADC =2
1088  25DB- 85 17              STA BASE
1089  25DD- A5 09              LDA SP+1
1090  25DF- 69 00              ADC =0
1091  25E1- 85 18              STA BASE+1
1092  25E3- 4C D3 24           JMP JUMP
1093                   *
1094                   * PCODE 2C: SDEV
1095                   ****************
1096                   *
1097  25E6- A5 00      SDEV    LDA ACCU
1098  25E8- 85 0D              STA DEVICE
1099  25EA- 4C EF 22           JMP GETS2
1100                   *
1101                   * PCODE 2D: RDEV
1102                   ****************
1103                   *
1104  25ED- A9 00      RDEV    LDA =0
1105  25EF- 85 0D              STA DEVICE
1106  25F1- 60                 RTS
1107                   *

----------------------------------------------------------------------

R65 PASCAL RUNTIME VERSION 5.7     05/12/23   R65 ASSEMBLER  PAGE 23

1108                   * PCODE 2E: FNAM
1109                   ****************
1110                   *
1111  25F2- 20 27 E0   FNAM    JSR PRTINF
1112  25F5- 20 3D A0           BYT ' = '+128
1113  25F8- 20 06 E0           JSR GETLIN
1114  25FB- 20 15 F8           JSR GETNAM
1115  25FE- 20 0D 20          JSR HARGUM
1116  2601- 85 DC              STA FILDRV
1117  2603- 20 0D 20           JSR HARGUM
1118  2606- 8D 13 03           STA FILLOC
1119  2609- 20 27 E0           JSR PRTINF
1120  260C- 0D 8A              BYT $D,$8A
1121  260E- 60                 RTS
1122                   *
1123                   * P-CODE 2F: OPNR
1124                   *****************
1125                   *
1126                   * NO AUTOMATIC ERROR TESTING
1127                   *
1128  260F- A9 00      OPNR    LDA =0
1129  2611- 85 DA              STA FILFLG
1130  2613- 20 C2 22           JSR COPY
1131  2616- 20 0F F0           JSR OPEN
1132  2619- C8                 INY
1133  261A- C8                 INY
1134  261B- 84 00              STY ACCU
1135  261D- 85 01              STA ACCU+1
1136  261F- 60                 RTS
1137                   *
1138                   * P-CODE 30: OPNW
1139                   *****************
1140                   *
1141  2620- A9 20      OPNW    LDA =$20
1142  2622- 4C 11 26           JMP OPNR+2
1143                   *
1144                   * P-CODE 31: CLOS
1145                   *****************
1146                   *
1147                   * NO AUTOMATIC ERROR CHECKING
1148                   *
1149  2625- A6 00      CLOS    LDX ACCU
1150  2627- CA                 DEX
1151  2628- CA                 DEX
1152  2629- 20 E1 2E           JSR CLOSRA
1153  262C- 4C EF 22           JMP GETS2
1154                   *
1155                   * P-CODE 32: PRTI
1156                   *****************
1157                   *

----------------------------------------------------------------------

R65 PASCAL RUNTIME VERSION 5.7     05/12/23   R65 ASSEMBLER  PAGE 24

1158  262F- 20 AB 24   PRTI    JSR FETCH
1159  2632- 48                 PHA
1160  2633- 29 7F              AND =$7F
1161  2635- 20 12 2A           JSR PRTCHR0
1162  2638- 68                 PLA
1163  2639- 10 F4              BPL PRTI
1164  263B- 60                 RTS
1165                   *
1166                   * P-CODE 33: GHGH       (GET HIGH)
1167                   *****************
1168                   *
1169  263C- A5 01      GHGH    LDA ACCU+1
1170  263E- 85 00              STA ACCU
1171                   *
1172                   * P-CODE 34: GLOW
1173                   *****************
1174                   *
1175  2640- A9 00      GLOW    LDA =0
1176  2642- 85 01              STA ACCU+1
1177  2644- 60                 RTS
1178                   *
1179                   * P-CODE 35:PHGH
1180                   ****************
1181                   *
1182  2645- A0 7E      PHGH    LDY =126
1183  2647- B1 08              LDA (SP),Y
1184  2649- 85 01              STA ACCU+1
1185  264B- 4C FE 20           JMP DECS2
1186                   *
1187                   * P-CODE 36: PLOW
1188                   *****************
1189                   *
1190  264E- A0 7E      PLOW    LDY =126
1191  2650- B1 08              LDA (SP),Y
1192  2652- 85 00              STA ACCU
1193  2654- 4C FE 20           JMP DECS2
1194                   *
1195                   * P-CODE 37: GSEC
1196                   *****************
1197                   * DEVICE HAS TO BE SET  ########
1198                   *
1199  2657- 20 69 26   GSEC    JSR PREPSEC
1200  265A- 20 95 20           JSR READ
1201  265D- 4C A1 20           JMP ENDDO
1202                   *
1203                   * P-CODE 38: PSEC
1204                   *****************
1205                   * DEVICE HAS TO BE SET  ########
1206                   *
1207  2660- 20 69 26   PSEC    JSR PREPSEC

----------------------------------------------------------------------

R65 PASCAL RUNTIME VERSION 5.7     05/12/23   R65 ASSEMBLER  PAGE 25

1208  2663- 20 98 20           JSR WRITE
1209  2666- 4C A1 20           JMP ENDDO
1210                   *
1211  2669- A5 00      PREPSEC LDA ACCU
1212  266B- A6 01              LDX ACCU+1
1213  266D- 85 E0              STA DATA
1214  266F- 86 E1              STX DATA+1
1215  2671- A0 7E              LDY =126
1216  2673- B1 08              LDA (SP),Y
1217  2675- 85 DE              STA SECTOR
1218  2677- A0 7C              LDY =124
1219  2679- B1 08              LDA (SP),Y
1220  267B- 85 DD              STA TRACK
1221  267D- A5 08              LDA SP
1222  267F- 38                 SEC
1223  2680- E9 04              SBC =4
1224  2682- 20 03 21           JSR DECS2+5
1225  2685- 20 EF 22           JSR GETS2
1226  2688- 4C 9B 20           JMP PREPDO
1227                   *
1228                   * P-CODE 39: NBYT       LOAD N BYTES IMMEDIATELY
1229                   *****************
1230                   *
1231  268B- 20 AB 24   NBYT    JSR FETCH
1232  268E- AA                 TAX             BYTE COUNTER
1233  268F- 20 C2 22   NBYT1   JSR COPY
1234  2692- 20 AB 24           JSR FETCH
1235  2695- 84 01              STY ACCU+1      Y=0
1236  2697- 85 00              STA ACCU
1237  2699- CA                 DEX
1238  269A- D0 F3              BNE NBYT1
1239  269C- 60                 RTS
1240                   *
1241                   * P-CODE 3A: NWRD       LOAD N WORD IMMEDIATELY
1242                   *****************
1243                   *
1244  269D- 20 AB 24   NWRD    JSR FETCH
1245  26A0- AA                 TAX             WORD COUNTER
1246  26A1- 20 C2 22   NWRD1   JSR COPY
1247  26A4- 20 AB 24           JSR FETCH
1248  26A7- 85 00              STA ACCU
1249  26A9- 20 AB 24           JSR FETCH
1250  26AC- 85 01              STA ACCU+1
1251  26AE- CA                 DEX
1252  26AF- D0 F0              BNE NWRD1
1253  26B1- 60                 RTS
1254                   *
1255                   * P-CODE 3B: LODN       LOAD N MORE WORDS
1256                   *****************
1257                   *

----------------------------------------------------------------------

R65 PASCAL RUNTIME VERSION 5.7     05/12/23   R65 ASSEMBLER  PAGE 26

1258  26B2- 20 AB 24   LODN    JSR FETCH
1259  26B5- AA                 TAX
1260  26B6- 20 C2 22   LODN1   JSR COPY
1261  26B9- A5 19              LDA ABASE
1262  26BB- 18                 CLC
1263  26BC- 69 02              ADC =2
1264  26BE- 85 19              STA ABASE
1265  26C0- 90 02              BCC *+4
1266  26C2- E6 1A              INC ABASE+1
1267  26C4- 20 17 25           JSR LOAD2
1268  26C7- CA                 DEX
1269  26C8- D0 EC              BNE LODN1
1270  26CA- 60                 RTS
1271                   *
1272                   * P-CODE 3C: STON       STORE N MORE WORDS
1273                   *****************
1274                   *
1275  26CB- 20 AB 24   STON    JSR FETCH
1276  26CE- AA                 TAX
1277  26CF- A5 19      STON1   LDA ABASE
1278  26D1- 38                 SEC
1279  26D2- E9 02              SBC =2
1280  26D4- 85 19              STA ABASE
1281  26D6- B0 02              BCS *+4
1282  26D8- C6 1A              DEC ABASE+1
1283  26DA- 20 7C 25           JSR STOR2
1284  26DD- CA                 DEX
1285  26DE- D0 EF              BNE STON1
1286  26E0- 60                 RTS
1287                   *
1288                   * P-CODE 3D: LODI       LOAD INDIRECT
1289                   *****************
1290                   *
1291  26E1- 20 E7 26   LODI    JSR GETACC
1292  26E4- 4C 17 25           JMP LOAD2
1293                   *
1294  26E7- A5 00      GETACC  LDA ACCU
1295  26E9- A6 01              LDX ACCU+1
1296  26EB- 38                 SEC
1297  26EC- E9 80              SBC =128
1298  26EE- B0 01              BCS *+3
1299  26F0- CA                 DEX
1300  26F1- 85 19              STA ABASE
1301  26F3- 86 1A              STX ABASE+1
1302  26F5- 60                 RTS
1303                   *
1304                   * P-CODE 3E: STOI       STORE INDIRECT
1305                   *****************
1306                   *
1307  26F6- 20 E7 26   STOI    JSR GETACC

----------------------------------------------------------------------

R65 PASCAL RUNTIME VERSION 5.7     05/12/23   R65 ASSEMBLER  PAGE 27

1308  26F9- 20 EF 22           JSR GETS2
1309  26FC- 4C 7C 25           JMP STOR2
1310                   *
1311                   * P-CODE 3F: EXST       EXCHANGE STACK
1312                   *****************
1313                   *
1314  26FF- A0 7E     EXST    LDY =126
1315  2701- B1 08              LDA (SP),Y
1316  2703- AA                 TAX
1317  2704- A5 00              LDA ACCU
1318  2706- 91 08              STA (SP),Y
1319  2708- 86 00              STX ACCU
1320  270A- C8                 INY
1321  270B- B1 08              LDA (SP),Y
1322  270D- AA                 TAX
1323  270E- A5 01              LDA ACCU+1
1324  2710- 91 08              STA (SP),Y
1325  2712- 86 01              STX ACCU+1
1326  2714- 60                 RTS
1327                   *
1328                   * P-CODE 40 TIND        TEST INDEX
1329                   ****************
1330                   *
1331  2715- 20 AB 24   TIND    JSR FETCH       LOWLIM-1
1332  2718- AA                 TAX
1333  2719- 20 AB 24           JSR FETCH
1334  271C- E4 00              CPX ACCU
1335  271E- E5 01              SBC ACCU+1
1336  2720- 70 0E              BVS TINDERR
1337                   *
1338  2722- 20 AB 24           JSR FETCH       HIGHLIM
1339  2725- AA                 TAX
1340  2726- 20 AB 24           JSR FETCH
1341  2729- E4 00              CPX ACCU
1342  272B- E5 01              SBC ACCU+1
1343  272D- 90 01              BCC TINDERR
1344  272F- 60                 RTS
1345                   *
1346  2730- A2 83      TINDERR LDX =$83        RUNTIME ERROR
1347  2732- 4C 4D 2A           JMP PERROR      INDEX OUT OF BOUNDS
1348                   *
1349                   * P-CODE 41: RUNP       RUN PROGRAM
1350                   *****************
1351                   *
1352  2735- A9 00      RUNP    LDA =0
1353  2737- 85 C0              STA LSTLIN      CLEAR LSTLIN
1354  2739- 85 C1              STA LSTLIN+1
1355  273B- A0 82                      LDY =130
1356  273D- A5 00              LDA ACCU        SAVE ACCU
1357  273F- A6 01              LDX ACCU+1

----------------------------------------------------------------------

R65 PASCAL RUNTIME VERSION 5.7     05/12/23   R65 ASSEMBLER  PAGE 28

1358  2741- 20 6D 27           JSR SAVE
1359  2744- A5 17              LDA BASE        SAVE BASE
1360  2746- A6 18              LDX BASE+1
1361  2748- 20 6D 27           JSR SAVE
1362  274B- A5 0A              LDA PC          SAVE PC
1363  274D- A6 0B              LDX PC+1
1364  274F- 20 6D 27           JSR SAVE
1365  2752- A5 11              LDA STPROG      SAVE STPROG
1366  2754- A6 12              LDX STPROG+1
1367  2756- 20 6D 27           JSR SAVE
1368  2759- A5 13              LDA EOPROG      SAVE EOPROG
1369  275B- A6 14              LDX EOPROG+1
1370  275D- 20 6D 27           JSR SAVE
1371  2760- A5 08              LDA SP          GET SP
1372  2762- A6 09              LDX SP+1
1373  2764- 18                 CLC
1374  2765- 69 8C              ADC =140
1375  2767- 90 01              BCC *+3
1376  2769- E8                 INX             COMPUTE NEW STPROG
1377  276A- 4C 12 2B           JMP EXEC3
1378                   *
1379                   *
1380  276D- 91 08      SAVE    STA (SP),Y
1381  276F- C8                 INY
1382  2770- 8A                 TXA
1383  2771- 91 08              STA (SP),Y
1384  2773- C8                 INY
1385  2774- 60                 RTS
1386                   *
1387                   *
1388  2775- 88         GETBACK DEY
1389  2776- B1 08              LDA (SP),Y
1390  2778- AA                 TAX
1391  2779- 88                 DEY
1392  277A- B1 08              LDA (SP),Y
1393  277C- 60                 RTS
1394                   *
1395                   *
1396                   * P-CODE 42: ADDF
1397                   *****************
1398                   *
1399  277D- 20 9A 27   ADDF    JSR GETFLP2
1400  2780- 20 D1 2C           JSR FADD
1401                   *
1402  2783- A5 08      PUTFLP0 LDA SP          DECREMENT SP BY 4
1403  2785- 38                 SEC
1404  2786- E9 04              SBC =4
1405  2788- 85 08              STA SP
1406  278A- B0 02              BCS PUTFLP
1407  278C- C6 09              DEC SP+1

----------------------------------------------------------------------

R65 PASCAL RUNTIME VERSION 5.7     05/12/23   R65 ASSEMBLER  PAGE 29

1408  278E- A5 02      PUTFLP  LDA M1+1        AND SAVE HALF OF NUMBER
1409  2790- A0 7E              LDY =126
1410  2792- 91 08              STA (SP),Y
1411  2794- C8                 INY
1412  2795- A5 03              LDA M1+2
1413  2797- 91 08              STA (SP),Y
1414  2799- 60                 RTS
1415                   *
1416  279A- A0 7A      GETFLP2 LDY =122        GET SECOND NUMBER
1417  279C- B1 08              LDA (SP),Y
1418  279E- 85 1D              STA M2+1
1419  27A0- C8                 INY
1420  27A1- B1 08              LDA (SP),Y
1421  27A3- 85 1E              STA M2+2
1422  27A5- C8                 INY
1423  27A6- B1 08              LDA (SP),Y
1424  27A8- 85 1B              STA X2
1425  27AA- C8                 INY
1426  27AB- B1 08              LDA (SP),Y
1427  27AD- 85 1C              STA M2
1428  27AF- A0 7E      GETFLP  LDY =126        AND HALF OF FIRST
1429  27B1- B1 08              LDA (SP),Y
1430  27B3- 85 02              STA M1+1
1431  27B5- C8                 INY
1432  27B6- B1 08              LDA (SP),Y
1433  27B8- 85 03              STA M1+2
1434  27BA- 60                 RTS
1435                   *
1436                   * P-CODE 43: SUBF
1437                   *****************
1438                   *
1439  27BB- 20 9A 27   SUBF    JSR GETFLP2
1440  27BE- 20 CB 2C           JSR FSUB
1441  27C1- 4C 83 27           JMP PUTFLP0
1442                   *
1443                   * P-CODE 44: MULF
1444                   *****************
1445                   *
1446  27C4- 20 9A 27   MULF    JSR GETFLP2
1447  27C7- 20 F8 2C           JSR FMUL
1448  27CA- 4C 83 27           JMP PUTFLP0
1449                   *
1450                   * P-CODE 45: DIVF
1451                   *****************
1452                   *
1453  27CD- 20 9A 27   DIVF    JSR GETFLP2
1454  27D0- 20 1E 2D           JSR FDIV
1455  27D3- 4C 83 27           JMP PUTFLP0
1456                   *
1457                   * P-CODE 46: FLOF

----------------------------------------------------------------------

R65 PASCAL RUNTIME VERSION 5.7     05/12/23   R65 ASSEMBLER  PAGE 30

1458                   *****************
1459                   *
1460  27D6- A5 00      FLOF    LDA ACCU
1461  27D8- 85 02              STA M1+1        HIGH BYTE IS IN ACCU
1462                   *                       SAME AS M1
1463  27DA- 20 AD 2C           JSR FLOAT
1464  27DD- 20 D1 22           JSR INCS2
1465  27E0- 4C 8E 27           JMP PUTFLP
1466                   *
1467                   * P-CODE 47: FIXF
1468                   *****************
1469                   *
1470  27E3- 20 AF 27   FIXF    JSR GETFLP
1471  27E6- 20 6B 2D           JSR FIX
1472  27E9- A5 02              LDA M1+1
1473  27EB- 85 00              STA ACCU
1474  27ED- 4C FE 20           JMP DECS2
1475                   *
1476                   * P-CODE 48: FEQU       =
1477                   *****************
1478                   *
1479  27F0- 20 11 28   FEQU    JSR TESTF
1480  27F3- F0 12              BEQ TRUE
1481                   *
1482  27F5- A2 00      FALSE   LDX =0
1483  27F7- 86 00              STX ACCU
1484  27F9- 86 01              STX ACCU+1
1485  27FB- A5 08      DECS6   LDA SP
1486  27FD- 38                 SEC
1487  27FE- E9 06             SBC =6
1488  2800- 85 08              STA SP
1489  2802- B0 02              BCS *+4
1490  2804- C6 09              DEC SP+1
1491  2806- 60                 RTS
1492                   *
1493  2807- A2 01      TRUE    LDX =1
1494  2809- 86 00              STX ACCU
1495  280B- CA                 DEX
1496  280C- 86 01              STX ACCU+1
1497  280E- 4C FB 27           JMP DECS6
1498                   *
1499  2811- 20 9A 27   TESTF   JSR GETFLP2
1500  2814- 20 CB 2C           JSR FSUB
1501  2817- A5 01              LDA M1
1502  2819- 60                 RTS
1503                   *
1504                   * P-CODE 49: FNEQ       <>
1505                   *****************
1506                   *
1507  281A- 20 11 28   FNEQ    JSR TESTF

----------------------------------------------------------------------

R65 PASCAL RUNTIME VERSION 5.7     05/12/23   R65 ASSEMBLER  PAGE 31

1508  281D- D0 E8              BNE TRUE
1509  281F- F0 D4              BEQ FALSE
1510                   *
1511                   * P-CODE 4A: FLES       <
1512                   *****************
1513                   *
1514  2821- 20 11 28   FLES    JSR TESTF
1515  2824- 10 CF              BPL FALSE
1516  2826- 30 DF              BMI TRUE
1517                   *
1518                   * P-CODE 4B: FGRE       >=
1519                   *****************
1520                   *
1521  2828- 20 11 28   FGRE    JSR TESTF
1522  282B- 10 DA              BPL TRUE
1523  282D- 30 C6              BMI FALSE
1524                   *
1525                   * P-CODE 4C: FGRT       >
1526                   *****************
1527                   *
1528  282F- 20 11 28   FGRT    JSR TESTF
1529  2832- 30 C1              BMI FALSE
1530  2834- F0 BF              BEQ FALSE
1531  2836- 10 CF              BPL TRUE
1532                   *
1533                   * P-CODE 4D: FLEE       <=
1534                   *****************
1535                   *
1536  2838- 20 11 28   FLEE    JSR TESTF
1537  283B- 30 CA              BMI TRUE
1538  283D- F0 C8              BEQ TRUE
1539  283F- 10 B4              BPL FALSE
1540                   *
1541                   * P-CODE 4E: FCOM       COMPLEMENT
1542                   *****************
1543                   *
1544  2841- 20 AF 27   FCOM    JSR GETFLP
1545  2844- 20 10 2D           JSR FCOMPL
1546  2847- 4C 8E 27           JMP PUTFLP
1547                   *
1548                   *
1549                   * P-CODE 4F: TFER       TEST FILE ERROR
1550                   *****************
1551                   *
1552  284A- A6 23      TFER    LDX IOCHECK
1553  284C- F0 04              BEQ TFER1
1554  284E- A6 DB              LDX FILERR
1555  2850- D0 01              BNE TFER2
1556  2852- 60         TFER1   RTS             OK
1557                   *

----------------------------------------------------------------------

R65 PASCAL RUNTIME VERSION 5.7     05/12/23   R65 ASSEMBLER  PAGE 32

1558  2853- 4C 4D 2A   TFER2   JMP PERROR
1559                   *
1560                   * P-CODE 50: OPRA       OPEN RA-FILE
1561                   *****************
1562                   *
1563  2856- 20 C2 22   OPRA    JSR COPY        SAVE ACCU
1564  2859- 20 72 2D           JSR OPENRA      OPEN FILE
1565  285C- C8                 INY
1566  285D- C8                 INY
1567  285E- 84 00              STY ACCU        SAVE FILE NO
1568  2860- A9 00              LDA =0
1569  2862- 85 01              STA ACCU+1
1570  2864- 60                 RTS
1571                   *
1572                   * P-CODE 51: GETR       GET FROM RA FILE
1573                   *****************
1574                   *
1575                   * NO AUTOMATIC ERROR CHECKING
1576                   *
1577  2865- 20 72 28   GETR    JSR GETR1
1578  2868- 20 79 2E           JSR GETBYTE
1579  286B- 85 00              STA ACCU
1580  286D- A9 00              LDA =0
1581  286F- 85 01              STA ACCU+1
1582  2871- 60                 RTS
1583                   *
1584  2872- 20 FE 20   GETR1   JSR DECS2
1585  2875- A0 80              LDY =128
1586  2877- B1 08              LDA (SP),Y      GET FILE NO
1587  2879- AA                 TAX
1588  287A- CA                 DEX
1589  287B- CA                 DEX
1590  287C- A5 00              LDA ACCU        GET POINTER
1591  287E- A4 01              LDY ACCU+1
1592  2880- 60                 RTS
1593                   *
1594                   * P-CODE 52: PUTR       PUT TO RA=FILE
1595                   *****************
1596                   *
1597                   * NO AUTOMATIC ERROR CHECKING
1598                   *
1599  2881- A5 00      PUTR    LDA ACCU
1600  2883- 85 FE              STA KCHAR
1601  2885- 20 EF 22           JSR GETS2
1602  2888- 20 72 28           JSR GETR1
1603  288B- 20 97 2E           JSR PUTBYTE
1604  288E- 4C EF 22           JMP GETS2
1605                   *
1606                   * P-CODE 53: SWA2       SWAP 2 AND 3 ON STACK
1607                   *****************

----------------------------------------------------------------------

R65 PASCAL RUNTIME VERSION 5.7     05/12/23   R65 ASSEMBLER  PAGE 33

1608                   *
1609  2891- A0 7E      SWA2    LDY =126
1610  2893- 20 98 28           JSR SWA3
1611  2896- A0 7F              LDY =127
1612                   *
1613  2898- B1 08      SWA3    LDA (SP),Y
1614  289A- AA                 TAX
1615  289B- 88                 DEY
1616  289C- 88                 DEY
1617  289D- B1 08              LDA (SP),Y
1618  289F- C8                 INY
1619  28A0- C8                 INY
1620  28A1- 91 08              STA (SP),Y
1621  28A3- 8A                 TXA
1622  28A4- 88                 DEY
1623  28A5- 88                 DEY
1624  28A6- 91 08              STA (SP),Y
1625  28A8- 60                 RTS
1626                   *
1627                   * P-CODE 54: LDXI       PREPARE LOAD CPNT
1628                   *****************
1629                   *
1630  28A9- A0 00      LDXI    LDY =0          INDIRECTION
1631  28AB- A5 01              LDA ACCU+1
1632  28AD- F0 4A              BEQ NILERR
1633  28AF- B1 00              LDA (ACCU),Y
1634  28B1- 85 00              STA ACCU
1635  28B3- 84 01              STY ACCU+1
1636  28B5- 60                 RTS
1637                   *
1638                   * P-CODE 55: STXI       STORE CPNT INDEXED
1639                   *****************
1640                   *
1641  28B6- 20 AB 24   STXI    JSR FETCH
1642  28B9- AA                 TAX
1643  28BA- A0 7E              LDY =126
1644  28BC- B1 08              LDA (SP),Y
1645  28BE- 85 21              STA ARG2
1646  28C0- C8                 INY
1647  28C1- B1 08              LDA (SP),Y
1648  28C3- 85 22              STA ARG2+1      ARG2 IS INDEX
1649  28C5- 20 AB 24           JSR FETCH
1650  28C8- 85 1B              STA ARG1
1651  28CA- 20 AB 24           JSR FETCH
1652  28CD- 85 1C              STA ARG1+1      ARG1 IS ADDRESS
1653  28CF- 20 FE 20           JSR DECS2       OF VARIABLE
1654  28D2- 20 40 25           JSR FBASE3
1655  28D5- 20 FE 28           JSR INDI        INDIRECTION
1656  28D8- 18                 CLC
1657  28D9- A5 19              LDA ABASE

----------------------------------------------------------------------

R65 PASCAL RUNTIME VERSION 5.7     05/12/23   R65 ASSEMBLER  PAGE 34

1658  28DB- 65 21              ADC ARG2        ADD INDEX
1659  28DD- 85 19              STA ABASE
1660  28DF- A5 1A              LDA ABASE+1
1661  28E1- 65 22              ADC ARG2+1
1662  28E3- 85 1A              STA ABASE+1
1663  28E5- C5 14              CMP EOPROG+1    DO NOT ALLOW WRITING
1664  28E7- 90 0B              BCC PRGERR      INTO PROGRAM SPACE
1665  28E9- F0 09              BEQ PRGERR      CHECK ONLY HIGH BYTE
1666  28EB- A0 00              LDY =0          MUST BE LARGER
1667  28ED- A5 00              LDA ACCU
1668  28EF- 91 19              STA (ABASE),Y   ONLY ONE BYTE
1669  28F1- 4C EF 22           JMP GETS2
1670                   *
1671  28F4- A2 90      PRGERR  LDX =$90
1672  28F6- 4C 4D 2A           JMP PERROR
1673                   *
1674  28F9- A2 89      NILERR  LDX =$89        CPNT IS NIL
1675  28FB- 4C 4D 2A           JMP PERROR
1676                   *
1677  28FE- A0 81     INDI    LDY =129        INDIRECTION
1678  2900- B1 19              LDA (ABASE),Y
1679  2902- F0 F5              BEQ NILERR      NIL STRING
1680  2904- AA                 TAX
1681  2905- 88                 DEY
1682  2906- B1 19              LDA (ABASE),Y   POINTER IS IN A,X
1683  2908- 85 19              STA ABASE
1684  290A- 86 1A              STX ABASE+1
1685  290C- 60                 RTS
1686                   *
1687                   * P-CODE 56: CPNT       CPNT CONSTANT
1688                   *****************
1689                   *
1690  290D- 20 C2 22   CPNT    JSR COPY
1691  2910- 20 AB 24           JSR FETCH       STRING SIZE IN A
1692  2913- AA                 TAX
1693  2914- E8                 INX
1694  2915- A5 0A              LDA PC          PC IS POINTER
1695  2917- 85 00              STA ACCU        TO RETURN
1696  2919- A5 0B              LDA PC+1
1697  291B- 85 01              STA ACCU+1
1698  291D- 8A                 TXA
1699  291E- 18                 CLC
1700  291F- 65 0A              ADC PC          ADVANCE PC
1701  2921- 85 0A              STA PC
1702  2923- 90 02              BCC *+4
1703  2925- E6 0B              INC PC+1
1704  2927- 60                 RTS
1705                   *
1706                   * P-CODE 57: WRCP       WRITE CPNT
1707                   *****************

----------------------------------------------------------------------

R65 PASCAL RUNTIME VERSION 5.7     05/12/23   R65 ASSEMBLER  PAGE 35

1708                   *
1709  2928- A0 00      WRCP    LDY =0
1710  292A- B1 00              LDA (ACCU),Y
1711  292C- F0 08              BEQ WRCP2
1712  292E- 20 12 2A           JSR PRTCHR0     END MARK
1713  2931- C8                 INY
1714  2932- C0 3F              CPY =63
1715  2934- D0 F4              BNE WRCP+2
1716  2936- 4C EF 22   WRCP2   JMP GETS2
1717                   *
1718                   * P-CODE 58: ADPS       ADD PROGRAM START
1719                   *****************
1720                   *
1721  2939- 18         ADPS    CLC
1722  293A- A5 11              LDA STPROG
1723  293C- 65 00              ADC ACCU
1724  293E- 85 00              STA ACCU
1725  2940- A5 12              LDA STPROG+1
1726  2942- 65 01              ADC ACCU+1
1727  2944- 85 01              STA ACCU+1
1728  2946- 60                 RTS
1729                   *
1730                   * P-CODE 59: LINE      SOURCE LINE
1731                   *****************
1732                   *
1733  2947- 20 AB 24   LINE    JSR FETCH
1734  294A- 85 C0              STA LSTLIN
1735  294C- 20 AB 24           JSR FETCH
1736  294F- 85 C1              STA LSTLIN+1
1737  2951- C5 C3              CMP BRKPNT+1
1738  2953- D0 63              BNE LINE9
1739  2955- A5 C0              LDA LSTLIN
1740  2957- C5 C2              CMP BRKPNT
1741  2959- D0 5D              BNE LINE9
1742                   *
1743  295B- 20 27 E0           JSR PRTINF
1744  295E- 0D 0A 42           BYT $D,$A,'Breakpoint at line '+128
1744  2961- 72 65 61 
1744  2964- 6B 70 6F 
1744  2967- 69 6E 74 
1744  296A- 20 61 74 
1744  296D- 20 6C 69 
1744  2970- 6E 65 A0 
1745  2973- A5 C0              LDA LSTLIN
1746  2975- A6 C1              LDX LSTLIN+1
1747  2977- 20 B9 29           JSR PRTL
1748  297A- 20 27 E0           JSR PRTINF
1749  297D- 0D 8A              BYT $D,$8A
1750                   *
1751  297F- 20 00 E0   LINE6   JSR GETKEY

----------------------------------------------------------------------

R65 PASCAL RUNTIME VERSION 5.7     05/12/23   R65 ASSEMBLER  PAGE 36

1752  2982- C9 00              CMP =0          ESC?
1753  2984- F0 2F              BEQ LINE8
1754  2986- A0 00      LINE5   LDY =0
1755  2988- B1 0A              LDA (PC),Y
1756  298A- C9 59              CMP =$59
1757  298C- D0 1D              BNE LINE7
1758  298E- 20 AB 24           JSR FETCH
1759  2991- 20 47 29           JSR LINE        EXECUTE LINE
1760  2994- 20 27 E0           JSR PRTINF
1761  2997- 4C 69 6E           BYT 'Line '+$80
1761  299A- 65 A0 
1762  299C- A5 C0              LDA LSTLIN
1763  299E- A6 C1              LDX LSTLIN+1
1764  29A0- 20 B9 29           JSR PRTL
1765  29A3- 20 27 E0           JSR PRTINF
1766  29A6- 0D 8A              BYT $D,$8A
1767  29A8- 4C 7F 29           JMP LINE6
1768                   *
1769  29AB- AE FF 17   LINE7   LDX SAVS
1770  29AE- 9A                 TXS
1771  29AF- 20 72 2B           JSR EXCODE      EXECUTE NEXT CODE
1772  29B2- 4C 86 29           JMP LINE5
1773                   *
1774  29B5- 4C 10 20   LINE8   JMP STOP        STOP EXECUTION
1775                   *
1776  29B8- 60         LINE9   RTS
1777                   *
1778                   *
1779                   * PRTL: PRINT A,X, KEEP ACCU,ARG2,ARG3
1780                   **************************************
1781                   *
1782  29B9- A8         PRTL    TAY             PRESERVE ACCU
1783  29BA- A5 00              LDA ACCU
1784  29BC- 48                 PHA
1785  29BD- A5 01              LDA ACCU+1
1786  29BF- 48                 PHA
1787  29C0- 84 00              STY ACCU        SET ACCU TO A,X
1788  29C2- 86 01              STX ACCU+1
1789                   *
1790  29C4- A2 05              LDX =5          PRESERVE ARG3,ARG2
1791  29C6- B5 1D      PRTL1   LDA ARG3,X
1792  29C8- 48                 PHA
1793  29C9- CA                 DEX
1794  29CA- 10 FA              BPL PRTL1
1795                   *
1796  29CC- 20 B8 23           JSR PRTN
1797                   *
1798  29CF- A2 00              LDX =0          RESTORE ARG3,ARG2
1799  29D1- 68         PRTL2   PLA
1800  29D2- 95 1D              STA ARG3,X

----------------------------------------------------------------------

R65 PASCAL RUNTIME VERSION 5.7     05/12/23   R65 ASSEMBLER  PAGE 37

1801  29D4- E8                 INX
1802  29D5- E0 06              CPX =6
1803  29D7- D0 F8              BNE PRTL2
1804                   *
1805  29D9- 68                 PLA             RESTORE ACCU
1806  29DA- 85 01              STA ACCU+1
1807  29DC- 68                 PLA
1808  29DD- 85 00              STA ACCU
1809  29DF- 4C D1 22           JMP INCS2       WAS DECR BY PRTN
1810                   *
1811                   * GETCHR0: GET A CHAR FROM SPECIFIED FILE
1812                   *****************************************
1813                   *
1814  29E2- A6 0D      GETCHR0 LDX DEVICE
1815  29E4- D0 1A              BNE GETCHR4
1816                   *
1817  29E6- A6 15      GETCHR1 LDX BUFFPN
1818  29E8- 10 06              BPL GETCHR2
1819  29EA- 20 1C 23           JSR RLIN
1820  29ED- 4C E6 29           JMP GETCHR1
1821                   *
1822  29F0- E4 16      GETCHR2 CPX ENDBUF      IS IS END OF BUFFER?
1823  29F2- D0 07              BNE GETCHR3
1824  29F4- A9 FF              LDA =$FF
1825  29F6- 85 15              STA BUFFPN
1826  29F8- A9 0D              LDA =$D
1827  29FA- 60                 RTS
1828                   *
1829  29FB- E6 15      GETCHR3 INC BUFFPN
1830  29FD- B5 24              LDA LINBUF,X
1831  29FF- 60                RTS
1832                   *
1833  2A00- CA         GETCHR4 DEX
1834  2A01- D0 03              BNE GETCHR5     SKIP, IF NOT KEY
1835  2A03- 4C 00 E0           JMP GETKEY
1836                   *
1837  2A06- CA         GETCHR5 DEX
1838  2A07- A9 00              LDA =0
1839  2A09- 85 DA              STA FILFLG
1840  2A0B- 20 18 F0           JSR READCH
1841  2A0E- 4C 4A 28           JMP TFER
1842                   *
1843  2A11- 60         GETCHR6 RTS
1844                   *
1845                   * PRTCHR0: PRINT CHAR TO SPECIFIED FILE
1846                   ***************************************
1847                   *
1848  2A12- A6 0D      PRTCHR0 LDX DEVICE
1849  2A14- 30 16              BMI PRTCHR3     Plot text?
1850  2A16- D0 03              BNE PRTCHR1

----------------------------------------------------------------------

R65 PASCAL RUNTIME VERSION 5.7     05/12/23   R65 ASSEMBLER  PAGE 38

1851  2A18- 4C 09 E0           JMP PRTCHR
1852                   *
1853  2A1B- CA         PRTCHR1 DEX
1854  2A1C- D0 03              BNE PRTCHR2
1855  2A1E- 4C 0C E0           JMP AUTOPR
1856                   *
1857  2A21- CA         PRTCHR2 DEX
1858  2A22- A0 00              LDY =0
1859  2A24- 84 DA              STY FILFLG
1860  2A26- 20 1B F0           JSR WRITCH
1861  2A29- 4C 4A 28           JMP TFER
1862                   *
1863  2A2C- C9 0D      PRTCHR3 CMP =$0D        Plot CR?
1864  2A2E- D0 06              BNE PRTCHR4
1865  2A30- A9 00              LDA =0
1866  2A32- 8D AE 03           STA GRX
1867  2A35- 60         PRTCHRE RTS
1868                   *
1869  2A36- C9 0A      PRTCHR4 CMP =$0A        PLOT LF?
1870  2A38- D0 0D              BNE PRTCHR6
1871  2A3A- AD AF 03           LDA GRY
1872  2A3D- E9 08              SBC =8
1873  2A3F- 10 02              BPL PRTCHR5
1874  2A41- A9 00              LDA =0
1875                   *
1876  2A43- 8D AF 03   PRTCHR5 STA GRY
1877  2A46- 60                 RTS
1878                   *
1879  2A47- 8D B0 03   PRTCHR6 STA GRC
1880  2A4A- 4C 18 C8           JMP APLOTCH     PLOT THE CHARACTER
1881                   *
1882                   * PERROR: PASCAL RUNTIME ERROR
1883                   ******************************
1884                   *
1885  2A4D- A9 2F      PERROR  LDA =47         CHECK CHARS/LINE
1886  2A4F- CD 8A 17           CMP NUMCHR
1887  2A52- F0 08              BEQ PERROR0
1888  2A54- 8D 8A 17           STA NUMCHR      SET TO 48 CHARS/LINE
1889  2A57- 20 27 E0           JSR PRTINF      AND CLEAR SCREEN
1890  2A5A- 01 91              BYT $01,$91     HOME,CLRSCR
1891  2A5C- 20 27 E0   PERROR0 JSR PRTINF
1892  2A5F- 0D 0A 07           BYT $D,$A,7,'Pascal error '+128
1892  2A62- 50 61 73 
1892  2A65- 63 61 6C 
1892  2A68- 20 65 72 
1892  2A6B- 72 6F 72 
1892  2A6E- A0 
1893  2A6F- A9 00              LDA =0
1894  2A71- 85 0D              STA DEVICE
1895  2A73- 8A                 TXA

----------------------------------------------------------------------

R65 PASCAL RUNTIME VERSION 5.7     05/12/23   R65 ASSEMBLER  PAGE 39

1896  2A74- 85 0C              STA RUNERR
1897  2A76- 20 2D E0           JSR PRTBYT
1898  2A79- A5 0A              LDA PC
1899  2A7B- 38                 SEC
1900  2A7C- E5 11              SBC STPROG
1901  2A7E- 85 00              STA ACCU
1902  2A80- A5 0B              LDA PC+1
1903  2A82- E5 12              SBC STPROG+1
1904  2A84- 85 01              STA ACCU+1
1905  2A86- 30 3F              BMI PERROR1
1906  2A88- A5 C0              LDA LSTLIN
1907  2A8A- 05 C1              ORA LSTLIN+1    LINE NUMB IS NOT 0?
1908  2A8C- D0 1D              BNE PERROR2     YES,SKIP WRITE
1909  2A8E- 38                 SEC
1910  2A8F- A5 00              LDA ACCU
1911  2A91- E9 01              SBC =1
1912  2A93- 85 00              STA ACCU
1913  2A95- A5 01              LDA ACCU+1
1914  2A97- E9 00              SBC =0
1915  2A99- 85 01              STA ACCU+1
1916  2A9B- 20 27 E0           JSR PRTINF
1917  2A9E- 20 61 74           BYT ' at PC '+128
1917  2AA1- 20 50 43 
1917  2AA4- A0 
1918  2AA5- 20 B8 23           JSR PRTN        WRITE PC
1919  2AA8- 4C C2 2A           JMP PERROR3
1920                   *
1921  2AAB- A5 C0      PERROR2 LDA LSTLIN
1922  2AAD- 85 00              STA ACCU
1923  2AAF- A5 C1              LDA LSTLIN+1
1924  2AB1- 85 01              STA ACCU+1
1925  2AB3- 20 27 E0           JSR PRTINF
1926  2AB6- 20 61 74           BYT ' at line '+128
1926  2AB9- 20 6C 69 
1926  2ABC- 6E 65 A0 
1927  2ABF- 20 B8 23           JSR PRTN        WRITE LINE NUMBER
1928                   *
1929  2AC2- 20 27 E0   PERROR3 JSR PRTINF
1930  2AC5- 0D 8A              BYT $D,$8A
1931                   *
1932  2AC7- 4C 10 20   PERROR1 JMP STOP
1933                   *
1934                   *
1935                   * WARM START ENTRY POINT
1936                   ************************
1937                   *
1938  2ACA- AD 81 17   WARMST  LDA SFLAG       SET PASCAL RUNTIME BIT
1939  2ACD- 09 01              ORA =$01        IN SFLAG
1940  2ACF- 8D 81 17           STA SFLAG
1941  2AD2- BA                 TSX

----------------------------------------------------------------------

R65 PASCAL RUNTIME VERSION 5.7     05/12/23   R65 ASSEMBLER  PAGE 40

1942  2AD3- 8E FF 17           STX SAVS        SAVE STACK POINTER
1943  2AD6- A2 00              LDX =0
1944  2AD8- 86 0B              STX PC+1
1945  2ADA- 86 0D              STX DEVICE
1946  2ADC- CA                 DEX
1947  2ADD- 86 16              STX ENDBUF
1948  2ADF- 86 23              STX IOCHECK
1949  2AE1- A2 00              LDX =0
1950                   *
1951  2AE3- A0 00      EXEC    LDY =0
1952  2AE5- 84 0B              STY PC+1
1953  2AE7- BD 9A 2B           LDA EXTABLE,X
1954  2AEA- 9D 20 03           STA FILNM1,X
1955  2AED- E8                 INX
1956  2AEE- C8                 INY
1957  2AEF- C0 10              CPY =16
1958  2AF1- 90 F2              BCC EXEC+2
1959  2AF3- A9 00              LDA =0
1960  2AF5- 8D 30 03           STA FILCY1
1961                   *
1962  2AF8- A9 00      EXECUTE LDA =0
1963  2AFA- 85 DA              STA FILFLG
1964  2AFC- AD 0B 20           LDA USEREND
1965  2AFF- AE 0C 20          LDX USEREND+1
1966  2B02- 38                 SEC
1967  2B03- E9 90              SBC =144
1968  2B05- B0 01              BCS *+3
1969  2B07- CA                 DEX
1970  2B08- 85 0E              STA ENDSTK
1971  2B0A- 86 0F              STX ENDSTK+1
1972                   *
1973  2B0C- AD 09 20   EXEC1   LDA USERST
1974  2B0F- AE 0A 20           LDX USERST+1
1975  2B12- 85 11      EXEC3   STA STPROG
1976  2B14- 86 12              STX STPROG+1
1977  2B16- 8D 31 03           STA FILSA1
1978  2B19- 8E 32 03           STX FILSA1+1
1979  2B1C- 20 15 E8           JSR RDFILE      READ FILE TO EXECUTE
1980  2B1F- D0 07              BNE EXECE       PROGRAM NOT LOOADED?
1981                   *
1982  2B21- AD 12 03           LDA FILSTP
1983  2B24- C9 52              CMP ='R'        IS PASCAL PROGRAM?
1984  2B26- F0 07              BEQ RUN
1985  2B28- A9 84      EXECE   LDA =$84        PASCAL RUNPROG ERROR
1986  2B2A- 85 0C              STA RUNERR
1987  2B2C- 4C 10 20           JMP STOP        SILENT ERROR
1988                   *
1989  2B2F- A0 00      RUN     LDY =0          READ END ADDRESS
1990  2B31- B1 11              LDA (STPROG),Y  FROM FILE
1991  2B33- 18                 CLC

----------------------------------------------------------------------

R65 PASCAL RUNTIME VERSION 5.7     05/12/23   R65 ASSEMBLER  PAGE 41

1992  2B34- 65 11              ADC STPROG
1993  2B36- 85 13              STA EOPROG
1994  2B38- C8                 INY
1995  2B39- B1 11              LDA (STPROG),Y
1996  2B3B- 65 12              ADC STPROG+1
1997  2B3D- 85 14              STA EOPROG+1
1998  2B3F- A5 13              LDA EOPROG      GET END OF STACK
1999  2B41- A6 14              LDX EOPROG+1
2000  2B43- 38                 SEC
2001  2B44- E9 80              SBC =128
2002  2B46- 85 17              STA BASE
2003  2B48- 85 08              STA SP
2004  2B4A- B0 01              BCS *+3
2005  2B4C- CA                 DEX
2006  2B4D- 86 18              STX BASE+1
2007  2B4F- 86 09              STX SP+1
2008                   *
2009  2B51- A5 11              LDA STPROG
2010  2B53- A6 12              LDX STPROG+1
2011  2B55- 18                 CLC
2012  2B56- 69 02              ADC =2
2013  2B58- 85 0A              STA PC
2014  2B5A- 90 01              BCC *+3
2015  2B5C- E8                 INX
2016  2B5D- 86 0B              STX PC+1
2017  2B5F- A9 00              LDA =0
2018  2B61- 85 0C              STA RUNERR
2019  2B63- AE FF 17   LOOP    LDX SAVS        RESTORE STACK POINTER
2020  2B66- 9A                 TXS
2021  2B67- 20 72 2B           JSR EXCODE
2022  2B6A- AD 81 17           LDA SFLAG
2023  2B6D- 30 1E              BMI ESCERR
2024  2B6F- 4C 63 2B           JMP LOOP
2025                   *
2026                   *
2027  2B72- 20 AB 24   EXCODE  JSR FETCH
2028  2B75- C9 5A              CMP =$5A        TEST CODENUMBER
2029  2B77- 90 05              BCC *+7
2030  2B79- A2 86      ILLC    LDX =$86        PASCAL RUNTIME ERROR
2031  2B7B- 4C 4D 2A           JMP PERROR      ILLEGAL P-CODE
2032                   *
2033  2B7E- 0A                 ASL A
2034  2B7F- AA                 TAX
2035  2B80- BD AA 2B           LDA TABLE,X
2036  2B83- 85 1B              STA ARG1
2037  2B85- BD AB 2B           LDA TABLE+1,X
2038  2B88- 85 1C              STA ARG1+1
2039  2B8A- 6C 1B 00           JMP (ARG1)
2040                   *
2041  2B8D- AD 81 17   ESCERR  LDA SFLAG       CLEAR ESCAPE FLAG

----------------------------------------------------------------------

R65 PASCAL RUNTIME VERSION 5.7     05/12/23   R65 ASSEMBLER  PAGE 42

2042  2B90- 29 7F              AND =$7F
2043  2B92- 8D 81 17           STA SFLAG
2044  2B95- A2 86              LDX =$86        PASCAL RUNTIME ERROR
2045  2B97- 4C 4D 2A           JMP PERROR      ESCAPE DURING EXECUTION
2046                   *
2047  2B9A- 53 59 53   EXTABLE BYT 'SYSTEM:R        '
2047  2B9D- 54 45 4D 
2047  2BA0- 3A 52 20 
2047  2BA3- 20 20 20 
2047  2BA6- 20 20 20 
2047  2BA9- 20 
2048                   *
2049  2BAA- 10 20 AD   TABLE   WRD STOP,RETN,NEGA,ADDA,SUBA,MULA
2049  2BAD- 20 E0 20 
2049  2BB0- EE 20 0A 
2049  2BB3- 21 1D 21 
2050  2BB6- 82 21 F4           WRD DIVA,LOWB,TEQU,TNEQ,TLES,TGRE
2050  2BB9- 21 FF 21 
2050  2BBC- 10 22 1A 
2050  2BBF- 22 24 22 
2051  2BC2- 2A 22 30           WRD TGRT,TLEE,ORAC,ANDA,EORA,NOTA
2051  2BC5- 22 36 22 
2051  2BC8- 48 22 5A 
2051  2BCB- 22 6C 22 
2052  2BCE- 7C 22 95           WRD LEFT,RIGH,INCA,DECA,COPY,PEEK
2052  2BD1- 22 B2 22 
2052  2BD4- B9 22 C2 
2052  2BD7- 22 FD 22 
2053  2BDA- 06 23 13           WRD POKE,CALA,RLIN,GETC,GETN,PRTC
2053  2BDD- 23 1C 23 
2053  2BE0- 46 23 53 
2053  2BE3- 23 B0 23 
2054  2BE6- B8 23 2B           WRD PRTN,PRTS,LITB,INCB,LITW,INCW
2054  2BE9- 24 61 24 
2054  2BEC- 6E 24 9D 
2054  2BEF- 24 B6 24 
2055  2BF2- D3 24 E5           WRD JUMP,JMPZ,JMPO,LOAD,LODX,STOR
2055  2BF5- 24 FA 24 
2055  2BF8- 03 25 51 
2055  2BFB- 25 6B 25 
2056  2BFE- 8A 25 B0          WRD STOX,CALL,SDEV,RDEV,FNAM,OPNR
2056  2C01- 25 E6 25 
2056  2C04- ED 25 F2 
2056  2C07- 25 0F 26 
2057  2C0A- 20 26 25           WRD OPNW,CLOS,PRTI,GHGH,GLOW,PHGH
2057  2C0D- 26 2F 26 
2057  2C10- 3C 26 40 
2057  2C13- 26 45 26 
2058  2C16- 4E 26 57           WRD PLOW,GSEC,PSEC,NBYT,NWRD,LODN
2058  2C19- 26 60 26 

----------------------------------------------------------------------

R65 PASCAL RUNTIME VERSION 5.7     05/12/23   R65 ASSEMBLER  PAGE 43

2058  2C1C- 8B 26 9D 
2058  2C1F- 26 B2 26 
2059  2C22- CB 26 E1           WRD STON,LODI,STOI,EXST,TIND,RUNP
2059  2C25- 26 F6 26 
2059  2C28- FF 26 15 
2059  2C2B- 27 35 27 
2060  2C2E- 7D 27 BB           WRD ADDF,SUBF,MULF,DIVF,FLOF,FIXF
2060  2C31- 27 C4 27 
2060  2C34- CD 27 D6 
2060  2C37- 27 E3 27 
2061  2C3A- F0 27 1A           WRD FEQU,FNEQ,FLES,FGRE,FGRT,FLEE
2061  2C3D- 28 21 28 
2061  2C40- 28 28 2F 
2061  2C43- 28 38 28 
2062  2C46- 41 28 4A           WRD FCOM,TFER,OPRA,GETR,PUTR,SWA2
2062  2C49- 28 56 28 
2062  2C4C- 65 28 81 
2062  2C4F- 28 91 28 
2063  2C52- A9 28 B6           WRD LDXI,STXI,CPNT,WRCP,ADPS,LINE
2063  2C55- 28 0D 29 
2063  2C58- 28 29 39 
2063  2C5B- 29 47 29 
2064                   *
2065                   * COLDSTART
2066                   ***********
2067                   *
2068  2C5E- A9 00      COLDST  LDA =0
2069  2C60- 85 C0              STA LSTLIN      CLEAR LSTLIN
2070  2C62- 85 C1              STA LSTLIN+1
2071  2C64- 85 C2              STA BRKPNT      CLEAR BRKPNT
2072  2C66- 85 C3              STA BRKPNT+1
2073  2C68- 58                 CLI
2074  2C69- D8                 CLD
2075  2C6A- AD 09 20           LDA USERST
2076  2C6D- AE 0A 20           LDX USERST+1
2077  2C70- 85 11              STA STPROG
2078  2C72- 86 12              STX STPROG+1
2079  2C74- A0 00              LDY =0
2080  2C76- 98                 TYA
2081  2C77- 91 11              STA (STPROG),Y
2082  2C79- C8                 INY
2083  2C7A- C0 04              CPY =4
2084  2C7C- 90 F9              BCC *-5
2085  2C7E- 4C CA 2A           JMP WARMST
2086                   *
2087                           TIT R65 PASCAL: FLP-MATH
2088                           PAG

----------------------------------------------------------------------

R65 PASCAL: FLP-MATH               05/12/23   R65 ASSEMBLER  PAGE 44

2089                   *
2090                   ********************************
2091                   * R65 PASCAL FLP MATH ROUTINES *
2092                   ********************************
2093                   *
2094                   *
2095  2C81- 18         ADD     CLC
2096  2C82- A2 02              LDX =2
2097  2C84- B5 01      ADD1    LDA M1,X
2098  2C86- 75 1C              ADC M2,X
2099  2C88- 95 01              STA M1,X
2100  2C8A- CA                 DEX
2101  2C8B- 10 F7              BPL ADD1
2102  2C8D- 60                 RTS
2103                   *
2104  2C8E- 06 10      MD1     ASL SIGN
2105  2C90- 20 93 2C           JSR ABSWAP
2106  2C93- 24 01      ABSWAP  BIT M1
2107  2C95- 10 05              BPL ABSWP1
2108  2C97- 20 10 2D           JSR FCOMPL
2109  2C9A- E6 10              INC SIGN
2110  2C9C- 38         ABSWP1  SEC
2111                   *
2112                   * SWAP: EXCHANGE F1 AND F2
2113                   **************************
2114                   *
2115  2C9D- A2 04      SWAP    LDX =4
2116  2C9F- 94 03      SWAP1   STY E-1,X
2117  2CA1- B5 FF              LDA <(X1-1),X
2118  2CA3- B4 1A              LDY X2-1,X
2119  2CA5- 94 FF              STY <(X1-1),X
2120  2CA7- 95 1A              STA X2-1,X
2121  2CA9- CA                 DEX
2122  2CAA- D0 F3              BNE SWAP1
2123  2CAC- 60                 RTS
2124                   *
2125                   * FLOAT: FLOAT M1,M1+1 TO RESULT IN F1
2126                   **************************************
2127                   *
2128  2CAD- A9 8E      FLOAT   LDA =$8E
2129  2CAF- 85 00              STA X1
2130  2CB1- A9 00              LDA =0
2131  2CB3- 85 03              STA M1+2
2132  2CB5- F0 08              BEQ NORM
2133  2CB7- C6 00      NORM1   DEC X1
2134  2CB9- 06 03              ASL M1+2
2135  2CBB- 26 02              ROL M1+1
2136  2CBD- 26 01              ROL M1
2137  2CBF- A5 01      NORM    LDA M1
2138  2CC1- 0A                 ASL A

----------------------------------------------------------------------

R65 PASCAL: FLP-MATH               05/12/23   R65 ASSEMBLER  PAGE 45

2139  2CC2- 45 01              EOR M1
2140  2CC4- 30 04              BMI RTS1
2141  2CC6- A5 00              LDA X1
2142  2CC8- D0 ED              BNE NORM1
2143  2CCA- 60         RTS1    RTS
2144                   *
2145                   * FSUB: F1=F2-F1
2146                   ****************
2147                   *
2148  2CCB- 20 10 2D   FSUB    JSR FCOMPL
2149  2CCE- 20 DE 2C   SWPALG  JSR ALGNSW
2150                   *
2151                   * FADD: F1=F2+F1
2152                   ****************
2153                   *
2154  2CD1- A5 1B      FADD    LDA X2
2155  2CD3- C5 00              CMP X1
2156  2CD5- D0 F7              BNE SWPALG
2157  2CD7- 20 81 2C           JSR ADD
2158  2CDA- 50 E3      ADDEND  BVC NORM
2159  2CDC- 70 05              BVS RTLOG
2160  2CDE- 90 BD      ALGNSW  BCC SWAP
2161  2CE0- A5 01      RTAR    LDA M1
2162  2CE2- 0A                 ASL A
2163  2CE3- E6 00      RTLOG   INC X1
2164  2CE5- F0 7E              BEQ OVFL
2165  2CE7- A2 FA      RTLOG1  LDX =$FA
2166  2CE9- A9 80      ROR1    LDA =$80
2167  2CEB- B0 01              BCS ROR2
2168  2CED- 0A                 ASL A
2169  2CEE- 56 07      ROR2    LSR E+3,X
2170  2CF0- 15 07              ORA E+3,X
2171  2CF2- 95 07              STA E+3,X
2172  2CF4- E8                 INX
2173  2CF5- D0 F2              BNE ROR1
2174  2CF7- 60                 RTS
2175                   *
2176                   * FMUL: F1=F2*F1
2177                   ****************
2178                   *
2179  2CF8- 20 8E 2C   FMUL    JSR MD1
2180  2CFB- 65 00              ADC X1
2181  2CFD- 20 4E 2D          JSR MD2
2182  2D00- 18                 CLC
2183  2D01- 20 E7 2C   MUL1    JSR RTLOG1
2184  2D04- 90 03              BCC MUL2
2185  2D06- 20 81 2C           JSR ADD
2186  2D09- 88         MUL2    DEY
2187  2D0A- 10 F5              BPL MUL1
2188  2D0C- 46 10      MDEND   LSR SIGN

----------------------------------------------------------------------

R65 PASCAL: FLP-MATH               05/12/23   R65 ASSEMBLER  PAGE 46

2189  2D0E- 90 AF      NORMX   BCC NORM
2190  2D10- 38         FCOMPL  SEC
2191  2D11- A2 03              LDX =3
2192  2D13- A9 00      COMPL1  LDA =0
2193  2D15- F5 00              SBC X1,X
2194  2D17- 95 00              STA X1,X
2195  2D19- CA                 DEX
2196  2D1A- D0 F7              BNE COMPL1
2197  2D1C- F0 BC              BEQ ADDEND
2198                   *
2199                   * FDIV: F1=F2/F1
2200                   ****************
2201                   *
2202  2D1E- 20 8E 2C   FDIV    JSR MD1
2203  2D21- E5 00              SBC X1
2204  2D23- 20 4E 2D           JSR MD2
2205  2D26- 38         FDIV1   SEC
2206  2D27- A2 02              LDX =2
2207  2D29- B5 1C      FDIV2   LDA M2,X
2208  2D2B- F5 04              SBC E,X
2209  2D2D- 48                 PHA
2210  2D2E- CA                 DEX
2211  2D2F- 10 F8              BPL FDIV2
2212  2D31- A2 FD              LDX =$FD
2213  2D33- 68         FDIV3   PLA
2214  2D34- 90 02              BCC FDIV4
2215  2D36- 95 1F              STA M2+3,X
2216  2D38- E8         FDIV4   INX
2217  2D39- D0 F8              BNE FDIV3
2218  2D3B- 26 03              ROL M1+2
2219  2D3D- 26 02              ROL M1+1
2220  2D3F- 26 01              ROL M1
2221  2D41- 06 1E              ASL M2+2
2222  2D43- 26 1D              ROL M2+1
2223  2D45- 26 1C              ROL M2
2224  2D47- B0 1C              BCS OVFL
2225  2D49- 88                 DEY
2226  2D4A- D0 DA              BNE FDIV1
2227  2D4C- F0 BE              BEQ MDEND
2228  2D4E- 86 03      MD2     STX M1+2
2229  2D50- 86 02              STX M1+1
2230  2D52- 86 01              STX M1
2231  2D54- B0 0D              BCS OVCHK
2232  2D56- 30 04              BMI MD3
2233  2D58- 68                 PLA
2234  2D59- 68                 PLA
2235  2D5A- 90 B2              BCC NORMX
2236  2D5C- 49 80      MD3     EOR =$80
2237  2D5E- 85 00              STA X1
2238  2D60- A0 17              LDY =$17

----------------------------------------------------------------------

R65 PASCAL: FLP-MATH               05/12/23   R65 ASSEMBLER  PAGE 47

2239  2D62- 60                 RTS
2240  2D63- 10 F7      OVCHK   BPL MD3
2241  2D65- 4C B9 21   OVFL    JMP DIV1-5      PASCAL RUNTIME ERROR
2242                   *
2243                   * FIX: FIX F1 IN M1, M1+1
2244                   *************************
2245                   *
2246  2D68- 20 E0 2C           JSR RTAR
2247  2D6B- A5 00      FIX     LDA X1
2248  2D6D- C9 8E              CMP =$8E
2249  2D6F- D0 F7              BNE FIX-3
2250  2D71- 60         RTRN    RTS
2251                   *
2252                           TIT R65 PASCAL: RANDOM ACCESS
2253                           PAG

----------------------------------------------------------------------

R65 PASCAL: RANDOM ACCESS          05/12/23   R65 ASSEMBLER  PAGE 48

2254                   *
2255                   * RANDOM ACCESS FILE HANDLER
2256                   ****************************
2257                   *
2258                   *
2259                   * OPENRA: OPEN A FILE FOR RANDOM ACCESS
2260                   ***************************************
2261                   *
2262                   * ENTRY: FILNM1,FILCY1,FILDRV,FILFLG
2263                   * FILFLG: BIT 7: PROTECTED (NEW ONLY)*
2264                   *         BIT 6: NO PRINTED OUTPUT
2265                   *         BIT 5: DIRECTION (0=READ)
2266                   *         BIT 4: 1=NEW, 0=OLD
2267                   *
2268                   * NEW ONLY: MAXSIZ,FILSA
2269                   *
2270                   * EXIT: NO OF OPEN FILE IN Y, STATUS IN A
2271                   *       AND FILERR, Y IS ONLY VALID
2272                   *       IF A=0
2273                   *
2274                   *
2275  2D72- AC 36 03   OPENRA  LDY MAXSEQ      SEARCH EMPTY ENTRY
2276  2D75- B9 39 03           LDA FIDRTB,Y    BIT 5=1: ENTRY USED
2277  2D78- 29 20              AND =$20
2278  2D7A- F0 08              BEQ OPENRA1     FOUND, SKIP
2279  2D7C- 88                 DEY
2280  2D7D- 10 F6              BPL OPENRA+3
2281                   *
2282  2D7F- A9 23              LDA =$23        TOO MANY OPEN FILES
2283  2D81- 85 DB              STA FILERR
2284  2D83- 60                 RTS
2285                   *
2286  2D84- 8C 35 03   OPENRA1 STY CURSEQ      SAVE CURRENT ENTRY NO
2287  2D87- A5 DC              LDA FILDRV      GET AND TEST DRIVE
2288  2D89- 99 41 03           STA FIDVTB,Y
2289  2D8C- 29 FE              AND =$FE
2290  2D8E- F0 05              BEQ OPENRA2     SKIP, IF OK
2291                   *
2292  2D90- A9 28              LDA =$28        ILLEGAL DRIVE FOR RA
2293  2D92- 85 DB              STA FILERR
2294  2D94- 60                 RTS
2295                   *
2296  2D95- A9 10      OPENRA2 LDA =$10        TEST OLD/NEW FLAG
2297  2D97- 25 DA              AND FILFLG
2298  2D99- F0 78              BEQ OPENOLD     SKIP, IF OLD
2299                   *
2300                   * OPEN A NEW FILE
2301                   *
2302  2D9B- A5 DA      OPENNEW LDA FILFLG
2303  2D9D- 29 80              AND =$80        GET PROTECTED FLAG

----------------------------------------------------------------------

R65 PASCAL: RANDOM ACCESS          05/12/23   R65 ASSEMBLER  PAGE 49

2304  2D9F- 09 42              ORA ='B'        BLOCK FILE
2305  2DA1- 8D 00 03           STA FILTYP      SET FILE TYPE
2306                   *
2307  2DA4- A9 00              LDA =0
2308  2DA6- AE 37 03           LDX MAXSIZ      SIZE OF FILE
2309  2DA9- 8D 15 03           STA FILSIZ
2310  2DAC- 8E 16 03           STX FILSIZ+1
2311                   *
2312  2DAF- CA                 DEX             COMPUTE FILEA
2313  2DB0- AD 1A 03           LDA FILSA
2314  2DB3- 18                 CLC
2315  2DB4- 69 FF              ADC =$FF
2316  2DB6- 8D 1C 03           STA FILEA
2317  2DB9- 8A                 TXA
2318  2DBA- 6D 1B 03           ADC FILSA+1
2319  2DBD- 8D 1D 03           STA FILEA+1
2320                   *
2321  2DC0- 20 1E E8           JSR SETFID      SET FILEDATE
2322                   *
2323  2DC3- A2 10              LDX =16
2324  2DC5- BD 20 03   OPENNE1 LDA FILNM1,X    SET FILNM1 AND FILCY1
2325  2DC8- 9D 01 03           STA FILNAM,X    TO FILNAM AND FILCYC
2326  2DCB- CA                 DEX
2327  2DCC- 10 F7              BPL OPENNE1
2328                   *
2329                   * SEARCH IN DIRECTORY AND RETURN CYCLUS
2330                   * AND DIRECTORY ENTRY TO USE, TEST EXISTING
2331                   * FILES FOR SAME NAME AND CYCLUS, DISK
2332                   * OPERATION IS INITIALIZED
2333                   *
2334  2DCE- 20 A7 20           JSR PREPWRA
2335  2DD1- 8E 11 03           STX FILCYC
2336                   *
2337                   * FIND FIRST EMPTY DISK DIRECTORY ENTR
2338                   * FETCH ITAND SET FIRST SECTOR OF FILE TO
2339                   * FILLOC, OUTPUT Y,X AS NUMBER OF EMPTY
2340                   * SECTORS
2341                   *
2342  2DD4- 20 AA 20           JSR PREPWRB
2343  2DD7- 8A                 TXA
2344  2DD8- CD 16 03           CMP FILSIZ+1
2345  2DDB- 98                 TYA
2346  2DDC- E9 00              SBC =0          COMPARE WITH REQUESTED
2347  2DDE- B0 05              BCS OPENNE3     SECTORS
2348                   *
2349  2DE0- A9 26              LDA =$26        DISK OVERFLOW
2350  2DE2- 4C 9E 20           JMP DISCER1
2351                   *
2352                   * SET FITEMP,Y AND FITEMP+8,YNTO FIRST SECTOT
2353                   * OF FILE ON DISK, FIMAXT,Y TO SIZE, DIRECTORY

----------------------------------------------------------------------

R65 PASCAL: RANDOM ACCESS          05/12/23   R65 ASSEMBLER  PAGE 50

2354                   * ENTRY NO TO FITEMP+16,Y
2355                   * THEN PUT THIS ENTRY ONTO THE DISKMAND SET
2356                   * A NEW END OF DIRECTORY MARK
2357                   *
2358  2DE5- 20 80 20   OPENNE3 JSR DOPEN4
2359                   *
2360  2DE8- AC 35 03           LDY CURSEQ      SETUP DUMMY FIRST SECTOR
2361  2DEB- A9 00              LDA =0
2362  2DED- 99 49 03           STA FIBPTB,Y
2363  2DF0- 99 51 03           STA FIRCTB,Y
2364                   *
2365  2DF3- AC 35 03   OPENNE4 LDY CURSEQ      OPEN FILE
2366  2DF6- A5 DA              LDA FILFLG
2367  2DF8- 0A                 ASL A
2368  2DF9- 0A                 ASL A
2369  2DFA- 29 80              AND =$80        GET DIRECTION
2370  2DFC- 48                 PHA
2371  2DFD- 2D 00 03          AND FILTYP
2372  2E00- F0 06              BEQ OPENNE5     OK, SKIP
2373  2E02- 68                 PLA             PROTECTED FILE
2374                   *
2375  2E03- A9 29              LDA =$29
2376  2E05- 85 DB              STA FILERR
2377  2E07- 60                 RTS
2378                   *
2379  2E08- 68         OPENNE5 PLA
2380  2E09- 09 60              ORA =$60        RA FILE, OPENIT
2381  2E0B- 99 39 03           STA FIDRTB,Y
2382                   *
2383  2E0E- A9 00              LDA =0          NORMALEXIT
2384  2E10- 85 DB              STA FILERR
2385  2E12- 60         OPENNE6 RTS
2386                   *
2387                   * OPEN AN OLD FILE:
2388                   * PREPARE DISK OPERATION, SEARCH REQUESTED
2389                   * FILE AND GET CORRSPONDING DISK ENTRY
2390                   *
2391  2E13- 20 A4 20   OPENOLD JSR PREPRD
2392                   *
2393  2E16- 20 83 20           JSR PRFLB1      PRINT LABEL, IF REQ.
2394  2E19- AD 00 03           LDA FILTYP
2395  2E1C- 29 7F              AND =$7F
2396  2E1E- C9 42              CMP ='B'        MUST BE BLOCK FILE
2397  2E20- F0 05              BEQ OPENOL1     SKIP, IF OK
2398                   *
2399  2E22- A9 05              LDA =5
2400  2E24- 4C 9E 20           JMP DISCER1     FILE TYPE ERROR
2401                   *
2402  2E27- 20 A1 20   OPENOL1 JSR ENDDO       END OF DISK OPERATION
2403                   *

----------------------------------------------------------------------

R65 PASCAL: RANDOM ACCESS          05/12/23   R65 ASSEMBLER  PAGE 51

2404                   * SET NOW FIRST SECTOR AND SIZE TO TABLE
2405                   *
2406  2E2A- 20 7D 20           JSR DOPEN1
2407                   *
2408  2E2D- A9 00              LDA =0          GET FIRST RECORD
2409  2E2F- 20 36 2E           JSR GETTREC
2410  2E32- D0 DE              BNE OPENNE6     SKIP, IF NOT OK
2411  2E34- F0 BD              BEQ OPENNE4     ELSE OPEN FILE
2412                   *
2413                   *
2414                   * GETTREC: GET ONE RECORD FROM RA-FILE
2415                   * RECORD NUMBER IS IN A, FILE NUMBER IN CURSEQ
2416                   * RESULT IUS Z=1,OF OK, ELSE Z=0 AND FILERR
2417                   *
2418  2E36- AE 35 03   GETTREC LDX CURSEQ      SAVE RECORD NO
2419  2E39- 9D 51 03           STA FIRCTB,X
2420  2E3C- A9 00              LDA =0          CLEAR UPDATED FLAG
2421  2E3E- 9D 49 03           STA FIBPTB,X
2422  2E41- BD 41 03           LDA FIDVTB,X    SET DRIVE NO
2423  2E44- 85 DC              STA FILDRV
2424                   *
2425                   * COMPUTE DATA-POINTER AND BINARY
2426                   * TRACK,SECTOR, SETUP FILDRV
2427                   *
2428  2E46- 20 89 20           JSR PREPSR
2429                   *
2430                   * ADD RECORD NUMBER TO BINARY TRAC/SECTOR
2431                   * TEST SIZE OF FILE, CONVERT TO TRACK AND
2432                   * SECTOR, INITIALIZE DISK OPERATION
2433                   *
2434  2E49- 20 8C 20           JSR PREPSR1
2435                   *
2436  2E4C- 20 95 20           JSR READ        READ ON SECTOR
2437                   *
2438  2E4F- 4C A1 20           JMP ENDDO       END OF DISK OPERATION
2439                   *
2440                   * PUTTREC: SAVE CURRENT RECORD ON DISK
2441                   * FILE NUMBER IN CURSEQ, RECORD NUMBER IN
2442                   * FIRCTB,Y, RETURNS Z=1 IF OK, ELSE FILERR
2443                   *
2444  2E52- BD 41 03   PUTTREC LDA FIDVTB,X
2445  2E55- 85 DC              STA FILDRV
2446  2E57- 20 89 20           JSR PREPSR      SEE GETTREC FOR
2447  2E5A- 20 8C 20           JSR PREPSR1     COMMENTS
2448  2E5D- 20 98 20           JSR WRITE
2449  2E60- 4C A1 20           JMP ENDDO
2450                   *
2451                   * GETNEWR: GET A NEW RECORD, SAVE OLD, IF
2452                   * OLD HAS BEEN UPDATED
2453                   * ENTRY: NEW RECORD IN A, FILE NO IN CURSEQ

----------------------------------------------------------------------

R65 PASCAL: RANDOM ACCESS          05/12/23   R65 ASSEMBLER  PAGE 52

2454                   * EXIT: z=1 IF OK, ELSE FILERR
2455                   *
2456  2E63- 8D 34 03   GETNEWR STA SAVRST+1    SAVE REQUESTED RECORD
2457  2E66- AE 35 03           LDX CURSEQ
2458  2E69- BD 49 03           LDA FIBPTB,X    UPDATED?
2459  2E6C- 10 05              BPL GETNEW1
2460                   *
2461  2E6E- 20 52 2E           JSR PUTTREC     YES, SAVE IT
2462  2E71- D0 23              BNE EXIT
2463                   *
2464  2E73- AD 34 03   GETNEW1 LDA SAVRST+1    GET REQUESTED RECORD
2465  2E76- 4C 36 2E           JMP GETTREC
2466                   *
2467                   * GETBYTE: GET ONE BYTE FROM FILE
2468                   *********************************
2469                   * ENTRY: FILE NUMBER IN X
2470                   *        POINTER IN A(LOW) AND Y(HIGH)
2471                   * EXIT:  FILERR IN Y AND STATUS, BYTE IN A
2472                   *
2473  2E79- 8D 33 03   GETBYTE STA SAVRST      SAVE A
2474  2E7C- 20 C6 2E           JSR TESTRA
2475                   *
2476  2E7F- 98                 TYA
2477  2E80- DD 51 03           CMP FIRCTB,X    IS IT IN CURRENT RECORD?
2478  2E83- F0 05              BEQ GETBYT1     YES, SKIP
2479                   *
2480  2E85- 20 63 2E           JSR GETNEWR     NO, GET NEW RECORD
2481  2E88- D0 0C              BNE EXIT
2482                   *
2483  2E8A- 20 86 20   GETBYT1 JSR CPOINT      COMPUTE BUFFER PNT
2484  2E8D- AC 33 03           LDY SAVRST      RESTORE LOW POINTER
2485  2E90- B1 FA              LDA (POINT),Y   GET THE BYTE
2486  2E92- A0 00              LDY =0
2487  2E94- 84 DB              STY FILERR      OK
2488  2E96- 60         EXIT    RTS
2489                   *
2490                   * PUTBYTE: PUT ONE BYTE TO FILE
2491                   *******************************
2492                   *
2493                   * ENTRY: BYTE STORED IN KCHAR
2494                   *        FILE NUMBER IN X
2495                   *        POINTER IN A(LOW) AND Y(HIGH)
2496                   * EXIT:  FILERR IN Y AND STATUS
2497                   *
2498  2E97- 8D 33 03   PUTBYTE STA SAVRST
2499  2E9A- 20 C6 2E           JSR TESTRA
2500  2E9D- BD 39 03           LDA FIDRTB,X    IS WRITE ALLOWED?
2501  2EA0- 30 05              BMI PUTBYT0     YES,SKIP
2502  2EA2- A0 29              LDY =$29        WRITE NOT ALLOWED
2503  2EA4- 84 DB              STY FILERR

----------------------------------------------------------------------

R65 PASCAL: RANDOM ACCESS          05/12/23   R65 ASSEMBLER  PAGE 53

2504  2EA6- 60                 RTS
2505                   *
2506  2EA7- 98         PUTBYT0 TYA             FOR COMMENTS
2507  2EA8- DD 51 03           CMP FIRCTB,X    SEE GETBYTE
2508  2EAB- F0 05              BEQ PUTBYT1
2509                   *
2510  2EAD- 20 63 2E           JSR GETNEWR
2511  2EB0- D0 E4              BNE EXIT
2512                   *
2513  2EB2- 20 86 20   PUTBYT1 JSR CPOINT
2514  2EB5- A9 80              LDA =$80        SET UPDATED FLAG
2515  2EB7- 9D 49 03           STA FIBPTB,X
2516  2EBA- AC 33 03           LDY SAVRST
2517  2EBD- A5 FE              LDA KCHAR       GET BACK KCHAR
2518  2EBF- 91 FA              STA (POINT),Y
2519  2EC1- A0 00              LDY =0
2520  2EC3- 84 DB              STY FILERR
2521  2EC5- 60                 RTS
2522                   *
2523                   *
2524                   * TESTRA: TEST X FOR LEGAL RA-FILE
2525                   *
2526  2EC6- 8E 35 03   TESTRA  STX CURSEQ
2527  2EC9- EC 36 03           CPX MAXSEQ
2528  2ECC- B0 0A              BCS TESTRA2
2529                   *
2530  2ECE- BD 39 03   TESTRA1 LDA FIDRTB,X
2531  2ED1- 29 60              AND =$60
2532  2ED3- C9 60              CMP =$60
2533  2ED5- D0 03              BNE TESTRA3     SKIP, IF NOT OK
2534  2ED7- 60                 RTS
2535                   *
2536  2ED8- F0 F4      TESTRA2 BEQ TESTRA1
2537  2EDA- 68         TESTRA3 PLA
2538  2EDB- 68                 PLA
2539  2EDC- A0 25              LDY =$25        FILE NUMBER NOT ALLOWED
2540  2EDE- 84 DB              STY FILERR
2541  2EE0- 60                 RTS
2542                   *
2543                   * CLOSRA: CLOSE RA OR SEQUENTIAL FILE IN X
2544                   ******************************************
2545                   * ENTRY: FILE IN X
2546                   * EXIT: FILERR IN Y AND STATUS
2547                   *
2548  2EE1- BD 39 03   CLOSRA  LDA FIDRTB,X
2549  2EE4- 29 40              AND =$40        SEQUENTIAL FILE?
2550  2EE6- D0 03              BNE CLOSRA1     NO, SKIP
2551  2EE8- 4C 8F 20           JMP CLOSE       YES, CLOSE IT
2552                   *
2553  2EEB- 20 C6 2E   CLOSRA1 JSR TESTRA      MUST BE RA-FILE

----------------------------------------------------------------------

R65 PASCAL: RANDOM ACCESS          05/12/23   R65 ASSEMBLER  PAGE 54

2554  2EEE- BD 49 03           LDA FIBPTB,X    UPDATED?
2555  2EF1- F0 05              BEQ CLOSRA2     NO, SKIP
2556                   *
2557  2EF3- 20 52 2E           JSR PUTTREC
2558  2EF6- D0 0B              BNE CLOSRA3
2559                   *
2560  2EF8- AE 35 03   CLOSRA2 LDX CURSEQ
2561  2EFB- A9 00              LDA =0
2562  2EFD- 9D 39 03          STA FIDRTB,X    CLOSE IT
2563  2F00- A8                 TAY
2564  2F01- 84 DB              STY FILERR
2565  2F03- 60         CLOSRA3 RTS
2566                   *
2567                   ENDCODE EQU *
2568                   *
2569                           TIT R65 PASCAL: LABELS
2570                   *
2571  2F04-                    END
LABELS=016F
ERRORS=00
RECORDS=80
