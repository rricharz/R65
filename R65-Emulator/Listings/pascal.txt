

----------------------------------------------------------------------

R65 PASCAL: LABELS                 17/11/23   R65 ASSEMBLER  PAGE 01

0001                    *
0002                   *       **********************
0003                   *       * R65 PASCAL RUNTIME *
0004                   *       **********************
0005                   *
0006                   * VERSION 5.3   01/06/82 RRICHARZ,RBAUMANN
0007                   * IMPROVED 2019-2023 RRICHARZ
0008                   * VERSION 5.6   SOURCE LINES WITH /L IN COMPILER
0009                   *
0010                           TIT R65 PASCAL RUNTIME
0011                   *
0012                   * INCLUDES RANDOM ACCESS FILE HANDLING,
0013                   * FLOATING POINT MATH, FILE HANDLING ERROR
0014                   * TESTING (OPTIONAL) AND CPNT POINTERS
0015                   *
0016                           ORG 0
0017                   *
0018  0000-            ACCU    BSS 4   TOP OF STACKELEMENT
0019                   X1      EQU ACCU        FLP ACCU
0020                   M1      EQU ACCU+1
0021  0004-            E       BSS 4   FLP SCRATCH REGISTER
0022  0008-            SP      BSS 2   CURRENT STACK (-128)
0023  000A-            PC      BSS 2   PROGRAM COUNTER
0024  000C-            RUNERR  BSS 1   RUNTIME ERROR CODE
0025  000D-            DEVICE  BSS 1   I/O DEVICE CODE
0026  000E-            ENDSTK  BSS 2   END OF STACK (-128)
0027  0010-            SIGN    BSS 1   TEMPORARY SIGN
0028  0011-            STPROG  BSS 2   START OF USER PROGRAM
0029  0013-            EOPROG  BSS 2   END OF USER PROGRAM
0030  0015-            BUFFPN  BSS 1   INPUT BUFFER POINTER
0031  0016-            ENDBUF  BSS 1   END OF INPUT BUFFER
0032  0017-            BASE    BSS 2   CURRENT BASE (-128)
0033  0019-            ABASE   BSS 2   ALTERNATE BASE (-128)
0034  001B-            ARG1    BSS 2   TEMPORARY ARGUMENT
0035  001D-            ARG3    BSS 4   TEMPORARY REGISTERS
0036  0021-            ARG2    BSS 2
0037                   X2      EQU ARG1        FLP REGISTER
0038                   M2      EQU ARG1+1
0039  0023-            IOCHECK BSS 1   IO ERROR CHECKING FLAG
0040  0024-            LINBUF  BSS 56  INPUT LINE BUFFER
0041  005C-            LSTLIN  BSS 2   LAST SOURCE LINE
0042                   *
0043                   FILFLG  EQU $DA
0044                   FILERR  EQU $DB
0045                   FILDRV  EQU $DC
0046                   TRACK   EQU $DD
0047                   SECTOR  EQU $DE
0048                   DATA    EQU $E0
0049                   VIDPNT  EQU $E9
0050                   POINT   EQU $FA

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 17/11/23   R65 ASSEMBLER  PAGE 01

0051                   KCHAR   EQU $FE
0052                   *
0053                   EMUCOM  EQU $1430       EMULATOR COMMAND REG
0054                   MULTA   EQU $14E0
0055                   MULTB   EQU $14E1
0056                   MULTR   EQU $14E2
0057                   *
0058                   FILTYP  EQU $0300
0059                   FILNAM  EQU $0301
0060                   FILCYC  EQU $0311
0061                   FILSTP  EQU $0312
0062                   FILLOC  EQU $0313
0063                   FILSIZ  EQU $0315
0064                   FILSA   EQU $031A
0065                   FILEA   EQU $031C
0066                   FILNM1  EQU $0320
0067                   FILCY1  EQU $0330
0068                   FILSA1  EQU $0331
0069                   SAVRST  EQU $0333
0070                   CURSEQ  EQU $0335
0071                   MAXSEQ  EQU $0336
0072                   MAXSIZ  EQU $0337
0073                   FIDRTB  EQU $0339
0074                   FIDVTB  EQU $0341
0075                   FIBPTB  EQU $0349
0076                   FIRCTB  EQU $0351
0077                   GRX     EQU $03AE
0078                   GRY     EQU $03AF
0079                   GRC     EQU $03B0
0080                   SFLAG   EQU $1781
0081                   NUMCHR  EQU $178A
0082                   VMON    EQU $17D5
0083                   SAVS    EQU $17FF
0084                   *
0085                   APLOTCH EQU $C818
0086                   GETKEY  EQU $E000
0087                   AUTOPR  EQU $E00C
0088                   ENDLIN  EQU $E024
0089                   PRTINF  EQU $E027
0090                   GETCHR  EQU $E003
0091                   GETLIN  EQU $E006
0092                   PRTCHR  EQU $E009
0093                   PRTBYT  EQU $E02D
0094                   PRTAX   EQU $E030
0095                   PRTRSA  EQU $E836
0096                   RDFILE  EQU $E815
0097                   SETFID  EQU $E81E
0098                   OPEN    EQU $F00F
0099                   READCH  EQU $F018
0100                   WRITCH  EQU $F01B

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 17/11/23   R65 ASSEMBLER  PAGE 02

0101                   GETNAM  EQU $F815
0102                   *
0103  005E-                    ORG $2000
0104                   *
0105                           PAG

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 17/11/23   R65 ASSEMBLER  PAGE 03

0106                   *
0107                   * ENTRY VECTORS
0108                   *
0109  2000- 4C D0 2B           JMP COLDST      COLD START ENTRY VECTOR
0110  2003- 4C 3A 2A           JMP WARMST      WARM START ENTRY VECTOR
0111  2006- 4C BD 29           JMP PERROR      PASCAL ERROR
0112                   *
0113  2009- 92 2E      USERST  WRD ENDCODE+32
0114  200B- FF C7      USEREND WRD $C7FF
0115                   *
0116  200D- 4C F2 FC   HARGUM  JMP $FCF2       #######
0117                   *
0118                   *
0119                   * P-CODE 00:  STOP      (END OF EXECUTION)
0120                   ******************
0121                   * NO ARGUMENTS
0122                   *
0123  2010- A9 00      STOP    LDA =0
0124  2012- 85 5C              STA LSTLIN      CLEAR LSTLIN
0125  2014- 85 5D              STA LSTLIN+1
0126  2016- A9 2F              LDA =47
0127  2018- 8D 8A 17           STA NUMCHR      FORCE 48 CHARS/LINE
0128  201B- 20 92 20           JSR CLOSAL      CLOSE ALL OPEN FILES
0129  201E- A5 11              LDA STPROG      IS ANOTHER PROGRAM
0130  2020- A6 12              LDX STPROG+1    RUNNING?
0131  2022- CD 09 20           CMP USERST
0132  2025- D0 20              BNE STOP1
0133  2027- EC 0A 20           CPX USERST+1
0134  202A- D0 1B              BNE STOP1
0135                   *
0136  202C- 20 27 E0           JSR PRTINF      NO, STOP PASCAL
0137  202F- 0D 0A 51           BYT $0D,$0A,'Quit Pascal'+$80
0137  2032- 75 69 74 
0137  2035- 20 50 61 
0137  2038- 73 63 61 
0137  203B- EC 
0138  203C- AD 81 17           LDA SFLAG
0139  203F- 29 FE              AND =$FE        CLEAR PASCAL RUNTIME BIT
0140  2041- 8D 81 17           STA SFLAG       IN SFLAG
0141  2044- 6C D5 17           JMP (VMON)
0142                   *
0143  2047- 38         STOP1   SEC             YES, COMPUTE OLD SP
0144  2048- E9 8C              SBC =140
0145  204A- B0 01              BCS *+3
0146  204C- CA                 DEX
0147  204D- 85 08              STA SP
0148  204F- 86 09              STX SP+1
0149  2051- A0 8C              LDY =140
0150  2053- 20 75 27           JSR GETBACK
0151  2056- 85 13              STA EOPROG

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 17/11/23   R65 ASSEMBLER  PAGE 04

0152  2058- 86 14              STX EOPROG+1
0153  205A- 20 75 27           JSR GETBACK
0154  205D- 85 11              STA STPROG
0155  205F- 86 12              STX STPROG+1
0156  2061- 20 75 27           JSR GETBACK
0157  2064- 85 0A              STA PC
0158  2066- 86 0B              STX PC+1
0159  2068- 20 75 27           JSR GETBACK
0160  206B- 85 17              STA BASE
0161  206D- 86 18              STX BASE+1
0162  206F- 20 75 27           JSR GETBACK
0163  2072- 85 00              STA ACCU
0164  2074- 86 01              STX ACCU+1
0165  2076- AE FF 17           LDX SAVS        RESTORE STACK POINTER
0166  2079- 9A                 TXS
0167  207A- 4C D3 2A           JMP LOOP
0168                   *
0169                   *
0170  207D- 4C FF F0   DOPEN1  JMP $F0FF
0171  2080- 4C 45 F1   DOPEN4  JMP $F145
0172  2083- 4C 51 F1   PRFLB1  JMP $F151
0173  2086- 4C 59 F1   CPOINT  JMP $F159
0174  2089- 4C E0 F1   PREPSR  JMP $F1E0
0175  208C- 4C 9E F2   PREPSR1 JMP $F29E
0176  208F- 4C 12 F0   CLOSE   JMP $F012
0177  2092- 4C 15 F0   CLOSAL  JMP $F015
0178  2095- 4C 57 F4   READ    JMP $F457
0179  2098- 4C 25 F4   WRITE   JMP $F425
0180  209B- 4C A7 F4   PREPDO  JMP $F4A7
0181  209E- 4C FD F5   DISCER1 JMP $F5FD
0182  20A1- 4C 25 F6   ENDDO   JMP $F625
0183  20A4- 4C 2C F6   PREPRD  JMP $F62C
0184  20A7- 4C 51 F6   PREPWRA JMP $F651
0185  20AA- 4C 6D F6   PREPWRB JMP $F66D
0186                   *
0187                   *
0188                   * P-CODE 01: RETN       (RETURN FROM PROCEDURE
0189                   *****************
0190                   * NO ARGUMENTS
0191                   *
0192  20AD- A5 17      RETN    LDA BASE        SP=BASE-2
0193  20AF- 38                 SEC
0194  20B0- E9 02              SBC =2
0195  20B2- 85 08              STA SP
0196  20B4- A5 18              LDA BASE+1
0197  20B6- E9 00              SBC =0
0198  20B8- 85 09              STA SP+1
0199  20BA- A0 80              LDY =128        GET STACK TOP ELEMENT
0200  20BC- B1 08              LDA (SP),Y
0201  20BE- 85 00              STA ACCU

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 17/11/23   R65 ASSEMBLER  PAGE 05

0202  20C0- C8                 INY
0203  20C1- B1 08              LDA (SP),Y
0204  20C3- 85 01              STA ACCU+1
0205  20C5- A0 84              LDY =132
0206  20C7- B1 08              LDA (SP),Y      GET SAVED OLD BASE
0207  20C9- 85 17              STA BASE
0208  20CB- C8                 INY
0209  20CC- B1 08              LDA (SP),Y
0210  20CE- 85 18              STA BASE+1
0211  20D0- C8                 INY
0212  20D1- B1 08              LDA (SP),Y      AND RETURN ADDRESS
0213  20D3- 18                 CLC
0214  20D4- 69 02              ADC =2
0215  20D6- 85 0A              STA PC
0216  20D8- C8                 INY
0217  20D9- B1 08              LDA (SP),Y
0218  20DB- 69 00              ADC =0
0219  20DD- 85 0B              STA PC+1
0220  20DF- 60                 RTS
0221                   *
0222                   * P-CODE 02: NEGA       (NEGATE ACCU)
0223                   *****************
0224                   * NO ARGUMENTS
0225                   *
0226  20E0- A9 00      NEGA    LDA =0
0227  20E2- 38                 SEC
0228  20E3- E5 00              SBC ACCU
0229  20E5- 85 00              STA ACCU
0230  20E7- A9 00              LDA =0
0231  20E9- E5 01              SBC ACCU+1
0232  20EB- 85 01              STA ACCU+1
0233  20ED- 60                 RTS
0234                   *
0235                   * P-CODE 03: ADDA       (ADD)
0236                   *****************
0237                   * NO ARGUMENTS
0238                   *
0239  20EE- A0 7E      ADDA    LDY =126
0240  20F0- 18                 CLC
0241  20F1- B1 08              LDA (SP),Y
0242  20F3- 65 00              ADC ACCU
0243  20F5- 85 00              STA ACCU
0244  20F7- C8                 INY
0245  20F8- B1 08              LDA (SP),Y
0246  20FA- 65 01              ADC ACCU+1
0247  20FC- 85 01              STA ACCU+1
0248                   *
0249  20FE- A5 08     DECS2   LDA SP
0250  2100- 38                 SEC
0251  2101- E9 02              SBC =2

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 17/11/23   R65 ASSEMBLER  PAGE 06

0252  2103- 85 08              STA SP
0253  2105- B0 02              BCS *+4
0254  2107- C6 09              DEC SP+1
0255  2109- 60                 RTS
0256                   *
0257                   * P-CODE 04: SUBA       (SUBTRACT)
0258                   *****************
0259                   * NO ARGUMENTS
0260                   *
0261  210A- A0 7E      SUBA    LDY =126
0262  210C- 38                 SEC
0263  210D- B1 08              LDA (SP),Y
0264  210F- E5 00              SBC ACCU
0265  2111- 85 00              STA ACCU
0266  2113- C8                 INY
0267  2114- B1 08              LDA (SP),Y
0268  2116- E5 01              SBC ACCU+1
0269  2118- 85 01              STA ACCU+1
0270  211A- 4C FE 20           JMP DECS2
0271                   *
0272                   * P-CODE 05: MULA       (MULTIPLY)
0273                   *****************
0274                   * NO ARGUMENTS
0275                   *
0276  211D- 20 57 21   MULA    JSR GETSIGN     COMPUTE SIGN OF RESULT
0277  2120- A5 00              LDA ACCU
0278  2122- 78                 SEI
0279  2123- 8D E0 14           STA MULTA
0280  2126- A5 1B              LDA ARG1        GET SAVED ARGUMENT
0281  2128- 8D E1 14           STA MULTB
0282  212B- AD E2 14           LDA MULTR
0283  212E- 85 00              STA ACCU
0284  2130- AD E3 14           LDA MULTR+1
0285  2133- A6 1C              LDX ARG1+1
0286  2135- 8E E1 14           STX MULTB
0287  2138- 18                 CLC
0288  2139- 6D E2 14           ADC MULTR
0289  213C- A6 01              LDX ACCU+1
0290  213E- 8E E0 14           STX MULTA
0291  2141- A6 1B              LDX ARG1
0292  2143- 8E E1 14           STX MULTB
0293  2146- 18                 CLC
0294  2147- 6D E2 14           ADC MULTR
0295  214A- 58                 CLI
0296  214B- 29 7F              AND =$7F
0297  214D- 85 01              STA ACCU+1
0298  214F- 20 FE 20           JSR DECS2
0299  2152- A5 10              LDA SIGN
0300  2154- 30 8A              BMI NEGA
0301  2156- 60                 RTS

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 17/11/23   R65 ASSEMBLER  PAGE 07

0302                   *
0303  2157- A5 01      GETSIGN LDA ACCU+1
0304  2159- 85 10              STA SIGN
0305  215B- 10 03              BPL *+5
0306  215D- 20 E0 20           JSR NEGA
0307                   *
0308  2160- A0 7F              LDY =127
0309  2162- B1 08              LDA (SP),Y
0310  2164- 10 14              BPL GETSI1
0311  2166- 45 10              EOR SIGN
0312  2168- 85 10              STA SIGN
0313  216A- 88                 DEY
0314  216B- A9 00              LDA =0
0315  216D- 38                 SEC
0316  216E- F1 08              SBC (SP),Y
0317  2170- 85 1B              STA ARG1
0318  2172- C8                 INY
0319  2173- A9 00              LDA =0
0320  2175- F1 08              SBC (SP),Y
0321  2177- 85 1C              STA ARG1+1
0322  2179- 60                 RTS
0323                   *
0324  217A- 85 1C      GETSI1  STA ARG1+1
0325  217C- 88                 DEY
0326  217D- B1 08              LDA (SP),Y
0327  217F- 85 1B              STA ARG1
0328  2181- 60                 RTS
0329                   *
0330                   * PCODE 06: DIVA        (DIVIDE)
0331                   ****************
0332                   *
0333  2182- A0 7E      DIVA    LDY =126
0334  2184- B1 08              LDA (SP),Y
0335  2186- 85 1B              STA ARG1
0336  2188- C8                 INY
0337  2189- B1 08              LDA (SP),Y
0338  218B- 85 1C              STA ARG1+1
0339  218D- 20 FE 20           JSR DECS2
0340                   *
0341  2190- A5 1C              LDA ARG1+1
0342  2192- 29 80              AND =$80
0343  2194- F0 02              BEQ *+4
0344  2196- A9 FF              LDA =$FF
0345  2198- 85 21              STA ARG2
0346  219A- 85 22              STA ARG2+1
0347  219C- AA                 TAX
0348  219D- 18                 CLC
0349  219E- 65 1B              ADC ARG1
0350  21A0- 85 1B              STA ARG1
0351  21A2- 8A                 TXA

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 17/11/23   R65 ASSEMBLER  PAGE 08

0352  21A3- 65 1C              ADC ARG1+1
0353  21A5- 85 1C              STA ARG1+1
0354  21A7- 8A                 TXA
0355  21A8- 45 01              EOR ACCU+1
0356  21AA- 85 10              STA SIGN
0357  21AC- 10 03              BPL *+5
0358  21AE- 20 E0 20           JSR NEGA
0359  21B1- A0 11              LDY =$11
0360  21B3- A5 00              LDA ACCU
0361  21B5- 05 01              ORA ACCU+1
0362  21B7- D0 05              BNE DIV1
0363  21B9- A2 81              LDX =$81        PASCAL RUNTIME ERROR
0364  21BB- 4C BD 29           JMP PERROR      DIVISION BY ZERO
0365                   *
0366  21BE- 38         DIV1    SEC
0367  21BF- A5 21              LDA ARG2
0368  21C1- E5 00              SBC ACCU
0369  21C3- 48                 PHA
0370  21C4- A5 22              LDA ARG2+1
0371  21C6- E5 01              SBC ACCU+1
0372  21C8- 48                 PHA
0373  21C9- 45 22              EOR ARG2+1
0374  21CB- 30 09              BMI DIV2
0375  21CD- 68                 PLA
0376  21CE- 85 22              STA ARG2+1
0377  21D0- 68                 PLA
0378  21D1- 85 21              STA ARG2
0379  21D3- 38                 SEC
0380  21D4- B0 03              BCS DIV3
0381                   *
0382  21D6- 68         DIV2    PLA
0383  21D7- 68                 PLA
0384  21D8- 18                 CLC
0385  21D9- 26 1B      DIV3    ROL ARG1
0386  21DB- 26 1C              ROL ARG1+1
0387  21DD- 26 21              ROL ARG2
0388  21DF- 26 22              ROL ARG2+1
0389  21E1- 88                 DEY
0390  21E2- D0 DA              BNE DIV1
0391  21E4- A5 1B              LDA ARG1
0392  21E6- A6 1C              LDX ARG1+1
0393  21E8- 85 00              STA ACCU
0394  21EA- 86 01              STX ACCU+1
0395  21EC- A5 10              LDA SIGN
0396  21EE- 10 03              BPL *+5
0397  21F0- 4C E0 20           JMP NEGA
0398  21F3- 60                 RTS
0399                   *
0400                   * P-CODE 07: LOWB       (LOW BIT)
0401                   *****************

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 17/11/23   R65 ASSEMBLER  PAGE 09

0402                   * NO ARGUMENTS
0403                   *
0404  21F4- A5 00      LOWB    LDA ACCU
0405  21F6- 29 01              AND =1
0406  21F8- 85 00      LOWB1   STA ACCU
0407  21FA- A9 00              LDA =0
0408  21FC- 85 01              STA ACCU+1
0409  21FE- 60                 RTS
0410                   *
0411                   * P-CODE 08: TEQU       (TEST EQUAL)
0412                   *****************
0413                   *
0414  21FF- 20 0A 21  TEQU    JSR SUBA
0415  2202- A5 00              LDA ACCU
0416  2204- 05 01              ORA ACCU+1
0417  2206- F0 04              BEQ TEQU1
0418  2208- A9 00              LDA =0
0419  220A- F0 EC              BEQ LOWB1       UNCOND.
0420                   *
0421  220C- A9 01      TEQU1   LDA =1
0422  220E- D0 E8              BNE LOWB1       UNCOND.
0423                   *
0424                   * PCODE 09: TNEQ        (TEST NOT EQUAL)
0425                   ****************
0426                   *
0427  2210- 20 FF 21   TNEQ    JSR TEQU
0428  2213- A5 00              LDA ACCU
0429  2215- 49 01              EOR =1
0430  2217- 85 00              STA ACCU
0431  2219- 60                 RTS
0432                   *
0433                   * P-CODE 0A: TLES       (TEST LESS)
0434                   *****************
0435                   *
0436  221A- 20 0A 21   TLES    JSR SUBA
0437  221D- A9 00              LDA =0
0438  221F- 06 01              ASL ACCU+1
0439  2221- 2A                 ROL A
0440  2222- 90 D4              BCC LOWB1       UNCOND.
0441                   *
0442                   * P-CODE 0B: TGRE       (TEST GREATER OR EQUAL)
0443                   *****************
0444                   *
0445  2224- 20 1A 22   TGRE    JSR TLES
0446  2227- 4C 13 22           JMP TNEQ+3
0447                   *
0448                   * P-CODE 0C: TGRTS      (TEST GREATER)
0449                   ******************
0450                   *
0451  222A- 20 FF 26   TGRT    JSR EXST

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 17/11/23   R65 ASSEMBLER  PAGE 10

0452  222D- 4C 1A 22           JMP TLES
0453                   *
0454                   * P-CODE 0D: TLEE       (TEST LESS OR EQUAL)
0455                   *****************
0456                   *
0457  2230- 20 2A 22   TLEE    JSR TGRT
0458  2233- 4C 13 22           JMP TNEQ+3
0459                   *
0460                   * P-CODE 0E: ORAC       (BITWISE OR)
0461                   *****************
0462                   *
0463  2236- A0 7E      ORAC    LDY =126
0464  2238- B1 08              LDA (SP),Y
0465  223A- 05 00              ORA ACCU
0466  223C- 85 00              STA ACCU
0467  223E- C8                 INY
0468  223F- B1 08              LDA (SP),Y
0469  2241- 05 01              ORA ACCU+1
0470  2243- 85 01              STA ACCU+1
0471  2245- 4C FE 20           JMP DECS2
0472                   *
0473                   * P-CODE 0F: ANDA       (BITWISE AND)
0474                   *****************
0475                   *
0476  2248- A0 7E      ANDA    LDY =126
0477  224A- B1 08              LDA (SP),Y
0478  224C- 25 00              AND ACCU
0479  224E- 85 00              STA ACCU
0480  2250- C8                 INY
0481  2251- B1 08              LDA (SP),Y
0482  2253- 25 01              AND ACCU+1
0483  2255- 85 01              STA ACCU+1
0484  2257- 4C FE 20           JMP DECS2
0485                   *
0486                   * PCODE 10: EORA        (BITWISE OR)
0487                   ****************
0488                   *
0489  225A- A0 7E      EORA    LDY =126
0490  225C- B1 08              LDA (SP),Y
0491  225E- 45 00              EOR ACCU
0492  2260- 85 00              STA ACCU
0493  2262- C8                 INY
0494  2263- B1 08              LDA (SP),Y
0495  2265- 45 01              EOR ACCU+1
0496  2267- 85 01              STA ACCU+1
0497  2269- 4C FE 20           JMP DECS2
0498                   *
0499                   * P-CODE 11: NOTA       (BITWISE NOT)
0500                   *****************
0501                   *

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 17/11/23   R65 ASSEMBLER  PAGE 11

0502  226C- A5 00      NOTA    LDA ACCU
0503  226E- 49 FF              EOR =$FF
0504  2270- 85 00              STA ACCU
0505  2272- A5 01              LDA ACCU+1
0506  2274- 49 FF              EOR =$FF
0507  2276- 85 01              STA ACCU+1
0508  2278- 60                 RTS
0509                   *
0510                   * P-CODE 12: LEFT       (SHIFT LEFT N BYTES)
0511                   *****************
0512                   *
0513  2279- 20 E0 20           JSR NEGA
0514  227C- A5 01      LEFT    LDA ACCU+1
0515  227E- 30 12              BMI RIGH-3      ARGUMENT NEGATIVE
0516                   *
0517  2280- A6 00              LDX ACCU
0518  2282- F0 0B              BEQ LEFT2       TAKE ONLY LOW BYTE
0519  2284- 20 EF 22           JSR GETS2       GET SECOND NO FROM ST
0520  2287- 06 00      LEFT1   ASL ACCU
0521  2289- 26 01              ROL ACCU+1
0522  228B- CA                 DEX
0523  228C- D0 F9              BNE LEFT1
0524  228E- 60                 RTS
0525                   *
0526  228F- 4C EF 22   LEFT2   JMP GETS2
0527                   *
0528                   * P-CODE 13: RIGH       (SHIFT RIGHT N BYTES)
0529                   *****************
0530                   *
0531  2292- 20 E0 20           JSR NEGA
0532  2295- A5 01      RIGH    LDA ACCU+1
0533  2297- 30 E0              BMI LEFT-3
0534  2299- A6 00              LDX ACCU
0535  229B- F0 F2              BEQ LEFT2
0536  229D- 20 EF 22           JSR GETS2
0537  22A0- 46 01      RIGH1   LSR ACCU+1
0538  22A2- A9 00              LDA =0
0539  22A4- 90 02              BCC *+4
0540  22A6- A9 80              LDA =128
0541  22A8- 46 00              LSR ACCU
0542  22AA- 05 00              ORA ACCU
0543  22AC- 85 00              STA ACCU
0544  22AE- CA                 DEX
0545  22AF- D0 EF              BNE RIGH1
0546  22B1- 60                 RTS
0547                   *
0548                   * P-CODE 14:INCA        (INCREMENT ACCU)
0549                   ****************
0550                   *
0551  22B2- E6 00      INCA    INC ACCU

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 17/11/23   R65 ASSEMBLER  PAGE 12

0552  22B4- D0 02              BNE *+4
0553  22B6- E6 01              INC ACCU+1
0554  22B8- 60                 RTS
0555                   *
0556                   * P-CODE 15: DECA       (DECREMENT ACCU)
0557                   *****************
0558                   *
0559  22B9- A5 00      DECA    LDA ACCU
0560  22BB- D0 02              BNE *+4
0561  22BD- C6 01              DEC ACCU+1
0562  22BF- C6 00              DEC ACCU
0563  22C1- 60                 RTS
0564                   *
0565                   * P-CODE 16: COPY       (COPY ACCU0
0566                   *****************
0567                   *
0568  22C2- 20 D1 22   COPY    JSR INCS2       INCREMENT STACK
0569  22C5- A0 7E              LDY =126
0570  22C7- A5 00              LDA ACCU
0571  22C9- 91 08              STA (SP),Y
0572  22CB- C8                 INY
0573  22CC- A5 01              LDA ACCU+1
0574  22CE- 91 08              STA (SP),Y
0575  22D0- 60                 RTS
0576                   *
0577  22D1- A9 02      INCS2   LDA =2
0578  22D3- 18                 CLC
0579  22D4- 65 08              ADC SP
0580  22D6- 85 08              STA SP
0581  22D8- 90 02              BCC *+4
0582  22DA- E6 09              INC SP+1
0583  22DC- C5 0E      INCS2A  CMP ENDSTK      TEST STACK OVERFLOW
0584  22DE- A5 09              LDA SP+1
0585  22E0- E5 0F              SBC ENDSTK+1
0586  22E2- B0 06              BCS INCS2B
0587  22E4- A9 05              LDA =5          LET EMULATOR KNOW THAT
0588  22E6- 8D 30 14           STA EMUCOM      SP HAS BEEN INCREASED
0589  22E9- 60                 RTS
0590                   *
0591  22EA- A0 82      INCS2B  LDY =$82        PASCAL RUN TIME ERROR
0592  22EC- 4C BD 29           JMP PERROR      STACK OVERFLOW
0593                   *
0594                   * GETS2
0595                   *
0596  22EF- A0 7E      GETS2   LDY =126
0597  22F1- B1 08              LDA (SP),Y
0598  22F3- 85 00              STA ACCU
0599  22F5- C8                 INY
0600  22F6- B1 08              LDA (SP),Y
0601  22F8- 85 01              STA ACCU+1

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 17/11/23   R65 ASSEMBLER  PAGE 13

0602  22FA- 4C FE 20           JMP DECS2
0603                   *
0604                   * P-CODE 17: PEEK
0605                   *****************
0606                   *
0607  22FD- A0 00      PEEK    LDY =0
0608  22FF- B1 00             LDA (ACCU),Y
0609  2301- 85 00              STA ACCU
0610  2303- 84 01              STY ACCU+1
0611  2305- 60                 RTS
0612                   *
0613                   * P-CODE 18: POKE
0614                   *****************
0615                   *
0616  2306- A6 00      POKE    LDX ACCU
0617  2308- 20 EF 22           JSR GETS2
0618  230B- A0 00              LDY =0
0619  230D- 8A                 TXA
0620  230E- 91 00              STA (ACCU),Y
0621  2310- 4C EF 22           JMP GETS2
0622                   *
0623                   * P-CODE 19: CALA
0624                   *****************
0625                   *
0626  2313- 20 19 23   CALA    JSR CALA1
0627  2316- 4C EF 22           JMP GETS2
0628                   *
0629  2319- 6C 00 00   CALA1   JMP (ACCU)
0630                   *
0631                   * P-CODE 1A: RLIN
0632                   *****************
0633                   *
0634  231C- 20 06 E0   RLIN    JSR GETLIN
0635  231F- A2 00              LDX =0
0636  2321- B1 E9              LDA (VIDPNT),Y
0637  2323- 29 7F              AND =$7F
0638  2325- 95 24              STA LINBUF,X
0639  2327- E8                 INX
0640  2328- C8                 INY
0641  2329- CC 8A 17           CPY NUMCHR
0642  232C- 90 F3              BCC *-11
0643  232E- F0 F1              BEQ *-13
0644  2330- CA                 DEX
0645  2331- 30 06              BMI *+8
0646  2333- B5 24              LDA LINBUF,X
0647  2335- C9 20              CMP =$20
0648  2337- F0 F7              BEQ *-7
0649  2339- E8                 INX
0650  233A- 86 16              STX ENDBUF
0651  233C- A9 00              LDA =0

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 17/11/23   R65 ASSEMBLER  PAGE 14

0652  233E- 85 15              STA BUFFPN
0653  2340- 20 27 E0           JSR PRTINF
0654  2343- 0D 8A              BYT $D,$8A
0655  2345- 60                 RTS
0656                   *
0657                   * P-CODE 1B: GETC
0658                   *****************
0659                   *
0660  2346- 20 C2 22   GETC    JSR COPY
0661  2349- 20 52 29           JSR GETCHR0
0662  234C- 85 00      GETC1   STA ACCU
0663  234E- A9 00              LDA =0
0664  2350- 85 01              STA ACCU+1
0665  2352- 60                 RTS
0666                   *
0667                   * P-CODE 1C: GETN
0668                   *****************
0669                   *
0670  2353- 20 C2 22   GETN    JSR COPY
0671  2356- A9 00              LDA =0
0672  2358- 85 00              STA ACCU
0673  235A- 85 01              STA ACCU+1
0674  235C- 85 10              STA SIGN
0675  235E- 20 52 29   GETN0   JSR GETCHR0
0676  2361- C9 20              CMP =' '
0677  2363- F0 F9              BEQ GETN0
0678  2365- C9 2D              CMP ='-'
0679  2367- D0 05              BNE GETN1
0680                   *
0681  2369- C6 10              DEC SIGN
0682  236B- 4C 72 23           JMP GETN2
0683                   *
0684  236E- C9 2B      GETN1    CMP ='+'
0685  2370- D0 03              BNE GETN2+3
0686                   *
0687  2372- 20 52 29   GETN2   JSR GETCHR0
0688  2375- C9 30              CMP ='0'
0689  2377- 90 2F              BCC GETN3
0690  2379- C9 3A              CMP ='9'+1
0691  237B- B0 2B              BCS GETN3
0692  237D- 38                 SEC
0693  237E- E9 30              SBC ='0'
0694  2380- 48                 PHA
0695  2381- 06 00              ASL ACCU
0696  2383- 26 01              ROL ACCU+1
0697  2385- A6 00              LDX ACCU
0698  2387- A4 01              LDY ACCU+1
0699  2389- 06 00              ASL ACCU
0700  238B- 26 01              ROL ACCU+1
0701  238D- 06 00              ASL ACCU

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 17/11/23   R65 ASSEMBLER  PAGE 15

0702  238F- 26 01              ROL ACCU+1
0703  2391- 18                 CLC
0704  2392- 8A                 TXA
0705  2393- 65 00              ADC ACCU
0706  2395- 85 00              STA ACCU
0707  2397- 98                 TYA
0708  2398- 65 01              ADC ACCU+1
0709  239A- 85 01              STA ACCU+1
0710  239C- 68                 PLA
0711  239D- 18                 CLC
0712  239E- 65 00              ADC ACCU
0713  23A0- 85 00              STA ACCU
0714  23A2- 90 CE              BCC GETN2
0715  23A4- E6 01              INC ACCU+1
0716  23A6- B0 CA              BCS GETN2
0717                   *
0718  23A8- A5 10      GETN3   LDA SIGN
0719  23AA- F0 03              BEQ *+5
0720  23AC- 4C E0 20           JMP NEGA
0721  23AF- 60                 RTS
0722                   *
0723                   * P-CODE 1D: PRTC
0724                   *****************
0725                   *
0726  23B0- A5 00      PRTC    LDA ACCU
0727  23B2- 20 82 29           JSR PRTCHR0
0728  23B5- 4C EF 22           JMP GETS2
0729                   *
0730                   * P-CODE 1E: PRTN
0731                   *****************
0732                   *
0733  23B8- A5 01      PRTN    LDA ACCU+1
0734  23BA- 10 08              BPL PRTN1
0735  23BC- 20 E0 20           JSR NEGA
0736  23BF- A9 2D              LDA ='-'
0737  23C1- 20 82 29           JSR PRTCHR0
0738                   *
0739  23C4- A5 00      PRTN1   LDA ACCU
0740  23C6- A6 01              LDX ACCU+1
0741  23C8- 85 21              STA ARG2
0742  23CA- 86 22              STX ARG2+1
0743  23CC- A9 1F              LDA =$1F
0744  23CE- 85 1D              STA ARG3
0745  23D0- 85 1F              STA ARG3+2
0746  23D2- A9 2A              LDA =$2A
0747  23D4- 85 1E              STA ARG3+1
0748  23D6- 85 20              STA ARG3+3
0749  23D8- A6 21              LDX ARG2
0750  23DA- A4 22              LDY ARG2+1
0751  23DC- 38                 SEC

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 17/11/23   R65 ASSEMBLER  PAGE 16

0752  23DD- E6 1D      PRTN2   INC ARG3
0753  23DF- 8A                 TXA
0754  23E0- E9 10              SBC =$10
0755  23E2- AA                 TAX
0756  23E3- 98                 TYA
0757  23E4- E9 27              SBC =$27
0758  23E6- A8                 TAY
0759  23E7- B0 F4              BCS PRTN2
0760  23E9- C6 1E      PRTN3   DEC ARG3+1
0761  23EB- 8A                 TXA
0762  23EC- 69 E8              ADC =$E8
0763  23EE- AA                 TAX
0764  23EF- 98                 TYA
0765  23F0- 69 03              ADC =$03
0766  23F2- A8                 TAY
0767  23F3- 90 F4              BCC PRTN3
0768  23F5- 8A                 TXA
0769  23F6- 38         PRTN4   SEC
0770  23F7- E6 1F      PRTN5   INC ARG3+2
0771  23F9- E9 64              SBC =$64
0772  23FB- B0 FA              BCS PRTN5
0773  23FD- 88                 DEY
0774  23FE- 10 F6             BPL PRTN4
0775  2400- C6 20      PRTN6   DEC ARG3+3
0776  2402- 69 0A              ADC =$A
0777  2404- 90 FA              BCC PRTN6
0778  2406- 09 30              ORA =$30
0779  2408- 85 21              STA ARG2
0780  240A- A9 20              LDA =$20
0781  240C- 85 22              STA ARG2+1
0782  240E- A2 FB              LDX =$FB
0783  2410- 86 10      PRTN7   STX SIGN
0784  2412- B5 22              LDA ARG2+1,X
0785  2414- 05 22              ORA ARG2+1
0786  2416- C9 20              CMP =$20
0787  2418- F0 09              BEQ PRTN8
0788  241A- A0 30              LDY =$30
0789  241C- 84 22              STY ARG2+1
0790  241E- 05 22              ORA ARG2+1
0791  2420- 20 82 29           JSR PRTCHR0
0792  2423- A6 10      PRTN8   LDX SIGN
0793  2425- E8                 INX
0794  2426- D0 E8              BNE PRTN7
0795  2428- 4C EF 22           JMP GETS2
0796                   *
0797                   * P-CODE 1F: PRTS
0798                   *****************
0799                   *
0800  242B- 06 00      PRTS    ASL ACCU
0801  242D- 26 01              ROL ACCU+1

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 17/11/23   R65 ASSEMBLER  PAGE 17

0802  242F- A5 08              LDA SP
0803  2431- 38                 SEC
0804  2432- E5 00              SBC ACCU
0805  2434- 85 00              STA ACCU
0806  2436- 48                 PHA
0807  2437- A5 09              LDA SP+1
0808  2439- E5 01              SBC ACCU+1
0809  243B- 85 01              STA ACCU+1
0810  243D- 48                 PHA
0811  243E- A0 80      OUTST1  LDY =128
0812  2440- B1 00              LDA (ACCU),Y
0813  2442- 20 82 29           JSR PRTCHR0
0814  2445- A5 00              LDA ACCU
0815  2447- 18                 CLC
0816  2448- 69 02              ADC =2
0817  244A- 85 00              STA ACCU
0818  244C- 90 02              BCC *+4
0819  244E- E6 01              INC ACCU+1
0820  2450- C5 08              CMP SP
0821  2452- A5 01              LDA ACCU+1
0822  2454- E5 09              SBC SP+1
0823  2456- 90 E6              BCC OUTST1
0824  2458- 68                 PLA
0825  2459- 85 09              STA SP+1
0826  245B- 68                 PLA
0827  245C- 85 08              STA SP
0828  245E- 4C EF 22           JMP GETS2
0829                   *
0830                   * P-CODE 20: LITB
0831                   *****************
0832                   *
0833  2461- 20 C2 22   LITB    JSR COPY
0834  2464- 20 AB 24           JSR FETCH
0835  2467- 85 00              STA ACCU
0836  2469- A9 00              LDA =0
0837  246B- 85 01              STA ACCU+1
0838  246D- 60                 RTS
0839                   *
0840                   * P-CODE 21: INCB
0841                   *****************
0842                   *
0843  246E- A0 80      INCB    LDY =128        SAVE CURRENT ACCU
0844  2470- A5 00              LDA ACCU
0845  2472- 91 08              STA (SP),Y
0846  2474- C8                 INY
0847  2475- A5 01              LDA ACCU+1
0848  2477- 91 08              STA (SP),Y
0849  2479- 20 AB 24           JSR FETCH
0850  247C- A2 00              LDX =0
0851  247E- A8                 TAY             TEST A

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 17/11/23   R65 ASSEMBLER  PAGE 18

0852  247F- 10 01              BPL *+3
0853  2481- CA                 DEX
0854  2482- 18                 CLC
0855  2483- 65 08              ADC SP
0856  2485- 85 08              STA SP
0857  2487- 8A                 TXA
0858  2488- 65 09              ADC SP+1
0859  248A- 85 09              STA SP+1
0860  248C- A5 08      INCB1   LDA SP
0861  248E- 20 DC 22           JSR INCS2A      TEST STACK OVERFLOW
0862  2491- A0 80              LDY =128        AND GET NEW ACCU
0863  2493- B1 08              LDA (SP),Y
0864  2495- 85 00              STA ACCU
0865  2497- C8                 INY
0866  2498- B1 08              LDA (SP),Y
0867  249A- 85 01              STA ACCU+1
0868  249C- 60                 RTS
0869                   *
0870                   * P-CODE 22: LITW
0871                   *****************
0872                   *
0873  249D- 20 C2 22   LITW    JSR COPY
0874  24A0- 20 AB 24           JSR FETCH
0875  24A3- 85 00              STA ACCU
0876  24A5- 20 AB 24           JSR FETCH
0877  24A8- 85 01              STA ACCU+1
0878  24AA- 60                 RTS
0879                   *
0880                   * FETCH
0881                   *
0882  24AB- A0 00      FETCH   LDY =0
0883  24AD- B1 0A              LDA (PC),Y
0884  24AF- E6 0A              INC PC
0885  24B1- D0 02              BNE *+4
0886  24B3- E6 0B              INC PC+1
0887  24B5- 60                 RTS
0888                   *
0889                   * P-CODE 23: INCW
0890                   *****************
0891                   *
0892  24B6- A0 80      INCW    LDY =128        SAVE CURRENT ACCU
0893  24B8- A5 00              LDA ACCU
0894  24BA- 91 08              STA (SP),Y
0895  24BC- C8                 INY
0896  24BD- A5 01              LDA ACCU+1
0897  24BF- 91 08              STA (SP),Y
0898  24C1- 20 AB 24           JSR FETCH
0899  24C4- 18                 CLC
0900  24C5- 65 08              ADC SP
0901  24C7- 85 08              STA SP

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 17/11/23   R65 ASSEMBLER  PAGE 19

0902  24C9- 20 AB 24           JSR FETCH
0903  24CC- 65 09              ADC SP+1
0904  24CE- 85 09              STA SP+1
0905  24D0- 4C 8C 24           JMP INCB1
0906                   *
0907                   * P-CODE 24: JUMP
0908                   *****************
0909                   *
0910  24D3- A0 00      JUMP    LDY =0
0911  24D5- B1 0A              LDA (PC),Y
0912  24D7- 18                 CLC
0913  24D8- 65 0A              ADC PC
0914  24DA- AA                 TAX
0915  24DB- C8                 INY
0916  24DC- B1 0A              LDA (PC),Y
0917  24DE- 65 0B              ADC PC+1
0918  24E0- 86 0A              STX PC
0919  24E2- 85 0B              STA PC+1
0920  24E4- 60                 RTS
0921                   *
0922                   * P-CODE 25: JMPZ
0923                   *****************
0924                   *
0925  24E5- 46 00      JMPZ    LSR ACCU
0926  24E7- 08                 PHP
0927  24E8- 20 EF 22           JSR GETS2
0928  24EB- 28                 PLP
0929  24EC- 90 E5              BCC JUMP
0930                   *
0931  24EE- A5 0A              LDA PC
0932  24F0- 18                 CLC
0933  24F1- 69 02              ADC =2
0934  24F3- 85 0A              STA PC
0935  24F5- 90 02              BCC *+4
0936  24F7- E6 0B              INC PC+1
0937  24F9- 60                 RTS
0938                   *
0939                   * P-CODE 26: JMPO
0940                   *****************
0941                   *
0942  24FA- A5 00      JMPO    LDA ACCU
0943  24FC- 49 01              EOR =1
0944  24FE- 85 00             STA ACCU
0945  2500- 4C E5 24           JMP JMPZ
0946                   *
0947                   * P-CODE 27: LOAD
0948                   *****************
0949                   *
0950  2503- 20 C2 22   LOAD    JSR COPY
0951  2506- 20 AB 24           JSR FETCH

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 17/11/23   R65 ASSEMBLER  PAGE 20

0952  2509- AA                 TAX             LEVEL DIFFERENCE
0953  250A- 20 AB 24           JSR FETCH
0954  250D- 85 1B              STA ARG1
0955  250F- 20 AB 24           JSR FETCH
0956  2512- 85 1C      LOAD1   STA ARG1+1
0957  2514- 20 40 25           JSR FBASE3
0958  2517- A0 80      LOAD2   LDY =128
0959  2519- B1 19              LDA (ABASE),Y
0960  251B- 85 00              STA ACCU
0961  251D- C8                 INY
0962  251E- B1 19              LDA (ABASE),Y
0963  2520- 85 01              STA ACCU+1
0964  2522- 60                 RTS
0965                   *
0966                   * FBASE
0967                   *
0968  2523- A5 17      FBASE   LDA BASE
0969  2525- A4 18              LDY BASE+1
0970  2527- 85 19              STA ABASE
0971  2529- 84 1A              STY ABASE+1
0972  252B- E0 00              CPX =0
0973  252D- F0 10              BEQ FBASE2
0974                   *
0975  252F- A0 80      FBASE1  LDY =128
0976  2531- B1 19              LDA (ABASE),Y
0977  2533- 48                 PHA
0978  2534- C8                 INY
0979  2535- B1 19              LDA (ABASE),Y
0980  2537- 85 1A              STA ABASE+1
0981  2539- 68                 PLA
0982  253A- 85 19              STA ABASE
0983  253C- CA                 DEX
0984  253D- D0 F0              BNE FBASE1
0985  253F- 60         FBASE2  RTS
0986                   *
0987  2540- 20 23 25   FBASE3  JSR FBASE
0988  2543- 18                 CLC
0989  2544- A5 1B              LDA ARG1
0990  2546- 65 19              ADC ABASE
0991  2548- 85 19              STA ABASE
0992  254A- A5 1C              LDA ARG1+1
0993  254C- 65 1A              ADC ABASE+1
0994  254E- 85 1A              STA ABASE+1
0995  2550- 60                 RTS
0996                   *
0997                   * P-CODE 28: LODX
0998                   *****************
0999                   *
1000  2551- 20 AB 24   LODX    JSR FETCH
1001  2554- AA                 TAX

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 17/11/23   R65 ASSEMBLER  PAGE 21

1002  2555- 20 AB 24           JSR FETCH
1003  2558- 06 00              ASL ACCU
1004  255A- 26 01              ROL ACCU+1
1005  255C- 18                 CLC
1006  255D- 65 00              ADC ACCU
1007  255F- 85 1B              STA ARG1
1008  2561- 08                 PHP
1009  2562- 20 AB 24           JSR FETCH
1010  2565- 28                 PLP
1011  2566- 65 01              ADC ACCU+1
1012  2568- 4C 12 25           JMP LOAD1
1013                   *
1014                   * P-CODE 29: STOR
1015                   *****************
1016                   *
1017  256B- 20 AB 24   STOR    JSR FETCH
1018  256E- AA                 TAX
1019  256F- 20 AB 24           JSR FETCH
1020  2572- 85 1B              STA ARG1
1021  2574- 20 AB 24           JSR FETCH
1022  2577- 85 1C              STA ARG1+1
1023  2579- 20 40 25   STOR1   JSR FBASE3
1024  257C- A0 80      STOR2   LDY =128
1025  257E- A5 00              LDA ACCU
1026  2580- 91 19              STA (ABASE),Y
1027  2582- C8                 INY
1028  2583- A5 01              LDA ACCU+1
1029  2585- 91 19              STA (ABASE),Y
1030  2587- 4C EF 22           JMP GETS2
1031                   *
1032                   * P-CODE 2A: STOX
1033                   *****************
1034                   *
1035  258A- 20 AB 24   STOX    JSR FETCH
1036  258D- AA                 TAX
1037  258E- A0 7E              LDY =126
1038  2590- B1 08              LDA (SP),Y
1039  2592- 0A                 ASL A
1040  2593- 85 1B              STA ARG1
1041  2595- C8                 INY
1042  2596- B1 08              LDA (SP),Y
1043  2598- 2A                 ROL A
1044  2599- 85 1C              STA ARG1+1
1045  259B- 20 AB 24           JSR FETCH
1046  259E- 18                 CLC
1047  259F- 65 1B              ADC ARG1
1048  25A1- 85 1B              STA ARG1
1049  25A3- 20 AB 24           JSR FETCH
1050  25A6- 65 1C              ADC ARG1+1
1051  25A8- 85 1C              STA ARG1+1

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 17/11/23   R65 ASSEMBLER  PAGE 22

1052  25AA- 20 FE 20           JSR DECS2
1053  25AD- 4C 79 25           JMP STOR1
1054                   *
1055                   * P-CODE 2B: CALL
1056                   *****************
1057                   *
1058  25B0- 20 AB 24   CALL    JSR FETCH
1059  25B3- AA                 TAX
1060  25B4- 20 23 25           JSR FBASE
1061  25B7- A0 82              LDY =130
1062  25B9- A5 19              LDA ABASE
1063  25BB- 91 08              STA (SP),Y
1064  25BD- C8                 INY
1065  25BE- A5 1A              LDA ABASE+1
1066  25C0- 91 08              STA (SP),Y
1067  25C2- C8                 INY
1068  25C3- A5 17              LDA BASE
1069  25C5- 91 08              STA (SP),Y
1070  25C7- C8                 INY
1071  25C8- A5 18              LDA BASE+1
1072  25CA- 91 08              STA (SP),Y
1073  25CC- C8                 INY
1074  25CD- A5 0A              LDA PC
1075  25CF- 91 08              STA (SP),Y
1076  25D1- C8                 INY
1077  25D2- A5 0B              LDA PC+1
1078  25D4- 91 08              STA (SP),Y
1079  25D6- A5 08              LDA SP
1080  25D8- 18                 CLC
1081  25D9- 69 02              ADC =2
1082  25DB- 85 17              STA BASE
1083  25DD- A5 09              LDA SP+1
1084  25DF- 69 00              ADC =0
1085  25E1- 85 18              STA BASE+1
1086  25E3- 4C D3 24           JMP JUMP
1087                   *
1088                   * PCODE 2C: SDEV
1089                   ****************
1090                   *
1091  25E6- A5 00      SDEV    LDA ACCU
1092  25E8- 85 0D              STA DEVICE
1093  25EA- 4C EF 22           JMP GETS2
1094                   *
1095                   * PCODE 2D: RDEV
1096                   ****************
1097                   *
1098  25ED- A9 00      RDEV    LDA =0
1099  25EF- 85 0D              STA DEVICE
1100  25F1- 60                 RTS
1101                   *

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 17/11/23   R65 ASSEMBLER  PAGE 23

1102                   * PCODE 2E: FNAM
1103                   ****************
1104                   *
1105  25F2- 20 27 E0   FNAM    JSR PRTINF
1106  25F5- 20 3D A0           BYT ' = '+128
1107  25F8- 20 06 E0           JSR GETLIN
1108  25FB- 20 15 F8           JSR GETNAM
1109  25FE- 20 0D 20          JSR HARGUM
1110  2601- 85 DC              STA FILDRV
1111  2603- 20 0D 20           JSR HARGUM
1112  2606- 8D 13 03           STA FILLOC
1113  2609- 20 27 E0           JSR PRTINF
1114  260C- 0D 8A              BYT $D,$8A
1115  260E- 60                 RTS
1116                   *
1117                   * P-CODE 2F: OPNR
1118                   *****************
1119                   *
1120                   * NO AUTOMATIC ERROR TESTING
1121                   *
1122  260F- A9 00      OPNR    LDA =0
1123  2611- 85 DA              STA FILFLG
1124  2613- 20 C2 22           JSR COPY
1125  2616- 20 0F F0           JSR OPEN
1126  2619- C8                 INY
1127  261A- C8                 INY
1128  261B- 84 00              STY ACCU
1129  261D- 85 01              STA ACCU+1
1130  261F- 60                 RTS
1131                   *
1132                   * P-CODE 30: OPNW
1133                   *****************
1134                   *
1135  2620- A9 20      OPNW    LDA =$20
1136  2622- 4C 11 26           JMP OPNR+2
1137                   *
1138                   * P-CODE 31: CLOS
1139                   *****************
1140                   *
1141                   * NO AUTOMATIC ERROR CHECKING
1142                   *
1143  2625- A6 00      CLOS    LDX ACCU
1144  2627- CA                 DEX
1145  2628- CA                 DEX
1146  2629- 20 4F 2E           JSR CLOSRA
1147  262C- 4C EF 22           JMP GETS2
1148                   *
1149                   * P-CODE 32: PRTI
1150                   *****************
1151                   *

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 17/11/23   R65 ASSEMBLER  PAGE 24

1152  262F- 20 AB 24   PRTI    JSR FETCH
1153  2632- 48                 PHA
1154  2633- 29 7F              AND =$7F
1155  2635- 20 82 29           JSR PRTCHR0
1156  2638- 68                 PLA
1157  2639- 10 F4              BPL PRTI
1158  263B- 60                 RTS
1159                   *
1160                   * P-CODE 33: GHGH       (GET HIGH)
1161                   *****************
1162                   *
1163  263C- A5 01      GHGH    LDA ACCU+1
1164  263E- 85 00              STA ACCU
1165                   *
1166                   * P-CODE 34: GLOW
1167                   *****************
1168                   *
1169  2640- A9 00      GLOW    LDA =0
1170  2642- 85 01              STA ACCU+1
1171  2644- 60                 RTS
1172                   *
1173                   * P-CODE 35:PHGH
1174                   ****************
1175                   *
1176  2645- A0 7E      PHGH    LDY =126
1177  2647- B1 08              LDA (SP),Y
1178  2649- 85 01              STA ACCU+1
1179  264B- 4C FE 20           JMP DECS2
1180                   *
1181                   * P-CODE 36: PLOW
1182                   *****************
1183                   *
1184  264E- A0 7E      PLOW    LDY =126
1185  2650- B1 08              LDA (SP),Y
1186  2652- 85 00              STA ACCU
1187  2654- 4C FE 20           JMP DECS2
1188                   *
1189                   * P-CODE 37: GSEC
1190                   *****************
1191                   * DEVICE HAS TO BE SET  ########
1192                   *
1193  2657- 20 69 26   GSEC    JSR PREPSEC
1194  265A- 4C 95 20           JMP READ
1195  265D- 4C A1 20           JMP ENDDO
1196                   *
1197                   * P-CODE 38: PSEC
1198                   *****************
1199                   * DEVICE HAS TO BE SET  ########
1200                   *
1201  2660- 20 69 26   PSEC    JSR PREPSEC

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 17/11/23   R65 ASSEMBLER  PAGE 25

1202  2663- 20 98 20           JSR WRITE
1203  2666- 4C A1 20           JMP ENDDO
1204                   *
1205  2669- A5 00      PREPSEC LDA ACCU
1206  266B- A6 01              LDX ACCU+1
1207  266D- 85 E0              STA DATA
1208  266F- 86 E1              STX DATA+1
1209  2671- A0 7E              LDY =126
1210  2673- B1 08              LDA (SP),Y
1211  2675- 85 DE              STA SECTOR
1212  2677- A0 7C              LDY =124
1213  2679- B1 08              LDA (SP),Y
1214  267B- 85 DD              STA TRACK
1215  267D- A5 08              LDA SP
1216  267F- 38                 SEC
1217  2680- E9 04              SBC =4
1218  2682- 20 03 21           JSR DECS2+5
1219  2685- 20 EF 22           JSR GETS2
1220  2688- 4C 9B 20           JMP PREPDO
1221                   *
1222                   * P-CODE 39: NBYT       LOAD N BYTES IMMEDIATELY
1223                   *****************
1224                   *
1225  268B- 20 AB 24   NBYT    JSR FETCH
1226  268E- AA                 TAX             BYTE COUNTER
1227  268F- 20 C2 22   NBYT1   JSR COPY
1228  2692- 20 AB 24           JSR FETCH
1229  2695- 84 01              STY ACCU+1      Y=0
1230  2697- 85 00              STA ACCU
1231  2699- CA                 DEX
1232  269A- D0 F3              BNE NBYT1
1233  269C- 60                 RTS
1234                   *
1235                   * P-CODE 3A: NWRD       LOAD N WORD IMMEDIATELY
1236                   *****************
1237                   *
1238  269D- 20 AB 24   NWRD    JSR FETCH
1239  26A0- AA                 TAX             WORD COUNTER
1240  26A1- 20 C2 22   NWRD1   JSR COPY
1241  26A4- 20 AB 24           JSR FETCH
1242  26A7- 85 00              STA ACCU
1243  26A9- 20 AB 24           JSR FETCH
1244  26AC- 85 01              STA ACCU+1
1245  26AE- CA                 DEX
1246  26AF- D0 F0              BNE NWRD1
1247  26B1- 60                 RTS
1248                   *
1249                   * P-CODE 3B: LODN       LOAD N MORE WORDS
1250                   *****************
1251                   *

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 17/11/23   R65 ASSEMBLER  PAGE 26

1252  26B2- 20 AB 24   LODN    JSR FETCH
1253  26B5- AA                 TAX
1254  26B6- 20 C2 22   LODN1   JSR COPY
1255  26B9- A5 19              LDA ABASE
1256  26BB- 18                 CLC
1257  26BC- 69 02              ADC =2
1258  26BE- 85 19              STA ABASE
1259  26C0- 90 02              BCC *+4
1260  26C2- E6 1A              INC ABASE+1
1261  26C4- 20 17 25           JSR LOAD2
1262  26C7- CA                 DEX
1263  26C8- D0 EC              BNE LODN1
1264  26CA- 60                 RTS
1265                   *
1266                   * P-CODE 3C: STON       STORE N MORE WORDS
1267                   *****************
1268                   *
1269  26CB- 20 AB 24   STON    JSR FETCH
1270  26CE- AA                 TAX
1271  26CF- A5 19      STON1   LDA ABASE
1272  26D1- 38                 SEC
1273  26D2- E9 02              SBC =2
1274  26D4- 85 19              STA ABASE
1275  26D6- B0 02              BCS *+4
1276  26D8- C6 1A              DEC ABASE+1
1277  26DA- 20 7C 25           JSR STOR2
1278  26DD- CA                 DEX
1279  26DE- D0 EF              BNE STON1
1280  26E0- 60                 RTS
1281                   *
1282                   * P-CODE 3D: LODI       LOAD INDIRECT
1283                   *****************
1284                   *
1285  26E1- 20 E7 26   LODI    JSR GETACC
1286  26E4- 4C 17 25           JMP LOAD2
1287                   *
1288  26E7- A5 00      GETACC  LDA ACCU
1289  26E9- A6 01              LDX ACCU+1
1290  26EB- 38                 SEC
1291  26EC- E9 80              SBC =128
1292  26EE- B0 01              BCS *+3
1293  26F0- CA                 DEX
1294  26F1- 85 19              STA ABASE
1295  26F3- 86 1A              STX ABASE+1
1296  26F5- 60                 RTS
1297                   *
1298                   * P-CODE 3E: STOI       STORE INDIRECT
1299                   *****************
1300                   *
1301  26F6- 20 E7 26   STOI    JSR GETACC

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 17/11/23   R65 ASSEMBLER  PAGE 27

1302  26F9- 20 EF 22           JSR GETS2
1303  26FC- 4C 7C 25           JMP STOR2
1304                   *
1305                   * P-CODE 3F: EXST       EXCHANGE STACK
1306                   *****************
1307                   *
1308  26FF- A0 7E     EXST    LDY =126
1309  2701- B1 08              LDA (SP),Y
1310  2703- AA                 TAX
1311  2704- A5 00              LDA ACCU
1312  2706- 91 08              STA (SP),Y
1313  2708- 86 00              STX ACCU
1314  270A- C8                 INY
1315  270B- B1 08              LDA (SP),Y
1316  270D- AA                 TAX
1317  270E- A5 01              LDA ACCU+1
1318  2710- 91 08              STA (SP),Y
1319  2712- 86 01              STX ACCU+1
1320  2714- 60                 RTS
1321                   *
1322                   * P-CODE 40 TIND        TEST INDEX
1323                   ****************
1324                   *
1325  2715- 20 AB 24   TIND    JSR FETCH       LOWLIM-1
1326  2718- AA                 TAX
1327  2719- 20 AB 24           JSR FETCH
1328  271C- E4 00              CPX ACCU
1329  271E- E5 01              SBC ACCU+1
1330  2720- 70 0E              BVS TINDERR
1331                   *
1332  2722- 20 AB 24           JSR FETCH       HIGHLIM
1333  2725- AA                 TAX
1334  2726- 20 AB 24           JSR FETCH
1335  2729- E4 00              CPX ACCU
1336  272B- E5 01              SBC ACCU+1
1337  272D- 90 01              BCC TINDERR
1338  272F- 60                 RTS
1339                   *
1340  2730- A2 83      TINDERR LDX =$83        RUNTIME ERROR
1341  2732- 4C BD 29           JMP PERROR      INDEX OUT OF BOUNDS
1342                   *
1343                   * P-CODE 41: RUNP       RUN PROGRAM
1344                   *****************
1345                   *
1346  2735- A9 00      RUNP    LDA =0
1347  2737- 85 5C              STA LSTLIN      CLEAR LSTLIN
1348  2739- 85 5D              STA LSTLIN+1
1349  273B- A0 82                      LDY =130
1350  273D- A5 00              LDA ACCU        SAVE ACCU
1351  273F- A6 01              LDX ACCU+1

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 17/11/23   R65 ASSEMBLER  PAGE 28

1352  2741- 20 6D 27           JSR SAVE
1353  2744- A5 17              LDA BASE        SAVE BASE
1354  2746- A6 18              LDX BASE+1
1355  2748- 20 6D 27           JSR SAVE
1356  274B- A5 0A              LDA PC          SAVE PC
1357  274D- A6 0B              LDX PC+1
1358  274F- 20 6D 27           JSR SAVE
1359  2752- A5 11              LDA STPROG      SAVE STPROG
1360  2754- A6 12              LDX STPROG+1
1361  2756- 20 6D 27           JSR SAVE
1362  2759- A5 13              LDA EOPROG      SAVE EOPROG
1363  275B- A6 14              LDX EOPROG+1
1364  275D- 20 6D 27           JSR SAVE
1365  2760- A5 08              LDA SP          GET SP
1366  2762- A6 09              LDX SP+1
1367  2764- 18                 CLC
1368  2765- 69 8C              ADC =140
1369  2767- 90 01              BCC *+3
1370  2769- E8                 INX             COMPUTE NEW STPROG
1371  276A- 4C 82 2A           JMP EXEC3
1372                   *
1373                   *
1374  276D- 91 08      SAVE    STA (SP),Y
1375  276F- C8                 INY
1376  2770- 8A                 TXA
1377  2771- 91 08              STA (SP),Y
1378  2773- C8                 INY
1379  2774- 60                 RTS
1380                   *
1381                   *
1382  2775- 88         GETBACK DEY
1383  2776- B1 08              LDA (SP),Y
1384  2778- AA                 TAX
1385  2779- 88                 DEY
1386  277A- B1 08              LDA (SP),Y
1387  277C- 60                 RTS
1388                   *
1389                   *
1390                   * P-CODE 42: ADDF
1391                   *****************
1392                   *
1393  277D- 20 9A 27   ADDF    JSR GETFLP2
1394  2780- 20 3F 2C           JSR FADD
1395                   *
1396  2783- A5 08      PUTFLP0 LDA SP          DECREMENT SP BY 4
1397  2785- 38                 SEC
1398  2786- E9 04              SBC =4
1399  2788- 85 08              STA SP
1400  278A- B0 02              BCS PUTFLP
1401  278C- C6 09              DEC SP+1

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 17/11/23   R65 ASSEMBLER  PAGE 29

1402  278E- A5 02      PUTFLP  LDA M1+1        AND SAVE HALF OF NUMBER
1403  2790- A0 7E              LDY =126
1404  2792- 91 08              STA (SP),Y
1405  2794- C8                 INY
1406  2795- A5 03              LDA M1+2
1407  2797- 91 08              STA (SP),Y
1408  2799- 60                 RTS
1409                   *
1410  279A- A0 7A      GETFLP2 LDY =122        GET SECOND NUMBER
1411  279C- B1 08              LDA (SP),Y
1412  279E- 85 1D              STA M2+1
1413  27A0- C8                 INY
1414  27A1- B1 08              LDA (SP),Y
1415  27A3- 85 1E              STA M2+2
1416  27A5- C8                 INY
1417  27A6- B1 08              LDA (SP),Y
1418  27A8- 85 1B              STA X2
1419  27AA- C8                 INY
1420  27AB- B1 08              LDA (SP),Y
1421  27AD- 85 1C              STA M2
1422  27AF- A0 7E      GETFLP  LDY =126        AND HALF OF FIRST
1423  27B1- B1 08              LDA (SP),Y
1424  27B3- 85 02              STA M1+1
1425  27B5- C8                 INY
1426  27B6- B1 08              LDA (SP),Y
1427  27B8- 85 03              STA M1+2
1428  27BA- 60                 RTS
1429                   *
1430                   * P-CODE 43: SUBF
1431                   *****************
1432                   *
1433  27BB- 20 9A 27   SUBF    JSR GETFLP2
1434  27BE- 20 39 2C           JSR FSUB
1435  27C1- 4C 83 27           JMP PUTFLP0
1436                   *
1437                   * P-CODE 44: MULF
1438                   *****************
1439                   *
1440  27C4- 20 9A 27   MULF    JSR GETFLP2
1441  27C7- 20 66 2C           JSR FMUL
1442  27CA- 4C 83 27           JMP PUTFLP0
1443                   *
1444                   * P-CODE 45: DIVF
1445                   *****************
1446                   *
1447  27CD- 20 9A 27   DIVF    JSR GETFLP2
1448  27D0- 20 8C 2C           JSR FDIV
1449  27D3- 4C 83 27           JMP PUTFLP0
1450                   *
1451                   * P-CODE 46: FLOF

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 17/11/23   R65 ASSEMBLER  PAGE 30

1452                   *****************
1453                   *
1454  27D6- A5 00      FLOF    LDA ACCU
1455  27D8- 85 02              STA M1+1        HIGH BYTE IS IN ACCU
1456                   *                       SAME AS M1
1457  27DA- 20 1B 2C           JSR FLOAT
1458  27DD- 20 D1 22           JSR INCS2
1459  27E0- 4C 8E 27           JMP PUTFLP
1460                   *
1461                   * P-CODE 47: FIXF
1462                   *****************
1463                   *
1464  27E3- 20 AF 27   FIXF    JSR GETFLP
1465  27E6- 20 D9 2C           JSR FIX
1466  27E9- A5 02              LDA M1+1
1467  27EB- 85 00              STA ACCU
1468  27ED- 4C FE 20           JMP DECS2
1469                   *
1470                   * P-CODE 48: FEQU       =
1471                   *****************
1472                   *
1473  27F0- 20 11 28   FEQU    JSR TESTF
1474  27F3- F0 12              BEQ TRUE
1475                   *
1476  27F5- A2 00      FALSE   LDX =0
1477  27F7- 86 00              STX ACCU
1478  27F9- 86 01              STX ACCU+1
1479  27FB- A5 08      DECS6   LDA SP
1480  27FD- 38                 SEC
1481  27FE- E9 06             SBC =6
1482  2800- 85 08              STA SP
1483  2802- B0 02              BCS *+4
1484  2804- C6 09              DEC SP+1
1485  2806- 60                 RTS
1486                   *
1487  2807- A2 01      TRUE    LDX =1
1488  2809- 86 00              STX ACCU
1489  280B- CA                 DEX
1490  280C- 86 01              STX ACCU+1
1491  280E- 4C FB 27           JMP DECS6
1492                   *
1493  2811- 20 9A 27   TESTF   JSR GETFLP2
1494  2814- 20 39 2C           JSR FSUB
1495  2817- A5 01              LDA M1
1496  2819- 60                 RTS
1497                   *
1498                   * P-CODE 49: FNEQ       <>
1499                   *****************
1500                   *
1501  281A- 20 11 28   FNEQ    JSR TESTF

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 17/11/23   R65 ASSEMBLER  PAGE 31

1502  281D- D0 E8              BNE TRUE
1503  281F- F0 D4              BEQ FALSE
1504                   *
1505                   * P-CODE 4A: FLES       <
1506                   *****************
1507                   *
1508  2821- 20 11 28   FLES    JSR TESTF
1509  2824- 10 CF              BPL FALSE
1510  2826- 30 DF              BMI TRUE
1511                   *
1512                   * P-CODE 4B: FGRE       >=
1513                   *****************
1514                   *
1515  2828- 20 11 28   FGRE    JSR TESTF
1516  282B- 10 DA              BPL TRUE
1517  282D- 30 C6              BMI FALSE
1518                   *
1519                   * P-CODE 4C: FGRT       >
1520                   *****************
1521                   *
1522  282F- 20 11 28   FGRT    JSR TESTF
1523  2832- 30 C1              BMI FALSE
1524  2834- F0 BF              BEQ FALSE
1525  2836- 10 CF              BPL TRUE
1526                   *
1527                   * P-CODE 4D: FLEE       <=
1528                   *****************
1529                   *
1530  2838- 20 11 28   FLEE    JSR TESTF
1531  283B- 30 CA              BMI TRUE
1532  283D- F0 C8              BEQ TRUE
1533  283F- 10 B4              BPL FALSE
1534                   *
1535                   * P-CODE 4E: FCOM       COMPLEMENT
1536                   *****************
1537                   *
1538  2841- 20 AF 27   FCOM    JSR GETFLP
1539  2844- 20 7E 2C           JSR FCOMPL
1540  2847- 4C 8E 27           JMP PUTFLP
1541                   *
1542                   *
1543                   * P-CODE 4F: TFER       TEST FILE ERROR
1544                   *****************
1545                   *
1546  284A- A6 23      TFER    LDX IOCHECK
1547  284C- F0 04              BEQ TFER1
1548  284E- A6 DB              LDX FILERR
1549  2850- D0 01              BNE TFER2
1550  2852- 60         TFER1   RTS             OK
1551                   *

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 17/11/23   R65 ASSEMBLER  PAGE 32

1552  2853- 4C BD 29   TFER2   JMP PERROR
1553                   *
1554                   * P-CODE 50: OPRA       OPEN RA-FILE
1555                   *****************
1556                   *
1557  2856- 20 C2 22   OPRA    JSR COPY        SAVE ACCU
1558  2859- 20 E0 2C           JSR OPENRA      OPEN FILE
1559  285C- C8                 INY
1560  285D- C8                 INY
1561  285E- 84 00              STY ACCU        SAVE FILE NO
1562  2860- A9 00              LDA =0
1563  2862- 85 01              STA ACCU+1
1564  2864- 60                 RTS
1565                   *
1566                   * P-CODE 51: GETR       GET FROM RA FILE
1567                   *****************
1568                   *
1569                   * NO AUTOMATIC ERROR CHECKING
1570                   *
1571  2865- 20 72 28   GETR    JSR GETR1
1572  2868- 20 E7 2D           JSR GETBYTE
1573  286B- 85 00              STA ACCU
1574  286D- A9 00              LDA =0
1575  286F- 85 01              STA ACCU+1
1576  2871- 60                 RTS
1577                   *
1578  2872- 20 FE 20   GETR1   JSR DECS2
1579  2875- A0 80              LDY =128
1580  2877- B1 08              LDA (SP),Y      GET FILE NO
1581  2879- AA                 TAX
1582  287A- CA                 DEX
1583  287B- CA                 DEX
1584  287C- A5 00              LDA ACCU        GET POINTER
1585  287E- A4 01              LDY ACCU+1
1586  2880- 60                 RTS
1587                   *
1588                   * P-CODE 52: PUTR       PUT TO RA=FILE
1589                   *****************
1590                   *
1591                   * NO AUTOMATIC ERROR CHECKING
1592                   *
1593  2881- A5 00      PUTR    LDA ACCU
1594  2883- 85 FE              STA KCHAR
1595  2885- 20 EF 22           JSR GETS2
1596  2888- 20 72 28           JSR GETR1
1597  288B- 20 05 2E           JSR PUTBYTE
1598  288E- 4C EF 22           JMP GETS2
1599                   *
1600                   * P-CODE 53: SWA2       SWAP 2 AND 3 ON STACK
1601                   *****************

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 17/11/23   R65 ASSEMBLER  PAGE 33

1602                   *
1603  2891- A0 7E      SWA2    LDY =126
1604  2893- 20 98 28           JSR SWA3
1605  2896- A0 7F              LDY =127
1606                   *
1607  2898- B1 08      SWA3    LDA (SP),Y
1608  289A- AA                 TAX
1609  289B- 88                 DEY
1610  289C- 88                 DEY
1611  289D- B1 08              LDA (SP),Y
1612  289F- C8                 INY
1613  28A0- C8                 INY
1614  28A1- 91 08              STA (SP),Y
1615  28A3- 8A                 TXA
1616  28A4- 88                 DEY
1617  28A5- 88                 DEY
1618  28A6- 91 08              STA (SP),Y
1619  28A8- 60                 RTS
1620                   *
1621                   * P-CODE 54: LDXI       PREPARE LOAD CPNT
1622                   *****************
1623                   *
1624  28A9- A0 00      LDXI    LDY =0          INDIRECTION
1625  28AB- A5 01              LDA ACCU+1
1626  28AD- F0 4A              BEQ NILERR
1627  28AF- B1 00              LDA (ACCU),Y
1628  28B1- 85 00              STA ACCU
1629  28B3- 84 01              STY ACCU+1
1630  28B5- 60                 RTS
1631                   *
1632                   * P-CODE 55: STXI       STORE CPNT INDEXED
1633                   *****************
1634                   *
1635  28B6- 20 AB 24   STXI    JSR FETCH
1636  28B9- AA                 TAX
1637  28BA- A0 7E              LDY =126
1638  28BC- B1 08              LDA (SP),Y
1639  28BE- 85 21              STA ARG2
1640  28C0- C8                 INY
1641  28C1- B1 08              LDA (SP),Y
1642  28C3- 85 22              STA ARG2+1      ARG2 IS INDEX
1643  28C5- 20 AB 24           JSR FETCH
1644  28C8- 85 1B              STA ARG1
1645  28CA- 20 AB 24           JSR FETCH
1646  28CD- 85 1C              STA ARG1+1      ARG1 IS ADDRESS
1647  28CF- 20 FE 20           JSR DECS2       OF VARIABLE
1648  28D2- 20 40 25           JSR FBASE3
1649  28D5- 20 FE 28           JSR INDI        INDIRECTION
1650  28D8- 18                 CLC
1651  28D9- A5 19              LDA ABASE

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 17/11/23   R65 ASSEMBLER  PAGE 34

1652  28DB- 65 21              ADC ARG2        ADD INDEX
1653  28DD- 85 19              STA ABASE
1654  28DF- A5 1A              LDA ABASE+1
1655  28E1- 65 22              ADC ARG2+1
1656  28E3- 85 1A              STA ABASE+1
1657  28E5- C5 14              CMP EOPROG+1    DO NOT ALLOW WRITING
1658  28E7- 90 0B              BCC PRGERR      INTO PROGRAM SPACE
1659  28E9- F0 09              BEQ PRGERR      CHECK ONLY HIGH BYTE
1660  28EB- A0 00              LDY =0          MUST BE LARGER
1661  28ED- A5 00              LDA ACCU
1662  28EF- 91 19              STA (ABASE),Y   ONLY ONE BYTE
1663  28F1- 4C EF 22           JMP GETS2
1664                   *
1665  28F4- A2 90      PRGERR  LDX =$90
1666  28F6- 4C BD 29           JMP PERROR
1667                   *
1668  28F9- A2 89      NILERR  LDX =$89        CPNT IS NIL
1669  28FB- 4C BD 29           JMP PERROR
1670                   *
1671  28FE- A0 81     INDI    LDY =129        INDIRECTION
1672  2900- B1 19              LDA (ABASE),Y
1673  2902- F0 F5              BEQ NILERR      NIL STRING
1674  2904- AA                 TAX
1675  2905- 88                 DEY
1676  2906- B1 19              LDA (ABASE),Y   POINTER IS IN A,X
1677  2908- 85 19              STA ABASE
1678  290A- 86 1A              STX ABASE+1
1679  290C- 60                 RTS
1680                   *
1681                   * P-CODE 56: CPNT       CPNT CONSTANT
1682                   *****************
1683                   *
1684  290D- 20 C2 22   CPNT    JSR COPY
1685  2910- 20 AB 24           JSR FETCH       STRING SIZE IN A
1686  2913- AA                 TAX
1687  2914- E8                 INX
1688  2915- A5 0A              LDA PC          PC IS POINTER
1689  2917- 85 00              STA ACCU        TO RETURN
1690  2919- A5 0B              LDA PC+1
1691  291B- 85 01              STA ACCU+1
1692  291D- 8A                 TXA
1693  291E- 18                 CLC
1694  291F- 65 0A              ADC PC          ADVANCE PC
1695  2921- 85 0A              STA PC
1696  2923- 90 02              BCC *+4
1697  2925- E6 0B              INC PC+1
1698  2927- 60                 RTS
1699                   *
1700                   * P-CODE 57: WRCP       WRITE CPNT
1701                   *****************

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 17/11/23   R65 ASSEMBLER  PAGE 35

1702                   *
1703  2928- A0 00      WRCP    LDY =0
1704  292A- B1 00              LDA (ACCU),Y
1705  292C- F0 08              BEQ WRCP2
1706  292E- 20 82 29           JSR PRTCHR0     END MARK
1707  2931- C8                 INY
1708  2932- C0 3F              CPY =63
1709  2934- D0 F4              BNE WRCP+2
1710  2936- 4C EF 22   WRCP2   JMP GETS2
1711                   *
1712                   * P-CODE 58: ADPS       ADD PROGRAM START
1713                   *****************
1714                   *
1715  2939- 18         ADPS    CLC
1716  293A- A5 11              LDA STPROG
1717  293C- 65 00              ADC ACCU
1718  293E- 85 00              STA ACCU
1719  2940- A5 12              LDA STPROG+1
1720  2942- 65 01              ADC ACCU+1
1721  2944- 85 01              STA ACCU+1
1722  2946- 60                 RTS
1723                   *
1724                   * P-CODE 58: LINE               SOURCE LINE
1725                   *****************
1726                   *
1727  2947- 20 AB 24   LINE    JSR FETCH
1728  294A- 85 5C                      STA LSTLIN
1729  294C- 20 AB 24                   JSR FETCH
1730  294F- 85 5D                      STA LSTLIN+1
1731  2951- 60                         RTS
1732                   *
1733                   *
1734                   * GETCHR0: GET A CHAR FROM SPECIFIED FILE
1735                   *****************************************
1736                   *
1737  2952- A6 0D      GETCHR0 LDX DEVICE
1738  2954- D0 1A              BNE GETCHR4
1739                   *
1740  2956- A6 15      GETCHR1 LDX BUFFPN
1741  2958- 10 06              BPL GETCHR2
1742  295A- 20 1C 23           JSR RLIN
1743  295D- 4C 56 29           JMP GETCHR1
1744                   *
1745  2960- E4 16      GETCHR2 CPX ENDBUF      IS IS END OF BUFFER?
1746  2962- D0 07              BNE GETCHR3
1747  2964- A9 FF              LDA =$FF
1748  2966- 85 15              STA BUFFPN
1749  2968- A9 0D              LDA =$D
1750  296A- 60                 RTS
1751                   *

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 17/11/23   R65 ASSEMBLER  PAGE 36

1752  296B- E6 15      GETCHR3 INC BUFFPN
1753  296D- B5 24              LDA LINBUF,X
1754  296F- 60                 RTS
1755                   *
1756  2970- CA         GETCHR4 DEX
1757  2971- D0 03              BNE GETCHR5     SKIP, IF NOT KEY
1758  2973- 4C 00 E0           JMP GETKEY
1759                   *
1760  2976- CA         GETCHR5 DEX
1761  2977- A9 00              LDA =0
1762  2979- 85 DA              STA FILFLG
1763  297B- 20 18 F0           JSR READCH
1764  297E- 4C 4A 28           JMP TFER
1765                   *
1766  2981- 60         GETCHR6 RTS
1767                   *
1768                   * PRTCHR0: PRINT CHAR TO SPECIFIED FILE
1769                   ***************************************
1770                   *
1771  2982- A6 0D      PRTCHR0 LDX DEVICE
1772  2984- 30 16              BMI PRTCHR3     Plot text?
1773  2986- D0 03              BNE PRTCHR1
1774  2988- 4C 09 E0           JMP PRTCHR
1775                   *
1776  298B- CA         PRTCHR1 DEX
1777  298C- D0 03              BNE PRTCHR2
1778  298E- 4C 0C E0           JMP AUTOPR
1779                   *
1780  2991- CA         PRTCHR2 DEX
1781  2992- A0 00              LDY =0
1782  2994- 84 DA              STY FILFLG
1783  2996- 20 1B F0           JSR WRITCH
1784  2999- 4C 4A 28           JMP TFER
1785                   *
1786  299C- C9 0D      PRTCHR3 CMP =$0D        Plot CR?
1787  299E- D0 06              BNE PRTCHR4
1788  29A0- A9 00              LDA =0
1789  29A2- 8D AE 03           STA GRX
1790  29A5- 60         PRTCHRE RTS
1791                   *
1792  29A6- C9 0A      PRTCHR4 CMP =$0A        PLOT LF?
1793  29A8- D0 0D              BNE PRTCHR6
1794  29AA- AD AF 03           LDA GRY
1795  29AD- E9 08              SBC =8
1796  29AF- 10 02              BPL PRTCHR5
1797  29B1- A9 00              LDA =0
1798                   *
1799  29B3- 8D AF 03   PRTCHR5 STA GRY
1800  29B6- 60                 RTS
1801                   *

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 17/11/23   R65 ASSEMBLER  PAGE 37

1802  29B7- 8D B0 03   PRTCHR6 STA GRC
1803  29BA- 4C 18 C8           JMP APLOTCH     PLOT THE CHARACTER
1804                   *
1805                   * PERROR: PASCAL RUNTIME ERROR
1806                   ******************************
1807                   *
1808  29BD- A9 2F      PERROR  LDA =47         CHECK CHARS/LINE
1809  29BF- CD 8A 17           CMP NUMCHR
1810  29C2- F0 08              BEQ PERROR0
1811  29C4- 8D 8A 17           STA NUMCHR      SET TO 48 CHARS/LINE
1812  29C7- 20 27 E0           JSR PRTINF      AND CLEAR SCREEN
1813  29CA- 01 91              BYT $01,$91     HOME,CLRSCR
1814  29CC- 20 27 E0   PERROR0 JSR PRTINF
1815  29CF- 0D 0A 07           BYT $D,$A,7,'Pascal error '+128
1815  29D2- 50 61 73 
1815  29D5- 63 61 6C 
1815  29D8- 20 65 72 
1815  29DB- 72 6F 72 
1815  29DE- A0 
1816  29DF- A9 00              LDA =0
1817  29E1- 85 0D              STA DEVICE
1818  29E3- 8A                 TXA
1819  29E4- 85 0C              STA RUNERR
1820  29E6- 20 2D E0           JSR PRTBYT
1821  29E9- A5 0A              LDA PC
1822  29EB- 38                 SEC
1823  29EC- E5 11              SBC STPROG
1824  29EE- 85 00              STA ACCU
1825  29F0- A5 0B              LDA PC+1
1826  29F2- E5 12              SBC STPROG+1
1827  29F4- 85 01              STA ACCU+1
1828  29F6- 30 3F              BMI PERROR1
1829  29F8- A5 5C              LDA LSTLIN
1830  29FA- 05 5D              ORA LSTLIN+1    LINE NUMB IS NOT 0?
1831  29FC- D0 1D              BNE PERROR2     YES,SKIP WRITE
1832  29FE- 38                 SEC
1833  29FF- A5 00             LDA ACCU
1834  2A01- E9 01              SBC =1
1835  2A03- 85 00              STA ACCU
1836  2A05- A5 01              LDA ACCU+1
1837  2A07- E9 00              SBC =0
1838  2A09- 85 01              STA ACCU+1
1839  2A0B- 20 27 E0           JSR PRTINF
1840  2A0E- 20 61 74           BYT ' at PC '+128
1840  2A11- 20 50 43 
1840  2A14- A0 
1841  2A15- 20 B8 23           JSR PRTN        WRITE PC
1842  2A18- 4C 32 2A           JMP PERROR3
1843                   *
1844  2A1B- A5 5C      PERROR2 LDA LSTLIN

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 17/11/23   R65 ASSEMBLER  PAGE 38

1845  2A1D- 85 00              STA ACCU
1846  2A1F- A5 5D              LDA LSTLIN+1
1847  2A21- 85 01              STA ACCU+1
1848  2A23- 20 27 E0           JSR PRTINF
1849  2A26- 20 61 74           BYT ' at line '+128
1849  2A29- 20 6C 69 
1849  2A2C- 6E 65 A0 
1850  2A2F- 20 B8 23           JSR PRTN        WRITE LINE NUMBER
1851                   *
1852  2A32- 20 27 E0   PERROR3 JSR PRTINF
1853  2A35- 0D 8A              BYT $D,$8A
1854                   *
1855  2A37- 4C 10 20   PERROR1 JMP STOP
1856                   *
1857                   *
1858                   * WARM START ENTRY POINT
1859                   ************************
1860                   *
1861  2A3A- AD 81 17   WARMST  LDA SFLAG       SET PASCAL RUNTIME BIT
1862  2A3D- 09 01              ORA =$01        IN SFLAG
1863  2A3F- 8D 81 17           STA SFLAG
1864  2A42- BA                 TSX
1865  2A43- 8E FF 17           STX SAVS        SAVE STACK POINTER
1866  2A46- A2 00              LDX =0
1867  2A48- 86 0B              STX PC+1
1868  2A4A- 86 0D              STX DEVICE
1869  2A4C- CA                 DEX
1870  2A4D- 86 16              STX ENDBUF
1871  2A4F- 86 23              STX IOCHECK
1872  2A51- A2 00              LDX =0
1873                   *
1874  2A53- A0 00      EXEC    LDY =0
1875  2A55- 84 0B              STY PC+1
1876  2A57- BD 0C 2B           LDA EXTABLE,X
1877  2A5A- 9D 20 03           STA FILNM1,X
1878  2A5D- E8                 INX
1879  2A5E- C8                 INY
1880  2A5F- C0 10              CPY =16
1881  2A61- 90 F2              BCC EXEC+2
1882  2A63- A9 00              LDA =0
1883  2A65- 8D 30 03           STA FILCY1
1884                   *
1885  2A68- A9 00      EXECUTE LDA =0
1886  2A6A- 85 DA              STA FILFLG
1887  2A6C- AD 0B 20           LDA USEREND
1888  2A6F- AE 0C 20           LDX USEREND+1
1889  2A72- 38                 SEC
1890  2A73- E9 90              SBC =144
1891  2A75- B0 01              BCS *+3
1892  2A77- CA                 DEX

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 17/11/23   R65 ASSEMBLER  PAGE 39

1893  2A78- 85 0E              STA ENDSTK
1894  2A7A- 86 0F              STX ENDSTK+1
1895                   *
1896  2A7C- AD 09 20   EXEC1   LDA USERST
1897  2A7F- AE 0A 20           LDX USERST+1
1898  2A82- 85 11      EXEC3   STA STPROG
1899  2A84- 86 12              STX STPROG+1
1900  2A86- 8D 31 03           STA FILSA1
1901  2A89- 8E 32 03           STX FILSA1+1
1902  2A8C- 20 15 E8           JSR RDFILE      READ FILE TO EXECUTE
1903  2A8F- D0 07              BNE EXECE       PROGRAM NOT LOOADED?
1904                   *
1905  2A91- AD 12 03           LDA FILSTP
1906  2A94- C9 52              CMP ='R'        IS PASCAL PROGRAM?
1907  2A96- F0 07              BEQ RUN
1908  2A98- A9 84      EXECE   LDA =$84        PASCAL RUNPROG ERROR
1909  2A9A- 85 0C              STA RUNERR
1910  2A9C- 4C 10 20           JMP STOP        SILENT ERROR
1911                   *
1912  2A9F- A0 00      RUN     LDY =0          READ END ADDRESS
1913  2AA1- B1 11              LDA (STPROG),Y  FROM FILE
1914  2AA3- 18                 CLC
1915  2AA4- 65 11              ADC STPROG
1916  2AA6- 85 13              STA EOPROG
1917  2AA8- C8                 INY
1918  2AA9- B1 11              LDA (STPROG),Y
1919  2AAB- 65 12              ADC STPROG+1
1920  2AAD- 85 14              STA EOPROG+1
1921  2AAF- A5 13              LDA EOPROG      GET END OF STACK
1922  2AB1- A6 14              LDX EOPROG+1
1923  2AB3- 38                 SEC
1924  2AB4- E9 80              SBC =128
1925  2AB6- 85 17              STA BASE
1926  2AB8- 85 08              STA SP
1927  2ABA- B0 01              BCS *+3
1928  2ABC- CA                 DEX
1929  2ABD- 86 18              STX BASE+1
1930  2ABF- 86 09              STX SP+1
1931                   *
1932  2AC1- A5 11              LDA STPROG
1933  2AC3- A6 12              LDX STPROG+1
1934  2AC5- 18                 CLC
1935  2AC6- 69 02              ADC =2
1936  2AC8- 85 0A              STA PC
1937  2ACA- 90 01              BCC *+3
1938  2ACC- E8                 INX
1939  2ACD- 86 0B              STX PC+1
1940  2ACF- A9 00              LDA =0
1941  2AD1- 85 0C              STA RUNERR
1942  2AD3- AE FF 17   LOOP    LDX SAVS        RESTORE STACK POINTER

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 17/11/23   R65 ASSEMBLER  PAGE 40

1943  2AD6- 9A                 TXS
1944  2AD7- 20 E2 2A           JSR EXCODE
1945  2ADA- AD 81 17           LDA SFLAG
1946  2ADD- 30 20              BMI ESCERR
1947  2ADF- 4C D3 2A           JMP LOOP
1948                   *
1949                   *
1950  2AE2- 20 AB 24   EXCODE  JSR FETCH
1951  2AE5- 89 F1              STA =$F1
1952  2AE7- C9 5A              CMP =$5A        TEST CODENUMBER
1953  2AE9- 90 05              BCC *+7
1954  2AEB- A2 86      ILLC    LDX =$86        PASCAL RUNTIME ERROR
1955  2AED- 4C BD 29           JMP PERROR      ILLEGAL P-CODE
1956                   *
1957  2AF0- 0A                 ASL A
1958  2AF1- AA                 TAX
1959  2AF2- BD 1C 2B           LDA TABLE,X
1960  2AF5- 85 1B              STA ARG1
1961  2AF7- BD 1D 2B           LDA TABLE+1,X
1962  2AFA- 85 1C              STA ARG1+1
1963  2AFC- 6C 1B 00           JMP (ARG1)
1964                   *
1965  2AFF- AD 81 17  ESCERR  LDA SFLAG       CLEAR ESCAPE FLAG
1966  2B02- 29 7F              AND =$7F
1967  2B04- 8D 81 17           STA SFLAG
1968  2B07- A2 86              LDX =$86        PASCAL RUNTIME ERROR
1969  2B09- 4C BD 29           JMP PERROR      ESCAPE DURING EXECUTION
1970                   *
1971  2B0C- 53 59 53   EXTABLE BYT 'SYSTEM:R        '
1971  2B0F- 54 45 4D 
1971  2B12- 3A 52 20 
1971  2B15- 20 20 20 
1971  2B18- 20 20 20 
1971  2B1B- 20 
1972                   *
1973  2B1C- 10 20 AD   TABLE   WRD STOP,RETN,NEGA,ADDA,SUBA,MULA
1973  2B1F- 20 E0 20 
1973  2B22- EE 20 0A 
1973  2B25- 21 1D 21 
1974  2B28- 82 21 F4           WRD DIVA,LOWB,TEQU,TNEQ,TLES,TGRE
1974  2B2B- 21 FF 21 
1974  2B2E- 10 22 1A 
1974  2B31- 22 24 22 
1975  2B34- 2A 22 30           WRD TGRT,TLEE,ORAC,ANDA,EORA,NOTA
1975  2B37- 22 36 22 
1975  2B3A- 48 22 5A 
1975  2B3D- 22 6C 22 
1976  2B40- 7C 22 95           WRD LEFT,RIGH,INCA,DECA,COPY,PEEK
1976  2B43- 22 B2 22 
1976  2B46- B9 22 C2 

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 17/11/23   R65 ASSEMBLER  PAGE 41

1976  2B49- 22 FD 22 
1977  2B4C- 06 23 13           WRD POKE,CALA,RLIN,GETC,GETN,PRTC
1977  2B4F- 23 1C 23 
1977  2B52- 46 23 53 
1977  2B55- 23 B0 23 
1978  2B58- B8 23 2B           WRD PRTN,PRTS,LITB,INCB,LITW,INCW
1978  2B5B- 24 61 24 
1978  2B5E- 6E 24 9D 
1978  2B61- 24 B6 24 
1979  2B64- D3 24 E5           WRD JUMP,JMPZ,JMPO,LOAD,LODX,STOR
1979  2B67- 24 FA 24 
1979  2B6A- 03 25 51 
1979  2B6D- 25 6B 25 
1980  2B70- 8A 25 B0           WRD STOX,CALL,SDEV,RDEV,FNAM,OPNR
1980  2B73- 25 E6 25 
1980  2B76- ED 25 F2 
1980  2B79- 25 0F 26 
1981  2B7C- 20 26 25           WRD OPNW,CLOS,PRTI,GHGH,GLOW,PHGH
1981  2B7F- 26 2F 26 
1981  2B82- 3C 26 40 
1981  2B85- 26 45 26 
1982  2B88- 4E 26 57           WRD PLOW,GSEC,PSEC,NBYT,NWRD,LODN
1982  2B8B- 26 60 26 
1982  2B8E- 8B 26 9D 
1982  2B91- 26 B2 26 
1983  2B94- CB 26 E1           WRD STON,LODI,STOI,EXST,TIND,RUNP
1983  2B97- 26 F6 26 
1983  2B9A- FF 26 15 
1983  2B9D- 27 35 27 
1984  2BA0- 7D 27 BB           WRD ADDF,SUBF,MULF,DIVF,FLOF,FIXF
1984  2BA3- 27 C4 27 
1984  2BA6- CD 27 D6 
1984  2BA9- 27 E3 27 
1985  2BAC- F0 27 1A           WRD FEQU,FNEQ,FLES,FGRE,FGRT,FLEE
1985  2BAF- 28 21 28 
1985  2BB2- 28 28 2F 
1985  2BB5- 28 38 28 
1986  2BB8- 41 28 4A           WRD FCOM,TFER,OPRA,GETR,PUTR,SWA2
1986  2BBB- 28 56 28 
1986  2BBE- 65 28 81 
1986  2BC1- 28 91 28 
1987  2BC4- A9 28 B6           WRD LDXI,STXI,CPNT,WRCP,ADPS,LINE
1987  2BC7- 28 0D 29 
1987  2BCA- 28 29 39 
1987  2BCD- 29 47 29 
1988                   *
1989                   * COLDSTART
1990                   ***********
1991                   *
1992  2BD0- A9 00      COLDST  LDA =0

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 17/11/23   R65 ASSEMBLER  PAGE 42

1993  2BD2- 85 5C              STA LSTLIN              CLEAR LSTLIN
1994  2BD4- 85 5D              STA LSTLIN+1
1995  2BD6- 58                 CLI
1996  2BD7- D8                 CLD
1997  2BD8- AD 09 20           LDA USERST
1998  2BDB- AE 0A 20           LDX USERST+1
1999  2BDE- 85 11              STA STPROG
2000  2BE0- 86 12              STX STPROG+1
2001  2BE2- A0 00              LDY =0
2002  2BE4- 98                 TYA
2003  2BE5- 91 11              STA (STPROG),Y
2004  2BE7- C8                 INY
2005  2BE8- C0 04              CPY =4
2006  2BEA- 90 F9              BCC *-5
2007  2BEC- 4C 3A 2A           JMP WARMST
2008                   *
2009                           TIT R65 PASCAL: FLP-MATH
2010                           PAG

----------------------------------------------------------------------

R65 PASCAL: FLP-MATH               17/11/23   R65 ASSEMBLER  PAGE 43

2011                   *
2012                   ********************************
2013                   * R65 PASCAL FLP MATH ROUTINES *
2014                   ********************************
2015                   *
2016                   *
2017  2BEF- 18         ADD     CLC
2018  2BF0- A2 02              LDX =2
2019  2BF2- B5 01      ADD1    LDA M1,X
2020  2BF4- 75 1C              ADC M2,X
2021  2BF6- 95 01              STA M1,X
2022  2BF8- CA                 DEX
2023  2BF9- 10 F7              BPL ADD1
2024  2BFB- 60                 RTS
2025                   *
2026  2BFC- 06 10      MD1     ASL SIGN
2027  2BFE- 20 01 2C          JSR ABSWAP
2028  2C01- 24 01      ABSWAP  BIT M1
2029  2C03- 10 05              BPL ABSWP1
2030  2C05- 20 7E 2C           JSR FCOMPL
2031  2C08- E6 10              INC SIGN
2032  2C0A- 38         ABSWP1  SEC
2033                   *
2034                   * SWAP: EXCHANGE F1 AND F2
2035                   **************************
2036                   *
2037  2C0B- A2 04      SWAP    LDX =4
2038  2C0D- 94 03      SWAP1   STY E-1,X
2039  2C0F- B5 FF              LDA <(X1-1),X
2040  2C11- B4 1A              LDY X2-1,X
2041  2C13- 94 FF              STY <(X1-1),X
2042  2C15- 95 1A              STA X2-1,X
2043  2C17- CA                 DEX
2044  2C18- D0 F3              BNE SWAP1
2045  2C1A- 60                 RTS
2046                   *
2047                   * FLOAT: FLOAT M1,M1+1 TO RESULT IN F1
2048                   **************************************
2049                   *
2050  2C1B- A9 8E      FLOAT   LDA =$8E
2051  2C1D- 85 00              STA X1
2052  2C1F- A9 00              LDA =0
2053  2C21- 85 03              STA M1+2
2054  2C23- F0 08              BEQ NORM
2055  2C25- C6 00      NORM1   DEC X1
2056  2C27- 06 03              ASL M1+2
2057  2C29- 26 02              ROL M1+1
2058  2C2B- 26 01              ROL M1
2059  2C2D- A5 01      NORM    LDA M1
2060  2C2F- 0A                 ASL A

----------------------------------------------------------------------

R65 PASCAL: FLP-MATH               17/11/23   R65 ASSEMBLER  PAGE 44

2061  2C30- 45 01              EOR M1
2062  2C32- 30 04              BMI RTS1
2063  2C34- A5 00              LDA X1
2064  2C36- D0 ED              BNE NORM1
2065  2C38- 60         RTS1    RTS
2066                   *
2067                   * FSUB: F1=F2-F1
2068                   ****************
2069                   *
2070  2C39- 20 7E 2C   FSUB    JSR FCOMPL
2071  2C3C- 20 4C 2C   SWPALG  JSR ALGNSW
2072                   *
2073                   * FADD: F1=F2+F1
2074                   ****************
2075                   *
2076  2C3F- A5 1B      FADD    LDA X2
2077  2C41- C5 00              CMP X1
2078  2C43- D0 F7              BNE SWPALG
2079  2C45- 20 EF 2B           JSR ADD
2080  2C48- 50 E3      ADDEND  BVC NORM
2081  2C4A- 70 05              BVS RTLOG
2082  2C4C- 90 BD      ALGNSW  BCC SWAP
2083  2C4E- A5 01      RTAR    LDA M1
2084  2C50- 0A                 ASL A
2085  2C51- E6 00      RTLOG   INC X1
2086  2C53- F0 7E              BEQ OVFL
2087  2C55- A2 FA      RTLOG1  LDX =$FA
2088  2C57- A9 80      ROR1    LDA =$80
2089  2C59- B0 01              BCS ROR2
2090  2C5B- 0A                 ASL A
2091  2C5C- 56 07      ROR2    LSR E+3,X
2092  2C5E- 15 07              ORA E+3,X
2093  2C60- 95 07              STA E+3,X
2094  2C62- E8                 INX
2095  2C63- D0 F2              BNE ROR1
2096  2C65- 60                 RTS
2097                   *
2098                   * FMUL: F1=F2*F1
2099                   ****************
2100                   *
2101  2C66- 20 FC 2B   FMUL    JSR MD1
2102  2C69- 65 00              ADC X1
2103  2C6B- 20 BC 2C           JSR MD2
2104  2C6E- 18                 CLC
2105  2C6F- 20 55 2C   MUL1    JSR RTLOG1
2106  2C72- 90 03              BCC MUL2
2107  2C74- 20 EF 2B           JSR ADD
2108  2C77- 88         MUL2    DEY
2109  2C78- 10 F5              BPL MUL1
2110  2C7A- 46 10      MDEND   LSR SIGN

----------------------------------------------------------------------

R65 PASCAL: FLP-MATH               17/11/23   R65 ASSEMBLER  PAGE 45

2111  2C7C- 90 AF      NORMX   BCC NORM
2112  2C7E- 38         FCOMPL  SEC
2113  2C7F- A2 03              LDX =3
2114  2C81- A9 00      COMPL1  LDA =0
2115  2C83- F5 00              SBC X1,X
2116  2C85- 95 00              STA X1,X
2117  2C87- CA                 DEX
2118  2C88- D0 F7              BNE COMPL1
2119  2C8A- F0 BC              BEQ ADDEND
2120                   *
2121                   * FDIV: F1=F2/F1
2122                   ****************
2123                   *
2124  2C8C- 20 FC 2B   FDIV    JSR MD1
2125  2C8F- E5 00              SBC X1
2126  2C91- 20 BC 2C           JSR MD2
2127  2C94- 38         FDIV1   SEC
2128  2C95- A2 02              LDX =2
2129  2C97- B5 1C      FDIV2   LDA M2,X
2130  2C99- F5 04              SBC E,X
2131  2C9B- 48                 PHA
2132  2C9C- CA                 DEX
2133  2C9D- 10 F8              BPL FDIV2
2134  2C9F- A2 FD              LDX =$FD
2135  2CA1- 68         FDIV3   PLA
2136  2CA2- 90 02              BCC FDIV4
2137  2CA4- 95 1F              STA M2+3,X
2138  2CA6- E8         FDIV4   INX
2139  2CA7- D0 F8              BNE FDIV3
2140  2CA9- 26 03              ROL M1+2
2141  2CAB- 26 02              ROL M1+1
2142  2CAD- 26 01              ROL M1
2143  2CAF- 06 1E              ASL M2+2
2144  2CB1- 26 1D              ROL M2+1
2145  2CB3- 26 1C              ROL M2
2146  2CB5- B0 1C              BCS OVFL
2147  2CB7- 88                 DEY
2148  2CB8- D0 DA              BNE FDIV1
2149  2CBA- F0 BE              BEQ MDEND
2150  2CBC- 86 03      MD2     STX M1+2
2151  2CBE- 86 02              STX M1+1
2152  2CC0- 86 01              STX M1
2153  2CC2- B0 0D              BCS OVCHK
2154  2CC4- 30 04              BMI MD3
2155  2CC6- 68                 PLA
2156  2CC7- 68                 PLA
2157  2CC8- 90 B2              BCC NORMX
2158  2CCA- 49 80      MD3     EOR =$80
2159  2CCC- 85 00              STA X1
2160  2CCE- A0 17              LDY =$17

----------------------------------------------------------------------

R65 PASCAL: FLP-MATH               17/11/23   R65 ASSEMBLER  PAGE 46

2161  2CD0- 60                 RTS
2162  2CD1- 10 F7      OVCHK   BPL MD3
2163  2CD3- 4C B9 21   OVFL    JMP DIV1-5      PASCAL RUNTIME ERROR
2164                   *
2165                   * FIX: FIX F1 IN M1, M1+1
2166                   *************************
2167                   *
2168  2CD6- 20 4E 2C           JSR RTAR
2169  2CD9- A5 00      FIX     LDA X1
2170  2CDB- C9 8E              CMP =$8E
2171  2CDD- D0 F7              BNE FIX-3
2172  2CDF- 60         RTRN    RTS
2173                   *
2174                           TIT R65 PASCAL: RANDOM ACCESS
2175                           PAG

----------------------------------------------------------------------

R65 PASCAL: RANDOM ACCESS          17/11/23   R65 ASSEMBLER  PAGE 47

2176                   *
2177                   * RANDOM ACCESS FILE HANDLER
2178                   ****************************
2179                   *
2180                   *
2181                   * OPENRA: OPEN A FILE FOR RANDOM ACCESS
2182                   ***************************************
2183                   *
2184                   * ENTRY: FILNM1,FILCY1,FILDRV,FILFLG
2185                   * FILFLG: BIT 7: PROTECTED (NEW ONLY)*
2186                   *         BIT 6: NO PRINTED OUTPUT
2187                   *         BIT 5: DIRECTION (0=READ)
2188                   *         BIT 4: 1=NEW, 0=OLD
2189                   *
2190                   * NEW ONLY: MAXSIZ,FILSA
2191                   *
2192                   * EXIT: NO OF OPEN FILE IN Y, STATUS IN A
2193                   *       AND FILERR, Y IS ONLY VALID
2194                   *       IF A=0
2195                   *
2196                   *
2197  2CE0- AC 36 03   OPENRA  LDY MAXSEQ      SEARCH EMPTY ENTRY
2198  2CE3- B9 39 03           LDA FIDRTB,Y    BIT 5=1: ENTRY USED
2199  2CE6- 29 20              AND =$20
2200  2CE8- F0 08              BEQ OPENRA1     FOUND, SKIP
2201  2CEA- 88                 DEY
2202  2CEB- 10 F6              BPL OPENRA+3
2203                   *
2204  2CED- A9 23              LDA =$23        TOO MANY OPEN FILES
2205  2CEF- 85 DB              STA FILERR
2206  2CF1- 60                 RTS
2207                   *
2208  2CF2- 8C 35 03   OPENRA1 STY CURSEQ      SAVE CURRENT ENTRY NO
2209  2CF5- A5 DC              LDA FILDRV      GET AND TEST DRIVE
2210  2CF7- 99 41 03           STA FIDVTB,Y
2211  2CFA- 29 FE              AND =$FE
2212  2CFC- F0 05              BEQ OPENRA2     SKIP, IF OK
2213                   *
2214  2CFE- A9 28             LDA =$28        ILLEGAL DRIVE FOR RA
2215  2D00- 85 DB              STA FILERR
2216  2D02- 60                 RTS
2217                   *
2218  2D03- A9 10      OPENRA2 LDA =$10        TEST OLD/NEW FLAG
2219  2D05- 25 DA              AND FILFLG
2220  2D07- F0 78              BEQ OPENOLD     SKIP, IF OLD
2221                   *
2222                   * OPEN A NEW FILE
2223                   *
2224  2D09- A5 DA      OPENNEW LDA FILFLG
2225  2D0B- 29 80              AND =$80        GET PROTECTED FLAG

----------------------------------------------------------------------

R65 PASCAL: RANDOM ACCESS          17/11/23   R65 ASSEMBLER  PAGE 48

2226  2D0D- 09 42              ORA ='B'        BLOCK FILE
2227  2D0F- 8D 00 03           STA FILTYP      SET FILE TYPE
2228                   *
2229  2D12- A9 00              LDA =0
2230  2D14- AE 37 03           LDX MAXSIZ      SIZE OF FILE
2231  2D17- 8D 15 03           STA FILSIZ
2232  2D1A- 8E 16 03           STX FILSIZ+1
2233                   *
2234  2D1D- CA                 DEX             COMPUTE FILEA
2235  2D1E- AD 1A 03           LDA FILSA
2236  2D21- 18                 CLC
2237  2D22- 69 FF              ADC =$FF
2238  2D24- 8D 1C 03           STA FILEA
2239  2D27- 8A                 TXA
2240  2D28- 6D 1B 03           ADC FILSA+1
2241  2D2B- 8D 1D 03           STA FILEA+1
2242                   *
2243  2D2E- 20 1E E8           JSR SETFID      SET FILEDATE
2244                   *
2245  2D31- A2 10              LDX =16
2246  2D33- BD 20 03   OPENNE1 LDA FILNM1,X    SET FILNM1 AND FILCY1
2247  2D36- 9D 01 03           STA FILNAM,X    TO FILNAM AND FILCYC
2248  2D39- CA                 DEX
2249  2D3A- 10 F7              BPL OPENNE1
2250                   *
2251                   * SEARCH IN DIRECTORY AND RETURN CYCLUS
2252                   * AND DIRECTORY ENTRY TO USE, TEST EXISTING
2253                   * FILES FOR SAME NAME AND CYCLUS, DISK
2254                   * OPERATION IS INITIALIZED
2255                   *
2256  2D3C- 20 A7 20           JSR PREPWRA
2257  2D3F- 8E 11 03           STX FILCYC
2258                   *
2259                   * FIND FIRST EMPTY DISK DIRECTORY ENTR
2260                   * FETCH ITAND SET FIRST SECTOR OF FILE TO
2261                   * FILLOC, OUTPUT Y,X AS NUMBER OF EMPTY
2262                   * SECTORS
2263                   *
2264  2D42- 20 AA 20           JSR PREPWRB
2265  2D45- 8A                 TXA
2266  2D46- CD 16 03           CMP FILSIZ+1
2267  2D49- 98                 TYA
2268  2D4A- E9 00              SBC =0          COMPARE WITH REQUESTED
2269  2D4C- B0 05              BCS OPENNE3     SECTORS
2270                   *
2271  2D4E- A9 26              LDA =$26        DISK OVERFLOW
2272  2D50- 4C 9E 20           JMP DISCER1
2273                   *
2274                   * SET FITEMP,Y AND FITEMP+8,YNTO FIRST SECTOT
2275                   * OF FILE ON DISK, FIMAXT,Y TO SIZE, DIRECTORY

----------------------------------------------------------------------

R65 PASCAL: RANDOM ACCESS          17/11/23   R65 ASSEMBLER  PAGE 49

2276                   * ENTRY NO TO FITEMP+16,Y
2277                   * THEN PUT THIS ENTRY ONTO THE DISKMAND SET
2278                   * A NEW END OF DIRECTORY MARK
2279                   *
2280  2D53- 20 80 20   OPENNE3 JSR DOPEN4
2281                   *
2282  2D56- AC 35 03           LDY CURSEQ      SETUP DUMMY FIRST SECTOR
2283  2D59- A9 00              LDA =0
2284  2D5B- 99 49 03           STA FIBPTB,Y
2285  2D5E- 99 51 03           STA FIRCTB,Y
2286                   *
2287  2D61- AC 35 03   OPENNE4 LDY CURSEQ      OPEN FILE
2288  2D64- A5 DA              LDA FILFLG
2289  2D66- 0A                 ASL A
2290  2D67- 0A                 ASL A
2291  2D68- 29 80              AND =$80        GET DIRECTION
2292  2D6A- 48                 PHA
2293  2D6B- 2D 00 03           AND FILTYP
2294  2D6E- F0 06              BEQ OPENNE5     OK, SKIP
2295  2D70- 68                 PLA             PROTECTED FILE
2296                   *
2297  2D71- A9 29              LDA =$29
2298  2D73- 85 DB              STA FILERR
2299  2D75- 60                 RTS
2300                   *
2301  2D76- 68         OPENNE5 PLA
2302  2D77- 09 60              ORA =$60        RA FILE, OPENIT
2303  2D79- 99 39 03           STA FIDRTB,Y
2304                   *
2305  2D7C- A9 00              LDA =0          NORMALEXIT
2306  2D7E- 85 DB              STA FILERR
2307  2D80- 60         OPENNE6 RTS
2308                   *
2309                   * OPEN AN OLD FILE:
2310                   * PREPARE DISK OPERATION, SEARCH REQUESTED
2311                   * FILE AND GET CORRSPONDING DISK ENTRY
2312                   *
2313  2D81- 20 A4 20   OPENOLD JSR PREPRD
2314                   *
2315  2D84- 20 83 20           JSR PRFLB1      PRINT LABEL, IF REQ.
2316  2D87- AD 00 03           LDA FILTYP
2317  2D8A- 29 7F              AND =$7F
2318  2D8C- C9 42              CMP ='B'        MUST BE BLOCK FILE
2319  2D8E- F0 05              BEQ OPENOL1     SKIP, IF OK
2320                   *
2321  2D90- A9 05              LDA =5
2322  2D92- 4C 9E 20           JMP DISCER1     FILE TYPE ERROR
2323                   *
2324  2D95- 20 A1 20   OPENOL1 JSR ENDDO       END OF DISK OPERATION
2325                   *

----------------------------------------------------------------------

R65 PASCAL: RANDOM ACCESS          17/11/23   R65 ASSEMBLER  PAGE 50

2326                   * SET NOW FIRST SECTOR AND SIZE TO TABLE
2327                   *
2328  2D98- 20 7D 20           JSR DOPEN1
2329                   *
2330  2D9B- A9 00              LDA =0          GET FIRST RECORD
2331  2D9D- 20 A4 2D           JSR GETTREC
2332  2DA0- D0 DE              BNE OPENNE6     SKIP, IF NOT OK
2333  2DA2- F0 BD              BEQ OPENNE4     ELSE OPEN FILE
2334                   *
2335                   *
2336                   * GETTREC: GET ONE RECORD FROM RA-FILE
2337                   * RECORD NUMBER IS IN A, FILE NUMBER IN CURSEQ
2338                   * RESULT IUS Z=1,OF OK, ELSE Z=0 AND FILERR
2339                   *
2340  2DA4- AE 35 03   GETTREC LDX CURSEQ      SAVE RECORD NO
2341  2DA7- 9D 51 03           STA FIRCTB,X
2342  2DAA- A9 00              LDA =0          CLEAR UPDATED FLAG
2343  2DAC- 9D 49 03           STA FIBPTB,X
2344  2DAF- BD 41 03           LDA FIDVTB,X    SET DRIVE NO
2345  2DB2- 85 DC              STA FILDRV
2346                   *
2347                   * COMPUTE DATA-POINTER AND BINARY
2348                   * TRACK,SECTOR, SETUP FILDRV
2349                   *
2350  2DB4- 20 89 20           JSR PREPSR
2351                   *
2352                   * ADD RECORD NUMBER TO BINARY TRAC/SECTOR
2353                   * TEST SIZE OF FILE, CONVERT TO TRACK AND
2354                   * SECTOR, INITIALIZE DISK OPERATION
2355                   *
2356  2DB7- 20 8C 20           JSR PREPSR1
2357                   *
2358  2DBA- 20 95 20           JSR READ        READ ON SECTOR
2359                   *
2360  2DBD- 4C A1 20           JMP ENDDO       END OF DISK OPERATION
2361                   *
2362                   * PUTTREC: SAVE CURRENT RECORD ON DISK
2363                   * FILE NUMBER IN CURSEQ, RECORD NUMBER IN
2364                   * FIRCTB,Y, RETURNS Z=1 IF OK, ELSE FILERR
2365                   *
2366  2DC0- BD 41 03   PUTTREC LDA FIDVTB,X
2367  2DC3- 85 DC              STA FILDRV
2368  2DC5- 20 89 20           JSR PREPSR      SEE GETTREC FOR
2369  2DC8- 20 8C 20           JSR PREPSR1     COMMENTS
2370  2DCB- 20 98 20           JSR WRITE
2371  2DCE- 4C A1 20           JMP ENDDO
2372                   *
2373                   * GETNEWR: GET A NEW RECORD, SAVE OLD, IF
2374                   * OLD HAS BEEN UPDATED
2375                   * ENTRY: NEW RECORD IN A, FILE NO IN CURSEQ

----------------------------------------------------------------------

R65 PASCAL: RANDOM ACCESS          17/11/23   R65 ASSEMBLER  PAGE 51

2376                   * EXIT: z=1 IF OK, ELSE FILERR
2377                   *
2378  2DD1- 8D 34 03   GETNEWR STA SAVRST+1    SAVE REQUESTED RECORD
2379  2DD4- AE 35 03           LDX CURSEQ
2380  2DD7- BD 49 03           LDA FIBPTB,X    UPDATED?
2381  2DDA- 10 05              BPL GETNEW1
2382                   *
2383  2DDC- 20 C0 2D           JSR PUTTREC     YES, SAVE IT
2384  2DDF- D0 23              BNE EXIT
2385                   *
2386  2DE1- AD 34 03   GETNEW1 LDA SAVRST+1    GET REQUESTED RECORD
2387  2DE4- 4C A4 2D           JMP GETTREC
2388                   *
2389                   * GETBYTE: GET ONE BYTE FROM FILE
2390                   *********************************
2391                   * ENTRY: FILE NUMBER IN X
2392                   *        POINTER IN A(LOW) AND Y(HIGH)
2393                   * EXIT:  FILERR IN Y AND STATUS, BYTE IN A
2394                   *
2395  2DE7- 8D 33 03   GETBYTE STA SAVRST      SAVE A
2396  2DEA- 20 34 2E           JSR TESTRA
2397                   *
2398  2DED- 98                 TYA
2399  2DEE- DD 51 03           CMP FIRCTB,X    IS IT IN CURRENT RECORD?
2400  2DF1- F0 05              BEQ GETBYT1     YES, SKIP
2401                   *
2402  2DF3- 20 D1 2D           JSR GETNEWR     NO, GET NEW RECORD
2403  2DF6- D0 0C              BNE EXIT
2404                   *
2405  2DF8- 20 86 20   GETBYT1 JSR CPOINT      COMPUTE BUFFER PNT
2406  2DFB- AC 33 03           LDY SAVRST      RESTORE LOW POINTER
2407  2DFE- B1 FA             LDA (POINT),Y   GET THE BYTE
2408  2E00- A0 00              LDY =0
2409  2E02- 84 DB              STY FILERR      OK
2410  2E04- 60         EXIT    RTS
2411                   *
2412                   * PUTBYTE: PUT ONE BYTE TO FILE
2413                   *******************************
2414                   *
2415                   * ENTRY: BYTE STORED IN KCHAR
2416                   *        FILE NUMBER IN X
2417                   *        POINTER IN A(LOW) AND Y(HIGH)
2418                   * EXIT:  FILERR IN Y AND STATUS
2419                   *
2420  2E05- 8D 33 03   PUTBYTE STA SAVRST
2421  2E08- 20 34 2E           JSR TESTRA
2422  2E0B- BD 39 03           LDA FIDRTB,X    IS WRITE ALLOWED?
2423  2E0E- 30 05              BMI PUTBYT0     YES,SKIP
2424  2E10- A0 29              LDY =$29        WRITE NOT ALLOWED
2425  2E12- 84 DB              STY FILERR

----------------------------------------------------------------------

R65 PASCAL: RANDOM ACCESS          17/11/23   R65 ASSEMBLER  PAGE 52

2426  2E14- 60                 RTS
2427                   *
2428  2E15- 98         PUTBYT0 TYA             FOR COMMENTS
2429  2E16- DD 51 03           CMP FIRCTB,X    SEE GETBYTE
2430  2E19- F0 05              BEQ PUTBYT1
2431                   *
2432  2E1B- 20 D1 2D           JSR GETNEWR
2433  2E1E- D0 E4              BNE EXIT
2434                   *
2435  2E20- 20 86 20   PUTBYT1 JSR CPOINT
2436  2E23- A9 80              LDA =$80        SET UPDATED FLAG
2437  2E25- 9D 49 03           STA FIBPTB,X
2438  2E28- AC 33 03           LDY SAVRST
2439  2E2B- A5 FE              LDA KCHAR       GET BACK KCHAR
2440  2E2D- 91 FA              STA (POINT),Y
2441  2E2F- A0 00              LDY =0
2442  2E31- 84 DB              STY FILERR
2443  2E33- 60                 RTS
2444                   *
2445                   *
2446                   * TESTRA: TEST X FOR LEGAL RA-FILE
2447                   *
2448  2E34- 8E 35 03   TESTRA  STX CURSEQ
2449  2E37- EC 36 03           CPX MAXSEQ
2450  2E3A- B0 0A              BCS TESTRA2
2451                   *
2452  2E3C- BD 39 03   TESTRA1 LDA FIDRTB,X
2453  2E3F- 29 60              AND =$60
2454  2E41- C9 60              CMP =$60
2455  2E43- D0 03              BNE TESTRA3     SKIP, IF NOT OK
2456  2E45- 60                 RTS
2457                   *
2458  2E46- F0 F4      TESTRA2 BEQ TESTRA1
2459  2E48- 68         TESTRA3 PLA
2460  2E49- 68                 PLA
2461  2E4A- A0 25              LDY =$25        FILE NUMBER NOT ALLOWED
2462  2E4C- 84 DB              STY FILERR
2463  2E4E- 60                 RTS
2464                   *
2465                   * CLOSRA: CLOSE RA OR SEQUENTIAL FILE IN X
2466                   ******************************************
2467                   * ENTRY: FILE IN X
2468                   * EXIT: FILERR IN Y AND STATUS
2469                   *
2470  2E4F- BD 39 03   CLOSRA  LDA FIDRTB,X
2471  2E52- 29 40              AND =$40        SEQUENTIAL FILE?
2472  2E54- D0 03              BNE CLOSRA1     NO, SKIP
2473  2E56- 4C 8F 20           JMP CLOSE       YES, CLOSE IT
2474                   *
2475  2E59- 20 34 2E   CLOSRA1 JSR TESTRA      MUST BE RA-FILE

----------------------------------------------------------------------

R65 PASCAL: RANDOM ACCESS          17/11/23   R65 ASSEMBLER  PAGE 53

2476  2E5C- BD 49 03           LDA FIBPTB,X    UPDATED?
2477  2E5F- F0 05              BEQ CLOSRA2     NO, SKIP
2478                   *
2479  2E61- 20 C0 2D           JSR PUTTREC
2480  2E64- D0 0B              BNE CLOSRA3
2481                   *
2482  2E66- AE 35 03   CLOSRA2 LDX CURSEQ
2483  2E69- A9 00              LDA =0
2484  2E6B- 9D 39 03           STA FIDRTB,X    CLOSE IT
2485  2E6E- A8                 TAY
2486  2E6F- 84 DB              STY FILERR
2487  2E71- 60         CLOSRA3 RTS
2488                   *
2489                   ENDCODE EQU *
2490                   *
2491                           TIT R65 PASCAL: LABELS
2492                   *
2493  2E72-                    END
LABELS=0166
ERRORS=00
RECORDS=7C
