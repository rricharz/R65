

----------------------------------------------------------------------

R65 PASCAL: LABELS                 10/11/23   R65 ASSEMBLER  PAGE 01

0001                    *
0002                   *       **********************
0003                   *       * R65 PASCAL RUNTIME *
0004                   *       **********************
0005                   *
0006                   * VERSION 5.3   01/06/82 RRICHARZ,RBAUMANN
0007                   * IMPROVED 2019-2023 RRICHARZ
0008                   * VERSION 5.54  STOP CLOSES ALL OPEN FILES
0009                   *
0010                           TIT R65 PASCAL RUNTIME
0011                   *
0012                   * INCLUDES RANDOM ACCESS FILE HANDLING,
0013                   * FLOATING POINT MATH, FILE HANDLING ERROR
0014                   * TESTING (OPTIONAL) AND CPNT POINTERS
0015                   *
0016                           ORG 0
0017                   *
0018  0000-            ACCU    BSS 4   TOP OF STACKELEMENT
0019                   X1      EQU ACCU        FLP ACCU
0020                   M1      EQU ACCU+1
0021  0004-            E       BSS 4   FLP SCRATCH REGISTER
0022  0008-            SP      BSS 2   CURRENT STACK (-128)
0023  000A-            PC      BSS 2   PROGRAM COUNTER
0024  000C-            RUNERR  BSS 1   RUNTIME ERROR CODE
0025  000D-            DEVICE  BSS 1   I/O DEVICE CODE
0026  000E-            ENDSTK  BSS 2   END OF STACK (-128)
0027  0010-            SIGN    BSS 1   TEMPORARY SIGN
0028  0011-            STPROG  BSS 2   START OF USER PROGRAM
0029  0013-            EOPROG  BSS 2   END OF USER PROGRAM
0030  0015-            BUFFPN  BSS 1   INPUT BUFFER POINTER
0031  0016-            ENDBUF  BSS 1   END OF INPUT BUFFER
0032  0017-            BASE    BSS 2   CURRENT BASE (-128)
0033  0019-            ABASE   BSS 2   ALTERNATE BASE (-128)
0034  001B-            ARG1    BSS 2   TEMPORARY ARGUMENT
0035  001D-            ARG3    BSS 4   TEMPORARY REGISTERS
0036  0021-            ARG2    BSS 2
0037                   X2      EQU ARG1        FLP REGISTER
0038                   M2      EQU ARG1+1
0039  0023-            IOCHECK BSS 1   IO ERROR CHECKING FLAG
0040  0024-            LINBUF  BSS 56  INPUT LINE BUFFER
0041                   *
0042                   FILFLG  EQU $DA
0043                   FILERR  EQU $DB
0044                   FILDRV  EQU $DC
0045                   TRACK   EQU $DD
0046                   SECTOR  EQU $DE
0047                   DATA    EQU $E0
0048                   VIDPNT  EQU $E9
0049                   POINT   EQU $FA
0050                   KCHAR   EQU $FE

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 10/11/23   R65 ASSEMBLER  PAGE 01

0051                   *
0052                   EMUCOM  EQU $1430       EMULATOR COMMAND REG
0053                   MULTA   EQU $14E0
0054                   MULTB   EQU $14E1
0055                   MULTR   EQU $14E2
0056                   *
0057                   FILTYP  EQU $0300
0058                   FILNAM  EQU $0301
0059                   FILCYC  EQU $0311
0060                   FILSTP  EQU $0312
0061                   FILLOC  EQU $0313
0062                   FILSIZ  EQU $0315
0063                   FILSA   EQU $031A
0064                   FILEA   EQU $031C
0065                   FILNM1  EQU $0320
0066                   FILCY1  EQU $0330
0067                   FILSA1  EQU $0331
0068                   SAVRST  EQU $0333
0069                   CURSEQ  EQU $0335
0070                   MAXSEQ  EQU $0336
0071                   MAXSIZ  EQU $0337
0072                   FIDRTB  EQU $0339
0073                   FIDVTB  EQU $0341
0074                   FIBPTB  EQU $0349
0075                   FIRCTB  EQU $0351
0076                   GRX     EQU $03AE
0077                   GRY     EQU $03AF
0078                   GRC     EQU $03B0
0079                   SFLAG   EQU $1781
0080                   NUMCHR  EQU $178A
0081                   VMON    EQU $17D5
0082                   SAVS    EQU $17FF
0083                   *
0084                   APLOTCH EQU $C818
0085                   GETKEY  EQU $E000
0086                   AUTOPR  EQU $E00C
0087                   ENDLIN  EQU $E024
0088                   PRTINF  EQU $E027
0089                   GETCHR  EQU $E003
0090                   GETLIN  EQU $E006
0091                   PRTCHR  EQU $E009
0092                   PRTBYT  EQU $E02D
0093                   PRTAX   EQU $E030
0094                   PRTRSA  EQU $E836
0095                   RDFILE  EQU $E815
0096                   SETFID  EQU $E81E
0097                   OPEN    EQU $F00F
0098                   READCH  EQU $F018
0099                   WRITCH  EQU $F01B
0100                   GETNAM  EQU $F815

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 10/11/23   R65 ASSEMBLER  PAGE 02

0101                   *
0102  005C-                    ORG $2000
0103                   *
0104                           PAG

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 10/11/23   R65 ASSEMBLER  PAGE 03

0105                   *
0106                   * ENTRY VECTORS
0107                   *
0108  2000- 4C 89 2B           JMP COLDST      COLD START ENTRY VECTOR
0109  2003- 4C F5 29           JMP WARMST      WARM START ENTRY VECTOR
0110  2006- 4C A6 29           JMP PERROR      PASCAL ERROR
0111                   *
0112  2009- 45 2E      USERST  WRD ENDCODE+32
0113  200B- FF C7      USEREND WRD $C7FF
0114                   *
0115  200D- 4C F2 FC   HARGUM  JMP $FCF2       #######
0116                   *
0117                   *
0118                   * P-CODE 00:  STOP      (END OF EXECUTION)
0119                   ******************
0120                   * NO ARGUMENTS
0121                   *
0122  2010- A9 2F      STOP    LDA =47
0123  2012- 8D 8A 17           STA NUMCHR      FORCE 48 CHARS/LINE
0124  2015- 20 8C 20           JSR CLOSAL      CLOSE ALL OPEN FILES
0125  2018- A5 11              LDA STPROG      IS ANOTHER PROGRAM
0126  201A- A6 12              LDX STPROG+1    RUNNING?
0127  201C- CD 09 20           CMP USERST
0128  201F- D0 20              BNE STOP1
0129  2021- EC 0A 20           CPX USERST+1
0130  2024- D0 1B              BNE STOP1
0131                   *
0132  2026- 20 27 E0           JSR PRTINF      NO, STOP PASCAL
0133  2029- 0D 0A 51           BYT $0D,$0A,'Quit Pascal'+$80
0133  202C- 75 69 74 
0133  202F- 20 50 61 
0133  2032- 73 63 61 
0133  2035- EC 
0134  2036- AD 81 17           LDA SFLAG
0135  2039- 29 FE              AND =$FE        CLEAR PASCAL RUNTIME BIT
0136  203B- 8D 81 17           STA SFLAG       IN SFLAG
0137  203E- 6C D5 17           JMP (VMON)
0138                   *
0139  2041- 38         STOP1   SEC             YES, COMPUTE OLD SP
0140  2042- E9 8C              SBC =140
0141  2044- B0 01              BCS *+3
0142  2046- CA                 DEX
0143  2047- 85 08              STA SP
0144  2049- 86 09              STX SP+1
0145  204B- A0 8C              LDY =140
0146  204D- 20 69 27           JSR GETBACK
0147  2050- 85 13              STA EOPROG
0148  2052- 86 14              STX EOPROG+1
0149  2054- 20 69 27           JSR GETBACK
0150  2057- 85 11              STA STPROG

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 10/11/23   R65 ASSEMBLER  PAGE 04

0151  2059- 86 12              STX STPROG+1
0152  205B- 20 69 27           JSR GETBACK
0153  205E- 85 0A              STA PC
0154  2060- 86 0B              STX PC+1
0155  2062- 20 69 27           JSR GETBACK
0156  2065- 85 17              STA BASE
0157  2067- 86 18              STX BASE+1
0158  2069- 20 69 27           JSR GETBACK
0159  206C- 85 00              STA ACCU
0160  206E- 86 01              STX ACCU+1
0161  2070- AE FF 17           LDX SAVS        RESTORE STACK POINTER
0162  2073- 9A                 TXS
0163  2074- 4C 8E 2A           JMP LOOP
0164                   *
0165                   *
0166  2077- 4C FF F0   DOPEN1  JMP $F0FF
0167  207A- 4C 45 F1   DOPEN4  JMP $F145
0168  207D- 4C 51 F1   PRFLB1  JMP $F151
0169  2080- 4C 59 F1   CPOINT  JMP $F159
0170  2083- 4C E0 F1   PREPSR  JMP $F1E0
0171  2086- 4C 9E F2   PREPSR1 JMP $F29E
0172  2089- 4C 12 F0   CLOSE   JMP $F012
0173  208C- 4C 15 F0   CLOSAL  JMP $F015
0174  208F- 4C 57 F4   READ    JMP $F457
0175  2092- 4C 25 F4   WRITE   JMP $F425
0176  2095- 4C A7 F4   PREPDO  JMP $F4A7
0177  2098- 4C FD F5   DISCER1 JMP $F5FD
0178  209B- 4C 25 F6   ENDDO   JMP $F625
0179  209E- 4C 2C F6   PREPRD  JMP $F62C
0180  20A1- 4C 51 F6   PREPWRA JMP $F651
0181  20A4- 4C 6D F6   PREPWRB JMP $F66D
0182                   *
0183                   *
0184                   * P-CODE 01: RETN       (RETURN FROM PROCEDURE
0185                   *****************
0186                   * NO ARGUMENTS
0187                   *
0188  20A7- A5 17      RETN    LDA BASE        SP=BASE-2
0189  20A9- 38                 SEC
0190  20AA- E9 02              SBC =2
0191  20AC- 85 08              STA SP
0192  20AE- A5 18              LDA BASE+1
0193  20B0- E9 00              SBC =0
0194  20B2- 85 09              STA SP+1
0195  20B4- A0 80              LDY =128        GET STACK TOP ELEMENT
0196  20B6- B1 08              LDA (SP),Y
0197  20B8- 85 00              STA ACCU
0198  20BA- C8                 INY
0199  20BB- B1 08              LDA (SP),Y
0200  20BD- 85 01              STA ACCU+1

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 10/11/23   R65 ASSEMBLER  PAGE 05

0201  20BF- A0 84              LDY =132
0202  20C1- B1 08              LDA (SP),Y      GET SAVED OLD BASE
0203  20C3- 85 17              STA BASE
0204  20C5- C8                 INY
0205  20C6- B1 08              LDA (SP),Y
0206  20C8- 85 18              STA BASE+1
0207  20CA- C8                 INY
0208  20CB- B1 08              LDA (SP),Y      AND RETURN ADDRESS
0209  20CD- 18                 CLC
0210  20CE- 69 02              ADC =2
0211  20D0- 85 0A              STA PC
0212  20D2- C8                 INY
0213  20D3- B1 08              LDA (SP),Y
0214  20D5- 69 00              ADC =0
0215  20D7- 85 0B              STA PC+1
0216  20D9- 60                 RTS
0217                   *
0218                   * P-CODE 02: NEGA       (NEGATE ACCU)
0219                   *****************
0220                   * NO ARGUMENTS
0221                   *
0222  20DA- A9 00      NEGA    LDA =0
0223  20DC- 38                 SEC
0224  20DD- E5 00              SBC ACCU
0225  20DF- 85 00              STA ACCU
0226  20E1- A9 00              LDA =0
0227  20E3- E5 01              SBC ACCU+1
0228  20E5- 85 01              STA ACCU+1
0229  20E7- 60                 RTS
0230                   *
0231                   * P-CODE 03: ADDA       (ADD)
0232                   *****************
0233                   * NO ARGUMENTS
0234                   *
0235  20E8- A0 7E      ADDA    LDY =126
0236  20EA- 18                 CLC
0237  20EB- B1 08              LDA (SP),Y
0238  20ED- 65 00              ADC ACCU
0239  20EF- 85 00              STA ACCU
0240  20F1- C8                 INY
0241  20F2- B1 08              LDA (SP),Y
0242  20F4- 65 01              ADC ACCU+1
0243  20F6- 85 01              STA ACCU+1
0244                   *
0245  20F8- A5 08      DECS2   LDA SP
0246  20FA- 38                 SEC
0247  20FB- E9 02              SBC =2
0248  20FD- 85 08              STA SP
0249  20FF- B0 02             BCS *+4
0250  2101- C6 09              DEC SP+1

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 10/11/23   R65 ASSEMBLER  PAGE 06

0251  2103- 60                 RTS
0252                   *
0253                   * P-CODE 04: SUBA       (SUBTRACT)
0254                   *****************
0255                   * NO ARGUMENTS
0256                   *
0257  2104- A0 7E      SUBA    LDY =126
0258  2106- 38                 SEC
0259  2107- B1 08              LDA (SP),Y
0260  2109- E5 00              SBC ACCU
0261  210B- 85 00              STA ACCU
0262  210D- C8                 INY
0263  210E- B1 08              LDA (SP),Y
0264  2110- E5 01              SBC ACCU+1
0265  2112- 85 01              STA ACCU+1
0266  2114- 4C F8 20           JMP DECS2
0267                   *
0268                   * P-CODE 05: MULA       (MULTIPLY)
0269                   *****************
0270                   * NO ARGUMENTS
0271                   *
0272  2117- 20 51 21   MULA    JSR GETSIGN     COMPUTE SIGN OF RESULT
0273  211A- A5 00              LDA ACCU
0274  211C- 78                 SEI
0275  211D- 8D E0 14           STA MULTA
0276  2120- A5 1B              LDA ARG1        GET SAVED ARGUMENT
0277  2122- 8D E1 14           STA MULTB
0278  2125- AD E2 14           LDA MULTR
0279  2128- 85 00              STA ACCU
0280  212A- AD E3 14           LDA MULTR+1
0281  212D- A6 1C              LDX ARG1+1
0282  212F- 8E E1 14           STX MULTB
0283  2132- 18                 CLC
0284  2133- 6D E2 14           ADC MULTR
0285  2136- A6 01              LDX ACCU+1
0286  2138- 8E E0 14           STX MULTA
0287  213B- A6 1B              LDX ARG1
0288  213D- 8E E1 14           STX MULTB
0289  2140- 18                 CLC
0290  2141- 6D E2 14           ADC MULTR
0291  2144- 58                 CLI
0292  2145- 29 7F              AND =$7F
0293  2147- 85 01              STA ACCU+1
0294  2149- 20 F8 20           JSR DECS2
0295  214C- A5 10              LDA SIGN
0296  214E- 30 8A              BMI NEGA
0297  2150- 60                 RTS
0298                   *
0299  2151- A5 01      GETSIGN LDA ACCU+1
0300  2153- 85 10              STA SIGN

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 10/11/23   R65 ASSEMBLER  PAGE 07

0301  2155- 10 03              BPL *+5
0302  2157- 20 DA 20           JSR NEGA
0303                   *
0304  215A- A0 7F              LDY =127
0305  215C- B1 08              LDA (SP),Y
0306  215E- 10 14              BPL GETSI1
0307  2160- 45 10              EOR SIGN
0308  2162- 85 10              STA SIGN
0309  2164- 88                 DEY
0310  2165- A9 00              LDA =0
0311  2167- 38                 SEC
0312  2168- F1 08              SBC (SP),Y
0313  216A- 85 1B              STA ARG1
0314  216C- C8                 INY
0315  216D- A9 00              LDA =0
0316  216F- F1 08              SBC (SP),Y
0317  2171- 85 1C              STA ARG1+1
0318  2173- 60                 RTS
0319                   *
0320  2174- 85 1C      GETSI1  STA ARG1+1
0321  2176- 88                 DEY
0322  2177- B1 08              LDA (SP),Y
0323  2179- 85 1B              STA ARG1
0324  217B- 60                 RTS
0325                   *
0326                   * PCODE 06: DIVA        (DIVIDE)
0327                   ****************
0328                   *
0329  217C- A0 7E      DIVA    LDY =126
0330  217E- B1 08              LDA (SP),Y
0331  2180- 85 1B              STA ARG1
0332  2182- C8                 INY
0333  2183- B1 08              LDA (SP),Y
0334  2185- 85 1C              STA ARG1+1
0335  2187- 20 F8 20           JSR DECS2
0336                   *
0337  218A- A5 1C              LDA ARG1+1
0338  218C- 29 80              AND =$80
0339  218E- F0 02              BEQ *+4
0340  2190- A9 FF              LDA =$FF
0341  2192- 85 21              STA ARG2
0342  2194- 85 22              STA ARG2+1
0343  2196- AA                 TAX
0344  2197- 18                 CLC
0345  2198- 65 1B              ADC ARG1
0346  219A- 85 1B              STA ARG1
0347  219C- 8A                 TXA
0348  219D- 65 1C              ADC ARG1+1
0349  219F- 85 1C              STA ARG1+1
0350  21A1- 8A                 TXA

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 10/11/23   R65 ASSEMBLER  PAGE 08

0351  21A2- 45 01              EOR ACCU+1
0352  21A4- 85 10              STA SIGN
0353  21A6- 10 03              BPL *+5
0354  21A8- 20 DA 20           JSR NEGA
0355  21AB- A0 11              LDY =$11
0356  21AD- A5 00              LDA ACCU
0357  21AF- 05 01              ORA ACCU+1
0358  21B1- D0 05              BNE DIV1
0359  21B3- A2 81              LDX =$81        PASCAL RUNTIME ERROR
0360  21B5- 4C A6 29           JMP PERROR      DIVISION BY ZERO
0361                   *
0362  21B8- 38         DIV1    SEC
0363  21B9- A5 21              LDA ARG2
0364  21BB- E5 00              SBC ACCU
0365  21BD- 48                 PHA
0366  21BE- A5 22              LDA ARG2+1
0367  21C0- E5 01              SBC ACCU+1
0368  21C2- 48                 PHA
0369  21C3- 45 22              EOR ARG2+1
0370  21C5- 30 09              BMI DIV2
0371  21C7- 68                 PLA
0372  21C8- 85 22              STA ARG2+1
0373  21CA- 68                 PLA
0374  21CB- 85 21              STA ARG2
0375  21CD- 38                 SEC
0376  21CE- B0 03              BCS DIV3
0377                   *
0378  21D0- 68         DIV2    PLA
0379  21D1- 68                 PLA
0380  21D2- 18                 CLC
0381  21D3- 26 1B      DIV3    ROL ARG1
0382  21D5- 26 1C              ROL ARG1+1
0383  21D7- 26 21              ROL ARG2
0384  21D9- 26 22              ROL ARG2+1
0385  21DB- 88                 DEY
0386  21DC- D0 DA              BNE DIV1
0387  21DE- A5 1B              LDA ARG1
0388  21E0- A6 1C              LDX ARG1+1
0389  21E2- 85 00              STA ACCU
0390  21E4- 86 01              STX ACCU+1
0391  21E6- A5 10              LDA SIGN
0392  21E8- 10 03              BPL *+5
0393  21EA- 4C DA 20           JMP NEGA
0394  21ED- 60                 RTS
0395                   *
0396                   * P-CODE 07: LOWB       (LOW BIT)
0397                   *****************
0398                   * NO ARGUMENTS
0399                   *
0400  21EE- A5 00      LOWB    LDA ACCU

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 10/11/23   R65 ASSEMBLER  PAGE 09

0401  21F0- 29 01              AND =1
0402  21F2- 85 00      LOWB1   STA ACCU
0403  21F4- A9 00              LDA =0
0404  21F6- 85 01              STA ACCU+1
0405  21F8- 60                 RTS
0406                   *
0407                   * P-CODE 08: TEQU       (TEST EQUAL)
0408                   *****************
0409                   *
0410  21F9- 20 04 21   TEQU    JSR SUBA
0411  21FC- A5 00              LDA ACCU
0412  21FE- 05 01             ORA ACCU+1
0413  2200- F0 04              BEQ TEQU1
0414  2202- A9 00              LDA =0
0415  2204- F0 EC              BEQ LOWB1       UNCOND.
0416                   *
0417  2206- A9 01      TEQU1   LDA =1
0418  2208- D0 E8              BNE LOWB1       UNCOND.
0419                   *
0420                   * PCODE 09: TNEQ        (TEST NOT EQUAL)
0421                   ****************
0422                   *
0423  220A- 20 F9 21   TNEQ    JSR TEQU
0424  220D- A5 00              LDA ACCU
0425  220F- 49 01              EOR =1
0426  2211- 85 00              STA ACCU
0427  2213- 60                 RTS
0428                   *
0429                   * P-CODE 0A: TLES       (TEST LESS)
0430                   *****************
0431                   *
0432  2214- 20 04 21   TLES    JSR SUBA
0433  2217- A9 00              LDA =0
0434  2219- 06 01              ASL ACCU+1
0435  221B- 2A                 ROL A
0436  221C- 90 D4              BCC LOWB1       UNCOND.
0437                   *
0438                   * P-CODE 0B: TGRE       (TEST GREATER OR EQUAL)
0439                   *****************
0440                   *
0441  221E- 20 14 22   TGRE    JSR TLES
0442  2221- 4C 0D 22           JMP TNEQ+3
0443                   *
0444                   * P-CODE 0C: TGRTS      (TEST GREATER)
0445                   ******************
0446                   *
0447  2224- 20 F9 26   TGRT    JSR EXST
0448  2227- 4C 14 22           JMP TLES
0449                   *
0450                   * P-CODE 0D: TLEE       (TEST LESS OR EQUAL)

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 10/11/23   R65 ASSEMBLER  PAGE 10

0451                   *****************
0452                   *
0453  222A- 20 24 22   TLEE    JSR TGRT
0454  222D- 4C 0D 22           JMP TNEQ+3
0455                   *
0456                   * P-CODE 0E: ORAC       (BITWISE OR)
0457                   *****************
0458                   *
0459  2230- A0 7E      ORAC    LDY =126
0460  2232- B1 08              LDA (SP),Y
0461  2234- 05 00              ORA ACCU
0462  2236- 85 00              STA ACCU
0463  2238- C8                 INY
0464  2239- B1 08              LDA (SP),Y
0465  223B- 05 01              ORA ACCU+1
0466  223D- 85 01              STA ACCU+1
0467  223F- 4C F8 20           JMP DECS2
0468                   *
0469                   * P-CODE 0F: ANDA       (BITWISE AND)
0470                   *****************
0471                   *
0472  2242- A0 7E      ANDA    LDY =126
0473  2244- B1 08              LDA (SP),Y
0474  2246- 25 00              AND ACCU
0475  2248- 85 00              STA ACCU
0476  224A- C8                 INY
0477  224B- B1 08              LDA (SP),Y
0478  224D- 25 01              AND ACCU+1
0479  224F- 85 01              STA ACCU+1
0480  2251- 4C F8 20           JMP DECS2
0481                   *
0482                   * PCODE 10: EORA        (BITWISE OR)
0483                   ****************
0484                   *
0485  2254- A0 7E      EORA    LDY =126
0486  2256- B1 08              LDA (SP),Y
0487  2258- 45 00              EOR ACCU
0488  225A- 85 00              STA ACCU
0489  225C- C8                 INY
0490  225D- B1 08              LDA (SP),Y
0491  225F- 45 01              EOR ACCU+1
0492  2261- 85 01              STA ACCU+1
0493  2263- 4C F8 20           JMP DECS2
0494                   *
0495                   * P-CODE 11: NOTA       (BITWISE NOT)
0496                   *****************
0497                   *
0498  2266- A5 00      NOTA    LDA ACCU
0499  2268- 49 FF              EOR =$FF
0500  226A- 85 00              STA ACCU

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 10/11/23   R65 ASSEMBLER  PAGE 11

0501  226C- A5 01              LDA ACCU+1
0502  226E- 49 FF              EOR =$FF
0503  2270- 85 01              STA ACCU+1
0504  2272- 60                 RTS
0505                   *
0506                   * P-CODE 12: LEFT       (SHIFT LEFT N BYTES)
0507                   *****************
0508                   *
0509  2273- 20 DA 20           JSR NEGA
0510  2276- A5 01      LEFT    LDA ACCU+1
0511  2278- 30 12              BMI RIGH-3      ARGUMENT NEGATIVE
0512                   *
0513  227A- A6 00              LDX ACCU
0514  227C- F0 0B              BEQ LEFT2       TAKE ONLY LOW BYTE
0515  227E- 20 E9 22           JSR GETS2       GET SECOND NO FROM ST
0516  2281- 06 00      LEFT1   ASL ACCU
0517  2283- 26 01              ROL ACCU+1
0518  2285- CA                 DEX
0519  2286- D0 F9              BNE LEFT1
0520  2288- 60                 RTS
0521                   *
0522  2289- 4C E9 22   LEFT2   JMP GETS2
0523                   *
0524                   * P-CODE 13: RIGH       (SHIFT RIGHT N BYTES)
0525                   *****************
0526                   *
0527  228C- 20 DA 20           JSR NEGA
0528  228F- A5 01      RIGH    LDA ACCU+1
0529  2291- 30 E0              BMI LEFT-3
0530  2293- A6 00              LDX ACCU
0531  2295- F0 F2              BEQ LEFT2
0532  2297- 20 E9 22           JSR GETS2
0533  229A- 46 01      RIGH1   LSR ACCU+1
0534  229C- A9 00              LDA =0
0535  229E- 90 02              BCC *+4
0536  22A0- A9 80              LDA =128
0537  22A2- 46 00              LSR ACCU
0538  22A4- 05 00              ORA ACCU
0539  22A6- 85 00              STA ACCU
0540  22A8- CA                 DEX
0541  22A9- D0 EF              BNE RIGH1
0542  22AB- 60                 RTS
0543                   *
0544                   * P-CODE 14:INCA        (INCREMENT ACCU)
0545                   ****************
0546                   *
0547  22AC- E6 00      INCA    INC ACCU
0548  22AE- D0 02              BNE *+4
0549  22B0- E6 01              INC ACCU+1
0550  22B2- 60                 RTS

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 10/11/23   R65 ASSEMBLER  PAGE 12

0551                   *
0552                   * P-CODE 15: DECA       (DECREMENT ACCU)
0553                   *****************
0554                   *
0555  22B3- A5 00      DECA    LDA ACCU
0556  22B5- D0 02              BNE *+4
0557  22B7- C6 01              DEC ACCU+1
0558  22B9- C6 00              DEC ACCU
0559  22BB- 60                 RTS
0560                   *
0561                   * P-CODE 16: COPY       (COPY ACCU0
0562                   *****************
0563                   *
0564  22BC- 20 CB 22   COPY    JSR INCS2       INCREMENT STACK
0565  22BF- A0 7E              LDY =126
0566  22C1- A5 00              LDA ACCU
0567  22C3- 91 08              STA (SP),Y
0568  22C5- C8                 INY
0569  22C6- A5 01              LDA ACCU+1
0570  22C8- 91 08              STA (SP),Y
0571  22CA- 60                 RTS
0572                   *
0573  22CB- A9 02      INCS2   LDA =2
0574  22CD- 18                 CLC
0575  22CE- 65 08              ADC SP
0576  22D0- 85 08              STA SP
0577  22D2- 90 02              BCC *+4
0578  22D4- E6 09              INC SP+1
0579  22D6- C5 0E      INCS2A  CMP ENDSTK      TEST STACK OVERFLOW
0580  22D8- A5 09              LDA SP+1
0581  22DA- E5 0F              SBC ENDSTK+1
0582  22DC- B0 06              BCS INCS2B
0583  22DE- A9 05              LDA =5          LET EMULATOR KNOW THAT
0584  22E0- 8D 30 14           STA EMUCOM      SP HAS BEEN INCREASED
0585  22E3- 60                 RTS
0586                   *
0587  22E4- A0 82      INCS2B  LDY =$82        PASCAL RUN TIME ERROR
0588  22E6- 4C A6 29           JMP PERROR      STACK OVERFLOW
0589                   *
0590                   * GETS2
0591                   *
0592  22E9- A0 7E      GETS2   LDY =126
0593  22EB- B1 08              LDA (SP),Y
0594  22ED- 85 00              STA ACCU
0595  22EF- C8                 INY
0596  22F0- B1 08              LDA (SP),Y
0597  22F2- 85 01              STA ACCU+1
0598  22F4- 4C F8 20           JMP DECS2
0599                   *
0600                   * P-CODE 17: PEEK

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 10/11/23   R65 ASSEMBLER  PAGE 13

0601                   *****************
0602                   *
0603  22F7- A0 00      PEEK    LDY =0
0604  22F9- B1 00              LDA (ACCU),Y
0605  22FB- 85 00              STA ACCU
0606  22FD- 84 01              STY ACCU+1
0607  22FF- 60                RTS
0608                   *
0609                   * P-CODE 18: POKE
0610                   *****************
0611                   *
0612  2300- A6 00      POKE    LDX ACCU
0613  2302- 20 E9 22           JSR GETS2
0614  2305- A0 00              LDY =0
0615  2307- 8A                 TXA
0616  2308- 91 00              STA (ACCU),Y
0617  230A- 4C E9 22           JMP GETS2
0618                   *
0619                   * P-CODE 19: CALA
0620                   *****************
0621                   *
0622  230D- 20 13 23   CALA    JSR CALA1
0623  2310- 4C E9 22           JMP GETS2
0624                   *
0625  2313- 6C 00 00   CALA1   JMP (ACCU)
0626                   *
0627                   * P-CODE 1A: RLIN
0628                   *****************
0629                   *
0630  2316- 20 06 E0   RLIN    JSR GETLIN
0631  2319- A2 00              LDX =0
0632  231B- B1 E9              LDA (VIDPNT),Y
0633  231D- 29 7F              AND =$7F
0634  231F- 95 24              STA LINBUF,X
0635  2321- E8                 INX
0636  2322- C8                 INY
0637  2323- CC 8A 17           CPY NUMCHR
0638  2326- 90 F3              BCC *-11
0639  2328- F0 F1              BEQ *-13
0640  232A- CA                 DEX
0641  232B- 30 06              BMI *+8
0642  232D- B5 24              LDA LINBUF,X
0643  232F- C9 20              CMP =$20
0644  2331- F0 F7              BEQ *-7
0645  2333- E8                 INX
0646  2334- 86 16              STX ENDBUF
0647  2336- A9 00              LDA =0
0648  2338- 85 15              STA BUFFPN
0649  233A- 20 27 E0           JSR PRTINF
0650  233D- 0D 8A              BYT $D,$8A

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 10/11/23   R65 ASSEMBLER  PAGE 14

0651  233F- 60                 RTS
0652                   *
0653                   * P-CODE 1B: GETC
0654                   *****************
0655                   *
0656  2340- 20 BC 22   GETC    JSR COPY
0657  2343- 20 3B 29           JSR GETCHR0
0658  2346- 85 00      GETC1   STA ACCU
0659  2348- A9 00              LDA =0
0660  234A- 85 01              STA ACCU+1
0661  234C- 60                 RTS
0662                   *
0663                   * P-CODE 1C: GETN
0664                   *****************
0665                   *
0666  234D- 20 BC 22   GETN    JSR COPY
0667  2350- A9 00              LDA =0
0668  2352- 85 00              STA ACCU
0669  2354- 85 01              STA ACCU+1
0670  2356- 85 10              STA SIGN
0671  2358- 20 3B 29   GETN0   JSR GETCHR0
0672  235B- C9 20              CMP =' '
0673  235D- F0 F9              BEQ GETN0
0674  235F- C9 2D              CMP ='-'
0675  2361- D0 05              BNE GETN1
0676                   *
0677  2363- C6 10              DEC SIGN
0678  2365- 4C 6C 23           JMP GETN2
0679                   *
0680  2368- C9 2B      GETN1    CMP ='+'
0681  236A- D0 03              BNE GETN2+3
0682                   *
0683  236C- 20 3B 29   GETN2   JSR GETCHR0
0684  236F- C9 30              CMP ='0'
0685  2371- 90 2F              BCC GETN3
0686  2373- C9 3A              CMP ='9'+1
0687  2375- B0 2B              BCS GETN3
0688  2377- 38                 SEC
0689  2378- E9 30              SBC ='0'
0690  237A- 48                 PHA
0691  237B- 06 00              ASL ACCU
0692  237D- 26 01              ROL ACCU+1
0693  237F- A6 00              LDX ACCU
0694  2381- A4 01              LDY ACCU+1
0695  2383- 06 00              ASL ACCU
0696  2385- 26 01              ROL ACCU+1
0697  2387- 06 00              ASL ACCU
0698  2389- 26 01              ROL ACCU+1
0699  238B- 18                 CLC
0700  238C- 8A                 TXA

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 10/11/23   R65 ASSEMBLER  PAGE 15

0701  238D- 65 00              ADC ACCU
0702  238F- 85 00              STA ACCU
0703  2391- 98                 TYA
0704  2392- 65 01              ADC ACCU+1
0705  2394- 85 01              STA ACCU+1
0706  2396- 68                 PLA
0707  2397- 18                 CLC
0708  2398- 65 00              ADC ACCU
0709  239A- 85 00              STA ACCU
0710  239C- 90 CE              BCC GETN2
0711  239E- E6 01              INC ACCU+1
0712  23A0- B0 CA              BCS GETN2
0713                   *
0714  23A2- A5 10      GETN3   LDA SIGN
0715  23A4- F0 03              BEQ *+5
0716  23A6- 4C DA 20           JMP NEGA
0717  23A9- 60                 RTS
0718                   *
0719                   * P-CODE 1D: PRTC
0720                   *****************
0721                   *
0722  23AA- A5 00      PRTC    LDA ACCU
0723  23AC- 20 6B 29           JSR PRTCHR0
0724  23AF- 4C E9 22           JMP GETS2
0725                   *
0726                   * P-CODE 1E: PRTN
0727                   *****************
0728                   *
0729  23B2- A5 01      PRTN    LDA ACCU+1
0730  23B4- 10 08              BPL PRTN1
0731  23B6- 20 DA 20           JSR NEGA
0732  23B9- A9 2D              LDA ='-'
0733  23BB- 20 6B 29           JSR PRTCHR0
0734                   *
0735  23BE- A5 00      PRTN1   LDA ACCU
0736  23C0- A6 01              LDX ACCU+1
0737  23C2- 85 21              STA ARG2
0738  23C4- 86 22              STX ARG2+1
0739  23C6- A9 1F              LDA =$1F
0740  23C8- 85 1D              STA ARG3
0741  23CA- 85 1F              STA ARG3+2
0742  23CC- A9 2A              LDA =$2A
0743  23CE- 85 1E              STA ARG3+1
0744  23D0- 85 20              STA ARG3+3
0745  23D2- A6 21              LDX ARG2
0746  23D4- A4 22              LDY ARG2+1
0747  23D6- 38                 SEC
0748  23D7- E6 1D      PRTN2   INC ARG3
0749  23D9- 8A                 TXA
0750  23DA- E9 10              SBC =$10

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 10/11/23   R65 ASSEMBLER  PAGE 16

0751  23DC- AA                 TAX
0752  23DD- 98                 TYA
0753  23DE- E9 27              SBC =$27
0754  23E0- A8                 TAY
0755  23E1- B0 F4              BCS PRTN2
0756  23E3- C6 1E      PRTN3   DEC ARG3+1
0757  23E5- 8A                 TXA
0758  23E6- 69 E8              ADC =$E8
0759  23E8- AA                 TAX
0760  23E9- 98                 TYA
0761  23EA- 69 03              ADC =$03
0762  23EC- A8                 TAY
0763  23ED- 90 F4              BCC PRTN3
0764  23EF- 8A                 TXA
0765  23F0- 38         PRTN4   SEC
0766  23F1- E6 1F      PRTN5   INC ARG3+2
0767  23F3- E9 64              SBC =$64
0768  23F5- B0 FA              BCS PRTN5
0769  23F7- 88                 DEY
0770  23F8- 10 F6              BPL PRTN4
0771  23FA- C6 20      PRTN6   DEC ARG3+3
0772  23FC- 69 0A              ADC =$A
0773  23FE- 90 FA             BCC PRTN6
0774  2400- 09 30              ORA =$30
0775  2402- 85 21              STA ARG2
0776  2404- A9 20              LDA =$20
0777  2406- 85 22              STA ARG2+1
0778  2408- A2 FB              LDX =$FB
0779  240A- 86 10      PRTN7   STX SIGN
0780  240C- B5 22              LDA ARG2+1,X
0781  240E- 05 22              ORA ARG2+1
0782  2410- C9 20              CMP =$20
0783  2412- F0 09              BEQ PRTN8
0784  2414- A0 30              LDY =$30
0785  2416- 84 22              STY ARG2+1
0786  2418- 05 22              ORA ARG2+1
0787  241A- 20 6B 29           JSR PRTCHR0
0788  241D- A6 10      PRTN8   LDX SIGN
0789  241F- E8                 INX
0790  2420- D0 E8              BNE PRTN7
0791  2422- 4C E9 22           JMP GETS2
0792                   *
0793                   * P-CODE 1F: PRTS
0794                   *****************
0795                   *
0796  2425- 06 00      PRTS    ASL ACCU
0797  2427- 26 01              ROL ACCU+1
0798  2429- A5 08              LDA SP
0799  242B- 38                 SEC
0800  242C- E5 00              SBC ACCU

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 10/11/23   R65 ASSEMBLER  PAGE 17

0801  242E- 85 00              STA ACCU
0802  2430- 48                 PHA
0803  2431- A5 09              LDA SP+1
0804  2433- E5 01              SBC ACCU+1
0805  2435- 85 01              STA ACCU+1
0806  2437- 48                 PHA
0807  2438- A0 80      OUTST1  LDY =128
0808  243A- B1 00              LDA (ACCU),Y
0809  243C- 20 6B 29           JSR PRTCHR0
0810  243F- A5 00              LDA ACCU
0811  2441- 18                 CLC
0812  2442- 69 02              ADC =2
0813  2444- 85 00              STA ACCU
0814  2446- 90 02              BCC *+4
0815  2448- E6 01              INC ACCU+1
0816  244A- C5 08              CMP SP
0817  244C- A5 01              LDA ACCU+1
0818  244E- E5 09              SBC SP+1
0819  2450- 90 E6              BCC OUTST1
0820  2452- 68                 PLA
0821  2453- 85 09              STA SP+1
0822  2455- 68                 PLA
0823  2456- 85 08              STA SP
0824  2458- 4C E9 22           JMP GETS2
0825                   *
0826                   * P-CODE 20: LITB
0827                   *****************
0828                   *
0829  245B- 20 BC 22   LITB    JSR COPY
0830  245E- 20 A5 24           JSR FETCH
0831  2461- 85 00              STA ACCU
0832  2463- A9 00              LDA =0
0833  2465- 85 01              STA ACCU+1
0834  2467- 60                 RTS
0835                   *
0836                   * P-CODE 21: INCB
0837                   *****************
0838                   *
0839  2468- A0 80      INCB    LDY =128        SAVE CURRENT ACCU
0840  246A- A5 00              LDA ACCU
0841  246C- 91 08              STA (SP),Y
0842  246E- C8                 INY
0843  246F- A5 01              LDA ACCU+1
0844  2471- 91 08              STA (SP),Y
0845  2473- 20 A5 24           JSR FETCH
0846  2476- A2 00              LDX =0
0847  2478- A8                 TAY             TEST A
0848  2479- 10 01              BPL *+3
0849  247B- CA                 DEX
0850  247C- 18                 CLC

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 10/11/23   R65 ASSEMBLER  PAGE 18

0851  247D- 65 08              ADC SP
0852  247F- 85 08              STA SP
0853  2481- 8A                 TXA
0854  2482- 65 09              ADC SP+1
0855  2484- 85 09              STA SP+1
0856  2486- A5 08      INCB1   LDA SP
0857  2488- 20 D6 22           JSR INCS2A      TEST STACK OVERFLOW
0858  248B- A0 80              LDY =128        AND GET NEW ACCU
0859  248D- B1 08              LDA (SP),Y
0860  248F- 85 00              STA ACCU
0861  2491- C8                 INY
0862  2492- B1 08              LDA (SP),Y
0863  2494- 85 01              STA ACCU+1
0864  2496- 60                 RTS
0865                   *
0866                   * P-CODE 22: LITW
0867                   *****************
0868                   *
0869  2497- 20 BC 22   LITW    JSR COPY
0870  249A- 20 A5 24           JSR FETCH
0871  249D- 85 00              STA ACCU
0872  249F- 20 A5 24           JSR FETCH
0873  24A2- 85 01              STA ACCU+1
0874  24A4- 60                 RTS
0875                   *
0876                   * FETCH
0877                   *
0878  24A5- A0 00      FETCH   LDY =0
0879  24A7- B1 0A              LDA (PC),Y
0880  24A9- E6 0A              INC PC
0881  24AB- D0 02              BNE *+4
0882  24AD- E6 0B              INC PC+1
0883  24AF- 60                 RTS
0884                   *
0885                   * P-CODE 23: INCW
0886                   *****************
0887                   *
0888  24B0- A0 80      INCW    LDY =128        SAVE CURRENT ACCU
0889  24B2- A5 00              LDA ACCU
0890  24B4- 91 08              STA (SP),Y
0891  24B6- C8                 INY
0892  24B7- A5 01              LDA ACCU+1
0893  24B9- 91 08              STA (SP),Y
0894  24BB- 20 A5 24           JSR FETCH
0895  24BE- 18                 CLC
0896  24BF- 65 08              ADC SP
0897  24C1- 85 08              STA SP
0898  24C3- 20 A5 24           JSR FETCH
0899  24C6- 65 09              ADC SP+1
0900  24C8- 85 09              STA SP+1

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 10/11/23   R65 ASSEMBLER  PAGE 19

0901  24CA- 4C 86 24           JMP INCB1
0902                   *
0903                   * P-CODE 24: JUMP
0904                   *****************
0905                   *
0906  24CD- A0 00      JUMP    LDY =0
0907  24CF- B1 0A              LDA (PC),Y
0908  24D1- 18                 CLC
0909  24D2- 65 0A              ADC PC
0910  24D4- AA                 TAX
0911  24D5- C8                 INY
0912  24D6- B1 0A              LDA (PC),Y
0913  24D8- 65 0B              ADC PC+1
0914  24DA- 86 0A              STX PC
0915  24DC- 85 0B              STA PC+1
0916  24DE- 60                 RTS
0917                   *
0918                   * P-CODE 25: JMPZ
0919                   *****************
0920                   *
0921  24DF- 46 00      JMPZ    LSR ACCU
0922  24E1- 08                 PHP
0923  24E2- 20 E9 22           JSR GETS2
0924  24E5- 28                 PLP
0925  24E6- 90 E5              BCC JUMP
0926                   *
0927  24E8- A5 0A              LDA PC
0928  24EA- 18                 CLC
0929  24EB- 69 02              ADC =2
0930  24ED- 85 0A              STA PC
0931  24EF- 90 02              BCC *+4
0932  24F1- E6 0B              INC PC+1
0933  24F3- 60                 RTS
0934                   *
0935                   * P-CODE 26: JMPO
0936                   *****************
0937                   *
0938  24F4- A5 00      JMPO    LDA ACCU
0939  24F6- 49 01              EOR =1
0940  24F8- 85 00              STA ACCU
0941  24FA- 4C DF 24           JMP JMPZ
0942                   *
0943                   * P-CODE 27: LOAD
0944                   *****************
0945                   *
0946  24FD- 20 BC 22  LOAD    JSR COPY
0947  2500- 20 A5 24           JSR FETCH
0948  2503- AA                 TAX             LEVEL DIFFERENCE
0949  2504- 20 A5 24           JSR FETCH
0950  2507- 85 1B              STA ARG1

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 10/11/23   R65 ASSEMBLER  PAGE 20

0951  2509- 20 A5 24           JSR FETCH
0952  250C- 85 1C      LOAD1   STA ARG1+1
0953  250E- 20 3A 25           JSR FBASE3
0954  2511- A0 80      LOAD2   LDY =128
0955  2513- B1 19              LDA (ABASE),Y
0956  2515- 85 00              STA ACCU
0957  2517- C8                 INY
0958  2518- B1 19              LDA (ABASE),Y
0959  251A- 85 01              STA ACCU+1
0960  251C- 60                 RTS
0961                   *
0962                   * FBASE
0963                   *
0964  251D- A5 17      FBASE   LDA BASE
0965  251F- A4 18              LDY BASE+1
0966  2521- 85 19              STA ABASE
0967  2523- 84 1A              STY ABASE+1
0968  2525- E0 00              CPX =0
0969  2527- F0 10              BEQ FBASE2
0970                   *
0971  2529- A0 80      FBASE1  LDY =128
0972  252B- B1 19              LDA (ABASE),Y
0973  252D- 48                 PHA
0974  252E- C8                 INY
0975  252F- B1 19              LDA (ABASE),Y
0976  2531- 85 1A              STA ABASE+1
0977  2533- 68                 PLA
0978  2534- 85 19              STA ABASE
0979  2536- CA                 DEX
0980  2537- D0 F0              BNE FBASE1
0981  2539- 60         FBASE2  RTS
0982                   *
0983  253A- 20 1D 25   FBASE3  JSR FBASE
0984  253D- 18                 CLC
0985  253E- A5 1B              LDA ARG1
0986  2540- 65 19              ADC ABASE
0987  2542- 85 19              STA ABASE
0988  2544- A5 1C              LDA ARG1+1
0989  2546- 65 1A              ADC ABASE+1
0990  2548- 85 1A              STA ABASE+1
0991  254A- 60                 RTS
0992                   *
0993                   * P-CODE 28: LODX
0994                   *****************
0995                   *
0996  254B- 20 A5 24   LODX    JSR FETCH
0997  254E- AA                 TAX
0998  254F- 20 A5 24           JSR FETCH
0999  2552- 06 00              ASL ACCU
1000  2554- 26 01              ROL ACCU+1

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 10/11/23   R65 ASSEMBLER  PAGE 21

1001  2556- 18                 CLC
1002  2557- 65 00              ADC ACCU
1003  2559- 85 1B              STA ARG1
1004  255B- 08                 PHP
1005  255C- 20 A5 24           JSR FETCH
1006  255F- 28                 PLP
1007  2560- 65 01              ADC ACCU+1
1008  2562- 4C 0C 25           JMP LOAD1
1009                   *
1010                   * P-CODE 29: STOR
1011                   *****************
1012                   *
1013  2565- 20 A5 24   STOR    JSR FETCH
1014  2568- AA                 TAX
1015  2569- 20 A5 24           JSR FETCH
1016  256C- 85 1B              STA ARG1
1017  256E- 20 A5 24           JSR FETCH
1018  2571- 85 1C              STA ARG1+1
1019  2573- 20 3A 25   STOR1   JSR FBASE3
1020  2576- A0 80      STOR2   LDY =128
1021  2578- A5 00              LDA ACCU
1022  257A- 91 19              STA (ABASE),Y
1023  257C- C8                 INY
1024  257D- A5 01              LDA ACCU+1
1025  257F- 91 19              STA (ABASE),Y
1026  2581- 4C E9 22           JMP GETS2
1027                   *
1028                   * P-CODE 2A: STOX
1029                   *****************
1030                   *
1031  2584- 20 A5 24   STOX    JSR FETCH
1032  2587- AA                 TAX
1033  2588- A0 7E              LDY =126
1034  258A- B1 08              LDA (SP),Y
1035  258C- 0A                 ASL A
1036  258D- 85 1B              STA ARG1
1037  258F- C8                 INY
1038  2590- B1 08              LDA (SP),Y
1039  2592- 2A                 ROL A
1040  2593- 85 1C              STA ARG1+1
1041  2595- 20 A5 24           JSR FETCH
1042  2598- 18                 CLC
1043  2599- 65 1B              ADC ARG1
1044  259B- 85 1B              STA ARG1
1045  259D- 20 A5 24           JSR FETCH
1046  25A0- 65 1C              ADC ARG1+1
1047  25A2- 85 1C              STA ARG1+1
1048  25A4- 20 F8 20           JSR DECS2
1049  25A7- 4C 73 25           JMP STOR1
1050                   *

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 10/11/23   R65 ASSEMBLER  PAGE 22

1051                   * P-CODE 2B: CALL
1052                   *****************
1053                   *
1054  25AA- 20 A5 24   CALL    JSR FETCH
1055  25AD- AA                 TAX
1056  25AE- 20 1D 25           JSR FBASE
1057  25B1- A0 82              LDY =130
1058  25B3- A5 19              LDA ABASE
1059  25B5- 91 08              STA (SP),Y
1060  25B7- C8                 INY
1061  25B8- A5 1A              LDA ABASE+1
1062  25BA- 91 08              STA (SP),Y
1063  25BC- C8                 INY
1064  25BD- A5 17              LDA BASE
1065  25BF- 91 08              STA (SP),Y
1066  25C1- C8                 INY
1067  25C2- A5 18              LDA BASE+1
1068  25C4- 91 08              STA (SP),Y
1069  25C6- C8                 INY
1070  25C7- A5 0A              LDA PC
1071  25C9- 91 08              STA (SP),Y
1072  25CB- C8                 INY
1073  25CC- A5 0B              LDA PC+1
1074  25CE- 91 08              STA (SP),Y
1075  25D0- A5 08              LDA SP
1076  25D2- 18                 CLC
1077  25D3- 69 02              ADC =2
1078  25D5- 85 17              STA BASE
1079  25D7- A5 09              LDA SP+1
1080  25D9- 69 00              ADC =0
1081  25DB- 85 18              STA BASE+1
1082  25DD- 4C CD 24           JMP JUMP
1083                   *
1084                   * PCODE 2C: SDEV
1085                   ****************
1086                   *
1087  25E0- A5 00      SDEV    LDA ACCU
1088  25E2- 85 0D              STA DEVICE
1089  25E4- 4C E9 22           JMP GETS2
1090                   *
1091                   * PCODE 2D: RDEV
1092                   ****************
1093                   *
1094  25E7- A9 00      RDEV    LDA =0
1095  25E9- 85 0D              STA DEVICE
1096  25EB- 60                 RTS
1097                   *
1098                   * PCODE 2E: FNAM
1099                   ****************
1100                   *

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 10/11/23   R65 ASSEMBLER  PAGE 23

1101  25EC- 20 27 E0   FNAM    JSR PRTINF
1102  25EF- 20 3D A0           BYT ' = '+128
1103  25F2- 20 06 E0           JSR GETLIN
1104  25F5- 20 15 F8           JSR GETNAM
1105  25F8- 20 0D 20           JSR HARGUM
1106  25FB- 85 DC              STA FILDRV
1107  25FD- 20 0D 20          JSR HARGUM
1108  2600- 8D 13 03           STA FILLOC
1109  2603- 20 27 E0           JSR PRTINF
1110  2606- 0D 8A              BYT $D,$8A
1111  2608- 60                 RTS
1112                   *
1113                   * P-CODE 2F: OPNR
1114                   *****************
1115                   *
1116                   * NO AUTOMATIC ERROR TESTING
1117                   *
1118  2609- A9 00      OPNR    LDA =0
1119  260B- 85 DA              STA FILFLG
1120  260D- 20 BC 22           JSR COPY
1121  2610- 20 0F F0           JSR OPEN
1122  2613- C8                 INY
1123  2614- C8                 INY
1124  2615- 84 00              STY ACCU
1125  2617- 85 01              STA ACCU+1
1126  2619- 60                 RTS
1127                   *
1128                   * P-CODE 30: OPNW
1129                   *****************
1130                   *
1131  261A- A9 20      OPNW    LDA =$20
1132  261C- 4C 0B 26           JMP OPNR+2
1133                   *
1134                   * P-CODE 31: CLOS
1135                   *****************
1136                   *
1137                   * NO AUTOMATIC ERROR CHECKING
1138                   *
1139  261F- A6 00      CLOS    LDX ACCU
1140  2621- CA                 DEX
1141  2622- CA                 DEX
1142  2623- 20 02 2E           JSR CLOSRA
1143  2626- 4C E9 22           JMP GETS2
1144                   *
1145                   * P-CODE 32: PRTI
1146                   *****************
1147                   *
1148  2629- 20 A5 24   PRTI    JSR FETCH
1149  262C- 48                 PHA
1150  262D- 29 7F              AND =$7F

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 10/11/23   R65 ASSEMBLER  PAGE 24

1151  262F- 20 6B 29           JSR PRTCHR0
1152  2632- 68                 PLA
1153  2633- 10 F4              BPL PRTI
1154  2635- 60                 RTS
1155                   *
1156                   * P-CODE 33: GHGH       (GET HIGH)
1157                   *****************
1158                   *
1159  2636- A5 01      GHGH    LDA ACCU+1
1160  2638- 85 00              STA ACCU
1161                   *
1162                   * P-CODE 34: GLOW
1163                   *****************
1164                   *
1165  263A- A9 00      GLOW    LDA =0
1166  263C- 85 01              STA ACCU+1
1167  263E- 60                 RTS
1168                   *
1169                   * P-CODE 35:PHGH
1170                   ****************
1171                   *
1172  263F- A0 7E      PHGH    LDY =126
1173  2641- B1 08              LDA (SP),Y
1174  2643- 85 01              STA ACCU+1
1175  2645- 4C F8 20           JMP DECS2
1176                   *
1177                   * P-CODE 36: PLOW
1178                   *****************
1179                   *
1180  2648- A0 7E      PLOW    LDY =126
1181  264A- B1 08              LDA (SP),Y
1182  264C- 85 00              STA ACCU
1183  264E- 4C F8 20           JMP DECS2
1184                   *
1185                   * P-CODE 37: GSEC
1186                   *****************
1187                   * DEVICE HAS TO BE SET  ########
1188                   *
1189  2651- 20 63 26   GSEC    JSR PREPSEC
1190  2654- 4C 8F 20           JMP READ
1191  2657- 4C 9B 20           JMP ENDDO
1192                   *
1193                   * P-CODE 38: PSEC
1194                   *****************
1195                   * DEVICE HAS TO BE SET  ########
1196                   *
1197  265A- 20 63 26   PSEC    JSR PREPSEC
1198  265D- 20 92 20           JSR WRITE
1199  2660- 4C 9B 20           JMP ENDDO
1200                   *

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 10/11/23   R65 ASSEMBLER  PAGE 25

1201  2663- A5 00      PREPSEC LDA ACCU
1202  2665- A6 01              LDX ACCU+1
1203  2667- 85 E0              STA DATA
1204  2669- 86 E1              STX DATA+1
1205  266B- A0 7E              LDY =126
1206  266D- B1 08              LDA (SP),Y
1207  266F- 85 DE              STA SECTOR
1208  2671- A0 7C              LDY =124
1209  2673- B1 08              LDA (SP),Y
1210  2675- 85 DD              STA TRACK
1211  2677- A5 08              LDA SP
1212  2679- 38                 SEC
1213  267A- E9 04              SBC =4
1214  267C- 20 FD 20           JSR DECS2+5
1215  267F- 20 E9 22           JSR GETS2
1216  2682- 4C 95 20           JMP PREPDO
1217                   *
1218                   * P-CODE 39: NBYT       LOAD N BYTES IMMEDIATELY
1219                   *****************
1220                   *
1221  2685- 20 A5 24   NBYT    JSR FETCH
1222  2688- AA                 TAX             BYTE COUNTER
1223  2689- 20 BC 22   NBYT1   JSR COPY
1224  268C- 20 A5 24           JSR FETCH
1225  268F- 84 01              STY ACCU+1      Y=0
1226  2691- 85 00              STA ACCU
1227  2693- CA                 DEX
1228  2694- D0 F3              BNE NBYT1
1229  2696- 60                 RTS
1230                   *
1231                   * P-CODE 3A: NWRD       LOAD N WORD IMMEDIATELY
1232                   *****************
1233                   *
1234  2697- 20 A5 24   NWRD    JSR FETCH
1235  269A- AA                 TAX             WORD COUNTER
1236  269B- 20 BC 22   NWRD1   JSR COPY
1237  269E- 20 A5 24           JSR FETCH
1238  26A1- 85 00              STA ACCU
1239  26A3- 20 A5 24           JSR FETCH
1240  26A6- 85 01              STA ACCU+1
1241  26A8- CA                 DEX
1242  26A9- D0 F0              BNE NWRD1
1243  26AB- 60                 RTS
1244                   *
1245                   * P-CODE 3B: LODN       LOAD N MORE WORDS
1246                   *****************
1247                   *
1248  26AC- 20 A5 24   LODN    JSR FETCH
1249  26AF- AA                 TAX
1250  26B0- 20 BC 22   LODN1   JSR COPY

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 10/11/23   R65 ASSEMBLER  PAGE 26

1251  26B3- A5 19              LDA ABASE
1252  26B5- 18                 CLC
1253  26B6- 69 02              ADC =2
1254  26B8- 85 19              STA ABASE
1255  26BA- 90 02              BCC *+4
1256  26BC- E6 1A              INC ABASE+1
1257  26BE- 20 11 25           JSR LOAD2
1258  26C1- CA                 DEX
1259  26C2- D0 EC              BNE LODN1
1260  26C4- 60                 RTS
1261                   *
1262                   * P-CODE 3C: STON       STORE N MORE WORDS
1263                   *****************
1264                   *
1265  26C5- 20 A5 24   STON    JSR FETCH
1266  26C8- AA                 TAX
1267  26C9- A5 19      STON1   LDA ABASE
1268  26CB- 38                 SEC
1269  26CC- E9 02              SBC =2
1270  26CE- 85 19              STA ABASE
1271  26D0- B0 02              BCS *+4
1272  26D2- C6 1A              DEC ABASE+1
1273  26D4- 20 76 25           JSR STOR2
1274  26D7- CA                 DEX
1275  26D8- D0 EF              BNE STON1
1276  26DA- 60                 RTS
1277                   *
1278                   * P-CODE 3D: LODI       LOAD INDIRECT
1279                   *****************
1280                   *
1281  26DB- 20 E1 26   LODI    JSR GETACC
1282  26DE- 4C 11 25           JMP LOAD2
1283                   *
1284  26E1- A5 00      GETACC  LDA ACCU
1285  26E3- A6 01              LDX ACCU+1
1286  26E5- 38                 SEC
1287  26E6- E9 80              SBC =128
1288  26E8- B0 01              BCS *+3
1289  26EA- CA                 DEX
1290  26EB- 85 19              STA ABASE
1291  26ED- 86 1A              STX ABASE+1
1292  26EF- 60                 RTS
1293                   *
1294                   * P-CODE 3E: STOI       STORE INDIRECT
1295                   *****************
1296                   *
1297  26F0- 20 E1 26   STOI    JSR GETACC
1298  26F3- 20 E9 22           JSR GETS2
1299  26F6- 4C 76 25           JMP STOR2
1300                   *

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 10/11/23   R65 ASSEMBLER  PAGE 27

1301                   * P-CODE 3F: EXST       EXCHANGE STACK
1302                   *****************
1303                   *
1304  26F9- A0 7E      EXST    LDY =126
1305  26FB- B1 08              LDA (SP),Y
1306  26FD- AA                 TAX
1307  26FE- A5 00             LDA ACCU
1308  2700- 91 08              STA (SP),Y
1309  2702- 86 00              STX ACCU
1310  2704- C8                 INY
1311  2705- B1 08              LDA (SP),Y
1312  2707- AA                 TAX
1313  2708- A5 01              LDA ACCU+1
1314  270A- 91 08              STA (SP),Y
1315  270C- 86 01              STX ACCU+1
1316  270E- 60                 RTS
1317                   *
1318                   * P-CODE 40 TIND        TEST INDEX
1319                   ****************
1320                   *
1321  270F- 20 A5 24   TIND    JSR FETCH       LOWLIM-1
1322  2712- AA                 TAX
1323  2713- 20 A5 24           JSR FETCH
1324  2716- E4 00              CPX ACCU
1325  2718- E5 01              SBC ACCU+1
1326  271A- 70 0E              BVS TINDERR
1327                   *
1328  271C- 20 A5 24           JSR FETCH       HIGHLIM
1329  271F- AA                 TAX
1330  2720- 20 A5 24           JSR FETCH
1331  2723- E4 00              CPX ACCU
1332  2725- E5 01              SBC ACCU+1
1333  2727- 90 01              BCC TINDERR
1334  2729- 60                 RTS
1335                   *
1336  272A- A2 83      TINDERR LDX =$83        RUNTIME ERROR
1337  272C- 4C A6 29           JMP PERROR      INDEX OUT OF BOUNDS
1338                   *
1339                   * P-CODE 41: RUNP       RUN PROGRAM
1340                   *****************
1341                   *
1342  272F- A0 82      RUNP    LDY =130
1343  2731- A5 00              LDA ACCU        SAVE ACCU
1344  2733- A6 01              LDX ACCU+1
1345  2735- 20 61 27           JSR SAVE
1346  2738- A5 17              LDA BASE        SAVE BASE
1347  273A- A6 18              LDX BASE+1
1348  273C- 20 61 27           JSR SAVE
1349  273F- A5 0A              LDA PC          SAVE PC
1350  2741- A6 0B              LDX PC+1

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 10/11/23   R65 ASSEMBLER  PAGE 28

1351  2743- 20 61 27           JSR SAVE
1352  2746- A5 11              LDA STPROG      SAVE STPROG
1353  2748- A6 12              LDX STPROG+1
1354  274A- 20 61 27           JSR SAVE
1355  274D- A5 13              LDA EOPROG      SAVE EOPROG
1356  274F- A6 14              LDX EOPROG+1
1357  2751- 20 61 27           JSR SAVE
1358  2754- A5 08              LDA SP          GET SP
1359  2756- A6 09              LDX SP+1
1360  2758- 18                 CLC
1361  2759- 69 8C              ADC =140
1362  275B- 90 01              BCC *+3
1363  275D- E8                 INX             COMPUTE NEW STPROG
1364  275E- 4C 3D 2A           JMP EXEC3
1365                   *
1366                   *
1367  2761- 91 08      SAVE    STA (SP),Y
1368  2763- C8                 INY
1369  2764- 8A                 TXA
1370  2765- 91 08              STA (SP),Y
1371  2767- C8                 INY
1372  2768- 60                 RTS
1373                   *
1374                   *
1375  2769- 88         GETBACK DEY
1376  276A- B1 08              LDA (SP),Y
1377  276C- AA                 TAX
1378  276D- 88                 DEY
1379  276E- B1 08              LDA (SP),Y
1380  2770- 60                 RTS
1381                   *
1382                   *
1383                   * P-CODE 42: ADDF
1384                   *****************
1385                   *
1386  2771- 20 8E 27   ADDF    JSR GETFLP2
1387  2774- 20 F2 2B           JSR FADD
1388                   *
1389  2777- A5 08      PUTFLP0 LDA SP          DECREMENT SP BY 4
1390  2779- 38                 SEC
1391  277A- E9 04              SBC =4
1392  277C- 85 08              STA SP
1393  277E- B0 02              BCS PUTFLP
1394  2780- C6 09              DEC SP+1
1395  2782- A5 02      PUTFLP  LDA M1+1        AND SAVE HALF OF NUMBER
1396  2784- A0 7E              LDY =126
1397  2786- 91 08              STA (SP),Y
1398  2788- C8                 INY
1399  2789- A5 03              LDA M1+2
1400  278B- 91 08              STA (SP),Y

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 10/11/23   R65 ASSEMBLER  PAGE 29

1401  278D- 60                 RTS
1402                   *
1403  278E- A0 7A      GETFLP2 LDY =122        GET SECOND NUMBER
1404  2790- B1 08              LDA (SP),Y
1405  2792- 85 1D              STA M2+1
1406  2794- C8                 INY
1407  2795- B1 08              LDA (SP),Y
1408  2797- 85 1E              STA M2+2
1409  2799- C8                 INY
1410  279A- B1 08              LDA (SP),Y
1411  279C- 85 1B              STA X2
1412  279E- C8                 INY
1413  279F- B1 08              LDA (SP),Y
1414  27A1- 85 1C              STA M2
1415  27A3- A0 7E      GETFLP  LDY =126        AND HALF OF FIRST
1416  27A5- B1 08              LDA (SP),Y
1417  27A7- 85 02              STA M1+1
1418  27A9- C8                 INY
1419  27AA- B1 08              LDA (SP),Y
1420  27AC- 85 03              STA M1+2
1421  27AE- 60                 RTS
1422                   *
1423                   * P-CODE 43: SUBF
1424                   *****************
1425                   *
1426  27AF- 20 8E 27   SUBF    JSR GETFLP2
1427  27B2- 20 EC 2B           JSR FSUB
1428  27B5- 4C 77 27           JMP PUTFLP0
1429                   *
1430                   * P-CODE 44: MULF
1431                   *****************
1432                   *
1433  27B8- 20 8E 27   MULF    JSR GETFLP2
1434  27BB- 20 19 2C           JSR FMUL
1435  27BE- 4C 77 27           JMP PUTFLP0
1436                   *
1437                   * P-CODE 45: DIVF
1438                   *****************
1439                   *
1440  27C1- 20 8E 27   DIVF    JSR GETFLP2
1441  27C4- 20 3F 2C           JSR FDIV
1442  27C7- 4C 77 27           JMP PUTFLP0
1443                   *
1444                   * P-CODE 46: FLOF
1445                   *****************
1446                   *
1447  27CA- A5 00      FLOF    LDA ACCU
1448  27CC- 85 02              STA M1+1        HIGH BYTE IS IN ACCU
1449                   *                       SAME AS M1
1450  27CE- 20 CE 2B           JSR FLOAT

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 10/11/23   R65 ASSEMBLER  PAGE 30

1451  27D1- 20 CB 22           JSR INCS2
1452  27D4- 4C 82 27           JMP PUTFLP
1453                   *
1454                   * P-CODE 47: FIXF
1455                   *****************
1456                   *
1457  27D7- 20 A3 27   FIXF    JSR GETFLP
1458  27DA- 20 8C 2C           JSR FIX
1459  27DD- A5 02              LDA M1+1
1460  27DF- 85 00              STA ACCU
1461  27E1- 4C F8 20           JMP DECS2
1462                   *
1463                   * P-CODE 48: FEQU       =
1464                   *****************
1465                   *
1466  27E4- 20 05 28   FEQU    JSR TESTF
1467  27E7- F0 12              BEQ TRUE
1468                   *
1469  27E9- A2 00      FALSE   LDX =0
1470  27EB- 86 00              STX ACCU
1471  27ED- 86 01              STX ACCU+1
1472  27EF- A5 08      DECS6   LDA SP
1473  27F1- 38                 SEC
1474  27F2- E9 06              SBC =6
1475  27F4- 85 08              STA SP
1476  27F6- B0 02              BCS *+4
1477  27F8- C6 09              DEC SP+1
1478  27FA- 60                 RTS
1479                   *
1480  27FB- A2 01      TRUE    LDX =1
1481  27FD- 86 00              STX ACCU
1482  27FF- CA                DEX
1483  2800- 86 01              STX ACCU+1
1484  2802- 4C EF 27           JMP DECS6
1485                   *
1486  2805- 20 8E 27   TESTF   JSR GETFLP2
1487  2808- 20 EC 2B           JSR FSUB
1488  280B- A5 01              LDA M1
1489  280D- 60                 RTS
1490                   *
1491                   * P-CODE 49: FNEQ       <>
1492                   *****************
1493                   *
1494  280E- 20 05 28   FNEQ    JSR TESTF
1495  2811- D0 E8              BNE TRUE
1496  2813- F0 D4              BEQ FALSE
1497                   *
1498                   * P-CODE 4A: FLES       <
1499                   *****************
1500                   *

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 10/11/23   R65 ASSEMBLER  PAGE 31

1501  2815- 20 05 28   FLES    JSR TESTF
1502  2818- 10 CF              BPL FALSE
1503  281A- 30 DF              BMI TRUE
1504                   *
1505                   * P-CODE 4B: FGRE       >=
1506                   *****************
1507                   *
1508  281C- 20 05 28   FGRE    JSR TESTF
1509  281F- 10 DA              BPL TRUE
1510  2821- 30 C6              BMI FALSE
1511                   *
1512                   * P-CODE 4C: FGRT       >
1513                   *****************
1514                   *
1515  2823- 20 05 28   FGRT    JSR TESTF
1516  2826- 30 C1              BMI FALSE
1517  2828- F0 BF              BEQ FALSE
1518  282A- 10 CF              BPL TRUE
1519                   *
1520                   * P-CODE 4D: FLEE       <=
1521                   *****************
1522                   *
1523  282C- 20 05 28   FLEE    JSR TESTF
1524  282F- 30 CA              BMI TRUE
1525  2831- F0 C8              BEQ TRUE
1526  2833- 10 B4              BPL FALSE
1527                   *
1528                   * P-CODE 4E: FCOM       COMPLEMENT
1529                   *****************
1530                   *
1531  2835- 20 A3 27   FCOM    JSR GETFLP
1532  2838- 20 31 2C           JSR FCOMPL
1533  283B- 4C 82 27           JMP PUTFLP
1534                   *
1535                   *
1536                   * P-CODE 4F: TFER       TEST FILE ERROR
1537                   *****************
1538                   *
1539  283E- A6 23      TFER    LDX IOCHECK
1540  2840- F0 04              BEQ TFER1
1541  2842- A6 DB              LDX FILERR
1542  2844- D0 01              BNE TFER2
1543  2846- 60         TFER1   RTS             OK
1544                   *
1545  2847- 4C A6 29   TFER2   JMP PERROR
1546                   *
1547                   * P-CODE 50: OPRA       OPEN RA-FILE
1548                   *****************
1549                   *
1550  284A- 20 BC 22   OPRA    JSR COPY        SAVE ACCU

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 10/11/23   R65 ASSEMBLER  PAGE 32

1551  284D- 20 93 2C           JSR OPENRA      OPEN FILE
1552  2850- C8                 INY
1553  2851- C8                 INY
1554  2852- 84 00              STY ACCU        SAVE FILE NO
1555  2854- A9 00              LDA =0
1556  2856- 85 01              STA ACCU+1
1557  2858- 60                 RTS
1558                   *
1559                   * P-CODE 51: GETR       GET FROM RA FILE
1560                   *****************
1561                   *
1562                   * NO AUTOMATIC ERROR CHECKING
1563                   *
1564  2859- 20 66 28   GETR    JSR GETR1
1565  285C- 20 9A 2D           JSR GETBYTE
1566  285F- 85 00              STA ACCU
1567  2861- A9 00              LDA =0
1568  2863- 85 01              STA ACCU+1
1569  2865- 60                 RTS
1570                   *
1571  2866- 20 F8 20   GETR1   JSR DECS2
1572  2869- A0 80              LDY =128
1573  286B- B1 08              LDA (SP),Y      GET FILE NO
1574  286D- AA                 TAX
1575  286E- CA                 DEX
1576  286F- CA                 DEX
1577  2870- A5 00              LDA ACCU        GET POINTER
1578  2872- A4 01              LDY ACCU+1
1579  2874- 60                 RTS
1580                   *
1581                   * P-CODE 52: PUTR       PUT TO RA=FILE
1582                   *****************
1583                   *
1584                   * NO AUTOMATIC ERROR CHECKING
1585                   *
1586  2875- A5 00      PUTR    LDA ACCU
1587  2877- 85 FE              STA KCHAR
1588  2879- 20 E9 22           JSR GETS2
1589  287C- 20 66 28           JSR GETR1
1590  287F- 20 B8 2D           JSR PUTBYTE
1591  2882- 4C E9 22           JMP GETS2
1592                   *
1593                   * P-CODE 53: SWA2       SWAP 2 AND 3 ON STACK
1594                   *****************
1595                   *
1596  2885- A0 7E      SWA2    LDY =126
1597  2887- 20 8C 28           JSR SWA3
1598  288A- A0 7F              LDY =127
1599                   *
1600  288C- B1 08      SWA3    LDA (SP),Y

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 10/11/23   R65 ASSEMBLER  PAGE 33

1601  288E- AA                 TAX
1602  288F- 88                 DEY
1603  2890- 88                 DEY
1604  2891- B1 08              LDA (SP),Y
1605  2893- C8                 INY
1606  2894- C8                 INY
1607  2895- 91 08              STA (SP),Y
1608  2897- 8A                 TXA
1609  2898- 88                 DEY
1610  2899- 88                 DEY
1611  289A- 91 08              STA (SP),Y
1612  289C- 60                 RTS
1613                   *
1614                   * P-CODE 54: LDXI       PREPARE LOAD CPNT
1615                   *****************
1616                   *
1617  289D- A0 00      LDXI    LDY =0          INDIRECTION
1618  289F- A5 01              LDA ACCU+1
1619  28A1- F0 4A              BEQ NILERR
1620  28A3- B1 00              LDA (ACCU),Y
1621  28A5- 85 00              STA ACCU
1622  28A7- 84 01              STY ACCU+1
1623  28A9- 60                 RTS
1624                   *
1625                   * P-CODE 55: STXI       STORE CPNT INDEXED
1626                   *****************
1627                   *
1628  28AA- 20 A5 24   STXI    JSR FETCH
1629  28AD- AA                 TAX
1630  28AE- A0 7E              LDY =126
1631  28B0- B1 08              LDA (SP),Y
1632  28B2- 85 21              STA ARG2
1633  28B4- C8                 INY
1634  28B5- B1 08              LDA (SP),Y
1635  28B7- 85 22              STA ARG2+1      ARG2 IS INDEX
1636  28B9- 20 A5 24           JSR FETCH
1637  28BC- 85 1B              STA ARG1
1638  28BE- 20 A5 24           JSR FETCH
1639  28C1- 85 1C              STA ARG1+1      ARG1 IS ADDRESS
1640  28C3- 20 F8 20           JSR DECS2       OF VARIABLE
1641  28C6- 20 3A 25           JSR FBASE3
1642  28C9- 20 F2 28           JSR INDI        INDIRECTION
1643  28CC- 18                 CLC
1644  28CD- A5 19              LDA ABASE
1645  28CF- 65 21              ADC ARG2        ADD INDEX
1646  28D1- 85 19              STA ABASE
1647  28D3- A5 1A              LDA ABASE+1
1648  28D5- 65 22              ADC ARG2+1
1649  28D7- 85 1A              STA ABASE+1
1650  28D9- C5 14              CMP EOPROG+1    DO NOT ALLOW WRITING

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 10/11/23   R65 ASSEMBLER  PAGE 34

1651  28DB- 90 0B              BCC PRGERR      INTO PROGRAM SPACE
1652  28DD- F0 09              BEQ PRGERR      CHECK ONLY HIGH BYTE
1653  28DF- A0 00              LDY =0          MUST BE LARGER
1654  28E1- A5 00              LDA ACCU
1655  28E3- 91 19              STA (ABASE),Y   ONLY ONE BYTE
1656  28E5- 4C E9 22           JMP GETS2
1657                   *
1658  28E8- A2 90      PRGERR  LDX =$90
1659  28EA- 4C A6 29           JMP PERROR
1660                   *
1661  28ED- A2 89      NILERR  LDX =$89        CPNT IS NIL
1662  28EF- 4C A6 29           JMP PERROR
1663                   *
1664  28F2- A0 81      INDI    LDY =129        INDIRECTION
1665  28F4- B1 19              LDA (ABASE),Y
1666  28F6- F0 F5              BEQ NILERR      NIL STRING
1667  28F8- AA                 TAX
1668  28F9- 88                 DEY
1669  28FA- B1 19              LDA (ABASE),Y   POINTER IS IN A,X
1670  28FC- 85 19              STA ABASE
1671  28FE- 86 1A             STX ABASE+1
1672  2900- 60                 RTS
1673                   *
1674                   * P-CODE 56: CPNT       CPNT CONSTANT
1675                   *****************
1676                   *
1677  2901- 20 BC 22   CPNT    JSR COPY
1678  2904- 20 A5 24           JSR FETCH       STRING SIZE IN A
1679  2907- AA                 TAX
1680  2908- E8                 INX
1681  2909- A5 0A              LDA PC          PC IS POINTER
1682  290B- 85 00              STA ACCU        TO RETURN
1683  290D- A5 0B              LDA PC+1
1684  290F- 85 01              STA ACCU+1
1685  2911- 8A                 TXA
1686  2912- 18                 CLC
1687  2913- 65 0A              ADC PC          ADVANCE PC
1688  2915- 85 0A              STA PC
1689  2917- 90 02              BCC *+4
1690  2919- E6 0B              INC PC+1
1691  291B- 60                 RTS
1692                   *
1693                   * P-CODE 57: WRCP       WRITE CPNT
1694                   *****************
1695                   *
1696  291C- A0 00      WRCP    LDY =0
1697  291E- B1 00              LDA (ACCU),Y
1698  2920- F0 08              BEQ WRCP2
1699  2922- 20 6B 29           JSR PRTCHR0     END MARK
1700  2925- C8                 INY

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 10/11/23   R65 ASSEMBLER  PAGE 35

1701  2926- C0 3F              CPY =63
1702  2928- D0 F4              BNE WRCP+2
1703  292A- 4C E9 22   WRCP2   JMP GETS2
1704                   *
1705                   * P-CODE 58: ADPS       ADD PROGRAM START
1706                   *****************
1707                   *
1708  292D- 18         ADPS    CLC
1709  292E- A5 11              LDA STPROG
1710  2930- 65 00              ADC ACCU
1711  2932- 85 00              STA ACCU
1712  2934- A5 12              LDA STPROG+1
1713  2936- 65 01              ADC ACCU+1
1714  2938- 85 01              STA ACCU+1
1715  293A- 60                 RTS
1716                   *
1717                   *
1718                   * GETCHR0: GET A CHAR FROM SPECIFIED FILE
1719                   *****************************************
1720                   *
1721  293B- A6 0D      GETCHR0 LDX DEVICE
1722  293D- D0 1A              BNE GETCHR4
1723                   *
1724  293F- A6 15      GETCHR1 LDX BUFFPN
1725  2941- 10 06              BPL GETCHR2
1726  2943- 20 16 23           JSR RLIN
1727  2946- 4C 3F 29           JMP GETCHR1
1728                   *
1729  2949- E4 16      GETCHR2 CPX ENDBUF      IS IS END OF BUFFER?
1730  294B- D0 07              BNE GETCHR3
1731  294D- A9 FF              LDA =$FF
1732  294F- 85 15              STA BUFFPN
1733  2951- A9 0D              LDA =$D
1734  2953- 60                 RTS
1735                   *
1736  2954- E6 15      GETCHR3 INC BUFFPN
1737  2956- B5 24              LDA LINBUF,X
1738  2958- 60                 RTS
1739                   *
1740  2959- CA         GETCHR4 DEX
1741  295A- D0 03              BNE GETCHR5     SKIP, IF NOT KEY
1742  295C- 4C 00 E0           JMP GETKEY
1743                   *
1744  295F- CA         GETCHR5 DEX
1745  2960- A9 00              LDA =0
1746  2962- 85 DA              STA FILFLG
1747  2964- 20 18 F0           JSR READCH
1748  2967- 4C 3E 28           JMP TFER
1749                   *
1750  296A- 60         GETCHR6 RTS

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 10/11/23   R65 ASSEMBLER  PAGE 36

1751                   *
1752                   * PRTCHR0: PRINT CHAR TO SPECIFIED FILE
1753                   ***************************************
1754                   *
1755  296B- A6 0D      PRTCHR0 LDX DEVICE
1756  296D- 30 16              BMI PRTCHR3     Plot text?
1757  296F- D0 03              BNE PRTCHR1
1758  2971- 4C 09 E0           JMP PRTCHR
1759                   *
1760  2974- CA         PRTCHR1 DEX
1761  2975- D0 03              BNE PRTCHR2
1762  2977- 4C 0C E0           JMP AUTOPR
1763                   *
1764  297A- CA         PRTCHR2 DEX
1765  297B- A0 00              LDY =0
1766  297D- 84 DA              STY FILFLG
1767  297F- 20 1B F0           JSR WRITCH
1768  2982- 4C 3E 28           JMP TFER
1769                   *
1770  2985- C9 0D      PRTCHR3 CMP =$0D        Plot CR?
1771  2987- D0 06              BNE PRTCHR4
1772  2989- A9 00              LDA =0
1773  298B- 8D AE 03           STA GRX
1774  298E- 60         PRTCHRE RTS
1775                   *
1776  298F- C9 0A      PRTCHR4 CMP =$0A        PLOT LF?
1777  2991- D0 0D              BNE PRTCHR6
1778  2993- AD AF 03           LDA GRY
1779  2996- E9 08              SBC =8
1780  2998- 10 02              BPL PRTCHR5
1781  299A- A9 00              LDA =0
1782                   *
1783  299C- 8D AF 03   PRTCHR5 STA GRY
1784  299F- 60                 RTS
1785                   *
1786  29A0- 8D B0 03   PRTCHR6 STA GRC
1787  29A3- 4C 18 C8           JMP APLOTCH     PLOT THE CHARACTER
1788                   *
1789                   * PERROR: PASCAL RUNTIME ERROR
1790                   ******************************
1791                   *
1792  29A6- A9 2F      PERROR  LDA =47         CHECK CHARS/LINE
1793  29A8- CD 8A 17           CMP NUMCHR
1794  29AB- F0 08              BEQ PERROR0
1795  29AD- 8D 8A 17           STA NUMCHR      SET TO 48 CHARS/LINE
1796  29B0- 20 27 E0           JSR PRTINF      AND CLEAR SCREEN
1797  29B3- 01 91              BYT $01,$91     HOME,CLRSCR
1798  29B5- 20 27 E0   PERROR0 JSR PRTINF
1799  29B8- 0D 0A 07           BYT $D,$A,7,'Pascal error '+128
1799  29BB- 50 61 73 

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 10/11/23   R65 ASSEMBLER  PAGE 37

1799  29BE- 63 61 6C 
1799  29C1- 20 65 72 
1799  29C4- 72 6F 72 
1799  29C7- A0 
1800  29C8- A9 00              LDA =0
1801  29CA- 85 0D              STA DEVICE
1802  29CC- 8A                 TXA
1803  29CD- 85 0C              STA RUNERR
1804  29CF- 20 2D E0           JSR PRTBYT
1805  29D2- A5 0A              LDA PC
1806  29D4- 38                 SEC
1807  29D5- E5 11              SBC STPROG
1808  29D7- 85 00              STA ACCU
1809  29D9- A5 0B              LDA PC+1
1810  29DB- E5 12              SBC STPROG+1
1811  29DD- 85 01              STA ACCU+1
1812  29DF- F0 11              BEQ PERROR1
1813  29E1- 30 0F              BMI PERROR1
1814  29E3- 20 27 E0           JSR PRTINF
1815  29E6- 20 61 74           BYT ' at '+128
1815  29E9- A0 
1816  29EA- 20 B2 23           JSR PRTN
1817  29ED- 20 27 E0           JSR PRTINF
1818  29F0- 0D 8A              BYT $D,$8A
1819                   *
1820  29F2- 4C 10 20   PERROR1 JMP STOP
1821                   *
1822                   *
1823                   * WARM START ENTRY POINT
1824                   ************************
1825                   *
1826  29F5- AD 81 17   WARMST  LDA SFLAG       SET PASCAL RUNTIME BIT
1827  29F8- 09 01              ORA =$01        IN SFLAG
1828  29FA- 8D 81 17           STA SFLAG
1829  29FD- BA                 TSX
1830  29FE- 8E FF 17          STX SAVS        SAVE STACK POINTER
1831  2A01- A2 00              LDX =0
1832  2A03- 86 0B              STX PC+1
1833  2A05- 86 0D              STX DEVICE
1834  2A07- CA                 DEX
1835  2A08- 86 16              STX ENDBUF
1836  2A0A- 86 23              STX IOCHECK
1837  2A0C- A2 00              LDX =0
1838                   *
1839  2A0E- A0 00      EXEC    LDY =0
1840  2A10- 84 0B              STY PC+1
1841  2A12- BD C7 2A           LDA EXTABLE,X
1842  2A15- 9D 20 03           STA FILNM1,X
1843  2A18- E8                 INX
1844  2A19- C8                 INY

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 10/11/23   R65 ASSEMBLER  PAGE 38

1845  2A1A- C0 10              CPY =16
1846  2A1C- 90 F2              BCC EXEC+2
1847  2A1E- A9 00              LDA =0
1848  2A20- 8D 30 03           STA FILCY1
1849                   *
1850  2A23- A9 00      EXECUTE LDA =0
1851  2A25- 85 DA              STA FILFLG
1852  2A27- AD 0B 20           LDA USEREND
1853  2A2A- AE 0C 20           LDX USEREND+1
1854  2A2D- 38                 SEC
1855  2A2E- E9 90              SBC =144
1856  2A30- B0 01              BCS *+3
1857  2A32- CA                 DEX
1858  2A33- 85 0E              STA ENDSTK
1859  2A35- 86 0F              STX ENDSTK+1
1860                   *
1861  2A37- AD 09 20   EXEC1   LDA USERST
1862  2A3A- AE 0A 20           LDX USERST+1
1863  2A3D- 85 11      EXEC3   STA STPROG
1864  2A3F- 86 12              STX STPROG+1
1865  2A41- 8D 31 03           STA FILSA1
1866  2A44- 8E 32 03           STX FILSA1+1
1867  2A47- 20 15 E8           JSR RDFILE      READ FILE TO EXECUTE
1868  2A4A- D0 07              BNE EXECE       PROGRAM NOT LOOADED?
1869                   *
1870  2A4C- AD 12 03           LDA FILSTP
1871  2A4F- C9 52              CMP ='R'        IS PASCAL PROGRAM?
1872  2A51- F0 07              BEQ RUN
1873  2A53- A9 84      EXECE   LDA =$84        PASCAL RUNPROG ERROR
1874  2A55- 85 0C              STA RUNERR
1875  2A57- 4C 10 20           JMP STOP        SILENT ERROR
1876                   *
1877  2A5A- A0 00      RUN     LDY =0          READ END ADDRESS
1878  2A5C- B1 11              LDA (STPROG),Y  FROM FILE
1879  2A5E- 18                 CLC
1880  2A5F- 65 11              ADC STPROG
1881  2A61- 85 13              STA EOPROG
1882  2A63- C8                 INY
1883  2A64- B1 11              LDA (STPROG),Y
1884  2A66- 65 12              ADC STPROG+1
1885  2A68- 85 14              STA EOPROG+1
1886  2A6A- A5 13              LDA EOPROG      GET END OF STACK
1887  2A6C- A6 14              LDX EOPROG+1
1888  2A6E- 38                 SEC
1889  2A6F- E9 80              SBC =128
1890  2A71- 85 17              STA BASE
1891  2A73- 85 08              STA SP
1892  2A75- B0 01              BCS *+3
1893  2A77- CA                 DEX
1894  2A78- 86 18              STX BASE+1

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 10/11/23   R65 ASSEMBLER  PAGE 39

1895  2A7A- 86 09              STX SP+1
1896                   *
1897  2A7C- A5 11              LDA STPROG
1898  2A7E- A6 12              LDX STPROG+1
1899  2A80- 18                 CLC
1900  2A81- 69 02              ADC =2
1901  2A83- 85 0A              STA PC
1902  2A85- 90 01              BCC *+3
1903  2A87- E8                 INX
1904  2A88- 86 0B              STX PC+1
1905  2A8A- A9 00              LDA =0
1906  2A8C- 85 0C              STA RUNERR
1907  2A8E- AE FF 17   LOOP    LDX SAVS        RESTORE STACK POINTER
1908  2A91- 9A                 TXS
1909  2A92- 20 9D 2A           JSR EXCODE
1910  2A95- AD 81 17           LDA SFLAG
1911  2A98- 30 20              BMI ESCERR
1912  2A9A- 4C 8E 2A           JMP LOOP
1913                   *
1914                   *
1915  2A9D- 20 A5 24   EXCODE  JSR FETCH
1916  2AA0- 89 F1              STA =$F1
1917  2AA2- C9 59              CMP =$59        TEST CODENUMBER
1918  2AA4- 90 05              BCC *+7
1919  2AA6- A2 86      ILLC    LDX =$86        PASCAL RUNTIME ERROR
1920  2AA8- 4C A6 29           JMP PERROR      ILLEGAL P-CODE
1921                   *
1922  2AAB- 0A                 ASL A
1923  2AAC- AA                 TAX
1924  2AAD- BD D7 2A           LDA TABLE,X
1925  2AB0- 85 1B              STA ARG1
1926  2AB2- BD D8 2A           LDA TABLE+1,X
1927  2AB5- 85 1C              STA ARG1+1
1928  2AB7- 6C 1B 00           JMP (ARG1)
1929                   *
1930  2ABA- AD 81 17   ESCERR  LDA SFLAG       CLEAR ESCAPE FLAG
1931  2ABD- 29 7F              AND =$7F
1932  2ABF- 8D 81 17           STA SFLAG
1933  2AC2- A2 86              LDX =$86        PASCAL RUNTIME ERROR
1934  2AC4- 4C A6 29           JMP PERROR      ESCAPE DURING EXECUTION
1935                   *
1936  2AC7- 53 59 53   EXTABLE BYT 'SYSTEM:R        '
1936  2ACA- 54 45 4D 
1936  2ACD- 3A 52 20 
1936  2AD0- 20 20 20 
1936  2AD3- 20 20 20 
1936  2AD6- 20 
1937                   *
1938  2AD7- 10 20 A7   TABLE   WRD STOP,RETN,NEGA,ADDA,SUBA,MULA
1938  2ADA- 20 DA 20 

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 10/11/23   R65 ASSEMBLER  PAGE 40

1938  2ADD- E8 20 04 
1938  2AE0- 21 17 21 
1939  2AE3- 7C 21 EE           WRD DIVA,LOWB,TEQU,TNEQ,TLES,TGRE
1939  2AE6- 21 F9 21 
1939  2AE9- 0A 22 14 
1939  2AEC- 22 1E 22 
1940  2AEF- 24 22 2A           WRD TGRT,TLEE,ORAC,ANDA,EORA,NOTA
1940  2AF2- 22 30 22 
1940  2AF5- 42 22 54 
1940  2AF8- 22 66 22 
1941  2AFB- 76 22 8F          WRD LEFT,RIGH,INCA,DECA,COPY,PEEK
1941  2AFE- 22 AC 22 
1941  2B01- B3 22 BC 
1941  2B04- 22 F7 22 
1942  2B07- 00 23 0D           WRD POKE,CALA,RLIN,GETC,GETN,PRTC
1942  2B0A- 23 16 23 
1942  2B0D- 40 23 4D 
1942  2B10- 23 AA 23 
1943  2B13- B2 23 25           WRD PRTN,PRTS,LITB,INCB,LITW,INCW
1943  2B16- 24 5B 24 
1943  2B19- 68 24 97 
1943  2B1C- 24 B0 24 
1944  2B1F- CD 24 DF           WRD JUMP,JMPZ,JMPO,LOAD,LODX,STOR
1944  2B22- 24 F4 24 
1944  2B25- FD 24 4B 
1944  2B28- 25 65 25 
1945  2B2B- 84 25 AA           WRD STOX,CALL,SDEV,RDEV,FNAM,OPNR
1945  2B2E- 25 E0 25 
1945  2B31- E7 25 EC 
1945  2B34- 25 09 26 
1946  2B37- 1A 26 1F           WRD OPNW,CLOS,PRTI,GHGH,GLOW,PHGH
1946  2B3A- 26 29 26 
1946  2B3D- 36 26 3A 
1946  2B40- 26 3F 26 
1947  2B43- 48 26 51           WRD PLOW,GSEC,PSEC,NBYT,NWRD,LODN
1947  2B46- 26 5A 26 
1947  2B49- 85 26 97 
1947  2B4C- 26 AC 26 
1948  2B4F- C5 26 DB           WRD STON,LODI,STOI,EXST,TIND,RUNP
1948  2B52- 26 F0 26 
1948  2B55- F9 26 0F 
1948  2B58- 27 2F 27 
1949  2B5B- 71 27 AF           WRD ADDF,SUBF,MULF,DIVF,FLOF,FIXF
1949  2B5E- 27 B8 27 
1949  2B61- C1 27 CA 
1949  2B64- 27 D7 27 
1950  2B67- E4 27 0E           WRD FEQU,FNEQ,FLES,FGRE,FGRT,FLEE
1950  2B6A- 28 15 28 
1950  2B6D- 1C 28 23 
1950  2B70- 28 2C 28 

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 10/11/23   R65 ASSEMBLER  PAGE 41

1951  2B73- 35 28 3E           WRD FCOM,TFER,OPRA,GETR,PUTR,SWA2
1951  2B76- 28 4A 28 
1951  2B79- 59 28 75 
1951  2B7C- 28 85 28 
1952  2B7F- 9D 28 AA           WRD LDXI,STXI,CPNT,WRCP,ADPS
1952  2B82- 28 01 29 
1952  2B85- 1C 29 2D 
1952  2B88- 29 
1953                   *
1954                   * COLDSTART
1955                   ***********
1956                   *
1957  2B89- 58         COLDST  CLI
1958  2B8A- D8                 CLD
1959  2B8B- AD 09 20           LDA USERST
1960  2B8E- AE 0A 20           LDX USERST+1
1961  2B91- 85 11              STA STPROG
1962  2B93- 86 12              STX STPROG+1
1963  2B95- A0 00              LDY =0
1964  2B97- 98                 TYA
1965  2B98- 91 11              STA (STPROG),Y
1966  2B9A- C8                 INY
1967  2B9B- C0 04              CPY =4
1968  2B9D- 90 F9              BCC *-5
1969  2B9F- 4C F5 29           JMP WARMST
1970                   *
1971                           TIT R65 PASCAL: FLP-MATH
1972                           PAG

----------------------------------------------------------------------

R65 PASCAL: FLP-MATH               10/11/23   R65 ASSEMBLER  PAGE 42

1973                   *
1974                   ********************************
1975                   * R65 PASCAL FLP MATH ROUTINES *
1976                   ********************************
1977                   *
1978                   *
1979  2BA2- 18         ADD     CLC
1980  2BA3- A2 02              LDX =2
1981  2BA5- B5 01      ADD1    LDA M1,X
1982  2BA7- 75 1C              ADC M2,X
1983  2BA9- 95 01              STA M1,X
1984  2BAB- CA                 DEX
1985  2BAC- 10 F7              BPL ADD1
1986  2BAE- 60                 RTS
1987                   *
1988  2BAF- 06 10      MD1     ASL SIGN
1989  2BB1- 20 B4 2B           JSR ABSWAP
1990  2BB4- 24 01      ABSWAP  BIT M1
1991  2BB6- 10 05              BPL ABSWP1
1992  2BB8- 20 31 2C           JSR FCOMPL
1993  2BBB- E6 10              INC SIGN
1994  2BBD- 38         ABSWP1  SEC
1995                   *
1996                   * SWAP: EXCHANGE F1 AND F2
1997                   **************************
1998                   *
1999  2BBE- A2 04      SWAP    LDX =4
2000  2BC0- 94 03      SWAP1   STY E-1,X
2001  2BC2- B5 FF              LDA <(X1-1),X
2002  2BC4- B4 1A              LDY X2-1,X
2003  2BC6- 94 FF              STY <(X1-1),X
2004  2BC8- 95 1A              STA X2-1,X
2005  2BCA- CA                 DEX
2006  2BCB- D0 F3              BNE SWAP1
2007  2BCD- 60                 RTS
2008                   *
2009                   * FLOAT: FLOAT M1,M1+1 TO RESULT IN F1
2010                   **************************************
2011                   *
2012  2BCE- A9 8E      FLOAT   LDA =$8E
2013  2BD0- 85 00              STA X1
2014  2BD2- A9 00              LDA =0
2015  2BD4- 85 03              STA M1+2
2016  2BD6- F0 08              BEQ NORM
2017  2BD8- C6 00      NORM1   DEC X1
2018  2BDA- 06 03              ASL M1+2
2019  2BDC- 26 02              ROL M1+1
2020  2BDE- 26 01              ROL M1
2021  2BE0- A5 01      NORM    LDA M1
2022  2BE2- 0A                 ASL A

----------------------------------------------------------------------

R65 PASCAL: FLP-MATH               10/11/23   R65 ASSEMBLER  PAGE 43

2023  2BE3- 45 01              EOR M1
2024  2BE5- 30 04              BMI RTS1
2025  2BE7- A5 00              LDA X1
2026  2BE9- D0 ED              BNE NORM1
2027  2BEB- 60         RTS1    RTS
2028                   *
2029                   * FSUB: F1=F2-F1
2030                   ****************
2031                   *
2032  2BEC- 20 31 2C   FSUB    JSR FCOMPL
2033  2BEF- 20 FF 2B   SWPALG  JSR ALGNSW
2034                   *
2035                   * FADD: F1=F2+F1
2036                   ****************
2037                   *
2038  2BF2- A5 1B      FADD    LDA X2
2039  2BF4- C5 00              CMP X1
2040  2BF6- D0 F7              BNE SWPALG
2041  2BF8- 20 A2 2B           JSR ADD
2042  2BFB- 50 E3      ADDEND  BVC NORM
2043  2BFD- 70 05              BVS RTLOG
2044  2BFF- 90 BD     ALGNSW  BCC SWAP
2045  2C01- A5 01      RTAR    LDA M1
2046  2C03- 0A                 ASL A
2047  2C04- E6 00      RTLOG   INC X1
2048  2C06- F0 7E              BEQ OVFL
2049  2C08- A2 FA      RTLOG1  LDX =$FA
2050  2C0A- A9 80      ROR1    LDA =$80
2051  2C0C- B0 01              BCS ROR2
2052  2C0E- 0A                 ASL A
2053  2C0F- 56 07      ROR2    LSR E+3,X
2054  2C11- 15 07              ORA E+3,X
2055  2C13- 95 07              STA E+3,X
2056  2C15- E8                 INX
2057  2C16- D0 F2              BNE ROR1
2058  2C18- 60                 RTS
2059                   *
2060                   * FMUL: F1=F2*F1
2061                   ****************
2062                   *
2063  2C19- 20 AF 2B   FMUL    JSR MD1
2064  2C1C- 65 00              ADC X1
2065  2C1E- 20 6F 2C           JSR MD2
2066  2C21- 18                 CLC
2067  2C22- 20 08 2C   MUL1    JSR RTLOG1
2068  2C25- 90 03              BCC MUL2
2069  2C27- 20 A2 2B           JSR ADD
2070  2C2A- 88         MUL2    DEY
2071  2C2B- 10 F5              BPL MUL1
2072  2C2D- 46 10      MDEND   LSR SIGN

----------------------------------------------------------------------

R65 PASCAL: FLP-MATH               10/11/23   R65 ASSEMBLER  PAGE 44

2073  2C2F- 90 AF      NORMX   BCC NORM
2074  2C31- 38         FCOMPL  SEC
2075  2C32- A2 03              LDX =3
2076  2C34- A9 00      COMPL1  LDA =0
2077  2C36- F5 00              SBC X1,X
2078  2C38- 95 00              STA X1,X
2079  2C3A- CA                 DEX
2080  2C3B- D0 F7              BNE COMPL1
2081  2C3D- F0 BC              BEQ ADDEND
2082                   *
2083                   * FDIV: F1=F2/F1
2084                   ****************
2085                   *
2086  2C3F- 20 AF 2B   FDIV    JSR MD1
2087  2C42- E5 00              SBC X1
2088  2C44- 20 6F 2C           JSR MD2
2089  2C47- 38         FDIV1   SEC
2090  2C48- A2 02              LDX =2
2091  2C4A- B5 1C      FDIV2   LDA M2,X
2092  2C4C- F5 04              SBC E,X
2093  2C4E- 48                 PHA
2094  2C4F- CA                 DEX
2095  2C50- 10 F8              BPL FDIV2
2096  2C52- A2 FD              LDX =$FD
2097  2C54- 68         FDIV3   PLA
2098  2C55- 90 02              BCC FDIV4
2099  2C57- 95 1F              STA M2+3,X
2100  2C59- E8         FDIV4   INX
2101  2C5A- D0 F8              BNE FDIV3
2102  2C5C- 26 03              ROL M1+2
2103  2C5E- 26 02              ROL M1+1
2104  2C60- 26 01              ROL M1
2105  2C62- 06 1E              ASL M2+2
2106  2C64- 26 1D              ROL M2+1
2107  2C66- 26 1C              ROL M2
2108  2C68- B0 1C              BCS OVFL
2109  2C6A- 88                 DEY
2110  2C6B- D0 DA              BNE FDIV1
2111  2C6D- F0 BE              BEQ MDEND
2112  2C6F- 86 03      MD2     STX M1+2
2113  2C71- 86 02              STX M1+1
2114  2C73- 86 01              STX M1
2115  2C75- B0 0D              BCS OVCHK
2116  2C77- 30 04              BMI MD3
2117  2C79- 68                 PLA
2118  2C7A- 68                 PLA
2119  2C7B- 90 B2              BCC NORMX
2120  2C7D- 49 80      MD3     EOR =$80
2121  2C7F- 85 00              STA X1
2122  2C81- A0 17              LDY =$17

----------------------------------------------------------------------

R65 PASCAL: FLP-MATH               10/11/23   R65 ASSEMBLER  PAGE 45

2123  2C83- 60                 RTS
2124  2C84- 10 F7      OVCHK   BPL MD3
2125  2C86- 4C B3 21   OVFL    JMP DIV1-5      PASCAL RUNTIME ERROR
2126                   *
2127                   * FIX: FIX F1 IN M1, M1+1
2128                   *************************
2129                   *
2130  2C89- 20 01 2C           JSR RTAR
2131  2C8C- A5 00      FIX     LDA X1
2132  2C8E- C9 8E              CMP =$8E
2133  2C90- D0 F7              BNE FIX-3
2134  2C92- 60         RTRN    RTS
2135                   *
2136                           TIT R65 PASCAL: RANDOM ACCESS
2137                           PAG

----------------------------------------------------------------------

R65 PASCAL: RANDOM ACCESS          10/11/23   R65 ASSEMBLER  PAGE 46

2138                   *
2139                   * RANDOM ACCESS FILE HANDLER
2140                   ****************************
2141                   *
2142                   *
2143                   * OPENRA: OPEN A FILE FOR RANDOM ACCESS
2144                   ***************************************
2145                   *
2146                   * ENTRY: FILNM1,FILCY1,FILDRV,FILFLG
2147                   * FILFLG: BIT 7: PROTECTED (NEW ONLY)*
2148                   *         BIT 6: NO PRINTED OUTPUT
2149                   *         BIT 5: DIRECTION (0=READ)
2150                   *         BIT 4: 1=NEW, 0=OLD
2151                   *
2152                   * NEW ONLY: MAXSIZ,FILSA
2153                   *
2154                   * EXIT: NO OF OPEN FILE IN Y, STATUS IN A
2155                   *       AND FILERR, Y IS ONLY VALID
2156                   *       IF A=0
2157                   *
2158                   *
2159  2C93- AC 36 03   OPENRA  LDY MAXSEQ      SEARCH EMPTY ENTRY
2160  2C96- B9 39 03           LDA FIDRTB,Y    BIT 5=1: ENTRY USED
2161  2C99- 29 20              AND =$20
2162  2C9B- F0 08              BEQ OPENRA1     FOUND, SKIP
2163  2C9D- 88                 DEY
2164  2C9E- 10 F6              BPL OPENRA+3
2165                   *
2166  2CA0- A9 23              LDA =$23        TOO MANY OPEN FILES
2167  2CA2- 85 DB              STA FILERR
2168  2CA4- 60                 RTS
2169                   *
2170  2CA5- 8C 35 03   OPENRA1 STY CURSEQ      SAVE CURRENT ENTRY NO
2171  2CA8- A5 DC              LDA FILDRV      GET AND TEST DRIVE
2172  2CAA- 99 41 03           STA FIDVTB,Y
2173  2CAD- 29 FE              AND =$FE
2174  2CAF- F0 05              BEQ OPENRA2     SKIP, IF OK
2175                   *
2176  2CB1- A9 28              LDA =$28        ILLEGAL DRIVE FOR RA
2177  2CB3- 85 DB              STA FILERR
2178  2CB5- 60                 RTS
2179                   *
2180  2CB6- A9 10      OPENRA2 LDA =$10        TEST OLD/NEW FLAG
2181  2CB8- 25 DA              AND FILFLG
2182  2CBA- F0 78              BEQ OPENOLD     SKIP, IF OLD
2183                   *
2184                   * OPEN A NEW FILE
2185                   *
2186  2CBC- A5 DA      OPENNEW LDA FILFLG
2187  2CBE- 29 80              AND =$80        GET PROTECTED FLAG

----------------------------------------------------------------------

R65 PASCAL: RANDOM ACCESS          10/11/23   R65 ASSEMBLER  PAGE 47

2188  2CC0- 09 42              ORA ='B'        BLOCK FILE
2189  2CC2- 8D 00 03           STA FILTYP      SET FILE TYPE
2190                   *
2191  2CC5- A9 00              LDA =0
2192  2CC7- AE 37 03           LDX MAXSIZ      SIZE OF FILE
2193  2CCA- 8D 15 03           STA FILSIZ
2194  2CCD- 8E 16 03           STX FILSIZ+1
2195                   *
2196  2CD0- CA                 DEX             COMPUTE FILEA
2197  2CD1- AD 1A 03           LDA FILSA
2198  2CD4- 18                 CLC
2199  2CD5- 69 FF              ADC =$FF
2200  2CD7- 8D 1C 03           STA FILEA
2201  2CDA- 8A                 TXA
2202  2CDB- 6D 1B 03           ADC FILSA+1
2203  2CDE- 8D 1D 03           STA FILEA+1
2204                   *
2205  2CE1- 20 1E E8           JSR SETFID      SET FILEDATE
2206                   *
2207  2CE4- A2 10              LDX =16
2208  2CE6- BD 20 03   OPENNE1 LDA FILNM1,X    SET FILNM1 AND FILCY1
2209  2CE9- 9D 01 03           STA FILNAM,X    TO FILNAM AND FILCYC
2210  2CEC- CA                 DEX
2211  2CED- 10 F7              BPL OPENNE1
2212                   *
2213                   * SEARCH IN DIRECTORY AND RETURN CYCLUS
2214                   * AND DIRECTORY ENTRY TO USE, TEST EXISTING
2215                   * FILES FOR SAME NAME AND CYCLUS, DISK
2216                   * OPERATION IS INITIALIZED
2217                   *
2218  2CEF- 20 A1 20           JSR PREPWRA
2219  2CF2- 8E 11 03           STX FILCYC
2220                   *
2221                   * FIND FIRST EMPTY DISK DIRECTORY ENTR
2222                   * FETCH ITAND SET FIRST SECTOR OF FILE TO
2223                   * FILLOC, OUTPUT Y,X AS NUMBER OF EMPTY
2224                   * SECTORS
2225                   *
2226  2CF5- 20 A4 20           JSR PREPWRB
2227  2CF8- 8A                 TXA
2228  2CF9- CD 16 03           CMP FILSIZ+1
2229  2CFC- 98                 TYA
2230  2CFD- E9 00              SBC =0          COMPARE WITH REQUESTED
2231  2CFF- B0 05             BCS OPENNE3     SECTORS
2232                   *
2233  2D01- A9 26              LDA =$26        DISK OVERFLOW
2234  2D03- 4C 98 20           JMP DISCER1
2235                   *
2236                   * SET FITEMP,Y AND FITEMP+8,YNTO FIRST SECTOT
2237                   * OF FILE ON DISK, FIMAXT,Y TO SIZE, DIRECTORY

----------------------------------------------------------------------

R65 PASCAL: RANDOM ACCESS          10/11/23   R65 ASSEMBLER  PAGE 48

2238                   * ENTRY NO TO FITEMP+16,Y
2239                   * THEN PUT THIS ENTRY ONTO THE DISKMAND SET
2240                   * A NEW END OF DIRECTORY MARK
2241                   *
2242  2D06- 20 7A 20   OPENNE3 JSR DOPEN4
2243                   *
2244  2D09- AC 35 03           LDY CURSEQ      SETUP DUMMY FIRST SECTOR
2245  2D0C- A9 00              LDA =0
2246  2D0E- 99 49 03           STA FIBPTB,Y
2247  2D11- 99 51 03           STA FIRCTB,Y
2248                   *
2249  2D14- AC 35 03   OPENNE4 LDY CURSEQ      OPEN FILE
2250  2D17- A5 DA              LDA FILFLG
2251  2D19- 0A                 ASL A
2252  2D1A- 0A                 ASL A
2253  2D1B- 29 80              AND =$80        GET DIRECTION
2254  2D1D- 48                 PHA
2255  2D1E- 2D 00 03           AND FILTYP
2256  2D21- F0 06              BEQ OPENNE5     OK, SKIP
2257  2D23- 68                 PLA             PROTECTED FILE
2258                   *
2259  2D24- A9 29              LDA =$29
2260  2D26- 85 DB              STA FILERR
2261  2D28- 60                 RTS
2262                   *
2263  2D29- 68         OPENNE5 PLA
2264  2D2A- 09 60              ORA =$60        RA FILE, OPENIT
2265  2D2C- 99 39 03           STA FIDRTB,Y
2266                   *
2267  2D2F- A9 00              LDA =0          NORMALEXIT
2268  2D31- 85 DB              STA FILERR
2269  2D33- 60         OPENNE6 RTS
2270                   *
2271                   * OPEN AN OLD FILE:
2272                   * PREPARE DISK OPERATION, SEARCH REQUESTED
2273                   * FILE AND GET CORRSPONDING DISK ENTRY
2274                   *
2275  2D34- 20 9E 20   OPENOLD JSR PREPRD
2276                   *
2277  2D37- 20 7D 20           JSR PRFLB1      PRINT LABEL, IF REQ.
2278  2D3A- AD 00 03           LDA FILTYP
2279  2D3D- 29 7F              AND =$7F
2280  2D3F- C9 42              CMP ='B'        MUST BE BLOCK FILE
2281  2D41- F0 05              BEQ OPENOL1     SKIP, IF OK
2282                   *
2283  2D43- A9 05              LDA =5
2284  2D45- 4C 98 20           JMP DISCER1     FILE TYPE ERROR
2285                   *
2286  2D48- 20 9B 20   OPENOL1 JSR ENDDO       END OF DISK OPERATION
2287                   *

----------------------------------------------------------------------

R65 PASCAL: RANDOM ACCESS          10/11/23   R65 ASSEMBLER  PAGE 49

2288                   * SET NOW FIRST SECTOR AND SIZE TO TABLE
2289                   *
2290  2D4B- 20 77 20           JSR DOPEN1
2291                   *
2292  2D4E- A9 00              LDA =0          GET FIRST RECORD
2293  2D50- 20 57 2D           JSR GETTREC
2294  2D53- D0 DE              BNE OPENNE6     SKIP, IF NOT OK
2295  2D55- F0 BD              BEQ OPENNE4     ELSE OPEN FILE
2296                   *
2297                   *
2298                   * GETTREC: GET ONE RECORD FROM RA-FILE
2299                   * RECORD NUMBER IS IN A, FILE NUMBER IN CURSEQ
2300                   * RESULT IUS Z=1,OF OK, ELSE Z=0 AND FILERR
2301                   *
2302  2D57- AE 35 03   GETTREC LDX CURSEQ      SAVE RECORD NO
2303  2D5A- 9D 51 03           STA FIRCTB,X
2304  2D5D- A9 00              LDA =0          CLEAR UPDATED FLAG
2305  2D5F- 9D 49 03           STA FIBPTB,X
2306  2D62- BD 41 03           LDA FIDVTB,X    SET DRIVE NO
2307  2D65- 85 DC              STA FILDRV
2308                   *
2309                   * COMPUTE DATA-POINTER AND BINARY
2310                   * TRACK,SECTOR, SETUP FILDRV
2311                   *
2312  2D67- 20 83 20           JSR PREPSR
2313                   *
2314                   * ADD RECORD NUMBER TO BINARY TRAC/SECTOR
2315                   * TEST SIZE OF FILE, CONVERT TO TRACK AND
2316                   * SECTOR, INITIALIZE DISK OPERATION
2317                   *
2318  2D6A- 20 86 20           JSR PREPSR1
2319                   *
2320  2D6D- 20 8F 20           JSR READ        READ ON SECTOR
2321                   *
2322  2D70- 4C 9B 20           JMP ENDDO       END OF DISK OPERATION
2323                   *
2324                   * PUTTREC: SAVE CURRENT RECORD ON DISK
2325                   * FILE NUMBER IN CURSEQ, RECORD NUMBER IN
2326                   * FIRCTB,Y, RETURNS Z=1 IF OK, ELSE FILERR
2327                   *
2328  2D73- BD 41 03   PUTTREC LDA FIDVTB,X
2329  2D76- 85 DC              STA FILDRV
2330  2D78- 20 83 20           JSR PREPSR      SEE GETTREC FOR
2331  2D7B- 20 86 20           JSR PREPSR1     COMMENTS
2332  2D7E- 20 92 20           JSR WRITE
2333  2D81- 4C 9B 20           JMP ENDDO
2334                   *
2335                   * GETNEWR: GET A NEW RECORD, SAVE OLD, IF
2336                   * OLD HAS BEEN UPDATED
2337                   * ENTRY: NEW RECORD IN A, FILE NO IN CURSEQ

----------------------------------------------------------------------

R65 PASCAL: RANDOM ACCESS          10/11/23   R65 ASSEMBLER  PAGE 50

2338                   * EXIT: z=1 IF OK, ELSE FILERR
2339                   *
2340  2D84- 8D 34 03   GETNEWR STA SAVRST+1    SAVE REQUESTED RECORD
2341  2D87- AE 35 03           LDX CURSEQ
2342  2D8A- BD 49 03           LDA FIBPTB,X    UPDATED?
2343  2D8D- 10 05              BPL GETNEW1
2344                   *
2345  2D8F- 20 73 2D           JSR PUTTREC     YES, SAVE IT
2346  2D92- D0 23              BNE EXIT
2347                   *
2348  2D94- AD 34 03   GETNEW1 LDA SAVRST+1    GET REQUESTED RECORD
2349  2D97- 4C 57 2D           JMP GETTREC
2350                   *
2351                   * GETBYTE: GET ONE BYTE FROM FILE
2352                   *********************************
2353                   * ENTRY: FILE NUMBER IN X
2354                   *        POINTER IN A(LOW) AND Y(HIGH)
2355                   * EXIT:  FILERR IN Y AND STATUS, BYTE IN A
2356                   *
2357  2D9A- 8D 33 03   GETBYTE STA SAVRST      SAVE A
2358  2D9D- 20 E7 2D           JSR TESTRA
2359                   *
2360  2DA0- 98                 TYA
2361  2DA1- DD 51 03           CMP FIRCTB,X    IS IT IN CURRENT RECORD?
2362  2DA4- F0 05              BEQ GETBYT1     YES, SKIP
2363                   *
2364  2DA6- 20 84 2D           JSR GETNEWR     NO, GET NEW RECORD
2365  2DA9- D0 0C              BNE EXIT
2366                   *
2367  2DAB- 20 80 20   GETBYT1 JSR CPOINT      COMPUTE BUFFER PNT
2368  2DAE- AC 33 03           LDY SAVRST      RESTORE LOW POINTER
2369  2DB1- B1 FA              LDA (POINT),Y   GET THE BYTE
2370  2DB3- A0 00              LDY =0
2371  2DB5- 84 DB              STY FILERR      OK
2372  2DB7- 60         EXIT    RTS
2373                   *
2374                   * PUTBYTE: PUT ONE BYTE TO FILE
2375                   *******************************
2376                   *
2377                   * ENTRY: BYTE STORED IN KCHAR
2378                   *        FILE NUMBER IN X
2379                   *        POINTER IN A(LOW) AND Y(HIGH)
2380                   * EXIT:  FILERR IN Y AND STATUS
2381                   *
2382  2DB8- 8D 33 03   PUTBYTE STA SAVRST
2383  2DBB- 20 E7 2D           JSR TESTRA
2384  2DBE- BD 39 03           LDA FIDRTB,X    IS WRITE ALLOWED?
2385  2DC1- 30 05              BMI PUTBYT0     YES,SKIP
2386  2DC3- A0 29              LDY =$29        WRITE NOT ALLOWED
2387  2DC5- 84 DB              STY FILERR

----------------------------------------------------------------------

R65 PASCAL: RANDOM ACCESS          10/11/23   R65 ASSEMBLER  PAGE 51

2388  2DC7- 60                 RTS
2389                   *
2390  2DC8- 98         PUTBYT0 TYA             FOR COMMENTS
2391  2DC9- DD 51 03           CMP FIRCTB,X    SEE GETBYTE
2392  2DCC- F0 05              BEQ PUTBYT1
2393                   *
2394  2DCE- 20 84 2D           JSR GETNEWR
2395  2DD1- D0 E4              BNE EXIT
2396                   *
2397  2DD3- 20 80 20   PUTBYT1 JSR CPOINT
2398  2DD6- A9 80              LDA =$80        SET UPDATED FLAG
2399  2DD8- 9D 49 03           STA FIBPTB,X
2400  2DDB- AC 33 03           LDY SAVRST
2401  2DDE- A5 FE              LDA KCHAR       GET BACK KCHAR
2402  2DE0- 91 FA              STA (POINT),Y
2403  2DE2- A0 00              LDY =0
2404  2DE4- 84 DB              STY FILERR
2405  2DE6- 60                 RTS
2406                   *
2407                   *
2408                   * TESTRA: TEST X FOR LEGAL RA-FILE
2409                   *
2410  2DE7- 8E 35 03   TESTRA  STX CURSEQ
2411  2DEA- EC 36 03           CPX MAXSEQ
2412  2DED- B0 0A              BCS TESTRA2
2413                   *
2414  2DEF- BD 39 03   TESTRA1 LDA FIDRTB,X
2415  2DF2- 29 60              AND =$60
2416  2DF4- C9 60              CMP =$60
2417  2DF6- D0 03              BNE TESTRA3     SKIP, IF NOT OK
2418  2DF8- 60                 RTS
2419                   *
2420  2DF9- F0 F4      TESTRA2 BEQ TESTRA1
2421  2DFB- 68         TESTRA3 PLA
2422  2DFC- 68                 PLA
2423  2DFD- A0 25              LDY =$25        FILE NUMBER NOT ALLOWED
2424  2DFF- 84 DB             STY FILERR
2425  2E01- 60                 RTS
2426                   *
2427                   * CLOSRA: CLOSE RA OR SEQUENTIAL FILE IN X
2428                   ******************************************
2429                   * ENTRY: FILE IN X
2430                   * EXIT: FILERR IN Y AND STATUS
2431                   *
2432  2E02- BD 39 03   CLOSRA  LDA FIDRTB,X
2433  2E05- 29 40              AND =$40        SEQUENTIAL FILE?
2434  2E07- D0 03              BNE CLOSRA1     NO, SKIP
2435  2E09- 4C 89 20           JMP CLOSE       YES, CLOSE IT
2436                   *
2437  2E0C- 20 E7 2D   CLOSRA1 JSR TESTRA      MUST BE RA-FILE

----------------------------------------------------------------------

R65 PASCAL: RANDOM ACCESS          10/11/23   R65 ASSEMBLER  PAGE 52

2438  2E0F- BD 49 03           LDA FIBPTB,X    UPDATED?
2439  2E12- F0 05              BEQ CLOSRA2     NO, SKIP
2440                   *
2441  2E14- 20 73 2D           JSR PUTTREC
2442  2E17- D0 0B              BNE CLOSRA3
2443                   *
2444  2E19- AE 35 03   CLOSRA2 LDX CURSEQ
2445  2E1C- A9 00              LDA =0
2446  2E1E- 9D 39 03           STA FIDRTB,X    CLOSE IT
2447  2E21- A8                 TAY
2448  2E22- 84 DB              STY FILERR
2449  2E24- 60         CLOSRA3 RTS
2450                   *
2451                   ENDCODE EQU *
2452                   *
2453                           TIT R65 PASCAL: LABELS
2454                   *
2455  2E25-                    END
LABELS=0162
ERRORS=00
RECORDS=7A
