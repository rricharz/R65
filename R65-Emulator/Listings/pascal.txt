

----------------------------------------------------------------------

R65 PASCAL: LABELS                 07/11/23   R65 ASSEMBLER  PAGE 01

0001                    *
0002                   *       **********************
0003                   *       * R65 PASCAL RUNTIME *
0004                   *       **********************
0005                   *
0006                   * VERSION 5.3 01/06/82 RRICHARZ,RBAUMANN
0007                   * IMPROVED 2019-2023 RRICHARZ
0008                   *
0009                           TIT R65 PASCAL RUNTIME
0010                   *
0011                   * INCLUDES RANDOM ACCESS FILE HANDLING,
0012                   * FLOATING POINT MATH, FILE HANDLING ERROR
0013                   * TESTING (OPTIONAL) AND CPNT POINTERS
0014                   *
0015                           ORG 0
0016                   *
0017  0000-            ACCU    BSS 4   TOP OF STACKELEMENT
0018                   X1      EQU ACCU        FLP ACCU
0019                   M1      EQU ACCU+1
0020  0004-            E       BSS 4   FLP SCRATCH REGISTER
0021  0008-            SP      BSS 2   CURRENT STACK (-128)
0022  000A-            PC      BSS 2   PROGRAM COUNTER
0023  000C-            RUNERR  BSS 1   RUNTIME ERROR CODE
0024  000D-            DEVICE  BSS 1   I/O DEVICE CODE
0025  000E-            ENDSTK  BSS 2   END OF STACK (-128)
0026  0010-            SIGN    BSS 1   TEMPORARY SIGN
0027  0011-            STPROG  BSS 2   START OF USER PROGRAM
0028  0013-            EOPROG  BSS 2   END OF USER PRORMA
0029  0015-            BUFFPN  BSS 1   INPUT BUFFER POINTER
0030  0016-            ENDBUF  BSS 1   END OF INPUT BUFFER
0031  0017-            BASE    BSS 2   CURRENT BASE (-128)
0032  0019-            ABASE   BSS 2   ALTERNATE BASE (-128)
0033  001B-            ARG1    BSS 2   TEMPORARY ARGUMENT
0034  001D-            ARG3    BSS 4   TEMPORARY REGISTERS
0035  0021-            ARG2    BSS 2
0036                   X2      EQU ARG1        FLP REGISTER
0037                   M2      EQU ARG1+1
0038  0023-            IOCHECK BSS 1   IO ERROR CHECKING FLAG
0039  0024-            LINBUF  BSS 56  INPUT LINE BUFFER
0040                   *
0041                   FILFLG  EQU $DA
0042                   FILERR  EQU $DB
0043                   FILDRV  EQU $DC
0044                   TRACK   EQU $DD
0045                   SECTOR  EQU $DE
0046                   DATA    EQU $E0
0047                   VIDPNT  EQU $E9
0048                   POINT   EQU $FA
0049                   KCHAR   EQU $FE
0050                   *

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 07/11/23   R65 ASSEMBLER  PAGE 01

0051                   EMUCOM  EQU $1430       EMULATOR COMMAND REG
0052                   MULTA   EQU $14E0
0053                   MULTB   EQU $14E1
0054                   MULTR   EQU $14E2
0055                   *
0056                   FILTYP  EQU $0300
0057                   FILNAM  EQU $0301
0058                   FILCYC  EQU $0311
0059                   FILSTP  EQU $0312
0060                   FILLOC  EQU $0313
0061                   FILSIZ  EQU $0315
0062                   FILSA   EQU $031A
0063                   FILEA   EQU $031C
0064                   FILNM1  EQU $0320
0065                   FILCY1  EQU $0330
0066                   FILSA1  EQU $0331
0067                   SAVRST  EQU $0333
0068                   CURSEQ  EQU $0335
0069                   MAXSEQ  EQU $0336
0070                   MAXSIZ  EQU $0337
0071                   FIDRTB  EQU $0339
0072                   FIDVTB  EQU $0341
0073                   FIBPTB  EQU $0349
0074                   FIRCTB  EQU $0351
0075                   GRX     EQU $03AE
0076                   GRY     EQU $03AF
0077                   GRC     EQU $03B0
0078                   SFLAG   EQU $1781
0079                   NUMCHR  EQU $178A
0080                   VMON    EQU $17D5
0081                   SAVS    EQU $17FF
0082                   *
0083                   APLOTCH EQU $C818
0084                   GETKEY  EQU $E000
0085                   AUTOPR  EQU $E00C
0086                   ENDLIN  EQU $E024
0087                   PRTINF  EQU $E027
0088                   GETCHR  EQU $E003
0089                   GETLIN  EQU $E006
0090                   PRTCHR  EQU $E009
0091                   PRTBYT  EQU $E02D
0092                   PRTAX   EQU $E030
0093                   PRTRSA  EQU $E836
0094                   RDFILE  EQU $E815
0095                   SETFID  EQU $E81E
0096                   OPEN    EQU $F00F
0097                   READCH  EQU $F018
0098                   WRITCH  EQU $F01B
0099                   GETNAM  EQU $F815
0100                   *

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 07/11/23   R65 ASSEMBLER  PAGE 02

0101  005C-                    ORG $2000
0102                   *
0103                           PAG

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 07/11/23   R65 ASSEMBLER  PAGE 03

0104                   *
0105                   * ENTRY VECTORS
0106                   *
0107  2000- 4C 64 2B           JMP COLDST      COLD START ENTRY VECTOR
0108  2003- 4C D2 29           JMP WARMST      WARM START ENTRY VECTOR
0109  2006- 4C 92 29           JMP PERROR      PASCAL ERROR
0110                   *
0111  2009- 20 2E      USERST  WRD ENDCODE+32
0112  200B- FF C7      USEREND WRD $C7FF
0113                   *
0114  200D- 4C F2 FC   HARGUM  JMP $FCF2       #######
0115                   *
0116                   *
0117                   * P-CODE 00:  STOP      (END OF EXECUTION)
0118                   ******************
0119                   * NO ARGUMENTS
0120                   *
0121  2010- A9 2F      STOP    LDA =47
0122  2012- 8D 8A 17           STA NUMCHR      FORCE 48 CHARS/LINE
0123  2015- A5 11              LDA STPROG      IS ANOTHER PROGRAM
0124  2017- A6 12              LDX STPROG+1    RUNNING?
0125  2019- CD 09 20           CMP USERST
0126  201C- D0 20              BNE STOP1
0127  201E- EC 0A 20           CPX USERST+1
0128  2021- D0 1B              BNE STOP1
0129                   *
0130  2023- 20 27 E0           JSR PRTINF      NO, STOP PASCAL
0131  2026- 0D 0A 51           BYT $0D,$0A,'Quit Pascal'+$80
0131  2029- 75 69 74 
0131  202C- 20 50 61 
0131  202F- 73 63 61 
0131  2032- EC 
0132  2033- AD 81 17           LDA SFLAG
0133  2036- 29 FE              AND =$FE        CLEAR PASCAL RUNTIME BIT
0134  2038- 8D 81 17           STA SFLAG       IN SFLAG
0135  203B- 6C D5 17           JMP (VMON)
0136                   *
0137  203E- 38         STOP1   SEC             YES, COMPUTE OLD SP
0138  203F- E9 8C              SBC =140
0139  2041- B0 01              BCS *+3
0140  2043- CA                 DEX
0141  2044- 85 08              STA SP
0142  2046- 86 09              STX SP+1
0143  2048- A0 8C              LDY =140
0144  204A- 20 63 27           JSR GETBACK
0145  204D- 85 13              STA EOPROG
0146  204F- 86 14              STX EOPROG+1
0147  2051- 20 63 27           JSR GETBACK
0148  2054- 85 11              STA STPROG
0149  2056- 86 12              STX STPROG+1

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 07/11/23   R65 ASSEMBLER  PAGE 04

0150  2058- 20 63 27           JSR GETBACK
0151  205B- 85 0A              STA PC
0152  205D- 86 0B              STX PC+1
0153  205F- 20 63 27           JSR GETBACK
0154  2062- 85 17              STA BASE
0155  2064- 86 18              STX BASE+1
0156  2066- 20 63 27           JSR GETBACK
0157  2069- 85 00              STA ACCU
0158  206B- 86 01              STX ACCU+1
0159  206D- AE FF 17           LDX SAVS        RESTORE STACK POINTER
0160  2070- 9A                 TXS
0161  2071- 4C 6B 2A           JMP LOOP
0162                   *
0163                   *
0164  2074- 4C FF F0   DOPEN1  JMP $F0FF
0165  2077- 4C 45 F1   DOPEN4  JMP $F145
0166  207A- 4C 51 F1   PRFLB1  JMP $F151
0167  207D- 4C 59 F1   CPOINT  JMP $F159
0168  2080- 4C E0 F1   PREPSR  JMP $F1E0
0169  2083- 4C 9E F2   PREPSR1 JMP $F29E
0170  2086- 4C BF F2   CLOSE   JMP $F2BF
0171  2089- 4C 57 F4   READ    JMP $F457
0172  208C- 4C 25 F4   WRITE   JMP $F425
0173  208F- 4C A7 F4   PREPDO  JMP $F4A7
0174  2092- 4C FD F5   DISCER1 JMP $F5FD
0175  2095- 4C 25 F6   ENDDO   JMP $F625
0176  2098- 4C 2C F6   PREPRD  JMP $F62C
0177  209B- 4C 51 F6   PREPWRA JMP $F651
0178  209E- 4C 6D F6   PREPWRB JMP $F66D
0179                   *
0180                   *
0181                   * P-CODE 01: RETN       (RETURN FROM PROCEDURE
0182                   *****************
0183                   * NO ARGUMENTS
0184                   *
0185  20A1- A5 17      RETN    LDA BASE        SP=BASE-2
0186  20A3- 38                 SEC
0187  20A4- E9 02              SBC =2
0188  20A6- 85 08              STA SP
0189  20A8- A5 18              LDA BASE+1
0190  20AA- E9 00              SBC =0
0191  20AC- 85 09              STA SP+1
0192  20AE- A0 80              LDY =128        GET STACK TOP ELEMENT
0193  20B0- B1 08              LDA (SP),Y
0194  20B2- 85 00              STA ACCU
0195  20B4- C8                 INY
0196  20B5- B1 08              LDA (SP),Y
0197  20B7- 85 01              STA ACCU+1
0198  20B9- A0 84              LDY =132
0199  20BB- B1 08              LDA (SP),Y      GET SAVED OLD BASE

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 07/11/23   R65 ASSEMBLER  PAGE 05

0200  20BD- 85 17              STA BASE
0201  20BF- C8                 INY
0202  20C0- B1 08              LDA (SP),Y
0203  20C2- 85 18              STA BASE+1
0204  20C4- C8                 INY
0205  20C5- B1 08              LDA (SP),Y      AND RETURN ADDRESS
0206  20C7- 18                 CLC
0207  20C8- 69 02              ADC =2
0208  20CA- 85 0A              STA PC
0209  20CC- C8                 INY
0210  20CD- B1 08              LDA (SP),Y
0211  20CF- 69 00              ADC =0
0212  20D1- 85 0B              STA PC+1
0213  20D3- 60                 RTS
0214                   *
0215                   * P-CODE 02: NEGA       (NEGATE ACCU)
0216                   *****************
0217                   * NO ARGUMENTS
0218                   *
0219  20D4- A9 00      NEGA    LDA =0
0220  20D6- 38                 SEC
0221  20D7- E5 00              SBC ACCU
0222  20D9- 85 00              STA ACCU
0223  20DB- A9 00              LDA =0
0224  20DD- E5 01              SBC ACCU+1
0225  20DF- 85 01              STA ACCU+1
0226  20E1- 60                 RTS
0227                   *
0228                   * P-CODE 03: ADDA       (ADD)
0229                   *****************
0230                   * NO ARGUMENTS
0231                   *
0232  20E2- A0 7E      ADDA    LDY =126
0233  20E4- 18                 CLC
0234  20E5- B1 08              LDA (SP),Y
0235  20E7- 65 00              ADC ACCU
0236  20E9- 85 00              STA ACCU
0237  20EB- C8                 INY
0238  20EC- B1 08              LDA (SP),Y
0239  20EE- 65 01              ADC ACCU+1
0240  20F0- 85 01              STA ACCU+1
0241                   *
0242  20F2- A5 08      DECS2   LDA SP
0243  20F4- 38                 SEC
0244  20F5- E9 02              SBC =2
0245  20F7- 85 08              STA SP
0246  20F9- B0 02              BCS *+4
0247  20FB- C6 09              DEC SP+1
0248  20FD- 60                 RTS
0249                   *

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 07/11/23   R65 ASSEMBLER  PAGE 06

0250                   * P-CODE 04: SUBA       (SUBTRACT)
0251                   *****************
0252                   * NO ARGUMENTS
0253                   *
0254  20FE- A0 7E     SUBA    LDY =126
0255  2100- 38                 SEC
0256  2101- B1 08              LDA (SP),Y
0257  2103- E5 00              SBC ACCU
0258  2105- 85 00              STA ACCU
0259  2107- C8                 INY
0260  2108- B1 08              LDA (SP),Y
0261  210A- E5 01              SBC ACCU+1
0262  210C- 85 01              STA ACCU+1
0263  210E- 4C F2 20           JMP DECS2
0264                   *
0265                   * P-CODE 05: MULA       (MULTIPLY)
0266                   *****************
0267                   * NO ARGUMENTS
0268                   *
0269  2111- 20 4B 21   MULA    JSR GETSIGN     COMPUTE SIGN OF RESULT
0270  2114- A5 00              LDA ACCU
0271  2116- 78                 SEI
0272  2117- 8D E0 14           STA MULTA
0273  211A- A5 1B              LDA ARG1        GET SAVED ARGUMENT
0274  211C- 8D E1 14           STA MULTB
0275  211F- AD E2 14           LDA MULTR
0276  2122- 85 00              STA ACCU
0277  2124- AD E3 14           LDA MULTR+1
0278  2127- A6 1C              LDX ARG1+1
0279  2129- 8E E1 14           STX MULTB
0280  212C- 18                 CLC
0281  212D- 6D E2 14           ADC MULTR
0282  2130- A6 01              LDX ACCU+1
0283  2132- 8E E0 14           STX MULTA
0284  2135- A6 1B              LDX ARG1
0285  2137- 8E E1 14           STX MULTB
0286  213A- 18                 CLC
0287  213B- 6D E2 14           ADC MULTR
0288  213E- 58                 CLI
0289  213F- 29 7F              AND =$7F
0290  2141- 85 01              STA ACCU+1
0291  2143- 20 F2 20           JSR DECS2
0292  2146- A5 10              LDA SIGN
0293  2148- 30 8A              BMI NEGA
0294  214A- 60                 RTS
0295                   *
0296  214B- A5 01      GETSIGN LDA ACCU+1
0297  214D- 85 10              STA SIGN
0298  214F- 10 03              BPL *+5
0299  2151- 20 D4 20           JSR NEGA

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 07/11/23   R65 ASSEMBLER  PAGE 07

0300                   *
0301  2154- A0 7F              LDY =127
0302  2156- B1 08              LDA (SP),Y
0303  2158- 10 14              BPL GETSI1
0304  215A- 45 10              EOR SIGN
0305  215C- 85 10              STA SIGN
0306  215E- 88                 DEY
0307  215F- A9 00              LDA =0
0308  2161- 38                 SEC
0309  2162- F1 08              SBC (SP),Y
0310  2164- 85 1B              STA ARG1
0311  2166- C8                 INY
0312  2167- A9 00              LDA =0
0313  2169- F1 08              SBC (SP),Y
0314  216B- 85 1C              STA ARG1+1
0315  216D- 60                 RTS
0316                   *
0317  216E- 85 1C      GETSI1  STA ARG1+1
0318  2170- 88                 DEY
0319  2171- B1 08              LDA (SP),Y
0320  2173- 85 1B              STA ARG1
0321  2175- 60                 RTS
0322                   *
0323                   * PCODE 06: DIVA        (DIVIDE)
0324                   ****************
0325                   *
0326  2176- A0 7E      DIVA    LDY =126
0327  2178- B1 08              LDA (SP),Y
0328  217A- 85 1B              STA ARG1
0329  217C- C8                 INY
0330  217D- B1 08              LDA (SP),Y
0331  217F- 85 1C              STA ARG1+1
0332  2181- 20 F2 20           JSR DECS2
0333                   *
0334  2184- A5 1C              LDA ARG1+1
0335  2186- 29 80              AND =$80
0336  2188- F0 02              BEQ *+4
0337  218A- A9 FF              LDA =$FF
0338  218C- 85 21              STA ARG2
0339  218E- 85 22              STA ARG2+1
0340  2190- AA                 TAX
0341  2191- 18                 CLC
0342  2192- 65 1B              ADC ARG1
0343  2194- 85 1B              STA ARG1
0344  2196- 8A                 TXA
0345  2197- 65 1C              ADC ARG1+1
0346  2199- 85 1C              STA ARG1+1
0347  219B- 8A                 TXA
0348  219C- 45 01              EOR ACCU+1
0349  219E- 85 10              STA SIGN

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 07/11/23   R65 ASSEMBLER  PAGE 08

0350  21A0- 10 03              BPL *+5
0351  21A2- 20 D4 20           JSR NEGA
0352  21A5- A0 11              LDY =$11
0353  21A7- A5 00              LDA ACCU
0354  21A9- 05 01              ORA ACCU+1
0355  21AB- D0 05              BNE DIV1
0356  21AD- A2 81              LDX =$81        PASCAL RUNTIME ERROR
0357  21AF- 4C 92 29           JMP PERROR      DIVISION BY ZERO
0358                   *
0359  21B2- 38         DIV1    SEC
0360  21B3- A5 21              LDA ARG2
0361  21B5- E5 00              SBC ACCU
0362  21B7- 48                 PHA
0363  21B8- A5 22              LDA ARG2+1
0364  21BA- E5 01              SBC ACCU+1
0365  21BC- 48                 PHA
0366  21BD- 45 22              EOR ARG2+1
0367  21BF- 30 09              BMI DIV2
0368  21C1- 68                 PLA
0369  21C2- 85 22              STA ARG2+1
0370  21C4- 68                 PLA
0371  21C5- 85 21              STA ARG2
0372  21C7- 38                 SEC
0373  21C8- B0 03              BCS DIV3
0374                   *
0375  21CA- 68         DIV2    PLA
0376  21CB- 68                 PLA
0377  21CC- 18                 CLC
0378  21CD- 26 1B      DIV3    ROL ARG1
0379  21CF- 26 1C              ROL ARG1+1
0380  21D1- 26 21              ROL ARG2
0381  21D3- 26 22              ROL ARG2+1
0382  21D5- 88                 DEY
0383  21D6- D0 DA              BNE DIV1
0384  21D8- A5 1B              LDA ARG1
0385  21DA- A6 1C              LDX ARG1+1
0386  21DC- 85 00              STA ACCU
0387  21DE- 86 01              STX ACCU+1
0388  21E0- A5 10              LDA SIGN
0389  21E2- 10 03              BPL *+5
0390  21E4- 4C D4 20           JMP NEGA
0391  21E7- 60                 RTS
0392                   *
0393                   * P-CODE 07: LOWB       (LOW BIT)
0394                   *****************
0395                   * NO ARGUMENTS
0396                   *
0397  21E8- A5 00      LOWB    LDA ACCU
0398  21EA- 29 01              AND =1
0399  21EC- 85 00      LOWB1   STA ACCU

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 07/11/23   R65 ASSEMBLER  PAGE 09

0400  21EE- A9 00              LDA =0
0401  21F0- 85 01              STA ACCU+1
0402  21F2- 60                 RTS
0403                   *
0404                   * P-CODE 08: TEQU       (TEST EQUAL)
0405                   *****************
0406                   *
0407  21F3- 20 FE 20   TEQU    JSR SUBA
0408  21F6- A5 00              LDA ACCU
0409  21F8- 05 01              ORA ACCU+1
0410  21FA- F0 04              BEQ TEQU1
0411  21FC- A9 00              LDA =0
0412  21FE- F0 EC             BEQ LOWB1       UNCOND.
0413                   *
0414  2200- A9 01      TEQU1   LDA =1
0415  2202- D0 E8              BNE LOWB1       UNCOND.
0416                   *
0417                   * PCODE 09: TNEQ        (TEST NOT EQUAL)
0418                   ****************
0419                   *
0420  2204- 20 F3 21   TNEQ    JSR TEQU
0421  2207- A5 00              LDA ACCU
0422  2209- 49 01              EOR =1
0423  220B- 85 00              STA ACCU
0424  220D- 60                 RTS
0425                   *
0426                   * P-CODE 0A: TLES       (TEST LESS)
0427                   *****************
0428                   *
0429  220E- 20 FE 20   TLES    JSR SUBA
0430  2211- A9 00              LDA =0
0431  2213- 06 01              ASL ACCU+1
0432  2215- 2A                 ROL A
0433  2216- 90 D4              BCC LOWB1       UNCOND.
0434                   *
0435                   * P-CODE 0B: TGRE       (TEST GREATER OR EQUAL)
0436                   *****************
0437                   *
0438  2218- 20 0E 22   TGRE    JSR TLES
0439  221B- 4C 07 22           JMP TNEQ+3
0440                   *
0441                   * P-CODE 0C: TGRTS      (TEST GREATER)
0442                   ******************
0443                   *
0444  221E- 20 F3 26   TGRT    JSR EXST
0445  2221- 4C 0E 22           JMP TLES
0446                   *
0447                   * P-CODE 0D: TLEE       (TEST LESS OR EQUAL)
0448                   *****************
0449                   *

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 07/11/23   R65 ASSEMBLER  PAGE 10

0450  2224- 20 1E 22   TLEE    JSR TGRT
0451  2227- 4C 07 22           JMP TNEQ+3
0452                   *
0453                   * P-CODE 0E: ORAC       (BITWISE OR)
0454                   *****************
0455                   *
0456  222A- A0 7E      ORAC    LDY =126
0457  222C- B1 08              LDA (SP),Y
0458  222E- 05 00              ORA ACCU
0459  2230- 85 00              STA ACCU
0460  2232- C8                 INY
0461  2233- B1 08              LDA (SP),Y
0462  2235- 05 01              ORA ACCU+1
0463  2237- 85 01              STA ACCU+1
0464  2239- 4C F2 20           JMP DECS2
0465                   *
0466                   * P-CODE 0F: ANDA       (BITWISE AND)
0467                   *****************
0468                   *
0469  223C- A0 7E      ANDA    LDY =126
0470  223E- B1 08              LDA (SP),Y
0471  2240- 25 00              AND ACCU
0472  2242- 85 00              STA ACCU
0473  2244- C8                 INY
0474  2245- B1 08              LDA (SP),Y
0475  2247- 25 01              AND ACCU+1
0476  2249- 85 01              STA ACCU+1
0477  224B- 4C F2 20           JMP DECS2
0478                   *
0479                   * PCODE 10: EORA        (BITWISE OR)
0480                   ****************
0481                   *
0482  224E- A0 7E      EORA    LDY =126
0483  2250- B1 08              LDA (SP),Y
0484  2252- 45 00              EOR ACCU
0485  2254- 85 00              STA ACCU
0486  2256- C8                 INY
0487  2257- B1 08              LDA (SP),Y
0488  2259- 45 01              EOR ACCU+1
0489  225B- 85 01              STA ACCU+1
0490  225D- 4C F2 20           JMP DECS2
0491                   *
0492                   * P-CODE 11: NOTA       (BITWISE NOT)
0493                   *****************
0494                   *
0495  2260- A5 00      NOTA    LDA ACCU
0496  2262- 49 FF              EOR =$FF
0497  2264- 85 00              STA ACCU
0498  2266- A5 01              LDA ACCU+1
0499  2268- 49 FF              EOR =$FF

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 07/11/23   R65 ASSEMBLER  PAGE 11

0500  226A- 85 01              STA ACCU+1
0501  226C- 60                 RTS
0502                   *
0503                   * P-CODE 12: LEFT       (SHIFT LEFT N BYTES)
0504                   *****************
0505                   *
0506  226D- 20 D4 20           JSR NEGA
0507  2270- A5 01      LEFT    LDA ACCU+1
0508  2272- 30 12              BMI RIGH-3      ARGUMENT NEGATIVE
0509                   *
0510  2274- A6 00              LDX ACCU
0511  2276- F0 0B              BEQ LEFT2       TAKE ONLY LOW BYTE
0512  2278- 20 E3 22           JSR GETS2       GET SECOND NO FROM ST
0513  227B- 06 00      LEFT1   ASL ACCU
0514  227D- 26 01              ROL ACCU+1
0515  227F- CA                 DEX
0516  2280- D0 F9              BNE LEFT1
0517  2282- 60                 RTS
0518                   *
0519  2283- 4C E3 22   LEFT2   JMP GETS2
0520                   *
0521                   * P-CODE 13: RIGH       (SHIFT RIGHT N BYTES)
0522                   *****************
0523                   *
0524  2286- 20 D4 20           JSR NEGA
0525  2289- A5 01      RIGH    LDA ACCU+1
0526  228B- 30 E0              BMI LEFT-3
0527  228D- A6 00              LDX ACCU
0528  228F- F0 F2              BEQ LEFT2
0529  2291- 20 E3 22           JSR GETS2
0530  2294- 46 01      RIGH1   LSR ACCU+1
0531  2296- A9 00              LDA =0
0532  2298- 90 02              BCC *+4
0533  229A- A9 80              LDA =128
0534  229C- 46 00              LSR ACCU
0535  229E- 05 00              ORA ACCU
0536  22A0- 85 00              STA ACCU
0537  22A2- CA                 DEX
0538  22A3- D0 EF              BNE RIGH1
0539  22A5- 60                 RTS
0540                   *
0541                   * P-CODE 14:INCA        (INCREMENT ACCU)
0542                   ****************
0543                   *
0544  22A6- E6 00      INCA    INC ACCU
0545  22A8- D0 02              BNE *+4
0546  22AA- E6 01              INC ACCU+1
0547  22AC- 60                 RTS
0548                   *
0549                   * P-CODE 15: DECA       (DECREMENT ACCU)

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 07/11/23   R65 ASSEMBLER  PAGE 12

0550                   *****************
0551                   *
0552  22AD- A5 00      DECA    LDA ACCU
0553  22AF- D0 02              BNE *+4
0554  22B1- C6 01              DEC ACCU+1
0555  22B3- C6 00              DEC ACCU
0556  22B5- 60                 RTS
0557                   *
0558                   * P-CODE 16: COPY       (COPY ACCU0
0559                   *****************
0560                   *
0561  22B6- 20 C5 22   COPY    JSR INCS2       INCREMENT STACK
0562  22B9- A0 7E              LDY =126
0563  22BB- A5 00              LDA ACCU
0564  22BD- 91 08              STA (SP),Y
0565  22BF- C8                 INY
0566  22C0- A5 01              LDA ACCU+1
0567  22C2- 91 08              STA (SP),Y
0568  22C4- 60                 RTS
0569                   *
0570  22C5- A9 02      INCS2   LDA =2
0571  22C7- 18                 CLC
0572  22C8- 65 08              ADC SP
0573  22CA- 85 08              STA SP
0574  22CC- 90 02              BCC *+4
0575  22CE- E6 09              INC SP+1
0576  22D0- C5 0E      INCS2A  CMP ENDSTK      TEST STACK OVERFLOW
0577  22D2- A5 09              LDA SP+1
0578  22D4- E5 0F              SBC ENDSTK+1
0579  22D6- B0 06              BCS INCS2B
0580  22D8- A9 05              LDA =5          LET EMULATOR KNOW THAT
0581  22DA- 8D 30 14           STA EMUCOM      SP HAS BEEN INCREASED
0582  22DD- 60                 RTS
0583                   *
0584  22DE- A0 82      INCS2B  LDY =$82        PASCAL RUN TIME ERROR
0585  22E0- 4C 92 29           JMP PERROR      STACK OVERFLOW
0586                   *
0587                   * GETS2
0588                   *
0589  22E3- A0 7E      GETS2   LDY =126
0590  22E5- B1 08              LDA (SP),Y
0591  22E7- 85 00              STA ACCU
0592  22E9- C8                 INY
0593  22EA- B1 08              LDA (SP),Y
0594  22EC- 85 01              STA ACCU+1
0595  22EE- 4C F2 20           JMP DECS2
0596                   *
0597                   * P-CODE 17: PEEK
0598                   *****************
0599                   *

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 07/11/23   R65 ASSEMBLER  PAGE 13

0600  22F1- A0 00      PEEK    LDY =0
0601  22F3- B1 00              LDA (ACCU),Y
0602  22F5- 85 00              STA ACCU
0603  22F7- 84 01              STY ACCU+1
0604  22F9- 60                 RTS
0605                   *
0606                   * P-CODE 18: POKE
0607                   *****************
0608                   *
0609  22FA- A6 00      POKE    LDX ACCU
0610  22FC- 20 E3 22           JSR GETS2
0611  22FF- A0 00             LDY =0
0612  2301- 8A                 TXA
0613  2302- 91 00              STA (ACCU),Y
0614  2304- 4C E3 22           JMP GETS2
0615                   *
0616                   * P-CODE 19: CALA
0617                   *****************
0618                   *
0619  2307- 20 0D 23   CALA    JSR CALA1
0620  230A- 4C E3 22           JMP GETS2
0621                   *
0622  230D- 6C 00 00   CALA1   JMP (ACCU)
0623                   *
0624                   * P-CODE 1A: RLIN
0625                   *****************
0626                   *
0627  2310- 20 06 E0   RLIN    JSR GETLIN
0628  2313- A2 00              LDX =0
0629  2315- B1 E9              LDA (VIDPNT),Y
0630  2317- 29 7F              AND =$7F
0631  2319- 95 24              STA LINBUF,X
0632  231B- E8                 INX
0633  231C- C8                 INY
0634  231D- CC 8A 17           CPY NUMCHR
0635  2320- 90 F3              BCC *-11
0636  2322- F0 F1              BEQ *-13
0637  2324- CA                 DEX
0638  2325- 30 06              BMI *+8
0639  2327- B5 24              LDA LINBUF,X
0640  2329- C9 20              CMP =$20
0641  232B- F0 F7              BEQ *-7
0642  232D- E8                 INX
0643  232E- 86 16              STX ENDBUF
0644  2330- A9 00              LDA =0
0645  2332- 85 15              STA BUFFPN
0646  2334- 20 27 E0           JSR PRTINF
0647  2337- 0D 8A              BYT $D,$8A
0648  2339- 60                 RTS
0649                   *

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 07/11/23   R65 ASSEMBLER  PAGE 14

0650                   * P-CODE 1B: GETC
0651                   *****************
0652                   *
0653  233A- 20 B6 22   GETC    JSR COPY
0654  233D- 20 27 29           JSR GETCHR0
0655  2340- 85 00      GETC1   STA ACCU
0656  2342- A9 00              LDA =0
0657  2344- 85 01              STA ACCU+1
0658  2346- 60                 RTS
0659                   *
0660                   * P-CODE 1C: GETN
0661                   *****************
0662                   *
0663  2347- 20 B6 22   GETN    JSR COPY
0664  234A- A9 00              LDA =0
0665  234C- 85 00              STA ACCU
0666  234E- 85 01              STA ACCU+1
0667  2350- 85 10              STA SIGN
0668  2352- 20 27 29   GETN0   JSR GETCHR0
0669  2355- C9 20              CMP =' '
0670  2357- F0 F9              BEQ GETN0
0671  2359- C9 2D              CMP ='-'
0672  235B- D0 05              BNE GETN1
0673                   *
0674  235D- C6 10              DEC SIGN
0675  235F- 4C 66 23           JMP GETN2
0676                   *
0677  2362- C9 2B      GETN1    CMP ='+'
0678  2364- D0 03              BNE GETN2+3
0679                   *
0680  2366- 20 27 29   GETN2   JSR GETCHR0
0681  2369- C9 30              CMP ='0'
0682  236B- 90 2F              BCC GETN3
0683  236D- C9 3A              CMP ='9'+1
0684  236F- B0 2B              BCS GETN3
0685  2371- 38                 SEC
0686  2372- E9 30              SBC ='0'
0687  2374- 48                 PHA
0688  2375- 06 00              ASL ACCU
0689  2377- 26 01              ROL ACCU+1
0690  2379- A6 00              LDX ACCU
0691  237B- A4 01              LDY ACCU+1
0692  237D- 06 00              ASL ACCU
0693  237F- 26 01              ROL ACCU+1
0694  2381- 06 00              ASL ACCU
0695  2383- 26 01              ROL ACCU+1
0696  2385- 18                 CLC
0697  2386- 8A                 TXA
0698  2387- 65 00              ADC ACCU
0699  2389- 85 00              STA ACCU

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 07/11/23   R65 ASSEMBLER  PAGE 15

0700  238B- 98                 TYA
0701  238C- 65 01              ADC ACCU+1
0702  238E- 85 01              STA ACCU+1
0703  2390- 68                 PLA
0704  2391- 18                 CLC
0705  2392- 65 00              ADC ACCU
0706  2394- 85 00              STA ACCU
0707  2396- 90 CE              BCC GETN2
0708  2398- E6 01              INC ACCU+1
0709  239A- B0 CA              BCS GETN2
0710                   *
0711  239C- A5 10      GETN3   LDA SIGN
0712  239E- F0 03              BEQ *+5
0713  23A0- 4C D4 20           JMP NEGA
0714  23A3- 60                 RTS
0715                   *
0716                   * P-CODE 1D: PRTC
0717                   *****************
0718                   *
0719  23A4- A5 00      PRTC    LDA ACCU
0720  23A6- 20 57 29           JSR PRTCHR0
0721  23A9- 4C E3 22           JMP GETS2
0722                   *
0723                   * P-CODE 1E: PRTN
0724                   *****************
0725                   *
0726  23AC- A5 01      PRTN    LDA ACCU+1
0727  23AE- 10 08              BPL PRTN1
0728  23B0- 20 D4 20           JSR NEGA
0729  23B3- A9 2D              LDA ='-'
0730  23B5- 20 57 29           JSR PRTCHR0
0731                   *
0732  23B8- A5 00      PRTN1   LDA ACCU
0733  23BA- A6 01              LDX ACCU+1
0734  23BC- 85 21              STA ARG2
0735  23BE- 86 22              STX ARG2+1
0736  23C0- A9 1F              LDA =$1F
0737  23C2- 85 1D              STA ARG3
0738  23C4- 85 1F              STA ARG3+2
0739  23C6- A9 2A              LDA =$2A
0740  23C8- 85 1E              STA ARG3+1
0741  23CA- 85 20              STA ARG3+3
0742  23CC- A6 21              LDX ARG2
0743  23CE- A4 22              LDY ARG2+1
0744  23D0- 38                 SEC
0745  23D1- E6 1D      PRTN2   INC ARG3
0746  23D3- 8A                 TXA
0747  23D4- E9 10              SBC =$10
0748  23D6- AA                 TAX
0749  23D7- 98                 TYA

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 07/11/23   R65 ASSEMBLER  PAGE 16

0750  23D8- E9 27              SBC =$27
0751  23DA- A8                 TAY
0752  23DB- B0 F4              BCS PRTN2
0753  23DD- C6 1E      PRTN3   DEC ARG3+1
0754  23DF- 8A                 TXA
0755  23E0- 69 E8              ADC =$E8
0756  23E2- AA                 TAX
0757  23E3- 98                 TYA
0758  23E4- 69 03              ADC =$03
0759  23E6- A8                 TAY
0760  23E7- 90 F4              BCC PRTN3
0761  23E9- 8A                 TXA
0762  23EA- 38         PRTN4   SEC
0763  23EB- E6 1F      PRTN5   INC ARG3+2
0764  23ED- E9 64              SBC =$64
0765  23EF- B0 FA              BCS PRTN5
0766  23F1- 88                 DEY
0767  23F2- 10 F6              BPL PRTN4
0768  23F4- C6 20      PRTN6   DEC ARG3+3
0769  23F6- 69 0A              ADC =$A
0770  23F8- 90 FA              BCC PRTN6
0771  23FA- 09 30              ORA =$30
0772  23FC- 85 21              STA ARG2
0773  23FE- A9 20             LDA =$20
0774  2400- 85 22              STA ARG2+1
0775  2402- A2 FB              LDX =$FB
0776  2404- 86 10      PRTN7   STX SIGN
0777  2406- B5 22              LDA ARG2+1,X
0778  2408- 05 22              ORA ARG2+1
0779  240A- C9 20              CMP =$20
0780  240C- F0 09              BEQ PRTN8
0781  240E- A0 30              LDY =$30
0782  2410- 84 22              STY ARG2+1
0783  2412- 05 22              ORA ARG2+1
0784  2414- 20 57 29           JSR PRTCHR0
0785  2417- A6 10      PRTN8   LDX SIGN
0786  2419- E8                 INX
0787  241A- D0 E8              BNE PRTN7
0788  241C- 4C E3 22           JMP GETS2
0789                   *
0790                   * P-CODE 1F: PRTS
0791                   *****************
0792                   *
0793  241F- 06 00      PRTS    ASL ACCU
0794  2421- 26 01              ROL ACCU+1
0795  2423- A5 08              LDA SP
0796  2425- 38                 SEC
0797  2426- E5 00              SBC ACCU
0798  2428- 85 00              STA ACCU
0799  242A- 48                 PHA

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 07/11/23   R65 ASSEMBLER  PAGE 17

0800  242B- A5 09              LDA SP+1
0801  242D- E5 01              SBC ACCU+1
0802  242F- 85 01              STA ACCU+1
0803  2431- 48                 PHA
0804  2432- A0 80      OUTST1  LDY =128
0805  2434- B1 00              LDA (ACCU),Y
0806  2436- 20 57 29           JSR PRTCHR0
0807  2439- A5 00              LDA ACCU
0808  243B- 18                 CLC
0809  243C- 69 02              ADC =2
0810  243E- 85 00              STA ACCU
0811  2440- 90 02              BCC *+4
0812  2442- E6 01              INC ACCU+1
0813  2444- C5 08              CMP SP
0814  2446- A5 01              LDA ACCU+1
0815  2448- E5 09              SBC SP+1
0816  244A- 90 E6              BCC OUTST1
0817  244C- 68                 PLA
0818  244D- 85 09              STA SP+1
0819  244F- 68                 PLA
0820  2450- 85 08              STA SP
0821  2452- 4C E3 22           JMP GETS2
0822                   *
0823                   * P-CODE 20: LITB
0824                   *****************
0825                   *
0826  2455- 20 B6 22   LITB    JSR COPY
0827  2458- 20 9F 24           JSR FETCH
0828  245B- 85 00              STA ACCU
0829  245D- A9 00              LDA =0
0830  245F- 85 01              STA ACCU+1
0831  2461- 60                 RTS
0832                   *
0833                   * P-CODE 21: INCB
0834                   *****************
0835                   *
0836  2462- A0 80      INCB    LDY =128        SAVE CURRENT ACCU
0837  2464- A5 00              LDA ACCU
0838  2466- 91 08              STA (SP),Y
0839  2468- C8                 INY
0840  2469- A5 01              LDA ACCU+1
0841  246B- 91 08              STA (SP),Y
0842  246D- 20 9F 24           JSR FETCH
0843  2470- A2 00              LDX =0
0844  2472- A8                 TAY             TEST A
0845  2473- 10 01              BPL *+3
0846  2475- CA                 DEX
0847  2476- 18                 CLC
0848  2477- 65 08              ADC SP
0849  2479- 85 08              STA SP

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 07/11/23   R65 ASSEMBLER  PAGE 18

0850  247B- 8A                 TXA
0851  247C- 65 09              ADC SP+1
0852  247E- 85 09              STA SP+1
0853  2480- A5 08      INCB1   LDA SP
0854  2482- 20 D0 22           JSR INCS2A      TEST STACK OVERFLOW
0855  2485- A0 80              LDY =128        AND GET NEW ACCU
0856  2487- B1 08              LDA (SP),Y
0857  2489- 85 00              STA ACCU
0858  248B- C8                 INY
0859  248C- B1 08              LDA (SP),Y
0860  248E- 85 01              STA ACCU+1
0861  2490- 60                 RTS
0862                   *
0863                   * P-CODE 22: LITW
0864                   *****************
0865                   *
0866  2491- 20 B6 22   LITW    JSR COPY
0867  2494- 20 9F 24           JSR FETCH
0868  2497- 85 00              STA ACCU
0869  2499- 20 9F 24           JSR FETCH
0870  249C- 85 01              STA ACCU+1
0871  249E- 60                 RTS
0872                   *
0873                   * FETCH
0874                   *
0875  249F- A0 00      FETCH   LDY =0
0876  24A1- B1 0A              LDA (PC),Y
0877  24A3- E6 0A              INC PC
0878  24A5- D0 02              BNE *+4
0879  24A7- E6 0B              INC PC+1
0880  24A9- 60                 RTS
0881                   *
0882                   * P-CODE 23: INCW
0883                   *****************
0884                   *
0885  24AA- A0 80      INCW    LDY =128        SAVE CURRENT ACCU
0886  24AC- A5 00              LDA ACCU
0887  24AE- 91 08              STA (SP),Y
0888  24B0- C8                 INY
0889  24B1- A5 01              LDA ACCU+1
0890  24B3- 91 08              STA (SP),Y
0891  24B5- 20 9F 24           JSR FETCH
0892  24B8- 18                 CLC
0893  24B9- 65 08              ADC SP
0894  24BB- 85 08              STA SP
0895  24BD- 20 9F 24           JSR FETCH
0896  24C0- 65 09              ADC SP+1
0897  24C2- 85 09              STA SP+1
0898  24C4- 4C 80 24           JMP INCB1
0899                   *

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 07/11/23   R65 ASSEMBLER  PAGE 19

0900                   * P-CODE 24: JUMP
0901                   *****************
0902                   *
0903  24C7- A0 00      JUMP    LDY =0
0904  24C9- B1 0A              LDA (PC),Y
0905  24CB- 18                 CLC
0906  24CC- 65 0A              ADC PC
0907  24CE- AA                 TAX
0908  24CF- C8                 INY
0909  24D0- B1 0A              LDA (PC),Y
0910  24D2- 65 0B              ADC PC+1
0911  24D4- 86 0A              STX PC
0912  24D6- 85 0B              STA PC+1
0913  24D8- 60                 RTS
0914                   *
0915                   * P-CODE 25: JMPZ
0916                   *****************
0917                   *
0918  24D9- 46 00      JMPZ    LSR ACCU
0919  24DB- 08                 PHP
0920  24DC- 20 E3 22           JSR GETS2
0921  24DF- 28                 PLP
0922  24E0- 90 E5              BCC JUMP
0923                   *
0924  24E2- A5 0A              LDA PC
0925  24E4- 18                 CLC
0926  24E5- 69 02              ADC =2
0927  24E7- 85 0A              STA PC
0928  24E9- 90 02              BCC *+4
0929  24EB- E6 0B              INC PC+1
0930  24ED- 60                 RTS
0931                   *
0932                   * P-CODE 26: JMPO
0933                   *****************
0934                   *
0935  24EE- A5 00      JMPO    LDA ACCU
0936  24F0- 49 01              EOR =1
0937  24F2- 85 00              STA ACCU
0938  24F4- 4C D9 24           JMP JMPZ
0939                   *
0940                   * P-CODE 27: LOAD
0941                   *****************
0942                   *
0943  24F7- 20 B6 22   LOAD    JSR COPY
0944  24FA- 20 9F 24           JSR FETCH
0945  24FD- AA                 TAX             LEVEL DIFFERENCE
0946  24FE- 20 9F 24          JSR FETCH
0947  2501- 85 1B              STA ARG1
0948  2503- 20 9F 24           JSR FETCH
0949  2506- 85 1C      LOAD1   STA ARG1+1

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 07/11/23   R65 ASSEMBLER  PAGE 20

0950  2508- 20 34 25           JSR FBASE3
0951  250B- A0 80      LOAD2   LDY =128
0952  250D- B1 19              LDA (ABASE),Y
0953  250F- 85 00              STA ACCU
0954  2511- C8                 INY
0955  2512- B1 19              LDA (ABASE),Y
0956  2514- 85 01              STA ACCU+1
0957  2516- 60                 RTS
0958                   *
0959                   * FBASE
0960                   *
0961  2517- A5 17      FBASE   LDA BASE
0962  2519- A4 18              LDY BASE+1
0963  251B- 85 19              STA ABASE
0964  251D- 84 1A              STY ABASE+1
0965  251F- E0 00              CPX =0
0966  2521- F0 10              BEQ FBASE2
0967                   *
0968  2523- A0 80      FBASE1  LDY =128
0969  2525- B1 19              LDA (ABASE),Y
0970  2527- 48                 PHA
0971  2528- C8                 INY
0972  2529- B1 19              LDA (ABASE),Y
0973  252B- 85 1A              STA ABASE+1
0974  252D- 68                 PLA
0975  252E- 85 19              STA ABASE
0976  2530- CA                 DEX
0977  2531- D0 F0              BNE FBASE1
0978  2533- 60         FBASE2  RTS
0979                   *
0980  2534- 20 17 25   FBASE3  JSR FBASE
0981  2537- 18                 CLC
0982  2538- A5 1B              LDA ARG1
0983  253A- 65 19              ADC ABASE
0984  253C- 85 19              STA ABASE
0985  253E- A5 1C              LDA ARG1+1
0986  2540- 65 1A              ADC ABASE+1
0987  2542- 85 1A              STA ABASE+1
0988  2544- 60                 RTS
0989                   *
0990                   * P-CODE 28: LODX
0991                   *****************
0992                   *
0993  2545- 20 9F 24   LODX    JSR FETCH
0994  2548- AA                 TAX
0995  2549- 20 9F 24           JSR FETCH
0996  254C- 06 00              ASL ACCU
0997  254E- 26 01              ROL ACCU+1
0998  2550- 18                 CLC
0999  2551- 65 00              ADC ACCU

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 07/11/23   R65 ASSEMBLER  PAGE 21

1000  2553- 85 1B              STA ARG1
1001  2555- 08                 PHP
1002  2556- 20 9F 24           JSR FETCH
1003  2559- 28                 PLP
1004  255A- 65 01              ADC ACCU+1
1005  255C- 4C 06 25           JMP LOAD1
1006                   *
1007                   * P-CODE 29: STOR
1008                   *****************
1009                   *
1010  255F- 20 9F 24   STOR    JSR FETCH
1011  2562- AA                 TAX
1012  2563- 20 9F 24           JSR FETCH
1013  2566- 85 1B              STA ARG1
1014  2568- 20 9F 24           JSR FETCH
1015  256B- 85 1C              STA ARG1+1
1016  256D- 20 34 25   STOR1   JSR FBASE3
1017  2570- A0 80      STOR2   LDY =128
1018  2572- A5 00              LDA ACCU
1019  2574- 91 19              STA (ABASE),Y
1020  2576- C8                 INY
1021  2577- A5 01              LDA ACCU+1
1022  2579- 91 19              STA (ABASE),Y
1023  257B- 4C E3 22           JMP GETS2
1024                   *
1025                   * P-CODE 2A: STOX
1026                   *****************
1027                   *
1028  257E- 20 9F 24   STOX    JSR FETCH
1029  2581- AA                 TAX
1030  2582- A0 7E              LDY =126
1031  2584- B1 08              LDA (SP),Y
1032  2586- 0A                 ASL A
1033  2587- 85 1B              STA ARG1
1034  2589- C8                 INY
1035  258A- B1 08              LDA (SP),Y
1036  258C- 2A                 ROL A
1037  258D- 85 1C              STA ARG1+1
1038  258F- 20 9F 24           JSR FETCH
1039  2592- 18                 CLC
1040  2593- 65 1B              ADC ARG1
1041  2595- 85 1B              STA ARG1
1042  2597- 20 9F 24           JSR FETCH
1043  259A- 65 1C              ADC ARG1+1
1044  259C- 85 1C              STA ARG1+1
1045  259E- 20 F2 20           JSR DECS2
1046  25A1- 4C 6D 25           JMP STOR1
1047                   *
1048                   * P-CODE 2B: CALL
1049                   *****************

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 07/11/23   R65 ASSEMBLER  PAGE 22

1050                   *
1051  25A4- 20 9F 24   CALL    JSR FETCH
1052  25A7- AA                 TAX
1053  25A8- 20 17 25           JSR FBASE
1054  25AB- A0 82              LDY =130
1055  25AD- A5 19              LDA ABASE
1056  25AF- 91 08              STA (SP),Y
1057  25B1- C8                 INY
1058  25B2- A5 1A              LDA ABASE+1
1059  25B4- 91 08              STA (SP),Y
1060  25B6- C8                 INY
1061  25B7- A5 17              LDA BASE
1062  25B9- 91 08              STA (SP),Y
1063  25BB- C8                 INY
1064  25BC- A5 18              LDA BASE+1
1065  25BE- 91 08              STA (SP),Y
1066  25C0- C8                 INY
1067  25C1- A5 0A              LDA PC
1068  25C3- 91 08              STA (SP),Y
1069  25C5- C8                 INY
1070  25C6- A5 0B              LDA PC+1
1071  25C8- 91 08              STA (SP),Y
1072  25CA- A5 08              LDA SP
1073  25CC- 18                 CLC
1074  25CD- 69 02              ADC =2
1075  25CF- 85 17              STA BASE
1076  25D1- A5 09              LDA SP+1
1077  25D3- 69 00              ADC =0
1078  25D5- 85 18              STA BASE+1
1079  25D7- 4C C7 24           JMP JUMP
1080                   *
1081                   * PCODE 2C: SDEV
1082                   ****************
1083                   *
1084  25DA- A5 00      SDEV    LDA ACCU
1085  25DC- 85 0D              STA DEVICE
1086  25DE- 4C E3 22           JMP GETS2
1087                   *
1088                   * PCODE 2D: RDEV
1089                   ****************
1090                   *
1091  25E1- A9 00      RDEV    LDA =0
1092  25E3- 85 0D              STA DEVICE
1093  25E5- 60                 RTS
1094                   *
1095                   * PCODE 2E: FNAM
1096                   ****************
1097                   *
1098  25E6- 20 27 E0   FNAM    JSR PRTINF
1099  25E9- 20 3D A0           BYT ' = '+128

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 07/11/23   R65 ASSEMBLER  PAGE 23

1100  25EC- 20 06 E0           JSR GETLIN
1101  25EF- 20 15 F8           JSR GETNAM
1102  25F2- 20 0D 20           JSR HARGUM
1103  25F5- 85 DC              STA FILDRV
1104  25F7- 20 0D 20           JSR HARGUM
1105  25FA- 8D 13 03           STA FILLOC
1106  25FD- 20 27 E0          JSR PRTINF
1107  2600- 0D 8A              BYT $D,$8A
1108  2602- 60                 RTS
1109                   *
1110                   * P-CODE 2F: OPNR
1111                   *****************
1112                   *
1113                   * NO AUTOMATIC ERROR TESTING
1114                   *
1115  2603- A9 00      OPNR    LDA =0
1116  2605- 85 DA              STA FILFLG
1117  2607- 20 B6 22           JSR COPY
1118  260A- 20 0F F0           JSR OPEN
1119  260D- C8                 INY
1120  260E- C8                 INY
1121  260F- 84 00              STY ACCU
1122  2611- 85 01              STA ACCU+1
1123  2613- 60                 RTS
1124                   *
1125                   * P-CODE 30: OPNW
1126                   *****************
1127                   *
1128  2614- A9 20      OPNW    LDA =$20
1129  2616- 4C 05 26           JMP OPNR+2
1130                   *
1131                   * P-CODE 31: CLOS
1132                   *****************
1133                   *
1134                   * NO AUTOMATIC ERROR CHECKING
1135                   *
1136  2619- A6 00      CLOS    LDX ACCU
1137  261B- CA                 DEX
1138  261C- CA                 DEX
1139  261D- 20 DD 2D           JSR CLOSRA
1140  2620- 4C E3 22           JMP GETS2
1141                   *
1142                   * P-CODE 32: PRTI
1143                   *****************
1144                   *
1145  2623- 20 9F 24   PRTI    JSR FETCH
1146  2626- 48                 PHA
1147  2627- 29 7F              AND =$7F
1148  2629- 20 57 29           JSR PRTCHR0
1149  262C- 68                 PLA

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 07/11/23   R65 ASSEMBLER  PAGE 24

1150  262D- 10 F4              BPL PRTI
1151  262F- 60                 RTS
1152                   *
1153                   * P-CODE 33: GHGH       (GET HIGH)
1154                   *****************
1155                   *
1156  2630- A5 01      GHGH    LDA ACCU+1
1157  2632- 85 00              STA ACCU
1158                   *
1159                   * P-CODE 34: GLOW
1160                   *****************
1161                   *
1162  2634- A9 00      GLOW    LDA =0
1163  2636- 85 01              STA ACCU+1
1164  2638- 60                 RTS
1165                   *
1166                   * P-CODE 35:PHGH
1167                   ****************
1168                   *
1169  2639- A0 7E      PHGH    LDY =126
1170  263B- B1 08              LDA (SP),Y
1171  263D- 85 01              STA ACCU+1
1172  263F- 4C F2 20           JMP DECS2
1173                   *
1174                   * P-CODE 36: PLOW
1175                   *****************
1176                   *
1177  2642- A0 7E      PLOW    LDY =126
1178  2644- B1 08              LDA (SP),Y
1179  2646- 85 00              STA ACCU
1180  2648- 4C F2 20           JMP DECS2
1181                   *
1182                   * P-CODE 37: GSEC
1183                   *****************
1184                   * DEVICE HAS TO BE SET  ########
1185                   *
1186  264B- 20 5D 26   GSEC    JSR PREPSEC
1187  264E- 4C 89 20           JMP READ
1188  2651- 4C 95 20           JMP ENDDO
1189                   *
1190                   * P-CODE 38: PSEC
1191                   *****************
1192                   * DEVICE HAS TO BE SET  ########
1193                   *
1194  2654- 20 5D 26   PSEC    JSR PREPSEC
1195  2657- 20 8C 20           JSR WRITE
1196  265A- 4C 95 20           JMP ENDDO
1197                   *
1198  265D- A5 00      PREPSEC LDA ACCU
1199  265F- A6 01              LDX ACCU+1

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 07/11/23   R65 ASSEMBLER  PAGE 25

1200  2661- 85 E0              STA DATA
1201  2663- 86 E1              STX DATA+1
1202  2665- A0 7E              LDY =126
1203  2667- B1 08              LDA (SP),Y
1204  2669- 85 DE              STA SECTOR
1205  266B- A0 7C              LDY =124
1206  266D- B1 08              LDA (SP),Y
1207  266F- 85 DD              STA TRACK
1208  2671- A5 08              LDA SP
1209  2673- 38                 SEC
1210  2674- E9 04              SBC =4
1211  2676- 20 F7 20           JSR DECS2+5
1212  2679- 20 E3 22           JSR GETS2
1213  267C- 4C 8F 20           JMP PREPDO
1214                   *
1215                   * P-CODE 39: NBYT       LOAD N BYTES IMMEDIATELY
1216                   *****************
1217                   *
1218  267F- 20 9F 24   NBYT    JSR FETCH
1219  2682- AA                 TAX             BYTE COUNTER
1220  2683- 20 B6 22   NBYT1   JSR COPY
1221  2686- 20 9F 24           JSR FETCH
1222  2689- 84 01              STY ACCU+1      Y=0
1223  268B- 85 00              STA ACCU
1224  268D- CA                 DEX
1225  268E- D0 F3              BNE NBYT1
1226  2690- 60                 RTS
1227                   *
1228                   * P-CODE 3A: NWRD       LOAD N WORD IMMEDIATELY
1229                   *****************
1230                   *
1231  2691- 20 9F 24   NWRD    JSR FETCH
1232  2694- AA                 TAX             WORD COUNTER
1233  2695- 20 B6 22   NWRD1   JSR COPY
1234  2698- 20 9F 24           JSR FETCH
1235  269B- 85 00              STA ACCU
1236  269D- 20 9F 24           JSR FETCH
1237  26A0- 85 01              STA ACCU+1
1238  26A2- CA                 DEX
1239  26A3- D0 F0              BNE NWRD1
1240  26A5- 60                 RTS
1241                   *
1242                   * P-CODE 3B: LODN       LOAD N MORE WORDS
1243                   *****************
1244                   *
1245  26A6- 20 9F 24   LODN    JSR FETCH
1246  26A9- AA                 TAX
1247  26AA- 20 B6 22   LODN1   JSR COPY
1248  26AD- A5 19              LDA ABASE
1249  26AF- 18                 CLC

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 07/11/23   R65 ASSEMBLER  PAGE 26

1250  26B0- 69 02              ADC =2
1251  26B2- 85 19              STA ABASE
1252  26B4- 90 02              BCC *+4
1253  26B6- E6 1A              INC ABASE+1
1254  26B8- 20 0B 25           JSR LOAD2
1255  26BB- CA                 DEX
1256  26BC- D0 EC              BNE LODN1
1257  26BE- 60                 RTS
1258                   *
1259                   * P-CODE 3C: STON       STORE N MORE WORDS
1260                   *****************
1261                   *
1262  26BF- 20 9F 24   STON    JSR FETCH
1263  26C2- AA                 TAX
1264  26C3- A5 19      STON1   LDA ABASE
1265  26C5- 38                 SEC
1266  26C6- E9 02              SBC =2
1267  26C8- 85 19              STA ABASE
1268  26CA- B0 02              BCS *+4
1269  26CC- C6 1A              DEC ABASE+1
1270  26CE- 20 70 25           JSR STOR2
1271  26D1- CA                 DEX
1272  26D2- D0 EF              BNE STON1
1273  26D4- 60                 RTS
1274                   *
1275                   * P-CODE 3D: LODI       LOAD INDIRECT
1276                   *****************
1277                   *
1278  26D5- 20 DB 26   LODI    JSR GETACC
1279  26D8- 4C 0B 25           JMP LOAD2
1280                   *
1281  26DB- A5 00      GETACC  LDA ACCU
1282  26DD- A6 01              LDX ACCU+1
1283  26DF- 38                 SEC
1284  26E0- E9 80              SBC =128
1285  26E2- B0 01              BCS *+3
1286  26E4- CA                 DEX
1287  26E5- 85 19              STA ABASE
1288  26E7- 86 1A              STX ABASE+1
1289  26E9- 60                 RTS
1290                   *
1291                   * P-CODE 3E: STOI       STORE INDIRECT
1292                   *****************
1293                   *
1294  26EA- 20 DB 26   STOI    JSR GETACC
1295  26ED- 20 E3 22           JSR GETS2
1296  26F0- 4C 70 25           JMP STOR2
1297                   *
1298                   * P-CODE 3F: EXST       EXCHANGE STACK
1299                   *****************

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 07/11/23   R65 ASSEMBLER  PAGE 27

1300                   *
1301  26F3- A0 7E      EXST    LDY =126
1302  26F5- B1 08              LDA (SP),Y
1303  26F7- AA                 TAX
1304  26F8- A5 00              LDA ACCU
1305  26FA- 91 08              STA (SP),Y
1306  26FC- 86 00              STX ACCU
1307  26FE- C8                 INY
1308  26FF- B1 08             LDA (SP),Y
1309  2701- AA                 TAX
1310  2702- A5 01              LDA ACCU+1
1311  2704- 91 08              STA (SP),Y
1312  2706- 86 01              STX ACCU+1
1313  2708- 60                 RTS
1314                   *
1315                   * P-CODE 40 TIND        TEST INDEX
1316                   ****************
1317                   *
1318  2709- 20 9F 24   TIND    JSR FETCH       LOWLIM-1
1319  270C- AA                 TAX
1320  270D- 20 9F 24           JSR FETCH
1321  2710- E4 00              CPX ACCU
1322  2712- E5 01              SBC ACCU+1
1323  2714- 70 0E              BVS TINDERR
1324                   *
1325  2716- 20 9F 24           JSR FETCH       HIGHLIM
1326  2719- AA                 TAX
1327  271A- 20 9F 24           JSR FETCH
1328  271D- E4 00              CPX ACCU
1329  271F- E5 01              SBC ACCU+1
1330  2721- 90 01              BCC TINDERR
1331  2723- 60                 RTS
1332                   *
1333  2724- A2 83      TINDERR LDX =$83        RUNTIME ERROR
1334  2726- 4C 92 29           JMP PERROR      INDEX OUT OF BOUNDS
1335                   *
1336                   * P-CODE 41: RUNP       RUN PROGRAM
1337                   *****************
1338                   *
1339  2729- A0 82      RUNP    LDY =130
1340  272B- A5 00              LDA ACCU        SAVE ACCU
1341  272D- A6 01              LDX ACCU+1
1342  272F- 20 5B 27           JSR SAVE
1343  2732- A5 17              LDA BASE        SAVE BASE
1344  2734- A6 18              LDX BASE+1
1345  2736- 20 5B 27           JSR SAVE
1346  2739- A5 0A              LDA PC          SAVE PC
1347  273B- A6 0B              LDX PC+1
1348  273D- 20 5B 27           JSR SAVE
1349  2740- A5 11              LDA STPROG      SAVE STPROG

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 07/11/23   R65 ASSEMBLER  PAGE 28

1350  2742- A6 12              LDX STPROG+1
1351  2744- 20 5B 27           JSR SAVE
1352  2747- A5 13              LDA EOPROG      SAVE EOPROG
1353  2749- A6 14              LDX EOPROG+1
1354  274B- 20 5B 27           JSR SAVE
1355  274E- A5 08              LDA SP          GET SP
1356  2750- A6 09              LDX SP+1
1357  2752- 18                 CLC
1358  2753- 69 8C              ADC =140
1359  2755- 90 01              BCC *+3
1360  2757- E8                 INX             COMPUTE NEW STPROG
1361  2758- 4C 1A 2A           JMP EXEC3
1362                   *
1363                   *
1364  275B- 91 08      SAVE    STA (SP),Y
1365  275D- C8                 INY
1366  275E- 8A                 TXA
1367  275F- 91 08              STA (SP),Y
1368  2761- C8                 INY
1369  2762- 60                 RTS
1370                   *
1371                   *
1372  2763- 88         GETBACK DEY
1373  2764- B1 08              LDA (SP),Y
1374  2766- AA                 TAX
1375  2767- 88                 DEY
1376  2768- B1 08              LDA (SP),Y
1377  276A- 60                 RTS
1378                   *
1379                   *
1380                   * P-CODE 42: ADDF
1381                   *****************
1382                   *
1383  276B- 20 88 27   ADDF    JSR GETFLP2
1384  276E- 20 CD 2B           JSR FADD
1385                   *
1386  2771- A5 08      PUTFLP0 LDA SP          DECREMENT SP BY 4
1387  2773- 38                 SEC
1388  2774- E9 04              SBC =4
1389  2776- 85 08              STA SP
1390  2778- B0 02              BCS PUTFLP
1391  277A- C6 09              DEC SP+1
1392  277C- A5 02      PUTFLP  LDA M1+1        AND SAVE HALF OF NUMBER
1393  277E- A0 7E              LDY =126
1394  2780- 91 08              STA (SP),Y
1395  2782- C8                 INY
1396  2783- A5 03              LDA M1+2
1397  2785- 91 08              STA (SP),Y
1398  2787- 60                 RTS
1399                   *

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 07/11/23   R65 ASSEMBLER  PAGE 29

1400  2788- A0 7A      GETFLP2 LDY =122        GET SECOND NUMBER
1401  278A- B1 08              LDA (SP),Y
1402  278C- 85 1D              STA M2+1
1403  278E- C8                 INY
1404  278F- B1 08              LDA (SP),Y
1405  2791- 85 1E              STA M2+2
1406  2793- C8                 INY
1407  2794- B1 08              LDA (SP),Y
1408  2796- 85 1B              STA X2
1409  2798- C8                 INY
1410  2799- B1 08              LDA (SP),Y
1411  279B- 85 1C              STA M2
1412  279D- A0 7E      GETFLP  LDY =126        AND HALF OF FIRST
1413  279F- B1 08              LDA (SP),Y
1414  27A1- 85 02              STA M1+1
1415  27A3- C8                 INY
1416  27A4- B1 08              LDA (SP),Y
1417  27A6- 85 03              STA M1+2
1418  27A8- 60                 RTS
1419                   *
1420                   * P-CODE 43: SUBF
1421                   *****************
1422                   *
1423  27A9- 20 88 27   SUBF    JSR GETFLP2
1424  27AC- 20 C7 2B           JSR FSUB
1425  27AF- 4C 71 27           JMP PUTFLP0
1426                   *
1427                   * P-CODE 44: MULF
1428                   *****************
1429                   *
1430  27B2- 20 88 27   MULF    JSR GETFLP2
1431  27B5- 20 F4 2B           JSR FMUL
1432  27B8- 4C 71 27           JMP PUTFLP0
1433                   *
1434                   * P-CODE 45: DIVF
1435                   *****************
1436                   *
1437  27BB- 20 88 27   DIVF    JSR GETFLP2
1438  27BE- 20 1A 2C           JSR FDIV
1439  27C1- 4C 71 27           JMP PUTFLP0
1440                   *
1441                   * P-CODE 46: FLOF
1442                   *****************
1443                   *
1444  27C4- A5 00      FLOF    LDA ACCU
1445  27C6- 85 02              STA M1+1        HIGH BYTE IS IN ACCU
1446                   *                       SAME AS M1
1447  27C8- 20 A9 2B           JSR FLOAT
1448  27CB- 20 C5 22           JSR INCS2
1449  27CE- 4C 7C 27           JMP PUTFLP

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 07/11/23   R65 ASSEMBLER  PAGE 30

1450                   *
1451                   * P-CODE 47: FIXF
1452                   *****************
1453                   *
1454  27D1- 20 9D 27   FIXF    JSR GETFLP
1455  27D4- 20 67 2C           JSR FIX
1456  27D7- A5 02              LDA M1+1
1457  27D9- 85 00              STA ACCU
1458  27DB- 4C F2 20           JMP DECS2
1459                   *
1460                   * P-CODE 48: FEQU       =
1461                   *****************
1462                   *
1463  27DE- 20 FF 27   FEQU    JSR TESTF
1464  27E1- F0 12              BEQ TRUE
1465                   *
1466  27E3- A2 00      FALSE   LDX =0
1467  27E5- 86 00              STX ACCU
1468  27E7- 86 01              STX ACCU+1
1469  27E9- A5 08      DECS6   LDA SP
1470  27EB- 38                 SEC
1471  27EC- E9 06              SBC =6
1472  27EE- 85 08              STA SP
1473  27F0- B0 02              BCS *+4
1474  27F2- C6 09              DEC SP+1
1475  27F4- 60                 RTS
1476                   *
1477  27F5- A2 01      TRUE    LDX =1
1478  27F7- 86 00              STX ACCU
1479  27F9- CA                 DEX
1480  27FA- 86 01              STX ACCU+1
1481  27FC- 4C E9 27           JMP DECS6
1482                   *
1483  27FF- 20 88 27  TESTF   JSR GETFLP2
1484  2802- 20 C7 2B           JSR FSUB
1485  2805- A5 01              LDA M1
1486  2807- 60                 RTS
1487                   *
1488                   * P-CODE 49: FNEQ       <>
1489                   *****************
1490                   *
1491  2808- 20 FF 27   FNEQ    JSR TESTF
1492  280B- D0 E8              BNE TRUE
1493  280D- F0 D4              BEQ FALSE
1494                   *
1495                   * P-CODE 4A: FLES       <
1496                   *****************
1497                   *
1498  280F- 20 FF 27   FLES    JSR TESTF
1499  2812- 10 CF              BPL FALSE

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 07/11/23   R65 ASSEMBLER  PAGE 31

1500  2814- 30 DF              BMI TRUE
1501                   *
1502                   * P-CODE 4B: FGRE       >=
1503                   *****************
1504                   *
1505  2816- 20 FF 27   FGRE    JSR TESTF
1506  2819- 10 DA              BPL TRUE
1507  281B- 30 C6              BMI FALSE
1508                   *
1509                   * P-CODE 4C: FGRT       >
1510                   *****************
1511                   *
1512  281D- 20 FF 27   FGRT    JSR TESTF
1513  2820- 30 C1              BMI FALSE
1514  2822- F0 BF              BEQ FALSE
1515  2824- 10 CF              BPL TRUE
1516                   *
1517                   * P-CODE 4D: FLEE       <=
1518                   *****************
1519                   *
1520  2826- 20 FF 27   FLEE    JSR TESTF
1521  2829- 30 CA              BMI TRUE
1522  282B- F0 C8              BEQ TRUE
1523  282D- 10 B4              BPL FALSE
1524                   *
1525                   * P-CODE 4E: FCOM       COMPLEMENT
1526                   *****************
1527                   *
1528  282F- 20 9D 27   FCOM    JSR GETFLP
1529  2832- 20 0C 2C           JSR FCOMPL
1530  2835- 4C 7C 27           JMP PUTFLP
1531                   *
1532                   *
1533                   * P-CODE 4F: TFER       TEST FILE ERROR
1534                   *****************
1535                   *
1536  2838- A6 23      TFER    LDX IOCHECK
1537  283A- F0 04              BEQ TFER1
1538  283C- A6 DB              LDX FILERR
1539  283E- D0 01              BNE TFER2
1540  2840- 60         TFER1   RTS             OK
1541                   *
1542  2841- 4C 92 29   TFER2   JMP PERROR
1543                   *
1544                   * P-CODE 50: OPRA       OPEN RA-FILE
1545                   *****************
1546                   *
1547  2844- 20 B6 22   OPRA    JSR COPY        SAVE ACCU
1548  2847- 20 6E 2C           JSR OPENRA      OPEN FILE
1549  284A- C8                 INY

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 07/11/23   R65 ASSEMBLER  PAGE 32

1550  284B- C8                 INY
1551  284C- 84 00              STY ACCU        SAVE FILE NO
1552  284E- A9 00              LDA =0
1553  2850- 85 01              STA ACCU+1
1554  2852- 60                 RTS
1555                   *
1556                   * P-CODE 51: GETR       GET FROM RA FILE
1557                   *****************
1558                   *
1559                   * NO AUTOMATIC ERROR CHECKING
1560                   *
1561  2853- 20 60 28   GETR    JSR GETR1
1562  2856- 20 75 2D           JSR GETBYTE
1563  2859- 85 00              STA ACCU
1564  285B- A9 00              LDA =0
1565  285D- 85 01              STA ACCU+1
1566  285F- 60                 RTS
1567                   *
1568  2860- 20 F2 20   GETR1   JSR DECS2
1569  2863- A0 80              LDY =128
1570  2865- B1 08              LDA (SP),Y      GET FILE NO
1571  2867- AA                 TAX
1572  2868- CA                 DEX
1573  2869- CA                 DEX
1574  286A- A5 00              LDA ACCU        GET POINTER
1575  286C- A4 01              LDY ACCU+1
1576  286E- 60                 RTS
1577                   *
1578                   * P-CODE 52: PUTR       PUT TO RA=FILE
1579                   *****************
1580                   *
1581                   * NO AUTOMATIC ERROR CHECKING
1582                   *
1583  286F- A5 00      PUTR    LDA ACCU
1584  2871- 85 FE              STA KCHAR
1585  2873- 20 E3 22           JSR GETS2
1586  2876- 20 60 28           JSR GETR1
1587  2879- 20 93 2D           JSR PUTBYTE
1588  287C- 4C E3 22           JMP GETS2
1589                   *
1590                   * P-CODE 53: SWA2       SWAP 2 AND 3 ON STACK
1591                   *****************
1592                   *
1593  287F- A0 7E      SWA2    LDY =126
1594  2881- 20 86 28           JSR SWA3
1595  2884- A0 7F              LDY =127
1596                   *
1597  2886- B1 08      SWA3    LDA (SP),Y
1598  2888- AA                 TAX
1599  2889- 88                 DEY

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 07/11/23   R65 ASSEMBLER  PAGE 33

1600  288A- 88                 DEY
1601  288B- B1 08              LDA (SP),Y
1602  288D- C8                 INY
1603  288E- C8                 INY
1604  288F- 91 08              STA (SP),Y
1605  2891- 8A                 TXA
1606  2892- 88                 DEY
1607  2893- 88                 DEY
1608  2894- 91 08              STA (SP),Y
1609  2896- 60                 RTS
1610                   *
1611                   * P-CODE 54: LDXI       PREPARE LOAD CPNT
1612                   *****************
1613                   *
1614  2897- A0 00      LDXI    LDY =0          INDIRECTION
1615  2899- A5 01              LDA ACCU+1
1616  289B- F0 4A              BEQ NILERR
1617  289D- B1 00              LDA (ACCU),Y
1618  289F- 85 00              STA ACCU
1619  28A1- 84 01              STY ACCU+1
1620  28A3- 60                 RTS
1621                   *
1622                   * P-CODE 55: STXI       STORE CPNT INDEXED
1623                   *****************
1624                   *
1625  28A4- 20 9F 24   STXI    JSR FETCH
1626  28A7- AA                 TAX
1627  28A8- A0 7E              LDY =126
1628  28AA- B1 08              LDA (SP),Y
1629  28AC- 85 21              STA ARG2
1630  28AE- C8                 INY
1631  28AF- B1 08              LDA (SP),Y
1632  28B1- 85 22              STA ARG2+1      ARG2 IS INDEX
1633  28B3- 20 9F 24           JSR FETCH
1634  28B6- 85 1B              STA ARG1
1635  28B8- 20 9F 24           JSR FETCH
1636  28BB- 85 1C              STA ARG1+1      ARG1 IS ADDRESS
1637  28BD- 20 F2 20           JSR DECS2       OF VARIABLE
1638  28C0- 20 34 25           JSR FBASE3
1639  28C3- 20 EC 28           JSR INDI        INDIRECTION
1640  28C6- 18                 CLC
1641  28C7- A5 19              LDA ABASE
1642  28C9- 65 21              ADC ARG2        ADD INDEX
1643  28CB- 85 19              STA ABASE
1644  28CD- A5 1A              LDA ABASE+1
1645  28CF- 65 22              ADC ARG2+1
1646  28D1- 85 1A              STA ABASE+1
1647  28D3- C5 14              CMP EOPROG+1    DO NOT ALLOW WRITING
1648  28D5- 90 0B              BCC PRGERR      INTO PROGRAM SPACE
1649  28D7- F0 09              BEQ PRGERR      CHECK ONLY HIGH BYTE

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 07/11/23   R65 ASSEMBLER  PAGE 34

1650  28D9- A0 00              LDY =0          MUST BE LARGER
1651  28DB- A5 00              LDA ACCU
1652  28DD- 91 19              STA (ABASE),Y   ONLY ONE BYTE
1653  28DF- 4C E3 22           JMP GETS2
1654                   *
1655  28E2- A2 90      PRGERR  LDX =$90
1656  28E4- 4C 92 29           JMP PERROR
1657                   *
1658  28E7- A2 89      NILERR  LDX =$89        CPNT IS NIL
1659  28E9- 4C 92 29           JMP PERROR
1660                   *
1661  28EC- A0 81      INDI    LDY =129        INDIRECTION
1662  28EE- B1 19              LDA (ABASE),Y
1663  28F0- F0 F5              BEQ NILERR      NIL STRING
1664  28F2- AA                 TAX
1665  28F3- 88                 DEY
1666  28F4- B1 19              LDA (ABASE),Y   POINTER IS IN A,X
1667  28F6- 85 19              STA ABASE
1668  28F8- 86 1A              STX ABASE+1
1669  28FA- 60                 RTS
1670                   *
1671                   * P-CODE 56: CPNT       CPNT CONSTANT
1672                   *****************
1673                   *
1674  28FB- 20 B6 22   CPNT    JSR COPY
1675  28FE- 20 9F 24          JSR FETCH       STRING SIZE IN A
1676  2901- AA                 TAX
1677  2902- E8                 INX
1678  2903- A5 0A              LDA PC          PC IS POINTER
1679  2905- 85 00              STA ACCU        TO RETURN
1680  2907- A5 0B              LDA PC+1
1681  2909- 85 01              STA ACCU+1
1682  290B- 8A                 TXA
1683  290C- 18                 CLC
1684  290D- 65 0A              ADC PC          ADVANCE PC
1685  290F- 85 0A              STA PC
1686  2911- 90 02              BCC *+4
1687  2913- E6 0B              INC PC+1
1688  2915- 60                 RTS
1689                   *
1690                   * P-CODE 57: WRCP       WRITE CPNT
1691                   *****************
1692                   *
1693  2916- A0 00      WRCP    LDY =0
1694  2918- B1 00              LDA (ACCU),Y
1695  291A- F0 08              BEQ WRCP2
1696  291C- 20 57 29           JSR PRTCHR0     END MARK
1697  291F- C8                 INY
1698  2920- C0 3F              CPY =63
1699  2922- D0 F4              BNE WRCP+2

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 07/11/23   R65 ASSEMBLER  PAGE 35

1700  2924- 4C E3 22   WRCP2   JMP GETS2
1701                   *
1702                   * GETCHR0: GET A CHAR FROM SPECIFIED FILE
1703                   *****************************************
1704                   *
1705  2927- A6 0D      GETCHR0 LDX DEVICE
1706  2929- D0 1A              BNE GETCHR4
1707                   *
1708  292B- A6 15      GETCHR1 LDX BUFFPN
1709  292D- 10 06              BPL GETCHR2
1710  292F- 20 10 23           JSR RLIN
1711  2932- 4C 2B 29           JMP GETCHR1
1712                   *
1713  2935- E4 16      GETCHR2 CPX ENDBUF      IS IS END OF BUFFER?
1714  2937- D0 07              BNE GETCHR3
1715  2939- A9 FF              LDA =$FF
1716  293B- 85 15              STA BUFFPN
1717  293D- A9 0D              LDA =$D
1718  293F- 60                 RTS
1719                   *
1720  2940- E6 15      GETCHR3 INC BUFFPN
1721  2942- B5 24              LDA LINBUF,X
1722  2944- 60                 RTS
1723                   *
1724  2945- CA         GETCHR4 DEX
1725  2946- D0 03              BNE GETCHR5     SKIP, IF NOT KEY
1726  2948- 4C 00 E0           JMP GETKEY
1727                   *
1728  294B- CA         GETCHR5 DEX
1729  294C- A9 00              LDA =0
1730  294E- 85 DA              STA FILFLG
1731  2950- 20 18 F0           JSR READCH
1732  2953- 4C 38 28           JMP TFER
1733                   *
1734  2956- 60         GETCHR6 RTS
1735                   *
1736                   * PRTCHR0: PRINT CHAR TO SPECIFIED FILE
1737                   ***************************************
1738                   *
1739  2957- A6 0D      PRTCHR0 LDX DEVICE
1740  2959- 30 16              BMI PRTCHR3     Plot text?
1741  295B- D0 03              BNE PRTCHR1
1742  295D- 4C 09 E0           JMP PRTCHR
1743                   *
1744  2960- CA         PRTCHR1 DEX
1745  2961- D0 03              BNE PRTCHR2
1746  2963- 4C 0C E0           JMP AUTOPR
1747                   *
1748  2966- CA         PRTCHR2 DEX
1749  2967- A0 00              LDY =0

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 07/11/23   R65 ASSEMBLER  PAGE 36

1750  2969- 84 DA              STY FILFLG
1751  296B- 20 1B F0           JSR WRITCH
1752  296E- 4C 38 28           JMP TFER
1753                   *
1754  2971- C9 0D      PRTCHR3 CMP =$0D        Plot CR?
1755  2973- D0 06              BNE PRTCHR4
1756  2975- A9 00              LDA =0
1757  2977- 8D AE 03           STA GRX
1758  297A- 60         PRTCHRE RTS
1759                   *
1760  297B- C9 0A      PRTCHR4 CMP =$0A        PLOT LF?
1761  297D- D0 0D              BNE PRTCHR6
1762  297F- AD AF 03           LDA GRY
1763  2982- E9 08              SBC =8
1764  2984- 10 02              BPL PRTCHR5
1765  2986- A9 00              LDA =0
1766                   *
1767  2988- 8D AF 03   PRTCHR5 STA GRY
1768  298B- 60                 RTS
1769                   *
1770  298C- 8D B0 03   PRTCHR6 STA GRC
1771  298F- 4C 18 C8           JMP APLOTCH     PLOT THE CHARACTER
1772                   *
1773                   * PERROR: PASCAL RUNTIME ERROR
1774                   ******************************
1775                   *
1776  2992- 20 27 E0   PERROR  JSR PRTINF
1777  2995- 0D 0A 07           BYT $D,$A,7,'Pascal error '+128
1777  2998- 50 61 73 
1777  299B- 63 61 6C 
1777  299E- 20 65 72 
1777  29A1- 72 6F 72 
1777  29A4- A0 
1778  29A5- A9 00              LDA =0
1779  29A7- 85 0D              STA DEVICE
1780  29A9- 8A                 TXA
1781  29AA- 85 0C              STA RUNERR
1782  29AC- 20 2D E0           JSR PRTBYT
1783  29AF- A5 0A              LDA PC
1784  29B1- 38                 SEC
1785  29B2- E5 11              SBC STPROG
1786  29B4- 85 00              STA ACCU
1787  29B6- A5 0B              LDA PC+1
1788  29B8- E5 12              SBC STPROG+1
1789  29BA- 85 01              STA ACCU+1
1790  29BC- F0 11              BEQ PERROR1
1791  29BE- 30 0F              BMI PERROR1
1792  29C0- 20 27 E0           JSR PRTINF
1793  29C3- 20 61 74           BYT ' at '+128
1793  29C6- A0 

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 07/11/23   R65 ASSEMBLER  PAGE 37

1794  29C7- 20 AC 23           JSR PRTN
1795  29CA- 20 27 E0           JSR PRTINF
1796  29CD- 0D 8A              BYT $D,$8A
1797                   *
1798  29CF- 4C 10 20   PERROR1 JMP STOP
1799                   *
1800                   *
1801                   * WARM START ENTRY POINT
1802                   ************************
1803                   *
1804  29D2- AD 81 17   WARMST  LDA SFLAG       SET PASCAL RUNTIME BIT
1805  29D5- 09 01              ORA =$01        IN SFLAG
1806  29D7- 8D 81 17           STA SFLAG
1807  29DA- BA                 TSX
1808  29DB- 8E FF 17           STX SAVS        SAVE STACK POINTER
1809  29DE- A2 00              LDX =0
1810  29E0- 86 0B              STX PC+1
1811  29E2- 86 0D              STX DEVICE
1812  29E4- CA                 DEX
1813  29E5- 86 16              STX ENDBUF
1814  29E7- 86 23              STX IOCHECK
1815  29E9- A2 00              LDX =0
1816                   *
1817  29EB- A0 00      EXEC    LDY =0
1818  29ED- 84 0B              STY PC+1
1819  29EF- BD A4 2A           LDA EXTABLE,X
1820  29F2- 9D 20 03           STA FILNM1,X
1821  29F5- E8                 INX
1822  29F6- C8                 INY
1823  29F7- C0 10              CPY =16
1824  29F9- 90 F2              BCC EXEC+2
1825  29FB- A9 00              LDA =0
1826  29FD- 8D 30 03          STA FILCY1
1827                   *
1828  2A00- A9 00      EXECUTE LDA =0
1829  2A02- 85 DA              STA FILFLG
1830  2A04- AD 0B 20           LDA USEREND
1831  2A07- AE 0C 20           LDX USEREND+1
1832  2A0A- 38                 SEC
1833  2A0B- E9 90              SBC =144
1834  2A0D- B0 01              BCS *+3
1835  2A0F- CA                 DEX
1836  2A10- 85 0E              STA ENDSTK
1837  2A12- 86 0F              STX ENDSTK+1
1838                   *
1839  2A14- AD 09 20   EXEC1   LDA USERST
1840  2A17- AE 0A 20           LDX USERST+1
1841  2A1A- 85 11      EXEC3   STA STPROG
1842  2A1C- 86 12              STX STPROG+1
1843  2A1E- 8D 31 03           STA FILSA1

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 07/11/23   R65 ASSEMBLER  PAGE 38

1844  2A21- 8E 32 03           STX FILSA1+1
1845  2A24- 20 15 E8           JSR RDFILE      READ FILE TO EXECUTE
1846  2A27- D0 07              BNE EXECE       PROGRAM NOT LOOADED?
1847                   *
1848  2A29- AD 12 03           LDA FILSTP
1849  2A2C- C9 52              CMP ='R'        IS PASCAL PROGRAM?
1850  2A2E- F0 07              BEQ RUN
1851  2A30- A9 84      EXECE   LDA =$84        PASCAL RUNPROG ERROR
1852  2A32- 85 0C              STA RUNERR
1853  2A34- 4C 10 20           JMP STOP        SILENT ERROR
1854                   *
1855  2A37- A0 00      RUN     LDY =0          READ END ADDRESS
1856  2A39- B1 11              LDA (STPROG),Y  FROM FILE
1857  2A3B- 18                 CLC
1858  2A3C- 65 11              ADC STPROG
1859  2A3E- 85 13              STA EOPROG
1860  2A40- C8                 INY
1861  2A41- B1 11              LDA (STPROG),Y
1862  2A43- 65 12              ADC STPROG+1
1863  2A45- 85 14              STA EOPROG+1
1864  2A47- A5 13              LDA EOPROG      GET END OF STACK
1865  2A49- A6 14              LDX EOPROG+1
1866  2A4B- 38                 SEC
1867  2A4C- E9 80              SBC =128
1868  2A4E- 85 17              STA BASE
1869  2A50- 85 08              STA SP
1870  2A52- B0 01              BCS *+3
1871  2A54- CA                 DEX
1872  2A55- 86 18              STX BASE+1
1873  2A57- 86 09              STX SP+1
1874                   *
1875  2A59- A5 11              LDA STPROG
1876  2A5B- A6 12              LDX STPROG+1
1877  2A5D- 18                 CLC
1878  2A5E- 69 02              ADC =2
1879  2A60- 85 0A              STA PC
1880  2A62- 90 01              BCC *+3
1881  2A64- E8                 INX
1882  2A65- 86 0B              STX PC+1
1883  2A67- A9 00              LDA =0
1884  2A69- 85 0C              STA RUNERR
1885  2A6B- AE FF 17   LOOP    LDX SAVS        RESTORE STACK POINTER
1886  2A6E- 9A                 TXS
1887  2A6F- 20 7A 2A           JSR EXCODE
1888  2A72- AD 81 17           LDA SFLAG
1889  2A75- 30 20              BMI ESCERR
1890  2A77- 4C 6B 2A           JMP LOOP
1891                   *
1892                   *
1893  2A7A- 20 9F 24   EXCODE  JSR FETCH

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 07/11/23   R65 ASSEMBLER  PAGE 39

1894  2A7D- 89 F1              STA =$F1
1895  2A7F- C9 58              CMP =$58        TEST CODENUMBER
1896  2A81- 90 05              BCC *+7
1897  2A83- A2 86      ILLC    LDX =$86        PASCAL RUNTIME ERROR
1898  2A85- 4C 92 29           JMP PERROR      ILLEGAL P-CODE
1899                   *
1900  2A88- 0A                 ASL A
1901  2A89- AA                 TAX
1902  2A8A- BD B4 2A           LDA TABLE,X
1903  2A8D- 85 1B              STA ARG1
1904  2A8F- BD B5 2A           LDA TABLE+1,X
1905  2A92- 85 1C              STA ARG1+1
1906  2A94- 6C 1B 00           JMP (ARG1)
1907                   *
1908  2A97- AD 81 17   ESCERR  LDA SFLAG       CLEAR ESCAPE FLAG
1909  2A9A- 29 7F              AND =$7F
1910  2A9C- 8D 81 17           STA SFLAG
1911  2A9F- A2 86              LDX =$86        PASCAL RUNTIME ERROR
1912  2AA1- 4C 92 29           JMP PERROR      ESCAPE DURING EXECUTION
1913                   *
1914  2AA4- 53 59 53   EXTABLE BYT 'SYSTEM:R        '
1914  2AA7- 54 45 4D 
1914  2AAA- 3A 52 20 
1914  2AAD- 20 20 20 
1914  2AB0- 20 20 20 
1914  2AB3- 20 
1915                   *
1916  2AB4- 10 20 A1   TABLE   WRD STOP,RETN,NEGA,ADDA,SUBA,MULA
1916  2AB7- 20 D4 20 
1916  2ABA- E2 20 FE 
1916  2ABD- 20 11 21 
1917  2AC0- 76 21 E8           WRD DIVA,LOWB,TEQU,TNEQ,TLES,TGRE
1917  2AC3- 21 F3 21 
1917  2AC6- 04 22 0E 
1917  2AC9- 22 18 22 
1918  2ACC- 1E 22 24           WRD TGRT,TLEE,ORAC,ANDA,EORA,NOTA
1918  2ACF- 22 2A 22 
1918  2AD2- 3C 22 4E 
1918  2AD5- 22 60 22 
1919  2AD8- 70 22 89           WRD LEFT,RIGH,INCA,DECA,COPY,PEEK
1919  2ADB- 22 A6 22 
1919  2ADE- AD 22 B6 
1919  2AE1- 22 F1 22 
1920  2AE4- FA 22 07           WRD POKE,CALA,RLIN,GETC,GETN,PRTC
1920  2AE7- 23 10 23 
1920  2AEA- 3A 23 47 
1920  2AED- 23 A4 23 
1921  2AF0- AC 23 1F           WRD PRTN,PRTS,LITB,INCB,LITW,INCW
1921  2AF3- 24 55 24 
1921  2AF6- 62 24 91 

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 07/11/23   R65 ASSEMBLER  PAGE 40

1921  2AF9- 24 AA 24 
1922  2AFC- C7 24 D9          WRD JUMP,JMPZ,JMPO,LOAD,LODX,STOR
1922  2AFF- 24 EE 24 
1922  2B02- F7 24 45 
1922  2B05- 25 5F 25 
1923  2B08- 7E 25 A4           WRD STOX,CALL,SDEV,RDEV,FNAM,OPNR
1923  2B0B- 25 DA 25 
1923  2B0E- E1 25 E6 
1923  2B11- 25 03 26 
1924  2B14- 14 26 19           WRD OPNW,CLOS,PRTI,GHGH,GLOW,PHGH
1924  2B17- 26 23 26 
1924  2B1A- 30 26 34 
1924  2B1D- 26 39 26 
1925  2B20- 42 26 4B           WRD PLOW,GSEC,PSEC,NBYT,NWRD,LODN
1925  2B23- 26 54 26 
1925  2B26- 7F 26 91 
1925  2B29- 26 A6 26 
1926  2B2C- BF 26 D5           WRD STON,LODI,STOI,EXST,TIND,RUNP
1926  2B2F- 26 EA 26 
1926  2B32- F3 26 09 
1926  2B35- 27 29 27 
1927  2B38- 6B 27 A9           WRD ADDF,SUBF,MULF,DIVF,FLOF,FIXF
1927  2B3B- 27 B2 27 
1927  2B3E- BB 27 C4 
1927  2B41- 27 D1 27 
1928  2B44- DE 27 08           WRD FEQU,FNEQ,FLES,FGRE,FGRT,FLEE
1928  2B47- 28 0F 28 
1928  2B4A- 16 28 1D 
1928  2B4D- 28 26 28 
1929  2B50- 2F 28 38           WRD FCOM,TFER,OPRA,GETR,PUTR,SWA2
1929  2B53- 28 44 28 
1929  2B56- 53 28 6F 
1929  2B59- 28 7F 28 
1930  2B5C- 97 28 A4           WRD LDXI,STXI,CPNT,WRCP
1930  2B5F- 28 FB 28 
1930  2B62- 16 29 
1931                   *
1932                   * COLDSTART
1933                   ***********
1934                   *
1935  2B64- 58         COLDST  CLI
1936  2B65- D8                 CLD
1937  2B66- AD 09 20           LDA USERST
1938  2B69- AE 0A 20           LDX USERST+1
1939  2B6C- 85 11              STA STPROG
1940  2B6E- 86 12              STX STPROG+1
1941  2B70- A0 00              LDY =0
1942  2B72- 98                 TYA
1943  2B73- 91 11              STA (STPROG),Y
1944  2B75- C8                 INY

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 07/11/23   R65 ASSEMBLER  PAGE 41

1945  2B76- C0 04              CPY =4
1946  2B78- 90 F9              BCC *-5
1947  2B7A- 4C D2 29           JMP WARMST
1948                   *
1949                           TIT R65 PASCAL: FLP-MATH
1950                           PAG

----------------------------------------------------------------------

R65 PASCAL: FLP-MATH               07/11/23   R65 ASSEMBLER  PAGE 42

1951                   *
1952                   ********************************
1953                   * R65 PASCAL FLP MATH ROUTINES *
1954                   ********************************
1955                   *
1956                   *
1957  2B7D- 18         ADD     CLC
1958  2B7E- A2 02              LDX =2
1959  2B80- B5 01      ADD1    LDA M1,X
1960  2B82- 75 1C              ADC M2,X
1961  2B84- 95 01              STA M1,X
1962  2B86- CA                 DEX
1963  2B87- 10 F7              BPL ADD1
1964  2B89- 60                 RTS
1965                   *
1966  2B8A- 06 10      MD1     ASL SIGN
1967  2B8C- 20 8F 2B           JSR ABSWAP
1968  2B8F- 24 01      ABSWAP  BIT M1
1969  2B91- 10 05              BPL ABSWP1
1970  2B93- 20 0C 2C           JSR FCOMPL
1971  2B96- E6 10              INC SIGN
1972  2B98- 38         ABSWP1  SEC
1973                   *
1974                   * SWAP: EXCHANGE F1 AND F2
1975                   **************************
1976                   *
1977  2B99- A2 04      SWAP    LDX =4
1978  2B9B- 94 03      SWAP1   STY E-1,X
1979  2B9D- B5 FF              LDA <(X1-1),X
1980  2B9F- B4 1A              LDY X2-1,X
1981  2BA1- 94 FF              STY <(X1-1),X
1982  2BA3- 95 1A              STA X2-1,X
1983  2BA5- CA                 DEX
1984  2BA6- D0 F3              BNE SWAP1
1985  2BA8- 60                 RTS
1986                   *
1987                   * FLOAT: FLOAT M1,M1+1 TO RESULT IN F1
1988                   **************************************
1989                   *
1990  2BA9- A9 8E      FLOAT   LDA =$8E
1991  2BAB- 85 00              STA X1
1992  2BAD- A9 00              LDA =0
1993  2BAF- 85 03              STA M1+2
1994  2BB1- F0 08              BEQ NORM
1995  2BB3- C6 00      NORM1   DEC X1
1996  2BB5- 06 03              ASL M1+2
1997  2BB7- 26 02              ROL M1+1
1998  2BB9- 26 01              ROL M1
1999  2BBB- A5 01      NORM    LDA M1
2000  2BBD- 0A                 ASL A

----------------------------------------------------------------------

R65 PASCAL: FLP-MATH               07/11/23   R65 ASSEMBLER  PAGE 43

2001  2BBE- 45 01              EOR M1
2002  2BC0- 30 04              BMI RTS1
2003  2BC2- A5 00              LDA X1
2004  2BC4- D0 ED              BNE NORM1
2005  2BC6- 60         RTS1    RTS
2006                   *
2007                   * FSUB: F1=F2-F1
2008                   ****************
2009                   *
2010  2BC7- 20 0C 2C   FSUB    JSR FCOMPL
2011  2BCA- 20 DA 2B   SWPALG  JSR ALGNSW
2012                   *
2013                   * FADD: F1=F2+F1
2014                   ****************
2015                   *
2016  2BCD- A5 1B      FADD    LDA X2
2017  2BCF- C5 00              CMP X1
2018  2BD1- D0 F7              BNE SWPALG
2019  2BD3- 20 7D 2B           JSR ADD
2020  2BD6- 50 E3      ADDEND  BVC NORM
2021  2BD8- 70 05              BVS RTLOG
2022  2BDA- 90 BD      ALGNSW  BCC SWAP
2023  2BDC- A5 01      RTAR    LDA M1
2024  2BDE- 0A                 ASL A
2025  2BDF- E6 00      RTLOG   INC X1
2026  2BE1- F0 7E              BEQ OVFL
2027  2BE3- A2 FA      RTLOG1  LDX =$FA
2028  2BE5- A9 80      ROR1    LDA =$80
2029  2BE7- B0 01              BCS ROR2
2030  2BE9- 0A                 ASL A
2031  2BEA- 56 07      ROR2    LSR E+3,X
2032  2BEC- 15 07              ORA E+3,X
2033  2BEE- 95 07              STA E+3,X
2034  2BF0- E8                 INX
2035  2BF1- D0 F2              BNE ROR1
2036  2BF3- 60                 RTS
2037                   *
2038                   * FMUL: F1=F2*F1
2039                   ****************
2040                   *
2041  2BF4- 20 8A 2B   FMUL    JSR MD1
2042  2BF7- 65 00              ADC X1
2043  2BF9- 20 4A 2C           JSR MD2
2044  2BFC- 18                 CLC
2045  2BFD- 20 E3 2B  MUL1    JSR RTLOG1
2046  2C00- 90 03              BCC MUL2
2047  2C02- 20 7D 2B           JSR ADD
2048  2C05- 88         MUL2    DEY
2049  2C06- 10 F5              BPL MUL1
2050  2C08- 46 10      MDEND   LSR SIGN

----------------------------------------------------------------------

R65 PASCAL: FLP-MATH               07/11/23   R65 ASSEMBLER  PAGE 44

2051  2C0A- 90 AF      NORMX   BCC NORM
2052  2C0C- 38         FCOMPL  SEC
2053  2C0D- A2 03              LDX =3
2054  2C0F- A9 00      COMPL1  LDA =0
2055  2C11- F5 00              SBC X1,X
2056  2C13- 95 00              STA X1,X
2057  2C15- CA                 DEX
2058  2C16- D0 F7              BNE COMPL1
2059  2C18- F0 BC              BEQ ADDEND
2060                   *
2061                   * FDIV: F1=F2/F1
2062                   ****************
2063                   *
2064  2C1A- 20 8A 2B   FDIV    JSR MD1
2065  2C1D- E5 00              SBC X1
2066  2C1F- 20 4A 2C           JSR MD2
2067  2C22- 38         FDIV1   SEC
2068  2C23- A2 02              LDX =2
2069  2C25- B5 1C      FDIV2   LDA M2,X
2070  2C27- F5 04              SBC E,X
2071  2C29- 48                 PHA
2072  2C2A- CA                 DEX
2073  2C2B- 10 F8              BPL FDIV2
2074  2C2D- A2 FD              LDX =$FD
2075  2C2F- 68         FDIV3   PLA
2076  2C30- 90 02              BCC FDIV4
2077  2C32- 95 1F              STA M2+3,X
2078  2C34- E8         FDIV4   INX
2079  2C35- D0 F8              BNE FDIV3
2080  2C37- 26 03              ROL M1+2
2081  2C39- 26 02              ROL M1+1
2082  2C3B- 26 01              ROL M1
2083  2C3D- 06 1E              ASL M2+2
2084  2C3F- 26 1D              ROL M2+1
2085  2C41- 26 1C              ROL M2
2086  2C43- B0 1C              BCS OVFL
2087  2C45- 88                 DEY
2088  2C46- D0 DA              BNE FDIV1
2089  2C48- F0 BE              BEQ MDEND
2090  2C4A- 86 03      MD2     STX M1+2
2091  2C4C- 86 02              STX M1+1
2092  2C4E- 86 01              STX M1
2093  2C50- B0 0D              BCS OVCHK
2094  2C52- 30 04              BMI MD3
2095  2C54- 68                 PLA
2096  2C55- 68                 PLA
2097  2C56- 90 B2              BCC NORMX
2098  2C58- 49 80      MD3     EOR =$80
2099  2C5A- 85 00              STA X1
2100  2C5C- A0 17              LDY =$17

----------------------------------------------------------------------

R65 PASCAL: FLP-MATH               07/11/23   R65 ASSEMBLER  PAGE 45

2101  2C5E- 60                 RTS
2102  2C5F- 10 F7      OVCHK   BPL MD3
2103  2C61- 4C AD 21   OVFL    JMP DIV1-5      PASCAL RUNTIME ERROR
2104                   *
2105                   * FIX: FIX F1 IN M1, M1+1
2106                   *************************
2107                   *
2108  2C64- 20 DC 2B           JSR RTAR
2109  2C67- A5 00      FIX     LDA X1
2110  2C69- C9 8E              CMP =$8E
2111  2C6B- D0 F7              BNE FIX-3
2112  2C6D- 60         RTRN    RTS
2113                   *
2114                           TIT R65 PASCAL: RANDOM ACCESS
2115                           PAG

----------------------------------------------------------------------

R65 PASCAL: RANDOM ACCESS          07/11/23   R65 ASSEMBLER  PAGE 46

2116                   *
2117                   * RANDOM ACCESS FILE HANDLER
2118                   ****************************
2119                   *
2120                   *
2121                   * OPENRA: OPEN A FILE FOR RANDOM ACCESS
2122                   ***************************************
2123                   *
2124                   * ENTRY: FILNM1,FILCY1,FILDRV,FILFLG
2125                   * FILFLG: BIT 7: PROTECTED (NEW ONLY)*
2126                   *         BIT 6: NO PRINTED OUTPUT
2127                   *         BIT 5: DIRECTION (0=READ)
2128                   *         BIT 4: 1=NEW, 0=OLD
2129                   *
2130                   * NEW ONLY: MAXSIZ,FILSA
2131                   *
2132                   * EXIT: NO OF OPEN FILE IN Y, STATUS IN A
2133                   *       AND FILERR, Y IS ONLY VALID
2134                   *       IF A=0
2135                   *
2136                   *
2137  2C6E- AC 36 03   OPENRA  LDY MAXSEQ      SEARCH EMPTY ENTRY
2138  2C71- B9 39 03           LDA FIDRTB,Y    BIT 5=1: ENTRY USED
2139  2C74- 29 20              AND =$20
2140  2C76- F0 08              BEQ OPENRA1     FOUND, SKIP
2141  2C78- 88                 DEY
2142  2C79- 10 F6              BPL OPENRA+3
2143                   *
2144  2C7B- A9 23              LDA =$23        TOO MANY OPEN FILES
2145  2C7D- 85 DB              STA FILERR
2146  2C7F- 60                 RTS
2147                   *
2148  2C80- 8C 35 03   OPENRA1 STY CURSEQ      SAVE CURRENT ENTRY NO
2149  2C83- A5 DC              LDA FILDRV      GET AND TEST DRIVE
2150  2C85- 99 41 03           STA FIDVTB,Y
2151  2C88- 29 FE              AND =$FE
2152  2C8A- F0 05              BEQ OPENRA2     SKIP, IF OK
2153                   *
2154  2C8C- A9 28              LDA =$28        ILLEGAL DRIVE FOR RA
2155  2C8E- 85 DB              STA FILERR
2156  2C90- 60                 RTS
2157                   *
2158  2C91- A9 10      OPENRA2 LDA =$10        TEST OLD/NEW FLAG
2159  2C93- 25 DA              AND FILFLG
2160  2C95- F0 78              BEQ OPENOLD     SKIP, IF OLD
2161                   *
2162                   * OPEN A NEW FILE
2163                   *
2164  2C97- A5 DA      OPENNEW LDA FILFLG
2165  2C99- 29 80              AND =$80        GET PROTECTED FLAG

----------------------------------------------------------------------

R65 PASCAL: RANDOM ACCESS          07/11/23   R65 ASSEMBLER  PAGE 47

2166  2C9B- 09 42              ORA ='B'        BLOCK FILE
2167  2C9D- 8D 00 03           STA FILTYP      SET FILE TYPE
2168                   *
2169  2CA0- A9 00              LDA =0
2170  2CA2- AE 37 03           LDX MAXSIZ      SIZE OF FILE
2171  2CA5- 8D 15 03           STA FILSIZ
2172  2CA8- 8E 16 03           STX FILSIZ+1
2173                   *
2174  2CAB- CA                 DEX             COMPUTE FILEA
2175  2CAC- AD 1A 03           LDA FILSA
2176  2CAF- 18                 CLC
2177  2CB0- 69 FF              ADC =$FF
2178  2CB2- 8D 1C 03           STA FILEA
2179  2CB5- 8A                 TXA
2180  2CB6- 6D 1B 03           ADC FILSA+1
2181  2CB9- 8D 1D 03           STA FILEA+1
2182                   *
2183  2CBC- 20 1E E8           JSR SETFID      SET FILEDATE
2184                   *
2185  2CBF- A2 10              LDX =16
2186  2CC1- BD 20 03   OPENNE1 LDA FILNM1,X    SET FILNM1 AND FILCY1
2187  2CC4- 9D 01 03           STA FILNAM,X    TO FILNAM AND FILCYC
2188  2CC7- CA                 DEX
2189  2CC8- 10 F7              BPL OPENNE1
2190                   *
2191                   * SEARCH IN DIRECTORY AND RETURN CYCLUS
2192                   * AND DIRECTORY ENTRY TO USE, TEST EXISTING
2193                   * FILES FOR SAME NAME AND CYCLUS, DISK
2194                   * OPERATION IS INITIALIZED
2195                   *
2196  2CCA- 20 9B 20           JSR PREPWRA
2197  2CCD- 8E 11 03           STX FILCYC
2198                   *
2199                   * FIND FIRST EMPTY DISK DIRECTORY ENTR
2200                   * FETCH ITAND SET FIRST SECTOR OF FILE TO
2201                   * FILLOC, OUTPUT Y,X AS NUMBER OF EMPTY
2202                   * SECTORS
2203                   *
2204  2CD0- 20 9E 20           JSR PREPWRB
2205  2CD3- 8A                 TXA
2206  2CD4- CD 16 03           CMP FILSIZ+1
2207  2CD7- 98                 TYA
2208  2CD8- E9 00              SBC =0          COMPARE WITH REQUESTED
2209  2CDA- B0 05              BCS OPENNE3     SECTORS
2210                   *
2211  2CDC- A9 26              LDA =$26        DISK OVERFLOW
2212  2CDE- 4C 92 20           JMP DISCER1
2213                   *
2214                   * SET FITEMP,Y AND FITEMP+8,YNTO FIRST SECTOT
2215                   * OF FILE ON DISK, FIMAXT,Y TO SIZE, DIRECTORY

----------------------------------------------------------------------

R65 PASCAL: RANDOM ACCESS          07/11/23   R65 ASSEMBLER  PAGE 48

2216                   * ENTRY NO TO FITEMP+16,Y
2217                   * THEN PUT THIS ENTRY ONTO THE DISKMAND SET
2218                   * A NEW END OF DIRECTORY MARK
2219                   *
2220  2CE1- 20 77 20   OPENNE3 JSR DOPEN4
2221                   *
2222  2CE4- AC 35 03           LDY CURSEQ      SETUP DUMMY FIRST SECTOR
2223  2CE7- A9 00              LDA =0
2224  2CE9- 99 49 03           STA FIBPTB,Y
2225  2CEC- 99 51 03           STA FIRCTB,Y
2226                   *
2227  2CEF- AC 35 03   OPENNE4 LDY CURSEQ      OPEN FILE
2228  2CF2- A5 DA              LDA FILFLG
2229  2CF4- 0A                 ASL A
2230  2CF5- 0A                 ASL A
2231  2CF6- 29 80              AND =$80        GET DIRECTION
2232  2CF8- 48                 PHA
2233  2CF9- 2D 00 03           AND FILTYP
2234  2CFC- F0 06              BEQ OPENNE5     OK, SKIP
2235  2CFE- 68                 PLA             PROTECTED FILE
2236                   *
2237  2CFF- A9 29             LDA =$29
2238  2D01- 85 DB              STA FILERR
2239  2D03- 60                 RTS
2240                   *
2241  2D04- 68         OPENNE5 PLA
2242  2D05- 09 60              ORA =$60        RA FILE, OPENIT
2243  2D07- 99 39 03           STA FIDRTB,Y
2244                   *
2245  2D0A- A9 00              LDA =0          NORMALEXIT
2246  2D0C- 85 DB              STA FILERR
2247  2D0E- 60         OPENNE6 RTS
2248                   *
2249                   * OPEN AN OLD FILE:
2250                   * PREPARE DISK OPERATION, SEARCH REQUESTED
2251                   * FILE AND GET CORRSPONDING DISK ENTRY
2252                   *
2253  2D0F- 20 98 20   OPENOLD JSR PREPRD
2254                   *
2255  2D12- 20 7A 20           JSR PRFLB1      PRINT LABEL, IF REQ.
2256  2D15- AD 00 03           LDA FILTYP
2257  2D18- 29 7F              AND =$7F
2258  2D1A- C9 42              CMP ='B'        MUST BE BLOCK FILE
2259  2D1C- F0 05              BEQ OPENOL1     SKIP, IF OK
2260                   *
2261  2D1E- A9 05              LDA =5
2262  2D20- 4C 92 20           JMP DISCER1     FILE TYPE ERROR
2263                   *
2264  2D23- 20 95 20   OPENOL1 JSR ENDDO       END OF DISK OPERATION
2265                   *

----------------------------------------------------------------------

R65 PASCAL: RANDOM ACCESS          07/11/23   R65 ASSEMBLER  PAGE 49

2266                   * SET NOW FIRST SECTOR AND SIZE TO TABLE
2267                   *
2268  2D26- 20 74 20           JSR DOPEN1
2269                   *
2270  2D29- A9 00              LDA =0          GET FIRST RECORD
2271  2D2B- 20 32 2D           JSR GETTREC
2272  2D2E- D0 DE              BNE OPENNE6     SKIP, IF NOT OK
2273  2D30- F0 BD              BEQ OPENNE4     ELSE OPEN FILE
2274                   *
2275                   *
2276                   * GETTREC: GET ONE RECORD FROM RA-FILE
2277                   * RECORD NUMBER IS IN A, FILE NUMBER IN CURSEQ
2278                   * RESULT IUS Z=1,OF OK, ELSE Z=0 AND FILERR
2279                   *
2280  2D32- AE 35 03   GETTREC LDX CURSEQ      SAVE RECORD NO
2281  2D35- 9D 51 03           STA FIRCTB,X
2282  2D38- A9 00              LDA =0          CLEAR UPDATED FLAG
2283  2D3A- 9D 49 03           STA FIBPTB,X
2284  2D3D- BD 41 03           LDA FIDVTB,X    SET DRIVE NO
2285  2D40- 85 DC              STA FILDRV
2286                   *
2287                   * COMPUTE DATA-POINTER AND BINARY
2288                   * TRACK,SECTOR, SETUP FILDRV
2289                   *
2290  2D42- 20 80 20           JSR PREPSR
2291                   *
2292                   * ADD RECORD NUMBER TO BINARY TRAC/SECTOR
2293                   * TEST SIZE OF FILE, CONVERT TO TRACK AND
2294                   * SECTOR, INITIALIZE DISK OPERATION
2295                   *
2296  2D45- 20 83 20           JSR PREPSR1
2297                   *
2298  2D48- 20 89 20           JSR READ        READ ON SECTOR
2299                   *
2300  2D4B- 4C 95 20           JMP ENDDO       END OF DISK OPERATION
2301                   *
2302                   * PUTTREC: SAVE CURRENT RECORD ON DISK
2303                   * FILE NUMBER IN CURSEQ, RECORD NUMBER IN
2304                   * FIRCTB,Y, RETURNS Z=1 IF OK, ELSE FILERR
2305                   *
2306  2D4E- BD 41 03   PUTTREC LDA FIDVTB,X
2307  2D51- 85 DC              STA FILDRV
2308  2D53- 20 80 20           JSR PREPSR      SEE GETTREC FOR
2309  2D56- 20 83 20           JSR PREPSR1     COMMENTS
2310  2D59- 20 8C 20           JSR WRITE
2311  2D5C- 4C 95 20           JMP ENDDO
2312                   *
2313                   * GETNEWR: GET A NEW RECORD, SAVE OLD, IF
2314                   * OLD HAS BEEN UPDATED
2315                   * ENTRY: NEW RECORD IN A, FILE NO IN CURSEQ

----------------------------------------------------------------------

R65 PASCAL: RANDOM ACCESS          07/11/23   R65 ASSEMBLER  PAGE 50

2316                   * EXIT: z=1 IF OK, ELSE FILERR
2317                   *
2318  2D5F- 8D 34 03   GETNEWR STA SAVRST+1    SAVE REQUESTED RECORD
2319  2D62- AE 35 03           LDX CURSEQ
2320  2D65- BD 49 03           LDA FIBPTB,X    UPDATED?
2321  2D68- 10 05              BPL GETNEW1
2322                   *
2323  2D6A- 20 4E 2D           JSR PUTTREC     YES, SAVE IT
2324  2D6D- D0 23              BNE EXIT
2325                   *
2326  2D6F- AD 34 03   GETNEW1 LDA SAVRST+1    GET REQUESTED RECORD
2327  2D72- 4C 32 2D           JMP GETTREC
2328                   *
2329                   * GETBYTE: GET ONE BYTE FROM FILE
2330                   *********************************
2331                   * ENTRY: FILE NUMBER IN X
2332                   *        POINTER IN A(LOW) AND Y(HIGH)
2333                   * EXIT:  FILERR IN Y AND STATUS, BYTE IN A
2334                   *
2335  2D75- 8D 33 03   GETBYTE STA SAVRST      SAVE A
2336  2D78- 20 C2 2D           JSR TESTRA
2337                   *
2338  2D7B- 98                 TYA
2339  2D7C- DD 51 03           CMP FIRCTB,X    IS IT IN CURRENT RECORD?
2340  2D7F- F0 05              BEQ GETBYT1     YES, SKIP
2341                   *
2342  2D81- 20 5F 2D           JSR GETNEWR     NO, GET NEW RECORD
2343  2D84- D0 0C              BNE EXIT
2344                   *
2345  2D86- 20 7D 20   GETBYT1 JSR CPOINT      COMPUTE BUFFER PNT
2346  2D89- AC 33 03           LDY SAVRST      RESTORE LOW POINTER
2347  2D8C- B1 FA              LDA (POINT),Y   GET THE BYTE
2348  2D8E- A0 00              LDY =0
2349  2D90- 84 DB              STY FILERR      OK
2350  2D92- 60         EXIT    RTS
2351                   *
2352                   * PUTBYTE: PUT ONE BYTE TO FILE
2353                   *******************************
2354                   *
2355                   * ENTRY: BYTE STORED IN KCHAR
2356                   *        FILE NUMBER IN X
2357                   *        POINTER IN A(LOW) AND Y(HIGH)
2358                   * EXIT:  FILERR IN Y AND STATUS
2359                   *
2360  2D93- 8D 33 03   PUTBYTE STA SAVRST
2361  2D96- 20 C2 2D           JSR TESTRA
2362  2D99- BD 39 03           LDA FIDRTB,X    IS WRITE ALLOWED?
2363  2D9C- 30 05              BMI PUTBYT0     YES,SKIP
2364  2D9E- A0 29              LDY =$29        WRITE NOT ALLOWED
2365  2DA0- 84 DB              STY FILERR

----------------------------------------------------------------------

R65 PASCAL: RANDOM ACCESS          07/11/23   R65 ASSEMBLER  PAGE 51

2366  2DA2- 60                 RTS
2367                   *
2368  2DA3- 98         PUTBYT0 TYA             FOR COMMENTS
2369  2DA4- DD 51 03           CMP FIRCTB,X    SEE GETBYTE
2370  2DA7- F0 05              BEQ PUTBYT1
2371                   *
2372  2DA9- 20 5F 2D           JSR GETNEWR
2373  2DAC- D0 E4              BNE EXIT
2374                   *
2375  2DAE- 20 7D 20   PUTBYT1 JSR CPOINT
2376  2DB1- A9 80              LDA =$80        SET UPDATED FLAG
2377  2DB3- 9D 49 03           STA FIBPTB,X
2378  2DB6- AC 33 03           LDY SAVRST
2379  2DB9- A5 FE              LDA KCHAR       GET BACK KCHAR
2380  2DBB- 91 FA              STA (POINT),Y
2381  2DBD- A0 00              LDY =0
2382  2DBF- 84 DB              STY FILERR
2383  2DC1- 60                 RTS
2384                   *
2385                   *
2386                   * TESTRA: TEST X FOR LEGAL RA-FILE
2387                   *
2388  2DC2- 8E 35 03   TESTRA  STX CURSEQ
2389  2DC5- EC 36 03           CPX MAXSEQ
2390  2DC8- B0 0A              BCS TESTRA2
2391                   *
2392  2DCA- BD 39 03   TESTRA1 LDA FIDRTB,X
2393  2DCD- 29 60              AND =$60
2394  2DCF- C9 60              CMP =$60
2395  2DD1- D0 03              BNE TESTRA3     SKIP, IF NOT OK
2396  2DD3- 60                 RTS
2397                   *
2398  2DD4- F0 F4      TESTRA2 BEQ TESTRA1
2399  2DD6- 68         TESTRA3 PLA
2400  2DD7- 68                 PLA
2401  2DD8- A0 25              LDY =$25        FILE NUMBER NOT ALLOWED
2402  2DDA- 84 DB              STY FILERR
2403  2DDC- 60                 RTS
2404                   *
2405                   * CLOSRA: CLOSE RA OR SEQUENTIAL FILE IN X
2406                   ******************************************
2407                   * ENTRY: FILE IN X
2408                   * EXIT: FILERR IN Y AND STATUS
2409                   *
2410  2DDD- BD 39 03   CLOSRA  LDA FIDRTB,X
2411  2DE0- 29 40              AND =$40        SEQUENTIAL FILE?
2412  2DE2- D0 03              BNE CLOSRA1     NO, SKIP
2413  2DE4- 4C 86 20           JMP CLOSE       YES, CLOSE IT
2414                   *
2415  2DE7- 20 C2 2D   CLOSRA1 JSR TESTRA      MUST BE RA-FILE

----------------------------------------------------------------------

R65 PASCAL: RANDOM ACCESS          07/11/23   R65 ASSEMBLER  PAGE 52

2416  2DEA- BD 49 03           LDA FIBPTB,X    UPDATED?
2417  2DED- F0 05              BEQ CLOSRA2     NO, SKIP
2418                   *
2419  2DEF- 20 4E 2D           JSR PUTTREC
2420  2DF2- D0 0B              BNE CLOSRA3
2421                   *
2422  2DF4- AE 35 03   CLOSRA2 LDX CURSEQ
2423  2DF7- A9 00              LDA =0
2424  2DF9- 9D 39 03           STA FIDRTB,X    CLOSE IT
2425  2DFC- A8                 TAY
2426  2DFD- 84 DB              STY FILERR
2427  2DFF- 60        CLOSRA3 RTS
2428                   *
2429                   ENDCODE EQU *
2430                   *
2431                           TIT R65 PASCAL: LABELS
2432                   *
2433  2E00-                    END
LABELS=015F
ERRORS=00
RECORDS=79
