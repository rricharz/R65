

----------------------------------------------------------------------

R65 PASCAL: LABELS                 16/11/23   R65 ASSEMBLER  PAGE 01

0001                    *
0002                   *       **********************
0003                   *       * R65 PASCAL RUNTIME *
0004                   *       **********************
0005                   *
0006                   * VERSION 5.3   01/06/82 RRICHARZ,RBAUMANN
0007                   * IMPROVED 2019-2023 RRICHARZ
0008                   * VERSION 5.6   SOURCE LINES WITH /L IN COMPILER
0009                   *
0010                           TIT R65 PASCAL RUNTIME
0011                   *
0012                   * INCLUDES RANDOM ACCESS FILE HANDLING,
0013                   * FLOATING POINT MATH, FILE HANDLING ERROR
0014                   * TESTING (OPTIONAL) AND CPNT POINTERS
0015                   *
0016                           ORG 0
0017                   *
0018  0000-            ACCU    BSS 4   TOP OF STACKELEMENT
0019                   X1      EQU ACCU        FLP ACCU
0020                   M1      EQU ACCU+1
0021  0004-            E       BSS 4   FLP SCRATCH REGISTER
0022  0008-            SP      BSS 2   CURRENT STACK (-128)
0023  000A-            PC      BSS 2   PROGRAM COUNTER
0024  000C-            RUNERR  BSS 1   RUNTIME ERROR CODE
0025  000D-            DEVICE  BSS 1   I/O DEVICE CODE
0026  000E-            ENDSTK  BSS 2   END OF STACK (-128)
0027  0010-            SIGN    BSS 1   TEMPORARY SIGN
0028  0011-            STPROG  BSS 2   START OF USER PROGRAM
0029  0013-            EOPROG  BSS 2   END OF USER PROGRAM
0030  0015-            BUFFPN  BSS 1   INPUT BUFFER POINTER
0031  0016-            ENDBUF  BSS 1   END OF INPUT BUFFER
0032  0017-            BASE    BSS 2   CURRENT BASE (-128)
0033  0019-            ABASE   BSS 2   ALTERNATE BASE (-128)
0034  001B-            ARG1    BSS 2   TEMPORARY ARGUMENT
0035  001D-            ARG3    BSS 4   TEMPORARY REGISTERS
0036  0021-            ARG2    BSS 2
0037                   X2      EQU ARG1        FLP REGISTER
0038                   M2      EQU ARG1+1
0039  0023-            IOCHECK BSS 1   IO ERROR CHECKING FLAG
0040  0024-            LINBUF  BSS 56  INPUT LINE BUFFER
0041  005C-            LSTLIN  BSS 2   LAST SOURCE LINE
0042                   *
0043                   FILFLG  EQU $DA
0044                   FILERR  EQU $DB
0045                   FILDRV  EQU $DC
0046                   TRACK   EQU $DD
0047                   SECTOR  EQU $DE
0048                   DATA    EQU $E0
0049                   VIDPNT  EQU $E9
0050                   POINT   EQU $FA

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 16/11/23   R65 ASSEMBLER  PAGE 01

0051                   KCHAR   EQU $FE
0052                   *
0053                   EMUCOM  EQU $1430       EMULATOR COMMAND REG
0054                   MULTA   EQU $14E0
0055                   MULTB   EQU $14E1
0056                   MULTR   EQU $14E2
0057                   *
0058                   FILTYP  EQU $0300
0059                   FILNAM  EQU $0301
0060                   FILCYC  EQU $0311
0061                   FILSTP  EQU $0312
0062                   FILLOC  EQU $0313
0063                   FILSIZ  EQU $0315
0064                   FILSA   EQU $031A
0065                   FILEA   EQU $031C
0066                   FILNM1  EQU $0320
0067                   FILCY1  EQU $0330
0068                   FILSA1  EQU $0331
0069                   SAVRST  EQU $0333
0070                   CURSEQ  EQU $0335
0071                   MAXSEQ  EQU $0336
0072                   MAXSIZ  EQU $0337
0073                   FIDRTB  EQU $0339
0074                   FIDVTB  EQU $0341
0075                   FIBPTB  EQU $0349
0076                   FIRCTB  EQU $0351
0077                   GRX     EQU $03AE
0078                   GRY     EQU $03AF
0079                   GRC     EQU $03B0
0080                   SFLAG   EQU $1781
0081                   NUMCHR  EQU $178A
0082                   VMON    EQU $17D5
0083                   SAVS    EQU $17FF
0084                   *
0085                   APLOTCH EQU $C818
0086                   GETKEY  EQU $E000
0087                   AUTOPR  EQU $E00C
0088                   ENDLIN  EQU $E024
0089                   PRTINF  EQU $E027
0090                   GETCHR  EQU $E003
0091                   GETLIN  EQU $E006
0092                   PRTCHR  EQU $E009
0093                   PRTBYT  EQU $E02D
0094                   PRTAX   EQU $E030
0095                   PRTRSA  EQU $E836
0096                   RDFILE  EQU $E815
0097                   SETFID  EQU $E81E
0098                   OPEN    EQU $F00F
0099                   READCH  EQU $F018
0100                   WRITCH  EQU $F01B

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 16/11/23   R65 ASSEMBLER  PAGE 02

0101                   GETNAM  EQU $F815
0102                   *
0103  005E-                    ORG $2000
0104                   *
0105                           PAG

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 16/11/23   R65 ASSEMBLER  PAGE 03

0106                   *
0107                   * ENTRY VECTORS
0108                   *
0109  2000- 4C B9 2B           JMP COLDST      COLD START ENTRY VECTOR
0110  2003- 4C 23 2A           JMP WARMST      WARM START ENTRY VECTOR
0111  2006- 4C B1 29           JMP PERROR      PASCAL ERROR
0112                   *
0113  2009- 7B 2E      USERST  WRD ENDCODE+32
0114  200B- FF C7      USEREND WRD $C7FF
0115                   *
0116  200D- 4C F2 FC   HARGUM  JMP $FCF2       #######
0117                   *
0118                   *
0119                   * P-CODE 00:  STOP      (END OF EXECUTION)
0120                   ******************
0121                   * NO ARGUMENTS
0122                   *
0123  2010- A9 2F      STOP    LDA =47
0124  2012- 8D 8A 17           STA NUMCHR      FORCE 48 CHARS/LINE
0125  2015- 20 8C 20           JSR CLOSAL      CLOSE ALL OPEN FILES
0126  2018- A5 11              LDA STPROG      IS ANOTHER PROGRAM
0127  201A- A6 12              LDX STPROG+1    RUNNING?
0128  201C- CD 09 20           CMP USERST
0129  201F- D0 20              BNE STOP1
0130  2021- EC 0A 20           CPX USERST+1
0131  2024- D0 1B              BNE STOP1
0132                   *
0133  2026- 20 27 E0           JSR PRTINF      NO, STOP PASCAL
0134  2029- 0D 0A 51           BYT $0D,$0A,'Quit Pascal'+$80
0134  202C- 75 69 74 
0134  202F- 20 50 61 
0134  2032- 73 63 61 
0134  2035- EC 
0135  2036- AD 81 17           LDA SFLAG
0136  2039- 29 FE              AND =$FE        CLEAR PASCAL RUNTIME BIT
0137  203B- 8D 81 17           STA SFLAG       IN SFLAG
0138  203E- 6C D5 17           JMP (VMON)
0139                   *
0140  2041- 38         STOP1   SEC             YES, COMPUTE OLD SP
0141  2042- E9 8C              SBC =140
0142  2044- B0 01              BCS *+3
0143  2046- CA                 DEX
0144  2047- 85 08              STA SP
0145  2049- 86 09              STX SP+1
0146  204B- A0 8C              LDY =140
0147  204D- 20 69 27           JSR GETBACK
0148  2050- 85 13              STA EOPROG
0149  2052- 86 14              STX EOPROG+1
0150  2054- 20 69 27           JSR GETBACK
0151  2057- 85 11              STA STPROG

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 16/11/23   R65 ASSEMBLER  PAGE 04

0152  2059- 86 12              STX STPROG+1
0153  205B- 20 69 27           JSR GETBACK
0154  205E- 85 0A              STA PC
0155  2060- 86 0B              STX PC+1
0156  2062- 20 69 27           JSR GETBACK
0157  2065- 85 17              STA BASE
0158  2067- 86 18              STX BASE+1
0159  2069- 20 69 27           JSR GETBACK
0160  206C- 85 00              STA ACCU
0161  206E- 86 01              STX ACCU+1
0162  2070- AE FF 17           LDX SAVS        RESTORE STACK POINTER
0163  2073- 9A                 TXS
0164  2074- 4C BC 2A           JMP LOOP
0165                   *
0166                   *
0167  2077- 4C FF F0   DOPEN1  JMP $F0FF
0168  207A- 4C 45 F1   DOPEN4  JMP $F145
0169  207D- 4C 51 F1   PRFLB1  JMP $F151
0170  2080- 4C 59 F1   CPOINT  JMP $F159
0171  2083- 4C E0 F1   PREPSR  JMP $F1E0
0172  2086- 4C 9E F2   PREPSR1 JMP $F29E
0173  2089- 4C 12 F0   CLOSE   JMP $F012
0174  208C- 4C 15 F0   CLOSAL  JMP $F015
0175  208F- 4C 57 F4   READ    JMP $F457
0176  2092- 4C 25 F4   WRITE   JMP $F425
0177  2095- 4C A7 F4   PREPDO  JMP $F4A7
0178  2098- 4C FD F5   DISCER1 JMP $F5FD
0179  209B- 4C 25 F6   ENDDO   JMP $F625
0180  209E- 4C 2C F6   PREPRD  JMP $F62C
0181  20A1- 4C 51 F6   PREPWRA JMP $F651
0182  20A4- 4C 6D F6   PREPWRB JMP $F66D
0183                   *
0184                   *
0185                   * P-CODE 01: RETN       (RETURN FROM PROCEDURE
0186                   *****************
0187                   * NO ARGUMENTS
0188                   *
0189  20A7- A5 17      RETN    LDA BASE        SP=BASE-2
0190  20A9- 38                 SEC
0191  20AA- E9 02              SBC =2
0192  20AC- 85 08              STA SP
0193  20AE- A5 18              LDA BASE+1
0194  20B0- E9 00              SBC =0
0195  20B2- 85 09              STA SP+1
0196  20B4- A0 80              LDY =128        GET STACK TOP ELEMENT
0197  20B6- B1 08              LDA (SP),Y
0198  20B8- 85 00              STA ACCU
0199  20BA- C8                 INY
0200  20BB- B1 08              LDA (SP),Y
0201  20BD- 85 01              STA ACCU+1

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 16/11/23   R65 ASSEMBLER  PAGE 05

0202  20BF- A0 84              LDY =132
0203  20C1- B1 08              LDA (SP),Y      GET SAVED OLD BASE
0204  20C3- 85 17              STA BASE
0205  20C5- C8                 INY
0206  20C6- B1 08              LDA (SP),Y
0207  20C8- 85 18              STA BASE+1
0208  20CA- C8                 INY
0209  20CB- B1 08              LDA (SP),Y      AND RETURN ADDRESS
0210  20CD- 18                 CLC
0211  20CE- 69 02              ADC =2
0212  20D0- 85 0A              STA PC
0213  20D2- C8                 INY
0214  20D3- B1 08              LDA (SP),Y
0215  20D5- 69 00              ADC =0
0216  20D7- 85 0B              STA PC+1
0217  20D9- 60                 RTS
0218                   *
0219                   * P-CODE 02: NEGA       (NEGATE ACCU)
0220                   *****************
0221                   * NO ARGUMENTS
0222                   *
0223  20DA- A9 00      NEGA    LDA =0
0224  20DC- 38                 SEC
0225  20DD- E5 00              SBC ACCU
0226  20DF- 85 00              STA ACCU
0227  20E1- A9 00              LDA =0
0228  20E3- E5 01              SBC ACCU+1
0229  20E5- 85 01              STA ACCU+1
0230  20E7- 60                 RTS
0231                   *
0232                   * P-CODE 03: ADDA       (ADD)
0233                   *****************
0234                   * NO ARGUMENTS
0235                   *
0236  20E8- A0 7E      ADDA    LDY =126
0237  20EA- 18                 CLC
0238  20EB- B1 08              LDA (SP),Y
0239  20ED- 65 00              ADC ACCU
0240  20EF- 85 00              STA ACCU
0241  20F1- C8                 INY
0242  20F2- B1 08              LDA (SP),Y
0243  20F4- 65 01              ADC ACCU+1
0244  20F6- 85 01              STA ACCU+1
0245                   *
0246  20F8- A5 08      DECS2   LDA SP
0247  20FA- 38                 SEC
0248  20FB- E9 02              SBC =2
0249  20FD- 85 08              STA SP
0250  20FF- B0 02             BCS *+4
0251  2101- C6 09              DEC SP+1

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 16/11/23   R65 ASSEMBLER  PAGE 06

0252  2103- 60                 RTS
0253                   *
0254                   * P-CODE 04: SUBA       (SUBTRACT)
0255                   *****************
0256                   * NO ARGUMENTS
0257                   *
0258  2104- A0 7E      SUBA    LDY =126
0259  2106- 38                 SEC
0260  2107- B1 08              LDA (SP),Y
0261  2109- E5 00              SBC ACCU
0262  210B- 85 00              STA ACCU
0263  210D- C8                 INY
0264  210E- B1 08              LDA (SP),Y
0265  2110- E5 01              SBC ACCU+1
0266  2112- 85 01              STA ACCU+1
0267  2114- 4C F8 20           JMP DECS2
0268                   *
0269                   * P-CODE 05: MULA       (MULTIPLY)
0270                   *****************
0271                   * NO ARGUMENTS
0272                   *
0273  2117- 20 51 21   MULA    JSR GETSIGN     COMPUTE SIGN OF RESULT
0274  211A- A5 00              LDA ACCU
0275  211C- 78                 SEI
0276  211D- 8D E0 14           STA MULTA
0277  2120- A5 1B              LDA ARG1        GET SAVED ARGUMENT
0278  2122- 8D E1 14           STA MULTB
0279  2125- AD E2 14           LDA MULTR
0280  2128- 85 00              STA ACCU
0281  212A- AD E3 14           LDA MULTR+1
0282  212D- A6 1C              LDX ARG1+1
0283  212F- 8E E1 14           STX MULTB
0284  2132- 18                 CLC
0285  2133- 6D E2 14           ADC MULTR
0286  2136- A6 01              LDX ACCU+1
0287  2138- 8E E0 14           STX MULTA
0288  213B- A6 1B              LDX ARG1
0289  213D- 8E E1 14           STX MULTB
0290  2140- 18                 CLC
0291  2141- 6D E2 14           ADC MULTR
0292  2144- 58                 CLI
0293  2145- 29 7F              AND =$7F
0294  2147- 85 01              STA ACCU+1
0295  2149- 20 F8 20           JSR DECS2
0296  214C- A5 10              LDA SIGN
0297  214E- 30 8A              BMI NEGA
0298  2150- 60                 RTS
0299                   *
0300  2151- A5 01      GETSIGN LDA ACCU+1
0301  2153- 85 10              STA SIGN

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 16/11/23   R65 ASSEMBLER  PAGE 07

0302  2155- 10 03              BPL *+5
0303  2157- 20 DA 20           JSR NEGA
0304                   *
0305  215A- A0 7F              LDY =127
0306  215C- B1 08              LDA (SP),Y
0307  215E- 10 14              BPL GETSI1
0308  2160- 45 10              EOR SIGN
0309  2162- 85 10              STA SIGN
0310  2164- 88                 DEY
0311  2165- A9 00              LDA =0
0312  2167- 38                 SEC
0313  2168- F1 08              SBC (SP),Y
0314  216A- 85 1B              STA ARG1
0315  216C- C8                 INY
0316  216D- A9 00              LDA =0
0317  216F- F1 08              SBC (SP),Y
0318  2171- 85 1C              STA ARG1+1
0319  2173- 60                 RTS
0320                   *
0321  2174- 85 1C      GETSI1  STA ARG1+1
0322  2176- 88                 DEY
0323  2177- B1 08              LDA (SP),Y
0324  2179- 85 1B              STA ARG1
0325  217B- 60                 RTS
0326                   *
0327                   * PCODE 06: DIVA        (DIVIDE)
0328                   ****************
0329                   *
0330  217C- A0 7E      DIVA    LDY =126
0331  217E- B1 08              LDA (SP),Y
0332  2180- 85 1B              STA ARG1
0333  2182- C8                 INY
0334  2183- B1 08              LDA (SP),Y
0335  2185- 85 1C              STA ARG1+1
0336  2187- 20 F8 20           JSR DECS2
0337                   *
0338  218A- A5 1C              LDA ARG1+1
0339  218C- 29 80              AND =$80
0340  218E- F0 02              BEQ *+4
0341  2190- A9 FF              LDA =$FF
0342  2192- 85 21              STA ARG2
0343  2194- 85 22              STA ARG2+1
0344  2196- AA                 TAX
0345  2197- 18                 CLC
0346  2198- 65 1B              ADC ARG1
0347  219A- 85 1B              STA ARG1
0348  219C- 8A                 TXA
0349  219D- 65 1C              ADC ARG1+1
0350  219F- 85 1C              STA ARG1+1
0351  21A1- 8A                 TXA

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 16/11/23   R65 ASSEMBLER  PAGE 08

0352  21A2- 45 01              EOR ACCU+1
0353  21A4- 85 10              STA SIGN
0354  21A6- 10 03              BPL *+5
0355  21A8- 20 DA 20           JSR NEGA
0356  21AB- A0 11              LDY =$11
0357  21AD- A5 00              LDA ACCU
0358  21AF- 05 01              ORA ACCU+1
0359  21B1- D0 05              BNE DIV1
0360  21B3- A2 81              LDX =$81        PASCAL RUNTIME ERROR
0361  21B5- 4C B1 29           JMP PERROR      DIVISION BY ZERO
0362                   *
0363  21B8- 38         DIV1    SEC
0364  21B9- A5 21              LDA ARG2
0365  21BB- E5 00              SBC ACCU
0366  21BD- 48                 PHA
0367  21BE- A5 22              LDA ARG2+1
0368  21C0- E5 01              SBC ACCU+1
0369  21C2- 48                 PHA
0370  21C3- 45 22              EOR ARG2+1
0371  21C5- 30 09              BMI DIV2
0372  21C7- 68                 PLA
0373  21C8- 85 22              STA ARG2+1
0374  21CA- 68                 PLA
0375  21CB- 85 21              STA ARG2
0376  21CD- 38                 SEC
0377  21CE- B0 03              BCS DIV3
0378                   *
0379  21D0- 68         DIV2    PLA
0380  21D1- 68                 PLA
0381  21D2- 18                 CLC
0382  21D3- 26 1B      DIV3    ROL ARG1
0383  21D5- 26 1C              ROL ARG1+1
0384  21D7- 26 21              ROL ARG2
0385  21D9- 26 22              ROL ARG2+1
0386  21DB- 88                 DEY
0387  21DC- D0 DA              BNE DIV1
0388  21DE- A5 1B              LDA ARG1
0389  21E0- A6 1C              LDX ARG1+1
0390  21E2- 85 00              STA ACCU
0391  21E4- 86 01              STX ACCU+1
0392  21E6- A5 10              LDA SIGN
0393  21E8- 10 03              BPL *+5
0394  21EA- 4C DA 20           JMP NEGA
0395  21ED- 60                 RTS
0396                   *
0397                   * P-CODE 07: LOWB       (LOW BIT)
0398                   *****************
0399                   * NO ARGUMENTS
0400                   *
0401  21EE- A5 00      LOWB    LDA ACCU

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 16/11/23   R65 ASSEMBLER  PAGE 09

0402  21F0- 29 01              AND =1
0403  21F2- 85 00      LOWB1   STA ACCU
0404  21F4- A9 00              LDA =0
0405  21F6- 85 01              STA ACCU+1
0406  21F8- 60                 RTS
0407                   *
0408                   * P-CODE 08: TEQU       (TEST EQUAL)
0409                   *****************
0410                   *
0411  21F9- 20 04 21   TEQU    JSR SUBA
0412  21FC- A5 00              LDA ACCU
0413  21FE- 05 01             ORA ACCU+1
0414  2200- F0 04              BEQ TEQU1
0415  2202- A9 00              LDA =0
0416  2204- F0 EC              BEQ LOWB1       UNCOND.
0417                   *
0418  2206- A9 01      TEQU1   LDA =1
0419  2208- D0 E8              BNE LOWB1       UNCOND.
0420                   *
0421                   * PCODE 09: TNEQ        (TEST NOT EQUAL)
0422                   ****************
0423                   *
0424  220A- 20 F9 21   TNEQ    JSR TEQU
0425  220D- A5 00              LDA ACCU
0426  220F- 49 01              EOR =1
0427  2211- 85 00              STA ACCU
0428  2213- 60                 RTS
0429                   *
0430                   * P-CODE 0A: TLES       (TEST LESS)
0431                   *****************
0432                   *
0433  2214- 20 04 21   TLES    JSR SUBA
0434  2217- A9 00              LDA =0
0435  2219- 06 01              ASL ACCU+1
0436  221B- 2A                 ROL A
0437  221C- 90 D4              BCC LOWB1       UNCOND.
0438                   *
0439                   * P-CODE 0B: TGRE       (TEST GREATER OR EQUAL)
0440                   *****************
0441                   *
0442  221E- 20 14 22   TGRE    JSR TLES
0443  2221- 4C 0D 22           JMP TNEQ+3
0444                   *
0445                   * P-CODE 0C: TGRTS      (TEST GREATER)
0446                   ******************
0447                   *
0448  2224- 20 F9 26   TGRT    JSR EXST
0449  2227- 4C 14 22           JMP TLES
0450                   *
0451                   * P-CODE 0D: TLEE       (TEST LESS OR EQUAL)

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 16/11/23   R65 ASSEMBLER  PAGE 10

0452                   *****************
0453                   *
0454  222A- 20 24 22   TLEE    JSR TGRT
0455  222D- 4C 0D 22           JMP TNEQ+3
0456                   *
0457                   * P-CODE 0E: ORAC       (BITWISE OR)
0458                   *****************
0459                   *
0460  2230- A0 7E      ORAC    LDY =126
0461  2232- B1 08              LDA (SP),Y
0462  2234- 05 00              ORA ACCU
0463  2236- 85 00              STA ACCU
0464  2238- C8                 INY
0465  2239- B1 08              LDA (SP),Y
0466  223B- 05 01              ORA ACCU+1
0467  223D- 85 01              STA ACCU+1
0468  223F- 4C F8 20           JMP DECS2
0469                   *
0470                   * P-CODE 0F: ANDA       (BITWISE AND)
0471                   *****************
0472                   *
0473  2242- A0 7E      ANDA    LDY =126
0474  2244- B1 08              LDA (SP),Y
0475  2246- 25 00              AND ACCU
0476  2248- 85 00              STA ACCU
0477  224A- C8                 INY
0478  224B- B1 08              LDA (SP),Y
0479  224D- 25 01              AND ACCU+1
0480  224F- 85 01              STA ACCU+1
0481  2251- 4C F8 20           JMP DECS2
0482                   *
0483                   * PCODE 10: EORA        (BITWISE OR)
0484                   ****************
0485                   *
0486  2254- A0 7E      EORA    LDY =126
0487  2256- B1 08              LDA (SP),Y
0488  2258- 45 00              EOR ACCU
0489  225A- 85 00              STA ACCU
0490  225C- C8                 INY
0491  225D- B1 08              LDA (SP),Y
0492  225F- 45 01              EOR ACCU+1
0493  2261- 85 01              STA ACCU+1
0494  2263- 4C F8 20           JMP DECS2
0495                   *
0496                   * P-CODE 11: NOTA       (BITWISE NOT)
0497                   *****************
0498                   *
0499  2266- A5 00      NOTA    LDA ACCU
0500  2268- 49 FF              EOR =$FF
0501  226A- 85 00              STA ACCU

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 16/11/23   R65 ASSEMBLER  PAGE 11

0502  226C- A5 01              LDA ACCU+1
0503  226E- 49 FF              EOR =$FF
0504  2270- 85 01              STA ACCU+1
0505  2272- 60                 RTS
0506                   *
0507                   * P-CODE 12: LEFT       (SHIFT LEFT N BYTES)
0508                   *****************
0509                   *
0510  2273- 20 DA 20           JSR NEGA
0511  2276- A5 01      LEFT    LDA ACCU+1
0512  2278- 30 12              BMI RIGH-3      ARGUMENT NEGATIVE
0513                   *
0514  227A- A6 00              LDX ACCU
0515  227C- F0 0B              BEQ LEFT2       TAKE ONLY LOW BYTE
0516  227E- 20 E9 22           JSR GETS2       GET SECOND NO FROM ST
0517  2281- 06 00      LEFT1   ASL ACCU
0518  2283- 26 01              ROL ACCU+1
0519  2285- CA                 DEX
0520  2286- D0 F9              BNE LEFT1
0521  2288- 60                 RTS
0522                   *
0523  2289- 4C E9 22   LEFT2   JMP GETS2
0524                   *
0525                   * P-CODE 13: RIGH       (SHIFT RIGHT N BYTES)
0526                   *****************
0527                   *
0528  228C- 20 DA 20           JSR NEGA
0529  228F- A5 01      RIGH    LDA ACCU+1
0530  2291- 30 E0              BMI LEFT-3
0531  2293- A6 00              LDX ACCU
0532  2295- F0 F2              BEQ LEFT2
0533  2297- 20 E9 22           JSR GETS2
0534  229A- 46 01      RIGH1   LSR ACCU+1
0535  229C- A9 00              LDA =0
0536  229E- 90 02              BCC *+4
0537  22A0- A9 80              LDA =128
0538  22A2- 46 00              LSR ACCU
0539  22A4- 05 00              ORA ACCU
0540  22A6- 85 00              STA ACCU
0541  22A8- CA                 DEX
0542  22A9- D0 EF              BNE RIGH1
0543  22AB- 60                 RTS
0544                   *
0545                   * P-CODE 14:INCA        (INCREMENT ACCU)
0546                   ****************
0547                   *
0548  22AC- E6 00      INCA    INC ACCU
0549  22AE- D0 02              BNE *+4
0550  22B0- E6 01              INC ACCU+1
0551  22B2- 60                 RTS

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 16/11/23   R65 ASSEMBLER  PAGE 12

0552                   *
0553                   * P-CODE 15: DECA       (DECREMENT ACCU)
0554                   *****************
0555                   *
0556  22B3- A5 00      DECA    LDA ACCU
0557  22B5- D0 02              BNE *+4
0558  22B7- C6 01              DEC ACCU+1
0559  22B9- C6 00              DEC ACCU
0560  22BB- 60                 RTS
0561                   *
0562                   * P-CODE 16: COPY       (COPY ACCU0
0563                   *****************
0564                   *
0565  22BC- 20 CB 22   COPY    JSR INCS2       INCREMENT STACK
0566  22BF- A0 7E              LDY =126
0567  22C1- A5 00              LDA ACCU
0568  22C3- 91 08              STA (SP),Y
0569  22C5- C8                 INY
0570  22C6- A5 01              LDA ACCU+1
0571  22C8- 91 08              STA (SP),Y
0572  22CA- 60                 RTS
0573                   *
0574  22CB- A9 02      INCS2   LDA =2
0575  22CD- 18                 CLC
0576  22CE- 65 08              ADC SP
0577  22D0- 85 08              STA SP
0578  22D2- 90 02              BCC *+4
0579  22D4- E6 09              INC SP+1
0580  22D6- C5 0E      INCS2A  CMP ENDSTK      TEST STACK OVERFLOW
0581  22D8- A5 09              LDA SP+1
0582  22DA- E5 0F              SBC ENDSTK+1
0583  22DC- B0 06              BCS INCS2B
0584  22DE- A9 05              LDA =5          LET EMULATOR KNOW THAT
0585  22E0- 8D 30 14           STA EMUCOM      SP HAS BEEN INCREASED
0586  22E3- 60                 RTS
0587                   *
0588  22E4- A0 82      INCS2B  LDY =$82        PASCAL RUN TIME ERROR
0589  22E6- 4C B1 29           JMP PERROR      STACK OVERFLOW
0590                   *
0591                   * GETS2
0592                   *
0593  22E9- A0 7E      GETS2   LDY =126
0594  22EB- B1 08              LDA (SP),Y
0595  22ED- 85 00              STA ACCU
0596  22EF- C8                 INY
0597  22F0- B1 08              LDA (SP),Y
0598  22F2- 85 01              STA ACCU+1
0599  22F4- 4C F8 20           JMP DECS2
0600                   *
0601                   * P-CODE 17: PEEK

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 16/11/23   R65 ASSEMBLER  PAGE 13

0602                   *****************
0603                   *
0604  22F7- A0 00      PEEK    LDY =0
0605  22F9- B1 00              LDA (ACCU),Y
0606  22FB- 85 00              STA ACCU
0607  22FD- 84 01              STY ACCU+1
0608  22FF- 60                RTS
0609                   *
0610                   * P-CODE 18: POKE
0611                   *****************
0612                   *
0613  2300- A6 00      POKE    LDX ACCU
0614  2302- 20 E9 22           JSR GETS2
0615  2305- A0 00              LDY =0
0616  2307- 8A                 TXA
0617  2308- 91 00              STA (ACCU),Y
0618  230A- 4C E9 22           JMP GETS2
0619                   *
0620                   * P-CODE 19: CALA
0621                   *****************
0622                   *
0623  230D- 20 13 23   CALA    JSR CALA1
0624  2310- 4C E9 22           JMP GETS2
0625                   *
0626  2313- 6C 00 00   CALA1   JMP (ACCU)
0627                   *
0628                   * P-CODE 1A: RLIN
0629                   *****************
0630                   *
0631  2316- 20 06 E0   RLIN    JSR GETLIN
0632  2319- A2 00              LDX =0
0633  231B- B1 E9              LDA (VIDPNT),Y
0634  231D- 29 7F              AND =$7F
0635  231F- 95 24              STA LINBUF,X
0636  2321- E8                 INX
0637  2322- C8                 INY
0638  2323- CC 8A 17           CPY NUMCHR
0639  2326- 90 F3              BCC *-11
0640  2328- F0 F1              BEQ *-13
0641  232A- CA                 DEX
0642  232B- 30 06              BMI *+8
0643  232D- B5 24              LDA LINBUF,X
0644  232F- C9 20              CMP =$20
0645  2331- F0 F7              BEQ *-7
0646  2333- E8                 INX
0647  2334- 86 16              STX ENDBUF
0648  2336- A9 00              LDA =0
0649  2338- 85 15              STA BUFFPN
0650  233A- 20 27 E0           JSR PRTINF
0651  233D- 0D 8A              BYT $D,$8A

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 16/11/23   R65 ASSEMBLER  PAGE 14

0652  233F- 60                 RTS
0653                   *
0654                   * P-CODE 1B: GETC
0655                   *****************
0656                   *
0657  2340- 20 BC 22   GETC    JSR COPY
0658  2343- 20 46 29           JSR GETCHR0
0659  2346- 85 00      GETC1   STA ACCU
0660  2348- A9 00              LDA =0
0661  234A- 85 01              STA ACCU+1
0662  234C- 60                 RTS
0663                   *
0664                   * P-CODE 1C: GETN
0665                   *****************
0666                   *
0667  234D- 20 BC 22   GETN    JSR COPY
0668  2350- A9 00              LDA =0
0669  2352- 85 00              STA ACCU
0670  2354- 85 01              STA ACCU+1
0671  2356- 85 10              STA SIGN
0672  2358- 20 46 29   GETN0   JSR GETCHR0
0673  235B- C9 20              CMP =' '
0674  235D- F0 F9              BEQ GETN0
0675  235F- C9 2D              CMP ='-'
0676  2361- D0 05              BNE GETN1
0677                   *
0678  2363- C6 10              DEC SIGN
0679  2365- 4C 6C 23           JMP GETN2
0680                   *
0681  2368- C9 2B      GETN1    CMP ='+'
0682  236A- D0 03              BNE GETN2+3
0683                   *
0684  236C- 20 46 29   GETN2   JSR GETCHR0
0685  236F- C9 30              CMP ='0'
0686  2371- 90 2F              BCC GETN3
0687  2373- C9 3A              CMP ='9'+1
0688  2375- B0 2B              BCS GETN3
0689  2377- 38                 SEC
0690  2378- E9 30              SBC ='0'
0691  237A- 48                 PHA
0692  237B- 06 00              ASL ACCU
0693  237D- 26 01              ROL ACCU+1
0694  237F- A6 00              LDX ACCU
0695  2381- A4 01              LDY ACCU+1
0696  2383- 06 00              ASL ACCU
0697  2385- 26 01              ROL ACCU+1
0698  2387- 06 00              ASL ACCU
0699  2389- 26 01              ROL ACCU+1
0700  238B- 18                 CLC
0701  238C- 8A                 TXA

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 16/11/23   R65 ASSEMBLER  PAGE 15

0702  238D- 65 00              ADC ACCU
0703  238F- 85 00              STA ACCU
0704  2391- 98                 TYA
0705  2392- 65 01              ADC ACCU+1
0706  2394- 85 01              STA ACCU+1
0707  2396- 68                 PLA
0708  2397- 18                 CLC
0709  2398- 65 00              ADC ACCU
0710  239A- 85 00              STA ACCU
0711  239C- 90 CE              BCC GETN2
0712  239E- E6 01              INC ACCU+1
0713  23A0- B0 CA              BCS GETN2
0714                   *
0715  23A2- A5 10      GETN3   LDA SIGN
0716  23A4- F0 03              BEQ *+5
0717  23A6- 4C DA 20           JMP NEGA
0718  23A9- 60                 RTS
0719                   *
0720                   * P-CODE 1D: PRTC
0721                   *****************
0722                   *
0723  23AA- A5 00      PRTC    LDA ACCU
0724  23AC- 20 76 29           JSR PRTCHR0
0725  23AF- 4C E9 22           JMP GETS2
0726                   *
0727                   * P-CODE 1E: PRTN
0728                   *****************
0729                   *
0730  23B2- A5 01      PRTN    LDA ACCU+1
0731  23B4- 10 08              BPL PRTN1
0732  23B6- 20 DA 20           JSR NEGA
0733  23B9- A9 2D              LDA ='-'
0734  23BB- 20 76 29           JSR PRTCHR0
0735                   *
0736  23BE- A5 00      PRTN1   LDA ACCU
0737  23C0- A6 01              LDX ACCU+1
0738  23C2- 85 21              STA ARG2
0739  23C4- 86 22              STX ARG2+1
0740  23C6- A9 1F              LDA =$1F
0741  23C8- 85 1D              STA ARG3
0742  23CA- 85 1F              STA ARG3+2
0743  23CC- A9 2A              LDA =$2A
0744  23CE- 85 1E              STA ARG3+1
0745  23D0- 85 20              STA ARG3+3
0746  23D2- A6 21              LDX ARG2
0747  23D4- A4 22              LDY ARG2+1
0748  23D6- 38                 SEC
0749  23D7- E6 1D      PRTN2   INC ARG3
0750  23D9- 8A                 TXA
0751  23DA- E9 10              SBC =$10

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 16/11/23   R65 ASSEMBLER  PAGE 16

0752  23DC- AA                 TAX
0753  23DD- 98                 TYA
0754  23DE- E9 27              SBC =$27
0755  23E0- A8                 TAY
0756  23E1- B0 F4              BCS PRTN2
0757  23E3- C6 1E      PRTN3   DEC ARG3+1
0758  23E5- 8A                 TXA
0759  23E6- 69 E8              ADC =$E8
0760  23E8- AA                 TAX
0761  23E9- 98                 TYA
0762  23EA- 69 03              ADC =$03
0763  23EC- A8                 TAY
0764  23ED- 90 F4              BCC PRTN3
0765  23EF- 8A                 TXA
0766  23F0- 38         PRTN4   SEC
0767  23F1- E6 1F      PRTN5   INC ARG3+2
0768  23F3- E9 64              SBC =$64
0769  23F5- B0 FA              BCS PRTN5
0770  23F7- 88                 DEY
0771  23F8- 10 F6              BPL PRTN4
0772  23FA- C6 20      PRTN6   DEC ARG3+3
0773  23FC- 69 0A              ADC =$A
0774  23FE- 90 FA             BCC PRTN6
0775  2400- 09 30              ORA =$30
0776  2402- 85 21              STA ARG2
0777  2404- A9 20              LDA =$20
0778  2406- 85 22              STA ARG2+1
0779  2408- A2 FB              LDX =$FB
0780  240A- 86 10      PRTN7   STX SIGN
0781  240C- B5 22              LDA ARG2+1,X
0782  240E- 05 22              ORA ARG2+1
0783  2410- C9 20              CMP =$20
0784  2412- F0 09              BEQ PRTN8
0785  2414- A0 30              LDY =$30
0786  2416- 84 22              STY ARG2+1
0787  2418- 05 22              ORA ARG2+1
0788  241A- 20 76 29           JSR PRTCHR0
0789  241D- A6 10      PRTN8   LDX SIGN
0790  241F- E8                 INX
0791  2420- D0 E8              BNE PRTN7
0792  2422- 4C E9 22           JMP GETS2
0793                   *
0794                   * P-CODE 1F: PRTS
0795                   *****************
0796                   *
0797  2425- 06 00      PRTS    ASL ACCU
0798  2427- 26 01              ROL ACCU+1
0799  2429- A5 08              LDA SP
0800  242B- 38                 SEC
0801  242C- E5 00              SBC ACCU

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 16/11/23   R65 ASSEMBLER  PAGE 17

0802  242E- 85 00              STA ACCU
0803  2430- 48                 PHA
0804  2431- A5 09              LDA SP+1
0805  2433- E5 01              SBC ACCU+1
0806  2435- 85 01              STA ACCU+1
0807  2437- 48                 PHA
0808  2438- A0 80      OUTST1  LDY =128
0809  243A- B1 00              LDA (ACCU),Y
0810  243C- 20 76 29           JSR PRTCHR0
0811  243F- A5 00              LDA ACCU
0812  2441- 18                 CLC
0813  2442- 69 02              ADC =2
0814  2444- 85 00              STA ACCU
0815  2446- 90 02              BCC *+4
0816  2448- E6 01              INC ACCU+1
0817  244A- C5 08              CMP SP
0818  244C- A5 01              LDA ACCU+1
0819  244E- E5 09              SBC SP+1
0820  2450- 90 E6              BCC OUTST1
0821  2452- 68                 PLA
0822  2453- 85 09              STA SP+1
0823  2455- 68                 PLA
0824  2456- 85 08              STA SP
0825  2458- 4C E9 22           JMP GETS2
0826                   *
0827                   * P-CODE 20: LITB
0828                   *****************
0829                   *
0830  245B- 20 BC 22   LITB    JSR COPY
0831  245E- 20 A5 24           JSR FETCH
0832  2461- 85 00              STA ACCU
0833  2463- A9 00              LDA =0
0834  2465- 85 01              STA ACCU+1
0835  2467- 60                 RTS
0836                   *
0837                   * P-CODE 21: INCB
0838                   *****************
0839                   *
0840  2468- A0 80      INCB    LDY =128        SAVE CURRENT ACCU
0841  246A- A5 00              LDA ACCU
0842  246C- 91 08              STA (SP),Y
0843  246E- C8                 INY
0844  246F- A5 01              LDA ACCU+1
0845  2471- 91 08              STA (SP),Y
0846  2473- 20 A5 24           JSR FETCH
0847  2476- A2 00              LDX =0
0848  2478- A8                 TAY             TEST A
0849  2479- 10 01              BPL *+3
0850  247B- CA                 DEX
0851  247C- 18                 CLC

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 16/11/23   R65 ASSEMBLER  PAGE 18

0852  247D- 65 08              ADC SP
0853  247F- 85 08              STA SP
0854  2481- 8A                 TXA
0855  2482- 65 09              ADC SP+1
0856  2484- 85 09              STA SP+1
0857  2486- A5 08      INCB1   LDA SP
0858  2488- 20 D6 22           JSR INCS2A      TEST STACK OVERFLOW
0859  248B- A0 80              LDY =128        AND GET NEW ACCU
0860  248D- B1 08              LDA (SP),Y
0861  248F- 85 00              STA ACCU
0862  2491- C8                 INY
0863  2492- B1 08              LDA (SP),Y
0864  2494- 85 01              STA ACCU+1
0865  2496- 60                 RTS
0866                   *
0867                   * P-CODE 22: LITW
0868                   *****************
0869                   *
0870  2497- 20 BC 22   LITW    JSR COPY
0871  249A- 20 A5 24           JSR FETCH
0872  249D- 85 00              STA ACCU
0873  249F- 20 A5 24           JSR FETCH
0874  24A2- 85 01              STA ACCU+1
0875  24A4- 60                 RTS
0876                   *
0877                   * FETCH
0878                   *
0879  24A5- A0 00      FETCH   LDY =0
0880  24A7- B1 0A              LDA (PC),Y
0881  24A9- E6 0A              INC PC
0882  24AB- D0 02              BNE *+4
0883  24AD- E6 0B              INC PC+1
0884  24AF- 60                 RTS
0885                   *
0886                   * P-CODE 23: INCW
0887                   *****************
0888                   *
0889  24B0- A0 80      INCW    LDY =128        SAVE CURRENT ACCU
0890  24B2- A5 00              LDA ACCU
0891  24B4- 91 08              STA (SP),Y
0892  24B6- C8                 INY
0893  24B7- A5 01              LDA ACCU+1
0894  24B9- 91 08              STA (SP),Y
0895  24BB- 20 A5 24           JSR FETCH
0896  24BE- 18                 CLC
0897  24BF- 65 08              ADC SP
0898  24C1- 85 08              STA SP
0899  24C3- 20 A5 24           JSR FETCH
0900  24C6- 65 09              ADC SP+1
0901  24C8- 85 09              STA SP+1

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 16/11/23   R65 ASSEMBLER  PAGE 19

0902  24CA- 4C 86 24           JMP INCB1
0903                   *
0904                   * P-CODE 24: JUMP
0905                   *****************
0906                   *
0907  24CD- A0 00      JUMP    LDY =0
0908  24CF- B1 0A              LDA (PC),Y
0909  24D1- 18                 CLC
0910  24D2- 65 0A              ADC PC
0911  24D4- AA                 TAX
0912  24D5- C8                 INY
0913  24D6- B1 0A              LDA (PC),Y
0914  24D8- 65 0B              ADC PC+1
0915  24DA- 86 0A              STX PC
0916  24DC- 85 0B              STA PC+1
0917  24DE- 60                 RTS
0918                   *
0919                   * P-CODE 25: JMPZ
0920                   *****************
0921                   *
0922  24DF- 46 00      JMPZ    LSR ACCU
0923  24E1- 08                 PHP
0924  24E2- 20 E9 22           JSR GETS2
0925  24E5- 28                 PLP
0926  24E6- 90 E5              BCC JUMP
0927                   *
0928  24E8- A5 0A              LDA PC
0929  24EA- 18                 CLC
0930  24EB- 69 02              ADC =2
0931  24ED- 85 0A              STA PC
0932  24EF- 90 02              BCC *+4
0933  24F1- E6 0B              INC PC+1
0934  24F3- 60                 RTS
0935                   *
0936                   * P-CODE 26: JMPO
0937                   *****************
0938                   *
0939  24F4- A5 00      JMPO    LDA ACCU
0940  24F6- 49 01              EOR =1
0941  24F8- 85 00              STA ACCU
0942  24FA- 4C DF 24           JMP JMPZ
0943                   *
0944                   * P-CODE 27: LOAD
0945                   *****************
0946                   *
0947  24FD- 20 BC 22  LOAD    JSR COPY
0948  2500- 20 A5 24           JSR FETCH
0949  2503- AA                 TAX             LEVEL DIFFERENCE
0950  2504- 20 A5 24           JSR FETCH
0951  2507- 85 1B              STA ARG1

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 16/11/23   R65 ASSEMBLER  PAGE 20

0952  2509- 20 A5 24           JSR FETCH
0953  250C- 85 1C      LOAD1   STA ARG1+1
0954  250E- 20 3A 25           JSR FBASE3
0955  2511- A0 80      LOAD2   LDY =128
0956  2513- B1 19              LDA (ABASE),Y
0957  2515- 85 00              STA ACCU
0958  2517- C8                 INY
0959  2518- B1 19              LDA (ABASE),Y
0960  251A- 85 01              STA ACCU+1
0961  251C- 60                 RTS
0962                   *
0963                   * FBASE
0964                   *
0965  251D- A5 17      FBASE   LDA BASE
0966  251F- A4 18              LDY BASE+1
0967  2521- 85 19              STA ABASE
0968  2523- 84 1A              STY ABASE+1
0969  2525- E0 00              CPX =0
0970  2527- F0 10              BEQ FBASE2
0971                   *
0972  2529- A0 80      FBASE1  LDY =128
0973  252B- B1 19              LDA (ABASE),Y
0974  252D- 48                 PHA
0975  252E- C8                 INY
0976  252F- B1 19              LDA (ABASE),Y
0977  2531- 85 1A              STA ABASE+1
0978  2533- 68                 PLA
0979  2534- 85 19              STA ABASE
0980  2536- CA                 DEX
0981  2537- D0 F0              BNE FBASE1
0982  2539- 60         FBASE2  RTS
0983                   *
0984  253A- 20 1D 25   FBASE3  JSR FBASE
0985  253D- 18                 CLC
0986  253E- A5 1B              LDA ARG1
0987  2540- 65 19              ADC ABASE
0988  2542- 85 19              STA ABASE
0989  2544- A5 1C              LDA ARG1+1
0990  2546- 65 1A              ADC ABASE+1
0991  2548- 85 1A              STA ABASE+1
0992  254A- 60                 RTS
0993                   *
0994                   * P-CODE 28: LODX
0995                   *****************
0996                   *
0997  254B- 20 A5 24   LODX    JSR FETCH
0998  254E- AA                 TAX
0999  254F- 20 A5 24           JSR FETCH
1000  2552- 06 00              ASL ACCU
1001  2554- 26 01              ROL ACCU+1

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 16/11/23   R65 ASSEMBLER  PAGE 21

1002  2556- 18                 CLC
1003  2557- 65 00              ADC ACCU
1004  2559- 85 1B              STA ARG1
1005  255B- 08                 PHP
1006  255C- 20 A5 24           JSR FETCH
1007  255F- 28                 PLP
1008  2560- 65 01              ADC ACCU+1
1009  2562- 4C 0C 25           JMP LOAD1
1010                   *
1011                   * P-CODE 29: STOR
1012                   *****************
1013                   *
1014  2565- 20 A5 24   STOR    JSR FETCH
1015  2568- AA                 TAX
1016  2569- 20 A5 24           JSR FETCH
1017  256C- 85 1B              STA ARG1
1018  256E- 20 A5 24           JSR FETCH
1019  2571- 85 1C              STA ARG1+1
1020  2573- 20 3A 25   STOR1   JSR FBASE3
1021  2576- A0 80      STOR2   LDY =128
1022  2578- A5 00              LDA ACCU
1023  257A- 91 19              STA (ABASE),Y
1024  257C- C8                 INY
1025  257D- A5 01              LDA ACCU+1
1026  257F- 91 19              STA (ABASE),Y
1027  2581- 4C E9 22           JMP GETS2
1028                   *
1029                   * P-CODE 2A: STOX
1030                   *****************
1031                   *
1032  2584- 20 A5 24   STOX    JSR FETCH
1033  2587- AA                 TAX
1034  2588- A0 7E              LDY =126
1035  258A- B1 08              LDA (SP),Y
1036  258C- 0A                 ASL A
1037  258D- 85 1B              STA ARG1
1038  258F- C8                 INY
1039  2590- B1 08              LDA (SP),Y
1040  2592- 2A                 ROL A
1041  2593- 85 1C              STA ARG1+1
1042  2595- 20 A5 24           JSR FETCH
1043  2598- 18                 CLC
1044  2599- 65 1B              ADC ARG1
1045  259B- 85 1B              STA ARG1
1046  259D- 20 A5 24           JSR FETCH
1047  25A0- 65 1C              ADC ARG1+1
1048  25A2- 85 1C              STA ARG1+1
1049  25A4- 20 F8 20           JSR DECS2
1050  25A7- 4C 73 25           JMP STOR1
1051                   *

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 16/11/23   R65 ASSEMBLER  PAGE 22

1052                   * P-CODE 2B: CALL
1053                   *****************
1054                   *
1055  25AA- 20 A5 24   CALL    JSR FETCH
1056  25AD- AA                 TAX
1057  25AE- 20 1D 25           JSR FBASE
1058  25B1- A0 82              LDY =130
1059  25B3- A5 19              LDA ABASE
1060  25B5- 91 08              STA (SP),Y
1061  25B7- C8                 INY
1062  25B8- A5 1A              LDA ABASE+1
1063  25BA- 91 08              STA (SP),Y
1064  25BC- C8                 INY
1065  25BD- A5 17              LDA BASE
1066  25BF- 91 08              STA (SP),Y
1067  25C1- C8                 INY
1068  25C2- A5 18              LDA BASE+1
1069  25C4- 91 08              STA (SP),Y
1070  25C6- C8                 INY
1071  25C7- A5 0A              LDA PC
1072  25C9- 91 08              STA (SP),Y
1073  25CB- C8                 INY
1074  25CC- A5 0B              LDA PC+1
1075  25CE- 91 08              STA (SP),Y
1076  25D0- A5 08              LDA SP
1077  25D2- 18                 CLC
1078  25D3- 69 02              ADC =2
1079  25D5- 85 17              STA BASE
1080  25D7- A5 09              LDA SP+1
1081  25D9- 69 00              ADC =0
1082  25DB- 85 18              STA BASE+1
1083  25DD- 4C CD 24           JMP JUMP
1084                   *
1085                   * PCODE 2C: SDEV
1086                   ****************
1087                   *
1088  25E0- A5 00      SDEV    LDA ACCU
1089  25E2- 85 0D              STA DEVICE
1090  25E4- 4C E9 22           JMP GETS2
1091                   *
1092                   * PCODE 2D: RDEV
1093                   ****************
1094                   *
1095  25E7- A9 00      RDEV    LDA =0
1096  25E9- 85 0D              STA DEVICE
1097  25EB- 60                 RTS
1098                   *
1099                   * PCODE 2E: FNAM
1100                   ****************
1101                   *

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 16/11/23   R65 ASSEMBLER  PAGE 23

1102  25EC- 20 27 E0   FNAM    JSR PRTINF
1103  25EF- 20 3D A0           BYT ' = '+128
1104  25F2- 20 06 E0           JSR GETLIN
1105  25F5- 20 15 F8           JSR GETNAM
1106  25F8- 20 0D 20           JSR HARGUM
1107  25FB- 85 DC              STA FILDRV
1108  25FD- 20 0D 20          JSR HARGUM
1109  2600- 8D 13 03           STA FILLOC
1110  2603- 20 27 E0           JSR PRTINF
1111  2606- 0D 8A              BYT $D,$8A
1112  2608- 60                 RTS
1113                   *
1114                   * P-CODE 2F: OPNR
1115                   *****************
1116                   *
1117                   * NO AUTOMATIC ERROR TESTING
1118                   *
1119  2609- A9 00      OPNR    LDA =0
1120  260B- 85 DA              STA FILFLG
1121  260D- 20 BC 22           JSR COPY
1122  2610- 20 0F F0           JSR OPEN
1123  2613- C8                 INY
1124  2614- C8                 INY
1125  2615- 84 00              STY ACCU
1126  2617- 85 01              STA ACCU+1
1127  2619- 60                 RTS
1128                   *
1129                   * P-CODE 30: OPNW
1130                   *****************
1131                   *
1132  261A- A9 20      OPNW    LDA =$20
1133  261C- 4C 0B 26           JMP OPNR+2
1134                   *
1135                   * P-CODE 31: CLOS
1136                   *****************
1137                   *
1138                   * NO AUTOMATIC ERROR CHECKING
1139                   *
1140  261F- A6 00      CLOS    LDX ACCU
1141  2621- CA                 DEX
1142  2622- CA                 DEX
1143  2623- 20 38 2E           JSR CLOSRA
1144  2626- 4C E9 22           JMP GETS2
1145                   *
1146                   * P-CODE 32: PRTI
1147                   *****************
1148                   *
1149  2629- 20 A5 24   PRTI    JSR FETCH
1150  262C- 48                 PHA
1151  262D- 29 7F              AND =$7F

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 16/11/23   R65 ASSEMBLER  PAGE 24

1152  262F- 20 76 29           JSR PRTCHR0
1153  2632- 68                 PLA
1154  2633- 10 F4              BPL PRTI
1155  2635- 60                 RTS
1156                   *
1157                   * P-CODE 33: GHGH       (GET HIGH)
1158                   *****************
1159                   *
1160  2636- A5 01      GHGH    LDA ACCU+1
1161  2638- 85 00              STA ACCU
1162                   *
1163                   * P-CODE 34: GLOW
1164                   *****************
1165                   *
1166  263A- A9 00      GLOW    LDA =0
1167  263C- 85 01              STA ACCU+1
1168  263E- 60                 RTS
1169                   *
1170                   * P-CODE 35:PHGH
1171                   ****************
1172                   *
1173  263F- A0 7E      PHGH    LDY =126
1174  2641- B1 08              LDA (SP),Y
1175  2643- 85 01              STA ACCU+1
1176  2645- 4C F8 20           JMP DECS2
1177                   *
1178                   * P-CODE 36: PLOW
1179                   *****************
1180                   *
1181  2648- A0 7E      PLOW    LDY =126
1182  264A- B1 08              LDA (SP),Y
1183  264C- 85 00              STA ACCU
1184  264E- 4C F8 20           JMP DECS2
1185                   *
1186                   * P-CODE 37: GSEC
1187                   *****************
1188                   * DEVICE HAS TO BE SET  ########
1189                   *
1190  2651- 20 63 26   GSEC    JSR PREPSEC
1191  2654- 4C 8F 20           JMP READ
1192  2657- 4C 9B 20           JMP ENDDO
1193                   *
1194                   * P-CODE 38: PSEC
1195                   *****************
1196                   * DEVICE HAS TO BE SET  ########
1197                   *
1198  265A- 20 63 26   PSEC    JSR PREPSEC
1199  265D- 20 92 20           JSR WRITE
1200  2660- 4C 9B 20           JMP ENDDO
1201                   *

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 16/11/23   R65 ASSEMBLER  PAGE 25

1202  2663- A5 00      PREPSEC LDA ACCU
1203  2665- A6 01              LDX ACCU+1
1204  2667- 85 E0              STA DATA
1205  2669- 86 E1              STX DATA+1
1206  266B- A0 7E              LDY =126
1207  266D- B1 08              LDA (SP),Y
1208  266F- 85 DE              STA SECTOR
1209  2671- A0 7C              LDY =124
1210  2673- B1 08              LDA (SP),Y
1211  2675- 85 DD              STA TRACK
1212  2677- A5 08              LDA SP
1213  2679- 38                 SEC
1214  267A- E9 04              SBC =4
1215  267C- 20 FD 20           JSR DECS2+5
1216  267F- 20 E9 22           JSR GETS2
1217  2682- 4C 95 20           JMP PREPDO
1218                   *
1219                   * P-CODE 39: NBYT       LOAD N BYTES IMMEDIATELY
1220                   *****************
1221                   *
1222  2685- 20 A5 24   NBYT    JSR FETCH
1223  2688- AA                 TAX             BYTE COUNTER
1224  2689- 20 BC 22   NBYT1   JSR COPY
1225  268C- 20 A5 24           JSR FETCH
1226  268F- 84 01              STY ACCU+1      Y=0
1227  2691- 85 00              STA ACCU
1228  2693- CA                 DEX
1229  2694- D0 F3              BNE NBYT1
1230  2696- 60                 RTS
1231                   *
1232                   * P-CODE 3A: NWRD       LOAD N WORD IMMEDIATELY
1233                   *****************
1234                   *
1235  2697- 20 A5 24   NWRD    JSR FETCH
1236  269A- AA                 TAX             WORD COUNTER
1237  269B- 20 BC 22   NWRD1   JSR COPY
1238  269E- 20 A5 24           JSR FETCH
1239  26A1- 85 00              STA ACCU
1240  26A3- 20 A5 24           JSR FETCH
1241  26A6- 85 01              STA ACCU+1
1242  26A8- CA                 DEX
1243  26A9- D0 F0              BNE NWRD1
1244  26AB- 60                 RTS
1245                   *
1246                   * P-CODE 3B: LODN       LOAD N MORE WORDS
1247                   *****************
1248                   *
1249  26AC- 20 A5 24   LODN    JSR FETCH
1250  26AF- AA                 TAX
1251  26B0- 20 BC 22   LODN1   JSR COPY

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 16/11/23   R65 ASSEMBLER  PAGE 26

1252  26B3- A5 19              LDA ABASE
1253  26B5- 18                 CLC
1254  26B6- 69 02              ADC =2
1255  26B8- 85 19              STA ABASE
1256  26BA- 90 02              BCC *+4
1257  26BC- E6 1A              INC ABASE+1
1258  26BE- 20 11 25           JSR LOAD2
1259  26C1- CA                 DEX
1260  26C2- D0 EC              BNE LODN1
1261  26C4- 60                 RTS
1262                   *
1263                   * P-CODE 3C: STON       STORE N MORE WORDS
1264                   *****************
1265                   *
1266  26C5- 20 A5 24   STON    JSR FETCH
1267  26C8- AA                 TAX
1268  26C9- A5 19      STON1   LDA ABASE
1269  26CB- 38                 SEC
1270  26CC- E9 02              SBC =2
1271  26CE- 85 19              STA ABASE
1272  26D0- B0 02              BCS *+4
1273  26D2- C6 1A              DEC ABASE+1
1274  26D4- 20 76 25           JSR STOR2
1275  26D7- CA                 DEX
1276  26D8- D0 EF              BNE STON1
1277  26DA- 60                 RTS
1278                   *
1279                   * P-CODE 3D: LODI       LOAD INDIRECT
1280                   *****************
1281                   *
1282  26DB- 20 E1 26   LODI    JSR GETACC
1283  26DE- 4C 11 25           JMP LOAD2
1284                   *
1285  26E1- A5 00      GETACC  LDA ACCU
1286  26E3- A6 01              LDX ACCU+1
1287  26E5- 38                 SEC
1288  26E6- E9 80              SBC =128
1289  26E8- B0 01              BCS *+3
1290  26EA- CA                 DEX
1291  26EB- 85 19              STA ABASE
1292  26ED- 86 1A              STX ABASE+1
1293  26EF- 60                 RTS
1294                   *
1295                   * P-CODE 3E: STOI       STORE INDIRECT
1296                   *****************
1297                   *
1298  26F0- 20 E1 26   STOI    JSR GETACC
1299  26F3- 20 E9 22           JSR GETS2
1300  26F6- 4C 76 25           JMP STOR2
1301                   *

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 16/11/23   R65 ASSEMBLER  PAGE 27

1302                   * P-CODE 3F: EXST       EXCHANGE STACK
1303                   *****************
1304                   *
1305  26F9- A0 7E      EXST    LDY =126
1306  26FB- B1 08              LDA (SP),Y
1307  26FD- AA                 TAX
1308  26FE- A5 00             LDA ACCU
1309  2700- 91 08              STA (SP),Y
1310  2702- 86 00              STX ACCU
1311  2704- C8                 INY
1312  2705- B1 08              LDA (SP),Y
1313  2707- AA                 TAX
1314  2708- A5 01              LDA ACCU+1
1315  270A- 91 08              STA (SP),Y
1316  270C- 86 01              STX ACCU+1
1317  270E- 60                 RTS
1318                   *
1319                   * P-CODE 40 TIND        TEST INDEX
1320                   ****************
1321                   *
1322  270F- 20 A5 24   TIND    JSR FETCH       LOWLIM-1
1323  2712- AA                 TAX
1324  2713- 20 A5 24           JSR FETCH
1325  2716- E4 00              CPX ACCU
1326  2718- E5 01              SBC ACCU+1
1327  271A- 70 0E              BVS TINDERR
1328                   *
1329  271C- 20 A5 24           JSR FETCH       HIGHLIM
1330  271F- AA                 TAX
1331  2720- 20 A5 24           JSR FETCH
1332  2723- E4 00              CPX ACCU
1333  2725- E5 01              SBC ACCU+1
1334  2727- 90 01              BCC TINDERR
1335  2729- 60                 RTS
1336                   *
1337  272A- A2 83      TINDERR LDX =$83        RUNTIME ERROR
1338  272C- 4C B1 29           JMP PERROR      INDEX OUT OF BOUNDS
1339                   *
1340                   * P-CODE 41: RUNP       RUN PROGRAM
1341                   *****************
1342                   *
1343  272F- A0 82      RUNP    LDY =130
1344  2731- A5 00              LDA ACCU        SAVE ACCU
1345  2733- A6 01              LDX ACCU+1
1346  2735- 20 61 27           JSR SAVE
1347  2738- A5 17              LDA BASE        SAVE BASE
1348  273A- A6 18              LDX BASE+1
1349  273C- 20 61 27           JSR SAVE
1350  273F- A5 0A              LDA PC          SAVE PC
1351  2741- A6 0B              LDX PC+1

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 16/11/23   R65 ASSEMBLER  PAGE 28

1352  2743- 20 61 27           JSR SAVE
1353  2746- A5 11              LDA STPROG      SAVE STPROG
1354  2748- A6 12              LDX STPROG+1
1355  274A- 20 61 27           JSR SAVE
1356  274D- A5 13              LDA EOPROG      SAVE EOPROG
1357  274F- A6 14              LDX EOPROG+1
1358  2751- 20 61 27           JSR SAVE
1359  2754- A5 08              LDA SP          GET SP
1360  2756- A6 09              LDX SP+1
1361  2758- 18                 CLC
1362  2759- 69 8C              ADC =140
1363  275B- 90 01              BCC *+3
1364  275D- E8                 INX             COMPUTE NEW STPROG
1365  275E- 4C 6B 2A           JMP EXEC3
1366                   *
1367                   *
1368  2761- 91 08      SAVE    STA (SP),Y
1369  2763- C8                 INY
1370  2764- 8A                 TXA
1371  2765- 91 08              STA (SP),Y
1372  2767- C8                 INY
1373  2768- 60                 RTS
1374                   *
1375                   *
1376  2769- 88         GETBACK DEY
1377  276A- B1 08              LDA (SP),Y
1378  276C- AA                 TAX
1379  276D- 88                 DEY
1380  276E- B1 08              LDA (SP),Y
1381  2770- 60                 RTS
1382                   *
1383                   *
1384                   * P-CODE 42: ADDF
1385                   *****************
1386                   *
1387  2771- 20 8E 27   ADDF    JSR GETFLP2
1388  2774- 20 28 2C           JSR FADD
1389                   *
1390  2777- A5 08      PUTFLP0 LDA SP          DECREMENT SP BY 4
1391  2779- 38                 SEC
1392  277A- E9 04              SBC =4
1393  277C- 85 08              STA SP
1394  277E- B0 02              BCS PUTFLP
1395  2780- C6 09              DEC SP+1
1396  2782- A5 02      PUTFLP  LDA M1+1        AND SAVE HALF OF NUMBER
1397  2784- A0 7E              LDY =126
1398  2786- 91 08              STA (SP),Y
1399  2788- C8                 INY
1400  2789- A5 03              LDA M1+2
1401  278B- 91 08              STA (SP),Y

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 16/11/23   R65 ASSEMBLER  PAGE 29

1402  278D- 60                 RTS
1403                   *
1404  278E- A0 7A      GETFLP2 LDY =122        GET SECOND NUMBER
1405  2790- B1 08              LDA (SP),Y
1406  2792- 85 1D              STA M2+1
1407  2794- C8                 INY
1408  2795- B1 08              LDA (SP),Y
1409  2797- 85 1E              STA M2+2
1410  2799- C8                 INY
1411  279A- B1 08              LDA (SP),Y
1412  279C- 85 1B              STA X2
1413  279E- C8                 INY
1414  279F- B1 08              LDA (SP),Y
1415  27A1- 85 1C              STA M2
1416  27A3- A0 7E      GETFLP  LDY =126        AND HALF OF FIRST
1417  27A5- B1 08              LDA (SP),Y
1418  27A7- 85 02              STA M1+1
1419  27A9- C8                 INY
1420  27AA- B1 08              LDA (SP),Y
1421  27AC- 85 03              STA M1+2
1422  27AE- 60                 RTS
1423                   *
1424                   * P-CODE 43: SUBF
1425                   *****************
1426                   *
1427  27AF- 20 8E 27   SUBF    JSR GETFLP2
1428  27B2- 20 22 2C           JSR FSUB
1429  27B5- 4C 77 27           JMP PUTFLP0
1430                   *
1431                   * P-CODE 44: MULF
1432                   *****************
1433                   *
1434  27B8- 20 8E 27   MULF    JSR GETFLP2
1435  27BB- 20 4F 2C           JSR FMUL
1436  27BE- 4C 77 27           JMP PUTFLP0
1437                   *
1438                   * P-CODE 45: DIVF
1439                   *****************
1440                   *
1441  27C1- 20 8E 27   DIVF    JSR GETFLP2
1442  27C4- 20 75 2C           JSR FDIV
1443  27C7- 4C 77 27           JMP PUTFLP0
1444                   *
1445                   * P-CODE 46: FLOF
1446                   *****************
1447                   *
1448  27CA- A5 00      FLOF    LDA ACCU
1449  27CC- 85 02              STA M1+1        HIGH BYTE IS IN ACCU
1450                   *                       SAME AS M1
1451  27CE- 20 04 2C           JSR FLOAT

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 16/11/23   R65 ASSEMBLER  PAGE 30

1452  27D1- 20 CB 22           JSR INCS2
1453  27D4- 4C 82 27           JMP PUTFLP
1454                   *
1455                   * P-CODE 47: FIXF
1456                   *****************
1457                   *
1458  27D7- 20 A3 27   FIXF    JSR GETFLP
1459  27DA- 20 C2 2C           JSR FIX
1460  27DD- A5 02              LDA M1+1
1461  27DF- 85 00              STA ACCU
1462  27E1- 4C F8 20           JMP DECS2
1463                   *
1464                   * P-CODE 48: FEQU       =
1465                   *****************
1466                   *
1467  27E4- 20 05 28   FEQU    JSR TESTF
1468  27E7- F0 12              BEQ TRUE
1469                   *
1470  27E9- A2 00      FALSE   LDX =0
1471  27EB- 86 00              STX ACCU
1472  27ED- 86 01              STX ACCU+1
1473  27EF- A5 08      DECS6   LDA SP
1474  27F1- 38                 SEC
1475  27F2- E9 06              SBC =6
1476  27F4- 85 08              STA SP
1477  27F6- B0 02              BCS *+4
1478  27F8- C6 09              DEC SP+1
1479  27FA- 60                 RTS
1480                   *
1481  27FB- A2 01      TRUE    LDX =1
1482  27FD- 86 00              STX ACCU
1483  27FF- CA                DEX
1484  2800- 86 01              STX ACCU+1
1485  2802- 4C EF 27           JMP DECS6
1486                   *
1487  2805- 20 8E 27   TESTF   JSR GETFLP2
1488  2808- 20 22 2C           JSR FSUB
1489  280B- A5 01              LDA M1
1490  280D- 60                 RTS
1491                   *
1492                   * P-CODE 49: FNEQ       <>
1493                   *****************
1494                   *
1495  280E- 20 05 28   FNEQ    JSR TESTF
1496  2811- D0 E8              BNE TRUE
1497  2813- F0 D4              BEQ FALSE
1498                   *
1499                   * P-CODE 4A: FLES       <
1500                   *****************
1501                   *

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 16/11/23   R65 ASSEMBLER  PAGE 31

1502  2815- 20 05 28   FLES    JSR TESTF
1503  2818- 10 CF              BPL FALSE
1504  281A- 30 DF              BMI TRUE
1505                   *
1506                   * P-CODE 4B: FGRE       >=
1507                   *****************
1508                   *
1509  281C- 20 05 28   FGRE    JSR TESTF
1510  281F- 10 DA              BPL TRUE
1511  2821- 30 C6              BMI FALSE
1512                   *
1513                   * P-CODE 4C: FGRT       >
1514                   *****************
1515                   *
1516  2823- 20 05 28   FGRT    JSR TESTF
1517  2826- 30 C1              BMI FALSE
1518  2828- F0 BF              BEQ FALSE
1519  282A- 10 CF              BPL TRUE
1520                   *
1521                   * P-CODE 4D: FLEE       <=
1522                   *****************
1523                   *
1524  282C- 20 05 28   FLEE    JSR TESTF
1525  282F- 30 CA              BMI TRUE
1526  2831- F0 C8              BEQ TRUE
1527  2833- 10 B4              BPL FALSE
1528                   *
1529                   * P-CODE 4E: FCOM       COMPLEMENT
1530                   *****************
1531                   *
1532  2835- 20 A3 27   FCOM    JSR GETFLP
1533  2838- 20 67 2C           JSR FCOMPL
1534  283B- 4C 82 27           JMP PUTFLP
1535                   *
1536                   *
1537                   * P-CODE 4F: TFER       TEST FILE ERROR
1538                   *****************
1539                   *
1540  283E- A6 23      TFER    LDX IOCHECK
1541  2840- F0 04              BEQ TFER1
1542  2842- A6 DB              LDX FILERR
1543  2844- D0 01              BNE TFER2
1544  2846- 60         TFER1   RTS             OK
1545                   *
1546  2847- 4C B1 29   TFER2   JMP PERROR
1547                   *
1548                   * P-CODE 50: OPRA       OPEN RA-FILE
1549                   *****************
1550                   *
1551  284A- 20 BC 22   OPRA    JSR COPY        SAVE ACCU

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 16/11/23   R65 ASSEMBLER  PAGE 32

1552  284D- 20 C9 2C           JSR OPENRA      OPEN FILE
1553  2850- C8                 INY
1554  2851- C8                 INY
1555  2852- 84 00              STY ACCU        SAVE FILE NO
1556  2854- A9 00              LDA =0
1557  2856- 85 01              STA ACCU+1
1558  2858- 60                 RTS
1559                   *
1560                   * P-CODE 51: GETR       GET FROM RA FILE
1561                   *****************
1562                   *
1563                   * NO AUTOMATIC ERROR CHECKING
1564                   *
1565  2859- 20 66 28   GETR    JSR GETR1
1566  285C- 20 D0 2D           JSR GETBYTE
1567  285F- 85 00              STA ACCU
1568  2861- A9 00              LDA =0
1569  2863- 85 01              STA ACCU+1
1570  2865- 60                 RTS
1571                   *
1572  2866- 20 F8 20   GETR1   JSR DECS2
1573  2869- A0 80              LDY =128
1574  286B- B1 08              LDA (SP),Y      GET FILE NO
1575  286D- AA                 TAX
1576  286E- CA                 DEX
1577  286F- CA                 DEX
1578  2870- A5 00              LDA ACCU        GET POINTER
1579  2872- A4 01              LDY ACCU+1
1580  2874- 60                 RTS
1581                   *
1582                   * P-CODE 52: PUTR       PUT TO RA=FILE
1583                   *****************
1584                   *
1585                   * NO AUTOMATIC ERROR CHECKING
1586                   *
1587  2875- A5 00      PUTR    LDA ACCU
1588  2877- 85 FE              STA KCHAR
1589  2879- 20 E9 22           JSR GETS2
1590  287C- 20 66 28           JSR GETR1
1591  287F- 20 EE 2D           JSR PUTBYTE
1592  2882- 4C E9 22           JMP GETS2
1593                   *
1594                   * P-CODE 53: SWA2       SWAP 2 AND 3 ON STACK
1595                   *****************
1596                   *
1597  2885- A0 7E      SWA2    LDY =126
1598  2887- 20 8C 28           JSR SWA3
1599  288A- A0 7F              LDY =127
1600                   *
1601  288C- B1 08      SWA3    LDA (SP),Y

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 16/11/23   R65 ASSEMBLER  PAGE 33

1602  288E- AA                 TAX
1603  288F- 88                 DEY
1604  2890- 88                 DEY
1605  2891- B1 08              LDA (SP),Y
1606  2893- C8                 INY
1607  2894- C8                 INY
1608  2895- 91 08              STA (SP),Y
1609  2897- 8A                 TXA
1610  2898- 88                 DEY
1611  2899- 88                 DEY
1612  289A- 91 08              STA (SP),Y
1613  289C- 60                 RTS
1614                   *
1615                   * P-CODE 54: LDXI       PREPARE LOAD CPNT
1616                   *****************
1617                   *
1618  289D- A0 00      LDXI    LDY =0          INDIRECTION
1619  289F- A5 01              LDA ACCU+1
1620  28A1- F0 4A              BEQ NILERR
1621  28A3- B1 00              LDA (ACCU),Y
1622  28A5- 85 00              STA ACCU
1623  28A7- 84 01              STY ACCU+1
1624  28A9- 60                 RTS
1625                   *
1626                   * P-CODE 55: STXI       STORE CPNT INDEXED
1627                   *****************
1628                   *
1629  28AA- 20 A5 24   STXI    JSR FETCH
1630  28AD- AA                 TAX
1631  28AE- A0 7E              LDY =126
1632  28B0- B1 08              LDA (SP),Y
1633  28B2- 85 21              STA ARG2
1634  28B4- C8                 INY
1635  28B5- B1 08              LDA (SP),Y
1636  28B7- 85 22              STA ARG2+1      ARG2 IS INDEX
1637  28B9- 20 A5 24           JSR FETCH
1638  28BC- 85 1B              STA ARG1
1639  28BE- 20 A5 24           JSR FETCH
1640  28C1- 85 1C              STA ARG1+1      ARG1 IS ADDRESS
1641  28C3- 20 F8 20           JSR DECS2       OF VARIABLE
1642  28C6- 20 3A 25           JSR FBASE3
1643  28C9- 20 F2 28           JSR INDI        INDIRECTION
1644  28CC- 18                 CLC
1645  28CD- A5 19              LDA ABASE
1646  28CF- 65 21              ADC ARG2        ADD INDEX
1647  28D1- 85 19              STA ABASE
1648  28D3- A5 1A              LDA ABASE+1
1649  28D5- 65 22              ADC ARG2+1
1650  28D7- 85 1A              STA ABASE+1
1651  28D9- C5 14              CMP EOPROG+1    DO NOT ALLOW WRITING

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 16/11/23   R65 ASSEMBLER  PAGE 34

1652  28DB- 90 0B              BCC PRGERR      INTO PROGRAM SPACE
1653  28DD- F0 09              BEQ PRGERR      CHECK ONLY HIGH BYTE
1654  28DF- A0 00              LDY =0          MUST BE LARGER
1655  28E1- A5 00              LDA ACCU
1656  28E3- 91 19              STA (ABASE),Y   ONLY ONE BYTE
1657  28E5- 4C E9 22           JMP GETS2
1658                   *
1659  28E8- A2 90      PRGERR  LDX =$90
1660  28EA- 4C B1 29           JMP PERROR
1661                   *
1662  28ED- A2 89      NILERR  LDX =$89        CPNT IS NIL
1663  28EF- 4C B1 29           JMP PERROR
1664                   *
1665  28F2- A0 81      INDI    LDY =129        INDIRECTION
1666  28F4- B1 19              LDA (ABASE),Y
1667  28F6- F0 F5              BEQ NILERR      NIL STRING
1668  28F8- AA                 TAX
1669  28F9- 88                 DEY
1670  28FA- B1 19              LDA (ABASE),Y   POINTER IS IN A,X
1671  28FC- 85 19              STA ABASE
1672  28FE- 86 1A             STX ABASE+1
1673  2900- 60                 RTS
1674                   *
1675                   * P-CODE 56: CPNT       CPNT CONSTANT
1676                   *****************
1677                   *
1678  2901- 20 BC 22   CPNT    JSR COPY
1679  2904- 20 A5 24           JSR FETCH       STRING SIZE IN A
1680  2907- AA                 TAX
1681  2908- E8                 INX
1682  2909- A5 0A              LDA PC          PC IS POINTER
1683  290B- 85 00              STA ACCU        TO RETURN
1684  290D- A5 0B              LDA PC+1
1685  290F- 85 01              STA ACCU+1
1686  2911- 8A                 TXA
1687  2912- 18                 CLC
1688  2913- 65 0A              ADC PC          ADVANCE PC
1689  2915- 85 0A              STA PC
1690  2917- 90 02              BCC *+4
1691  2919- E6 0B              INC PC+1
1692  291B- 60                 RTS
1693                   *
1694                   * P-CODE 57: WRCP       WRITE CPNT
1695                   *****************
1696                   *
1697  291C- A0 00      WRCP    LDY =0
1698  291E- B1 00              LDA (ACCU),Y
1699  2920- F0 08              BEQ WRCP2
1700  2922- 20 76 29           JSR PRTCHR0     END MARK
1701  2925- C8                 INY

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 16/11/23   R65 ASSEMBLER  PAGE 35

1702  2926- C0 3F              CPY =63
1703  2928- D0 F4              BNE WRCP+2
1704  292A- 4C E9 22   WRCP2   JMP GETS2
1705                   *
1706                   * P-CODE 58: ADPS       ADD PROGRAM START
1707                   *****************
1708                   *
1709  292D- 18         ADPS    CLC
1710  292E- A5 11              LDA STPROG
1711  2930- 65 00              ADC ACCU
1712  2932- 85 00              STA ACCU
1713  2934- A5 12              LDA STPROG+1
1714  2936- 65 01              ADC ACCU+1
1715  2938- 85 01              STA ACCU+1
1716  293A- 60                 RTS
1717                   *
1718                   * P-CODE 58: LINE               SOURCE LINE
1719                   *****************
1720                   *
1721  293B- 20 A5 24   LINE    JSR FETCH
1722  293E- 85 5C                      STA LSTLIN
1723  2940- 20 A5 24                   JSR FETCH
1724  2943- 85 5D                      STA LSTLIN+1
1725  2945- 60                         RTS
1726                   *
1727                   *
1728                   * GETCHR0: GET A CHAR FROM SPECIFIED FILE
1729                   *****************************************
1730                   *
1731  2946- A6 0D      GETCHR0 LDX DEVICE
1732  2948- D0 1A              BNE GETCHR4
1733                   *
1734  294A- A6 15      GETCHR1 LDX BUFFPN
1735  294C- 10 06              BPL GETCHR2
1736  294E- 20 16 23           JSR RLIN
1737  2951- 4C 4A 29           JMP GETCHR1
1738                   *
1739  2954- E4 16      GETCHR2 CPX ENDBUF      IS IS END OF BUFFER?
1740  2956- D0 07              BNE GETCHR3
1741  2958- A9 FF              LDA =$FF
1742  295A- 85 15              STA BUFFPN
1743  295C- A9 0D              LDA =$D
1744  295E- 60                 RTS
1745                   *
1746  295F- E6 15      GETCHR3 INC BUFFPN
1747  2961- B5 24              LDA LINBUF,X
1748  2963- 60                 RTS
1749                   *
1750  2964- CA         GETCHR4 DEX
1751  2965- D0 03              BNE GETCHR5     SKIP, IF NOT KEY

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 16/11/23   R65 ASSEMBLER  PAGE 36

1752  2967- 4C 00 E0           JMP GETKEY
1753                   *
1754  296A- CA         GETCHR5 DEX
1755  296B- A9 00              LDA =0
1756  296D- 85 DA              STA FILFLG
1757  296F- 20 18 F0           JSR READCH
1758  2972- 4C 3E 28           JMP TFER
1759                   *
1760  2975- 60         GETCHR6 RTS
1761                   *
1762                   * PRTCHR0: PRINT CHAR TO SPECIFIED FILE
1763                   ***************************************
1764                   *
1765  2976- A6 0D      PRTCHR0 LDX DEVICE
1766  2978- 30 16              BMI PRTCHR3     Plot text?
1767  297A- D0 03              BNE PRTCHR1
1768  297C- 4C 09 E0           JMP PRTCHR
1769                   *
1770  297F- CA         PRTCHR1 DEX
1771  2980- D0 03              BNE PRTCHR2
1772  2982- 4C 0C E0           JMP AUTOPR
1773                   *
1774  2985- CA         PRTCHR2 DEX
1775  2986- A0 00              LDY =0
1776  2988- 84 DA              STY FILFLG
1777  298A- 20 1B F0           JSR WRITCH
1778  298D- 4C 3E 28           JMP TFER
1779                   *
1780  2990- C9 0D      PRTCHR3 CMP =$0D        Plot CR?
1781  2992- D0 06              BNE PRTCHR4
1782  2994- A9 00              LDA =0
1783  2996- 8D AE 03           STA GRX
1784  2999- 60         PRTCHRE RTS
1785                   *
1786  299A- C9 0A      PRTCHR4 CMP =$0A        PLOT LF?
1787  299C- D0 0D              BNE PRTCHR6
1788  299E- AD AF 03           LDA GRY
1789  29A1- E9 08              SBC =8
1790  29A3- 10 02              BPL PRTCHR5
1791  29A5- A9 00              LDA =0
1792                   *
1793  29A7- 8D AF 03   PRTCHR5 STA GRY
1794  29AA- 60                 RTS
1795                   *
1796  29AB- 8D B0 03   PRTCHR6 STA GRC
1797  29AE- 4C 18 C8           JMP APLOTCH     PLOT THE CHARACTER
1798                   *
1799                   * PERROR: PASCAL RUNTIME ERROR
1800                   ******************************
1801                   *

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 16/11/23   R65 ASSEMBLER  PAGE 37

1802  29B1- A9 2F      PERROR  LDA =47         CHECK CHARS/LINE
1803  29B3- CD 8A 17           CMP NUMCHR
1804  29B6- F0 08              BEQ PERROR0
1805  29B8- 8D 8A 17           STA NUMCHR      SET TO 48 CHARS/LINE
1806  29BB- 20 27 E0           JSR PRTINF      AND CLEAR SCREEN
1807  29BE- 01 91              BYT $01,$91     HOME,CLRSCR
1808  29C0- 20 27 E0   PERROR0 JSR PRTINF
1809  29C3- 0D 0A 07           BYT $D,$A,7,'Pascal error '+128
1809  29C6- 50 61 73 
1809  29C9- 63 61 6C 
1809  29CC- 20 65 72 
1809  29CF- 72 6F 72 
1809  29D2- A0 
1810  29D3- A9 00              LDA =0
1811  29D5- 85 0D              STA DEVICE
1812  29D7- 8A                 TXA
1813  29D8- 85 0C              STA RUNERR
1814  29DA- 20 2D E0           JSR PRTBYT
1815  29DD- A5 0A              LDA PC
1816  29DF- 38                 SEC
1817  29E0- E5 11              SBC STPROG
1818  29E2- 85 00              STA ACCU
1819  29E4- A5 0B              LDA PC+1
1820  29E6- E5 12              SBC STPROG+1
1821  29E8- 85 01              STA ACCU+1
1822  29EA- F0 34              BEQ PERROR1
1823  29EC- 30 32              BMI PERROR1
1824  29EE- A5 5C              LDA LSTLIN
1825  29F0- 05 5D              ORA LSTLIN+1    LINE NUMB IS NOT 0?
1826  29F2- D0 10              BNE PERROR2     YES,SKIP WRITE
1827  29F4- 20 27 E0           JSR PRTINF
1828  29F7- 20 61 74           BYT ' at PC '+128
1828  29FA- 20 50 43 
1828  29FD- A0 
1829  29FE- 20 B2 23          JSR PRTN        WRITE PC
1830  2A01- 4C 1B 2A           JMP PERROR3
1831                   *
1832  2A04- A5 5C      PERROR2 LDA LSTLIN
1833  2A06- 85 00              STA ACCU
1834  2A08- A5 5D              LDA LSTLIN+1
1835  2A0A- 85 01              STA ACCU+1
1836  2A0C- 20 27 E0           JSR PRTINF
1837  2A0F- 20 61 74           BYT ' at line '+128
1837  2A12- 20 6C 69 
1837  2A15- 6E 65 A0 
1838  2A18- 20 B2 23           JSR PRTN        WRITE LINE NUMBER
1839                   *
1840  2A1B- 20 27 E0   PERROR3 JSR PRTINF
1841  2A1E- 0D 8A              BYT $D,$8A
1842                   *

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 16/11/23   R65 ASSEMBLER  PAGE 38

1843  2A20- 4C 10 20   PERROR1 JMP STOP
1844                   *
1845                   *
1846                   * WARM START ENTRY POINT
1847                   ************************
1848                   *
1849  2A23- AD 81 17   WARMST  LDA SFLAG       SET PASCAL RUNTIME BIT
1850  2A26- 09 01              ORA =$01        IN SFLAG
1851  2A28- 8D 81 17           STA SFLAG
1852  2A2B- BA                 TSX
1853  2A2C- 8E FF 17           STX SAVS        SAVE STACK POINTER
1854  2A2F- A2 00              LDX =0
1855  2A31- 86 0B              STX PC+1
1856  2A33- 86 0D              STX DEVICE
1857  2A35- CA                 DEX
1858  2A36- 86 16              STX ENDBUF
1859  2A38- 86 23              STX IOCHECK
1860  2A3A- A2 00              LDX =0
1861                   *
1862  2A3C- A0 00      EXEC    LDY =0
1863  2A3E- 84 0B              STY PC+1
1864  2A40- BD F5 2A           LDA EXTABLE,X
1865  2A43- 9D 20 03           STA FILNM1,X
1866  2A46- E8                 INX
1867  2A47- C8                 INY
1868  2A48- C0 10              CPY =16
1869  2A4A- 90 F2              BCC EXEC+2
1870  2A4C- A9 00              LDA =0
1871  2A4E- 8D 30 03           STA FILCY1
1872                   *
1873  2A51- A9 00      EXECUTE LDA =0
1874  2A53- 85 DA              STA FILFLG
1875  2A55- AD 0B 20           LDA USEREND
1876  2A58- AE 0C 20           LDX USEREND+1
1877  2A5B- 38                 SEC
1878  2A5C- E9 90              SBC =144
1879  2A5E- B0 01              BCS *+3
1880  2A60- CA                 DEX
1881  2A61- 85 0E              STA ENDSTK
1882  2A63- 86 0F              STX ENDSTK+1
1883                   *
1884  2A65- AD 09 20   EXEC1   LDA USERST
1885  2A68- AE 0A 20           LDX USERST+1
1886  2A6B- 85 11      EXEC3   STA STPROG
1887  2A6D- 86 12              STX STPROG+1
1888  2A6F- 8D 31 03           STA FILSA1
1889  2A72- 8E 32 03           STX FILSA1+1
1890  2A75- 20 15 E8           JSR RDFILE      READ FILE TO EXECUTE
1891  2A78- D0 07              BNE EXECE       PROGRAM NOT LOOADED?
1892                   *

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 16/11/23   R65 ASSEMBLER  PAGE 39

1893  2A7A- AD 12 03           LDA FILSTP
1894  2A7D- C9 52              CMP ='R'        IS PASCAL PROGRAM?
1895  2A7F- F0 07              BEQ RUN
1896  2A81- A9 84      EXECE   LDA =$84        PASCAL RUNPROG ERROR
1897  2A83- 85 0C              STA RUNERR
1898  2A85- 4C 10 20           JMP STOP        SILENT ERROR
1899                   *
1900  2A88- A0 00      RUN     LDY =0          READ END ADDRESS
1901  2A8A- B1 11              LDA (STPROG),Y  FROM FILE
1902  2A8C- 18                 CLC
1903  2A8D- 65 11              ADC STPROG
1904  2A8F- 85 13              STA EOPROG
1905  2A91- C8                 INY
1906  2A92- B1 11              LDA (STPROG),Y
1907  2A94- 65 12              ADC STPROG+1
1908  2A96- 85 14              STA EOPROG+1
1909  2A98- A5 13              LDA EOPROG      GET END OF STACK
1910  2A9A- A6 14              LDX EOPROG+1
1911  2A9C- 38                 SEC
1912  2A9D- E9 80              SBC =128
1913  2A9F- 85 17              STA BASE
1914  2AA1- 85 08              STA SP
1915  2AA3- B0 01              BCS *+3
1916  2AA5- CA                 DEX
1917  2AA6- 86 18              STX BASE+1
1918  2AA8- 86 09              STX SP+1
1919                   *
1920  2AAA- A5 11              LDA STPROG
1921  2AAC- A6 12              LDX STPROG+1
1922  2AAE- 18                 CLC
1923  2AAF- 69 02              ADC =2
1924  2AB1- 85 0A              STA PC
1925  2AB3- 90 01              BCC *+3
1926  2AB5- E8                 INX
1927  2AB6- 86 0B              STX PC+1
1928  2AB8- A9 00              LDA =0
1929  2ABA- 85 0C              STA RUNERR
1930  2ABC- AE FF 17   LOOP    LDX SAVS        RESTORE STACK POINTER
1931  2ABF- 9A                 TXS
1932  2AC0- 20 CB 2A           JSR EXCODE
1933  2AC3- AD 81 17           LDA SFLAG
1934  2AC6- 30 20              BMI ESCERR
1935  2AC8- 4C BC 2A           JMP LOOP
1936                   *
1937                   *
1938  2ACB- 20 A5 24   EXCODE  JSR FETCH
1939  2ACE- 89 F1              STA =$F1
1940  2AD0- C9 5A              CMP =$5A        TEST CODENUMBER
1941  2AD2- 90 05              BCC *+7
1942  2AD4- A2 86      ILLC    LDX =$86        PASCAL RUNTIME ERROR

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 16/11/23   R65 ASSEMBLER  PAGE 40

1943  2AD6- 4C B1 29           JMP PERROR      ILLEGAL P-CODE
1944                   *
1945  2AD9- 0A                 ASL A
1946  2ADA- AA                 TAX
1947  2ADB- BD 05 2B           LDA TABLE,X
1948  2ADE- 85 1B              STA ARG1
1949  2AE0- BD 06 2B           LDA TABLE+1,X
1950  2AE3- 85 1C              STA ARG1+1
1951  2AE5- 6C 1B 00           JMP (ARG1)
1952                   *
1953  2AE8- AD 81 17   ESCERR  LDA SFLAG       CLEAR ESCAPE FLAG
1954  2AEB- 29 7F              AND =$7F
1955  2AED- 8D 81 17           STA SFLAG
1956  2AF0- A2 86              LDX =$86        PASCAL RUNTIME ERROR
1957  2AF2- 4C B1 29           JMP PERROR      ESCAPE DURING EXECUTION
1958                   *
1959  2AF5- 53 59 53  EXTABLE BYT 'SYSTEM:R        '
1959  2AF8- 54 45 4D 
1959  2AFB- 3A 52 20 
1959  2AFE- 20 20 20 
1959  2B01- 20 20 20 
1959  2B04- 20 
1960                   *
1961  2B05- 10 20 A7   TABLE   WRD STOP,RETN,NEGA,ADDA,SUBA,MULA
1961  2B08- 20 DA 20 
1961  2B0B- E8 20 04 
1961  2B0E- 21 17 21 
1962  2B11- 7C 21 EE           WRD DIVA,LOWB,TEQU,TNEQ,TLES,TGRE
1962  2B14- 21 F9 21 
1962  2B17- 0A 22 14 
1962  2B1A- 22 1E 22 
1963  2B1D- 24 22 2A           WRD TGRT,TLEE,ORAC,ANDA,EORA,NOTA
1963  2B20- 22 30 22 
1963  2B23- 42 22 54 
1963  2B26- 22 66 22 
1964  2B29- 76 22 8F           WRD LEFT,RIGH,INCA,DECA,COPY,PEEK
1964  2B2C- 22 AC 22 
1964  2B2F- B3 22 BC 
1964  2B32- 22 F7 22 
1965  2B35- 00 23 0D           WRD POKE,CALA,RLIN,GETC,GETN,PRTC
1965  2B38- 23 16 23 
1965  2B3B- 40 23 4D 
1965  2B3E- 23 AA 23 
1966  2B41- B2 23 25           WRD PRTN,PRTS,LITB,INCB,LITW,INCW
1966  2B44- 24 5B 24 
1966  2B47- 68 24 97 
1966  2B4A- 24 B0 24 
1967  2B4D- CD 24 DF           WRD JUMP,JMPZ,JMPO,LOAD,LODX,STOR
1967  2B50- 24 F4 24 
1967  2B53- FD 24 4B 

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 16/11/23   R65 ASSEMBLER  PAGE 41

1967  2B56- 25 65 25 
1968  2B59- 84 25 AA           WRD STOX,CALL,SDEV,RDEV,FNAM,OPNR
1968  2B5C- 25 E0 25 
1968  2B5F- E7 25 EC 
1968  2B62- 25 09 26 
1969  2B65- 1A 26 1F           WRD OPNW,CLOS,PRTI,GHGH,GLOW,PHGH
1969  2B68- 26 29 26 
1969  2B6B- 36 26 3A 
1969  2B6E- 26 3F 26 
1970  2B71- 48 26 51           WRD PLOW,GSEC,PSEC,NBYT,NWRD,LODN
1970  2B74- 26 5A 26 
1970  2B77- 85 26 97 
1970  2B7A- 26 AC 26 
1971  2B7D- C5 26 DB           WRD STON,LODI,STOI,EXST,TIND,RUNP
1971  2B80- 26 F0 26 
1971  2B83- F9 26 0F 
1971  2B86- 27 2F 27 
1972  2B89- 71 27 AF           WRD ADDF,SUBF,MULF,DIVF,FLOF,FIXF
1972  2B8C- 27 B8 27 
1972  2B8F- C1 27 CA 
1972  2B92- 27 D7 27 
1973  2B95- E4 27 0E           WRD FEQU,FNEQ,FLES,FGRE,FGRT,FLEE
1973  2B98- 28 15 28 
1973  2B9B- 1C 28 23 
1973  2B9E- 28 2C 28 
1974  2BA1- 35 28 3E           WRD FCOM,TFER,OPRA,GETR,PUTR,SWA2
1974  2BA4- 28 4A 28 
1974  2BA7- 59 28 75 
1974  2BAA- 28 85 28 
1975  2BAD- 9D 28 AA           WRD LDXI,STXI,CPNT,WRCP,ADPS,LINE
1975  2BB0- 28 01 29 
1975  2BB3- 1C 29 2D 
1975  2BB6- 29 3B 29 
1976                   *
1977                   * COLDSTART
1978                   ***********
1979                   *
1980  2BB9- A9 00      COLDST  LDA =0
1981  2BBB- 85 5C              STA LSTLIN              CLEAR LSTLIN
1982  2BBD- 85 5D               STA LSTLIN+1
1983  2BBF- 58                 CLI
1984  2BC0- D8                 CLD
1985  2BC1- AD 09 20           LDA USERST
1986  2BC4- AE 0A 20           LDX USERST+1
1987  2BC7- 85 11              STA STPROG
1988  2BC9- 86 12              STX STPROG+1
1989  2BCB- A0 00              LDY =0
1990  2BCD- 98                 TYA
1991  2BCE- 91 11              STA (STPROG),Y
1992  2BD0- C8                 INY

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 16/11/23   R65 ASSEMBLER  PAGE 42

1993  2BD1- C0 04              CPY =4
1994  2BD3- 90 F9              BCC *-5
1995  2BD5- 4C 23 2A           JMP WARMST
1996                   *
1997                           TIT R65 PASCAL: FLP-MATH
1998                           PAG

----------------------------------------------------------------------

R65 PASCAL: FLP-MATH               16/11/23   R65 ASSEMBLER  PAGE 43

1999                   *
2000                   ********************************
2001                   * R65 PASCAL FLP MATH ROUTINES *
2002                   ********************************
2003                   *
2004                   *
2005  2BD8- 18         ADD     CLC
2006  2BD9- A2 02              LDX =2
2007  2BDB- B5 01      ADD1    LDA M1,X
2008  2BDD- 75 1C              ADC M2,X
2009  2BDF- 95 01              STA M1,X
2010  2BE1- CA                 DEX
2011  2BE2- 10 F7              BPL ADD1
2012  2BE4- 60                 RTS
2013                   *
2014  2BE5- 06 10      MD1     ASL SIGN
2015  2BE7- 20 EA 2B           JSR ABSWAP
2016  2BEA- 24 01      ABSWAP  BIT M1
2017  2BEC- 10 05              BPL ABSWP1
2018  2BEE- 20 67 2C           JSR FCOMPL
2019  2BF1- E6 10              INC SIGN
2020  2BF3- 38         ABSWP1  SEC
2021                   *
2022                   * SWAP: EXCHANGE F1 AND F2
2023                   **************************
2024                   *
2025  2BF4- A2 04      SWAP    LDX =4
2026  2BF6- 94 03      SWAP1   STY E-1,X
2027  2BF8- B5 FF              LDA <(X1-1),X
2028  2BFA- B4 1A              LDY X2-1,X
2029  2BFC- 94 FF              STY <(X1-1),X
2030  2BFE- 95 1A             STA X2-1,X
2031  2C00- CA                 DEX
2032  2C01- D0 F3              BNE SWAP1
2033  2C03- 60                 RTS
2034                   *
2035                   * FLOAT: FLOAT M1,M1+1 TO RESULT IN F1
2036                   **************************************
2037                   *
2038  2C04- A9 8E      FLOAT   LDA =$8E
2039  2C06- 85 00              STA X1
2040  2C08- A9 00              LDA =0
2041  2C0A- 85 03              STA M1+2
2042  2C0C- F0 08              BEQ NORM
2043  2C0E- C6 00      NORM1   DEC X1
2044  2C10- 06 03              ASL M1+2
2045  2C12- 26 02              ROL M1+1
2046  2C14- 26 01              ROL M1
2047  2C16- A5 01      NORM    LDA M1
2048  2C18- 0A                 ASL A

----------------------------------------------------------------------

R65 PASCAL: FLP-MATH               16/11/23   R65 ASSEMBLER  PAGE 44

2049  2C19- 45 01              EOR M1
2050  2C1B- 30 04              BMI RTS1
2051  2C1D- A5 00              LDA X1
2052  2C1F- D0 ED              BNE NORM1
2053  2C21- 60         RTS1    RTS
2054                   *
2055                   * FSUB: F1=F2-F1
2056                   ****************
2057                   *
2058  2C22- 20 67 2C   FSUB    JSR FCOMPL
2059  2C25- 20 35 2C   SWPALG  JSR ALGNSW
2060                   *
2061                   * FADD: F1=F2+F1
2062                   ****************
2063                   *
2064  2C28- A5 1B      FADD    LDA X2
2065  2C2A- C5 00              CMP X1
2066  2C2C- D0 F7              BNE SWPALG
2067  2C2E- 20 D8 2B           JSR ADD
2068  2C31- 50 E3      ADDEND  BVC NORM
2069  2C33- 70 05              BVS RTLOG
2070  2C35- 90 BD      ALGNSW  BCC SWAP
2071  2C37- A5 01      RTAR    LDA M1
2072  2C39- 0A                 ASL A
2073  2C3A- E6 00      RTLOG   INC X1
2074  2C3C- F0 7E              BEQ OVFL
2075  2C3E- A2 FA      RTLOG1  LDX =$FA
2076  2C40- A9 80      ROR1    LDA =$80
2077  2C42- B0 01              BCS ROR2
2078  2C44- 0A                 ASL A
2079  2C45- 56 07      ROR2    LSR E+3,X
2080  2C47- 15 07              ORA E+3,X
2081  2C49- 95 07              STA E+3,X
2082  2C4B- E8                 INX
2083  2C4C- D0 F2              BNE ROR1
2084  2C4E- 60                 RTS
2085                   *
2086                   * FMUL: F1=F2*F1
2087                   ****************
2088                   *
2089  2C4F- 20 E5 2B   FMUL    JSR MD1
2090  2C52- 65 00              ADC X1
2091  2C54- 20 A5 2C           JSR MD2
2092  2C57- 18                 CLC
2093  2C58- 20 3E 2C   MUL1    JSR RTLOG1
2094  2C5B- 90 03              BCC MUL2
2095  2C5D- 20 D8 2B           JSR ADD
2096  2C60- 88         MUL2    DEY
2097  2C61- 10 F5              BPL MUL1
2098  2C63- 46 10      MDEND   LSR SIGN

----------------------------------------------------------------------

R65 PASCAL: FLP-MATH               16/11/23   R65 ASSEMBLER  PAGE 45

2099  2C65- 90 AF      NORMX   BCC NORM
2100  2C67- 38         FCOMPL  SEC
2101  2C68- A2 03              LDX =3
2102  2C6A- A9 00      COMPL1  LDA =0
2103  2C6C- F5 00              SBC X1,X
2104  2C6E- 95 00              STA X1,X
2105  2C70- CA                 DEX
2106  2C71- D0 F7              BNE COMPL1
2107  2C73- F0 BC              BEQ ADDEND
2108                   *
2109                   * FDIV: F1=F2/F1
2110                   ****************
2111                   *
2112  2C75- 20 E5 2B   FDIV    JSR MD1
2113  2C78- E5 00              SBC X1
2114  2C7A- 20 A5 2C           JSR MD2
2115  2C7D- 38         FDIV1   SEC
2116  2C7E- A2 02              LDX =2
2117  2C80- B5 1C      FDIV2   LDA M2,X
2118  2C82- F5 04              SBC E,X
2119  2C84- 48                 PHA
2120  2C85- CA                 DEX
2121  2C86- 10 F8              BPL FDIV2
2122  2C88- A2 FD              LDX =$FD
2123  2C8A- 68         FDIV3   PLA
2124  2C8B- 90 02              BCC FDIV4
2125  2C8D- 95 1F              STA M2+3,X
2126  2C8F- E8         FDIV4   INX
2127  2C90- D0 F8              BNE FDIV3
2128  2C92- 26 03              ROL M1+2
2129  2C94- 26 02              ROL M1+1
2130  2C96- 26 01              ROL M1
2131  2C98- 06 1E              ASL M2+2
2132  2C9A- 26 1D              ROL M2+1
2133  2C9C- 26 1C              ROL M2
2134  2C9E- B0 1C              BCS OVFL
2135  2CA0- 88                 DEY
2136  2CA1- D0 DA              BNE FDIV1
2137  2CA3- F0 BE              BEQ MDEND
2138  2CA5- 86 03      MD2     STX M1+2
2139  2CA7- 86 02              STX M1+1
2140  2CA9- 86 01              STX M1
2141  2CAB- B0 0D              BCS OVCHK
2142  2CAD- 30 04              BMI MD3
2143  2CAF- 68                 PLA
2144  2CB0- 68                 PLA
2145  2CB1- 90 B2              BCC NORMX
2146  2CB3- 49 80      MD3     EOR =$80
2147  2CB5- 85 00              STA X1
2148  2CB7- A0 17              LDY =$17

----------------------------------------------------------------------

R65 PASCAL: FLP-MATH               16/11/23   R65 ASSEMBLER  PAGE 46

2149  2CB9- 60                 RTS
2150  2CBA- 10 F7      OVCHK   BPL MD3
2151  2CBC- 4C B3 21   OVFL    JMP DIV1-5      PASCAL RUNTIME ERROR
2152                   *
2153                   * FIX: FIX F1 IN M1, M1+1
2154                   *************************
2155                   *
2156  2CBF- 20 37 2C           JSR RTAR
2157  2CC2- A5 00      FIX     LDA X1
2158  2CC4- C9 8E              CMP =$8E
2159  2CC6- D0 F7              BNE FIX-3
2160  2CC8- 60         RTRN    RTS
2161                   *
2162                           TIT R65 PASCAL: RANDOM ACCESS
2163                           PAG

----------------------------------------------------------------------

R65 PASCAL: RANDOM ACCESS          16/11/23   R65 ASSEMBLER  PAGE 47

2164                   *
2165                   * RANDOM ACCESS FILE HANDLER
2166                   ****************************
2167                   *
2168                   *
2169                   * OPENRA: OPEN A FILE FOR RANDOM ACCESS
2170                   ***************************************
2171                   *
2172                   * ENTRY: FILNM1,FILCY1,FILDRV,FILFLG
2173                   * FILFLG: BIT 7: PROTECTED (NEW ONLY)*
2174                   *         BIT 6: NO PRINTED OUTPUT
2175                   *         BIT 5: DIRECTION (0=READ)
2176                   *         BIT 4: 1=NEW, 0=OLD
2177                   *
2178                   * NEW ONLY: MAXSIZ,FILSA
2179                   *
2180                   * EXIT: NO OF OPEN FILE IN Y, STATUS IN A
2181                   *       AND FILERR, Y IS ONLY VALID
2182                   *       IF A=0
2183                   *
2184                   *
2185  2CC9- AC 36 03   OPENRA  LDY MAXSEQ      SEARCH EMPTY ENTRY
2186  2CCC- B9 39 03           LDA FIDRTB,Y    BIT 5=1: ENTRY USED
2187  2CCF- 29 20              AND =$20
2188  2CD1- F0 08              BEQ OPENRA1     FOUND, SKIP
2189  2CD3- 88                 DEY
2190  2CD4- 10 F6              BPL OPENRA+3
2191                   *
2192  2CD6- A9 23              LDA =$23        TOO MANY OPEN FILES
2193  2CD8- 85 DB              STA FILERR
2194  2CDA- 60                 RTS
2195                   *
2196  2CDB- 8C 35 03   OPENRA1 STY CURSEQ      SAVE CURRENT ENTRY NO
2197  2CDE- A5 DC              LDA FILDRV      GET AND TEST DRIVE
2198  2CE0- 99 41 03           STA FIDVTB,Y
2199  2CE3- 29 FE              AND =$FE
2200  2CE5- F0 05              BEQ OPENRA2     SKIP, IF OK
2201                   *
2202  2CE7- A9 28              LDA =$28        ILLEGAL DRIVE FOR RA
2203  2CE9- 85 DB              STA FILERR
2204  2CEB- 60                 RTS
2205                   *
2206  2CEC- A9 10      OPENRA2 LDA =$10        TEST OLD/NEW FLAG
2207  2CEE- 25 DA              AND FILFLG
2208  2CF0- F0 78              BEQ OPENOLD     SKIP, IF OLD
2209                   *
2210                   * OPEN A NEW FILE
2211                   *
2212  2CF2- A5 DA      OPENNEW LDA FILFLG
2213  2CF4- 29 80              AND =$80        GET PROTECTED FLAG

----------------------------------------------------------------------

R65 PASCAL: RANDOM ACCESS          16/11/23   R65 ASSEMBLER  PAGE 48

2214  2CF6- 09 42              ORA ='B'        BLOCK FILE
2215  2CF8- 8D 00 03           STA FILTYP      SET FILE TYPE
2216                   *
2217  2CFB- A9 00              LDA =0
2218  2CFD- AE 37 03          LDX MAXSIZ      SIZE OF FILE
2219  2D00- 8D 15 03           STA FILSIZ
2220  2D03- 8E 16 03           STX FILSIZ+1
2221                   *
2222  2D06- CA                 DEX             COMPUTE FILEA
2223  2D07- AD 1A 03           LDA FILSA
2224  2D0A- 18                 CLC
2225  2D0B- 69 FF              ADC =$FF
2226  2D0D- 8D 1C 03           STA FILEA
2227  2D10- 8A                 TXA
2228  2D11- 6D 1B 03           ADC FILSA+1
2229  2D14- 8D 1D 03           STA FILEA+1
2230                   *
2231  2D17- 20 1E E8           JSR SETFID      SET FILEDATE
2232                   *
2233  2D1A- A2 10              LDX =16
2234  2D1C- BD 20 03   OPENNE1 LDA FILNM1,X    SET FILNM1 AND FILCY1
2235  2D1F- 9D 01 03           STA FILNAM,X    TO FILNAM AND FILCYC
2236  2D22- CA                 DEX
2237  2D23- 10 F7              BPL OPENNE1
2238                   *
2239                   * SEARCH IN DIRECTORY AND RETURN CYCLUS
2240                   * AND DIRECTORY ENTRY TO USE, TEST EXISTING
2241                   * FILES FOR SAME NAME AND CYCLUS, DISK
2242                   * OPERATION IS INITIALIZED
2243                   *
2244  2D25- 20 A1 20           JSR PREPWRA
2245  2D28- 8E 11 03           STX FILCYC
2246                   *
2247                   * FIND FIRST EMPTY DISK DIRECTORY ENTR
2248                   * FETCH ITAND SET FIRST SECTOR OF FILE TO
2249                   * FILLOC, OUTPUT Y,X AS NUMBER OF EMPTY
2250                   * SECTORS
2251                   *
2252  2D2B- 20 A4 20           JSR PREPWRB
2253  2D2E- 8A                 TXA
2254  2D2F- CD 16 03           CMP FILSIZ+1
2255  2D32- 98                 TYA
2256  2D33- E9 00              SBC =0          COMPARE WITH REQUESTED
2257  2D35- B0 05              BCS OPENNE3     SECTORS
2258                   *
2259  2D37- A9 26              LDA =$26        DISK OVERFLOW
2260  2D39- 4C 98 20           JMP DISCER1
2261                   *
2262                   * SET FITEMP,Y AND FITEMP+8,YNTO FIRST SECTOT
2263                   * OF FILE ON DISK, FIMAXT,Y TO SIZE, DIRECTORY

----------------------------------------------------------------------

R65 PASCAL: RANDOM ACCESS          16/11/23   R65 ASSEMBLER  PAGE 49

2264                   * ENTRY NO TO FITEMP+16,Y
2265                   * THEN PUT THIS ENTRY ONTO THE DISKMAND SET
2266                   * A NEW END OF DIRECTORY MARK
2267                   *
2268  2D3C- 20 7A 20   OPENNE3 JSR DOPEN4
2269                   *
2270  2D3F- AC 35 03           LDY CURSEQ      SETUP DUMMY FIRST SECTOR
2271  2D42- A9 00              LDA =0
2272  2D44- 99 49 03           STA FIBPTB,Y
2273  2D47- 99 51 03           STA FIRCTB,Y
2274                   *
2275  2D4A- AC 35 03   OPENNE4 LDY CURSEQ      OPEN FILE
2276  2D4D- A5 DA              LDA FILFLG
2277  2D4F- 0A                 ASL A
2278  2D50- 0A                 ASL A
2279  2D51- 29 80              AND =$80        GET DIRECTION
2280  2D53- 48                 PHA
2281  2D54- 2D 00 03           AND FILTYP
2282  2D57- F0 06              BEQ OPENNE5     OK, SKIP
2283  2D59- 68                 PLA             PROTECTED FILE
2284                   *
2285  2D5A- A9 29              LDA =$29
2286  2D5C- 85 DB              STA FILERR
2287  2D5E- 60                 RTS
2288                   *
2289  2D5F- 68         OPENNE5 PLA
2290  2D60- 09 60              ORA =$60        RA FILE, OPENIT
2291  2D62- 99 39 03           STA FIDRTB,Y
2292                   *
2293  2D65- A9 00              LDA =0          NORMALEXIT
2294  2D67- 85 DB              STA FILERR
2295  2D69- 60         OPENNE6 RTS
2296                   *
2297                   * OPEN AN OLD FILE:
2298                   * PREPARE DISK OPERATION, SEARCH REQUESTED
2299                   * FILE AND GET CORRSPONDING DISK ENTRY
2300                   *
2301  2D6A- 20 9E 20   OPENOLD JSR PREPRD
2302                   *
2303  2D6D- 20 7D 20           JSR PRFLB1      PRINT LABEL, IF REQ.
2304  2D70- AD 00 03           LDA FILTYP
2305  2D73- 29 7F              AND =$7F
2306  2D75- C9 42              CMP ='B'        MUST BE BLOCK FILE
2307  2D77- F0 05              BEQ OPENOL1     SKIP, IF OK
2308                   *
2309  2D79- A9 05              LDA =5
2310  2D7B- 4C 98 20           JMP DISCER1     FILE TYPE ERROR
2311                   *
2312  2D7E- 20 9B 20   OPENOL1 JSR ENDDO       END OF DISK OPERATION
2313                   *

----------------------------------------------------------------------

R65 PASCAL: RANDOM ACCESS          16/11/23   R65 ASSEMBLER  PAGE 50

2314                   * SET NOW FIRST SECTOR AND SIZE TO TABLE
2315                   *
2316  2D81- 20 77 20           JSR DOPEN1
2317                   *
2318  2D84- A9 00              LDA =0          GET FIRST RECORD
2319  2D86- 20 8D 2D           JSR GETTREC
2320  2D89- D0 DE              BNE OPENNE6     SKIP, IF NOT OK
2321  2D8B- F0 BD              BEQ OPENNE4     ELSE OPEN FILE
2322                   *
2323                   *
2324                   * GETTREC: GET ONE RECORD FROM RA-FILE
2325                   * RECORD NUMBER IS IN A, FILE NUMBER IN CURSEQ
2326                   * RESULT IUS Z=1,OF OK, ELSE Z=0 AND FILERR
2327                   *
2328  2D8D- AE 35 03   GETTREC LDX CURSEQ      SAVE RECORD NO
2329  2D90- 9D 51 03           STA FIRCTB,X
2330  2D93- A9 00              LDA =0          CLEAR UPDATED FLAG
2331  2D95- 9D 49 03           STA FIBPTB,X
2332  2D98- BD 41 03           LDA FIDVTB,X    SET DRIVE NO
2333  2D9B- 85 DC              STA FILDRV
2334                   *
2335                   * COMPUTE DATA-POINTER AND BINARY
2336                   * TRACK,SECTOR, SETUP FILDRV
2337                   *
2338  2D9D- 20 83 20           JSR PREPSR
2339                   *
2340                   * ADD RECORD NUMBER TO BINARY TRAC/SECTOR
2341                   * TEST SIZE OF FILE, CONVERT TO TRACK AND
2342                   * SECTOR, INITIALIZE DISK OPERATION
2343                   *
2344  2DA0- 20 86 20           JSR PREPSR1
2345                   *
2346  2DA3- 20 8F 20           JSR READ        READ ON SECTOR
2347                   *
2348  2DA6- 4C 9B 20           JMP ENDDO       END OF DISK OPERATION
2349                   *
2350                   * PUTTREC: SAVE CURRENT RECORD ON DISK
2351                   * FILE NUMBER IN CURSEQ, RECORD NUMBER IN
2352                   * FIRCTB,Y, RETURNS Z=1 IF OK, ELSE FILERR
2353                   *
2354  2DA9- BD 41 03   PUTTREC LDA FIDVTB,X
2355  2DAC- 85 DC              STA FILDRV
2356  2DAE- 20 83 20           JSR PREPSR      SEE GETTREC FOR
2357  2DB1- 20 86 20           JSR PREPSR1     COMMENTS
2358  2DB4- 20 92 20           JSR WRITE
2359  2DB7- 4C 9B 20           JMP ENDDO
2360                   *
2361                   * GETNEWR: GET A NEW RECORD, SAVE OLD, IF
2362                   * OLD HAS BEEN UPDATED
2363                   * ENTRY: NEW RECORD IN A, FILE NO IN CURSEQ

----------------------------------------------------------------------

R65 PASCAL: RANDOM ACCESS          16/11/23   R65 ASSEMBLER  PAGE 51

2364                   * EXIT: z=1 IF OK, ELSE FILERR
2365                   *
2366  2DBA- 8D 34 03   GETNEWR STA SAVRST+1    SAVE REQUESTED RECORD
2367  2DBD- AE 35 03           LDX CURSEQ
2368  2DC0- BD 49 03           LDA FIBPTB,X    UPDATED?
2369  2DC3- 10 05              BPL GETNEW1
2370                   *
2371  2DC5- 20 A9 2D           JSR PUTTREC     YES, SAVE IT
2372  2DC8- D0 23              BNE EXIT
2373                   *
2374  2DCA- AD 34 03   GETNEW1 LDA SAVRST+1    GET REQUESTED RECORD
2375  2DCD- 4C 8D 2D           JMP GETTREC
2376                   *
2377                   * GETBYTE: GET ONE BYTE FROM FILE
2378                   *********************************
2379                   * ENTRY: FILE NUMBER IN X
2380                   *        POINTER IN A(LOW) AND Y(HIGH)
2381                   * EXIT:  FILERR IN Y AND STATUS, BYTE IN A
2382                   *
2383  2DD0- 8D 33 03   GETBYTE STA SAVRST      SAVE A
2384  2DD3- 20 1D 2E           JSR TESTRA
2385                   *
2386  2DD6- 98                 TYA
2387  2DD7- DD 51 03           CMP FIRCTB,X    IS IT IN CURRENT RECORD?
2388  2DDA- F0 05              BEQ GETBYT1     YES, SKIP
2389                   *
2390  2DDC- 20 BA 2D           JSR GETNEWR     NO, GET NEW RECORD
2391  2DDF- D0 0C              BNE EXIT
2392                   *
2393  2DE1- 20 80 20   GETBYT1 JSR CPOINT      COMPUTE BUFFER PNT
2394  2DE4- AC 33 03           LDY SAVRST      RESTORE LOW POINTER
2395  2DE7- B1 FA              LDA (POINT),Y   GET THE BYTE
2396  2DE9- A0 00              LDY =0
2397  2DEB- 84 DB              STY FILERR      OK
2398  2DED- 60         EXIT    RTS
2399                   *
2400                   * PUTBYTE: PUT ONE BYTE TO FILE
2401                   *******************************
2402                   *
2403                   * ENTRY: BYTE STORED IN KCHAR
2404                   *        FILE NUMBER IN X
2405                   *        POINTER IN A(LOW) AND Y(HIGH)
2406                   * EXIT:  FILERR IN Y AND STATUS
2407                   *
2408  2DEE- 8D 33 03   PUTBYTE STA SAVRST
2409  2DF1- 20 1D 2E           JSR TESTRA
2410  2DF4- BD 39 03           LDA FIDRTB,X    IS WRITE ALLOWED?
2411  2DF7- 30 05              BMI PUTBYT0     YES,SKIP
2412  2DF9- A0 29              LDY =$29        WRITE NOT ALLOWED
2413  2DFB- 84 DB              STY FILERR

----------------------------------------------------------------------

R65 PASCAL: RANDOM ACCESS          16/11/23   R65 ASSEMBLER  PAGE 52

2414  2DFD- 60                 RTS
2415                   *
2416  2DFE- 98         PUTBYT0 TYA             FOR COMMENTS
2417  2DFF- DD 51 03          CMP FIRCTB,X    SEE GETBYTE
2418  2E02- F0 05              BEQ PUTBYT1
2419                   *
2420  2E04- 20 BA 2D           JSR GETNEWR
2421  2E07- D0 E4              BNE EXIT
2422                   *
2423  2E09- 20 80 20   PUTBYT1 JSR CPOINT
2424  2E0C- A9 80              LDA =$80        SET UPDATED FLAG
2425  2E0E- 9D 49 03           STA FIBPTB,X
2426  2E11- AC 33 03           LDY SAVRST
2427  2E14- A5 FE              LDA KCHAR       GET BACK KCHAR
2428  2E16- 91 FA              STA (POINT),Y
2429  2E18- A0 00              LDY =0
2430  2E1A- 84 DB              STY FILERR
2431  2E1C- 60                 RTS
2432                   *
2433                   *
2434                   * TESTRA: TEST X FOR LEGAL RA-FILE
2435                   *
2436  2E1D- 8E 35 03   TESTRA  STX CURSEQ
2437  2E20- EC 36 03           CPX MAXSEQ
2438  2E23- B0 0A              BCS TESTRA2
2439                   *
2440  2E25- BD 39 03   TESTRA1 LDA FIDRTB,X
2441  2E28- 29 60              AND =$60
2442  2E2A- C9 60              CMP =$60
2443  2E2C- D0 03              BNE TESTRA3     SKIP, IF NOT OK
2444  2E2E- 60                 RTS
2445                   *
2446  2E2F- F0 F4      TESTRA2 BEQ TESTRA1
2447  2E31- 68         TESTRA3 PLA
2448  2E32- 68                 PLA
2449  2E33- A0 25              LDY =$25        FILE NUMBER NOT ALLOWED
2450  2E35- 84 DB              STY FILERR
2451  2E37- 60                 RTS
2452                   *
2453                   * CLOSRA: CLOSE RA OR SEQUENTIAL FILE IN X
2454                   ******************************************
2455                   * ENTRY: FILE IN X
2456                   * EXIT: FILERR IN Y AND STATUS
2457                   *
2458  2E38- BD 39 03   CLOSRA  LDA FIDRTB,X
2459  2E3B- 29 40              AND =$40        SEQUENTIAL FILE?
2460  2E3D- D0 03              BNE CLOSRA1     NO, SKIP
2461  2E3F- 4C 89 20           JMP CLOSE       YES, CLOSE IT
2462                   *
2463  2E42- 20 1D 2E   CLOSRA1 JSR TESTRA      MUST BE RA-FILE

----------------------------------------------------------------------

R65 PASCAL: RANDOM ACCESS          16/11/23   R65 ASSEMBLER  PAGE 53

2464  2E45- BD 49 03           LDA FIBPTB,X    UPDATED?
2465  2E48- F0 05              BEQ CLOSRA2     NO, SKIP
2466                   *
2467  2E4A- 20 A9 2D           JSR PUTTREC
2468  2E4D- D0 0B              BNE CLOSRA3
2469                   *
2470  2E4F- AE 35 03   CLOSRA2 LDX CURSEQ
2471  2E52- A9 00              LDA =0
2472  2E54- 9D 39 03           STA FIDRTB,X    CLOSE IT
2473  2E57- A8                 TAY
2474  2E58- 84 DB              STY FILERR
2475  2E5A- 60         CLOSRA3 RTS
2476                   *
2477                   ENDCODE EQU *
2478                   *
2479                           TIT R65 PASCAL: LABELS
2480                   *
2481  2E5B-                    END
LABELS=0166
ERRORS=00
RECORDS=7C
