

----------------------------------------------------------------------

R65 PASCAL: LABELS                 09/02/24   R65 ASSEMBLER  PAGE 01

0001                    *
0002                   *       **********************
0003                   *       * R65 PASCAL RUNTIME *
0004                   *       **********************
0005                   *
0006                   * VERSION 5.3   01/06/82 RRICHARZ,RBAUMANN
0007                   * IMPROVED 2019-2023 RRICHARZ
0008                   * VERSION 5.6   SOURCE LINES WITH /L IN COMPILER
0009                   * VERSION 5.7   BREAKPOINT AT LINE BRKPNT
0010                   * VERSION 5.8   WRITING TO CPNT STRINGS
0011                   *
0012                           TIT R65 PASCAL RUNTIME VERSION 5.8
0013                   *
0014                   * INCLUDES RANDOM ACCESS FILE HANDLING,
0015                   * FLOATING POINT MATH, FILE HANDLING ERROR
0016                   * TESTING (OPTIONAL) AND CPNT POINTERS
0017                   *
0018                           ORG 0
0019                   *
0020  0000-            ACCU    BSS 4   TOP OF STACKELEMENT
0021                   X1      EQU ACCU        FLP ACCU
0022                   M1      EQU ACCU+1
0023  0004-            E       BSS 4   FLP SCRATCH REGISTER
0024  0008-            SP      BSS 2   CURRENT STACK (-128)
0025  000A-            PC      BSS 2   PROGRAM COUNTER
0026  000C-            RUNERR  BSS 1   RUNTIME ERROR CODE
0027  000D-            DEVICE  BSS 1   I/O DEVICE CODE
0028  000E-            ENDSTK  BSS 2   END OF STACK (-128)
0029  0010-            SIGN    BSS 1   TEMPORARY SIGN
0030  0011-            STPROG  BSS 2   START OF USER PROGRAM
0031  0013-            EOPROG  BSS 2   END OF USER PROGRAM
0032  0015-            BUFFPN  BSS 1   INPUT BUFFER POINTER
0033  0016-            ENDBUF  BSS 1   END OF INPUT BUFFER
0034  0017-            BASE    BSS 2   CURRENT BASE (-128)
0035  0019-            ABASE   BSS 2   ALTERNATE BASE (-128)
0036  001B-            ARG1    BSS 2   TEMPORARY ARGUMENT
0037  001D-            ARG3    BSS 4   TEMPORARY REGISTERS
0038  0021-            ARG2    BSS 2
0039                   X2      EQU ARG1        FLP REGISTER
0040                   M2      EQU ARG1+1
0041  0023-            IOCHECK BSS 1   IO ERROR CHECKING FLAG
0042  0024-            LINBUF  BSS 56  INPUT LINE BUFFER
0043                   *
0044                   * SPACE FOR ARGNUM,ARGLIST AND ARGTYPE
0045                   *
0046  005C-                            ORG $C0
0047  00C0-            LSTLIN  BSS 2   LAST SOURCE LINE
0048  00C2-            BRKPNT  BSS 2   BREAK POINT LINE NUMBER
0049  00C4-            DEVPNT  BSS 2   DEVICE CPNT POINTER
0050                   *

----------------------------------------------------------------------

R65 PASCAL RUNTIME VERSION 5.8     09/02/24   R65 ASSEMBLER  PAGE 01

0051                   FILFLG  EQU $DA
0052                   FILERR  EQU $DB
0053                   FILDRV  EQU $DC
0054                   TRACK   EQU $DD
0055                   SECTOR  EQU $DE
0056                   DATA    EQU $E0
0057                   VIDPNT  EQU $E9
0058                   POINT   EQU $FA
0059                   KCHAR   EQU $FE
0060                   *
0061                   EMUCOM  EQU $1430       EMULATOR COMMAND REG
0062                   MULTA   EQU $14E0
0063                   MULTB   EQU $14E1
0064                   MULTR   EQU $14E2
0065                   *
0066                   FILTYP  EQU $0300
0067                   FILNAM  EQU $0301
0068                   FILCYC  EQU $0311
0069                   FILSTP  EQU $0312
0070                   FILLOC  EQU $0313
0071                   FILSIZ  EQU $0315
0072                   FILSA   EQU $031A
0073                   FILEA   EQU $031C
0074                   FILNM1  EQU $0320
0075                   FILCY1  EQU $0330
0076                   FILSA1  EQU $0331
0077                   SAVRST  EQU $0333
0078                   CURSEQ  EQU $0335
0079                   MAXSEQ  EQU $0336
0080                   MAXSIZ  EQU $0337
0081                   FIDRTB  EQU $0339
0082                   FIDVTB  EQU $0341
0083                   FIBPTB  EQU $0349
0084                   FIRCTB  EQU $0351
0085                   GRX     EQU $03AE
0086                   GRY     EQU $03AF
0087                   GRC     EQU $03B0
0088                   SFLAG   EQU $1781
0089                   NUMCHR  EQU $178A
0090                   VMON    EQU $17D5
0091                   SAVS    EQU $17FF
0092                   *
0093                   APLOTCH EQU $C818
0094                   GETKEY  EQU $E000
0095                   AUTOPR  EQU $E00C
0096                   ENDLIN  EQU $E024
0097                   PRTINF  EQU $E027
0098                   GETCHR  EQU $E003
0099                   GETLIN  EQU $E006
0100                   PRTCHR  EQU $E009

----------------------------------------------------------------------

R65 PASCAL RUNTIME VERSION 5.8     09/02/24   R65 ASSEMBLER  PAGE 02

0101                   PRTBYT  EQU $E02D
0102                   PRTAX   EQU $E030
0103                   PRTRSA  EQU $E836
0104                   RDFILE  EQU $E815
0105                   SETFID  EQU $E81E
0106                   OPEN    EQU $F00F
0107                   READCH  EQU $F018
0108                   WRITCH  EQU $F01B
0109                   GETNAM  EQU $F815
0110                   *
0111  00C6-                    ORG $2000
0112                   *
0113                           PAG

----------------------------------------------------------------------

R65 PASCAL RUNTIME VERSION 5.8     09/02/24   R65 ASSEMBLER  PAGE 03

0114                   *
0115                   * ENTRY VECTORS
0116                   *
0117  2000- 4C 96 2C           JMP COLDST      COLD START ENTRY VECTOR
0118  2003- 4C 03 2B           JMP WARMST      WARM START ENTRY VECTOR
0119  2006- 4C 82 2A           JMP PERROR      PASCAL ERROR
0120                   *
0121  2009- 5C 2F      USERST  WRD ENDCODE+32
0122  200B- FF C7      USEREND WRD $C7FF
0123                   *
0124  200D- 4C F2 FC   HARGUM  JMP $FCF2       #######
0125                   *
0126                   *
0127                   * P-CODE 00:  STOP      (END OF EXECUTION)
0128                   ******************
0129                   * NO ARGUMENTS
0130                   *
0131  2010- A9 00      STOP    LDA =0
0132  2012- 85 C0              STA LSTLIN      CLEAR LSTLIN
0133  2014- 85 C1              STA LSTLIN+1
0134  2016- A9 2F              LDA =47
0135  2018- 8D 8A 17           STA NUMCHR      FORCE 48 CHARS/LINE
0136  201B- 20 92 20           JSR CLOSAL      CLOSE ALL OPEN FILES
0137  201E- A5 11              LDA STPROG      IS ANOTHER PROGRAM
0138  2020- A6 12              LDX STPROG+1    RUNNING?
0139  2022- CD 09 20           CMP USERST
0140  2025- D0 20              BNE STOP1
0141  2027- EC 0A 20           CPX USERST+1
0142  202A- D0 1B              BNE STOP1
0143                   *
0144  202C- 20 27 E0           JSR PRTINF      NO, STOP PASCAL
0145  202F- 0D 0A 51           BYT $0D,$0A,'Quit Pascal'+$80
0145  2032- 75 69 74 
0145  2035- 20 50 61 
0145  2038- 73 63 61 
0145  203B- EC 
0146  203C- AD 81 17           LDA SFLAG
0147  203F- 29 7E              AND =$7E        CLEAR PASCAL RUNTIME BIT
0148  2041- 8D 81 17           STA SFLAG       IN SFLAG
0149  2044- 6C D5 17           JMP (VMON)
0150                   *
0151  2047- 38         STOP1   SEC             YES, COMPUTE OLD SP
0152  2048- E9 8C              SBC =140
0153  204A- B0 01              BCS *+3
0154  204C- CA                 DEX
0155  204D- 85 08              STA SP
0156  204F- 86 09              STX SP+1
0157  2051- A0 8C              LDY =140
0158  2053- 20 85 27           JSR GETBACK
0159  2056- 85 13              STA EOPROG

----------------------------------------------------------------------

R65 PASCAL RUNTIME VERSION 5.8     09/02/24   R65 ASSEMBLER  PAGE 04

0160  2058- 86 14              STX EOPROG+1
0161  205A- 20 85 27           JSR GETBACK
0162  205D- 85 11              STA STPROG
0163  205F- 86 12              STX STPROG+1
0164  2061- 20 85 27           JSR GETBACK
0165  2064- 85 0A              STA PC
0166  2066- 86 0B              STX PC+1
0167  2068- 20 85 27           JSR GETBACK
0168  206B- 85 17              STA BASE
0169  206D- 86 18              STX BASE+1
0170  206F- 20 85 27           JSR GETBACK
0171  2072- 85 00              STA ACCU
0172  2074- 86 01              STX ACCU+1
0173  2076- AE FF 17           LDX SAVS        RESTORE STACK POINTER
0174  2079- 9A                 TXS
0175  207A- 4C A0 2B           JMP LOOP
0176                   *
0177                   *
0178  207D- 4C FF F0   DOPEN1  JMP $F0FF
0179  2080- 4C 45 F1   DOPEN4  JMP $F145
0180  2083- 4C 51 F1   PRFLB1  JMP $F151
0181  2086- 4C 59 F1   CPOINT  JMP $F159
0182  2089- 4C E0 F1   PREPSR  JMP $F1E0
0183  208C- 4C 9E F2   PREPSR1 JMP $F29E
0184  208F- 4C 12 F0   CLOSE   JMP $F012
0185  2092- 4C 15 F0   CLOSAL  JMP $F015
0186  2095- 4C 57 F4   READ    JMP $F457
0187  2098- 4C 25 F4   WRITE   JMP $F425
0188  209B- 4C A7 F4   PREPDO  JMP $F4A7
0189  209E- 4C FD F5   DISCER1 JMP $F5FD
0190  20A1- 4C 25 F6   ENDDO   JMP $F625
0191  20A4- 4C 2C F6   PREPRD  JMP $F62C
0192  20A7- 4C 51 F6   PREPWRA JMP $F651
0193  20AA- 4C 6D F6   PREPWRB JMP $F66D
0194                   *
0195                   *
0196                   * P-CODE 01: RETN       (RETURN FROM PROCEDURE
0197                   *****************
0198                   * NO ARGUMENTS
0199                   *
0200  20AD- A5 17      RETN    LDA BASE        SP=BASE-2
0201  20AF- 38                 SEC
0202  20B0- E9 02              SBC =2
0203  20B2- 85 08              STA SP
0204  20B4- A5 18              LDA BASE+1
0205  20B6- E9 00              SBC =0
0206  20B8- 85 09              STA SP+1
0207  20BA- A0 80              LDY =128        GET STACK TOP ELEMENT
0208  20BC- B1 08              LDA (SP),Y
0209  20BE- 85 00              STA ACCU

----------------------------------------------------------------------

R65 PASCAL RUNTIME VERSION 5.8     09/02/24   R65 ASSEMBLER  PAGE 05

0210  20C0- C8                 INY
0211  20C1- B1 08              LDA (SP),Y
0212  20C3- 85 01              STA ACCU+1
0213  20C5- A0 84              LDY =132
0214  20C7- B1 08              LDA (SP),Y      GET SAVED OLD BASE
0215  20C9- 85 17              STA BASE
0216  20CB- C8                 INY
0217  20CC- B1 08              LDA (SP),Y
0218  20CE- 85 18              STA BASE+1
0219  20D0- C8                 INY
0220  20D1- B1 08              LDA (SP),Y      AND RETURN ADDRESS
0221  20D3- 18                 CLC
0222  20D4- 69 02              ADC =2
0223  20D6- 85 0A              STA PC
0224  20D8- C8                 INY
0225  20D9- B1 08              LDA (SP),Y
0226  20DB- 69 00              ADC =0
0227  20DD- 85 0B              STA PC+1
0228  20DF- 60                 RTS
0229                   *
0230                   * P-CODE 02: NEGA       (NEGATE ACCU)
0231                   *****************
0232                   * NO ARGUMENTS
0233                   *
0234  20E0- A9 00      NEGA    LDA =0
0235  20E2- 38                 SEC
0236  20E3- E5 00              SBC ACCU
0237  20E5- 85 00              STA ACCU
0238  20E7- A9 00              LDA =0
0239  20E9- E5 01              SBC ACCU+1
0240  20EB- 85 01              STA ACCU+1
0241  20ED- 60                 RTS
0242                   *
0243                   * P-CODE 03: ADDA       (ADD)
0244                   *****************
0245                   * NO ARGUMENTS
0246                   *
0247  20EE- A0 7E      ADDA    LDY =126
0248  20F0- 18                 CLC
0249  20F1- B1 08              LDA (SP),Y
0250  20F3- 65 00              ADC ACCU
0251  20F5- 85 00              STA ACCU
0252  20F7- C8                 INY
0253  20F8- B1 08              LDA (SP),Y
0254  20FA- 65 01              ADC ACCU+1
0255  20FC- 85 01              STA ACCU+1
0256                   *
0257  20FE- A5 08     DECS2   LDA SP
0258  2100- 38                 SEC
0259  2101- E9 02              SBC =2

----------------------------------------------------------------------

R65 PASCAL RUNTIME VERSION 5.8     09/02/24   R65 ASSEMBLER  PAGE 06

0260  2103- 85 08              STA SP
0261  2105- B0 02              BCS *+4
0262  2107- C6 09              DEC SP+1
0263  2109- 60                 RTS
0264                   *
0265                   * P-CODE 04: SUBA       (SUBTRACT)
0266                   *****************
0267                   * NO ARGUMENTS
0268                   *
0269  210A- A0 7E      SUBA    LDY =126
0270  210C- 38                 SEC
0271  210D- B1 08              LDA (SP),Y
0272  210F- E5 00              SBC ACCU
0273  2111- 85 00              STA ACCU
0274  2113- C8                 INY
0275  2114- B1 08              LDA (SP),Y
0276  2116- E5 01              SBC ACCU+1
0277  2118- 85 01              STA ACCU+1
0278  211A- 4C FE 20           JMP DECS2
0279                   *
0280                   * P-CODE 05: MULA       (MULTIPLY)
0281                   *****************
0282                   * NO ARGUMENTS
0283                   *
0284  211D- 20 57 21   MULA    JSR GETSIGN     COMPUTE SIGN OF RESULT
0285  2120- A5 00              LDA ACCU
0286  2122- 78                 SEI
0287  2123- 8D E0 14           STA MULTA
0288  2126- A5 1B              LDA ARG1        GET SAVED ARGUMENT
0289  2128- 8D E1 14           STA MULTB
0290  212B- AD E2 14           LDA MULTR
0291  212E- 85 00              STA ACCU
0292  2130- AD E3 14           LDA MULTR+1
0293  2133- A6 1C              LDX ARG1+1
0294  2135- 8E E1 14           STX MULTB
0295  2138- 18                 CLC
0296  2139- 6D E2 14           ADC MULTR
0297  213C- A6 01              LDX ACCU+1
0298  213E- 8E E0 14           STX MULTA
0299  2141- A6 1B              LDX ARG1
0300  2143- 8E E1 14           STX MULTB
0301  2146- 18                 CLC
0302  2147- 6D E2 14           ADC MULTR
0303  214A- 58                 CLI
0304  214B- 29 7F              AND =$7F
0305  214D- 85 01              STA ACCU+1
0306  214F- 20 FE 20           JSR DECS2
0307  2152- A5 10              LDA SIGN
0308  2154- 30 8A              BMI NEGA
0309  2156- 60                 RTS

----------------------------------------------------------------------

R65 PASCAL RUNTIME VERSION 5.8     09/02/24   R65 ASSEMBLER  PAGE 07

0310                   *
0311  2157- A5 01      GETSIGN LDA ACCU+1
0312  2159- 85 10              STA SIGN
0313  215B- 10 03              BPL *+5
0314  215D- 20 E0 20           JSR NEGA
0315                   *
0316  2160- A0 7F              LDY =127
0317  2162- B1 08              LDA (SP),Y
0318  2164- 10 14              BPL GETSI1
0319  2166- 45 10              EOR SIGN
0320  2168- 85 10              STA SIGN
0321  216A- 88                 DEY
0322  216B- A9 00              LDA =0
0323  216D- 38                 SEC
0324  216E- F1 08              SBC (SP),Y
0325  2170- 85 1B              STA ARG1
0326  2172- C8                 INY
0327  2173- A9 00              LDA =0
0328  2175- F1 08              SBC (SP),Y
0329  2177- 85 1C              STA ARG1+1
0330  2179- 60                 RTS
0331                   *
0332  217A- 85 1C      GETSI1  STA ARG1+1
0333  217C- 88                 DEY
0334  217D- B1 08              LDA (SP),Y
0335  217F- 85 1B              STA ARG1
0336  2181- 60                 RTS
0337                   *
0338                   * PCODE 06: DIVA        (DIVIDE)
0339                   ****************
0340                   *
0341  2182- A0 7E      DIVA    LDY =126
0342  2184- B1 08              LDA (SP),Y
0343  2186- 85 1B              STA ARG1
0344  2188- C8                 INY
0345  2189- B1 08              LDA (SP),Y
0346  218B- 85 1C              STA ARG1+1
0347  218D- 20 FE 20           JSR DECS2
0348                   *
0349  2190- A5 1C              LDA ARG1+1
0350  2192- 29 80              AND =$80
0351  2194- F0 02              BEQ *+4
0352  2196- A9 FF              LDA =$FF
0353  2198- 85 21              STA ARG2
0354  219A- 85 22              STA ARG2+1
0355  219C- AA                 TAX
0356  219D- 18                 CLC
0357  219E- 65 1B              ADC ARG1
0358  21A0- 85 1B              STA ARG1
0359  21A2- 8A                 TXA

----------------------------------------------------------------------

R65 PASCAL RUNTIME VERSION 5.8     09/02/24   R65 ASSEMBLER  PAGE 08

0360  21A3- 65 1C              ADC ARG1+1
0361  21A5- 85 1C              STA ARG1+1
0362  21A7- 8A                 TXA
0363  21A8- 45 01              EOR ACCU+1
0364  21AA- 85 10              STA SIGN
0365  21AC- 10 03              BPL *+5
0366  21AE- 20 E0 20           JSR NEGA
0367  21B1- A0 11              LDY =$11
0368  21B3- A5 00              LDA ACCU
0369  21B5- 05 01              ORA ACCU+1
0370  21B7- D0 05              BNE DIV1
0371  21B9- A2 81              LDX =$81        PASCAL RUNTIME ERROR
0372  21BB- 4C 82 2A           JMP PERROR      DIVISION BY ZERO
0373                   *
0374  21BE- 38         DIV1    SEC
0375  21BF- A5 21              LDA ARG2
0376  21C1- E5 00              SBC ACCU
0377  21C3- 48                 PHA
0378  21C4- A5 22              LDA ARG2+1
0379  21C6- E5 01              SBC ACCU+1
0380  21C8- 48                 PHA
0381  21C9- 45 22              EOR ARG2+1
0382  21CB- 30 09              BMI DIV2
0383  21CD- 68                 PLA
0384  21CE- 85 22              STA ARG2+1
0385  21D0- 68                 PLA
0386  21D1- 85 21              STA ARG2
0387  21D3- 38                 SEC
0388  21D4- B0 03              BCS DIV3
0389                   *
0390  21D6- 68         DIV2    PLA
0391  21D7- 68                 PLA
0392  21D8- 18                 CLC
0393  21D9- 26 1B      DIV3    ROL ARG1
0394  21DB- 26 1C              ROL ARG1+1
0395  21DD- 26 21              ROL ARG2
0396  21DF- 26 22              ROL ARG2+1
0397  21E1- 88                 DEY
0398  21E2- D0 DA              BNE DIV1
0399  21E4- A5 1B              LDA ARG1
0400  21E6- A6 1C              LDX ARG1+1
0401  21E8- 85 00              STA ACCU
0402  21EA- 86 01              STX ACCU+1
0403  21EC- A5 10              LDA SIGN
0404  21EE- 10 03              BPL *+5
0405  21F0- 4C E0 20           JMP NEGA
0406  21F3- 60                 RTS
0407                   *
0408                   * P-CODE 07: LOWB       (LOW BIT)
0409                   *****************

----------------------------------------------------------------------

R65 PASCAL RUNTIME VERSION 5.8     09/02/24   R65 ASSEMBLER  PAGE 09

0410                   * NO ARGUMENTS
0411                   *
0412  21F4- A5 00      LOWB    LDA ACCU
0413  21F6- 29 01              AND =1
0414  21F8- 85 00      LOWB1   STA ACCU
0415  21FA- A9 00              LDA =0
0416  21FC- 85 01              STA ACCU+1
0417  21FE- 60                 RTS
0418                   *
0419                   * P-CODE 08: TEQU       (TEST EQUAL)
0420                   *****************
0421                   *
0422  21FF- 20 0A 21  TEQU    JSR SUBA
0423  2202- A5 00              LDA ACCU
0424  2204- 05 01              ORA ACCU+1
0425  2206- F0 04              BEQ TEQU1
0426  2208- A9 00              LDA =0
0427  220A- F0 EC              BEQ LOWB1       UNCOND.
0428                   *
0429  220C- A9 01      TEQU1   LDA =1
0430  220E- D0 E8              BNE LOWB1       UNCOND.
0431                   *
0432                   * PCODE 09: TNEQ        (TEST NOT EQUAL)
0433                   ****************
0434                   *
0435  2210- 20 FF 21   TNEQ    JSR TEQU
0436  2213- A5 00              LDA ACCU
0437  2215- 49 01              EOR =1
0438  2217- 85 00              STA ACCU
0439  2219- 60                 RTS
0440                   *
0441                   * P-CODE 0A: TLES       (TEST LESS)
0442                   *****************
0443                   *
0444  221A- 20 0A 21   TLES    JSR SUBA
0445  221D- A9 00              LDA =0
0446  221F- 06 01              ASL ACCU+1
0447  2221- 2A                 ROL A
0448  2222- 90 D4              BCC LOWB1       UNCOND.
0449                   *
0450                   * P-CODE 0B: TGRE       (TEST GREATER OR EQUAL)
0451                   *****************
0452                   *
0453  2224- 20 1A 22   TGRE    JSR TLES
0454  2227- 4C 13 22           JMP TNEQ+3
0455                   *
0456                   * P-CODE 0C: TGRTS      (TEST GREATER)
0457                   ******************
0458                   *
0459  222A- 20 0F 27   TGRT    JSR EXST

----------------------------------------------------------------------

R65 PASCAL RUNTIME VERSION 5.8     09/02/24   R65 ASSEMBLER  PAGE 10

0460  222D- 4C 1A 22           JMP TLES
0461                   *
0462                   * P-CODE 0D: TLEE       (TEST LESS OR EQUAL)
0463                   *****************
0464                   *
0465  2230- 20 2A 22   TLEE    JSR TGRT
0466  2233- 4C 13 22           JMP TNEQ+3
0467                   *
0468                   * P-CODE 0E: ORAC       (BITWISE OR)
0469                   *****************
0470                   *
0471  2236- A0 7E      ORAC    LDY =126
0472  2238- B1 08              LDA (SP),Y
0473  223A- 05 00              ORA ACCU
0474  223C- 85 00              STA ACCU
0475  223E- C8                 INY
0476  223F- B1 08              LDA (SP),Y
0477  2241- 05 01              ORA ACCU+1
0478  2243- 85 01              STA ACCU+1
0479  2245- 4C FE 20           JMP DECS2
0480                   *
0481                   * P-CODE 0F: ANDA       (BITWISE AND)
0482                   *****************
0483                   *
0484  2248- A0 7E      ANDA    LDY =126
0485  224A- B1 08              LDA (SP),Y
0486  224C- 25 00              AND ACCU
0487  224E- 85 00              STA ACCU
0488  2250- C8                 INY
0489  2251- B1 08              LDA (SP),Y
0490  2253- 25 01              AND ACCU+1
0491  2255- 85 01              STA ACCU+1
0492  2257- 4C FE 20           JMP DECS2
0493                   *
0494                   * PCODE 10: EORA        (BITWISE OR)
0495                   ****************
0496                   *
0497  225A- A0 7E      EORA    LDY =126
0498  225C- B1 08              LDA (SP),Y
0499  225E- 45 00              EOR ACCU
0500  2260- 85 00              STA ACCU
0501  2262- C8                 INY
0502  2263- B1 08              LDA (SP),Y
0503  2265- 45 01              EOR ACCU+1
0504  2267- 85 01              STA ACCU+1
0505  2269- 4C FE 20           JMP DECS2
0506                   *
0507                   * P-CODE 11: NOTA       (BITWISE NOT)
0508                   *****************
0509                   *

----------------------------------------------------------------------

R65 PASCAL RUNTIME VERSION 5.8     09/02/24   R65 ASSEMBLER  PAGE 11

0510  226C- A5 00      NOTA    LDA ACCU
0511  226E- 49 FF              EOR =$FF
0512  2270- 85 00              STA ACCU
0513  2272- A5 01              LDA ACCU+1
0514  2274- 49 FF              EOR =$FF
0515  2276- 85 01              STA ACCU+1
0516  2278- 60                 RTS
0517                   *
0518                   * P-CODE 12: LEFT       (SHIFT LEFT N BYTES)
0519                   *****************
0520                   *
0521  2279- 20 E0 20           JSR NEGA
0522  227C- A5 01      LEFT    LDA ACCU+1
0523  227E- 30 12              BMI RIGH-3      ARGUMENT NEGATIVE
0524                   *
0525  2280- A6 00              LDX ACCU
0526  2282- F0 0B              BEQ LEFT2       TAKE ONLY LOW BYTE
0527  2284- 20 EF 22           JSR GETS2       GET SECOND NO FROM ST
0528  2287- 06 00      LEFT1   ASL ACCU
0529  2289- 26 01              ROL ACCU+1
0530  228B- CA                 DEX
0531  228C- D0 F9              BNE LEFT1
0532  228E- 60                 RTS
0533                   *
0534  228F- 4C EF 22   LEFT2   JMP GETS2
0535                   *
0536                   * P-CODE 13: RIGH       (SHIFT RIGHT N BYTES)
0537                   *****************
0538                   *
0539  2292- 20 E0 20           JSR NEGA
0540  2295- A5 01      RIGH    LDA ACCU+1
0541  2297- 30 E0              BMI LEFT-3
0542  2299- A6 00              LDX ACCU
0543  229B- F0 F2              BEQ LEFT2
0544  229D- 20 EF 22           JSR GETS2
0545  22A0- 46 01      RIGH1   LSR ACCU+1
0546  22A2- A9 00              LDA =0
0547  22A4- 90 02              BCC *+4
0548  22A6- A9 80              LDA =128
0549  22A8- 46 00              LSR ACCU
0550  22AA- 05 00              ORA ACCU
0551  22AC- 85 00              STA ACCU
0552  22AE- CA                 DEX
0553  22AF- D0 EF              BNE RIGH1
0554  22B1- 60                 RTS
0555                   *
0556                   * P-CODE 14:INCA        (INCREMENT ACCU)
0557                   ****************
0558                   *
0559  22B2- E6 00      INCA    INC ACCU

----------------------------------------------------------------------

R65 PASCAL RUNTIME VERSION 5.8     09/02/24   R65 ASSEMBLER  PAGE 12

0560  22B4- D0 02              BNE *+4
0561  22B6- E6 01              INC ACCU+1
0562  22B8- 60                 RTS
0563                   *
0564                   * P-CODE 15: DECA       (DECREMENT ACCU)
0565                   *****************
0566                   *
0567  22B9- A5 00      DECA    LDA ACCU
0568  22BB- D0 02              BNE *+4
0569  22BD- C6 01              DEC ACCU+1
0570  22BF- C6 00              DEC ACCU
0571  22C1- 60                 RTS
0572                   *
0573                   * P-CODE 16: COPY       (COPY ACCU0
0574                   *****************
0575                   *
0576  22C2- 20 D1 22   COPY    JSR INCS2       INCREMENT STACK
0577  22C5- A0 7E              LDY =126
0578  22C7- A5 00              LDA ACCU
0579  22C9- 91 08              STA (SP),Y
0580  22CB- C8                 INY
0581  22CC- A5 01              LDA ACCU+1
0582  22CE- 91 08              STA (SP),Y
0583  22D0- 60                 RTS
0584                   *
0585  22D1- A9 02      INCS2   LDA =2
0586  22D3- 18                 CLC
0587  22D4- 65 08              ADC SP
0588  22D6- 85 08              STA SP
0589  22D8- 90 02              BCC *+4
0590  22DA- E6 09              INC SP+1
0591  22DC- C5 0E      INCS2A  CMP ENDSTK      TEST STACK OVERFLOW
0592  22DE- A5 09              LDA SP+1
0593  22E0- E5 0F              SBC ENDSTK+1
0594  22E2- B0 06              BCS INCS2B
0595  22E4- A9 05              LDA =5          LET EMULATOR KNOW THAT
0596  22E6- 8D 30 14           STA EMUCOM      SP HAS BEEN INCREASED
0597  22E9- 60                 RTS
0598                   *
0599  22EA- A0 82      INCS2B  LDY =$82        PASCAL RUN TIME ERROR
0600  22EC- 4C 82 2A           JMP PERROR      STACK OVERFLOW
0601                   *
0602                   * GETS2
0603                   *
0604  22EF- A0 7E      GETS2   LDY =126
0605  22F1- B1 08              LDA (SP),Y
0606  22F3- 85 00              STA ACCU
0607  22F5- C8                 INY
0608  22F6- B1 08              LDA (SP),Y
0609  22F8- 85 01              STA ACCU+1

----------------------------------------------------------------------

R65 PASCAL RUNTIME VERSION 5.8     09/02/24   R65 ASSEMBLER  PAGE 13

0610  22FA- 4C FE 20           JMP DECS2
0611                   *
0612                   * P-CODE 17: PEEK
0613                   *****************
0614                   *
0615  22FD- A0 00      PEEK    LDY =0
0616  22FF- B1 00             LDA (ACCU),Y
0617  2301- 85 00              STA ACCU
0618  2303- 84 01              STY ACCU+1
0619  2305- 60                 RTS
0620                   *
0621                   * P-CODE 18: POKE
0622                   *****************
0623                   *
0624  2306- A6 00      POKE    LDX ACCU
0625  2308- 20 EF 22           JSR GETS2
0626  230B- A0 00              LDY =0
0627  230D- 8A                 TXA
0628  230E- 91 00              STA (ACCU),Y
0629  2310- 4C EF 22           JMP GETS2
0630                   *
0631                   * P-CODE 19: CALA
0632                   *****************
0633                   *
0634  2313- 20 19 23   CALA    JSR CALA1
0635  2316- 4C EF 22           JMP GETS2
0636                   *
0637  2319- 6C 00 00   CALA1   JMP (ACCU)
0638                   *
0639                   * P-CODE 1A: RLIN
0640                   *****************
0641                   *
0642  231C- 20 06 E0   RLIN    JSR GETLIN
0643  231F- A2 00              LDX =0
0644  2321- B1 E9              LDA (VIDPNT),Y
0645  2323- 29 7F              AND =$7F
0646  2325- 95 24              STA LINBUF,X
0647  2327- E8                 INX
0648  2328- C8                 INY
0649  2329- CC 8A 17           CPY NUMCHR
0650  232C- 90 F3              BCC *-11
0651  232E- F0 F1              BEQ *-13
0652  2330- CA                 DEX
0653  2331- 30 06              BMI *+8
0654  2333- B5 24              LDA LINBUF,X
0655  2335- C9 20              CMP =$20
0656  2337- F0 F7              BEQ *-7
0657  2339- E8                 INX
0658  233A- 86 16              STX ENDBUF
0659  233C- A9 00              LDA =0

----------------------------------------------------------------------

R65 PASCAL RUNTIME VERSION 5.8     09/02/24   R65 ASSEMBLER  PAGE 14

0660  233E- 85 15              STA BUFFPN
0661  2340- 20 27 E0           JSR PRTINF
0662  2343- 0D 8A              BYT $D,$8A
0663  2345- 60                 RTS
0664                   *
0665                   * P-CODE 1B: GETC
0666                   *****************
0667                   *
0668  2346- 20 C2 22   GETC    JSR COPY
0669  2349- 20 F2 29           JSR GETCHR0
0670  234C- 85 00      GETC1   STA ACCU
0671  234E- A9 00              LDA =0
0672  2350- 85 01              STA ACCU+1
0673  2352- 60                 RTS
0674                   *
0675                   * P-CODE 1C: GETN
0676                   *****************
0677                   *
0678  2353- 20 C2 22   GETN    JSR COPY
0679  2356- A9 00              LDA =0
0680  2358- 85 00              STA ACCU
0681  235A- 85 01              STA ACCU+1
0682  235C- 85 10              STA SIGN
0683  235E- 20 F2 29   GETN0   JSR GETCHR0
0684  2361- C9 20              CMP =' '
0685  2363- F0 F9              BEQ GETN0
0686  2365- C9 2D              CMP ='-'
0687  2367- D0 05              BNE GETN1
0688                   *
0689  2369- C6 10              DEC SIGN
0690  236B- 4C 72 23           JMP GETN2
0691                   *
0692  236E- C9 2B      GETN1    CMP ='+'
0693  2370- D0 03              BNE GETN2+3
0694                   *
0695  2372- 20 F2 29   GETN2   JSR GETCHR0
0696  2375- C9 30              CMP ='0'
0697  2377- 90 2F              BCC GETN3
0698  2379- C9 3A              CMP ='9'+1
0699  237B- B0 2B              BCS GETN3
0700  237D- 38                 SEC
0701  237E- E9 30              SBC ='0'
0702  2380- 48                 PHA
0703  2381- 06 00              ASL ACCU
0704  2383- 26 01              ROL ACCU+1
0705  2385- A6 00              LDX ACCU
0706  2387- A4 01              LDY ACCU+1
0707  2389- 06 00              ASL ACCU
0708  238B- 26 01              ROL ACCU+1
0709  238D- 06 00              ASL ACCU

----------------------------------------------------------------------

R65 PASCAL RUNTIME VERSION 5.8     09/02/24   R65 ASSEMBLER  PAGE 15

0710  238F- 26 01              ROL ACCU+1
0711  2391- 18                 CLC
0712  2392- 8A                 TXA
0713  2393- 65 00              ADC ACCU
0714  2395- 85 00              STA ACCU
0715  2397- 98                 TYA
0716  2398- 65 01              ADC ACCU+1
0717  239A- 85 01              STA ACCU+1
0718  239C- 68                 PLA
0719  239D- 18                 CLC
0720  239E- 65 00              ADC ACCU
0721  23A0- 85 00              STA ACCU
0722  23A2- 90 CE              BCC GETN2
0723  23A4- E6 01              INC ACCU+1
0724  23A6- B0 CA              BCS GETN2
0725                   *
0726  23A8- A5 10      GETN3   LDA SIGN
0727  23AA- F0 03              BEQ *+5
0728  23AC- 4C E0 20           JMP NEGA
0729  23AF- 60                 RTS
0730                   *
0731                   * P-CODE 1D: PRTC
0732                   *****************
0733                   *
0734  23B0- A5 00      PRTC    LDA ACCU
0735  23B2- 20 22 2A           JSR PRTCHR0
0736  23B5- 4C EF 22           JMP GETS2
0737                   *
0738                   * P-CODE 1E: PRTN
0739                   *****************
0740                   *
0741  23B8- A5 01      PRTN    LDA ACCU+1
0742  23BA- 10 08              BPL PRTN1
0743  23BC- 20 E0 20           JSR NEGA
0744  23BF- A9 2D              LDA ='-'
0745  23C1- 20 22 2A           JSR PRTCHR0
0746                   *
0747  23C4- A5 00      PRTN1   LDA ACCU
0748  23C6- A6 01              LDX ACCU+1
0749  23C8- 85 21              STA ARG2
0750  23CA- 86 22              STX ARG2+1
0751  23CC- A9 1F              LDA =$1F
0752  23CE- 85 1D              STA ARG3
0753  23D0- 85 1F              STA ARG3+2
0754  23D2- A9 2A              LDA =$2A
0755  23D4- 85 1E              STA ARG3+1
0756  23D6- 85 20              STA ARG3+3
0757  23D8- A6 21              LDX ARG2
0758  23DA- A4 22              LDY ARG2+1
0759  23DC- 38                 SEC

----------------------------------------------------------------------

R65 PASCAL RUNTIME VERSION 5.8     09/02/24   R65 ASSEMBLER  PAGE 16

0760  23DD- E6 1D      PRTN2   INC ARG3
0761  23DF- 8A                 TXA
0762  23E0- E9 10              SBC =$10
0763  23E2- AA                 TAX
0764  23E3- 98                 TYA
0765  23E4- E9 27              SBC =$27
0766  23E6- A8                 TAY
0767  23E7- B0 F4              BCS PRTN2
0768  23E9- C6 1E      PRTN3   DEC ARG3+1
0769  23EB- 8A                 TXA
0770  23EC- 69 E8              ADC =$E8
0771  23EE- AA                 TAX
0772  23EF- 98                 TYA
0773  23F0- 69 03              ADC =$03
0774  23F2- A8                 TAY
0775  23F3- 90 F4              BCC PRTN3
0776  23F5- 8A                 TXA
0777  23F6- 38         PRTN4   SEC
0778  23F7- E6 1F      PRTN5   INC ARG3+2
0779  23F9- E9 64              SBC =$64
0780  23FB- B0 FA              BCS PRTN5
0781  23FD- 88                 DEY
0782  23FE- 10 F6             BPL PRTN4
0783  2400- C6 20      PRTN6   DEC ARG3+3
0784  2402- 69 0A              ADC =$A
0785  2404- 90 FA              BCC PRTN6
0786  2406- 09 30              ORA =$30
0787  2408- 85 21              STA ARG2
0788  240A- A9 20              LDA =$20
0789  240C- 85 22              STA ARG2+1
0790  240E- A2 FB              LDX =$FB
0791  2410- 86 10      PRTN7   STX SIGN
0792  2412- B5 22              LDA ARG2+1,X
0793  2414- 05 22              ORA ARG2+1
0794  2416- C9 20              CMP =$20
0795  2418- F0 09              BEQ PRTN8
0796  241A- A0 30              LDY =$30
0797  241C- 84 22              STY ARG2+1
0798  241E- 05 22              ORA ARG2+1
0799  2420- 20 22 2A           JSR PRTCHR0
0800  2423- A6 10      PRTN8   LDX SIGN
0801  2425- E8                 INX
0802  2426- D0 E8              BNE PRTN7
0803  2428- 4C EF 22           JMP GETS2
0804                   *
0805                   * P-CODE 1F: PRTS
0806                   *****************
0807                   *
0808  242B- 06 00      PRTS    ASL ACCU
0809  242D- 26 01              ROL ACCU+1

----------------------------------------------------------------------

R65 PASCAL RUNTIME VERSION 5.8     09/02/24   R65 ASSEMBLER  PAGE 17

0810  242F- A5 08              LDA SP
0811  2431- 38                 SEC
0812  2432- E5 00              SBC ACCU
0813  2434- 85 00              STA ACCU
0814  2436- 48                 PHA
0815  2437- A5 09              LDA SP+1
0816  2439- E5 01              SBC ACCU+1
0817  243B- 85 01              STA ACCU+1
0818  243D- 48                 PHA
0819  243E- A0 80      OUTST1  LDY =128
0820  2440- B1 00              LDA (ACCU),Y
0821  2442- 20 22 2A           JSR PRTCHR0
0822  2445- A5 00              LDA ACCU
0823  2447- 18                 CLC
0824  2448- 69 02              ADC =2
0825  244A- 85 00              STA ACCU
0826  244C- 90 02              BCC *+4
0827  244E- E6 01              INC ACCU+1
0828  2450- C5 08              CMP SP
0829  2452- A5 01              LDA ACCU+1
0830  2454- E5 09              SBC SP+1
0831  2456- 90 E6              BCC OUTST1
0832  2458- 68                 PLA
0833  2459- 85 09              STA SP+1
0834  245B- 68                 PLA
0835  245C- 85 08              STA SP
0836  245E- 4C EF 22           JMP GETS2
0837                   *
0838                   * P-CODE 20: LITB
0839                   *****************
0840                   *
0841  2461- 20 C2 22   LITB    JSR COPY
0842  2464- 20 AB 24           JSR FETCH
0843  2467- 85 00              STA ACCU
0844  2469- A9 00              LDA =0
0845  246B- 85 01              STA ACCU+1
0846  246D- 60                 RTS
0847                   *
0848                   * P-CODE 21: INCB
0849                   *****************
0850                   *
0851  246E- A0 80      INCB    LDY =128        SAVE CURRENT ACCU
0852  2470- A5 00              LDA ACCU
0853  2472- 91 08              STA (SP),Y
0854  2474- C8                 INY
0855  2475- A5 01              LDA ACCU+1
0856  2477- 91 08              STA (SP),Y
0857  2479- 20 AB 24           JSR FETCH
0858  247C- A2 00              LDX =0
0859  247E- A8                 TAY             TEST A

----------------------------------------------------------------------

R65 PASCAL RUNTIME VERSION 5.8     09/02/24   R65 ASSEMBLER  PAGE 18

0860  247F- 10 01              BPL *+3
0861  2481- CA                 DEX
0862  2482- 18                 CLC
0863  2483- 65 08              ADC SP
0864  2485- 85 08              STA SP
0865  2487- 8A                 TXA
0866  2488- 65 09              ADC SP+1
0867  248A- 85 09              STA SP+1
0868  248C- A5 08      INCB1   LDA SP
0869  248E- 20 DC 22           JSR INCS2A      TEST STACK OVERFLOW
0870  2491- A0 80              LDY =128        AND GET NEW ACCU
0871  2493- B1 08              LDA (SP),Y
0872  2495- 85 00              STA ACCU
0873  2497- C8                 INY
0874  2498- B1 08              LDA (SP),Y
0875  249A- 85 01              STA ACCU+1
0876  249C- 60                 RTS
0877                   *
0878                   * P-CODE 22: LITW
0879                   *****************
0880                   *
0881  249D- 20 C2 22   LITW    JSR COPY
0882  24A0- 20 AB 24           JSR FETCH
0883  24A3- 85 00              STA ACCU
0884  24A5- 20 AB 24           JSR FETCH
0885  24A8- 85 01              STA ACCU+1
0886  24AA- 60                 RTS
0887                   *
0888                   * FETCH
0889                   *
0890  24AB- A0 00      FETCH   LDY =0
0891  24AD- B1 0A              LDA (PC),Y
0892  24AF- E6 0A              INC PC
0893  24B1- D0 02              BNE *+4
0894  24B3- E6 0B              INC PC+1
0895  24B5- 60                 RTS
0896                   *
0897                   * P-CODE 23: INCW
0898                   *****************
0899                   *
0900  24B6- A0 80      INCW    LDY =128        SAVE CURRENT ACCU
0901  24B8- A5 00              LDA ACCU
0902  24BA- 91 08              STA (SP),Y
0903  24BC- C8                 INY
0904  24BD- A5 01              LDA ACCU+1
0905  24BF- 91 08              STA (SP),Y
0906  24C1- 20 AB 24           JSR FETCH
0907  24C4- 18                 CLC
0908  24C5- 65 08              ADC SP
0909  24C7- 85 08              STA SP

----------------------------------------------------------------------

R65 PASCAL RUNTIME VERSION 5.8     09/02/24   R65 ASSEMBLER  PAGE 19

0910  24C9- 20 AB 24           JSR FETCH
0911  24CC- 65 09              ADC SP+1
0912  24CE- 85 09              STA SP+1
0913  24D0- 4C 8C 24           JMP INCB1
0914                   *
0915                   * P-CODE 24: JUMP
0916                   *****************
0917                   *
0918  24D3- A0 00      JUMP    LDY =0
0919  24D5- B1 0A              LDA (PC),Y
0920  24D7- 18                 CLC
0921  24D8- 65 0A              ADC PC
0922  24DA- AA                 TAX
0923  24DB- C8                 INY
0924  24DC- B1 0A              LDA (PC),Y
0925  24DE- 65 0B              ADC PC+1
0926  24E0- 86 0A              STX PC
0927  24E2- 85 0B              STA PC+1
0928  24E4- 60                 RTS
0929                   *
0930                   * P-CODE 25: JMPZ
0931                   *****************
0932                   *
0933  24E5- 46 00      JMPZ    LSR ACCU
0934  24E7- 08                 PHP
0935  24E8- 20 EF 22           JSR GETS2
0936  24EB- 28                 PLP
0937  24EC- 90 E5              BCC JUMP
0938                   *
0939  24EE- A5 0A              LDA PC
0940  24F0- 18                 CLC
0941  24F1- 69 02              ADC =2
0942  24F3- 85 0A              STA PC
0943  24F5- 90 02              BCC *+4
0944  24F7- E6 0B              INC PC+1
0945  24F9- 60                 RTS
0946                   *
0947                   * P-CODE 26: JMPO
0948                   *****************
0949                   *
0950  24FA- A5 00      JMPO    LDA ACCU
0951  24FC- 49 01              EOR =1
0952  24FE- 85 00             STA ACCU
0953  2500- 4C E5 24           JMP JMPZ
0954                   *
0955                   * P-CODE 27: LOAD
0956                   *****************
0957                   *
0958  2503- 20 C2 22   LOAD    JSR COPY
0959  2506- 20 AB 24           JSR FETCH

----------------------------------------------------------------------

R65 PASCAL RUNTIME VERSION 5.8     09/02/24   R65 ASSEMBLER  PAGE 20

0960  2509- AA                 TAX             LEVEL DIFFERENCE
0961  250A- 20 AB 24           JSR FETCH
0962  250D- 85 1B              STA ARG1
0963  250F- 20 AB 24           JSR FETCH
0964  2512- 85 1C      LOAD1   STA ARG1+1
0965  2514- 20 40 25           JSR FBASE3
0966  2517- A0 80      LOAD2   LDY =128
0967  2519- B1 19              LDA (ABASE),Y
0968  251B- 85 00              STA ACCU
0969  251D- C8                 INY
0970  251E- B1 19              LDA (ABASE),Y
0971  2520- 85 01              STA ACCU+1
0972  2522- 60                 RTS
0973                   *
0974                   * FBASE
0975                   *
0976  2523- A5 17      FBASE   LDA BASE
0977  2525- A4 18              LDY BASE+1
0978  2527- 85 19              STA ABASE
0979  2529- 84 1A              STY ABASE+1
0980  252B- E0 00              CPX =0
0981  252D- F0 10              BEQ FBASE2
0982                   *
0983  252F- A0 80      FBASE1  LDY =128
0984  2531- B1 19              LDA (ABASE),Y
0985  2533- 48                 PHA
0986  2534- C8                 INY
0987  2535- B1 19              LDA (ABASE),Y
0988  2537- 85 1A              STA ABASE+1
0989  2539- 68                 PLA
0990  253A- 85 19              STA ABASE
0991  253C- CA                 DEX
0992  253D- D0 F0              BNE FBASE1
0993  253F- 60         FBASE2  RTS
0994                   *
0995  2540- 20 23 25   FBASE3  JSR FBASE
0996  2543- 18                 CLC
0997  2544- A5 1B              LDA ARG1
0998  2546- 65 19              ADC ABASE
0999  2548- 85 19              STA ABASE
1000  254A- A5 1C              LDA ARG1+1
1001  254C- 65 1A              ADC ABASE+1
1002  254E- 85 1A              STA ABASE+1
1003  2550- 60                 RTS
1004                   *
1005                   * P-CODE 28: LODX
1006                   *****************
1007                   *
1008  2551- 20 AB 24   LODX    JSR FETCH
1009  2554- AA                 TAX

----------------------------------------------------------------------

R65 PASCAL RUNTIME VERSION 5.8     09/02/24   R65 ASSEMBLER  PAGE 21

1010  2555- 20 AB 24           JSR FETCH
1011  2558- 06 00              ASL ACCU
1012  255A- 26 01              ROL ACCU+1
1013  255C- 18                 CLC
1014  255D- 65 00              ADC ACCU
1015  255F- 85 1B              STA ARG1
1016  2561- 08                 PHP
1017  2562- 20 AB 24           JSR FETCH
1018  2565- 28                 PLP
1019  2566- 65 01              ADC ACCU+1
1020  2568- 4C 12 25           JMP LOAD1
1021                   *
1022                   * P-CODE 29: STOR
1023                   *****************
1024                   *
1025  256B- 20 AB 24   STOR    JSR FETCH
1026  256E- AA                 TAX
1027  256F- 20 AB 24           JSR FETCH
1028  2572- 85 1B              STA ARG1
1029  2574- 20 AB 24           JSR FETCH
1030  2577- 85 1C              STA ARG1+1
1031  2579- 20 40 25   STOR1   JSR FBASE3
1032  257C- A0 80      STOR2   LDY =128
1033  257E- A5 00              LDA ACCU
1034  2580- 91 19              STA (ABASE),Y
1035  2582- C8                 INY
1036  2583- A5 01              LDA ACCU+1
1037  2585- 91 19              STA (ABASE),Y
1038  2587- 4C EF 22           JMP GETS2
1039                   *
1040                   * P-CODE 2A: STOX
1041                   *****************
1042                   *
1043  258A- 20 AB 24   STOX    JSR FETCH
1044  258D- AA                 TAX
1045  258E- A0 7E              LDY =126
1046  2590- B1 08              LDA (SP),Y
1047  2592- 0A                 ASL A
1048  2593- 85 1B              STA ARG1
1049  2595- C8                 INY
1050  2596- B1 08              LDA (SP),Y
1051  2598- 2A                 ROL A
1052  2599- 85 1C              STA ARG1+1
1053  259B- 20 AB 24           JSR FETCH
1054  259E- 18                 CLC
1055  259F- 65 1B              ADC ARG1
1056  25A1- 85 1B              STA ARG1
1057  25A3- 20 AB 24           JSR FETCH
1058  25A6- 65 1C              ADC ARG1+1
1059  25A8- 85 1C              STA ARG1+1

----------------------------------------------------------------------

R65 PASCAL RUNTIME VERSION 5.8     09/02/24   R65 ASSEMBLER  PAGE 22

1060  25AA- 20 FE 20           JSR DECS2
1061  25AD- 4C 79 25           JMP STOR1
1062                   *
1063                   * P-CODE 2B: CALL
1064                   *****************
1065                   *
1066  25B0- 20 AB 24   CALL    JSR FETCH
1067  25B3- AA                 TAX
1068  25B4- 20 23 25           JSR FBASE
1069  25B7- A0 82              LDY =130
1070  25B9- A5 19              LDA ABASE
1071  25BB- 91 08              STA (SP),Y
1072  25BD- C8                 INY
1073  25BE- A5 1A              LDA ABASE+1
1074  25C0- 91 08              STA (SP),Y
1075  25C2- C8                 INY
1076  25C3- A5 17              LDA BASE
1077  25C5- 91 08              STA (SP),Y
1078  25C7- C8                 INY
1079  25C8- A5 18              LDA BASE+1
1080  25CA- 91 08              STA (SP),Y
1081  25CC- C8                 INY
1082  25CD- A5 0A              LDA PC
1083  25CF- 91 08              STA (SP),Y
1084  25D1- C8                 INY
1085  25D2- A5 0B              LDA PC+1
1086  25D4- 91 08              STA (SP),Y
1087  25D6- A5 08              LDA SP
1088  25D8- 18                 CLC
1089  25D9- 69 02              ADC =2
1090  25DB- 85 17              STA BASE
1091  25DD- A5 09              LDA SP+1
1092  25DF- 69 00              ADC =0
1093  25E1- 85 18              STA BASE+1
1094  25E3- 4C D3 24           JMP JUMP
1095                   *
1096                   * PCODE 2C: SDEV
1097                   ****************
1098                   *
1099  25E6- A5 00      SDEV    LDA ACCU
1100  25E8- 85 0D              STA DEVICE
1101  25EA- 85 C4              STA DEVPNT
1102  25EC- A5 01              LDA ACCU+1
1103  25EE- 85 C5              STA DEVPNT+1
1104  25F0- F0 04              BEQ SDEV2
1105  25F2- A9 81              LDA =129                DEVICE: CPNT
1106  25F4- 85 0D              STA DEVICE
1107                   *
1108  25F6- 4C EF 22   SDEV2   JMP GETS2
1109                   *

----------------------------------------------------------------------

R65 PASCAL RUNTIME VERSION 5.8     09/02/24   R65 ASSEMBLER  PAGE 23

1110                   * PCODE 2D: RDEV
1111                   ****************
1112                   *
1113  25F9- A9 00      RDEV    LDA =0
1114  25FB- 85 0D              STA DEVICE
1115  25FD- 85 C4              STA DEVPNT
1116  25FF- 85 C5             STA DEVPNT+1
1117  2601- 60                 RTS
1118                   *
1119                   * PCODE 2E: FNAM
1120                   ****************
1121                   *
1122  2602- 20 27 E0   FNAM    JSR PRTINF
1123  2605- 20 3D A0           BYT ' = '+128
1124  2608- 20 06 E0           JSR GETLIN
1125  260B- 20 15 F8           JSR GETNAM
1126  260E- 20 0D 20           JSR HARGUM
1127  2611- 85 DC              STA FILDRV
1128  2613- 20 0D 20           JSR HARGUM
1129  2616- 8D 13 03           STA FILLOC
1130  2619- 20 27 E0           JSR PRTINF
1131  261C- 0D 8A              BYT $D,$8A
1132  261E- 60                 RTS
1133                   *
1134                   * P-CODE 2F: OPNR
1135                   *****************
1136                   *
1137                   * NO AUTOMATIC ERROR TESTING
1138                   *
1139  261F- A9 00      OPNR    LDA =0
1140  2621- 85 DA              STA FILFLG
1141  2623- 20 C2 22           JSR COPY
1142  2626- 20 0F F0           JSR OPEN
1143  2629- C8                 INY
1144  262A- C8                 INY
1145  262B- 84 00              STY ACCU
1146  262D- 85 01              STA ACCU+1
1147  262F- 60                 RTS
1148                   *
1149                   * P-CODE 30: OPNW
1150                   *****************
1151                   *
1152  2630- A9 20      OPNW    LDA =$20
1153  2632- 4C 21 26           JMP OPNR+2
1154                   *
1155                   * P-CODE 31: CLOS
1156                   *****************
1157                   *
1158                   * NO AUTOMATIC ERROR CHECKING
1159                   *

----------------------------------------------------------------------

R65 PASCAL RUNTIME VERSION 5.8     09/02/24   R65 ASSEMBLER  PAGE 24

1160  2635- A6 00      CLOS    LDX ACCU
1161  2637- CA                 DEX
1162  2638- CA                 DEX
1163  2639- 20 19 2F           JSR CLOSRA
1164  263C- 4C EF 22           JMP GETS2
1165                   *
1166                   * P-CODE 32: PRTI
1167                   *****************
1168                   *
1169  263F- 20 AB 24   PRTI    JSR FETCH
1170  2642- 48                 PHA
1171  2643- 29 7F              AND =$7F
1172  2645- 20 22 2A           JSR PRTCHR0
1173  2648- 68                 PLA
1174  2649- 10 F4              BPL PRTI
1175  264B- 60                 RTS
1176                   *
1177                   * P-CODE 33: GHGH       (GET HIGH)
1178                   *****************
1179                   *
1180  264C- A5 01      GHGH    LDA ACCU+1
1181  264E- 85 00              STA ACCU
1182                   *
1183                   * P-CODE 34: GLOW
1184                   *****************
1185                   *
1186  2650- A9 00      GLOW    LDA =0
1187  2652- 85 01              STA ACCU+1
1188  2654- 60                 RTS
1189                   *
1190                   * P-CODE 35:PHGH
1191                   ****************
1192                   *
1193  2655- A0 7E      PHGH    LDY =126
1194  2657- B1 08              LDA (SP),Y
1195  2659- 85 01              STA ACCU+1
1196  265B- 4C FE 20           JMP DECS2
1197                   *
1198                   * P-CODE 36: PLOW
1199                   *****************
1200                   *
1201  265E- A0 7E      PLOW    LDY =126
1202  2660- B1 08              LDA (SP),Y
1203  2662- 85 00              STA ACCU
1204  2664- 4C FE 20           JMP DECS2
1205                   *
1206                   * P-CODE 37: GSEC
1207                   *****************
1208                   * DEVICE HAS TO BE SET  ########
1209                   *

----------------------------------------------------------------------

R65 PASCAL RUNTIME VERSION 5.8     09/02/24   R65 ASSEMBLER  PAGE 25

1210  2667- 20 79 26   GSEC    JSR PREPSEC
1211  266A- 20 95 20           JSR READ
1212  266D- 4C A1 20           JMP ENDDO
1213                   *
1214                   * P-CODE 38: PSEC
1215                   *****************
1216                   * DEVICE HAS TO BE SET  ########
1217                   *
1218  2670- 20 79 26   PSEC    JSR PREPSEC
1219  2673- 20 98 20           JSR WRITE
1220  2676- 4C A1 20           JMP ENDDO
1221                   *
1222  2679- A5 00      PREPSEC LDA ACCU
1223  267B- A6 01              LDX ACCU+1
1224  267D- 85 E0              STA DATA
1225  267F- 86 E1              STX DATA+1
1226  2681- A0 7E              LDY =126
1227  2683- B1 08              LDA (SP),Y
1228  2685- 85 DE              STA SECTOR
1229  2687- A0 7C              LDY =124
1230  2689- B1 08              LDA (SP),Y
1231  268B- 85 DD              STA TRACK
1232  268D- A5 08              LDA SP
1233  268F- 38                 SEC
1234  2690- E9 04              SBC =4
1235  2692- 20 03 21           JSR DECS2+5
1236  2695- 20 EF 22           JSR GETS2
1237  2698- 4C 9B 20           JMP PREPDO
1238                   *
1239                   * P-CODE 39: NBYT       LOAD N BYTES IMMEDIATELY
1240                   *****************
1241                   *
1242  269B- 20 AB 24   NBYT    JSR FETCH
1243  269E- AA                 TAX             BYTE COUNTER
1244  269F- 20 C2 22   NBYT1   JSR COPY
1245  26A2- 20 AB 24           JSR FETCH
1246  26A5- 84 01              STY ACCU+1      Y=0
1247  26A7- 85 00              STA ACCU
1248  26A9- CA                 DEX
1249  26AA- D0 F3              BNE NBYT1
1250  26AC- 60                 RTS
1251                   *
1252                   * P-CODE 3A: NWRD       LOAD N WORD IMMEDIATELY
1253                   *****************
1254                   *
1255  26AD- 20 AB 24   NWRD    JSR FETCH
1256  26B0- AA                 TAX             WORD COUNTER
1257  26B1- 20 C2 22   NWRD1   JSR COPY
1258  26B4- 20 AB 24           JSR FETCH
1259  26B7- 85 00              STA ACCU

----------------------------------------------------------------------

R65 PASCAL RUNTIME VERSION 5.8     09/02/24   R65 ASSEMBLER  PAGE 26

1260  26B9- 20 AB 24           JSR FETCH
1261  26BC- 85 01              STA ACCU+1
1262  26BE- CA                 DEX
1263  26BF- D0 F0              BNE NWRD1
1264  26C1- 60                 RTS
1265                   *
1266                   * P-CODE 3B: LODN       LOAD N MORE WORDS
1267                   *****************
1268                   *
1269  26C2- 20 AB 24   LODN    JSR FETCH
1270  26C5- AA                 TAX
1271  26C6- 20 C2 22   LODN1   JSR COPY
1272  26C9- A5 19              LDA ABASE
1273  26CB- 18                 CLC
1274  26CC- 69 02              ADC =2
1275  26CE- 85 19              STA ABASE
1276  26D0- 90 02              BCC *+4
1277  26D2- E6 1A              INC ABASE+1
1278  26D4- 20 17 25           JSR LOAD2
1279  26D7- CA                 DEX
1280  26D8- D0 EC              BNE LODN1
1281  26DA- 60                 RTS
1282                   *
1283                   * P-CODE 3C: STON       STORE N MORE WORDS
1284                   *****************
1285                   *
1286  26DB- 20 AB 24   STON    JSR FETCH
1287  26DE- AA                 TAX
1288  26DF- A5 19      STON1   LDA ABASE
1289  26E1- 38                 SEC
1290  26E2- E9 02              SBC =2
1291  26E4- 85 19              STA ABASE
1292  26E6- B0 02              BCS *+4
1293  26E8- C6 1A              DEC ABASE+1
1294  26EA- 20 7C 25           JSR STOR2
1295  26ED- CA                 DEX
1296  26EE- D0 EF              BNE STON1
1297  26F0- 60                 RTS
1298                   *
1299                   * P-CODE 3D: LODI       LOAD INDIRECT
1300                   *****************
1301                   *
1302  26F1- 20 F7 26   LODI    JSR GETACC
1303  26F4- 4C 17 25           JMP LOAD2
1304                   *
1305  26F7- A5 00      GETACC  LDA ACCU
1306  26F9- A6 01              LDX ACCU+1
1307  26FB- 38                 SEC
1308  26FC- E9 80              SBC =128
1309  26FE- B0 01             BCS *+3

----------------------------------------------------------------------

R65 PASCAL RUNTIME VERSION 5.8     09/02/24   R65 ASSEMBLER  PAGE 27

1310  2700- CA                 DEX
1311  2701- 85 19              STA ABASE
1312  2703- 86 1A              STX ABASE+1
1313  2705- 60                 RTS
1314                   *
1315                   * P-CODE 3E: STOI       STORE INDIRECT
1316                   *****************
1317                   *
1318  2706- 20 F7 26   STOI    JSR GETACC
1319  2709- 20 EF 22           JSR GETS2
1320  270C- 4C 7C 25           JMP STOR2
1321                   *
1322                   * P-CODE 3F: EXST       EXCHANGE STACK
1323                   *****************
1324                   *
1325  270F- A0 7E      EXST    LDY =126
1326  2711- B1 08              LDA (SP),Y
1327  2713- AA                 TAX
1328  2714- A5 00              LDA ACCU
1329  2716- 91 08              STA (SP),Y
1330  2718- 86 00              STX ACCU
1331  271A- C8                 INY
1332  271B- B1 08              LDA (SP),Y
1333  271D- AA                 TAX
1334  271E- A5 01              LDA ACCU+1
1335  2720- 91 08              STA (SP),Y
1336  2722- 86 01              STX ACCU+1
1337  2724- 60                 RTS
1338                   *
1339                   * P-CODE 40 TIND        TEST INDEX
1340                   ****************
1341                   *
1342  2725- 20 AB 24   TIND    JSR FETCH       LOWLIM-1
1343  2728- AA                 TAX
1344  2729- 20 AB 24           JSR FETCH
1345  272C- E4 00              CPX ACCU
1346  272E- E5 01              SBC ACCU+1
1347  2730- 70 0E              BVS TINDERR
1348                   *
1349  2732- 20 AB 24           JSR FETCH       HIGHLIM
1350  2735- AA                 TAX
1351  2736- 20 AB 24           JSR FETCH
1352  2739- E4 00              CPX ACCU
1353  273B- E5 01              SBC ACCU+1
1354  273D- 90 01              BCC TINDERR
1355  273F- 60                 RTS
1356                   *
1357  2740- A2 83      TINDERR LDX =$83        RUNTIME ERROR
1358  2742- 4C 82 2A           JMP PERROR      INDEX OUT OF BOUNDS
1359                   *

----------------------------------------------------------------------

R65 PASCAL RUNTIME VERSION 5.8     09/02/24   R65 ASSEMBLER  PAGE 28

1360                   * P-CODE 41: RUNP       RUN PROGRAM
1361                   *****************
1362                   *
1363  2745- A9 00      RUNP    LDA =0
1364  2747- 85 C0              STA LSTLIN      CLEAR LSTLIN
1365  2749- 85 C1              STA LSTLIN+1
1366  274B- A0 82                      LDY =130
1367  274D- A5 00              LDA ACCU        SAVE ACCU
1368  274F- A6 01              LDX ACCU+1
1369  2751- 20 7D 27           JSR SAVE
1370  2754- A5 17              LDA BASE        SAVE BASE
1371  2756- A6 18              LDX BASE+1
1372  2758- 20 7D 27           JSR SAVE
1373  275B- A5 0A              LDA PC          SAVE PC
1374  275D- A6 0B              LDX PC+1
1375  275F- 20 7D 27           JSR SAVE
1376  2762- A5 11              LDA STPROG      SAVE STPROG
1377  2764- A6 12              LDX STPROG+1
1378  2766- 20 7D 27           JSR SAVE
1379  2769- A5 13              LDA EOPROG      SAVE EOPROG
1380  276B- A6 14              LDX EOPROG+1
1381  276D- 20 7D 27           JSR SAVE
1382  2770- A5 08              LDA SP          GET SP
1383  2772- A6 09              LDX SP+1
1384  2774- 18                 CLC
1385  2775- 69 8C              ADC =140
1386  2777- 90 01              BCC *+3
1387  2779- E8                 INX             COMPUTE NEW STPROG
1388  277A- 4C 4F 2B           JMP EXEC3
1389                   *
1390                   *
1391  277D- 91 08      SAVE    STA (SP),Y
1392  277F- C8                 INY
1393  2780- 8A                 TXA
1394  2781- 91 08              STA (SP),Y
1395  2783- C8                 INY
1396  2784- 60                 RTS
1397                   *
1398                   *
1399  2785- 88         GETBACK DEY
1400  2786- B1 08              LDA (SP),Y
1401  2788- AA                 TAX
1402  2789- 88                 DEY
1403  278A- B1 08              LDA (SP),Y
1404  278C- 60                 RTS
1405                   *
1406                   *
1407                   * P-CODE 42: ADDF
1408                   *****************
1409                   *

----------------------------------------------------------------------

R65 PASCAL RUNTIME VERSION 5.8     09/02/24   R65 ASSEMBLER  PAGE 29

1410  278D- 20 AA 27   ADDF    JSR GETFLP2
1411  2790- 20 09 2D           JSR FADD
1412                   *
1413  2793- A5 08      PUTFLP0 LDA SP          DECREMENT SP BY 4
1414  2795- 38                 SEC
1415  2796- E9 04              SBC =4
1416  2798- 85 08              STA SP
1417  279A- B0 02              BCS PUTFLP
1418  279C- C6 09              DEC SP+1
1419  279E- A5 02      PUTFLP  LDA M1+1        AND SAVE HALF OF NUMBER
1420  27A0- A0 7E              LDY =126
1421  27A2- 91 08              STA (SP),Y
1422  27A4- C8                 INY
1423  27A5- A5 03              LDA M1+2
1424  27A7- 91 08              STA (SP),Y
1425  27A9- 60                 RTS
1426                   *
1427  27AA- A0 7A      GETFLP2 LDY =122        GET SECOND NUMBER
1428  27AC- B1 08              LDA (SP),Y
1429  27AE- 85 1D              STA M2+1
1430  27B0- C8                 INY
1431  27B1- B1 08              LDA (SP),Y
1432  27B3- 85 1E              STA M2+2
1433  27B5- C8                 INY
1434  27B6- B1 08              LDA (SP),Y
1435  27B8- 85 1B              STA X2
1436  27BA- C8                 INY
1437  27BB- B1 08              LDA (SP),Y
1438  27BD- 85 1C              STA M2
1439  27BF- A0 7E      GETFLP  LDY =126        AND HALF OF FIRST
1440  27C1- B1 08              LDA (SP),Y
1441  27C3- 85 02              STA M1+1
1442  27C5- C8                 INY
1443  27C6- B1 08              LDA (SP),Y
1444  27C8- 85 03              STA M1+2
1445  27CA- 60                 RTS
1446                   *
1447                   * P-CODE 43: SUBF
1448                   *****************
1449                   *
1450  27CB- 20 AA 27   SUBF    JSR GETFLP2
1451  27CE- 20 03 2D           JSR FSUB
1452  27D1- 4C 93 27           JMP PUTFLP0
1453                   *
1454                   * P-CODE 44: MULF
1455                   *****************
1456                   *
1457  27D4- 20 AA 27   MULF    JSR GETFLP2
1458  27D7- 20 30 2D           JSR FMUL
1459  27DA- 4C 93 27           JMP PUTFLP0

----------------------------------------------------------------------

R65 PASCAL RUNTIME VERSION 5.8     09/02/24   R65 ASSEMBLER  PAGE 30

1460                   *
1461                   * P-CODE 45: DIVF
1462                   *****************
1463                   *
1464  27DD- 20 AA 27   DIVF    JSR GETFLP2
1465  27E0- 20 56 2D           JSR FDIV
1466  27E3- 4C 93 27           JMP PUTFLP0
1467                   *
1468                   * P-CODE 46: FLOF
1469                   *****************
1470                   *
1471  27E6- A5 00      FLOF    LDA ACCU
1472  27E8- 85 02              STA M1+1        HIGH BYTE IS IN ACCU
1473                   *                       SAME AS M1
1474  27EA- 20 E5 2C           JSR FLOAT
1475  27ED- 20 D1 22           JSR INCS2
1476  27F0- 4C 9E 27           JMP PUTFLP
1477                   *
1478                   * P-CODE 47: FIXF
1479                   *****************
1480                   *
1481  27F3- 20 BF 27   FIXF    JSR GETFLP
1482  27F6- 20 A3 2D           JSR FIX
1483  27F9- A5 02              LDA M1+1
1484  27FB- 85 00              STA ACCU
1485  27FD- 4C FE 20          JMP DECS2
1486                   *
1487                   * P-CODE 48: FEQU       =
1488                   *****************
1489                   *
1490  2800- 20 21 28   FEQU    JSR TESTF
1491  2803- F0 12              BEQ TRUE
1492                   *
1493  2805- A2 00      FALSE   LDX =0
1494  2807- 86 00              STX ACCU
1495  2809- 86 01              STX ACCU+1
1496  280B- A5 08      DECS6   LDA SP
1497  280D- 38                 SEC
1498  280E- E9 06              SBC =6
1499  2810- 85 08              STA SP
1500  2812- B0 02              BCS *+4
1501  2814- C6 09              DEC SP+1
1502  2816- 60                 RTS
1503                   *
1504  2817- A2 01      TRUE    LDX =1
1505  2819- 86 00              STX ACCU
1506  281B- CA                 DEX
1507  281C- 86 01              STX ACCU+1
1508  281E- 4C 0B 28           JMP DECS6
1509                   *

----------------------------------------------------------------------

R65 PASCAL RUNTIME VERSION 5.8     09/02/24   R65 ASSEMBLER  PAGE 31

1510  2821- 20 AA 27   TESTF   JSR GETFLP2
1511  2824- 20 03 2D           JSR FSUB
1512  2827- A5 01              LDA M1
1513  2829- 60                 RTS
1514                   *
1515                   * P-CODE 49: FNEQ       <>
1516                   *****************
1517                   *
1518  282A- 20 21 28   FNEQ    JSR TESTF
1519  282D- D0 E8              BNE TRUE
1520  282F- F0 D4              BEQ FALSE
1521                   *
1522                   * P-CODE 4A: FLES       <
1523                   *****************
1524                   *
1525  2831- 20 21 28   FLES    JSR TESTF
1526  2834- 10 CF              BPL FALSE
1527  2836- 30 DF              BMI TRUE
1528                   *
1529                   * P-CODE 4B: FGRE       >=
1530                   *****************
1531                   *
1532  2838- 20 21 28   FGRE    JSR TESTF
1533  283B- 10 DA              BPL TRUE
1534  283D- 30 C6              BMI FALSE
1535                   *
1536                   * P-CODE 4C: FGRT       >
1537                   *****************
1538                   *
1539  283F- 20 21 28   FGRT    JSR TESTF
1540  2842- 30 C1              BMI FALSE
1541  2844- F0 BF              BEQ FALSE
1542  2846- 10 CF              BPL TRUE
1543                   *
1544                   * P-CODE 4D: FLEE       <=
1545                   *****************
1546                   *
1547  2848- 20 21 28   FLEE    JSR TESTF
1548  284B- 30 CA              BMI TRUE
1549  284D- F0 C8              BEQ TRUE
1550  284F- 10 B4              BPL FALSE
1551                   *
1552                   * P-CODE 4E: FCOM       COMPLEMENT
1553                   *****************
1554                   *
1555  2851- 20 BF 27   FCOM    JSR GETFLP
1556  2854- 20 48 2D           JSR FCOMPL
1557  2857- 4C 9E 27           JMP PUTFLP
1558                   *
1559                   *

----------------------------------------------------------------------

R65 PASCAL RUNTIME VERSION 5.8     09/02/24   R65 ASSEMBLER  PAGE 32

1560                   * P-CODE 4F: TFER       TEST FILE ERROR
1561                   *****************
1562                   *
1563  285A- A6 23      TFER    LDX IOCHECK
1564  285C- F0 04              BEQ TFER1
1565  285E- A6 DB              LDX FILERR
1566  2860- D0 01              BNE TFER2
1567  2862- 60         TFER1   RTS             OK
1568                   *
1569  2863- 4C 82 2A   TFER2   JMP PERROR
1570                   *
1571                   * P-CODE 50: OPRA       OPEN RA-FILE
1572                   *****************
1573                   *
1574  2866- 20 C2 22   OPRA    JSR COPY        SAVE ACCU
1575  2869- 20 AA 2D           JSR OPENRA      OPEN FILE
1576  286C- C8                 INY
1577  286D- C8                 INY
1578  286E- 84 00              STY ACCU        SAVE FILE NO
1579  2870- A9 00              LDA =0
1580  2872- 85 01              STA ACCU+1
1581  2874- 60                 RTS
1582                   *
1583                   * P-CODE 51: GETR       GET FROM RA FILE
1584                   *****************
1585                   *
1586                   * NO AUTOMATIC ERROR CHECKING
1587                   *
1588  2875- 20 82 28   GETR    JSR GETR1
1589  2878- 20 B1 2E           JSR GETBYTE
1590  287B- 85 00              STA ACCU
1591  287D- A9 00              LDA =0
1592  287F- 85 01              STA ACCU+1
1593  2881- 60                 RTS
1594                   *
1595  2882- 20 FE 20   GETR1   JSR DECS2
1596  2885- A0 80              LDY =128
1597  2887- B1 08              LDA (SP),Y      GET FILE NO
1598  2889- AA                 TAX
1599  288A- CA                 DEX
1600  288B- CA                 DEX
1601  288C- A5 00              LDA ACCU        GET POINTER
1602  288E- A4 01              LDY ACCU+1
1603  2890- 60                 RTS
1604                   *
1605                   * P-CODE 52: PUTR       PUT TO RA=FILE
1606                   *****************
1607                   *
1608                   * NO AUTOMATIC ERROR CHECKING
1609                   *

----------------------------------------------------------------------

R65 PASCAL RUNTIME VERSION 5.8     09/02/24   R65 ASSEMBLER  PAGE 33

1610  2891- A5 00      PUTR    LDA ACCU
1611  2893- 85 FE              STA KCHAR
1612  2895- 20 EF 22           JSR GETS2
1613  2898- 20 82 28           JSR GETR1
1614  289B- 20 CF 2E           JSR PUTBYTE
1615  289E- 4C EF 22           JMP GETS2
1616                   *
1617                   * P-CODE 53: SWA2       SWAP 2 AND 3 ON STACK
1618                   *****************
1619                   *
1620  28A1- A0 7E      SWA2    LDY =126
1621  28A3- 20 A8 28           JSR SWA3
1622  28A6- A0 7F              LDY =127
1623                   *
1624  28A8- B1 08      SWA3    LDA (SP),Y
1625  28AA- AA                 TAX
1626  28AB- 88                 DEY
1627  28AC- 88                 DEY
1628  28AD- B1 08              LDA (SP),Y
1629  28AF- C8                 INY
1630  28B0- C8                 INY
1631  28B1- 91 08              STA (SP),Y
1632  28B3- 8A                 TXA
1633  28B4- 88                 DEY
1634  28B5- 88                 DEY
1635  28B6- 91 08              STA (SP),Y
1636  28B8- 60                 RTS
1637                   *
1638                   * P-CODE 54: LDXI       PREPARE LOAD CPNT
1639                   *****************
1640                   *
1641  28B9- A0 00      LDXI    LDY =0          INDIRECTION
1642  28BB- A5 01              LDA ACCU+1
1643  28BD- F0 4A              BEQ NILERR
1644  28BF- B1 00              LDA (ACCU),Y
1645  28C1- 85 00              STA ACCU
1646  28C3- 84 01              STY ACCU+1
1647  28C5- 60                 RTS
1648                   *
1649                   * P-CODE 55: STXI       STORE CPNT INDEXED
1650                   *****************
1651                   *
1652  28C6- 20 AB 24   STXI    JSR FETCH
1653  28C9- AA                 TAX
1654  28CA- A0 7E              LDY =126
1655  28CC- B1 08              LDA (SP),Y
1656  28CE- 85 21              STA ARG2
1657  28D0- C8                 INY
1658  28D1- B1 08              LDA (SP),Y
1659  28D3- 85 22              STA ARG2+1      ARG2 IS INDEX

----------------------------------------------------------------------

R65 PASCAL RUNTIME VERSION 5.8     09/02/24   R65 ASSEMBLER  PAGE 34

1660  28D5- 20 AB 24           JSR FETCH
1661  28D8- 85 1B              STA ARG1
1662  28DA- 20 AB 24           JSR FETCH
1663  28DD- 85 1C              STA ARG1+1      ARG1 IS ADDRESS
1664  28DF- 20 FE 20           JSR DECS2       OF VARIABLE
1665  28E2- 20 40 25           JSR FBASE3
1666  28E5- 20 0E 29           JSR INDI        INDIRECTION
1667  28E8- 18                 CLC
1668  28E9- A5 19              LDA ABASE
1669  28EB- 65 21              ADC ARG2        ADD INDEX
1670  28ED- 85 19              STA ABASE
1671  28EF- A5 1A              LDA ABASE+1
1672  28F1- 65 22              ADC ARG2+1
1673  28F3- 85 1A              STA ABASE+1
1674  28F5- C5 14              CMP EOPROG+1    DO NOT ALLOW WRITING
1675  28F7- 90 0B              BCC PRGERR      INTO PROGRAM SPACE
1676  28F9- F0 09              BEQ PRGERR      CHECK ONLY HIGH BYTE
1677  28FB- A0 00              LDY =0          MUST BE LARGER
1678  28FD- A5 00              LDA ACCU
1679  28FF- 91 19             STA (ABASE),Y   ONLY ONE BYTE
1680  2901- 4C EF 22           JMP GETS2
1681                   *
1682  2904- A2 90      PRGERR  LDX =$90
1683  2906- 4C 82 2A           JMP PERROR
1684                   *
1685  2909- A2 89      NILERR  LDX =$89        CPNT IS NIL
1686  290B- 4C 82 2A           JMP PERROR
1687                   *
1688  290E- A0 81      INDI    LDY =129        INDIRECTION
1689  2910- B1 19              LDA (ABASE),Y
1690  2912- F0 F5              BEQ NILERR      NIL STRING
1691  2914- AA                 TAX
1692  2915- 88                 DEY
1693  2916- B1 19              LDA (ABASE),Y   POINTER IS IN A,X
1694  2918- 85 19              STA ABASE
1695  291A- 86 1A              STX ABASE+1
1696  291C- 60                 RTS
1697                   *
1698                   * P-CODE 56: CPNT       CPNT CONSTANT
1699                   *****************
1700                   *
1701  291D- 20 C2 22   CPNT    JSR COPY
1702  2920- 20 AB 24           JSR FETCH       STRING SIZE IN A
1703  2923- AA                 TAX
1704  2924- E8                 INX
1705  2925- A5 0A              LDA PC          PC IS POINTER
1706  2927- 85 00              STA ACCU        TO RETURN
1707  2929- A5 0B              LDA PC+1
1708  292B- 85 01              STA ACCU+1
1709  292D- 8A                 TXA

----------------------------------------------------------------------

R65 PASCAL RUNTIME VERSION 5.8     09/02/24   R65 ASSEMBLER  PAGE 35

1710  292E- 18                 CLC
1711  292F- 65 0A              ADC PC          ADVANCE PC
1712  2931- 85 0A              STA PC
1713  2933- 90 02              BCC *+4
1714  2935- E6 0B              INC PC+1
1715  2937- 60                 RTS
1716                   *
1717                   * P-CODE 57: WRCP       WRITE CPNT
1718                   *****************
1719                   *
1720  2938- A0 00      WRCP    LDY =0
1721  293A- B1 00              LDA (ACCU),Y
1722  293C- F0 08              BEQ WRCP2
1723  293E- 20 22 2A           JSR PRTCHR0     END MARK
1724  2941- C8                 INY
1725  2942- C0 3F              CPY =63
1726  2944- D0 F4              BNE WRCP+2
1727  2946- 4C EF 22   WRCP2   JMP GETS2
1728                   *
1729                   * P-CODE 58: ADPS       ADD PROGRAM START
1730                   *****************
1731                   *
1732  2949- 18         ADPS    CLC
1733  294A- A5 11              LDA STPROG
1734  294C- 65 00              ADC ACCU
1735  294E- 85 00              STA ACCU
1736  2950- A5 12              LDA STPROG+1
1737  2952- 65 01              ADC ACCU+1
1738  2954- 85 01              STA ACCU+1
1739  2956- 60                 RTS
1740                   *
1741                   * P-CODE 59: LINE      SOURCE LINE
1742                   *****************
1743                   *
1744  2957- 20 AB 24   LINE    JSR FETCH
1745  295A- 85 C0              STA LSTLIN
1746  295C- 20 AB 24           JSR FETCH
1747  295F- 85 C1              STA LSTLIN+1
1748  2961- C5 C3              CMP BRKPNT+1
1749  2963- D0 63              BNE LINE9
1750  2965- A5 C0              LDA LSTLIN
1751  2967- C5 C2              CMP BRKPNT
1752  2969- D0 5D              BNE LINE9
1753                   *
1754  296B- 20 27 E0           JSR PRTINF
1755  296E- 0D 0A 42           BYT $D,$A,'Breakpoint at line '+128
1755  2971- 72 65 61 
1755  2974- 6B 70 6F 
1755  2977- 69 6E 74 
1755  297A- 20 61 74 

----------------------------------------------------------------------

R65 PASCAL RUNTIME VERSION 5.8     09/02/24   R65 ASSEMBLER  PAGE 36

1755  297D- 20 6C 69 
1755  2980- 6E 65 A0 
1756  2983- A5 C0              LDA LSTLIN
1757  2985- A6 C1              LDX LSTLIN+1
1758  2987- 20 C9 29           JSR PRTL
1759  298A- 20 27 E0           JSR PRTINF
1760  298D- 0D 8A              BYT $D,$8A
1761                   *
1762  298F- 20 00 E0   LINE6   JSR GETKEY
1763  2992- C9 00              CMP =0          ESC?
1764  2994- F0 2F              BEQ LINE8
1765  2996- A0 00      LINE5   LDY =0
1766  2998- B1 0A              LDA (PC),Y
1767  299A- C9 59              CMP =$59
1768  299C- D0 1D              BNE LINE7
1769  299E- 20 AB 24           JSR FETCH
1770  29A1- 20 57 29           JSR LINE        EXECUTE LINE
1771  29A4- 20 27 E0           JSR PRTINF
1772  29A7- 4C 69 6E           BYT 'Line '+$80
1772  29AA- 65 A0 
1773  29AC- A5 C0              LDA LSTLIN
1774  29AE- A6 C1              LDX LSTLIN+1
1775  29B0- 20 C9 29           JSR PRTL
1776  29B3- 20 27 E0           JSR PRTINF
1777  29B6- 0D 8A              BYT $D,$8A
1778  29B8- 4C 8F 29           JMP LINE6
1779                   *
1780  29BB- AE FF 17   LINE7   LDX SAVS
1781  29BE- 9A                 TXS
1782  29BF- 20 AA 2B           JSR EXCODE      EXECUTE NEXT CODE
1783  29C2- 4C 96 29           JMP LINE5
1784                   *
1785  29C5- 4C 10 20   LINE8   JMP STOP        STOP EXECUTION
1786                   *
1787  29C8- 60         LINE9   RTS
1788                   *
1789                   *
1790                   * PRTL: PRINT A,X, KEEP ACCU,ARG2,ARG3
1791                   **************************************
1792                   *
1793  29C9- A8         PRTL    TAY             PRESERVE ACCU
1794  29CA- A5 00              LDA ACCU
1795  29CC- 48                 PHA
1796  29CD- A5 01              LDA ACCU+1
1797  29CF- 48                 PHA
1798  29D0- 84 00              STY ACCU        SET ACCU TO A,X
1799  29D2- 86 01              STX ACCU+1
1800                   *
1801  29D4- A2 05              LDX =5          PRESERVE ARG3,ARG2
1802  29D6- B5 1D      PRTL1   LDA ARG3,X

----------------------------------------------------------------------

R65 PASCAL RUNTIME VERSION 5.8     09/02/24   R65 ASSEMBLER  PAGE 37

1803  29D8- 48                 PHA
1804  29D9- CA                 DEX
1805  29DA- 10 FA              BPL PRTL1
1806                   *
1807  29DC- 20 B8 23           JSR PRTN
1808                   *
1809  29DF- A2 00              LDX =0          RESTORE ARG3,ARG2
1810  29E1- 68         PRTL2   PLA
1811  29E2- 95 1D              STA ARG3,X
1812  29E4- E8                 INX
1813  29E5- E0 06              CPX =6
1814  29E7- D0 F8              BNE PRTL2
1815                   *
1816  29E9- 68                 PLA             RESTORE ACCU
1817  29EA- 85 01              STA ACCU+1
1818  29EC- 68                 PLA
1819  29ED- 85 00              STA ACCU
1820  29EF- 4C D1 22           JMP INCS2       WAS DECR BY PRTN
1821                   *
1822                   * GETCHR0: GET A CHAR FROM SPECIFIED FILE
1823                   *****************************************
1824                   *
1825  29F2- A6 0D      GETCHR0 LDX DEVICE
1826  29F4- D0 1A              BNE GETCHR4
1827                   *
1828  29F6- A6 15      GETCHR1 LDX BUFFPN
1829  29F8- 10 06              BPL GETCHR2
1830  29FA- 20 1C 23           JSR RLIN
1831  29FD- 4C F6 29          JMP GETCHR1
1832                   *
1833  2A00- E4 16      GETCHR2 CPX ENDBUF      IS IS END OF BUFFER?
1834  2A02- D0 07              BNE GETCHR3
1835  2A04- A9 FF              LDA =$FF
1836  2A06- 85 15              STA BUFFPN
1837  2A08- A9 0D              LDA =$D
1838  2A0A- 60                 RTS
1839                   *
1840  2A0B- E6 15      GETCHR3 INC BUFFPN
1841  2A0D- B5 24              LDA LINBUF,X
1842  2A0F- 60                 RTS
1843                   *
1844  2A10- CA         GETCHR4 DEX
1845  2A11- D0 03              BNE GETCHR5     SKIP, IF NOT KEY
1846  2A13- 4C 00 E0           JMP GETKEY
1847                   *
1848  2A16- CA         GETCHR5 DEX
1849  2A17- A9 00              LDA =0
1850  2A19- 85 DA              STA FILFLG
1851  2A1B- 20 18 F0           JSR READCH
1852  2A1E- 4C 5A 28           JMP TFER

----------------------------------------------------------------------

R65 PASCAL RUNTIME VERSION 5.8     09/02/24   R65 ASSEMBLER  PAGE 38

1853                   *
1854  2A21- 60         GETCHR6 RTS
1855                   *
1856                   * PRTCHR0: PRINT CHAR TO SPECIFIED FILE
1857                   ***************************************
1858                   *
1859  2A22- A6 C5      PRTCHR0 LDX DEVPNT+1
1860  2A24- D0 3B              BNE PRTCHR7     WRITE TO STRING
1861  2A26- A6 0D              LDX DEVICE
1862  2A28- 30 16              BMI PRTCHR3     Plot text?
1863  2A2A- D0 03              BNE PRTCHR1
1864  2A2C- 4C 09 E0           JMP PRTCHR
1865                   *
1866  2A2F- CA         PRTCHR1 DEX
1867  2A30- D0 03              BNE PRTCHR2
1868  2A32- 4C 0C E0           JMP AUTOPR
1869                   *
1870  2A35- CA         PRTCHR2 DEX
1871  2A36- A0 00              LDY =0
1872  2A38- 84 DA              STY FILFLG
1873  2A3A- 20 1B F0           JSR WRITCH
1874  2A3D- 4C 5A 28           JMP TFER
1875                   *
1876  2A40- C9 0D      PRTCHR3 CMP =$0D        PLOT CR?
1877  2A42- D0 06              BNE PRTCHR4
1878  2A44- A9 00              LDA =0
1879  2A46- 8D AE 03           STA GRX
1880  2A49- 60         PRTCHRE RTS
1881                   *
1882  2A4A- C9 0A      PRTCHR4 CMP =$0A        PLOT LF?
1883  2A4C- D0 0D              BNE PRTCHR6
1884  2A4E- AD AF 03           LDA GRY
1885  2A51- E9 08              SBC =8
1886  2A53- 10 02              BPL PRTCHR5
1887  2A55- A9 00              LDA =0
1888                   *
1889  2A57- 8D AF 03   PRTCHR5 STA GRY
1890  2A5A- 60                 RTS
1891                   *
1892  2A5B- 8D B0 03   PRTCHR6 STA GRC
1893  2A5E- 4C 18 C8           JMP APLOTCH     PLOT THE CHARACTER
1894                   *
1895  2A61- 48         PRTCHR7 PHA             SAVE CHARACTER
1896  2A62- 84 1D              STY ARG3                TO PRESERVE Y
1897                   *
1898  2A64- A0 FF              LDY =255
1899  2A66- C8         PRTCHR8 INY
1900  2A67- C0 3E              CPY =62         FIND END MARK
1901  2A69- B0 15              BCS PRTCHR9     MAX SIZE OF STRING
1902  2A6B- B1 C4              LDA (DEVPNT),Y

----------------------------------------------------------------------

R65 PASCAL RUNTIME VERSION 5.8     09/02/24   R65 ASSEMBLER  PAGE 39

1903  2A6D- D0 F7              BNE PRTCHR8
1904                   *
1905  2A6F- 68                 PLA             GET CHAR
1906  2A70- 91 C4              STA (DEVPNT),Y  CHARACTER TO CPNT
1907  2A72- A9 00              LDA =0
1908  2A74- C8                 INY
1909  2A75- 91 C4              STA (DEVPNT),Y  END MARK TO CPNT
1910  2A77- E6 C4              INC DEVPNT
1911  2A79- D0 02              BNE *+4
1912  2A7B- E6 C5              INC DEVPNT+1
1913  2A7D- A4 1D              LDY ARG3                RESTORE Y
1914  2A7F- 60                 RTS
1915                   *
1916  2A80- A2 91      PRTCHR9 LDX =$91        STRING OVERFLOW
1917                   *
1918                   * PERROR: PASCAL RUNTIME ERROR
1919                   ******************************
1920                   * ERROR IN X (BCD)
1921                   *
1922  2A82- A9 2F      PERROR  LDA =47         CHECK CHARS/LINE
1923  2A84- CD 8A 17           CMP NUMCHR
1924  2A87- F0 08              BEQ PERROR0
1925  2A89- 8D 8A 17           STA NUMCHR      SET TO 48 CHARS/LINE
1926  2A8C- 20 27 E0           JSR PRTINF      AND CLEAR SCREEN
1927  2A8F- 01 91              BYT $01,$91     HOME,CLRSCR
1928  2A91- 20 27 E0   PERROR0 JSR PRTINF
1929  2A94- 0D 0A 07           BYT $D,$A,7,'Pascal error '+128
1929  2A97- 50 61 73 
1929  2A9A- 63 61 6C 
1929  2A9D- 20 65 72 
1929  2AA0- 72 6F 72 
1929  2AA3- A0 
1930  2AA4- A9 00              LDA =0
1931  2AA6- 85 0D              STA DEVICE
1932  2AA8- 85 C4              STA DEVPNT
1933  2AAA- 85 C5              STA DEVPNT+1
1934  2AAC- 8A                 TXA
1935  2AAD- 85 0C              STA RUNERR
1936  2AAF- 20 2D E0           JSR PRTBYT
1937  2AB2- A5 0A              LDA PC
1938  2AB4- 38                 SEC
1939  2AB5- E5 11              SBC STPROG
1940  2AB7- 85 00              STA ACCU
1941  2AB9- A5 0B              LDA PC+1
1942  2ABB- E5 12              SBC STPROG+1
1943  2ABD- 85 01              STA ACCU+1
1944  2ABF- 30 3F              BMI PERROR1
1945  2AC1- A5 C0              LDA LSTLIN
1946  2AC3- 05 C1              ORA LSTLIN+1    LINE NUMB IS NOT 0?
1947  2AC5- D0 1D              BNE PERROR2     YES,SKIP WRITE

----------------------------------------------------------------------

R65 PASCAL RUNTIME VERSION 5.8     09/02/24   R65 ASSEMBLER  PAGE 40

1948  2AC7- 38                 SEC
1949  2AC8- A5 00              LDA ACCU
1950  2ACA- E9 01              SBC =1
1951  2ACC- 85 00              STA ACCU
1952  2ACE- A5 01              LDA ACCU+1
1953  2AD0- E9 00              SBC =0
1954  2AD2- 85 01              STA ACCU+1
1955  2AD4- 20 27 E0           JSR PRTINF
1956  2AD7- 20 61 74           BYT ' at PC '+128
1956  2ADA- 20 50 43 
1956  2ADD- A0 
1957  2ADE- 20 B8 23           JSR PRTN        WRITE PC
1958  2AE1- 4C FB 2A           JMP PERROR3
1959                   *
1960  2AE4- A5 C0      PERROR2 LDA LSTLIN
1961  2AE6- 85 00              STA ACCU
1962  2AE8- A5 C1              LDA LSTLIN+1
1963  2AEA- 85 01              STA ACCU+1
1964  2AEC- 20 27 E0           JSR PRTINF
1965  2AEF- 20 61 74           BYT ' at line '+128
1965  2AF2- 20 6C 69 
1965  2AF5- 6E 65 A0 
1966  2AF8- 20 B8 23           JSR PRTN        WRITE LINE NUMBER
1967                   *
1968  2AFB- 20 27 E0   PERROR3 JSR PRTINF
1969  2AFE- 0D 8A             BYT $D,$8A
1970                   *
1971  2B00- 4C 10 20   PERROR1 JMP STOP
1972                   *
1973                   *
1974                   * WARM START ENTRY POINT
1975                   ************************
1976                   *
1977  2B03- AD 81 17   WARMST  LDA SFLAG       SET PASCAL RUNTIME BIT
1978  2B06- 09 01              ORA =$01        IN SFLAG
1979  2B08- 8D 81 17           STA SFLAG
1980  2B0B- BA                 TSX
1981  2B0C- 8E FF 17           STX SAVS        SAVE STACK POINTER
1982  2B0F- A2 00              LDX =0
1983  2B11- 86 0B              STX PC+1
1984  2B13- 86 0D              STX DEVICE
1985  2B15- 86 C4              STX DEVPNT
1986  2B17- 86 C5              STX DEVPNT+1
1987  2B19- CA                 DEX
1988  2B1A- 86 16              STX ENDBUF
1989  2B1C- 86 23              STX IOCHECK
1990  2B1E- A2 00              LDX =0
1991                   *
1992  2B20- A0 00      EXEC    LDY =0
1993  2B22- 84 0B              STY PC+1

----------------------------------------------------------------------

R65 PASCAL RUNTIME VERSION 5.8     09/02/24   R65 ASSEMBLER  PAGE 41

1994  2B24- BD D2 2B           LDA EXTABLE,X
1995  2B27- 9D 20 03           STA FILNM1,X
1996  2B2A- E8                 INX
1997  2B2B- C8                 INY
1998  2B2C- C0 10              CPY =16
1999  2B2E- 90 F2              BCC EXEC+2
2000  2B30- A9 00              LDA =0
2001  2B32- 8D 30 03           STA FILCY1
2002                   *
2003  2B35- A9 00      EXECUTE LDA =0
2004  2B37- 85 DA              STA FILFLG
2005  2B39- AD 0B 20           LDA USEREND
2006  2B3C- AE 0C 20           LDX USEREND+1
2007  2B3F- 38                 SEC
2008  2B40- E9 90              SBC =144
2009  2B42- B0 01              BCS *+3
2010  2B44- CA                 DEX
2011  2B45- 85 0E              STA ENDSTK
2012  2B47- 86 0F              STX ENDSTK+1
2013                   *
2014  2B49- AD 09 20   EXEC1   LDA USERST
2015  2B4C- AE 0A 20           LDX USERST+1
2016  2B4F- 85 11      EXEC3   STA STPROG
2017  2B51- 86 12              STX STPROG+1
2018  2B53- 8D 31 03           STA FILSA1
2019  2B56- 8E 32 03           STX FILSA1+1
2020  2B59- 20 15 E8           JSR RDFILE      READ FILE TO EXECUTE
2021  2B5C- D0 07              BNE EXECE       PROGRAM NOT LOOADED?
2022                   *
2023  2B5E- AD 12 03           LDA FILSTP
2024  2B61- C9 52              CMP ='R'        IS PASCAL PROGRAM?
2025  2B63- F0 07              BEQ RUN
2026  2B65- A9 84      EXECE   LDA =$84        PASCAL RUNPROG ERROR
2027  2B67- 85 0C              STA RUNERR
2028  2B69- 4C 10 20           JMP STOP        SILENT ERROR
2029                   *
2030  2B6C- A0 00      RUN     LDY =0          READ END ADDRESS
2031  2B6E- B1 11              LDA (STPROG),Y  FROM FILE
2032  2B70- 18                 CLC
2033  2B71- 65 11              ADC STPROG
2034  2B73- 85 13              STA EOPROG
2035  2B75- C8                 INY
2036  2B76- B1 11              LDA (STPROG),Y
2037  2B78- 65 12              ADC STPROG+1
2038  2B7A- 85 14              STA EOPROG+1
2039  2B7C- A5 13              LDA EOPROG      GET END OF STACK
2040  2B7E- A6 14              LDX EOPROG+1
2041  2B80- 38                 SEC
2042  2B81- E9 80              SBC =128
2043  2B83- 85 17              STA BASE

----------------------------------------------------------------------

R65 PASCAL RUNTIME VERSION 5.8     09/02/24   R65 ASSEMBLER  PAGE 42

2044  2B85- 85 08              STA SP
2045  2B87- B0 01              BCS *+3
2046  2B89- CA                 DEX
2047  2B8A- 86 18              STX BASE+1
2048  2B8C- 86 09              STX SP+1
2049                   *
2050  2B8E- A5 11              LDA STPROG
2051  2B90- A6 12              LDX STPROG+1
2052  2B92- 18                 CLC
2053  2B93- 69 02              ADC =2
2054  2B95- 85 0A              STA PC
2055  2B97- 90 01              BCC *+3
2056  2B99- E8                 INX
2057  2B9A- 86 0B              STX PC+1
2058  2B9C- A9 00              LDA =0
2059  2B9E- 85 0C              STA RUNERR
2060  2BA0- AE FF 17   LOOP    LDX SAVS        RESTORE STACK POINTER
2061  2BA3- 9A                 TXS
2062  2BA4- 20 AA 2B           JSR EXCODE
2063  2BA7- 4C A0 2B           JMP LOOP
2064                   *
2065                   *
2066  2BAA- 20 AB 24   EXCODE  JSR FETCH
2067  2BAD- C9 5A              CMP =$5A        TEST CODENUMBER
2068  2BAF- 90 05              BCC *+7
2069  2BB1- A2 86      ILLC    LDX =$86        PASCAL RUNTIME ERROR
2070  2BB3- 4C 82 2A           JMP PERROR      ILLEGAL P-CODE
2071                   *
2072  2BB6- 0A                 ASL A
2073  2BB7- AA                 TAX
2074  2BB8- BD E2 2B           LDA TABLE,X
2075  2BBB- 85 1B              STA ARG1
2076  2BBD- BD E3 2B           LDA TABLE+1,X
2077  2BC0- 85 1C              STA ARG1+1
2078  2BC2- 6C 1B 00           JMP (ARG1)
2079                   *
2080  2BC5- AD 81 17   ESCERR  LDA SFLAG       CLEAR ESCAPE FLAG
2081  2BC8- 29 7F              AND =$7F
2082  2BCA- 8D 81 17           STA SFLAG
2083  2BCD- A2 86              LDX =$86        PASCAL RUNTIME ERROR
2084  2BCF- 4C 82 2A           JMP PERROR      ESCAPE DURING EXECUTION
2085                   *
2086  2BD2- 53 59 53   EXTABLE BYT 'SYSTEM:R        '
2086  2BD5- 54 45 4D 
2086  2BD8- 3A 52 20 
2086  2BDB- 20 20 20 
2086  2BDE- 20 20 20 
2086  2BE1- 20 
2087                   *
2088  2BE2- 10 20 AD   TABLE   WRD STOP,RETN,NEGA,ADDA,SUBA,MULA

----------------------------------------------------------------------

R65 PASCAL RUNTIME VERSION 5.8     09/02/24   R65 ASSEMBLER  PAGE 43

2088  2BE5- 20 E0 20 
2088  2BE8- EE 20 0A 
2088  2BEB- 21 1D 21 
2089  2BEE- 82 21 F4           WRD DIVA,LOWB,TEQU,TNEQ,TLES,TGRE
2089  2BF1- 21 FF 21 
2089  2BF4- 10 22 1A 
2089  2BF7- 22 24 22 
2090  2BFA- 2A 22 30          WRD TGRT,TLEE,ORAC,ANDA,EORA,NOTA
2090  2BFD- 22 36 22 
2090  2C00- 48 22 5A 
2090  2C03- 22 6C 22 
2091  2C06- 7C 22 95           WRD LEFT,RIGH,INCA,DECA,COPY,PEEK
2091  2C09- 22 B2 22 
2091  2C0C- B9 22 C2 
2091  2C0F- 22 FD 22 
2092  2C12- 06 23 13           WRD POKE,CALA,RLIN,GETC,GETN,PRTC
2092  2C15- 23 1C 23 
2092  2C18- 46 23 53 
2092  2C1B- 23 B0 23 
2093  2C1E- B8 23 2B           WRD PRTN,PRTS,LITB,INCB,LITW,INCW
2093  2C21- 24 61 24 
2093  2C24- 6E 24 9D 
2093  2C27- 24 B6 24 
2094  2C2A- D3 24 E5           WRD JUMP,JMPZ,JMPO,LOAD,LODX,STOR
2094  2C2D- 24 FA 24 
2094  2C30- 03 25 51 
2094  2C33- 25 6B 25 
2095  2C36- 8A 25 B0           WRD STOX,CALL,SDEV,RDEV,FNAM,OPNR
2095  2C39- 25 E6 25 
2095  2C3C- F9 25 02 
2095  2C3F- 26 1F 26 
2096  2C42- 30 26 35           WRD OPNW,CLOS,PRTI,GHGH,GLOW,PHGH
2096  2C45- 26 3F 26 
2096  2C48- 4C 26 50 
2096  2C4B- 26 55 26 
2097  2C4E- 5E 26 67           WRD PLOW,GSEC,PSEC,NBYT,NWRD,LODN
2097  2C51- 26 70 26 
2097  2C54- 9B 26 AD 
2097  2C57- 26 C2 26 
2098  2C5A- DB 26 F1           WRD STON,LODI,STOI,EXST,TIND,RUNP
2098  2C5D- 26 06 27 
2098  2C60- 0F 27 25 
2098  2C63- 27 45 27 
2099  2C66- 8D 27 CB           WRD ADDF,SUBF,MULF,DIVF,FLOF,FIXF
2099  2C69- 27 D4 27 
2099  2C6C- DD 27 E6 
2099  2C6F- 27 F3 27 
2100  2C72- 00 28 2A           WRD FEQU,FNEQ,FLES,FGRE,FGRT,FLEE
2100  2C75- 28 31 28 
2100  2C78- 38 28 3F 

----------------------------------------------------------------------

R65 PASCAL RUNTIME VERSION 5.8     09/02/24   R65 ASSEMBLER  PAGE 44

2100  2C7B- 28 48 28 
2101  2C7E- 51 28 5A           WRD FCOM,TFER,OPRA,GETR,PUTR,SWA2
2101  2C81- 28 66 28 
2101  2C84- 75 28 91 
2101  2C87- 28 A1 28 
2102  2C8A- B9 28 C6           WRD LDXI,STXI,CPNT,WRCP,ADPS,LINE
2102  2C8D- 28 1D 29 
2102  2C90- 38 29 49 
2102  2C93- 29 57 29 
2103                   *
2104                   * COLDSTART
2105                   ***********
2106                   *
2107  2C96- A9 00      COLDST  LDA =0
2108  2C98- 85 C0              STA LSTLIN      CLEAR LSTLIN
2109  2C9A- 85 C1              STA LSTLIN+1
2110  2C9C- 85 C2              STA BRKPNT      CLEAR BRKPNT
2111  2C9E- 85 C3              STA BRKPNT+1
2112  2CA0- 58                 CLI
2113  2CA1- D8                 CLD
2114  2CA2- AD 09 20           LDA USERST
2115  2CA5- AE 0A 20           LDX USERST+1
2116  2CA8- 85 11              STA STPROG
2117  2CAA- 86 12              STX STPROG+1
2118  2CAC- A0 00              LDY =0
2119  2CAE- 98                 TYA
2120  2CAF- 91 11              STA (STPROG),Y
2121  2CB1- C8                 INY
2122  2CB2- C0 04              CPY =4
2123  2CB4- 90 F9              BCC *-5
2124  2CB6- 4C 03 2B           JMP WARMST
2125                   *
2126                           TIT R65 PASCAL: FLP-MATH
2127                           PAG

----------------------------------------------------------------------

R65 PASCAL: FLP-MATH               09/02/24   R65 ASSEMBLER  PAGE 45

2128                   *
2129                   ********************************
2130                   * R65 PASCAL FLP MATH ROUTINES *
2131                   ********************************
2132                   *
2133                   *
2134  2CB9- 18         ADD     CLC
2135  2CBA- A2 02              LDX =2
2136  2CBC- B5 01      ADD1    LDA M1,X
2137  2CBE- 75 1C              ADC M2,X
2138  2CC0- 95 01              STA M1,X
2139  2CC2- CA                 DEX
2140  2CC3- 10 F7              BPL ADD1
2141  2CC5- 60                 RTS
2142                   *
2143  2CC6- 06 10      MD1     ASL SIGN
2144  2CC8- 20 CB 2C           JSR ABSWAP
2145  2CCB- 24 01      ABSWAP  BIT M1
2146  2CCD- 10 05              BPL ABSWP1
2147  2CCF- 20 48 2D           JSR FCOMPL
2148  2CD2- E6 10              INC SIGN
2149  2CD4- 38         ABSWP1  SEC
2150                   *
2151                   * SWAP: EXCHANGE F1 AND F2
2152                   **************************
2153                   *
2154  2CD5- A2 04      SWAP    LDX =4
2155  2CD7- 94 03      SWAP1   STY E-1,X
2156  2CD9- B5 FF              LDA <(X1-1),X
2157  2CDB- B4 1A              LDY X2-1,X
2158  2CDD- 94 FF              STY <(X1-1),X
2159  2CDF- 95 1A              STA X2-1,X
2160  2CE1- CA                 DEX
2161  2CE2- D0 F3              BNE SWAP1
2162  2CE4- 60                 RTS
2163                   *
2164                   * FLOAT: FLOAT M1,M1+1 TO RESULT IN F1
2165                   **************************************
2166                   *
2167  2CE5- A9 8E      FLOAT   LDA =$8E
2168  2CE7- 85 00              STA X1
2169  2CE9- A9 00              LDA =0
2170  2CEB- 85 03              STA M1+2
2171  2CED- F0 08              BEQ NORM
2172  2CEF- C6 00      NORM1   DEC X1
2173  2CF1- 06 03              ASL M1+2
2174  2CF3- 26 02              ROL M1+1
2175  2CF5- 26 01              ROL M1
2176  2CF7- A5 01      NORM    LDA M1
2177  2CF9- 0A                 ASL A

----------------------------------------------------------------------

R65 PASCAL: FLP-MATH               09/02/24   R65 ASSEMBLER  PAGE 46

2178  2CFA- 45 01              EOR M1
2179  2CFC- 30 04              BMI RTS1
2180  2CFE- A5 00             LDA X1
2181  2D00- D0 ED              BNE NORM1
2182  2D02- 60         RTS1    RTS
2183                   *
2184                   * FSUB: F1=F2-F1
2185                   ****************
2186                   *
2187  2D03- 20 48 2D   FSUB    JSR FCOMPL
2188  2D06- 20 16 2D   SWPALG  JSR ALGNSW
2189                   *
2190                   * FADD: F1=F2+F1
2191                   ****************
2192                   *
2193  2D09- A5 1B      FADD    LDA X2
2194  2D0B- C5 00              CMP X1
2195  2D0D- D0 F7              BNE SWPALG
2196  2D0F- 20 B9 2C           JSR ADD
2197  2D12- 50 E3      ADDEND  BVC NORM
2198  2D14- 70 05              BVS RTLOG
2199  2D16- 90 BD      ALGNSW  BCC SWAP
2200  2D18- A5 01      RTAR    LDA M1
2201  2D1A- 0A                 ASL A
2202  2D1B- E6 00      RTLOG   INC X1
2203  2D1D- F0 7E              BEQ OVFL
2204  2D1F- A2 FA      RTLOG1  LDX =$FA
2205  2D21- A9 80      ROR1    LDA =$80
2206  2D23- B0 01              BCS ROR2
2207  2D25- 0A                 ASL A
2208  2D26- 56 07      ROR2    LSR E+3,X
2209  2D28- 15 07              ORA E+3,X
2210  2D2A- 95 07              STA E+3,X
2211  2D2C- E8                 INX
2212  2D2D- D0 F2              BNE ROR1
2213  2D2F- 60                 RTS
2214                   *
2215                   * FMUL: F1=F2*F1
2216                   ****************
2217                   *
2218  2D30- 20 C6 2C   FMUL    JSR MD1
2219  2D33- 65 00              ADC X1
2220  2D35- 20 86 2D           JSR MD2
2221  2D38- 18                 CLC
2222  2D39- 20 1F 2D   MUL1    JSR RTLOG1
2223  2D3C- 90 03              BCC MUL2
2224  2D3E- 20 B9 2C           JSR ADD
2225  2D41- 88         MUL2    DEY
2226  2D42- 10 F5              BPL MUL1
2227  2D44- 46 10      MDEND   LSR SIGN

----------------------------------------------------------------------

R65 PASCAL: FLP-MATH               09/02/24   R65 ASSEMBLER  PAGE 47

2228  2D46- 90 AF      NORMX   BCC NORM
2229  2D48- 38         FCOMPL  SEC
2230  2D49- A2 03              LDX =3
2231  2D4B- A9 00      COMPL1  LDA =0
2232  2D4D- F5 00              SBC X1,X
2233  2D4F- 95 00              STA X1,X
2234  2D51- CA                 DEX
2235  2D52- D0 F7              BNE COMPL1
2236  2D54- F0 BC              BEQ ADDEND
2237                   *
2238                   * FDIV: F1=F2/F1
2239                   ****************
2240                   *
2241  2D56- 20 C6 2C   FDIV    JSR MD1
2242  2D59- E5 00              SBC X1
2243  2D5B- 20 86 2D           JSR MD2
2244  2D5E- 38         FDIV1   SEC
2245  2D5F- A2 02              LDX =2
2246  2D61- B5 1C      FDIV2   LDA M2,X
2247  2D63- F5 04              SBC E,X
2248  2D65- 48                 PHA
2249  2D66- CA                 DEX
2250  2D67- 10 F8              BPL FDIV2
2251  2D69- A2 FD              LDX =$FD
2252  2D6B- 68         FDIV3   PLA
2253  2D6C- 90 02              BCC FDIV4
2254  2D6E- 95 1F              STA M2+3,X
2255  2D70- E8         FDIV4   INX
2256  2D71- D0 F8              BNE FDIV3
2257  2D73- 26 03              ROL M1+2
2258  2D75- 26 02              ROL M1+1
2259  2D77- 26 01              ROL M1
2260  2D79- 06 1E              ASL M2+2
2261  2D7B- 26 1D              ROL M2+1
2262  2D7D- 26 1C              ROL M2
2263  2D7F- B0 1C              BCS OVFL
2264  2D81- 88                 DEY
2265  2D82- D0 DA              BNE FDIV1
2266  2D84- F0 BE              BEQ MDEND
2267  2D86- 86 03      MD2     STX M1+2
2268  2D88- 86 02              STX M1+1
2269  2D8A- 86 01              STX M1
2270  2D8C- B0 0D              BCS OVCHK
2271  2D8E- 30 04              BMI MD3
2272  2D90- 68                 PLA
2273  2D91- 68                 PLA
2274  2D92- 90 B2              BCC NORMX
2275  2D94- 49 80      MD3     EOR =$80
2276  2D96- 85 00              STA X1
2277  2D98- A0 17              LDY =$17

----------------------------------------------------------------------

R65 PASCAL: FLP-MATH               09/02/24   R65 ASSEMBLER  PAGE 48

2278  2D9A- 60                 RTS
2279  2D9B- 10 F7      OVCHK   BPL MD3
2280  2D9D- 4C B9 21   OVFL    JMP DIV1-5      PASCAL RUNTIME ERROR
2281                   *
2282                   * FIX: FIX F1 IN M1, M1+1
2283                   *************************
2284                   *
2285  2DA0- 20 18 2D           JSR RTAR
2286  2DA3- A5 00      FIX     LDA X1
2287  2DA5- C9 8E              CMP =$8E
2288  2DA7- D0 F7              BNE FIX-3
2289  2DA9- 60         RTRN    RTS
2290                   *
2291                           TIT R65 PASCAL: RANDOM ACCESS
2292                           PAG

----------------------------------------------------------------------

R65 PASCAL: RANDOM ACCESS          09/02/24   R65 ASSEMBLER  PAGE 49

2293                   *
2294                   * RANDOM ACCESS FILE HANDLER
2295                   ****************************
2296                   *
2297                   *
2298                   * OPENRA: OPEN A FILE FOR RANDOM ACCESS
2299                   ***************************************
2300                   *
2301                   * ENTRY: FILNM1,FILCY1,FILDRV,FILFLG
2302                   * FILFLG: BIT 7: PROTECTED (NEW ONLY)*
2303                   *         BIT 6: NO PRINTED OUTPUT
2304                   *         BIT 5: DIRECTION (0=READ)
2305                   *         BIT 4: 1=NEW, 0=OLD
2306                   *
2307                   * NEW ONLY: MAXSIZ,FILSA
2308                   *
2309                   * EXIT: NO OF OPEN FILE IN Y, STATUS IN A
2310                   *       AND FILERR, Y IS ONLY VALID
2311                   *       IF A=0
2312                   *
2313                   *
2314  2DAA- AC 36 03   OPENRA  LDY MAXSEQ      SEARCH EMPTY ENTRY
2315  2DAD- B9 39 03           LDA FIDRTB,Y    BIT 5=1: ENTRY USED
2316  2DB0- 29 20              AND =$20
2317  2DB2- F0 08              BEQ OPENRA1     FOUND, SKIP
2318  2DB4- 88                 DEY
2319  2DB5- 10 F6              BPL OPENRA+3
2320                   *
2321  2DB7- A9 23              LDA =$23        TOO MANY OPEN FILES
2322  2DB9- 85 DB              STA FILERR
2323  2DBB- 60                 RTS
2324                   *
2325  2DBC- 8C 35 03   OPENRA1 STY CURSEQ      SAVE CURRENT ENTRY NO
2326  2DBF- A5 DC              LDA FILDRV      GET AND TEST DRIVE
2327  2DC1- 99 41 03           STA FIDVTB,Y
2328  2DC4- 29 FE              AND =$FE
2329  2DC6- F0 05              BEQ OPENRA2     SKIP, IF OK
2330                   *
2331  2DC8- A9 28              LDA =$28        ILLEGAL DRIVE FOR RA
2332  2DCA- 85 DB              STA FILERR
2333  2DCC- 60                 RTS
2334                   *
2335  2DCD- A9 10      OPENRA2 LDA =$10        TEST OLD/NEW FLAG
2336  2DCF- 25 DA              AND FILFLG
2337  2DD1- F0 78              BEQ OPENOLD     SKIP, IF OLD
2338                   *
2339                   * OPEN A NEW FILE
2340                   *
2341  2DD3- A5 DA      OPENNEW LDA FILFLG
2342  2DD5- 29 80              AND =$80        GET PROTECTED FLAG

----------------------------------------------------------------------

R65 PASCAL: RANDOM ACCESS          09/02/24   R65 ASSEMBLER  PAGE 50

2343  2DD7- 09 42              ORA ='B'        BLOCK FILE
2344  2DD9- 8D 00 03           STA FILTYP      SET FILE TYPE
2345                   *
2346  2DDC- A9 00              LDA =0
2347  2DDE- AE 37 03           LDX MAXSIZ      SIZE OF FILE
2348  2DE1- 8D 15 03           STA FILSIZ
2349  2DE4- 8E 16 03           STX FILSIZ+1
2350                   *
2351  2DE7- CA                 DEX             COMPUTE FILEA
2352  2DE8- AD 1A 03           LDA FILSA
2353  2DEB- 18                 CLC
2354  2DEC- 69 FF              ADC =$FF
2355  2DEE- 8D 1C 03           STA FILEA
2356  2DF1- 8A                 TXA
2357  2DF2- 6D 1B 03           ADC FILSA+1
2358  2DF5- 8D 1D 03           STA FILEA+1
2359                   *
2360  2DF8- 20 1E E8           JSR SETFID      SET FILEDATE
2361                   *
2362  2DFB- A2 10              LDX =16
2363  2DFD- BD 20 03  OPENNE1 LDA FILNM1,X    SET FILNM1 AND FILCY1
2364  2E00- 9D 01 03           STA FILNAM,X    TO FILNAM AND FILCYC
2365  2E03- CA                 DEX
2366  2E04- 10 F7              BPL OPENNE1
2367                   *
2368                   * SEARCH IN DIRECTORY AND RETURN CYCLUS
2369                   * AND DIRECTORY ENTRY TO USE, TEST EXISTING
2370                   * FILES FOR SAME NAME AND CYCLUS, DISK
2371                   * OPERATION IS INITIALIZED
2372                   *
2373  2E06- 20 A7 20           JSR PREPWRA
2374  2E09- 8E 11 03           STX FILCYC
2375                   *
2376                   * FIND FIRST EMPTY DISK DIRECTORY ENTR
2377                   * FETCH ITAND SET FIRST SECTOR OF FILE TO
2378                   * FILLOC, OUTPUT Y,X AS NUMBER OF EMPTY
2379                   * SECTORS
2380                   *
2381  2E0C- 20 AA 20           JSR PREPWRB
2382  2E0F- 8A                 TXA
2383  2E10- CD 16 03           CMP FILSIZ+1
2384  2E13- 98                 TYA
2385  2E14- E9 00              SBC =0          COMPARE WITH REQUESTED
2386  2E16- B0 05              BCS OPENNE3     SECTORS
2387                   *
2388  2E18- A9 26              LDA =$26        DISK OVERFLOW
2389  2E1A- 4C 9E 20           JMP DISCER1
2390                   *
2391                   * SET FITEMP,Y AND FITEMP+8,YNTO FIRST SECTOT
2392                   * OF FILE ON DISK, FIMAXT,Y TO SIZE, DIRECTORY

----------------------------------------------------------------------

R65 PASCAL: RANDOM ACCESS          09/02/24   R65 ASSEMBLER  PAGE 51

2393                   * ENTRY NO TO FITEMP+16,Y
2394                   * THEN PUT THIS ENTRY ONTO THE DISKMAND SET
2395                   * A NEW END OF DIRECTORY MARK
2396                   *
2397  2E1D- 20 80 20   OPENNE3 JSR DOPEN4
2398                   *
2399  2E20- AC 35 03           LDY CURSEQ      SETUP DUMMY FIRST SECTOR
2400  2E23- A9 00              LDA =0
2401  2E25- 99 49 03           STA FIBPTB,Y
2402  2E28- 99 51 03           STA FIRCTB,Y
2403                   *
2404  2E2B- AC 35 03   OPENNE4 LDY CURSEQ      OPEN FILE
2405  2E2E- A5 DA              LDA FILFLG
2406  2E30- 0A                 ASL A
2407  2E31- 0A                 ASL A
2408  2E32- 29 80              AND =$80        GET DIRECTION
2409  2E34- 48                 PHA
2410  2E35- 2D 00 03           AND FILTYP
2411  2E38- F0 06              BEQ OPENNE5     OK, SKIP
2412  2E3A- 68                 PLA             PROTECTED FILE
2413                   *
2414  2E3B- A9 29              LDA =$29
2415  2E3D- 85 DB              STA FILERR
2416  2E3F- 60                 RTS
2417                   *
2418  2E40- 68         OPENNE5 PLA
2419  2E41- 09 60              ORA =$60        RA FILE, OPENIT
2420  2E43- 99 39 03           STA FIDRTB,Y
2421                   *
2422  2E46- A9 00              LDA =0          NORMALEXIT
2423  2E48- 85 DB              STA FILERR
2424  2E4A- 60         OPENNE6 RTS
2425                   *
2426                   * OPEN AN OLD FILE:
2427                   * PREPARE DISK OPERATION, SEARCH REQUESTED
2428                   * FILE AND GET CORRSPONDING DISK ENTRY
2429                   *
2430  2E4B- 20 A4 20   OPENOLD JSR PREPRD
2431                   *
2432  2E4E- 20 83 20           JSR PRFLB1      PRINT LABEL, IF REQ.
2433  2E51- AD 00 03           LDA FILTYP
2434  2E54- 29 7F              AND =$7F
2435  2E56- C9 42              CMP ='B'        MUST BE BLOCK FILE
2436  2E58- F0 05              BEQ OPENOL1     SKIP, IF OK
2437                   *
2438  2E5A- A9 05              LDA =5
2439  2E5C- 4C 9E 20           JMP DISCER1     FILE TYPE ERROR
2440                   *
2441  2E5F- 20 A1 20   OPENOL1 JSR ENDDO       END OF DISK OPERATION
2442                   *

----------------------------------------------------------------------

R65 PASCAL: RANDOM ACCESS          09/02/24   R65 ASSEMBLER  PAGE 52

2443                   * SET NOW FIRST SECTOR AND SIZE TO TABLE
2444                   *
2445  2E62- 20 7D 20           JSR DOPEN1
2446                   *
2447  2E65- A9 00              LDA =0          GET FIRST RECORD
2448  2E67- 20 6E 2E           JSR GETTREC
2449  2E6A- D0 DE              BNE OPENNE6     SKIP, IF NOT OK
2450  2E6C- F0 BD              BEQ OPENNE4     ELSE OPEN FILE
2451                   *
2452                   *
2453                   * GETTREC: GET ONE RECORD FROM RA-FILE
2454                   * RECORD NUMBER IS IN A, FILE NUMBER IN CURSEQ
2455                   * RESULT IUS Z=1,OF OK, ELSE Z=0 AND FILERR
2456                   *
2457  2E6E- AE 35 03   GETTREC LDX CURSEQ      SAVE RECORD NO
2458  2E71- 9D 51 03           STA FIRCTB,X
2459  2E74- A9 00              LDA =0          CLEAR UPDATED FLAG
2460  2E76- 9D 49 03           STA FIBPTB,X
2461  2E79- BD 41 03           LDA FIDVTB,X    SET DRIVE NO
2462  2E7C- 85 DC              STA FILDRV
2463                   *
2464                   * COMPUTE DATA-POINTER AND BINARY
2465                   * TRACK,SECTOR, SETUP FILDRV
2466                   *
2467  2E7E- 20 89 20           JSR PREPSR
2468                   *
2469                   * ADD RECORD NUMBER TO BINARY TRAC/SECTOR
2470                   * TEST SIZE OF FILE, CONVERT TO TRACK AND
2471                   * SECTOR, INITIALIZE DISK OPERATION
2472                   *
2473  2E81- 20 8C 20           JSR PREPSR1
2474                   *
2475  2E84- 20 95 20           JSR READ        READ ON SECTOR
2476                   *
2477  2E87- 4C A1 20           JMP ENDDO       END OF DISK OPERATION
2478                   *
2479                   * PUTTREC: SAVE CURRENT RECORD ON DISK
2480                   * FILE NUMBER IN CURSEQ, RECORD NUMBER IN
2481                   * FIRCTB,Y, RETURNS Z=1 IF OK, ELSE FILERR
2482                   *
2483  2E8A- BD 41 03   PUTTREC LDA FIDVTB,X
2484  2E8D- 85 DC              STA FILDRV
2485  2E8F- 20 89 20           JSR PREPSR      SEE GETTREC FOR
2486  2E92- 20 8C 20           JSR PREPSR1     COMMENTS
2487  2E95- 20 98 20           JSR WRITE
2488  2E98- 4C A1 20           JMP ENDDO
2489                   *
2490                   * GETNEWR: GET A NEW RECORD, SAVE OLD, IF
2491                   * OLD HAS BEEN UPDATED
2492                   * ENTRY: NEW RECORD IN A, FILE NO IN CURSEQ

----------------------------------------------------------------------

R65 PASCAL: RANDOM ACCESS          09/02/24   R65 ASSEMBLER  PAGE 53

2493                   * EXIT: z=1 IF OK, ELSE FILERR
2494                   *
2495  2E9B- 8D 34 03   GETNEWR STA SAVRST+1    SAVE REQUESTED RECORD
2496  2E9E- AE 35 03           LDX CURSEQ
2497  2EA1- BD 49 03           LDA FIBPTB,X    UPDATED?
2498  2EA4- 10 05              BPL GETNEW1
2499                   *
2500  2EA6- 20 8A 2E           JSR PUTTREC     YES, SAVE IT
2501  2EA9- D0 23              BNE EXIT
2502                   *
2503  2EAB- AD 34 03   GETNEW1 LDA SAVRST+1    GET REQUESTED RECORD
2504  2EAE- 4C 6E 2E           JMP GETTREC
2505                   *
2506                   * GETBYTE: GET ONE BYTE FROM FILE
2507                   *********************************
2508                   * ENTRY: FILE NUMBER IN X
2509                   *        POINTER IN A(LOW) AND Y(HIGH)
2510                   * EXIT:  FILERR IN Y AND STATUS, BYTE IN A
2511                   *
2512  2EB1- 8D 33 03   GETBYTE STA SAVRST      SAVE A
2513  2EB4- 20 FE 2E           JSR TESTRA
2514                   *
2515  2EB7- 98                 TYA
2516  2EB8- DD 51 03           CMP FIRCTB,X    IS IT IN CURRENT RECORD?
2517  2EBB- F0 05              BEQ GETBYT1     YES, SKIP
2518                   *
2519  2EBD- 20 9B 2E           JSR GETNEWR     NO, GET NEW RECORD
2520  2EC0- D0 0C              BNE EXIT
2521                   *
2522  2EC2- 20 86 20   GETBYT1 JSR CPOINT      COMPUTE BUFFER PNT
2523  2EC5- AC 33 03           LDY SAVRST      RESTORE LOW POINTER
2524  2EC8- B1 FA              LDA (POINT),Y   GET THE BYTE
2525  2ECA- A0 00              LDY =0
2526  2ECC- 84 DB              STY FILERR      OK
2527  2ECE- 60         EXIT    RTS
2528                   *
2529                   * PUTBYTE: PUT ONE BYTE TO FILE
2530                   *******************************
2531                   *
2532                   * ENTRY: BYTE STORED IN KCHAR
2533                   *        FILE NUMBER IN X
2534                   *        POINTER IN A(LOW) AND Y(HIGH)
2535                   * EXIT:  FILERR IN Y AND STATUS
2536                   *
2537  2ECF- 8D 33 03   PUTBYTE STA SAVRST
2538  2ED2- 20 FE 2E           JSR TESTRA
2539  2ED5- BD 39 03           LDA FIDRTB,X    IS WRITE ALLOWED?
2540  2ED8- 30 05              BMI PUTBYT0     YES,SKIP
2541  2EDA- A0 29              LDY =$29        WRITE NOT ALLOWED
2542  2EDC- 84 DB              STY FILERR

----------------------------------------------------------------------

R65 PASCAL: RANDOM ACCESS          09/02/24   R65 ASSEMBLER  PAGE 54

2543  2EDE- 60                 RTS
2544                   *
2545  2EDF- 98         PUTBYT0 TYA             FOR COMMENTS
2546  2EE0- DD 51 03           CMP FIRCTB,X    SEE GETBYTE
2547  2EE3- F0 05              BEQ PUTBYT1
2548                   *
2549  2EE5- 20 9B 2E           JSR GETNEWR
2550  2EE8- D0 E4              BNE EXIT
2551                   *
2552  2EEA- 20 86 20   PUTBYT1 JSR CPOINT
2553  2EED- A9 80              LDA =$80        SET UPDATED FLAG
2554  2EEF- 9D 49 03           STA FIBPTB,X
2555  2EF2- AC 33 03           LDY SAVRST
2556  2EF5- A5 FE              LDA KCHAR       GET BACK KCHAR
2557  2EF7- 91 FA              STA (POINT),Y
2558  2EF9- A0 00              LDY =0
2559  2EFB- 84 DB              STY FILERR
2560  2EFD- 60                 RTS
2561                   *
2562                   *
2563                   * TESTRA: TEST X FOR LEGAL RA-FILE
2564                   *
2565  2EFE- 8E 35 03  TESTRA  STX CURSEQ
2566  2F01- EC 36 03           CPX MAXSEQ
2567  2F04- B0 0A              BCS TESTRA2
2568                   *
2569  2F06- BD 39 03   TESTRA1 LDA FIDRTB,X
2570  2F09- 29 60              AND =$60
2571  2F0B- C9 60              CMP =$60
2572  2F0D- D0 03              BNE TESTRA3     SKIP, IF NOT OK
2573  2F0F- 60                 RTS
2574                   *
2575  2F10- F0 F4      TESTRA2 BEQ TESTRA1
2576  2F12- 68         TESTRA3 PLA
2577  2F13- 68                 PLA
2578  2F14- A0 25              LDY =$25        FILE NUMBER NOT ALLOWED
2579  2F16- 84 DB              STY FILERR
2580  2F18- 60                 RTS
2581                   *
2582                   * CLOSRA: CLOSE RA OR SEQUENTIAL FILE IN X
2583                   ******************************************
2584                   * ENTRY: FILE IN X
2585                   * EXIT: FILERR IN Y AND STATUS
2586                   *
2587  2F19- BD 39 03   CLOSRA  LDA FIDRTB,X
2588  2F1C- 29 40              AND =$40        SEQUENTIAL FILE?
2589  2F1E- D0 03              BNE CLOSRA1     NO, SKIP
2590  2F20- 4C 8F 20           JMP CLOSE       YES, CLOSE IT
2591                   *
2592  2F23- 20 FE 2E   CLOSRA1 JSR TESTRA      MUST BE RA-FILE

----------------------------------------------------------------------

R65 PASCAL: RANDOM ACCESS          09/02/24   R65 ASSEMBLER  PAGE 55

2593  2F26- BD 49 03           LDA FIBPTB,X    UPDATED?
2594  2F29- F0 05              BEQ CLOSRA2     NO, SKIP
2595                   *
2596  2F2B- 20 8A 2E           JSR PUTTREC
2597  2F2E- D0 0B              BNE CLOSRA3
2598                   *
2599  2F30- AE 35 03   CLOSRA2 LDX CURSEQ
2600  2F33- A9 00              LDA =0
2601  2F35- 9D 39 03           STA FIDRTB,X    CLOSE IT
2602  2F38- A8                 TAY
2603  2F39- 84 DB              STY FILERR
2604  2F3B- 60         CLOSRA3 RTS
2605                   *
2606                   ENDCODE EQU *
2607                   *
2608                           TIT R65 PASCAL: LABELS
2609                   *
2610  2F3C-                    END
LABELS=0174
ERRORS=00
RECORDS=83
