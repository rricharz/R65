
R65 COMPILE 4.2: program ARGLIB           18/11/23 page 1


   1 (    4) 
   2 (    4) {  ***************************************  }
   3 (    4) {  *                                     *  }
   4 (    4) {  *  R65 Computer System                *  }
   5 (    4) {  *  Pascal LIBRARY ARGLIB              *  }
   6 (    4) {  *                                     *  }
   7 (    4) {  ***************************************  }
   8 (    4) 
   9 (    4) {      Version 07 01/08/82 rricharz         }
  10 (    4) {      Recovered 2018 by rricharz           }
  11 (    4) 
  12 (    4) { Allows to get arguments given by system   }
  13 (    4) { when a program is run.                    }
  14 (    4) 
  15 (    4) library arglib;
  16 (    4) 
  17 (    4) mem numarg   =$005f: integer&;
  18 (    7)     arglist  =$0060: array[3] of integer;
  19 (    7)     arglists =$0060: array[63] of char&;
  20 (    7)     argtype  =$00a0: array[31] of char&;
  21 (    7) 
  22 (    7)     filflg   =$00da: integer&;
  23 (    7)     fildrv   =$00dc: integer&;
  24 (    7)     filcyc   =$0311: integer&;
  25 (    7)     filcy1   =$0330: integer&;
  26 (    7)     filnam   =$0301: array[15] of char&;
  27 (    7)     filnm1   =$0320: array[15] of char&;
  28 (    7)     filstp   =$0312: char&;
  29 (    7) 
  30 (    7) var carg: integer;
  31 (    7) 
  32 (    7) {       * argerror *        }
  33 (    7) 
  34 (    7) proc argerror(e: integer);
  35 (    7) 
  36 (    7) const stop=$2010;
  37 (   10) mem runerr=$000c: integer&;
  38 (   10) begin
  39 (   10)     writeln;
  40 (   12)     writeln('Argument error ',e);
  41 (   45)     runerr:=255;
  42 (   47)     call(stop)
  43 (   54) end;
  44 (   55) 
  45 (   56) {       * agetval *          }
  46 (   56) 
  47 (   56) proc agetval(var value: integer;
  48 (   56)   var default: boolean);
  49 (   56) { does not change value, if no argument }
  50 (   56) begin
  51 (   56)   case argtype[carg] of
  52 (   67)     'i': begin value:=arglist[carg];
  53 (   82)            carg:=succ(carg); default:=false;
  54 (  102)          end;
  55 (  106)     'd': begin
  56 (  116)            carg:=succ(carg); default:=true;
  57 (  127)          end;
  58 (  131)     chr(0):
  59 (  138)          begin

----------------------------------------------------------------------

R65 COMPILE 4.2: library ARGLIB           18/11/23 page 2

  60 (  141)            default:=true;
  61 (  143)          end
  62 (  147)     else argerror(102)
  63 (  152)   end {case}
  64 (  160) end;
  65 (  160) 
  66 (  161) {       * agetstring *       }
  67 (  161) 
  68 (  161) proc agetstring(var string: array[15] of char;
  69 (  161)   var default: boolean;
  70 (  161)   var cyclus, drive: integer);
  71 (  161) { set string to blank if no argument }
  72 (  161) var i: integer;
  73 (  164)     dummy: boolean;
  74 (  164) 
  75 (  164) begin
  76 (  164)   case argtype[carg] of
  77 (  172)     's': begin
  78 (  181)            for i:=0 to 15 do
  79 (  189)              string[i]:=arglists[2*carg+i];
  80 (  216)            carg:=carg+8;
  81 (  242)            default:=false;
  82 (  249)          end;
  83 (  253)     'd': begin
  84 (  263)            string:='                ';
  85 (  281)            default:=true; carg:= succ(carg);
  86 (  297)          end;
  87 (  302)     chr(0):
  88 (  309)          begin
  89 (  312)            string:='                ';
  90 (  330)            default:=true;
  91 (  338)          end
  92 (  342)     else argerror(101)
  93 (  347)   end {case}
  94 (  355)   agetval(cyclus,dummy);
  95 (  375)   agetval(drive,dummy);
  96 (  395) end;
  97 (  395) 
  98 (  396) { * uppercase * }
  99 (  396) 
 100 (  396) func uppercase(ch1: char): char;
 101 (  396) 
 102 (  396) begin
 103 (  396)   if (ch1 >= 'a') and (ch1 <= 'z') then
 104 (  415)     uppercase := chr(ord(ch1) - 32)
 105 (  425)   else
 106 (  426)     uppercase := ch1;
 107 (  434) end;
 108 (  442) 
 109 (  443) {       * asetfile *    }
 110 (  443) 
 111 (  443) proc asetfile(name: array[15] of char;
 112 (  443)   cyclus,device: integer; subtype: char);
 113 (  443) 
 114 (  443) var i,e: integer;
 115 (  446) 
 116 (  446) begin
 117 (  446)   e:=0;
 118 (  450)   for i:=0 to 15 do begin
 119 (  471)     filnam[i]:=uppercase(name[i]);

----------------------------------------------------------------------

R65 COMPILE 4.2: library ARGLIB           18/11/23 page 3

 120 (  491)     filnm1[i]:=uppercase(name[i]);
 121 (  518)     if (e=0) and ((name[i]=':')
 122 (  542)         or (name[i]=' ')) then
 123 (  555)       e:=i;
 124 (  559)   end;
 125 (  567)   if (subtype<>' ') and (e<>0)
 126 (  594)       and (e<15) then begin
 127 (  604)     filstp :=subtype;
 128 (  607)     filnam[e]:=':'; filnm1[e]:=':';
 129 (  635)     filnam[e+1]:=subtype; filnm1[e+1]:=subtype
 130 (  667)   end;
 131 (  678)   filcyc:=cyclus; filcy1:=cyclus;
 132 (  687)   fildrv:=device;
 133 (  696)   filflg:=$40; { Do not show file entry }
 134 (  710) end;
 135 (  710) 
 136 (  711) {       * initialization *  }
 137 (  711) 
 138 (  711) begin
 139 (  711)   carg:=0;
 140 (  715) end.
 141 (  719) 

End compile

Code lenght:          718
Compiler stack size:  19
Ident stack size:     24
Pascal errors:        0
