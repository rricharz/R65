
R65 COMPILE 4.3: program ALIEN            12/2/24 page 1


   1 (    4) {
   2 (    4)         ******************
   3 (    4)         *                *
   4 (    4)         *  ALIEN INVADER *
   5 (    4)         *                *
   6 (    4)         ******************
   7 (    4) 
   8 (    4) This is the ALIEN game for the R65
   9 (    4) computer system. I wrote the original
  10 (    4) version 1978, first in Basic, and then
  11 (    4) in Tiny Pascal. Unfortunately the original
  12 (    4) code has been lost. This is a recreation
  13 (    4) written 2018 out of memory to demonstrate
  14 (    4) the capabilities of the R65 computer
  15 (    4) system.
  16 (    4) 
  17 (    4)           rricharz 2018,2019             }
  18 (    4) 
  19 (    4) program alien;
  20 (    4) uses syslib,plotlib;
  21 ( 1566) 
  22 ( 1566) const erase=0;
  23 ( 1569) 
  24 ( 1569) var shipmap: array[1] of integer;
  25 ( 1569)     birdmap: array[3] of integer;
  26 ( 1569) 
  27 ( 1569)     shipx,lastsx,lastsy,birdx,birdy,
  28 ( 1569)     lastbirdx,birdcount,sbird,score,lastscore,dummy,
  29 ( 1569)     lasercount            : integer;
  30 ( 1569)     landed                : boolean;
  31 ( 1569)     shipy,sspeedx,sspeedy : real;
  32 ( 1569) 
  33 ( 1569) {$I IRANDOM:P}
IRANDOM:P       .02  SP 0000-0200 000A 12/02/24
{I}    1 ( 1569) { irandom: real and integer random functions with limit
{I}    2 ( 1569) }
{I}    3 ( 1569) 
{I}    4 ( 1569) func rrandom(min,max:real):real;
{I}    5 ( 1569) begin
{I}    6 ( 1569)   rrandom := min + (conv(random)/255.0) * (max - min);
{I}    7 ( 1607) end;
{I}    8 ( 1615) 
{I}    9 ( 1616) func irandom(min,max:integer):integer;
{I}   10 ( 1616) begin
{I}   11 ( 1616)   irandom := trunc(rrandom(conv(min),conv(max)));
{I}   12 ( 1639) end;
{I}   13 ( 1644) 
  34 ( 1645) 
  35 ( 1645) proc showship;
  36 ( 1645) begin
  37 ( 1645)   if lastsx>=4 then begin
  38 ( 1657)     plotmap(lastsx-4,lastsy,erase);
  39 ( 1679)     plotmap(lastsx,lastsy,erase);
  40 ( 1695)   end;
  41 ( 1695)   if ((shipx>=4) and (shipx<=xsize-4))
  42 ( 1712)     then begin
  43 ( 1713)     lastsy:=trunc(shipy);
  44 ( 1722)     plotmap(shipx-4,lastsy,shipmap[0]);
  45 ( 1750)     plotmap(shipx,lastsy,shipmap[1]);
  46 ( 1770)     lastsx:=shipx;

----------------------------------------------------------------------

R65 COMPILE 4.3: program ALIEN            12/2/24 page 2

  47 ( 1770)   end;
  48 ( 1778) end;
  49 ( 1778) 
  50 ( 1779) proc moveship;
  51 ( 1779) var change: real;
  52 ( 1782) begin
  53 ( 1782)   shipx:=shipx + trunc(sspeedx);
  54 ( 1794)   shipy:=shipy + sspeedy;
  55 ( 1806)   change:=0.05 * conv(xsize div 2 - shipx);
  56 ( 1835)   change:=change * rrandom(-0.3,0.3);
  57 ( 1870)   sspeedx:=sspeedx+change;
  58 ( 1883)   if shipx<4 then begin
  59 ( 1903)     shipx:=4;
  60 ( 1908)     sspeedx:=-sspeedx;
  61 ( 1912)   end;
  62 ( 1925)   if shipx>xsize-4 then begin
  63 ( 1935)     shipx:=xsize-4;
  64 ( 1942)     sspeedx:=-sspeedx;
  65 ( 1947)   end;
  66 ( 1960)   if shipy<=-0.5 then begin
  67 ( 1974)     landed:=true;
  68 ( 1979)     move(0,ysize-9);
  69 ( 1996)     write(@plotdev,'ALIENS LANDED   ');
  70 ( 2017)   end;
  71 ( 2017) end;
  72 ( 2017) 
  73 ( 2018) proc showbird;
  74 ( 2018) begin
  75 ( 2018)   if lastbirdx>=0 then
  76 ( 2029)     plotmap(lastbirdx,birdy,erase);
  77 ( 2049)   if birdx>=0 then begin
  78 ( 2056)     plotmap(birdx,birdy,
  79 ( 2063)       birdmap[(birdcount shr 1) and 3]);
  80 ( 2087)     lastbirdx:=birdx;
  81 ( 2087)     birdcount:=birdcount+1;
  82 ( 2101)   end;
  83 ( 2106) end;
  84 ( 2106) 
  85 ( 2107) proc showscore;
  86 ( 2107) begin
  87 ( 2107)   move(xsize-17,ysize-9);
  88 ( 2128)   write(@plotdev,
  89 ( 2130)     chr(score div 10 + ord('0')),
  90 ( 2141)     chr(mod(score,10) + ord('0')));
  91 ( 2163) end;
  92 ( 2163) 
  93 ( 2164) proc hitbird;
  94 ( 2164) begin
  95 ( 2164)   move(0,ysize-9);
  96 ( 2182)   write(@plotdev,'YOU HIT A BIRD! ');
  97 ( 2203)   score:=0;
  98 ( 2205)   birdx:=-1;
  99 ( 2211)   showbird;
 100 ( 2220) end;
 101 ( 2220) 
 102 ( 2221) proc hitship;
 103 ( 2221) begin
 104 ( 2221)   move(0,ysize-9);
 105 ( 2239)   write(@plotdev,'YOU HIT A SHIP! ');
 106 ( 2260)   score:=score+1;

----------------------------------------------------------------------

R65 COMPILE 4.3: program ALIEN            12/2/24 page 3

 107 ( 2266)   shipx:=-1;
 108 ( 2273)   showship;
 109 ( 2282) end;
 110 ( 2282) 
 111 ( 2283) proc laser;
 112 ( 2283) var laserx: integer;
 113 ( 2286) begin
 114 ( 2286)   showship;
 115 ( 2292)   if lasercount>=0 then begin
 116 ( 2299)     laserx:=xsize div 2;
 117 ( 2306)     move(laserx,1);
 118 ( 2323)     draw(laserx,ysize-8,white);
 119 ( 2340)     delay10msec(5);
 120 ( 2348)     if (laserx>=(shipx-4)) and
 121 ( 2360)        (laserx<=(shipx+3)) then
 122 ( 2372)        hitship
 123 ( 2373)     else if (laserx>=birdx) and
 124 ( 2392)        (laserx<=(birdx+3)) then
 125 ( 2404)        hitbird
 126 ( 2405)     else begin
 127 ( 2415)        move(0,ysize-9);
 128 ( 2428)        write(@plotdev,'                ');
 129 ( 2449)     end;
 130 ( 2449)     move(laserx,1);
 131 ( 2461)     draw(laserx,ysize-8,black);
 132 ( 2478)     lasercount:=50;
 133 ( 2480)   end else
 134 ( 2484)     lasercount:=lasercount-1;
 135 ( 2493) end;
 136 ( 2498) 
 137 ( 2499) proc init;
 138 ( 2499) begin
 139 ( 2499)   shipmap[0]:=$3f71;
 140 ( 2509)   shipmap[1]:=$cfe8;
 141 ( 2518)   birdmap[0]:=$9600;
 142 ( 2527)   birdmap[1]:=$0f00;
 143 ( 2536)   birdmap[2]:=$0690;
 144 ( 2545)   birdmap[3]:=$0f00;
 145 ( 2554)   shipx:=-1; lastsx:=-1;
 146 ( 2567)   birdx:=-1; lastbirdx:=-1;
 147 ( 2581)   birdcount:=0; lasercount:=0;
 148 ( 2594)   score:=0; lastscore:=-1;
 149 ( 2606)   landed:=false;
 150 ( 2613)   grinit;
 151 ( 2621)   cleargr;
 152 ( 2625)   move(0,ysize-9);
 153 ( 2638)   write(@plotdev,'USE SPACE BAR   ');
 154 ( 2659) end;
 155 ( 2659) 
 156 ( 2660) func expaint:boolean;
 157 ( 2660) begin
 158 ( 2660)   if lastscore<>score then showscore;
 159 ( 2681)   if (shipx < 0) and (birdx=-1) then begin
 160 ( 2697)     if random<16 then begin
 161 ( 2709)       shipx:=irandom(5,xsize-5);
 162 ( 2727)       shipy:=conv(ysize-14);
 163 ( 2736)       sspeedx:=rrandom(-2.0,2.0);
 164 ( 2764)       sspeedy:=-0.5;
 165 ( 2776)     end;
 166 ( 2783)   end;

----------------------------------------------------------------------

R65 COMPILE 4.3: program ALIEN            12/2/24 page 4

 167 ( 2783) 
 168 ( 2783)   if shipx>=0 then begin
 169 ( 2790)     moveship;
 170 ( 2797)     showship;
 171 ( 2801)   end;
 172 ( 2801) 
 173 ( 2801)   if birdx=-1
 174 ( 2805)   then begin
 175 ( 2809)     if random<4 then begin
 176 ( 2821)       birdx:=0;
 177 ( 2826)       birdy:=irandom(ysize div 2,ysize-14);
 178 ( 2848)       sbird:=2;
 179 ( 2854)     end else if random>251 then begin
 180 ( 2870)       birdx:=xsize-4;
 181 ( 2877)       birdy:=irandom(ysize div 2,ysize-14);
 182 ( 2900)       sbird:=-2;
 183 ( 2906)     end
 184 ( 2911)   end;
 185 ( 2911)   if birdx>=0 then begin
 186 ( 2918)     birdx:=birdx+sbird;
 187 ( 2925)     if birdx<0 then birdx:=-1;
 188 ( 2946)     if birdx>xsize-4 then birdx:=-1;
 189 ( 2966)     showbird;
 190 ( 2975)   end;
 191 ( 2975)   if landed then expaint:=true
 192 ( 2982)   else expaint:=false;
 193 ( 2993) end;
 194 ( 2997) 
 195 ( 2998) func exkey(ch:char):boolean;
 196 ( 2998) begin
 197 ( 2998)   if landed then writeln('landed');
 198 ( 3023)   if ch=' ' then laser;
 199 ( 3037)   exkey := (ch = chr(0));
 200 ( 3045) end;
 201 ( 3049) 
 202 ( 3050) {$I IANIMATE:P}
IANIMATE:P      .0B  SP 0000-0400 0192 12/02/24
{I}    1 ( 3050) { ianimate - run animation in loop
{I}    2 ( 3050)   proc expaint;
{I}    3 ( 3050)     Called to paint one picture and apply motion.
{I}    4 ( 3050)   func exkey(ch:char):boolean;
{I}    5 ( 3050)     Called to check for key and stop loop if true  }
{I}    6 ( 3050) 
{I}    7 ( 3050) proc animate(arepeat:boolean);
{I}    8 ( 3050) { arepeat: auto repeat cursor keys without delay }
{I}    9 ( 3050) const toggle=chr($0c);
{I}   10 ( 3053)       cleft=chr($03); cright=chr($16);
{I}   11 ( 3053)       cup=chr($1a); cdown=chr($18); esc=chr(0);
{I}   12 ( 3053) mem   sflag=$1781:integer&;
{I}   13 ( 3053)       emuflags=$1707:integer&;
{I}   14 ( 3053) var   ch:char;
{I}   15 ( 3053)       dummy:integer;
{I}   16 ( 3053)       stop:boolean;
{I}   17 ( 3053) begin
{I}   18 ( 3053)   repeat
{I}   19 ( 3053)     repeat
{I}   20 ( 3055)       stop:=expaint;
{I}   21 ( 3061)       dummy:=syncscreen; { sleep for up to 30 msec }
{I}   22 ( 3075)       ch:=keypressed; { sleep for 10 msec }
{I}   23 ( 3083)       { sflag bit 8 is escape flag. Pass it through }
{I}   24 ( 3083)     until (ord(ch)<>0) or ((sflag and $80)<>0)

----------------------------------------------------------------------

R65 COMPILE 4.3: program ALIEN            12/2/24 page 5

{I}   25 ( 3099)       or stop;
{I}   26 ( 3101)     if not(((ch=cup) or (ch=cdown) or (ch=cleft) or
{I}   27 ( 3131)        (ch=cright)) and
{I}   28 ( 3140)        ((emuflags and 1)<>0) and arepeat) then
{I}   29 ( 3156)        { cursor keys auto repeat without delay }
{I}   30 ( 3157)        keypressed := chr(0);
{I}   31 ( 3162)     sflag:=sflag and $7f; { clear escape flag }
{I}   32 ( 3180)     if ch=toggle then write(toggle);
{I}   33 ( 3193)   until exkey(ch) or stop;
{I}   34 ( 3205) end;
 203 ( 3214) 
 204 ( 3214) begin
 205 ( 3214)   init;
 206 ( 3220)   animate(false);
 207 ( 3228)   splitview;
 208 ( 3232)   if landed then
 209 ( 3232)     writeln('The aliens are landed!');
 210 ( 3268)   writeln('You hit ',score,
 211 ( 3277)       ' alien ships');
 212 ( 3301) end.
 213 ( 3301) 

End compile

Code lenght:          3300
Compiler stack size:  50
Ident stack size:     122
Pascal errors:        0
