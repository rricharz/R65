
R65 Pascal program DELETE          10/11/23     page 1


                   1 (    4) {
                   2 (    4)          *****************
                   3 (    4)          *               *
                   4 (    4)          *    delete     *
                   5 (    4)          *               *
                   6 (    4)          *****************
                   7 (    4) 
                   8 (    4)     2018 rricharz (r77@bluewin.ch)
                   9 (    4)     2023 added wildcards
                  10 (    4) 
                  11 (    4) Delete a file.
                  12 (    4) 
                  13 (    4) Written 2018 to test the R65 emulator and
                  14 (    4) to demonstrate the power of Tiny Pascal.
                  15 (    4) 
                  16 (    4) Usage:  delete filnam[:x][.cy][,drive]
                  17 (    4) 
                  18 (    4)   [:X]:    type of file,     default :P
                  19 (    4)   [drive]: disk drive (0,1), default 1
                  20 (    4) 
                  21 (    4) Wild cards * and ? are allowed
                  22 (    4) }
                  23 (    4) 
                  24 (    4) program delete;
                  25 (    4) uses syslib,arglib,wildlib;
                  26 ( 1819) 
                  27 ( 1819) const adelete=$c80c; { exdos vector }
                  28 ( 1822)       prflab     = $ece3;
                  29 ( 1822) 
                  30 ( 1822) mem filerr=$db: integer&;
                  31 ( 1822) 
                  32 ( 1822) var cyclus,scyclus,drive,entry,fcount,i: integer;
                  33 ( 1822)     name,savename: array[15] of char;
                  34 ( 1822)     default,found,last: boolean;
                  35 ( 1822) 
                  36 ( 1822) proc bcderror(e:integer);
                  37 ( 1822) begin
                  38 ( 1822)   write(invvid,'ERROR ');
                  39 ( 1837)   write((e shr 4) and 15);
                  40 ( 1848)   writeln(e and 15,norvid);
                  41 ( 1865) end;
                  42 ( 1865) 
                  43 ( 1866) func haswildcard(nm1:array[15] of char): boolean;
                  44 ( 1866) var k:integer;
                  45 ( 1869) begin
                  46 ( 1869)   haswildcard:=false;
                  47 ( 1873)   for k:=0 to 15 do
                  48 ( 1885)     if (nm1[k]='*') or (nm1[k]='?') then
                  49 ( 1916)       haswildcard:=true;
                  50 ( 1922) end;
                  51 ( 1940) 
                  52 ( 1941) begin
                  53 ( 1941)   cyclus:=0; drive:=1;
                  54 ( 1951)   agetstring(name,default,cyclus,drive);
                  55 ( 1995)   scyclus:=cyclus;
                  56 ( 1995)   fcount:=0; last:=false; entry:= 0;
                  57 ( 2017)   while (entry<numentries) and not last do begin
                  58 ( 2037)     cyclus:=scyclus;
                  59 ( 2037)     findentry(name,drive,entry,found,last);

----------------------------------------------------------------------

R65 Pascal program DELETE          10/11/23     page 2

                  60 ( 2091)     if found and (not last) and
                  61 ( 2100)         ((scyclus=0) or (scyclus=filcyc)) then begin
                  62 ( 2119)       for i:=0 to 15 do begin
                  63 ( 2139)         savename[i]:=name[i];
                  64 ( 2147)         name[i]:=filnam[i];
                  65 ( 2166)       end;
                  66 ( 2172)       asetfile(name,filcyc,drive,' ');
                  67 ( 2208)       call(prflab); writeln;
                  68 ( 2212)       call(adelete);
                  69 ( 2222)       if filerr<>0 then begin
                  70 ( 2228)         bcderror(filerr);
                  71 ( 2240)         last:=true;
                  72 ( 2242)       end;
                  73 ( 2246)       fcount:=fcount+1;
                  74 ( 2252)       for i:=0 to 15 do
                  75 ( 2265)         name[i]:=savename[i];
                  76 ( 2282)     end;
                  77 ( 2304)   end;
                  78 ( 2304)   if fcount=0 then begin
                  79 ( 2314)     if not haswildcard(name) then
                  80 ( 2331)     writeln(invvid,'File not found',norvid)
                  81 ( 2355)     else writeln('No files deleted');
                  82 ( 2388)   end else
                  83 ( 2388)     writeln(fcount, ' file(s) deleted');
                  84 ( 2419) end.
                  85 ( 2419) 

End compile

Code lenght:          2418
Compiler stack size:  63
Ident stack size:     94
Pascal errors:        0
