----------------------------------------------------------------------

EXTENDED DISK OPERATING SYSTEM     24/10/23   R65 ASSEMBLER  PAGE 01

0001                   *
0002                   **************************************
0003                   * R65 EXTENDED DISK OPERATING SYSTEM *
0004                   **************************************
0005                   *
0006                   * BASED ON VERSION 3.2 21/08/82
0007                   * RRICHARZ RBAUMANN 1978-1982
0008                   * VERSION 4.6 2018-2023
0009                   *   MODIFIED FOR R65 EMULATOR
0010                   *   AND LARGER DISK SIZE
0011                   *   BY RRICHARZ
0012                   *
0013                   *
0014                   * NEW COMMANDS FOR EMULATED SYSTEM:
0015                   *   EXPORT FILNAM.CY,DRIVE
0016                   *               EXPORT SEQUENTIAL FILE
0017                   *   IMPORT FILNAM.CY,DRIVE
0018                   *               IMPORT SEQUENTIAL FILE
0019                   *   EDIT FILNAM.CY,DRIVE
0020                   *               EDIT A SEQUENTIAL FILE
0021                   *               USING LEAFPAD
0022                   *   FLOPPY FILNAM,DRIVE
0023                   *               CHANGE FLOPPY DISK
0024                   *   NEW FILNAM.CY,DRIVE
0025                   *               NEW SEQUENTIAL FILE
0026                   *
0027                   * NEW GRAPHICS SUBROUTINES
0028                   *   PLOT(X,Y,MODE)      PLOT A DOT
0029                   *   PLOTCH(X,Y,CHR)     PLOT A 8x8 CHAR
0030                   *   BITMAP(X,Y,MAP)     PLOT A 4x4 MAP
0031                   *   DRAWX(X,Y,MODE,N)   DRAW N POINTS
0032                   *   DRAWY(X,Y,MODE,N)   DRAW N POINTS
0033                   *   DRAWXY(X,Y,MODE,N,XONC,YINC)
0034                   *
0035                   * WITH FAST PACK ROUTINE
0036                   * USES SCRATCH MEMORY $D700-$DEFF
0037                   * UPDATED FOR DUAL DISK DRIVE SYSTEMS
0038                   * WITH WILD CARD DIRECTORY
0039                   *
0040                   *   ERROR 61: WILD CARD NOT ALLOWED
0041                   *   ERROR 62: ONLY FOR DISK, NOT TAPE
0042                   *   ERROR 63: ILLEGAL COPY
0043                   *   ERROR 64: FILE TOO LARGE
0044                   *   ERROR 65: WRITE ERROR
0045                   *   ERROR 66: IMPORT ERROR
0046                   *   ERROR 67: UNKNOWN EMU COMMAND
0047                   *   ERROR 68: UNABLE TO RUN LEAFPAD
0048                   *
0049                   *
0050                   PSTART  EQU $C800       START OF PROGRAM

----------------------------------------------------------------------

EXTENDED DISK OPERATING SYSTEM     24/10/23   R65 ASSEMBLER  PAGE 02

0051                   SPERTR  EQU 16          SECTORS PER TRACK
0052                   NTRACK  EQU 160         TRACKS
0053                   NRSEQ   EQU 2560        TOTAL SECTORS (16*160)
0054                   *
0055                           TIT EXTENDED DISK OPERATING SYSTEM
0056                   *
0057                   *
0058                   * PAGE ZERO VARIABLES
0059                   *********************
0060                   *
0061  0000-                    ORG $D8
0062                   *
0063  00D8-            COPYBN  BSS 2   POINTER FOR COPY SEQF
0064                   *
0065  00DA-            FILFLG  BSS 1   FILE ENTRY FLAGS
0066                   *               BIT 7=1: PROTECTED
0067                   *               BIT 6=1: NO PRINTED OUTPUT
0068                   *               BIT 5: DIRECTION (1=WRITE)
0069                   *
0070  00DB-            FILERR  BSS 1   FILE HANDLING ERROR
0071  00DC-            FILDRV  BSS 1   TAPE OR DISK DRIVE
0072                   *
0073                   * TAPE TEMPORARIES
0074                   *
0075  00DD-            TRECID  BSS 2   RECORD ID OF FIRST RECORD
0076  00DF-            TRECNO  BSS 1   RECORD NUMBER
0077  00E0-            TRECST  BSS 2   START ADDRESS POINTER
0078  00E2-            TRECSI  BSS 1   RECORD SIZE
0079                   *
0080                   * DISK TEMPORARIES
0081                   *
0082  00E3-                    ORG $DD
0083  00DD-            TRACK   BSS 1   CURRENT TRACK
0084  00DE-            SECTOR  BSS 1   CURRENT SECTOR
0085  00DF-            RESSAV  BSS 1   CURRENT FDC RESULT
0086  00E0-            DATA    BSS 2   DATA POINTER
0087  00E2-            DOSPNT  BSS 2   SECOND POINTER
0088  00E4-            FILCNT  BSS 1   DISK FILE POINTER
0089  00E5-            FILCN1  BSS 1
0090                   *
0091                   VIDPNT  EQU $E9 VIDEO MEMORY POINTER
0092                   POINT   EQU $FA USED AS SEQ FILE PNT
0093                   KCHAR   EQU $FE CHAR SAVE FOR WRITCH
0094                   *
0095                   * PAGE 3 DATA AREA
0096                   ******************
0097                   *
0098  00E6-                    ORG $300
0099                   *
0100  0300-            FILTYP  BSS 1   TYPE OF ACTIVE FILE

----------------------------------------------------------------------

EXTENDED DISK OPERATING SYSTEM     24/10/23   R65 ASSEMBLER  PAGE 03

0101  0301-            FILNAM  BSS 16  FILE NAME
0102  0311-            FILCYC  BSS 1   CYCLUS NUMBER
0103  0312-            FILSTP  BSS 1   FILE SUBTYPE
0104  0313-            FILLOC  BSS 2   LOCATION OR SECTOR
0105  0315-            FILSIZ  BSS 2   FILE SIZE
0106  0317-            FILDAT  BSS 3   FILE GENERATION DATE
0107  031A-            FILSA   BSS 2   START ADDRESS
0108  031C-            FILEA   BSS 2   END ADDRESS
0109  031E-            FILLNK  BSS 2   FILE LINK
0110                   *
0111  0320-            FILNM1  BSS 16
0112  0330-            FILCY1  BSS 1
0113  0331-            FILSA1  BSS 2
0114  0333-            SAVRST  BSS 2
0115                   *
0116  0335-            CURSEQ  BSS 1   CURRENT SEQUENTIAL FILE
0117  0336-            MAXSEQ  BSS 1   MAX NO OF SEQ FILE
0118  0337-            MAXSIZ  BSS 1   MAX SIZE
0119  0338-            FILBU1  BSS 1   START OF BUFFERS
0120                   *
0121                   * TABLE FOR 8 OPEN SEQUENTIAL FILES
0122                   *
0123  0339-            FIDRTB  BSS 8   BIT 7 1=WRITE, 0=READ
0124                   *               BIT 5 1=FILE IS OPEN
0125  0341-            FIDVTB  BSS 8   DRIVE NUMBER
0126  0349-            FIBPTB  BSS 8   BUFFER POINTER LOW BYTE
0127  0351-            FIRCTB  BSS 8   NO OF LAST RECORD
0128  0359-            FIMAXT  BSS 8   MAXIMAL NO OF RECORDS
0129  0361-            FITEMP  BSS 24  TAPE: RECORD ID SAVE (2)
0130                   *               DISK: FIRST SECTOR (2)
0131                   *               AND DIRECTORY ENTRY NO
0132                   *               (1)
0133  0379-            EXITPN  BSS 1   DISK STACK POINTER SAVE
0134  037A-            BUFSEC  BSS 1   CURRENT SECTOR
0135  037B-            SCY     BSS 1   FOUND CYCLUS
0136  037C-            SCYFC   BSS 1   FILE ENTRY OF CY
0137  037D-            SLAST   BSS 1   END OF DIRECTORY MARK
0138  037E-            DISFLG  BSS 1   DISK FLAG REGISTER
0139                   *               BIT 7 DRIVE 0 INITIALIZED
0140                   *               BIT 6 DRIVE 1 INITIALIZED
0141  037F-            DISCNT  BSS 1   SPECIAL DISK COUNTER
0142                   *
0143  0380-                    ORG $388
0144                   *
0145  0388-            OLDENT  BSS 1
0146  0389-            OLDREC  BSS 2
0147  038B-            NEWENT  BSS 1
0148  038C-            NEWREC  BSS 2
0149  038E-            COUNTER BSS 1
0150  038F-            COUNT2  BSS 1

----------------------------------------------------------------------

EXTENDED DISK OPERATING SYSTEM     24/10/23   R65 ASSEMBLER  PAGE 04

0151                   *
0152  0390-            PFILENO BSS 1
0153  0391-            PAGING  BSS 1
0154  0392-            LINE    BSS 1
0155  0393-            OLDDRV  BSS 1
0156  0394-            NEWDRV  BSS 1
0157  0395-            OLDFIL  BSS 1
0158  0396-            NEWFIL  BSS 1
0159  0397-            FULLFLG BSS 1
0160  0398-            NAMEFLG BSS 1
0161  0399-            DIRCNT  BSS 1
0162  039A-            DELCNT  BSS 2
0163  039C-            FILNM2  BSS 17
0164  03AD-            SUCCESS BSS 1   COUNT SUCCESS (COPY,DELETE)
0165  03AE-            GRX     BSS 1   X FOR GRAHICSS
0166  03AF-            GRY     BSS 1   Y FOR GRAPHICS
0167  03B0-            GRC     BSS 1   DRAW MODE FOR GRAPHICS
0168  03B1-            GRN     BSS 1   NUMBER OF POINTS TO DRAW
0169  03B2-            GRINDEX BSS 1   PLOT TEMPORARY
0170  03B3-            GRCNT   BSS 1   PLOT TEMPORARY
0171  03B4-            GRMASK  BSS 1   PLOT TEMPORARY
0172  03B5-            GRYCNT  BSS 1   PLOT TEMPORARY
0173  03B6-            GRMAP   BSS 2   PLOT MAP OR X INCREMENT
0174                   GRXINC  EQU GRMAP
0175  03B8-            GRXLOW  BSS 1
0176  03B9-            GRYLOW  BSS 1
0177  03BA-            GRYINC  BSS 2   PLOT Y INCREMENT
0178                   *
0179                   *
0180                   * BUFFERS
0181                   *********
0182                   *
0183  03BC-                    ORG $D600
0184  D600-            DIRBUF  BSS 256         DISK DIRECTORY BUFFER
0185  D700-            FILBUF  BSS $800        FILE BUFFER, 8
0186                   *                       OPEN FILES ALLOWED
0187                   *                       DEFAULT, CAN BE REMOVED
0188                   COPYBS  EQU $2000       COPY BUFFER
0189                   COPYBE  EQU $BFFF       END OF COPY BUFFER
0190                   *
0191                   *
0192                   * PAGE 17 DATA AREA
0193                   *******************
0194                   *
0195  DF00-                    ORG $1780
0196                   *
0197  1780-            VFLAG   BSS 1
0198  1781-            SFLAG   BSS 1
0199                   VMON    EQU $17D5
0200                   *

----------------------------------------------------------------------

EXTENDED DISK OPERATING SYSTEM     24/10/23   R65 ASSEMBLER  PAGE 05

0201                   * INTERFACE ADDRESSES
0202                   *********************
0203                   *
0204                   PORTB1  EQU $1400       MEMORY WRITE DISABLE
0205                   EMUCOM  EQU $1430       EMULATOR COMMAND REG
0206                   EMURES  EQU $1431       EMULATOR RESULT REG
0207                   FDCOM   EQU $14C0       COMMAND REGISTER
0208                   FDSTAT  EQU $14C0       STATUS REGISTER
0209                   FDPARA  EQU $14C1       PARAMETER REGISTER
0210                   FDRES   EQU $14C1       RESULT REGISTER
0211                   FDTSTM  EQU $14C2       TEST MODE REGISTER
0212                   FDDAT   EQU $14C4       DACK ADDRESS
0213                   RSADAT  EQU $14C8       RS232 DATA REG
0214                   RSASTA  EQU $14CA       RS232 STATUS REG
0215                   RSACOM  EQU $14CA       RS232 COMMAND REG
0216                   MULTX   EQU $14E0       MULTIPLIER X-REGISTER
0217                   MULTY   EQU $14E1       MULTIPLIER Y-REGISTER
0218                   MULTR   EQU $14E2       MULTIPLIER DATA REGISTER
0219                   USPBD   EQU $1702       LED DISPLAY
0220                   PRIOTB  EQU $179C       PRIORITY IRQ TABLE
0221                   *
0222                   *
0223                   * VECTORS TO EPROMS OF OS
0224                   *************************
0225                   *
0226                   GETCHR  EQU $E003       GET CHAR
0227                   GETLIN  EQU $E006       GET LINE
0228                   PRTCHR  EQU $E009       PRINT A CHAR TO CRT
0229                   ENDLIN  EQU $E024       TEST END OF LINE
0230                   PRTINF  EQU $E027       PRINT A STRING
0231                   PRTHEX  EQU $E02A       PRINT HEX CHAR
0232                   PRTBYT  EQU $E02D       PRINT BYTE IN A
0233                   PRTAX   EQU $E030       PRINT TWO BYTES
0234                   RSIRQ   EQU $E92D       *** RS 232 IRQ, NORMAL
0235                   ESCTST  EQU $E806       TEST ESCAPE FLAG
0236                   TDIR    EQU $E809       TAPE DIRECTORY
0237                   DWRFIL  EQU $F000       WRITE DISK FILE
0238                   TPWAIT  EQU $E80F       READY MESSAGE FOR TAPE
0239                   TRDREC  EQU $E812       LOAD A RECORD FROM TAPE
0240                   TWRREC  EQU $E818       WRITE A RECORD TO TAPE
0241                   SETID   EQU $E82A       SET TAPE ID
0242                   SETFID  EQU $E81E       SET DATE TO FILE LABEL
0243                   TAPEON  EQU $E821       START TAPE DRIVE
0244                   TAPEOF  EQU $E824       STOP TAPE DRIVE
0245                   TDELAY  EQU $E827       WAIT 1 SEC
0246                   PRFLAB  EQU $E82D       PRINT FILE LABEL
0247                   TDRLBR  EQU $E830       READ LABEL RECORD
0248                   WRFILE  EQU $EB14       *** SPECIAL ENTRY
0249                   DELETE  EQU $F00C       DELETE ONE FILE
0250                   OPEN    EQU $F00F       OPENS EQUENTIAL FILE

----------------------------------------------------------------------

EXTENDED DISK OPERATING SYSTEM     24/10/23   R65 ASSEMBLER  PAGE 06

0251                   CLOSE   EQU $F012       CLOSE SEQUENTIAL FILE
0252                   CLOSAL  EQU $F015       CLOSE ALL FILES
0253                   READCH  EQU $F018       READ ONE CHAR FROM FILE
0254                   WRITCH  EQU $F01B       WRITE ONE CHAR TO FILE
0255                   DRIVE   EQU $F364       *** COMPUTE DRIVE
0256                   SEEK    EQU $F36D       *** SEEK TRACK
0257                   WRCOMM  EQU $F3A4       *** WRITE COMMAND
0258                   WRPARA  EQU $F3AF       *** WRITE PARAMETER
0259                   RESULT  EQU $F3BC       *** GET RESULT
0260                   DATREAD EQU $F3F6       *** READ DATA
0261                   DATWRIT EQU $F3E1       *** WRITE DATA
0262                   WRITE   EQU $F425       *** WRITE RECORD
0263                   VERIFY  EQU $F44C       *** VERIFY RECORD
0264                   READ    EQU $F457       *** READRECORD
0265                   TRACK0  EQU $F4A0       *** SEEK TO TRACK 0
0266                   PREPDO  EQU $F4A7       *** PREPARE DISK OP
0267                   PREPDO1 EQU $F4CC       *** PREPARE DISK OP
0268                   GETFENT EQU $F4D2       *** GET FILE ENTRY
0269                   GETFREC EQU $F4ED       *** GET ENTRY RECORD
0270                   READDS  EQU $F502       *** READ DIR SECTOR
0271                   WRITDS  EQU $F52A       *** WRITE DIR SECTOR
0272                   PREPRW  EQU $F548       *** PREPARE WRITE
0273                   PREPRW1 EQU $F55E       *** PREPARE WRITE
0274                   PUTFENT EQU $F581       *** PUT FILE ENTRY
0275                   DISCERR EQU $F5F4       *** DISK ERROR
0276                   DISCER1 EQU $F5FD       *** DISK ERROR
0277                   ENDDO   EQU $F625       *** END DISK OPERATION
0278                   PREPRD  EQU $F62C       *** PREPARE READ
0279                   PREPWRA EQU $F651       *** PREPARE WRITE
0280                   DDIR2   EQU $F6B4       *** DISK DIRECTORY
0281                   DELETE4 EQU $F6F1       *** DELETE THIS ENTRY
0282                   DRDFIL2 EQU $F76E       *** READ FILE, WITHOUT
0283                   HEXPZE  EQU $F809       HEX EPRESSION, DEF=0
0284                   GETNAM  EQU $F815       GET FILE NAME
0285                   ENDLER  EQU $F9B5       *** ERROR, IF NOT EOL
0286                   ERROR   EQU $F932       *** ERROR
0287                   TEST    EQU $F94D       *** TEST STRING
0288                   INTCOM  EQU $FA06       *** INTERPRET MON COMM
0289                   BFLOAD0 EQU $FCCA       *** LOAD BLOCK FILE
0290                   BFSTOR0 EQU $FD60       *** STORE BLOCK FILE
0291                   HARGUM  EQU $FCF2       *** GET HEX ARGUMENT
0292                   *
0293                   *
0294                           PAG

----------------------------------------------------------------------

EXTENDED DISK OPERATING SYSTEM     24/10/23   R65 ASSEMBLER  PAGE 07

0295                   *
0296  1782-                    ORG PSTART
0297                   *
0298                   * COLD START ENTRY POINT
0299                   *
0300  C800- 4C 2D C8           JMP START
0301                   *
0302                   * VECTOR TABLE FOR CALLING ROUTINES
0303                   *
0304  C803- 4C 52 C8   FGETCOM JMP FGETCM0     GO TO EXDOS
0305  C806- 4C 3D CB           JMP FDIR0       PRINT DIRECTORY
0306  C809- 4C 80 CC           JMP PACK0       PACK DISK
0307  C80C- 4C 6F CE           JMP DELETE1     DELETE FILE(S)
0308  C80F- 4C D7 CF           JMP EDIT        EDIT FILE
0309  C812- 4C 24 D0           JMP NEW0        CREATE NEW FILE
0310  C815- 4C 63 D0           JMP PLOT        PLOT GRAPHICS DOT
0311  C818- 4C B6 D0           JMP PLOTCH      PLOT CHARACTER
0312  C81B- 4C 53 D1           JMP BITMAP      PLOT 4x4 BITS
0313  C81E- 4C 81 D1           JMP DRAWX       DRAW LINE IN X DIR
0314  C821- 4C 8D D1           JMP DRAWY       DRAW LINE IN Y DIR
0315  C824- 4C 99 D1           JMP DRAWXY      DRAW LINE IN BOTH DIR
0316  C827- 4C 00 D0           JMP FLOPPY      CHANGE FLOPPY
0317  C82A- 4C 9D CF           JMP EXPORT      EXPORT FILE TO HOST
0318                   *
0319  C82D- 78         START   SEI
0320  C82E- A9 03              LDA =<FGETCOM
0321  C830- A2 C8              LDX =>FGETCOM
0322  C832- 8D D5 17           STA VMON
0323  C835- 8E D6 17           STX VMON+1
0324  C838- 20 27 E0           JSR PRTINF
0325  C83B- 52 36 35           BYT 'R65 EXDOS VERSION 4.6',$A0
0325  C83E- 20 45 58 
0325  C841- 44 4F 53 
0325  C844- 20 56 45 
0325  C847- 52 53 49 
0325  C84A- 4F 4E 20 
0325  C84D- 34 2E 36 
0325  C850- A0 
0326  C851- 58                 CLI
0327  C852- 20 27 E0   FGETCM0 JSR PRTINF      MAIN LOOP
0328  C855- 0D 0A 45           BYT $D,$A,'E*'+128
0328  C858- AA 
0329  C859- 20 06 E0           JSR GETLIN
0330  C85C- 20 62 C8           JSR FINTCOM
0331  C85F- 4C 03 C8           JMP FGETCOM
0332                   *
0333  C862- 90 01      FINTCOM BCC *+3         RTS, IF ESC
0334  C864- 60                 RTS
0335  C865- 20 24 E0           JSR ENDLIN      OR EMPTY LINE
0336  C868- F0 FA              BEQ *-4

----------------------------------------------------------------------

EXTENDED DISK OPERATING SYSTEM     24/10/23   R65 ASSEMBLER  PAGE 08

0337                   *
0338  C86A- 20 06 E8           JSR ESCTST      CLEAR ESCAPE FLAG
0339                   *
0340  C86D- 20 4D F9           JSR TEST
0341  C870- 44 46 4F           BYT 'DFORMAT'+128
0341  C873- 52 4D 41 
0341  C876- D4 
0342  C877- B0 11              BCS FINTC1
0343                   *
0344  C879- 20 BB CD           JSR NGETNE
0345  C87C- 20 F2 FC           JSR HARGUM      *** DFORMAT ***
0346  C87F- 85 DC              STA FILDRV      (DISKNAME,FILDRV)
0347  C881- 20 B5 F9           JSR ENDLER
0348  C884- 20 BC C9           JSR INITDIR
0349  C887- D0 66              BNE DERROR
0350  C889- 60                 RTS
0351                   *
0352  C88A- 20 4D F9   FINTC1  JSR TEST
0353  C88D- 45 58 50           BYT 'EXPORT'+128
0353  C890- 4F 52 D4 
0354  C893- B0 11              BCS FINTC2
0355                   *
0356  C895- 20 BB CD           JSR NGETNE      *** EXPORT ***
0357  C898- 20 F2 FC           JSR HARGUM      (FILNAM.CY,DRIVE)
0358  C89B- 85 DC              STA FILDRV
0359  C89D- 20 B5 F9           JSR ENDLER
0360  C8A0- 20 9D CF           JSR EXPORT
0361  C8A3- D0 4A              BNE DERROR
0362  C8A5- 60                 RTS
0363                   *
0364  C8A6- 20 4D F9   FINTC2  JSR TEST
0365  C8A9- 49 4D 50           BYT 'IMPORT'+128
0365  C8AC- 4F 52 D4 
0366  C8AF- B0 0E              BCS FINTC3
0367                   *
0368  C8B1- 20 BB CD           JSR NGETNE      *** IMPORT ***
0369  C8B4- 20 F2 FC           JSR HARGUM      (FILNAM.CY,DRIVE)
0370  C8B7- 85 DC              STA FILDRV
0371  C8B9- 20 B4 CF           JSR IMPORT
0372  C8BC- D0 31              BNE DERROR
0373  C8BE- 60                 RTS
0374                   *
0375  C8BF- 20 4D F9   FINTC3  JSR TEST
0376  C8C2- 45 44 49           BYT 'EDIT'+128
0376  C8C5- D4 
0377  C8C6- B0 0E              BCS FINTC4
0378                   *
0379  C8C8- 20 BB CD           JSR NGETNE      *** EDIT ***
0380  C8CB- 20 F2 FC           JSR HARGUM      (FILNAM.CY,DRIVE)
0381  C8CE- 85 DC              STA FILDRV

----------------------------------------------------------------------

EXTENDED DISK OPERATING SYSTEM     24/10/23   R65 ASSEMBLER  PAGE 09

0382  C8D0- 20 D7 CF           JSR EDIT
0383  C8D3- D0 1A              BNE DERROR
0384  C8D5- 60                 RTS
0385                   *
0386  C8D6- 20 4D F9   FINTC4  JSR TEST
0387  C8D9- 46 4C 4F           BYT 'FLOPPY'+128
0387  C8DC- 50 50 D9 
0388  C8DF- B0 11              BCS FINTC6
0389                   *
0390  C8E1- 20 BB CD           JSR NGETNE      *** FLOPPY ***
0391  C8E4- 20 F2 FC           JSR HARGUM      (FILNAM.CY,DRIVE)
0392  C8E7- 85 DC              STA FILDRV
0393  C8E9- 20 00 D0           JSR FLOPPY
0394  C8EC- D0 01              BNE DERROR
0395  C8EE- 60                 RTS
0396                   *
0397  C8EF- 4C 32 F9   DERROR  JMP ERROR
0398                   *
0399  C8F2- 20 4D F9   FINTC6  JSR TEST
0400  C8F5- 52 45 56           BYT 'REVIVE'+128
0400  C8F8- 49 56 C5 
0401  C8FB- B0 06              BCS FINTC7
0402  C8FD- 20 43 CA          JSR REVIVE      *** REVIVE ***
0403  C900- D0 ED              BNE DERROR      (ENTRY,DRIVE)
0404  C902- 60                 RTS
0405                   *
0406  C903- 20 4D F9   FINTC7  JSR TEST
0407  C906- 52 45 4E           BYT 'RENAME'+128
0407  C909- 41 4D C5 
0408  C90C- B0 06              BCS FINTC10
0409  C90E- 20 54 CA           JSR RENAME      *** RENAME ***
0410  C911- D0 DC      DERROR1 BNE DERROR      (FILNAM.CY,DRIVE)
0411  C913- 60                 RTS
0412                   *
0413  C914- 20 4D F9   FINTC10 JSR TEST
0414  C917- 46 44 49           BYT 'FDIR'+128
0414  C91A- D2 
0415  C91B- B0 0B              BCS FINTC25
0416  C91D- A9 FF              LDA =$FF
0417  C91F- 8D 97 03   FINTC24 STA FULLFLG
0418  C922- 20 2F CB           JSR FDIR        *** FDIR ***
0419  C925- D0 EA      DERROR2 BNE DERROR1     (DRIVE)
0420  C927- 60                 RTS
0421                   *
0422  C928- 20 4D F9   FINTC25 JSR TEST
0423  C92B- 44 49 D2           BYT 'DIR'+128   *** DIR ***
0424  C92E- B0 05              BCS FINTC11     (DRIVE)
0425  C930- A9 00              LDA =0
0426  C932- 4C 1F C9           JMP FINTC24
0427                   *

----------------------------------------------------------------------

EXTENDED DISK OPERATING SYSTEM     24/10/23   R65 ASSEMBLER  PAGE 10

0428  C935- 20 4D F9   FINTC11 JSR TEST
0429  C938- 50 41 43           BYT 'PACK'+128  *** PACK ***
0429  C93B- CB 
0430  C93C- B0 06              BCS FINTC12     (DRIVE)
0431  C93E- 20 41 CC           JSR PACK
0432  C941- D0 E2      DERROR3 BNE DERROR2
0433  C943- 60                 RTS
0434                   *
0435  C944- 20 4D F9   FINTC12 JSR TEST
0436  C947- 50 52 4F           BYT 'PROTECT'+128
0436  C94A- 54 45 43 
0436  C94D- D4 
0437  C94E- B0 06              BCS FINTC15
0438  C950- 20 E8 CA           JSR PROTECT     *** PROTECT ***
0439  C953- D0 D0              BNE DERROR2     (FILNAM.CY,DRIVE)
0440  C955- 60                 RTS
0441                   *
0442  C956- 20 4D F9   FINTC15 JSR TEST
0443  C959- 43 4F 50           BYT 'COPY'+128
0443  C95C- D9 
0444  C95D- B0 06              BCS FINTC17     *** COPY ***
0445  C95F- 20 BC CE           JSR COPY        (FILNAM.CY,DRIVE,DRIVE)
0446  C962- D0 DD              BNE DERROR3
0447  C964- 60                 RTS
0448                   *
0449  C965- 20 4D F9   FINTC17 JSR TEST        *** LOAD ***
0450  C968- 4C 4F 41           BYT 'LOAD'+128
0450  C96B- C4 
0451  C96C- B0 06              BCS FINTC18
0452  C96E- 20 BB CD           JSR NGETNE
0453  C971- 4C CA FC           JMP BFLOAD0
0454                   *
0455  C974- 20 4D F9   FINTC18 JSR TEST        *** STORE ***
0456  C977- 53 54 4F           BYT 'STORE'+128
0456  C97A- 52 C5 
0457  C97C- B0 06              BCS FINTC19
0458  C97E- 20 BB CD           JSR NGETNE
0459  C981- 4C 60 FD           JMP BFSTOR0
0460                   *
0461  C984- 20 4D F9   FINTC19 JSR TEST        *** DELETE ***
0462  C987- 44 45 4C           BYT 'DELETE'+128
0462  C98A- 45 54 C5 
0463  C98D- B0 06              BCS FINTC20
0464  C98F- 20 64 CE           JSR DELETE0
0465  C992- D0 AD              BNE DERROR3
0466  C994- 60                 RTS
0467                   *
0468  C995- 20 4D F9   FINTC20 JSR TEST        *** VOLUME ***
0469  C998- 56 4F 4C           BYT 'VOLUME'+128  (DRIVE)
0469  C99B- 55 4D C5 

----------------------------------------------------------------------

EXTENDED DISK OPERATING SYSTEM     24/10/23   R65 ASSEMBLER  PAGE 11

0470  C99E- B0 0B              BCS FINTC21
0471  C9A0- 20 F2 FC           JSR HARGUM
0472  C9A3- 85 DC              STA FILDRV
0473  C9A5- 20 B5 F9           JSR ENDLER
0474  C9A8- 4C 01 CE           JMP VOLUME
0475                   *
0476  C9AB- 20 4D F9   FINTC21 JSR TEST        *** NEW ***
0477  C9AE- 4E 45 D7           BYT 'NEW'+128     (FILNAM.CY,DRIVE)
0478  C9B1- B0 06              BCS FINTC22
0479  C9B3- 20 1C D0           JSR NEW
0480  C9B6- D0 89              BNE DERROR3
0481  C9B8- 60                 RTS
0482                   *
0483  C9B9- 4C 0E FA   FINTC22 JMP INTCOM+8    MUST BE MONITOR COMM
0484                   *
0485                   *
0486                   * SUBROUTINES FOLLOW
0487                   * ******************
0488                   *
0489                   * INITDIR: INITIALIZE DISK DIRECTORY
0490                   ************************************
0491                   *
0492  C9BC- 20 37 CA   INITDIR JSR DSKONLY
0493  C9BF- 20 A7 F4           JSR PREPDO
0494  C9C2- 20 27 E0           JSR PRTINF
0495  C9C5- 0D 0A 46           BYT $D,$A,'FORMAT (DATA LOST)? '+128
0495  C9C8- 4F 52 4D 
0495  C9CB- 41 54 20 
0495  C9CE- 28 44 41 
0495  C9D1- 54 41 20 
0495  C9D4- 4C 4F 53 
0495  C9D7- 54 29 3F 
0495  C9DA- A0 
0496  C9DB- 20 03 E0           JSR GETCHR
0497  C9DE- 29 5F              AND =$5F
0498  C9E0- C9 59              CMP ='Y'
0499  C9E2- F0 05              BEQ INITD1
0500  C9E4- A9 03              LDA =3          ESCAPE
0501  C9E6- 4C FD F5           JMP DISCER1
0502                   *
0503  C9E9- 20 27 E0   INITD1  JSR PRTINF
0504  C9EC- 0D 8A              BYT $D,$8A
0505  C9EE- 20 15 F0           JSR CLOSAL
0506  C9F1- 78                 SEI
0507                   *
0508  C9F2- A0 00      INITD2  LDY =0
0509  C9F4- 98                 TYA             CLEAR BUFFER FIRST
0510  C9F5- 99 00 D6           STA DIRBUF,Y
0511  C9F8- 88                 DEY
0512  C9F9- D0 FA              BNE *-4

----------------------------------------------------------------------

EXTENDED DISK OPERATING SYSTEM     24/10/23   R65 ASSEMBLER  PAGE 12

0513  C9FB- A2 01              LDX =1          STORE SECTORS 1-31
0514  C9FD- 8E 7A 03          STX BUFSEC
0515  CA00- 20 2A F5   INITD3  JSR WRITDS
0516  CA03- EE 7A 03           INC BUFSEC
0517  CA06- AE 7A 03           LDX BUFSEC
0518  CA09- E0 20              CPX =32
0519  CA0B- 90 F3              BCC INITD3
0520  CA0D- A2 10              LDX =16         LOAD DISK NAME AND NO
0521  CA0F- BD 20 03   INITD4  LDA FILNM1,X
0522  CA12- 9D E1 D6           STA DIRBUF+$E1,X
0523  CA15- CA                 DEX
0524  CA16- 10 F7              BPL INITD4
0525  CA18- 20 2A F5           JSR WRITDS      STORE SECTOR 32
0526  CA1B- 60                 RTS
0527                   *
0528                   *
0529  CA1C- 20 09 F8   SETEND1 JSR HEXPZE
0530  CA1F- AA                 TAX
0531  CA20- CA                 DEX
0532  CA21- 8E 8B 03           STX NEWENT      SAVE ENTRY NO
0533  CA24- 20 F2 FC           JSR HARGUM
0534  CA27- 85 DC              STA FILDRV
0535  CA29- 20 B5 F9           JSR ENDLER
0536  CA2C- 20 CC F4           JSR PREPDO1
0537  CA2F- AE 8B 03           LDX NEWENT
0538  CA32- 20 D2 F4           JSR GETFENT
0539  CA35- A6 E4              LDX FILCNT
0540                   *
0541  CA37- A5 DC      DSKONLY LDA FILDRV
0542  CA39- 29 FE              AND =$FE
0543  CA3B- D0 01              BNE *+3
0544  CA3D- 60                 RTS
0545                   *
0546  CA3E- A9 62              LDA =$62
0547  CA40- 4C 32 F9           JMP ERROR
0548                   *
0549                   * REVIVE: REVIVE DELETED FILE
0550                   *****************************
0551                   *
0552  CA43- 20 1C CA   REVIVE  JSR SETEND1
0553  CA46- AD 1E 03           LDA FILLNK      CLEAR THE DELETED FLAG
0554  CA49- 29 7F              AND =$7F
0555  CA4B- 8D 1E 03           STA FILLNK
0556  CA4E- 20 81 F5           JSR PUTFENT
0557  CA51- 4C 25 F6           JMP ENDDO
0558                   *
0559                   * RENAME: RENAME FILE
0560                   *********************
0561                   *
0562  CA54- 20 BB CD   RENAME  JSR NGETNE

----------------------------------------------------------------------

EXTENDED DISK OPERATING SYSTEM     24/10/23   R65 ASSEMBLER  PAGE 13

0563  CA57- 20 F2 FC           JSR HARGUM
0564  CA5A- 85 DC              STA FILDRV
0565  CA5C- 20 37 CA           JSR DSKONLY
0566  CA5F- 20 B5 F9           JSR ENDLER
0567  CA62- 20 2C F6           JSR PREPRD
0568  CA65- 20 2D E8           JSR PRFLAB
0569  CA68- 20 27 E0           JSR PRTINF
0570  CA6B- 0D 0A 46           BYT $D,$A,'FILNAM.CY,SUBTYPE? '+128
0570  CA6E- 49 4C 4E 
0570  CA71- 41 4D 2E 
0570  CA74- 43 59 2C 
0570  CA77- 53 55 42 
0570  CA7A- 54 59 50 
0570  CA7D- 45 3F A0 
0571  CA80- 20 06 E0           JSR GETLIN
0572  CA83- 20 24 E0           JSR ENDLIN
0573  CA86- D0 03              BNE *+5
0574  CA88- 4C E4 C9           JMP INITD1-5    ESCAPE
0575                   *
0576  CA8B- A6 E4              LDX FILCNT
0577  CA8D- 8E 8B 03           STX NEWENT
0578  CA90- 20 BB CD           JSR NGETNE
0579  CA93- 20 24 E0           JSR ENDLIN
0580  CA96- F0 2E              BEQ RENAME1
0581  CA98- 20 4D F9           JSR TEST
0582  CA9B- AC                 BYT ','+128
0583  CA9C- B0 45              BCS SYNERR
0584  CA9E- 20 4D F9           JSR TEST
0585  CAA1- A1                 BYT '!'+128     PROTECTED?
0586  CAA2- AD 00 03           LDA FILTYP
0587  CAA5- 29 7F              AND =$7F
0588  CAA7- B0 02              BCS *+4
0589  CAA9- 09 80              ORA =$80
0590  CAAB- 8D 00 03           STA FILTYP
0591  CAAE- B1 E9              LDA (VIDPNT),Y
0592  CAB0- C8                 INY
0593  CAB1- C9 41              CMP =$41
0594  CAB3- 90 2E              BCC SYNERR
0595  CAB5- C9 5C              CMP =$5C
0596  CAB7- B0 2A              BCS SYNERR
0597  CAB9- 8D 12 03           STA FILSTP
0598  CABC- 20 24 E0           JSR ENDLIN
0599  CABF- F0 05              BEQ RENAME1
0600  CAC1- A9 15              LDA =$15        END OF LINE EXPECTED
0601  CAC3- 4C FD F5           JMP DISCER1
0602                   *
0603  CAC6- 20 54 F6   RENAME1 JSR PREPWRA+3
0604  CAC9- 8E 11 03           STX FILCYC
0605  CACC- A2 0F              LDX =15
0606  CACE- BD 20 03           LDA FILNM1,X

----------------------------------------------------------------------

EXTENDED DISK OPERATING SYSTEM     24/10/23   R65 ASSEMBLER  PAGE 14

0607  CAD1- 9D 01 03           STA FILNAM,X
0608  CAD4- CA                 DEX
0609  CAD5- 10 F7              BPL *-7
0610  CAD7- AE 8B 03           LDX NEWENT
0611  CADA- 20 ED F4           JSR GETFREC
0612  CADD- 20 83 F5           JSR PUTFENT+2
0613  CAE0- 4C 25 F6           JMP ENDDO
0614                   *
0615  CAE3- A9 18      SYNERR  LDA =$18
0616  CAE5- 4C F4 F5           JMP DISCERR
0617                   *
0618                   * PROTECT: PROTECT DISK FILE
0619                   * **************************
0620                   *
0621  CAE8- 20 BB CD   PROTECT JSR NGETNE
0622  CAEB- 20 F2 FC           JSR HARGUM
0623  CAEE- 85 DC              STA FILDRV
0624  CAF0- 20 37 CA           JSR DSKONLY
0625  CAF3- 20 B5 F9           JSR ENDLER
0626  CAF6- 20 2C F6           JSR PREPRD
0627  CAF9- AD 00 03           LDA FILTYP
0628  CAFC- 09 80              ORA =$80
0629  CAFE- 8D 00 03          STA FILTYP
0630  CB01- A6 E5              LDX FILCN1
0631  CB03- 20 81 F5           JSR PUTFENT
0632  CB06- 4C 25 F6           JMP ENDDO
0633                   *
0634                   * IFNAME: READ FILE NAME, IF THERE
0635                   **********************************
0636                   *
0637  CB09- A9 00      IFNAME  LDA =0
0638  CB0B- 8D 98 03           STA NAMEFLG
0639  CB0E- 20 24 E0           JSR ENDLIN      SKIP BLANKS
0640  CB11- F0 1B              BEQ IFNAME1
0641  CB13- B1 E9              LDA (VIDPNT),Y
0642  CB15- 29 7F              AND =$7F
0643  CB17- C9 40              CMP ='@'
0644  CB19- 90 13              BCC IFNAME1
0645  CB1B- C9 5B              CMP ='['
0646  CB1D- B0 0F              BCS IFNAME1
0647  CB1F- 20 95 CD           JSR NGETNAM
0648  CB22- A9 FF              LDA =$FF
0649  CB24- 8D 98 03           STA NAMEFLG
0650  CB27- B1 E9              LDA (VIDPNT),Y
0651  CB29- C9 2C              CMP =','
0652  CB2B- D0 01              BNE IFNAME1
0653  CB2D- C8                 INY
0654  CB2E- 60         IFNAME1 RTS
0655                   *
0656                   * FDIR: PRINT DIRECTORY

----------------------------------------------------------------------

EXTENDED DISK OPERATING SYSTEM     24/10/23   R65 ASSEMBLER  PAGE 15

0657                   ***********************
0658                   *
0659  CB2F- 20 09 CB   FDIR    JSR IFNAME
0660  CB32- 20 09 F8           JSR HEXPZE
0661  CB35- 85 DC              STA FILDRV
0662  CB37- 20 37 CA           JSR DSKONLY
0663  CB3A- 20 B5 F9           JSR ENDLER
0664  CB3D- A5 DC      FDIR0   LDA FILDRV      ENTRY FOR VECTOR CALL
0665  CB3F- 29 FE              AND =$FE
0666  CB41- F0 03              BEQ *+5
0667  CB43- 4C 09 E8           JMP TDIR
0668                   *
0669  CB46- 20 A7 F4           JSR PREPDO
0670  CB49- A2 FF              LDX =255
0671  CB4B- 20 D2 F4           JSR GETFENT
0672  CB4E- 20 27 E0           JSR PRTINF
0673  CB51- 0D 0A              BYT $D,$A
0674  CB53- 44 49 52           BYT 'DIRECTORY '
0674  CB56- 45 43 54 
0674  CB59- 4F 52 59 
0674  CB5C- 20 
0675  CB5D- 44 49 53           BYT 'DISK '+128
0675  CB60- 4B A0 
0676  CB62- A5 DC              LDA FILDRV
0677  CB64- 20 2D E0           JSR PRTBYT
0678  CB67- 20 27 E0           JSR PRTINF
0679  CB6A- 3A A0              BYT ': '+128
0680  CB6C- A2 00              LDX =0
0681  CB6E- BD 01 03   FDIR0A  LDA FILNAM,X
0682  CB71- 20 09 E0           JSR PRTCHR
0683  CB74- E8                 INX
0684  CB75- E0 10              CPX =16
0685  CB77- 90 F5              BCC FDIR0A
0686                   *
0687  CB79- A2 02              LDX =2
0688  CB7B- 8E 99 03           STX DIRCNT
0689  CB7E- A2 00              LDX =0
0690  CB80- 8E 9A 03           STX DELCNT
0691  CB83- 8E 9B 03           STX DELCNT+1
0692  CB86- AD 98 03   FDIR1   LDA NAMEFLG
0693  CB89- D0 06              BNE *+8
0694  CB8B- 20 D2 F4           JSR GETFENT
0695  CB8E- 4C 99 CB           JMP FDIR1A
0696  CB91- 20 D0 CD           JSR NEXTENT
0697  CB94- AE 7C 03           LDX SCYFC
0698  CB97- 86 E4              STX FILCNT
0699  CB99- AD 00 03   FDIR1A  LDA FILTYP      0 MEANS END MARK
0700  CB9C- F0 7A              BEQ FDIR2
0701  CB9E- 20 06 E8           JSR ESCTST
0702  CBA1- B0 75              BCS FDIR2

----------------------------------------------------------------------

EXTENDED DISK OPERATING SYSTEM     24/10/23   R65 ASSEMBLER  PAGE 16

0703  CBA3- AD 99 03           LDA DIRCNT      EVERY 14 LINES
0704  CBA6- 29 0E              AND =$0E
0705  CBA8- D0 0F              BNE FDIR4
0706  CBAA- EE 99 03           INC DIRCNT
0707  CBAD- EE 99 03           INC DIRCNT
0708  CBB0- 20 03 E0           JSR GETCHR
0709  CBB3- 20 06 E8           JSR ESCTST      ESCAPE?
0710  CBB6- 90 01              BCC FDIR4
0711  CBB8- 60                 RTS             RETURN TO COMMAND LINE
0712                   *
0713  CBB9- AD 1E 03   FDIR4   LDA FILLNK
0714  CBBC- 10 0F              BPL FDIR8
0715  CBBE- AD 9A 03           LDA DELCNT      COUNT DELETED SECTORS
0716  CBC1- 18                 CLC
0717  CBC2- 6D 16 03           ADC FILSIZ+1
0718  CBC5- 8D 9A 03           STA DELCNT
0719  CBC8- 90 03              BCC FDIR8
0720  CBCA- EE 9B 03           INC DELCNT+1
0721                   *
0722  CBCD- AD 97 03   FDIR8   LDA FULLFLG
0723  CBD0- F0 65              BEQ FDIR5
0724  CBD2- 20 27 E0           JSR PRTINF      PRINT FULL DIRECTORY
0725  CBD5- 0D 0A 2A           BYT $D,$A,'***** '+128
0725  CBD8- 2A 2A 2A 
0725  CBDB- 2A A0 
0726  CBDD- A6 E4              LDX FILCNT
0727  CBDF- E8                 INX
0728  CBE0- 8A                 TXA
0729  CBE1- 20 2D E0           JSR PRTBYT
0730  CBE4- 20 27 E0           JSR PRTINF
0731  CBE7- 2E 20 20           BYT '.  SIZE='+128
0731  CBEA- 53 49 5A 
0731  CBED- 45 BD 
0732  CBEF- AD 16 03           LDA FILSIZ+1
0733  CBF2- 20 2D E0           JSR PRTBYT
0734  CBF5- AD 1E 03           LDA FILLNK
0735  CBF8- 10 0D              BPL FDIR3-3
0736                   *
0737  CBFA- 20 27 E0           JSR PRTINF
0738  CBFD- 20 28 44          BYT ' (DELETED)'+128
0738  CC00- 45 4C 45 
0738  CC03- 54 45 44 
0738  CC06- A9 
0739  CC07- EE 99 03           INC DIRCNT      COUNT FIRST LINE
0740  CC0A- 20 2D E8   FDIR3   JSR PRFLAB
0741  CC0D- B0 09              BCS FDIR2       ESCAPE?
0742  CC0F- EE 99 03           INC DIRCNT      COUNT SECOND LINE
0743  CC12- A6 E4      FDIR6   LDX FILCNT
0744  CC14- E8                 INX
0745  CC15- 4C 86 CB           JMP FDIR1

----------------------------------------------------------------------

EXTENDED DISK OPERATING SYSTEM     24/10/23   R65 ASSEMBLER  PAGE 17

0746                   *
0747  CC18- 20 B4 F6   FDIR2   JSR DDIR2
0748  CC1B- 20 27 E0           JSR PRTINF
0749  CC1E- 44 45 4C           BYT 'DELETED:     '+128
0749  CC21- 45 54 45 
0749  CC24- 44 3A 20 
0749  CC27- 20 20 20 
0749  CC2A- A0 
0750  CC2B- AE 9A 03           LDX DELCNT
0751  CC2E- AD 9B 03           LDA DELCNT+1
0752  CC31- 20 30 E0           JSR PRTAX
0753  CC34- A9 00              LDA =0
0754  CC36- 60                 RTS
0755                   *
0756  CC37- AD 1E 03   FDIR5   LDA FILLNK
0757  CC3A- 30 D6              BMI FDIR6
0758  CC3C- 10 CC              BPL FDIR3
0759                   *
0760  CC3E- 4C 25 F6   PACK9   JMP ENDDO
0761                   *
0762                   * PACK: PACK FLOPPY DISK
0763                   ************************
0764                   *
0765  CC41- 20 09 F8   PACK    JSR HEXPZE
0766  CC44- 85 DC              STA FILDRV
0767  CC46- 20 B5 F9           JSR ENDLER
0768  CC49- 20 37 CA           JSR DSKONLY
0769  CC4C- 20 15 F0           JSR CLOSAL
0770  CC4F- 20 27 E0           JSR PRTINF
0771  CC52- 0D 0A              BYT $D,$A
0772  CC54- 50 41 43           BYT 'PACK (DELETED FILES LOST)? '+128
0772  CC57- 4B 20 28 
0772  CC5A- 44 45 4C 
0772  CC5D- 45 54 45 
0772  CC60- 44 20 46 
0772  CC63- 49 4C 45 
0772  CC66- 53 20 4C 
0772  CC69- 4F 53 54 
0772  CC6C- 29 3F A0 
0773  CC6F- 20 03 E0           JSR GETCHR
0774  CC72- 29 5F              AND =$5F
0775  CC74- C9 59              CMP ='Y'
0776  CC76- F0 03              BEQ *+5
0777  CC78- 4C E4 C9           JMP INITD1-5    ESCAPE
0778  CC7B- 20 27 E0           JSR PRTINF
0779  CC7E- 0D 8A              BYT $D,$8A
0780                   *
0781  CC80- 20 A7 F4   PACK0   JSR PREPDO
0782  CC83- A2 00              LDX =0
0783  CC85- 20 D2 F4   PACK1   JSR GETFENT     LOOP UNTIL FIRST

----------------------------------------------------------------------

EXTENDED DISK OPERATING SYSTEM     24/10/23   R65 ASSEMBLER  PAGE 18

0784  CC88- AD 00 03           LDA FILTYP      EMPTY RECORD FOUND
0785  CC8B- F0 B1              BEQ PACK9       NO PACK NEEDED
0786  CC8D- AD 1E 03           LDA FILLNK
0787  CC90- 30 05              BMI PACK2       SKIP, IF DELETED
0788  CC92- A6 E4              LDX FILCNT      ELSE NEXT ENTRY
0789  CC94- E8                 INX
0790  CC95- D0 EE              BNE PACK1       ALLWAYS TAKEN
0791                   *
0792  CC97- A6 E4      PACK2   LDX FILCNT      DELETED FILE FOUND
0793  CC99- 8E 8B 03           STX NEWENT
0794  CC9C- AD 13 03           LDA FILLOC
0795  CC9F- AE 14 03           LDX FILLOC+1
0796  CCA2- 8D 8C 03           STA NEWREC
0797  CCA5- 8E 8D 03           STX NEWREC+1
0798  CCA8- A6 E4              LDX FILCNT
0799  CCAA- E8                 INX
0800  CCAB- 20 D2 F4   PACK3   JSR GETFENT
0801  CCAE- AD 00 03           LDA FILTYP
0802  CCB1- D0 03              BNE *+5
0803  CCB3- 4C 64 CD           JMP PACK8       SKIP, IF END OF DIR.
0804  CCB6- AD 1E 03           LDA FILLNK
0805  CCB9- 10 05              BPL PACK4       SKIP, IF NOT DELETED
0806  CCBB- A6 E4              LDX FILCNT
0807  CCBD- E8                 INX
0808  CCBE- D0 EB              BNE PACK3
0809                   *
0810  CCC0- AD 13 03   PACK4   LDA FILLOC
0811  CCC3- AE 14 03           LDX FILLOC+1
0812  CCC6- 8D 89 03           STA OLDREC
0813  CCC9- 8E 8A 03           STX OLDREC+1
0814  CCCC- A5 E4              LDA FILCNT
0815  CCCE- 8D 88 03           STA OLDENT
0816  CCD1- AD 8C 03           LDA NEWREC
0817  CCD4- AE 8D 03           LDX NEWREC+1
0818  CCD7- 8D 13 03           STA FILLOC
0819  CCDA- 8E 14 03           STX FILLOC+1
0820  CCDD- AE 8B 03           LDX NEWENT
0821  CCE0- 20 ED F4           JSR GETFREC
0822  CCE3- 20 83 F5           JSR PUTFENT+2   MOVE ENTRY
0823  CCE6- AD 16 03           LDA FILSIZ+1
0824  CCE9- 8D 8E 03           STA COUNTER
0825                   *
0826  CCEC- A9 05      PACK5   LDA =5
0827  CCEE- CD 8E 03           CMP COUNTER
0828  CCF1- 90 03              BCC *+5
0829  CCF3- AD 8E 03           LDA COUNTER
0830  CCF6- 8D 8F 03           STA COUNT2
0831                   *
0832  CCF9- A9 00              LDA =<FILBUF    MOVE FILE
0833  CCFB- A2 D7              LDX =>FILBUF

----------------------------------------------------------------------

EXTENDED DISK OPERATING SYSTEM     24/10/23   R65 ASSEMBLER  PAGE 19

0834  CCFD- 85 E0              STA DATA
0835  CCFF- 86 E1             STX DATA+1
0836  CD01- AD 89 03   PACK5A  LDA OLDREC
0837  CD04- AE 8A 03           LDX OLDREC+1
0838  CD07- 85 DE              STA SECTOR
0839  CD09- 86 DD              STX TRACK
0840  CD0B- 20 5C F5           JSR PREPRW1-2
0841  CD0E- 20 57 F4           JSR READ
0842  CD11- EE 89 03           INC OLDREC
0843  CD14- D0 03              BNE *+5
0844  CD16- EE 8A 03           INC OLDREC+1
0845  CD19- E6 E1              INC DATA+1
0846  CD1B- CE 8F 03           DEC COUNT2
0847  CD1E- D0 E1              BNE PACK5A
0848                   *
0849  CD20- A9 D7              LDA =>FILBUF
0850  CD22- 85 E1              STA DATA+1
0851  CD24- A9 05              LDA =5
0852  CD26- CD 8E 03           CMP COUNTER
0853  CD29- 90 03              BCC *+5
0854  CD2B- AD 8E 03           LDA COUNTER
0855  CD2E- 8D 8F 03           STA COUNT2
0856  CD31- AD 8C 03   PACK5B  LDA NEWREC
0857  CD34- AE 8D 03           LDX NEWREC+1
0858  CD37- 85 DE              STA SECTOR
0859  CD39- 86 DD              STX TRACK
0860  CD3B- 20 5C F5           JSR PREPRW1-2
0861  CD3E- 20 25 F4           JSR WRITE
0862  CD41- EE 8C 03           INC NEWREC
0863  CD44- D0 03              BNE *+5
0864  CD46- EE 8D 03           INC NEWREC+1
0865  CD49- E6 E1              INC DATA+1
0866  CD4B- CE 8E 03           DEC COUNTER
0867  CD4E- CE 8F 03           DEC COUNT2
0868  CD51- D0 DE              BNE PACK5B
0869                   *
0870  CD53- AD 8E 03           LDA COUNTER
0871  CD56- D0 94              BNE PACK5
0872                   *
0873  CD58- EE 8B 03           INC NEWENT
0874  CD5B- EE 88 03           INC OLDENT
0875  CD5E- AE 88 03           LDX OLDENT
0876  CD61- 4C AB CC           JMP PACK3
0877                   *
0878  CD64- A9 00      PACK8   LDA =0          SET END MARK
0879  CD66- 8D 00 03           STA FILTYP
0880  CD69- AD 8C 03           LDA NEWREC
0881  CD6C- AE 8D 03           LDX NEWREC+1
0882  CD6F- 8D 13 03           STA FILLOC
0883  CD72- 8E 14 03           STX FILLOC+1

----------------------------------------------------------------------

EXTENDED DISK OPERATING SYSTEM     24/10/23   R65 ASSEMBLER  PAGE 20

0884  CD75- AE 8B 03           LDX NEWENT
0885  CD78- 20 ED F4           JSR GETFREC
0886  CD7B- 20 83 F5           JSR PUTFENT+2
0887  CD7E- 20 27 E0           JSR PRTINF
0888  CD81- 50 41 43           BYT 'PACKING COMPLETE',' '+128
0888  CD84- 4B 49 4E 
0888  CD87- 47 20 43 
0888  CD8A- 4F 4D 50 
0888  CD8D- 4C 45 54 
0888  CD90- 45 A0 
0889                   *
0890  CD92- 4C 25 F6   PACK7   JMP ENDDO
0891                   *
0892                   * NGETNAM: GET FILE NAME AND CYCLUS
0893                   ***********************************
0894                   *
0895  CD95- 20 15 F8   NGETNAM JSR GETNAM
0896  CD98- A2 00              LDX =0
0897                   *
0898  CD9A- A2 00      NGETN6  LDX =0
0899  CD9C- BD 20 03   NGETN7  LDA FILNM1,X
0900  CD9F- C9 40              CMP ='@'
0901  CDA1- D0 12              BNE NGETN9
0902  CDA3- E8                 INX
0903  CDA4- BD 20 03   NGETN8  LDA FILNM1,X
0904  CDA7- C9 20              CMP =' '
0905  CDA9- D0 F1              BNE NGETN7
0906  CDAB- A9 40              LDA ='@'
0907  CDAD- 9D 20 03           STA FILNM1,X
0908  CDB0- E8                 INX
0909  CDB1- E0 10              CPX =16
0910  CDB3- 90 EF              BCC NGETN8
0911                   *
0912  CDB5- E8         NGETN9  INX
0913  CDB6- E0 0F              CPX =15
0914  CDB8- 90 E2              BCC NGETN7
0915  CDBA- 60         NGETN10 RTS
0916                   *
0917                   * NGETNE: GET FILE NAME, NO WILDCARDS
0918                   *************************************
0919                   *
0920  CDBB- 20 95 CD   NGETNE  JSR NGETNAM
0921  CDBE- A2 10              LDX =16
0922  CDC0- BD 21 03   NGETNE1 LDA FILNM1+1,X
0923  CDC3- C9 40              CMP ='@'
0924  CDC5- F0 04              BEQ NGETNE2
0925  CDC7- CA                 DEX
0926  CDC8- D0 F6              BNE NGETNE1
0927  CDCA- 60                 RTS
0928                   *

----------------------------------------------------------------------

EXTENDED DISK OPERATING SYSTEM     24/10/23   R65 ASSEMBLER  PAGE 21

0929  CDCB- A9 61      NGETNE2 LDA =$61        NO WILD CARD
0930  CDCD- 4C 32 F9           JMP ERROR
0931                   *
0932                   * NEXTENTRY
0933                   ***********
0934                   * INPUT: X=FIRST ENTRY TO CHECK
0935                   * OUTPUT: SCYFC: FOUND ENTRY,Z=1 IF END MARK
0936                   *
0937  CDD0- 8E 7C 03   NEXTENT STX SCYFC
0938  CDD3- 20 D2 F4   NEXTE5  JSR GETFENT
0939  CDD6- AD 00 03           LDA FILTYP
0940  CDD9- D0 01              BNE *+3         END MARK?
0941  CDDB- 60                 RTS
0942                   *
0943  CDDC- AD 30 03           LDA FILCY1      IF FILCYC=0
0944  CDDF- F0 05              BEQ NEXTE10     DO NOT CHECK
0945  CDE1- CD 11 03           CMP FILCYC
0946  CDE4- D0 12              BNE NEXTE30
0947                   *
0948  CDE6- A2 0F      NEXTE10 LDX =15
0949  CDE8- BD 20 03           LDA FILNM1,X
0950  CDEB- C9 40              CMP ='@'
0951  CDED- F0 05              BEQ NEXTE20
0952  CDEF- DD 01 03           CMP FILNAM,X
0953  CDF2- D0 04              BNE NEXTE30
0954                   *
0955  CDF4- CA         NEXTE20 DEX
0956  CDF5- 10 F1              BPL NEXTE10+2
0957  CDF7- 60                 RTS             FOUND
0958                   *
0959  CDF8- EE 7C 03   NEXTE30 INC SCYFC
0960  CDFB- AE 7C 03           LDX SCYFC
0961  CDFE- 4C D3 CD          JMP NEXTE5
0962                   *
0963                   * VOLUME: CHANGE VOLUME NAME
0964                   ****************************
0965                   *
0966  CE01- 20 37 CA   VOLUME  JSR DSKONLY
0967  CE04- 20 A7 F4           JSR PREPDO
0968  CE07- A2 FF              LDX =255
0969  CE09- 20 D2 F4           JSR GETFENT
0970  CE0C- 20 27 E0           JSR PRTINF
0971  CE0F- 0D 0A 4F           BYT $D,$A,'OLD VOLUME: '+128
0971  CE12- 4C 44 20 
0971  CE15- 56 4F 4C 
0971  CE18- 55 4D 45 
0971  CE1B- 3A A0 
0972  CE1D- A2 00              LDX =0
0973  CE1F- BD 01 03   VOL10   LDA FILNAM,X
0974  CE22- 20 09 E0           JSR PRTCHR

----------------------------------------------------------------------

EXTENDED DISK OPERATING SYSTEM     24/10/23   R65 ASSEMBLER  PAGE 22

0975  CE25- E8                 INX
0976  CE26- E0 10              CPX =16
0977  CE28- 90 F5              BCC VOL10
0978  CE2A- 20 27 E0           JSR PRTINF
0979  CE2D- AE                 BYT '.'+128
0980  CE2E- AD 11 03           LDA FILCYC
0981  CE31- 20 2D E0           JSR PRTBYT
0982  CE34- 20 27 E0           JSR PRTINF
0983  CE37- 0D 0A 4E           BYT $D,$A,'NEW VOLUME: '+128
0983  CE3A- 45 57 20 
0983  CE3D- 56 4F 4C 
0983  CE40- 55 4D 45 
0983  CE43- 3A A0 
0984  CE45- 20 06 E0           JSR GETLIN
0985  CE48- 20 24 E0           JSR ENDLIN
0986  CE4B- D0 01              BNE *+3
0987  CE4D- 60                 RTS             NO CHANGE, RETURN
0988  CE4E- 20 BB CD           JSR NGETNE
0989  CE51- A2 10              LDX =16
0990  CE53- BD 20 03   VOL20   LDA FILNM1,X
0991  CE56- 9D E1 D6           STA DIRBUF+$E1,X
0992  CE59- CA                 DEX
0993  CE5A- 10 F7              BPL VOL20
0994  CE5C- A9 20              LDA =$20        Last directory entry
0995  CE5E- 8D 7A 03           STA BUFSEC
0996  CE61- 4C 2A F5           JMP WRITDS
0997                   *
0998                   * DELETE: DELETE ONE OR SEVERAL FILES
0999                   *************************************
1000                   *
1001  CE64- 20 95 CD   DELETE0 JSR NGETNAM
1002  CE67- 20 F2 FC           JSR HARGUM
1003  CE6A- 85 DC              STA FILDRV
1004  CE6C- 20 37 CA           JSR DSKONLY
1005  CE6F- A2 10      DELETE1 LDX =16         WILD CARDS?
1006  CE71- BD 1F 03   DEL1    LDA FILNM1-1,X
1007  CE74- C9 40              CMP ='@'
1008  CE76- F0 06              BEQ DEL2        SKIP, IF YES
1009  CE78- CA                 DEX
1010  CE79- D0 F6              BNE DEL1
1011  CE7B- 4C 0C F0           JMP DELETE      DELETE ONE FILE
1012                   *
1013  CE7E- 20 A7 F4   DEL2    JSR PREPDO
1014                   *
1015  CE81- A2 00              LDX =0
1016  CE83- 8E AD 03           STX SUCCESS     RESET SUCCESS CNT
1017  CE86- 20 D0 CD   DEL3    JSR NEXTENT
1018  CE89- AD 00 03           LDA FILTYP
1019  CE8C- D0 17              BNE DEL4
1020  CE8E- AE AD 03           LDX SUCCESS     ANYTHING DONE?

----------------------------------------------------------------------

EXTENDED DISK OPERATING SYSTEM     24/10/23   R65 ASSEMBLER  PAGE 23

1021  CE91- D0 0F              BNE DEL6
1022                   *
1023  CE93- 20 27 E0   NOSUCC  JSR PRTINF
1024  CE96- 0D 0A 4E           BYT $D,$A,'NO MATCH',$D,$8A
1024  CE99- 4F 20 4D 
1024  CE9C- 41 54 43 
1024  CE9F- 48 0D 8A 
1025                   *
1026  CEA2- 4C 25 F6   DEL6    JMP ENDDO       END MARKFOUND
1027                   *
1028  CEA5- AD 1E 03   DEL4    LDA FILLNK
1029  CEA8- 30 09              BMI DEL5
1030  CEAA- 20 2D E8           JSR PRFLAB
1031  CEAD- 20 F1 F6           JSR DELETE4
1032  CEB0- EE AD 03           INC SUCCESS     COUNT SUCCESS
1033  CEB3- EE 7C 03   DEL5    INC SCYFC
1034  CEB6- AE 7C 03           LDX SCYFC
1035  CEB9- 4C 86 CE           JMP DEL3
1036                   *
1037                   * COPY: COPY FILE(S) TO NEW DRIVE
1038                   *********************************
1039                   *
1040  CEBC- 20 09 CB   COPY    JSR IFNAME
1041  CEBF- 20 15 F0           JSR CLOSAL
1042  CEC2- 20 09 F8           JSR HEXPZE      GET OLD DRIVE
1043  CEC5- 8D 93 03           STA OLDDRV
1044  CEC8- 20 39 CA           JSR DSKONLY+2
1045  CECB- 20 F2 FC           JSR HARGUM      GET NEW DRIVE
1046  CECE- 8D 94 03           STA NEWDRV
1047  CED1- 20 39 CA           JSR DSKONLY+2
1048  CED4- AD 94 03   COPY0   LDA NEWDRV      DIFFERENT DRIVE?
1049  CED7- CD 93 03           CMP OLDDRV
1050  CEDA- D0 05              BNE COPY1
1051                   *
1052  CEDC- A9 63              LDA =$63        IDENTICAL DRIVE
1053  CEDE- 85 DB              STA FILERR
1054  CEE0- 60                 RTS
1055                   *
1056  CEE1- A2 10      COPY1   LDX =16
1057  CEE3- BD 20 03   COPYL   LDA FILNM1,X
1058  CEE6- 9D 9C 03           STA FILNM2,X
1059  CEE9- CA                 DEX
1060  CEEA- 10 F7              BPL COPYL
1061                   *
1062  CEEC- A2 00              LDX =0
1063  CEEE- 8E AD 03           STX SUCCESS     RESET SUCCESS CNT
1064  CEF1- 8E 88 03   LOOP    STX OLDENT      LOOP THROUGH FILES
1065  CEF4- AD 93 03           LDA OLDDRV
1066  CEF7- 85 DC              STA FILDRV
1067  CEF9- A9 00              LDA =0

----------------------------------------------------------------------

EXTENDED DISK OPERATING SYSTEM     24/10/23   R65 ASSEMBLER  PAGE 24

1068  CEFB- 85 DA              STA FILFLG
1069  CEFD- 20 A7 F4          JSR PREPDO
1070  CF00- AE 88 03           LDX OLDENT
1071  CF03- AD 98 03           LDA NAMEFLG
1072  CF06- D0 06              BNE *+8
1073  CF08- 20 D2 F4           JSR GETFENT
1074  CF0B- 4C 17 CF           JMP LOOP1
1075                   *
1076  CF0E- 20 D0 CD           JSR NEXTENT
1077  CF11- AE 7C 03           LDX SCYFC
1078  CF14- 8E 88 03           STX OLDENT
1079                   *
1080  CF17- AD 00 03   LOOP1   LDA FILTYP
1081  CF1A- D0 0B              BNE NOTEND
1082  CF1C- AD AD 03           LDA SUCCESS     ANYTHING DONE?
1083  CF1F- D0 03              BNE *+5
1084  CF21- 4C 93 CE           JMP NOSUCC
1085  CF24- 4C 25 F6           JMP ENDDO       COMPLETE
1086                   *
1087  CF27- AD 1E 03   NOTEND  LDA FILLNK      SKIP DELETED FILES
1088  CF2A- 10 03              BPL *+5
1089  CF2C- 4C 7B CF           JMP NEXTF
1090  CF2F- A2 10              LDX =16
1091  CF31- BD 01 03   NOTE1   LDA FILNAM,X
1092  CF34- 9D 20 03           STA FILNM1,X
1093  CF37- CA                 DEX
1094  CF38- 10 F7              BPL NOTE1
1095                   *
1096  CF3A- 20 2D E8   COPYF   JSR PRFLAB
1097  CF3D- EE AD 03           INC SUCCESS
1098  CF40- A9 00              LDA =<COPYBS    PREPARE ADDRESS
1099  CF42- A2 20              LDX =>COPYBS
1100  CF44- 20 4E F5           JSR PREPRW+6    AND POINTERS
1101                   *
1102  CF47- 38                 SEC
1103  CF48- A9 BF              LDA =>COPYBE    CHECK SIZE OF COPY
1104  CF4A- E9 20              SBC =>COPYBS    BUFFER
1105  CF4C- E5 E5              SBC FILCN1
1106  CF4E- B0 05              BCS COPYF1
1107  CF50- A9 64              LDA =$64        FILE TOO LARGE
1108  CF52- 85 DB              STA FILERR
1109  CF54- 60                 RTS
1110                   *
1111  CF55- 20 6E F7   COPYF1  JSR DRDFIL2
1112  CF58- AD 94 03           LDA NEWDRV
1113  CF5B- 85 DC              STA FILDRV
1114  CF5D- A9 60              LDA =$60
1115  CF5F- 85 DA              STA FILFLG
1116  CF61- AD 11 03           LDA FILCYC
1117  CF64- 8D 30 03           STA FILCY1

----------------------------------------------------------------------

EXTENDED DISK OPERATING SYSTEM     24/10/23   R65 ASSEMBLER  PAGE 25

1118  CF67- A9 00              LDA =<COPYBS
1119  CF69- A2 20              LDX =>COPYBS
1120  CF6B- 8D 31 03           STA FILSA1
1121  CF6E- 8E 32 03           STX FILSA1+1
1122  CF71- 20 2C EB           JSR WRFILE+24   DO NOT OVERWRITE
1123  CF74- F0 05              BEQ NEXTF       FILTYP,DATE
1124  CF76- A9 01              LDA =1
1125  CF78- 85 DB              STA FILERR      WRITE ERROR
1126  CF7A- 60                 RTS
1127                   *
1128  CF7B- A2 10      NEXTF   LDX =16
1129  CF7D- BD 9C 03   NEXTF1  LDA FILNM2,X    RESTORE FILNM1,FILCY1
1130  CF80- 9D 20 03           STA FILNM1,X
1131  CF83- CA                 DEX
1132  CF84- 10 F7              BPL NEXTF1
1133  CF86- AE 88 03           LDX OLDENT
1134  CF89- E8                 INX
1135  CF8A- 20 06 E8           JSR ESCTST
1136  CF8D- B0 03              BCS *+5
1137  CF8F- 4C F1 CE           JMP LOOP
1138                   *
1139  CF92- AD AD 03           LDA SUCCESS     ANYTHING DONE?
1140  CF95- D0 03              BNE *+5
1141  CF97- 4C 93 CE           JMP NOSUCC
1142                   *
1143  CF9A- 4C 25 F6           JMP ENDDO       FINISHED
1144                   *
1145                   *
1146                   * EXPORT: EXPORT A SEQUENTIAL FILE
1147                   **********************************
1148                   *
1149  CF9D- 20 37 CA   EXPORT  JSR DSKONLY
1150  CFA0- 20 2C F6           JSR PREPRD
1151  CFA3- 20 2D E8           JSR PRFLAB
1152                   *
1153  CFA6- A9 01              LDA =1          COMMAND 1: EXPORT
1154  CFA8- 8D 30 14           STA EMUCOM      EXECUTE LINUX CMD
1155  CFAB- 20 25 F6           JSR ENDDO
1156  CFAE- AD 31 14           LDA EMURES      GET RESULT
1157  CFB1- 85 DB              STA FILERR
1158  CFB3- 60                 RTS
1159                   *
1160                   *
1161                   * IMPORT: IMPORT A SEQUENTIAL FILE
1162                   **********************************
1163                   *
1164  CFB4- 20 37 CA   IMPORT  JSR DSKONLY
1165  CFB7- 20 B5 F9           JSR ENDLER
1166                   *
1167  CFBA- A2 10      IMPORT1 LDX =16

----------------------------------------------------------------------

EXTENDED DISK OPERATING SYSTEM     24/10/23   R65 ASSEMBLER  PAGE 26

1168  CFBC- BD 20 03           LDA FILNM1,X
1169  CFBF- 9D 01 03           STA FILNAM,X
1170  CFC2- CA                 DEX
1171  CFC3- 10 F7              BPL *-7
1172                   *
1173  CFC5- A9 02              LDA =2          COMMAND 2: IMPORT
1174  CFC7- 8D 30 14           STA EMUCOM      EXECUTE LINUX CMD
1175  CFCA- AD 31 14           LDA EMURES      GET RESULT
1176  CFCD- D0 05              BNE IMPORTE
1177  CFCF- 20 2D E8           JSR PRFLAB
1178  CFD2- A9 00              LDA =0          NO ERROR
1179  CFD4- 85 DB      IMPORTE STA FILERR
1180  CFD6- 60                 RTS
1181                   *
1182                   * EDIT: EDIT USING LEAFPAD
1183                   **************************
1184                   *
1185  CFD7- 20 9D CF   EDIT    JSR EXPORT
1186  CFDA- D0 21              BNE EDITR
1187  CFDC- 20 27 E8           JSR TDELAY      ALLOW SCREEN UPDATE
1188  CFDF- 20 EA CF           JSR EDIT0
1189  CFE2- D0 19              BNE EDITR
1190  CFE4- 20 BA CF           JSR IMPORT1
1191  CFE7- D0 14              BNE EDITR
1192  CFE9- 60                 RTS
1193                   *
1194  CFEA- A2 10      EDIT0   LDX =16
1195  CFEC- BD 20 03           LDA FILNM1,X
1196  CFEF- 9D 01 03           STA FILNAM,X
1197  CFF2- CA                 DEX
1198  CFF3- 10 F7              BPL *-7
1199                   *
1200  CFF5- A9 03              LDA =3          COMMAND 3: EDIT
1201  CFF7- 8D 30 14           STA EMUCOM      EXECUTE LINUX CMD
1202  CFFA- AD 31 14           LDA EMURES      GET RESULT
1203  CFFD- 85 DB      EDITR   STA FILERR
1204  CFFF- 60                RTS
1205                   *
1206                   * FLOPPY: CHANGE FLOPPY DISK
1207                   ****************************
1208                   *
1209  D000- 20 37 CA   FLOPPY  JSR DSKONLY
1210  D003- 20 B5 F9           JSR ENDLER
1211                   *
1212  D006- A2 10              LDX =16
1213  D008- BD 20 03           LDA FILNM1,X
1214  D00B- 9D 01 03           STA FILNAM,X
1215  D00E- CA                 DEX
1216  D00F- 10 F7              BPL *-7
1217                   *

----------------------------------------------------------------------

EXTENDED DISK OPERATING SYSTEM     24/10/23   R65 ASSEMBLER  PAGE 27

1218  D011- A9 04              LDA =4          COMMAND 4: FLOPPY
1219  D013- 8D 30 14           STA EMUCOM      EXECUTE LINUX CMD
1220  D016- AD 31 14           LDA EMURES      GET RESULT
1221  D019- 85 DB              STA FILERR
1222  D01B- 60                 RTS
1223                   *
1224                   * NEW: CREATE AN NEW SEQUENTIAL FILE
1225                   ************************************
1226                   *
1227  D01C- 20 BB CD   NEW     JSR NGETNE
1228  D01F- 20 F2 FC           JSR HARGUM
1229  D022- 85 DC              STA FILDRV
1230  D024- A9 42      NEW0    LDA ='B'        DEFAULT SUBTYPE
1231  D026- 8D 12 03           STA FILSTP
1232                   *
1233  D029- A2 0E              LDX =14         FIND TYPE
1234  D02B- BD 20 03   NEW1    LDA FILNM1,X
1235  D02E- C9 3A              CMP =':'
1236  D030- F0 05              BEQ NEW2
1237  D032- CA                 DEX
1238  D033- D0 F6              BNE NEW1
1239  D035- F0 06              BEQ NEW3
1240                   *
1241  D037- BD 21 03   NEW2    LDA FILNM1+1,X
1242  D03A- 8D 12 03           STA FILSTP      STORE SUBTYPE
1243                   *
1244  D03D- A9 20      NEW3    LDA =$20        WRITE
1245  D03F- 85 DA              STA FILFLG
1246  D041- A9 01              LDA =1
1247  D043- 8D 37 03           STA MAXSIZ      SIZE 1 SECTOR
1248  D046- 20 0F F0           JSR OPEN
1249  D049- F0 01              BEQ NEW4
1250  D04B- 60         NEWERR  RTS
1251                   *
1252  D04C- 8C 96 03   NEW4    STY NEWFIL      SAVE FILE NO
1253  D04F- 20 2D E8           JSR PRFLAB
1254  D052- A9 20              LDA =' '
1255  D054- AE 96 03           LDX NEWFIL
1256  D057- 20 1B F0           JSR WRITCH      WRITE ONE BLANK
1257  D05A- D0 EF              BNE NEWERR
1258  D05C- AE 96 03           LDX NEWFIL
1259  D05F- 20 12 F0           JSR CLOSE       CLOSE FILE
1260  D062- 60                 RTS
1261                   *
1262                           TIT GRAPHICS SUBROUTINES
1263                           PAG

----------------------------------------------------------------------

GRAPHICS SUBROUTINES               24/10/23   R65 ASSEMBLER  PAGE 28

1264                   *
1265                   * SUBROUTINES FOR GRAPHICS
1266                   **************************
1267                   *
1268                   * PLOT (GRX,GRY,GRC)
1269                   ********************
1270                   * USER MUST CHECK VFOR VALID VALUES!
1271                   *
1272  D063- AD AE 03   PLOT    LDA GRX
1273  D066- 4A                 LSR A
1274  D067- 4A                 LSR A
1275  D068- 4A                 LSR A
1276  D069- AA                 TAX             X=GRX/8
1277  D06A- A9 1C              LDA =28
1278  D06C- 78                 SEI
1279  D06D- 8D E0 14           STA MULTX       MULTX=28
1280  D070- AD AF 03           LDA GRY
1281  D073- 8D E1 14           STA MULTY       MULTY=GRY
1282  D076- AC E3 14           LDY MULTR+1     Y=HIGH(MULTR)
1283  D079- 58                 CLI
1284  D07A- 8A                 TXA             A=GRX/8
1285  D07B- 18                 CLC
1286  D07C- 6D E2 14           ADC MULTR
1287  D07F- 90 01              BCC PLOT1
1288  D081- C8                 INY
1289  D082- 85 E0      PLOT1   STA DATA        A,Y=GRX/8+28*GRY
1290  D084- 98                 TYA
1291  D085- 18                 CLC
1292  D086- 69 07              ADC =7
1293  D088- 85 E1              STA DATA+1      DATA=GRX/8+28*GRY+$700
1294                   *
1295  D08A- AD AE 03           LDA GRX
1296  D08D- 29 07              AND =7          A=GRX AND 7
1297  D08F- A8                 TAY             Y=GRX AND Y
1298  D090- B9 AE D0           LDA MASKTB,Y    A=MASKTB[GRX AND 7]
1299  D093- A0 00              LDY =0
1300  D095- AE B0 03           LDX GRC         X=GRC
1301  D098- F0 0F              BEQ PLOR
1302  D09A- CA                 DEX
1303  D09B- F0 07              BEQ PLEOR
1304                   *
1305  D09D- 49 FF      PLAND   EOR =$FF        NOT MASK
1306  D09F- 31 E0              AND (DATA),Y    A=[DATA] AND NOT MASK
1307  D0A1- 91 E0              STA (DATA),Y
1308  D0A3- 60                 RTS
1309                   *
1310  D0A4- 51 E0      PLEOR   EOR (DATA),Y    A=[DATA] EOR MASK
1311  D0A6- 91 E0              STA (DATA),Y
1312  D0A8- 60                 RTS
1313                   *

----------------------------------------------------------------------

GRAPHICS SUBROUTINES               24/10/23   R65 ASSEMBLER  PAGE 29

1314  D0A9- 11 E0      PLOR    ORA (DATA),Y    A=[DATA] OR MASK
1315  D0AB- 91 E0              STA (DATA),Y
1316  D0AD- 60                 RTS
1317                   *
1318  D0AE- 80 40 20   MASKTB  BYT $80,$40,$20,$10
1318  D0B1- 10 
1319  D0B2- 08 04 02           BYT $08,$04,$02,$01
1319  D0B5- 01 
1320                   *
1321                   *
1322                   * PLOTCH (GRX,GRY,GRC)
1323                   **********************
1324                   * USER MUST CHECK FOR VALID VALUES OF
1325                   * X AND Y
1326                   *
1327  D0B6- A9 08      PLOTCH  LDA =8          8 BYTES OF MAP
1328  D0B8- 8D B5 03           STA GRYCNT
1329  D0BB- A9 00              LDA =0          MEANS 8 BITS IN ROW
1330  D0BD- 8D B9 03           STA GRYLOW
1331  D0C0- AD AF 03           LDA GRY
1332  D0C3- 18                 CLC
1333  D0C4- 69 07              ADC =7
1334  D0C6- 8D AF 03           STA GRY         START WITH TOP
1335  D0C9- AD B0 03           LDA GRC
1336  D0CC- 29 7F              AND =$7F
1337  D0CE- 38                 SEC
1338  D0CF- E9 20              SBC =$20        RETURN IF CTRL CHAR
1339  D0D1- 10 01              BPL PLOTCH1
1340  D0D3- 60                 RTS
1341                   *
1342  D0D4- 38         PLOTCH1 SEC
1343  D0D5- C9 40              CMP =$40        CONVERT TO UPPER CASE
1344  D0D7- 90 02              BCC PLOTCH2
1345  D0D9- E9 20              SBC =$20
1346                   *
1347  D0DB- A2 D4      PLOTCH2 LDX =>FONTTB
1348  D0DD- 86 E3              STX DOSPNT+1    A=CODE NOW $00-$3F
1349  D0DF- 0A                 ASL A
1350  D0E0- 0A                 ASL A
1351  D0E1- 0A                 ASL A
1352  D0E2- 90 02              BCC *+4
1353  D0E4- E6 E3              INC DOSPNT+1
1354  D0E6- 8D B2 03           STA GRINDEX     8 * CODE
1355  D0E9- A2 00              LDX =0
1356  D0EB- 8E B3 03           STX GRCNT       GRCNT COUNTS MAP BYTES
1357  D0EE- 18                 CLC             DOSPNT=FONTTB+8*CODE
1358  D0EF- 69 00              ADC =<FONTTB
1359  D0F1- 85 E2              STA DOSPNT
1360  D0F3- 90 02              BCC PLOTCH3
1361  D0F5- E6 E3              INC DOSPNT+1

----------------------------------------------------------------------

GRAPHICS SUBROUTINES               24/10/23   R65 ASSEMBLER  PAGE 30

1362                   *
1363  D0F7- A9 80      PLOTCH3 LDA =$80
1364  D0F9- 8D B4 03           STA GRMASK
1365  D0FC- AD AE 03           LDA GRX
1366  D0FF- 8D B8 03          STA GRXLOW      SAVE GRX FOR NEXT ROW
1367  D102- AC B3 03   PLOTCH4 LDY GRCNT       COUNTS FROM 0 TO GRYCNT-
1368  D105- AD B4 03           LDA GRMASK
1369  D108- 31 E2              AND (DOSPNT),Y  GET A CHARACTER BIT MAP
1370  D10A- F0 08              BEQ PLOTCH5
1371  D10C- A2 00              LDX =0          WHITE
1372  D10E- 8E B0 03           STX GRC
1373  D111- 4C 19 D1           JMP PLOTCH6
1374  D114- A2 02      PLOTCH5 LDX =2          BLACK
1375  D116- 8E B0 03           STX GRC
1376  D119- 20 63 D0   PLOTCH6 JSR PLOT        PLOT THE DOT
1377  D11C- EE AE 03           INC GRX         INCREMENT X FOR NEXT DOT
1378  D11F- AD B4 03           LDA GRMASK
1379  D122- C9 01              CMP =$01        LAST BIT DONE?
1380  D124- F0 15              BEQ PLOTCH8
1381  D126- 4A                 LSR A           SHIFT MASK
1382  D127- 8D B4 03           STA GRMASK
1383  D12A- CD B9 03           CMP GRYLOW      ONE ROW DONE?
1384  D12D- D0 D3              BNE PLOTCH4     NEXT BIT
1385  D12F- AD B8 03   PLOTCH7 LDA GRXLOW      RESTORE STARTING GRX
1386  D132- 8D AE 03           STA GRX
1387  D135- CE AF 03           DEC GRY
1388  D138- 4C 02 D1           JMP PLOTCH4
1389                   *
1390  D13B- EE B3 03   PLOTCH8 INC GRCNT       NEXT MAP BYTE
1391  D13E- AD B3 03           LDA GRCNT
1392  D141- CD B5 03           CMP GRYCNT
1393  D144- F0 0C              BEQ PLOTCH9
1394  D146- AD B8 03           LDA GRXLOW      RESTORE STARTING GRX
1395  D149- 8D AE 03           STA GRX
1396  D14C- CE AF 03           DEC GRY
1397  D14F- 4C F7 D0           JMP PLOTCH3
1398                   *
1399  D152- 60         PLOTCH9 RTS             DONE
1400                   *
1401                   * BITMAP (GRX,GRY,GRMAP)
1402                   ************************
1403                   * USER MUST CHECK FOR VALID VALUES OF
1404                   * X AND Y
1405                   *
1406  D153- AD B6 03   BITMAP  LDA GRMAP       EXCHANGE BYTES
1407  D156- AE B7 03           LDX GRMAP+1
1408  D159- 8D B7 03           STA GRMAP+1
1409  D15C- 8E B6 03           STX GRMAP
1410  D15F- AD AF 03           LDA GRY         START ON TOP
1411  D162- 69 03              ADC =3

----------------------------------------------------------------------

GRAPHICS SUBROUTINES               24/10/23   R65 ASSEMBLER  PAGE 31

1412  D164- 8D AF 03           STA GRY
1413  D167- A9 02              LDA =2          2 BYTES OF MAP
1414  D169- 8D B5 03           STA GRYCNT
1415  D16C- A9 08              LDA =8          MEANS 4 BITS IN ROW
1416  D16E- 8D B9 03           STA GRYLOW
1417  D171- A2 00              LDX =0
1418  D173- 8E B3 03           STX GRCNT       COUNTS MAP BYTES
1419  D176- A9 03              LDA =>GRMAP     SET MAP ADDRESS
1420  D178- 85 E3              STA DOSPNT+1
1421  D17A- A9 B6              LDA =<GRMAP
1422  D17C- 85 E2              STA DOSPNT
1423  D17E- 4C F7 D0           JMP PLOTCH3
1424                   *
1425                   * DRAWX (GRX,GRY,GRC,GRN)
1426                   *************************
1427                   * USER MUST CHECK FOR VALID VALUES OF
1428                   * X AND Y AND N
1429                   *
1430  D181- 20 63 D0   DRAWX   JSR PLOT        PLOT A DOT
1431  D184- EE AE 03           INC GRX
1432  D187- CE B1 03           DEC GRN
1433  D18A- D0 F5              BNE DRAWX       KEEP DRAWING
1434  D18C- 60                 RTS
1435                   *
1436                   * DRAWY (GRX,GRY,GRC,GRN)
1437                   *************************
1438                   * USER MUST CHECK FOR VALID VALUES OF
1439                   * X AND Y AND N
1440                   *
1441  D18D- 20 63 D0   DRAWY   JSR PLOT        PLOT A DOT
1442  D190- EE AF 03           INC GRY
1443  D193- CE B1 03           DEC GRN
1444  D196- D0 F5              BNE DRAWY       KEEP DRAWING
1445  D198- 60                 RTS
1446                   *
1447                   * DRAWXY (GRX,GRY,GRC,GRN,XINC,YINC)
1448                   ************************************
1449                   * USER MUST CHECK FOR VALID VALUES
1450                   *
1451  D199- A9 00      DRAWXY  LDA =0
1452  D19B- 8D B8 03           STA GRXLOW
1453  D19E- 8D B9 03           STA GRYLOW
1454  D1A1- 20 63 D0   DRAWXY1 JSR PLOT        PLOT A DOT
1455  D1A4- 18                 CLC             CALCULATE NEXT GRX
1456  D1A5- AD B8 03           LDA GRXLOW
1457  D1A8- 6D B6 03           ADC GRXINC
1458  D1AB- 8D B8 03           STA GRXLOW
1459  D1AE- AD AE 03           LDA GRX
1460  D1B1- 6D B7 03           ADC GRXINC+1
1461  D1B4- 8D AE 03           STA GRX

----------------------------------------------------------------------

GRAPHICS SUBROUTINES               24/10/23   R65 ASSEMBLER  PAGE 32

1462                   *
1463  D1B7- 18                 CLC             CALCULATE NEXT GRY
1464  D1B8- AD B9 03           LDA GRYLOW
1465  D1BB- 6D BA 03           ADC GRYINC
1466  D1BE- 8D B9 03           STA GRYLOW
1467  D1C1- AD AF 03           LDA GRY
1468  D1C4- 6D BB 03           ADC GRYINC+1
1469  D1C7- 8D AF 03           STA GRY
1470                   *
1471  D1CA- CE B1 03           DEC GRN
1472  D1CD- D0 D2              BNE DRAWXY1     KEEP DRAWING
1473  D1CF- 60                 RTS
1474                   *
1475                   *
1476                   * 8x8 BIT CHARACTER TABLE
1477                   *************************
1478                   * FOR CHARACTER DISPLAY IN GRAPHICS MODE
1479                   *
1480                   *
1481  D1D0-                    ORG $D400
1482                   *
1483  D400- 00 00 00   FONTTB  BYT $00,$00,$00
1484  D403- 00 00 00           BYT $00,$00,$00
1485  D406- 00 00              BYT $00,$00
1486  D408- 04 04 04           BYT $04,$04,$04         !
1487  D40B- 04 04 00           BYT $04,$04,$00
1488  D40E- 04 00              BYT $04,$00
1489  D410- 0A 0A 0A           BYT $0A,$0A,$0A         "
1490  D413- 00 00 00           BYT $00,$00,$00
1491  D416- 00 00              BYT $00,$00
1492  D418- 0A 0A 1F           BYT $0A,$0A,$1F         #
1493  D41B- 0A 1F 0A           BYT $0A,$1F,$0A
1494  D41E- 0A 00              BYT $0A,$00
1495  D420- 04 0F 14           BYT $04,$0F,$14         $
1496  D423- 0E 05 1E           BYT $0E,$05,$1E
1497  D426- 04 00              BYT $04,$00
1498  D428- 19 19 02           BYT $19,$19,$02         %
1499  D42B- 04 08 13           BYT $04,$08,$13
1500  D42E- 13 00              BYT $13,$00
1501  D430- 04 0A 0A           BYT $04,$0A,$0A         &
1502  D433- 0C 15 12           BYT $0C,$15,$12
1503  D436- 0D 00              BYT $0D,$00
1504  D438- 04 08 10           BYT $04,$08,$10         '
1505  D43B- 00 00 00           BYT $00,$00,$00
1506  D43E- 00 00              BYT $00,$00
1507  D440- 02 04 08           BYT $02,$04,$08         (
1508  D443- 08 08 04           BYT $08,$08,$04
1509  D446- 02 00              BYT $02,$00
1510  D448- 08 04 02           BYT $08,$04,$02         )
1511  D44B- 02 02 04           BYT $02,$02,$04

----------------------------------------------------------------------

GRAPHICS SUBROUTINES               24/10/23   R65 ASSEMBLER  PAGE 33

1512  D44E- 08 00              BYT $08,$00
1513  D450- 00 04 15           BYT $00,$04,$15         *
1514  D453- 0E 15 04           BYT $0E,$15,$04
1515  D456- 00 00              BYT $00,$00
1516  D458- 00 04 04           BYT $00,$04,$04         +
1517  D45B- 1F 04 04           BYT $1F,$04,$04
1518  D45E- 00 00              BYT $00,$00
1519  D460- 00 00 00           BYT $00,$00,$00         ,
1520  D463- 00 00 08           BYT $00,$00,$08
1521  D466- 08 10              BYT $08,$10
1522  D468- 00 00 00           BYT $00,$00,$00         -
1523  D46B- 1F 00 00           BYT $1F,$00,$00
1524  D46E- 00 00              BYT $00,$00
1525  D470- 00 00 00           BYT $00,$00,$00         .
1526  D473- 00 00 00           BYT $00,$00,$00
1527  D476- 10 00              BYT $10,$00
1528  D478- 01 01 02           BYT $01,$01,$02         /
1529  D47B- 04 08 10           BYT $04,$08,$10
1530  D47E- 10 00              BYT $10,$00
1531  D480- 0E 11 13           BYT $0E,$11,$13         0
1532  D483- 15 19 11           BYT $15,$19,$11
1533  D486- 0E 00              BYT $0E,$00
1534  D488- 04 0C 14           BYT $04,$0C,$14         1
1535  D48B- 04 04 04           BYT $04,$04,$04
1536  D48E- 0E 00              BYT $0E,$00
1537  D490- 0E 11 01           BYT $0E,$11,$01         2
1538  D493- 02 0C 10           BYT $02,$0C,$10
1539  D496- 1F 00              BYT $1F,$00
1540  D498- 1E 01 02           BYT $1E,$01,$02         3
1541  D49B- 04 02 01           BYT $04,$02,$01
1542  D49E- 1E 00              BYT $1E,$00
1543  D4A0- 02 06 0A           BYT $02,$06,$0A         4
1544  D4A3- 12 1F 02           BYT $12,$1F,$02
1545  D4A6- 02 00              BYT $02,$00
1546  D4A8- 1F 10 1E           BYT $1F,$10,$1E         5
1547  D4AB- 01 01 11           BYT $01,$01,$11
1548  D4AE- 0E 00              BYT $0E,$00
1549  D4B0- 07 08 10           BYT $07,$08,$10         6
1550  D4B3- 1E 11 11           BYT $1E,$11,$11
1551  D4B6- 0E 00              BYT $0E,$00
1552  D4B8- 1F 01 02           BYT $1F,$01,$02         7
1553  D4BB- 04 08 08           BYT $04,$08,$08
1554  D4BE- 08 00              BYT $08,$00
1555  D4C0- 0E 11 11           BYT $0E,$11,$11         8
1556  D4C3- 0E 11 11           BYT $0E,$11,$11
1557  D4C6- 0E 00              BYT $0E,$00
1558  D4C8- 0E 11 11           BYT $0E,$11,$11         9
1559  D4CB- 0F 01 02           BYT $0F,$01,$02
1560  D4CE- 1C 00              BYT $1C,$00
1561  D4D0- 00 00 00           BYT $00,$00,$00         10

----------------------------------------------------------------------

GRAPHICS SUBROUTINES               24/10/23   R65 ASSEMBLER  PAGE 34

1562  D4D3- 04 00 00           BYT $04,$00,$00
1563  D4D6- 04 00              BYT $04,$00
1564  D4D8- 00 00 00           BYT $00,$00,$00         :
1565  D4DB- 08 00 08           BYT $08,$00,$08
1566  D4DE- 08 10              BYT $08,$10
1567  D4E0- 03 04 08           BYT $03,$04,$08         <
1568  D4E3- 10 08 04           BYT $10,$08,$04
1569  D4E6- 03 00              BYT $03,$00
1570  D4E8- 00 00 1F           BYT $00,$00,$1F         =
1571  D4EB- 00 1F 00           BYT $00,$1F,$00
1572  D4EE- 00 00              BYT $00,$00
1573  D4F0- 18 04 02           BYT $18,$04,$02         >
1574  D4F3- 01 02 04           BYT $01,$02,$04
1575  D4F6- 18 00              BYT $18,$00
1576  D4F8- 1E 11 01           BYT $1E,$11,$01         ?
1577  D4FB- 02 04 00           BYT $02,$04,$00
1578  D4FE- 04 00             BYT $04,$00
1579  D500- 0E 11 17           BYT $0E,$11,$17         @
1580  D503- 15 17 10           BYT $15,$17,$10
1581  D506- 0E 00              BYT $0E,$00
1582  D508- 0E 11 11           BYT $0E,$11,$11         A
1583  D50B- 1F 11 11           BYT $1F,$11,$11
1584  D50E- 11 00              BYT $11,$00
1585  D510- 1E 11 11           BYT $1E,$11,$11         B
1586  D513- 1E 11 11           BYT $1E,$11,$11
1587  D516- 1E 00              BYT $1E,$00
1588  D518- 0E 11 10           BYT $0E,$11,$10         C
1589  D51B- 10 10 11           BYT $10,$10,$11
1590  D51E- 0E 00              BYT $0E,$00
1591  D520- 1C 12 11           BYT $1C,$12,$11         D
1592  D523- 11 11 12           BYT $11,$11,$12
1593  D526- 1C 00              BYT $1C,$00
1594  D528- 1F 10 10           BYT $1F,$10,$10         E
1595  D52B- 1E 10 10           BYT $1E,$10,$10
1596  D52E- 1F 00              BYT $1F,$00
1597  D530- 1F 10 10           BYT $1F,$10,$10         F
1598  D533- 1E 10 10           BYT $1E,$10,$10
1599  D536- 10 00              BYT $10,$00
1600  D538- 0E 11 10           BYT $0E,$11,$10         G
1601  D53B- 13 11 11           BYT $13,$11,$11
1602  D53E- 0F 00              BYT $0F,$00
1603  D540- 11 11 11           BYT $11,$11,$11         H
1604  D543- 1F 11 11           BYT $1F,$11,$11
1605  D546- 11 00              BYT $11,$00
1606  D548- 0E 04 04           BYT $0E,$04,$04         I
1607  D54B- 04 04 04           BYT $04,$04,$04
1608  D54E- 0E 00              BYT $0E,$00
1609  D550- 07 02 02           BYT $07,$02,$02         J
1610  D553- 02 12 12           BYT $02,$12,$12
1611  D556- 0C 00              BYT $0C,$00

----------------------------------------------------------------------

GRAPHICS SUBROUTINES               24/10/23   R65 ASSEMBLER  PAGE 35

1612  D558- 11 12 14           BYT $11,$12,$14         K
1613  D55B- 18 14 12           BYT $18,$14,$12
1614  D55E- 11 00              BYT $11,$00
1615  D560- 10 10 10           BYT $10,$10,$10         L
1616  D563- 10 10 10           BYT $10,$10,$10
1617  D566- 1F 00              BYT $1F,$00
1618  D568- 11 1B 15           BYT $11,$1B,$15         M
1619  D56B- 15 11 11           BYT $15,$11,$11
1620  D56E- 11 00              BYT $11,$00
1621  D570- 11 19 19           BYT $11,$19,$19         N
1622  D573- 15 13 13           BYT $15,$13,$13
1623  D576- 11 00              BYT $11,$00
1624  D578- 0E 11 11           BYT $0E,$11,$11         O
1625  D57B- 11 11 11           BYT $11,$11,$11
1626  D57E- 0E 00              BYT $0E,$00
1627  D580- 1E 11 11           BYT $1E,$11,$11         P
1628  D583- 1E 10 10           BYT $1E,$10,$10
1629  D586- 10 00              BYT $10,$00
1630  D588- 0E 11 11           BYT $0E,$11,$11         Q
1631  D58B- 11 15 13           BYT $11,$15,$13
1632  D58E- 0D 00              BYT $0D,$00
1633  D590- 1E 11 11           BYT $1E,$11,$11         R
1634  D593- 1E 14 12           BYT $1E,$14,$12
1635  D596- 11 00              BYT $11,$00
1636  D598- 0F 10 10           BYT $0F,$10,$10         S
1637  D59B- 0E 01 01           BYT $0E,$01,$01
1638  D59E- 1E 00              BYT $1E,$00
1639  D5A0- 1F 04 04           BYT $1F,$04,$04         T
1640  D5A3- 04 04 04           BYT $04,$04,$04
1641  D5A6- 04 00              BYT $04,$00
1642  D5A8- 11 11 11           BYT $11,$11,$11         U
1643  D5AB- 11 11 11           BYT $11,$11,$11
1644  D5AE- 0E 00              BYT $0E,$00
1645  D5B0- 11 11 11           BYT $11,$11,$11         V
1646  D5B3- 0A 0A 04           BYT $0A,$0A,$04
1647  D5B6- 04 00              BYT $04,$00
1648  D5B8- 11 11 11           BYT $11,$11,$11         W
1649  D5BB- 15 15 1B           BYT $15,$15,$1B
1650  D5BE- 11 00              BYT $11,$00
1651  D5C0- 11 11 0A           BYT $11,$11,$0A         X
1652  D5C3- 04 0A 11           BYT $04,$0A,$11
1653  D5C6- 11 00              BYT $11,$00
1654  D5C8- 11 11 11           BYT $11,$11,$11         Y
1655  D5CB- 0E 04 04           BYT $0E,$04,$04
1656  D5CE- 04 00              BYT $04,$00
1657  D5D0- 1F 01 02           BYT $1F,$01,$02         Z
1658  D5D3- 04 08 10           BYT $04,$08,$10
1659  D5D6- 1F 00              BYT $1F,$00
1660  D5D8- 1C 10 10           BYT $1C,$10,$10         [
1661  D5DB- 10 10 10           BYT $10,$10,$10

----------------------------------------------------------------------

GRAPHICS SUBROUTINES               24/10/23   R65 ASSEMBLER  PAGE 36

1662  D5DE- 1C 00              BYT $1C,$00
1663  D5E0- FF FF FF           BYT $FF,$FF,$FF
1664  D5E3- FF FF FF           BYT $FF,$FF,$FF
1665  D5E6- FF FF              BYT $FF,$FF
1666  D5E8- 07 01 01           BYT $07,$01,$01         ]
1667  D5EB- 01 01 01           BYT $01,$01,$01
1668  D5EE- 07 00              BYT $07,$00
1669  D5F0- 04 0E 15           BYT $04,$0E,$15         ^
1670  D5F3- 04 04 04           BYT $04,$04,$04
1671  D5F6- 04 00              BYT $04,$00
1672  D5F8- 00 00 00           BYT $00,$00,$00         _
1673  D5FB- 00 00 00           BYT $00,$00,$00
1674  D5FE- 00 1F             BYT $00,$1F
1675                   *
1676                           TIT EXTENDED DISK OPERATING SYSTEM
1677                   *
1678                   * DISK AND EXDOS ARE USING BUFFER AREA
1679                   * AT $D600 - $DFFF. DO NOT USE OTHERWISE
1680                   *
1681  D600-                    END
LABELS=0139
ERRORS=00
RECORDS=6B
