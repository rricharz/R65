
R65 Pascal program DISKLIB         7/11/23     page 1


                   1 (    4) library disklib;
                   2 (    4) { provides functions for the handling of disks }
                   3 (    4) 
                   4 (    4) { *** dskname: get name of disk **** }
                   5 (    4) 
                   6 (    4) proc dskname;
                   7 (    7) { name is in filnam }
                   8 (    7) const aprepdo  = $f4a7;
                   9 (   10)       aenddo   = $f625;
                  10 (   10)       agetentx = $f63a;
                  11 (   10)       maxent   = 255;
                  12 (   10) mem   scyfc    = $037c:integer&;
                  13 (   10) 
                  14 (   10) 
                  15 (   10) begin
                  16 (   10)   call(aprepdo);
                  17 (   16)   scyfc:=maxent; { disk name }
                  18 (   23)   call(agetentx);
                  19 (   27)   call(aenddo);
                  20 (   31) end;
                  21 (   31) 
                  22 (   32) { *** freesec: get % of free sectors *** }
                  23 (   32) 
                  24 (   32) func freedsk(drive:integer;showit:boolean);
                  25 (   32) 
                  26 (   32) const aprepdo  = $f4a7;
                  27 (   35)       aenddo   = $f625;
                  28 (   35)       agetentx = $f63a;
                  29 (   35)       tsectors = 2560;
                  30 (   35)       maxent   = 255;
                  31 (   35)       invvid   = chr($0e);
                  32 (   35)       norvid   = chr($0b);
                  33 (   35) 
                  34 (   35) mem fildrv=$00dc:integer&;
                  35 (   35)     filtyp=$0300:char&;
                  36 (   35)     filloc=$0313:integer;
                  37 (   35)     scyfc =$037c:integer&;
                  38 (   35)     filnam   = $0301: array[15] of char&;
                  39 (   35) 
                  40 (   35) var s,i:integer;
                  41 (   35)     r:real;
                  42 (   35) begin
                  43 (   35)   fildrv:=drive;
                  44 (   37)   call(aprepdo);
                  45 (   49)   s:=0;
                  46 (   51)   repeat
                  47 (   55)     scyfc:=s; call(agetentx);
                  48 (   68)     s:=s+1;
                  49 (   74)     until (filtyp=chr(0)) or (s>=maxent);
                  50 (   94)   r:=conv(tsectors-filloc);
                  51 (  106)   s:=trunc(100.0*r/conv(tsectors)+0.5);
                  52 (  138)   freedsk:=s;
                  53 (  143)   call(aenddo);
                  54 (  155)   dskname;
                  55 (  159)   if showit then begin
                  56 (  163)     if s<20 then write(invvid);
                  57 (  179)     write( 'Free space on drive ');
                  58 (  200)     i:=0;
                  59 (  202)     while (filnam[i]<>' ') and (i<15) do begin

----------------------------------------------------------------------

R65 Pascal library DISKLIB         7/11/23     page 2

                  60 (  229)       write(filnam[i]);
                  61 (  239)       i:=i+1;
                  62 (  245)     end;
                  63 (  250)     writeln(': ',s,'%',norvid);
                  64 (  272)   end;
                  65 (  272) end;
                  66 (  272) 
                  67 (  273) begin
                  68 (  273) end.
                  69 (  275) 

End compile

Code lenght:          274
Compiler stack size:  3
Ident stack size:     20
Pascal errors:        0
