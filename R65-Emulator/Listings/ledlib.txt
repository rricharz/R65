
R65 COMPILE 4.2: program LEDLIB           14/11/23 page 1


   1 (    4) {
   2 (    4)   ledlib.pas   R65 led display library
   3 (    4) 
   4 (    4) On the original R65 computer, the KIM-1
   5 (    4) was mounted directly behind the front panel.
   6 (    4) The KIM-1 keyboard and 6-digit 7-segment
   7 (    4) display was exposed. An interrupt driven
   8 (    4) driver was used to display data, including
   9 (    4) a few simple games, on this display. Later,
  10 (    4) the front panel was replaced and 8 leds were
  11 (    4) used to display 1 data byte. 8 switches were
  12 (    4) available for input. In Pascal, LEDLIB was
  13 (    4) providing a driver for these displays.
  14 (    4) 
  15 (    4) This is a modified version of LEDLIB for the R65
  16 (    4) emulator. It emulates output to the 7-segment
  17 (    4) display (8 digits, not 6 like on the original
  18 (    4) system) or the 8 leds. The output appears on
  19 (    4) the panel of the emulator. On the R65 replica,
  20 (    4) the output appears on the 7-segment display of the
  21 (    4) front panel.
  22 (    4) }
  23 (    4) 
  24 (    4) library ledlib;
  25 (    4) 
  26 (    4) mem ledreg=$1432: array[7] of char&;
  27 (    7) 
  28 (    7) proc ledstring(s:cpnt);
  29 (    7) {*********************}
  30 (    7) var i: integer;
  31 (   10) begin
  32 (   10)   for i:=0 to 7 do
  33 (   20)     ledreg[i]:=s[i];
  34 (   41) end;
  35 (   64) 
  36 (   65) proc ledstop;
  37 (   65) {***********}
  38 (   65) begin
  39 (   65)   ledreg[0]:=chr(0);
  40 (   74) end;
  41 (   82) 
  42 (   83) proc ledhex(d,p,digits: integer);
  43 (   83) {*******************************}
  44 (   83) { d:     value to display
  45 (   83)   p:     position of first digit
  46 (   83)   digit: number of digits }
  47 (   83) var d1,i: integer;
  48 (   86) begin
  49 (   86)   { turn on led display if necessary }
  50 (   86)   if (p>0) and (ledreg[0]=chr(0)) then
  51 (  106)     ledreg[0]:=' ';
  52 (  114)   if (p<0) or (digits<1) or (digits>4)
  53 (  142)     or (p+digits>8) then
  54 (  156)     ledstring('????????')
  55 (  171)   else
  56 (  177)     begin
  57 (  180)       d1:=d;
  58 (  180)       for i:=1 to digits do
  59 (  194)         begin

----------------------------------------------------------------------

R65 COMPILE 4.2: library LEDLIB           14/11/23 page 2

  60 (  207)           if (d1 and $f) > 9 then
  61 (  216)             ledreg[p+digits-i]:=
  62 (  234)                 chr(ord(d1 and $f)+
  63 (  241)                 ord('A')-10)
  64 (  246)           else
  65 (  247)             ledreg[p+digits-i]:=
  66 (  272)                 chr(ord(d1 and $f)+
  67 (  279)                 ord('0'));
  68 (  282)           d1:=d1 shr 4;
  69 (  296)         end;
  70 (  301)     end;
  71 (  315) end;
  72 (  315) 
  73 (  316) proc ledbyte(d: integer);
  74 (  316) {***********************}
  75 (  316) var d1,i:integer;
  76 (  319) begin
  77 (  319)   d1:=d;
  78 (  321)   for i:=7 downto 0 do
  79 (  337)     begin
  80 (  346)       if (d1 and 1) <> 0 then
  81 (  355)         ledreg[i]:='o'
  82 (  363)       else
  83 (  365)         ledreg[i]:=' ';
  84 (  381)       d1:=d1 shr 1;
  85 (  394)     end;
  86 (  399) end;
  87 (  413) 
  88 (  414) begin
  89 (  414) end.
  90 (  416) 

End compile

Code lenght:          415
Compiler stack size:  8
Ident stack size:     9
Pascal errors:        0
