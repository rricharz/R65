
R65 COMPILE 4.2: program SNAP             6/2/24 page 1


   1 (    4) { snap filnam[.cy][,drive
   2 (    4) 
   3 (    4)   take a snapshot of the graphics canvas
   4 (    4)   default for drive is one
   5 (    4)   the graphics canvas must be enabled      }
   6 (    4) 
   7 (    4) program snap;
   8 (    4) uses syslib,arglib;
   9 ( 1093) 
  10 ( 1093) const startcanvas = $700;
  11 ( 1096)       sizecanvas  = 3304; { 224x118/8 }
  12 ( 1096)       wrfile      = $e81b;
  13 ( 1096) 
  14 ( 1096) mem   filerr=$db:   integer&;
  15 ( 1096)       filsa=$031a:  integer;
  16 ( 1096)       filea=$031c:  integer;
  17 ( 1096)       filsa1=$0331: integer;
  18 ( 1096)       filtyp=$0300: char&;
  19 ( 1096) 
  20 ( 1096) var   cyclus,drive: integer;
  21 ( 1096)       name:         array[15] of char;
  22 ( 1096)       default:      boolean;
  23 ( 1096) 
  24 ( 1096) func haswildcard(nm1:array[15] of char): boolean;
  25 ( 1096) var k:integer;
  26 ( 1099) begin
  27 ( 1099)   haswildcard:=false;
  28 ( 1103)   for k:=0 to 15 do
  29 ( 1115)     if (nm1[k]='*') or (nm1[k]='?') then
  30 ( 1146)       haswildcard:=true;
  31 ( 1152) end;
  32 ( 1170) 
  33 ( 1171) func splitted: boolean;
  34 ( 1171) { is video memory splitted }
  35 ( 1171) mem numlin=$1789:integer&;
  36 ( 1174) begin
  37 ( 1174)   splitted := numlin <= 16;
  38 ( 1182) end;
  39 ( 1187) 
  40 ( 1188) proc savecanvas;
  41 ( 1188) { save the canvas on disk }
  42 ( 1188) begin
  43 ( 1188)   asetfile(name,cyclus,drive,'I');
  44 ( 1215)   filsa:=startcanvas;
  45 ( 1218)   filea:=startcanvas+sizecanvas;
  46 ( 1228)   filsa1:=startcanvas;
  47 ( 1236)   filtyp:='I';
  48 ( 1242)   filerr:=0;
  49 ( 1249)   call(wrfile);
  50 ( 1257)   if filerr<>0 then
  51 ( 1262)     writeln(invvid,'File error ',filerr shr 4,
  52 ( 1286)       filerr and 15,norvid);
  53 ( 1304) end;
  54 ( 1304) 
  55 ( 1305) begin
  56 ( 1305)   if not splitted then begin
  57 ( 1314)     writeln(invvid,'Video canvas not available',
  58 ( 1347)        norvid);
  59 ( 1356)     exit;

----------------------------------------------------------------------

R65 COMPILE 4.2: program SNAP             6/2/24 page 2

  60 ( 1357)   end;
  61 ( 1357) 
  62 ( 1357)   cyclus:=0; drive:=1;
  63 ( 1365)   agetstring(name,default,cyclus,drive);
  64 ( 1409)   if default then begin
  65 ( 1413)     writeln(invvid,'Usage: snap filnam',norvid);
  66 ( 1447)     exit;
  67 ( 1448)   end;
  68 ( 1448)   if haswildcard(name) then begin
  69 ( 1462)     writeln(invvid,'Wild cards not allowed',norvid);
  70 ( 1500)     exit;
  71 ( 1501)   end;
  72 ( 1501) 
  73 ( 1501)   savecanvas;
  74 ( 1505) 
  75 ( 1505) end.

End compile

Code lenght:          1504
Compiler stack size:  47
Ident stack size:     86
Pascal errors:        0
