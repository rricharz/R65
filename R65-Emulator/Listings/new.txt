
R65 Pascal program NEW             10/11/23     page 1


                   1 (    4)  {
                   2 (    4)          *****************
                   3 (    4)          *               *
                   4 (    4)          *      new      *
                   5 (    4)          *               *
                   6 (    4)          *****************
                   7 (    4) 
                   8 (    4)     2018 rricharz (r77@bluewin.ch)
                   9 (    4) 
                  10 (    4) Create a new empty text file
                  11 (    4) 
                  12 (    4) Written 2018 to test the R65 emulator and
                  13 (    4) to demonstrate the power of Tiny Pascal.
                  14 (    4) 
                  15 (    4) Usage:  new filnam[:x][.cy[,drive]]
                  16 (    4) 
                  17 (    4)   [:X]:    type of file,     default :P
                  18 (    4)   [drive]: disk drive (0,1), default 1
                  19 (    4) }
                  20 (    4) 
                  21 (    4) program new;
                  22 (    4) uses syslib,arglib;
                  23 ( 1093) 
                  24 ( 1093) const anew=$c812; { exdos vector }
                  25 ( 1096)       cup=chr($1a);
                  26 ( 1096) 
                  27 ( 1096) mem filerr=$db: integer&;
                  28 ( 1096) 
                  29 ( 1096) var cyclus,drive: integer;
                  30 ( 1096)     name: array[15] of char;
                  31 ( 1096)     default: boolean;
                  32 ( 1096) 
                  33 ( 1096) proc bcderror(e:integer);
                  34 ( 1096) begin
                  35 ( 1096)   write(invvid,'ERROR ');
                  36 ( 1111)   write((e shr 4) and 15);
                  37 ( 1122)   writeln(e and 15,norvid);
                  38 ( 1139) end;
                  39 ( 1139) 
                  40 ( 1140) func haswildcard(nm1:array[15] of char): boolean;
                  41 ( 1140) var k:integer;
                  42 ( 1143) begin
                  43 ( 1143)   haswildcard:=false;
                  44 ( 1147)   for k:=0 to 15 do
                  45 ( 1159)     if (nm1[k]='*') or (nm1[k]='?') then
                  46 ( 1190)       haswildcard:=true;
                  47 ( 1196) end;
                  48 ( 1214) 
                  49 ( 1215) begin
                  50 ( 1215)   cyclus:=0; drive:=1;
                  51 ( 1225)   agetstring(name,default,cyclus,drive);
                  52 ( 1269)   if haswildcard(name) then
                  53 ( 1283)     writeln(invvid,'Wild cards not allowed',norvid)
                  54 ( 1314)   else begin
                  55 ( 1324)     asetfile(name,cyclus,drive,'P');
                  56 ( 1346)     write(cup); { avoid empty line }
                  57 ( 1349)     call(anew);
                  58 ( 1353)     if filerr<>0 then bcderror(filerr);
                  59 ( 1371)     writeln;

----------------------------------------------------------------------

R65 Pascal program NEW             10/11/23     page 2

                  60 ( 1371)   end;
                  61 ( 1377) end.
                  62 ( 1377) 

End compile

Code lenght:          1376
Compiler stack size:  49
Ident stack size:     81
Pascal errors:        0
