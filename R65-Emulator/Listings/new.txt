
R65 COMPILE 4.2: program NEW              5/2/24 page 1


   1 (    4)  {
   2 (    4)          *****************
   3 (    4)          *               *
   4 (    4)          *      new      *
   5 (    4)          *               *
   6 (    4)          *****************
   7 (    4) 
   8 (    4)     2018 rricharz (r77@bluewin.ch)
   9 (    4) 
  10 (    4) Create a new empty text file
  11 (    4) 
  12 (    4) Written 2018 to test the R65 emulator and
  13 (    4) to demonstrate the power of Tiny Pascal.
  14 (    4) 
  15 (    4) Usage:  new filnam[:x][.cy[,drive]]
  16 (    4) 
  17 (    4)   [:X]:    type of file,     default :P
  18 (    4)   [drive]: disk drive (0,1), default 1
  19 (    4) }
  20 (    4) 
  21 (    4) program new;
  22 (    4) uses syslib,arglib;
  23 ( 1093) 
  24 ( 1093) const anew=$c812; { exdos vector }
  25 ( 1096)       cup=chr($1a);
  26 ( 1096) 
  27 ( 1096) mem filerr=$db: integer&;
  28 ( 1096) 
  29 ( 1096) var cyclus,drive: integer;
  30 ( 1096)     name: array[15] of char;
  31 ( 1096)     default: boolean;
  32 ( 1096) 
  33 ( 1096) proc bcderror(e:integer);
  34 ( 1096) begin
  35 ( 1096)   write(invvid,'ERROR ');
  36 ( 1111)   write((e shr 4) and 15);
  37 ( 1122)   writeln(e and 15,norvid);
  38 ( 1139) end;
  39 ( 1139) 
  40 ( 1140) func haswildcard(nm1:array[15] of char): boolean;
  41 ( 1140) var k:integer;
  42 ( 1143) begin
  43 ( 1143)   haswildcard:=false;
  44 ( 1147)   for k:=0 to 15 do
  45 ( 1159)     if (nm1[k]='*') or (nm1[k]='?') then
  46 ( 1190)       haswildcard:=true;
  47 ( 1196) end;
  48 ( 1214) 
  49 ( 1215) proc setsubtype(subtype:char);
  50 ( 1215) { only set subtype if not already there }
  51 ( 1215) var i:integer;
  52 ( 1218) begin
  53 ( 1218)   i:=0;
  54 ( 1222)   repeat
  55 ( 1226)     i:=i+1;
  56 ( 1232)   until (name[i]=':') or
  57 ( 1248)     (name[i]=' ') or (i>=14);
  58 ( 1267)   if name[i]<>':' then begin
  59 ( 1282)     name[i]:=':';

----------------------------------------------------------------------

R65 COMPILE 4.2: program NEW              5/2/24 page 2

  60 ( 1291)     name[i+1]:=subtype;
  61 ( 1302)   end;
  62 ( 1310) end;
  63 ( 1310) 
  64 ( 1311) begin
  65 ( 1311)   cyclus:=0; drive:=1;
  66 ( 1321)   agetstring(name,default,cyclus,drive);
  67 ( 1365)   if haswildcard(name) then
  68 ( 1379)     writeln(invvid,'Wild cards not allowed',norvid)
  69 ( 1410)   else begin
  70 ( 1420)     setsubtype('P');
  71 ( 1428)     asetfile(name,cyclus,drive,' ');
  72 ( 1450)     write(cup); { avoid empty line }
  73 ( 1453)     call(anew);
  74 ( 1457)     if filerr<>0 then bcderror(filerr);
  75 ( 1475)     writeln;
  76 ( 1475)   end;
  77 ( 1481) end.
  78 ( 1481) 

End compile

Code lenght:          1480
Compiler stack size:  51
Ident stack size:     82
Pascal errors:        0
