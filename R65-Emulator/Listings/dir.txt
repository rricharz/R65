
R65 COMPILE 4.3: program DIR              22/2/24 page 1


   1 (    4) {
   2 (    4)          *******************
   3 (    4)          *                 *
   4 (    4)          *   dir <drive>   *
   5 (    4)          *                 *
   6 (    4)          *******************
   7 (    4) 
   8 (    4)     2018,2019 rricharz (r77@bluewin.ch)
   9 (    4)     2023 removed inverse video display
  10 (    4)     2023 default drive 1
  11 (    4) 
  12 (    4) Display the directory of a disk drive.
  13 (    4) Uses EPROM (disk.asm) calls to get info
  14 (    4) from disk directory.
  15 (    4) 
  16 (    4) Written 2018 to test the R65 emulator and
  17 (    4) to demonstrate the power of Tiny Pascal.
  18 (    4) 
  19 (    4) Makes a table to find out how long the
  20 (    4) longest name is. Then computes the number
  21 (    4) of columns which can be displayed and
  22 (    4) displays the directory.
  23 (    4) 
  24 (    4) option /S sorts the directory
  25 (    4) 
  26 (    4) Usage:  dir drive [/s]                   }
  27 (    4) 
  28 (    4) program dir;
  29 (    4) uses syslib,arglib,strlib;
  30 ( 2170) 
  31 ( 2170) {R65 disk eprom calls and params: }
  32 ( 2170) const aprepdo =$f4a7;
  33 ( 2173)       agetentx=$f63a;
  34 ( 2173)       aenddo  =$f625;
  35 ( 2173)       tsectors = 2560;
  36 ( 2173)       maxent  = 255;
  37 ( 2173) 
  38 ( 2173) mem   filtyp  =$0300: char&;
  39 ( 2173)       filcyc  =$0311: integer&;
  40 ( 2173)       filstp  =$0312: char&;
  41 ( 2173)       filloc  =$0313: integer;
  42 ( 2173)       filsiz  =$0315: integer;
  43 ( 2173)       fillnk  =$031e: integer;
  44 ( 2173)       scyfc   =$037c: integer&;
  45 ( 2173)       filerr  =$00db: integer&;
  46 ( 2173) 
  47 ( 2173) var default,sortit: boolean;
  48 ( 2173)     drive,index,i,ti,maxlen,nument,col,
  49 ( 2173)     ncol,row,nspaces,sfree,sdel,
  50 ( 2173)     lines        : integer;
  51 ( 2173)     ffree,fdel   : real;
  52 ( 2173)     filstptab    : array[80] of char;
  53 ( 2173)     s            : cpnt;
  54 ( 2173)     entry        : array[maxent] of cpnt;
  55 ( 2173) 
  56 ( 2173) {$I IOPTION:P}
IOPTION:P       .02  SP 0000-0200 00F2 22/02/24
{I}    1 ( 2173) { ioption - check and set option }
{I}    2 ( 2173) 
{I}    3 ( 2173) func option(opt:char):boolean;

----------------------------------------------------------------------

R65 COMPILE 4.3: program DIR              22/2/24 page 2

{I}    4 ( 2173) var i,dummy,savecarg:integer;
{I}    5 ( 2176)     options:array[15] of char;
{I}    6 ( 2176)     default:boolean;
{I}    7 ( 2176) begin
{I}    8 ( 2176)   savecarg:=carg; { save for next call to option }
{I}    9 ( 2186)   agetstring(options,default,dummy,dummy);
{I}   10 ( 2226)   option:=false;
{I}   11 ( 2228)   if not default then begin
{I}   12 ( 2237)     if options[0]<>'/' then argerror(103);
{I}   13 ( 2260)     for i:=1 to 15 do
{I}   14 ( 2268)       if options[i]=opt then option:=true;
{I}   15 ( 2295)   end;
{I}   16 ( 2313)   carg:=savecarg;
{I}   17 ( 2313) end;
  57 ( 2322) 
  58 ( 2322) func hex(d:integer):char;
  59 ( 2322) { convert hex digit to hex char }
  60 ( 2322) begin
  61 ( 2322)   if (d>=0) and (d<10) then
  62 ( 2341)     hex:=chr(d+ord('0'))
  63 ( 2351)   else if (d>=10) and (d<16) then
  64 ( 2374)     hex:=chr(d+ord('A')-10)
  65 ( 2387)   else hex:='?';
  66 ( 2398) end;
  67 ( 2402) 
  68 ( 2403) proc checkfilerr;
  69 ( 2403) begin
  70 ( 2403)   if filerr<>0 then begin
  71 ( 2414)     writeln('Cannot read directory');
  72 ( 2445)     abort;
  73 ( 2449)   end;
  74 ( 2449) end;
  75 ( 2449) 
  76 ( 2450) func smaller(pnt1,pnt2:cpnt):boolean;
  77 ( 2450) var k:integer;
  78 ( 2453) begin
  79 ( 2453)   k:=0;
  80 ( 2457)   while (pnt2[k]=pnt1[k]) and (k<15) do
  81 ( 2489)     k:=k+1;
  82 ( 2499)   smaller:=(pnt2[k]<pnt1[k]);
  83 ( 2528) end;
  84 ( 2532) 
  85 ( 2533) proc sort;
  86 ( 2533) var i,j:integer;
  87 ( 2536)     savepnt:cpnt;
  88 ( 2536) begin
  89 ( 2536)   for i:=0 to nument-1 do
  90 ( 2550)      for j:=nument-1 downto i do
  91 ( 2571)        if smaller(entry[j],entry[j+1]) then begin
  92 ( 2611)           savepnt:=entry[j];
  93 ( 2618)           entry[j]:=entry[j+1];
  94 ( 2637)           entry[j+1]:=savepnt;
  95 ( 2652)        end;
  96 ( 2660) end;
  97 ( 2688) 
  98 ( 2689) begin {main}
  99 ( 2689)   drive:=1; {default drive}
 100 ( 2698)   filerr:=0;
 101 ( 2700)   if argtype[carg]='i' then agetval(drive,default);
 102 ( 2738)   if (drive<0) or (drive>1) then begin

----------------------------------------------------------------------

R65 COMPILE 4.3: program DIR              22/2/24 page 3

 103 ( 2753)     writeln('Drive must be 0 or 1');
 104 ( 2783)     abort
 105 ( 2783)   end;
 106 ( 2787)   if option('H') then begin
 107 ( 2797)     writeln('/S   sort directory');
 108 ( 2826)     exit;
 109 ( 2827)   end;
 110 ( 2827)   sortit:=option('S');
 111 ( 2837)   fildrv:=drive;
 112 ( 2841)   call(aprepdo);
 113 ( 2853)   checkfilerr;
 114 ( 2857) 
 115 ( 2857)   scyfc:=255; { write disk name }
 116 ( 2864)   call(agetentx);
 117 ( 2868)   checkfilerr;
 118 ( 2872) 
 119 ( 2872)   write(invvid,'Directory drive ',drive,': ');
 120 ( 2900)   for i:=0 to 15 do
 121 ( 2908)     write(filnam[i]);
 122 ( 2927)   writeln(norvid);
 123 ( 2950) 
 124 ( 2950)   index:=0; ti:=0; maxlen:=0;
 125 ( 2964)   sdel:=0;
 126 ( 2970)   repeat
 127 ( 2974)     scyfc:=index;
 128 ( 2974)     call(agetentx);
 129 ( 2987)     checkfilerr;
 130 ( 2991)     { check for end mark }
 131 ( 2991)     if filtyp<>chr(0) then begin
 132 ( 2999)       { check for deleted flag }
 133 ( 3002)       if (fillnk and 255)<128 then begin
 134 ( 3012)         entry[ti]:=new;
 135 ( 3025)         s:=entry[ti];
 136 ( 3033)         for i:=0 to 15 do s[i]:=filnam[i];
 137 ( 3069)         for i:=16 to 20 do s[i]:=' ';
 138 ( 3112)         i:=20;
 139 ( 3132)         repeat
 140 ( 3136)           i:=i-1;
 141 ( 3142)         until (i=0) or
 142 ( 3154)           (s[i]<>' ');
 143 ( 3167)         s[i+1]:='.';
 144 ( 3180)         s[i+2]:=hex(filcyc shr 4);
 145 ( 3206)         s[i+3]:=hex(filcyc and 15);
 146 ( 3232)         if maxlen<i+3 then maxlen:=i+3;
 147 ( 3257)         filstptab[ti]:=filstp;
 148 ( 3270)         ti:=ti+1
 149 ( 3278)       end else {deleted}
 150 ( 3288)         sdel:=sdel+(filsiz shr 8);
 151 ( 3299)     end else {end mark}
 152 ( 3307)       sfree:=tsectors-filloc;
 153 ( 3314)     index:=index+1
 154 ( 3323)   until (index>=255) or (filtyp=chr(0));
 155 ( 3345)   call(aenddo);
 156 ( 3353) 
 157 ( 3353)   nument:=ti-1;
 158 ( 3359)   if sortit then sort;
 159 ( 3375)   ncol:=48 div (maxlen+2);
 160 ( 3384)   if nument<8 then ncol:=2
 161 ( 3399)   else if nument<8 then ncol:=1;
 162 ( 3420)   nspaces:=(48 div ncol)-maxlen-1;

----------------------------------------------------------------------

R65 COMPILE 4.3: program DIR              22/2/24 page 4

 163 ( 3438)   lines:=nument div ncol;
 164 ( 3447) 
 165 ( 3456)   for col:=0 to lines do
 166 ( 3462)   begin
 167 ( 3475)     for row:=0 to ncol-1 do begin
 168 ( 3497)       ti:=col+(lines+1)*row;
 169 ( 3508)       s:=entry[ti];
 170 ( 3522)       if (ti<=nument) then begin
 171 ( 3539)         for i:=0 to maxlen do
 172 ( 3548)           write(s[i]);
 173 ( 3572)         if row<(ncol-1) then
 174 ( 3597)           for i:=1 to nspaces do write(' ')
 175 ( 3622)       end
 176 ( 3622)     end;
 177 ( 3636)     writeln
 178 ( 3650)   end;
 179 ( 3656)   ffree:=conv(sfree)/conv(tsectors);
 180 ( 3678)   fdel:=conv(sdel)/conv(tsectors);
 181 ( 3694)   writeln('Free:',sfree,'(',
 182 ( 3715)     trunc(100.0*ffree+0.5),
 183 ( 3735)     '%),deleted:',sdel,'(',
 184 ( 3756)     trunc(100.0*fdel+0.5),'%),',
 185 ( 3782)     'files:',index-1);
 186 ( 3803) end.
 187 ( 3803) 

End compile

Code lenght:          3802
Compiler stack size:  85
Ident stack size:     133
Pascal errors:        0
