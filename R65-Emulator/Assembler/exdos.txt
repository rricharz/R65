----------------------------------------------------------------------

EXTENDED DISK OPERATING SYSTEM     23/10/23   R65 ASSEMBLER  PAGE 01

0001                   *
0002                   **************************************
0003                   * R65 EXTENDED DISK OPERATING SYSTEM *
0004                   **************************************
0005                   *
0006                   * BASED ON VERSION 3.2 21/08/82
0007                   * RRICHARZ RBAUMANN 1978-1982
0008                   * VERSION 4.6 2018-2023
0009                   *   MODIFIED FOR R65 EMULATOR
0010                   *   AND LARGER DISK SIZE
0011                   *   BY RRICHARZ
0012                   *
0013                   *
0014                   * NEW COMMANDS FOR EMULATED SYSTEM:
0015                   *   EXPORT FILNAM.CY,DRIVE
0016                   *               EXPORT SEQUENTIAL FILE
0017                   *   IMPORT FILNAM.CY,DRIVE
0018                   *               IMPORT SEQUENTIAL FILE
0019                   *   EDIT FILNAM.CY,DRIVE
0020                   *               EDIT A SEQUENTIAL FILE
0021                   *               USING LEAFPAD
0022                   *   FLOPPY FILNAM,DRIVE
0023                   *               CHANGE FLOPPY DISK
0024                   *   NEW FILNAM.CY,DRIVE
0025                   *               NEW SEQUENTIAL FILE
0026                   *
0027                   * NEW GRAPHICS SUBROUTINES
0028                   *   PLOT(X,Y,MODE)      PLOT A DOT
0029                   *   PLOTCH(X,Y,CHR)     PLOT A 8x8 CHAR
0030                   *   BITMAP(X,Y,MAP)     PLOT A 4x4 MAP
0031                   *   DRAWX(X,Y,MODE,N)   DRAW N POINTS
0032                   *   DRAWY(X,Y,MODE,N)   DRAW N POINTS
0033                   *   DRAWXY(X,Y,MODE,N,XONC,YINC)
0034                   *
0035                   * WITH FAST PACK ROUTINE
0036                   * USES SCRATCH MEMORY $D700-$DEFF
0037                   * UPDATED FOR DUAL DISK DRIVE SYSTEMS
0038                   * WITH WILD CARD DIRECTORY
0039                   *
0040                   *   ERROR 61: WILD CARD NOT ALLOWED
0041                   *   ERROR 62: ONLY FOR DISK, NOT TAPE
0042                   *   ERROR 63: ILLEGAL COPY
0043                   *   ERROR 64: FILE TOO LARGE
0044                   *   ERROR 65: WRITE ERROR
0045                   *   ERROR 66: IMPORT ERROR
0046                   *   ERROR 67: UNKNOWN EMU COMMAND
0047                   *   ERROR 68: UNABLE TO RUN LEAFPAD
0048                   *
0049                   *
0050                   PSTART  EQU $C800       START OF PROGRAM

----------------------------------------------------------------------

EXTENDED DISK OPERATING SYSTEM     23/10/23   R65 ASSEMBLER  PAGE 02

0051                   SPERTR  EQU 16          SECTORS PER TRACK
0052                   NTRACK  EQU 160         TRACKS
0053                   NRSEQ   EQU 2560        TOTAL SECTORS (16*160)
0054                   *
0055                           TIT EXTENDED DISK OPERATING SYSTEM
0056                   *
0057                   *
0058                   * PAGE ZERO VARIABLES
0059                   *********************
0060                   *
0061  0000-                    ORG $D8
0062                   *
0063  00D8-            COPYBN  BSS 2   POINTER FOR COPY SEQF
0064                   *
0065  00DA-            FILFLG  BSS 1   FILE ENTRY FLAGS
0066                   *               BIT 7=1: PROTECTED
0067                   *               BIT 6=1: NO PRINTED OUTPUT
0068                   *               BIT 5: DIRECTION (1=WRITE)
0069                   *
0070  00DB-            FILERR  BSS 1   FILE HANDLING ERROR
0071  00DC-            FILDRV  BSS 1   TAPE OR DISK DRIVE
0072                   *
0073                   * TAPE TEMPORARIES
0074                   *
0075  00DD-            TRECID  BSS 2   RECORD ID OF FIRST RECORD
0076  00DF-            TRECNO  BSS 1   RECORD NUMBER
0077  00E0-            TRECST  BSS 2   START ADDRESS POINTER
0078  00E2-            TRECSI  BSS 1   RECORD SIZE
0079                   *
0080                   * DISK TEMPORARIES
0081                   *
0082  00E3-                    ORG $DD
0083  00DD-            TRACK   BSS 1   CURRENT TRACK
0084  00DE-            SECTOR  BSS 1   CURRENT SECTOR
0085  00DF-            RESSAV  BSS 1   CURRENT FDC RESULT
0086  00E0-            DATA    BSS 2   DATA POINTER
0087  00E2-            DOSPNT  BSS 2   SECOND POINTER
0088  00E4-            FILCNT  BSS 1   DISK FILE POINTER
0089  00E5-            FILCN1  BSS 1
0090                   *
0091                   VIDPNT  EQU $E9 VIDEO MEMORY POINTER
0092                   POINT   EQU $FA USED AS SEQ FILE PNT
0093                   KCHAR   EQU $FE CHAR SAVE FOR WRITCH
0094                   *
0095                   * PAGE 3 DATA AREA
0096                   ******************
0097                   *
0098  00E6-                    ORG $300
0099                   *
0100  0300-            FILTYP  BSS 1   TYPE OF ACTIVE FILE

----------------------------------------------------------------------

EXTENDED DISK OPERATING SYSTEM     23/10/23   R65 ASSEMBLER  PAGE 03

0101  0301-            FILNAM  BSS 16  FILE NAME
0102  0311-            FILCYC  BSS 1   CYCLUS NUMBER
0103  0312-            FILSTP  BSS 1   FILE SUBTYPE
0104  0313-            FILLOC  BSS 2   LOCATION OR SECTOR
0105  0315-            FILSIZ  BSS 2   FILE SIZE
0106  0317-            FILDAT  BSS 3   FILE GENERATION DATE
0107  031A-            FILSA   BSS 2   START ADDRESS
0108  031C-            FILEA   BSS 2   END ADDRESS
0109  031E-            FILLNK  BSS 2   FILE LINK
0110                   *
0111  0320-            FILNM1  BSS 16
0112  0330-            FILCY1  BSS 1
0113  0331-            FILSA1  BSS 2
0114  0333-            SAVRST  BSS 2
0115                   *
0116  0335-            CURSEQ  BSS 1   CURRENT SEQUENTIAL FILE
0117  0336-            MAXSEQ  BSS 1   MAX NO OF SEQ FILE
0118  0337-            MAXSIZ  BSS 1   MAX SIZE
0119  0338-            FILBU1  BSS 1   START OF BUFFERS
0120                   *
0121                   * TABLE FOR 8 OPEN SEQUENTIAL FILES
0122                   *
0123  0339-            FIDRTB  BSS 8   BIT 7 1=WRITE, 0=READ
0124                   *               BIT 5 1=FILE IS OPEN
0125  0341-            FIDVTB  BSS 8   DRIVE NUMBER
0126  0349-            FIBPTB  BSS 8   BUFFER POINTER LOW BYTE
0127  0351-            FIRCTB  BSS 8   NO OF LAST RECORD
0128  0359-            FIMAXT  BSS 8   MAXIMAL NO OF RECORDS
0129  0361-            FITEMP  BSS 24  TAPE: RECORD ID SAVE (2)
0130                   *               DISK: FIRST SECTOR (2)
0131                   *               AND DIRECTORY ENTRY NO
0132                   *               (1)
0133  0379-            EXITPN  BSS 1   DISK STACK POINTER SAVE
0134  037A-            BUFSEC  BSS 1   CURRENT SECTOR
0135  037B-            SCY     BSS 1   FOUND CYCLUS
0136  037C-            SCYFC   BSS 1   FILE ENTRY OF CY
0137  037D-            SLAST   BSS 1   END OF DIRECTORY MARK
0138  037E-            DISFLG  BSS 1   DISK FLAG REGISTER
0139                   *               BIT 7 DRIVE 0 INITIALIZED
0140                   *               BIT 6 DRIVE 1 INITIALIZED
0141  037F-            DISCNT  BSS 1   SPECIAL DISK COUNTER
0142                   *
0143  0380-                    ORG $388
0144                   *
0145  0388-            OLDENT  BSS 1
0146  0389-            OLDREC  BSS 2
0147  038B-            NEWENT  BSS 1
0148  038C-            NEWREC  BSS 2
0149  038E-            COUNTER BSS 1
0150  038F-            COUNT2  BSS 1

----------------------------------------------------------------------

EXTENDED DISK OPERATING SYSTEM     23/10/23   R65 ASSEMBLER  PAGE 04

0151                   *
0152  0390-            PFILENO BSS 1
0153  0391-            PAGING  BSS 1
0154  0392-            LINE    BSS 1
0155  0393-            OLDDRV  BSS 1
0156  0394-            NEWDRV  BSS 1
0157  0395-            OLDFIL  BSS 1
0158  0396-            NEWFIL  BSS 1
0159  0397-            FULLFLG BSS 1
0160  0398-            NAMEFLG BSS 1
0161  0399-            DIRCNT  BSS 1
0162  039A-            DELCNT  BSS 2
0163  039C-            FILNM2  BSS 17
0164  03AD-            SUCCESS BSS 1   COUNT SUCCESS (COPY,DELETE)
0165  03AE-            GRX     BSS 1   X FOR GRAHICSS
0166  03AF-            GRY     BSS 1   Y FOR GRAPHICS
0167  03B0-            GRC     BSS 1   DRAW MODE FOR GRAPHICS
0168  03B1-            GRN     BSS 1   NUMBER OF POINTS TO DRAW
0169  03B2-            GRINDEX BSS 1   PLOT TEMPORARY
0170  03B3-            GRCNT   BSS 1   PLOT TEMPORARY
0171  03B4-            GRMASK  BSS 1   PLOT TEMPORARY
0172  03B5-            GRYCNT  BSS 1   PLOT TEMPORARY
0173  03B6-            GRMAP   BSS 2   PLOT MAP OR X INCREMENT
0174                   GRXINC  EQU GRMAP
0175  03B8-            GRXLOW  BSS 1
0176  03B9-            GRYLOW  BSS 1
0177  03BA-            GRYINC  BSS 2   PLOT Y INCREMENT
0178                   *
0179                   *
0180                   * BUFFERS
0181                   *********
0182                   *
0183  03BC-                    ORG $D600
0184  D600-            DIRBUF  BSS 256         DISK DIRECTORY BUFFER
0185  D700-            FILBUF  BSS $800        FILE BUFFER, 8
0186                   *                       OPEN FILES ALLOWED
0187                   *                       DEFAULT, CAN BE REMOVED
0188                   COPYBS  EQU $2000       COPY BUFFER
0189                   COPYBE  EQU $BFFF       END OF COPY BUFFER
0190                   *
0191                   *
0192                   * PAGE 17 DATA AREA
0193                   *******************
0194                   *
0195  DF00-                    ORG $1780
0196                   *
0197  1780-            VFLAG   BSS 1
0198  1781-            SFLAG   BSS 1
0199                   VMON    EQU $17D5
0200                   *

----------------------------------------------------------------------

EXTENDED DISK OPERATING SYSTEM     23/10/23   R65 ASSEMBLER  PAGE 05

0201                   * INTERFACE ADDRESSES
0202                   *********************
0203                   *
0204                   PORTB1  EQU $1400       MEMORY WRITE DISABLE
0205                   EMUCOM  EQU $1430       EMULATOR COMMAND REG
0206                   EMURES  EQU $1431       EMULATOR RESULT REG
0207                   FDCOM   EQU $14C0       COMMAND REGISTER
0208                   FDSTAT  EQU $14C0       STATUS REGISTER
0209                   FDPARA  EQU $14C1       PARAMETER REGISTER
0210                   FDRES   EQU $14C1       RESULT REGISTER
0211                   FDTSTM  EQU $14C2       TEST MODE REGISTER
0212                   FDDAT   EQU $14C4       DACK ADDRESS
0213                   RSADAT  EQU $14C8       RS232 DATA REG
0214                   RSASTA  EQU $14CA       RS232 STATUS REG
0215                   RSACOM  EQU $14CA       RS232 COMMAND REG
0216                   MULTX   EQU $14E0       MULTIPLIER X-REGISTER
0217                   MULTY   EQU $14E1       MULTIPLIER Y-REGISTER
0218                   MULTR   EQU $14E2       MULTIPLIER DATA REGISTER
0219                   USPBD   EQU $1702       LED DISPLAY
0220                   PRIOTB  EQU $179C       PRIORITY IRQ TABLE
0221                   *
0222                   *
0223                   * VECTORS TO EPROMS OF OS
0224                   *************************
0225                   *
0226                   GETCHR  EQU $E003       GET CHAR
0227                   GETLIN  EQU $E006       GET LINE
0228                   PRTCHR  EQU $E009       PRINT A CHAR TO CRT
0229                   ENDLIN  EQU $E024       TEST END OF LINE
0230                   PRTINF  EQU $E027       PRINT A STRING
0231                   PRTHEX  EQU $E02A       PRINT HEX CHAR
0232                   PRTBYT  EQU $E02D       PRINT BYTE IN A
0233                   PRTAX   EQU $E030       PRINT TWO BYTES
0234                   RSIRQ   EQU $E92D       *** RS 232 IRQ, NORMAL
0235                   ESCTST  EQU $E806       TEST ESCAPE FLAG
0236                   TDIR    EQU $E809       TAPE DIRECTORY
0237                   DWRFIL  EQU $F000       WRITE DISK FILE
0238                   TPWAIT  EQU $E80F       READY MESSAGE FOR TAPE
0239                   TRDREC  EQU $E812       LOAD A RECORD FROM TAPE
0240                   TWRREC  EQU $E818       WRITE A RECORD TO TAPE
0241                   SETID   EQU $E82A       SET TAPE ID
0242                   SETFID  EQU $E81E       SET DATE TO FILE LABEL
0243                   TAPEON  EQU $E821       START TAPE DRIVE
0244                   TAPEOF  EQU $E824       STOP TAPE DRIVE
0245                   TDELAY  EQU $E827       WAIT 1 SEC
0246                   PRFLAB  EQU $E82D       PRINT FILE LABEL
0247                   TDRLBR  EQU $E830       READ LABEL RECORD
0248                   WRFILE  EQU $EB14       *** SPECIAL ENTRY
0249                   DELETE  EQU $F00C       DELETE ONE FILE
0250                   OPEN    EQU $F00F       OPENS EQUENTIAL FILE

----------------------------------------------------------------------

EXTENDED DISK OPERATING SYSTEM     23/10/23   R65 ASSEMBLER  PAGE 06

0251                   CLOSE   EQU $F012       CLOSE SEQUENTIAL FILE
0252                   CLOSAL  EQU $F015       CLOSE ALL FILES
0253                   READCH  EQU $F018       READ ONE CHAR FROM FILE
0254                   WRITCH  EQU $F01B       WRITE ONE CHAR TO FILE
0255                   DRIVE   EQU $F364       *** COMPUTE DRIVE
0256                   SEEK    EQU $F36D       *** SEEK TRACK
0257                   WRCOMM  EQU $F3A4       *** WRITE COMMAND
0258                   WRPARA  EQU $F3AF       *** WRITE PARAMETER
0259                   RESULT  EQU $F3BC       *** GET RESULT
0260                   DATREAD EQU $F3F6       *** READ DATA
0261                   DATWRIT EQU $F3E1       *** WRITE DATA
0262                   WRITE   EQU $F425       *** WRITE RECORD
0263                   VERIFY  EQU $F44C       *** VERIFY RECORD
0264                   READ    EQU $F457       *** READRECORD
0265                   TRACK0  EQU $F4A0       *** SEEK TO TRACK 0
0266                   PREPDO  EQU $F4A7       *** PREPARE DISK OP
0267                   PREPDO1 EQU $F4CC       *** PREPARE DISK OP
0268                   GETFENT EQU $F4D2       *** GET FILE ENTRY
0269                   GETFREC EQU $F4ED       *** GET ENTRY RECORD
0270                   READDS  EQU $F502       *** READ DIR SECTOR
0271                   WRITDS  EQU $F52A       *** WRITE DIR SECTOR
0272                   PREPRW  EQU $F548       *** PREPARE WRITE
0273                   PREPRW1 EQU $F55E       *** PREPARE WRITE
0274                   PUTFENT EQU $F581       *** PUT FILE ENTRY
0275                   DISCERR EQU $F5F4       *** DISK ERROR
0276                   DISCER1 EQU $F5FD       *** DISK ERROR
0277                   ENDDO   EQU $F625       *** END DISK OPERATION
0278                   PREPRD  EQU $F62C       *** PREPARE READ
0279                   PREPWRA EQU $F651       *** PREPARE WRITE
0280                   DDIR2   EQU $F6B4       *** DISK DIRECTORY
0281                   DELETE4 EQU $F6F1       *** DELETE THIS ENTRY
0282                   DRDFIL2 EQU $F76E       *** READ FILE, WITHOUT
0283                   HEXPZE  EQU $F809       HEX EPRESSION, DEF=0
0284                   GETNAM  EQU $F815       GET FILE NAME
0285                   ENDLER  EQU $F9B5       *** ERROR, IF NOT EOL
0286                   ERROR   EQU $F932       *** ERROR
0287                   TEST    EQU $F94D       *** TEST STRING
0288                   INTCOM  EQU $FA06       *** INTERPRET MON COMM
0289                   BFLOAD0 EQU $FCCA       *** LOAD BLOCK FILE
0290                   BFSTOR0 EQU $FD60       *** STORE BLOCK FILE
0291                   HARGUM  EQU $FCF2       *** GET HEX ARGUMENT
0292                   *
0293                   *
0294                           PAG

----------------------------------------------------------------------

EXTENDED DISK OPERATING SYSTEM     23/10/23   R65 ASSEMBLER  PAGE 07

0295                   *
0296  1782-                    ORG PSTART
0297                   *
0298                   * COLD START ENTRY POINT
0299                   *
0300  C800- 4C 2D C8           JMP START
0301                   *
0302                   * VECTOR TABLE FOR CALLING ROUTINES
0303                   *
0304  C803- 4C 52 C8   FGETCOM JMP FGETCM0     GO TO EXDOS
0305  C806- 4C 47 CB           JMP FDIR0       PRINT DIRECTORY
0306  C809- 4C 85 CC           JMP PACK0       PACK DISK
0307  C80C- 4C 74 CE           JMP DELETE1     DELETE FILE(S)
0308  C80F- 4C DC CF           JMP EDIT        EDIT FILE
0309  C812- 4C 29 D0           JMP NEW0        CREATE NEW FILE
0310  C815- 4C 68 D0           JMP PLOT        PLOT GRAPHICS DOT
0311  C818- 4C BB D0           JMP PLOTCH      PLOT CHARACTER
0312  C81B- 4C 58 D1           JMP BITMAP      PLOT 4x4 BITS
0313  C81E- 4C 86 D1           JMP DRAWX       DRAW LINE IN X DIR
0314  C821- 4C 92 D1           JMP DRAWY       DRAW LINE IN Y DIR
0315  C824- 4C 9E D1           JMP DRAWXY      DRAW LINE IN BOTH DIR
0316  C827- 4C 05 D0           JMP FLOPPY      CHANGE FLOPPY
0317  C82A- 4C A2 CF           JMP EXPORT      EXPORT FILE TO HOST
0318                   *
0319  C82D- 78         START   SEI
0320  C82E- A9 03              LDA =<FGETCOM
0321  C830- A2 C8              LDX =>FGETCOM
0322  C832- 8D D5 17           STA VMON
0323  C835- 8E D6 17           STX VMON+1
0324  C838- 20 27 E0           JSR PRTINF
0325  C83B- 52 36 35           BYT 'R65 EXDOS VERSION 4.6',$A0
0325  C83E- 20 45 58 
0325  C841- 44 4F 53 
0325  C844- 20 56 45 
0325  C847- 52 53 49 
0325  C84A- 4F 4E 20 
0325  C84D- 34 2E 36 
0325  C850- A0 
0326  C851- 58                 CLI
0327  C852- 20 27 E0   FGETCM0 JSR PRTINF      MAIN LOOP
0328  C855- 0D 0A 45           BYT $D,$A,'E*'+128
0328  C858- AA 
0329  C859- 20 06 E0           JSR GETLIN
0330  C85C- 20 62 C8           JSR FINTCOM
0331  C85F- 4C 03 C8           JMP FGETCOM
0332                   *
0333  C862- 90 01      FINTCOM BCC *+3         RTS, IF ESC
0334  C864- 60                 RTS
0335  C865- 20 24 E0           JSR ENDLIN      OR EMPTY LINE
0336  C868- F0 FA              BEQ *-4

----------------------------------------------------------------------

EXTENDED DISK OPERATING SYSTEM     23/10/23   R65 ASSEMBLER  PAGE 08

0337                   *
0338  C86A- 20 06 E8           JSR ESCTST      CLEAR ESCAPE FLAG
0339                   *
0340  C86D- 20 4D F9           JSR TEST
0341  C870- 44 46 4F           BYT 'DFORMAT'+128
0341  C873- 52 4D 41 
0341  C876- D4 
0342  C877- B0 11              BCS FINTC1
0343                   *
0344  C879- 20 C0 CD           JSR NGETNE
0345  C87C- 20 F2 FC           JSR HARGUM      *** DFORMAT ***
0346  C87F- 85 DC              STA FILDRV      (DISKNAME,FILDRV)
0347  C881- 20 B5 F9           JSR ENDLER
0348  C884- 20 C6 C9           JSR INITDIR
0349  C887- D0 70              BNE DERROR
0350  C889- 60                 RTS
0351                   *
0352  C88A- 20 4D F9   FINTC1  JSR TEST
0353  C88D- 45 58 50           BYT 'EXPORT'+128
0353  C890- 4F 52 D4 
0354  C893- B0 11              BCS FINTC2
0355                   *
0356  C895- 20 C0 CD           JSR NGETNE      *** EXPORT ***
0357  C898- 20 F2 FC           JSR HARGUM      (FILNAM.CY,DRIVE)
0358  C89B- 85 DC              STA FILDRV
0359  C89D- 20 B5 F9           JSR ENDLER
0360  C8A0- 20 A2 CF           JSR EXPORT
0361  C8A3- D0 54              BNE DERROR
0362  C8A5- 60                 RTS
0363                   *
0364  C8A6- 20 4D F9   FINTC2  JSR TEST
0365  C8A9- 49 4D 50           BYT 'IMPORT'+128
0365  C8AC- 4F 52 D4 
0366  C8AF- B0 0E              BCS FINTC3
0367                   *
0368  C8B1- 20 C0 CD           JSR NGETNE      *** IMPORT ***
0369  C8B4- 20 F2 FC           JSR HARGUM      (FILNAM.CY,DRIVE)
0370  C8B7- 85 DC              STA FILDRV
0371  C8B9- 20 B9 CF           JSR IMPORT
0372  C8BC- D0 3B              BNE DERROR
0373  C8BE- 60                 RTS
0374                   *
0375  C8BF- 20 4D F9   FINTC3  JSR TEST
0376  C8C2- 45 44 49           BYT 'EDIT'+128
0376  C8C5- D4 
0377  C8C6- B0 0E              BCS FINTC4
0378                   *
0379  C8C8- 20 C0 CD           JSR NGETNE      *** EDIT ***
0380  C8CB- 20 F2 FC           JSR HARGUM      (FILNAM.CY,DRIVE)
0381  C8CE- 85 DC              STA FILDRV

----------------------------------------------------------------------

EXTENDED DISK OPERATING SYSTEM     23/10/23   R65 ASSEMBLER  PAGE 09

0382  C8D0- 20 DC CF           JSR EDIT
0383  C8D3- D0 24              BNE DERROR
0384  C8D5- 60                 RTS
0385                   *
0386  C8D6- 20 4D F9   FINTC4  JSR TEST
0387  C8D9- 46 4C 4F           BYT 'FLOPPY'+128
0387  C8DC- 50 50 D9 
0388  C8DF- B0 1B              BCS FINTC6
0389                   *
0390  C8E1- 20 C0 CD           JSR NGETNE      *** FLOPPY ***
0391  C8E4- 20 F2 FC           JSR HARGUM      (FILNAM.CY,DRIVE)
0392  C8E7- 85 DC              STA FILDRV
0393  C8E9- 20 05 D0           JSR FLOPPY
0394  C8EC- D0 0B              BNE DERROR
0395  C8EE- A9 00              LDA =0          PRINT DIRECTORY
0396  C8F0- 8D 97 03           STA FULLFLG
0397  C8F3- 20 47 CB           JSR FDIR0
0398  C8F6- D0 01              BNE DERROR
0399  C8F8- 60                 RTS
0400                   *
0401  C8F9- 4C 32 F9   DERROR  JMP ERROR
0402                   *
0403  C8FC- 20 4D F9   FINTC6  JSR TEST
0404  C8FF- 52 45 56          BYT 'REVIVE'+128
0404  C902- 49 56 C5 
0405  C905- B0 06              BCS FINTC7
0406  C907- 20 4D CA           JSR REVIVE      *** REVIVE ***
0407  C90A- D0 ED              BNE DERROR      (ENTRY,DRIVE)
0408  C90C- 60                 RTS
0409                   *
0410  C90D- 20 4D F9   FINTC7  JSR TEST
0411  C910- 52 45 4E           BYT 'RENAME'+128
0411  C913- 41 4D C5 
0412  C916- B0 06              BCS FINTC10
0413  C918- 20 5E CA           JSR RENAME      *** RENAME ***
0414  C91B- D0 DC      DERROR1 BNE DERROR      (FILNAM.CY,DRIVE)
0415  C91D- 60                 RTS
0416                   *
0417  C91E- 20 4D F9   FINTC10 JSR TEST
0418  C921- 46 44 49           BYT 'FDIR'+128
0418  C924- D2 
0419  C925- B0 0B              BCS FINTC25
0420  C927- A9 FF              LDA =$FF
0421  C929- 8D 97 03   FINTC24 STA FULLFLG
0422  C92C- 20 39 CB           JSR FDIR        *** FDIR ***
0423  C92F- D0 EA      DERROR2 BNE DERROR1     (DRIVE)
0424  C931- 60                 RTS
0425                   *
0426  C932- 20 4D F9   FINTC25 JSR TEST
0427  C935- 44 49 D2           BYT 'DIR'+128   *** DIR ***

----------------------------------------------------------------------

EXTENDED DISK OPERATING SYSTEM     23/10/23   R65 ASSEMBLER  PAGE 10

0428  C938- B0 05              BCS FINTC11     (DRIVE)
0429  C93A- A9 00              LDA =0
0430  C93C- 4C 29 C9           JMP FINTC24
0431                   *
0432  C93F- 20 4D F9   FINTC11 JSR TEST
0433  C942- 50 41 43           BYT 'PACK'+128  *** PACK ***
0433  C945- CB 
0434  C946- B0 06              BCS FINTC12     (DRIVE)
0435  C948- 20 4B CC           JSR PACK
0436  C94B- D0 E2      DERROR3 BNE DERROR2
0437  C94D- 60                 RTS
0438                   *
0439  C94E- 20 4D F9   FINTC12 JSR TEST
0440  C951- 50 52 4F           BYT 'PROTECT'+128
0440  C954- 54 45 43 
0440  C957- D4 
0441  C958- B0 06              BCS FINTC15
0442  C95A- 20 F2 CA           JSR PROTECT     *** PROTECT ***
0443  C95D- D0 D0              BNE DERROR2     (FILNAM.CY,DRIVE)
0444  C95F- 60                 RTS
0445                   *
0446  C960- 20 4D F9   FINTC15 JSR TEST
0447  C963- 43 4F 50           BYT 'COPY'+128
0447  C966- D9 
0448  C967- B0 06              BCS FINTC17     *** COPY ***
0449  C969- 20 C1 CE           JSR COPY        (FILNAM.CY,DRIVE,DRIVE)
0450  C96C- D0 DD              BNE DERROR3
0451  C96E- 60                 RTS
0452                   *
0453  C96F- 20 4D F9   FINTC17 JSR TEST        *** LOAD ***
0454  C972- 4C 4F 41           BYT 'LOAD'+128
0454  C975- C4 
0455  C976- B0 06              BCS FINTC18
0456  C978- 20 C0 CD           JSR NGETNE
0457  C97B- 4C CA FC           JMP BFLOAD0
0458                   *
0459  C97E- 20 4D F9   FINTC18 JSR TEST        *** STORE ***
0460  C981- 53 54 4F           BYT 'STORE'+128
0460  C984- 52 C5 
0461  C986- B0 06              BCS FINTC19
0462  C988- 20 C0 CD           JSR NGETNE
0463  C98B- 4C 60 FD           JMP BFSTOR0
0464                   *
0465  C98E- 20 4D F9   FINTC19 JSR TEST        *** DELETE ***
0466  C991- 44 45 4C           BYT 'DELETE'+128
0466  C994- 45 54 C5 
0467  C997- B0 06              BCS FINTC20
0468  C999- 20 69 CE           JSR DELETE0
0469  C99C- D0 AD              BNE DERROR3
0470  C99E- 60                 RTS

----------------------------------------------------------------------

EXTENDED DISK OPERATING SYSTEM     23/10/23   R65 ASSEMBLER  PAGE 11

0471                   *
0472  C99F- 20 4D F9   FINTC20 JSR TEST        *** VOLUME ***
0473  C9A2- 56 4F 4C           BYT 'VOLUME'+128  (DRIVE)
0473  C9A5- 55 4D C5 
0474  C9A8- B0 0B              BCS FINTC21
0475  C9AA- 20 F2 FC           JSR HARGUM
0476  C9AD- 85 DC              STA FILDRV
0477  C9AF- 20 B5 F9           JSR ENDLER
0478  C9B2- 4C 06 CE           JMP VOLUME
0479                   *
0480  C9B5- 20 4D F9   FINTC21 JSR TEST        *** NEW ***
0481  C9B8- 4E 45 D7           BYT 'NEW'+128     (FILNAM.CY,DRIVE)
0482  C9BB- B0 06              BCS FINTC22
0483  C9BD- 20 21 D0           JSR NEW
0484  C9C0- D0 89              BNE DERROR3
0485  C9C2- 60                 RTS
0486                   *
0487  C9C3- 4C 0E FA   FINTC22 JMP INTCOM+8    MUST BE MONITOR COMM
0488                   *
0489                   *
0490                   * SUBROUTINES FOLLOW
0491                   * ******************
0492                   *
0493                   * INITDIR: INITIALIZE DISK DIRECTORY
0494                   ************************************
0495                   *
0496  C9C6- 20 41 CA   INITDIR JSR DSKONLY
0497  C9C9- 20 A7 F4           JSR PREPDO
0498  C9CC- 20 27 E0           JSR PRTINF
0499  C9CF- 0D 0A 46           BYT $D,$A,'FORMAT (DATA LOST)? '+128
0499  C9D2- 4F 52 4D 
0499  C9D5- 41 54 20 
0499  C9D8- 28 44 41 
0499  C9DB- 54 41 20 
0499  C9DE- 4C 4F 53 
0499  C9E1- 54 29 3F 
0499  C9E4- A0 
0500  C9E5- 20 03 E0           JSR GETCHR
0501  C9E8- 29 5F              AND =$5F
0502  C9EA- C9 59              CMP ='Y'
0503  C9EC- F0 05              BEQ INITD1
0504  C9EE- A9 03              LDA =3          ESCAPE
0505  C9F0- 4C FD F5           JMP DISCER1
0506                   *
0507  C9F3- 20 27 E0   INITD1  JSR PRTINF
0508  C9F6- 0D 8A              BYT $D,$8A
0509  C9F8- 20 15 F0           JSR CLOSAL
0510  C9FB- 78                 SEI
0511                   *
0512  C9FC- A0 00      INITD2  LDY =0

----------------------------------------------------------------------

EXTENDED DISK OPERATING SYSTEM     23/10/23   R65 ASSEMBLER  PAGE 12

0513  C9FE- 98                 TYA             CLEAR BUFFER FIRST
0514  C9FF- 99 00 D6          STA DIRBUF,Y
0515  CA02- 88                 DEY
0516  CA03- D0 FA              BNE *-4
0517  CA05- A2 01              LDX =1          STORE SECTORS 1-31
0518  CA07- 8E 7A 03           STX BUFSEC
0519  CA0A- 20 2A F5   INITD3  JSR WRITDS
0520  CA0D- EE 7A 03           INC BUFSEC
0521  CA10- AE 7A 03           LDX BUFSEC
0522  CA13- E0 20              CPX =32
0523  CA15- 90 F3              BCC INITD3
0524  CA17- A2 10              LDX =16         LOAD DISK NAME AND NO
0525  CA19- BD 20 03   INITD4  LDA FILNM1,X
0526  CA1C- 9D E1 D6           STA DIRBUF+$E1,X
0527  CA1F- CA                 DEX
0528  CA20- 10 F7              BPL INITD4
0529  CA22- 20 2A F5           JSR WRITDS      STORE SECTOR 32
0530  CA25- 60                 RTS
0531                   *
0532                   *
0533  CA26- 20 09 F8   SETEND1 JSR HEXPZE
0534  CA29- AA                 TAX
0535  CA2A- CA                 DEX
0536  CA2B- 8E 8B 03           STX NEWENT      SAVE ENTRY NO
0537  CA2E- 20 F2 FC           JSR HARGUM
0538  CA31- 85 DC              STA FILDRV
0539  CA33- 20 B5 F9           JSR ENDLER
0540  CA36- 20 CC F4           JSR PREPDO1
0541  CA39- AE 8B 03           LDX NEWENT
0542  CA3C- 20 D2 F4           JSR GETFENT
0543  CA3F- A6 E4              LDX FILCNT
0544                   *
0545  CA41- A5 DC      DSKONLY LDA FILDRV
0546  CA43- 29 FE              AND =$FE
0547  CA45- D0 01              BNE *+3
0548  CA47- 60                 RTS
0549                   *
0550  CA48- A9 62              LDA =$62
0551  CA4A- 4C 32 F9           JMP ERROR
0552                   *
0553                   * REVIVE: REVIVE DELETED FILE
0554                   *****************************
0555                   *
0556  CA4D- 20 26 CA   REVIVE  JSR SETEND1
0557  CA50- AD 1E 03           LDA FILLNK      CLEAR THE DELETED FLAG
0558  CA53- 29 7F              AND =$7F
0559  CA55- 8D 1E 03           STA FILLNK
0560  CA58- 20 81 F5           JSR PUTFENT
0561  CA5B- 4C 25 F6           JMP ENDDO
0562                   *

----------------------------------------------------------------------

EXTENDED DISK OPERATING SYSTEM     23/10/23   R65 ASSEMBLER  PAGE 13

0563                   * RENAME: RENAME FILE
0564                   *********************
0565                   *
0566  CA5E- 20 C0 CD   RENAME  JSR NGETNE
0567  CA61- 20 F2 FC           JSR HARGUM
0568  CA64- 85 DC              STA FILDRV
0569  CA66- 20 41 CA           JSR DSKONLY
0570  CA69- 20 B5 F9           JSR ENDLER
0571  CA6C- 20 2C F6           JSR PREPRD
0572  CA6F- 20 2D E8           JSR PRFLAB
0573  CA72- 20 27 E0           JSR PRTINF
0574  CA75- 0D 0A 46           BYT $D,$A,'FILNAM.CY,SUBTYPE? '+128
0574  CA78- 49 4C 4E 
0574  CA7B- 41 4D 2E 
0574  CA7E- 43 59 2C 
0574  CA81- 53 55 42 
0574  CA84- 54 59 50 
0574  CA87- 45 3F A0 
0575  CA8A- 20 06 E0           JSR GETLIN
0576  CA8D- 20 24 E0           JSR ENDLIN
0577  CA90- D0 03              BNE *+5
0578  CA92- 4C EE C9           JMP INITD1-5    ESCAPE
0579                   *
0580  CA95- A6 E4              LDX FILCNT
0581  CA97- 8E 8B 03           STX NEWENT
0582  CA9A- 20 C0 CD           JSR NGETNE
0583  CA9D- 20 24 E0           JSR ENDLIN
0584  CAA0- F0 2E              BEQ RENAME1
0585  CAA2- 20 4D F9           JSR TEST
0586  CAA5- AC                 BYT ','+128
0587  CAA6- B0 45              BCS SYNERR
0588  CAA8- 20 4D F9           JSR TEST
0589  CAAB- A1                 BYT '!'+128     PROTECTED?
0590  CAAC- AD 00 03           LDA FILTYP
0591  CAAF- 29 7F              AND =$7F
0592  CAB1- B0 02              BCS *+4
0593  CAB3- 09 80              ORA =$80
0594  CAB5- 8D 00 03           STA FILTYP
0595  CAB8- B1 E9              LDA (VIDPNT),Y
0596  CABA- C8                 INY
0597  CABB- C9 41              CMP =$41
0598  CABD- 90 2E              BCC SYNERR
0599  CABF- C9 5C              CMP =$5C
0600  CAC1- B0 2A              BCS SYNERR
0601  CAC3- 8D 12 03           STA FILSTP
0602  CAC6- 20 24 E0           JSR ENDLIN
0603  CAC9- F0 05              BEQ RENAME1
0604  CACB- A9 15              LDA =$15        END OF LINE EXPECTED
0605  CACD- 4C FD F5           JMP DISCER1
0606                   *

----------------------------------------------------------------------

EXTENDED DISK OPERATING SYSTEM     23/10/23   R65 ASSEMBLER  PAGE 14

0607  CAD0- 20 54 F6   RENAME1 JSR PREPWRA+3
0608  CAD3- 8E 11 03           STX FILCYC
0609  CAD6- A2 0F              LDX =15
0610  CAD8- BD 20 03           LDA FILNM1,X
0611  CADB- 9D 01 03           STA FILNAM,X
0612  CADE- CA                 DEX
0613  CADF- 10 F7              BPL *-7
0614  CAE1- AE 8B 03           LDX NEWENT
0615  CAE4- 20 ED F4           JSR GETFREC
0616  CAE7- 20 83 F5           JSR PUTFENT+2
0617  CAEA- 4C 25 F6           JMP ENDDO
0618                   *
0619  CAED- A9 18      SYNERR  LDA =$18
0620  CAEF- 4C F4 F5           JMP DISCERR
0621                   *
0622                   * PROTECT: PROTECT DISK FILE
0623                   * **************************
0624                   *
0625  CAF2- 20 C0 CD   PROTECT JSR NGETNE
0626  CAF5- 20 F2 FC           JSR HARGUM
0627  CAF8- 85 DC              STA FILDRV
0628  CAFA- 20 41 CA           JSR DSKONLY
0629  CAFD- 20 B5 F9          JSR ENDLER
0630  CB00- 20 2C F6           JSR PREPRD
0631  CB03- AD 00 03           LDA FILTYP
0632  CB06- 09 80              ORA =$80
0633  CB08- 8D 00 03           STA FILTYP
0634  CB0B- A6 E5              LDX FILCN1
0635  CB0D- 20 81 F5           JSR PUTFENT
0636  CB10- 4C 25 F6           JMP ENDDO
0637                   *
0638                   * IFNAME: READ FILE NAME, IF THERE
0639                   **********************************
0640                   *
0641  CB13- A9 00      IFNAME  LDA =0
0642  CB15- 8D 98 03           STA NAMEFLG
0643  CB18- 20 24 E0           JSR ENDLIN      SKIP BLANKS
0644  CB1B- F0 1B              BEQ IFNAME1
0645  CB1D- B1 E9              LDA (VIDPNT),Y
0646  CB1F- 29 7F              AND =$7F
0647  CB21- C9 40              CMP ='@'
0648  CB23- 90 13              BCC IFNAME1
0649  CB25- C9 5B              CMP ='['
0650  CB27- B0 0F              BCS IFNAME1
0651  CB29- 20 9A CD           JSR NGETNAM
0652  CB2C- A9 FF              LDA =$FF
0653  CB2E- 8D 98 03           STA NAMEFLG
0654  CB31- B1 E9              LDA (VIDPNT),Y
0655  CB33- C9 2C              CMP =','
0656  CB35- D0 01              BNE IFNAME1

----------------------------------------------------------------------

EXTENDED DISK OPERATING SYSTEM     23/10/23   R65 ASSEMBLER  PAGE 15

0657  CB37- C8                 INY
0658  CB38- 60         IFNAME1 RTS
0659                   *
0660                   * FDIR: PRINT DIRECTORY
0661                   ***********************
0662                   *
0663  CB39- 20 13 CB   FDIR    JSR IFNAME
0664  CB3C- 20 09 F8           JSR HEXPZE
0665  CB3F- 85 DC              STA FILDRV
0666  CB41- 20 41 CA           JSR DSKONLY
0667  CB44- 20 B5 F9           JSR ENDLER
0668  CB47- A5 DC      FDIR0   LDA FILDRV      ENTRY FOR VECTOR CALL
0669  CB49- 29 FE              AND =$FE
0670  CB4B- F0 03              BEQ *+5
0671  CB4D- 4C 09 E8           JMP TDIR
0672                   *
0673  CB50- 20 A7 F4           JSR PREPDO
0674  CB53- A2 FF              LDX =255
0675  CB55- 20 D2 F4           JSR GETFENT
0676  CB58- 20 27 E0           JSR PRTINF
0677  CB5B- 0D 0A              BYT $D,$A
0678  CB5D- 44 49 52           BYT 'DIRECTORY '
0678  CB60- 45 43 54 
0678  CB63- 4F 52 59 
0678  CB66- 20 
0679  CB67- 44 49 53           BYT 'DISK '+128
0679  CB6A- 4B A0 
0680  CB6C- A5 DC              LDA FILDRV
0681  CB6E- 20 2D E0           JSR PRTBYT
0682  CB71- 20 27 E0           JSR PRTINF
0683  CB74- 3A A0              BYT ': '+128
0684  CB76- A2 00              LDX =0
0685  CB78- BD 01 03   FDIR0A  LDA FILNAM,X
0686  CB7B- 20 09 E0           JSR PRTCHR
0687  CB7E- E8                 INX
0688  CB7F- E0 10              CPX =16
0689  CB81- 90 F5              BCC FDIR0A
0690                   *
0691  CB83- A2 02              LDX =2
0692  CB85- 8E 99 03           STX DIRCNT
0693  CB88- A2 00              LDX =0
0694  CB8A- 8E 9A 03           STX DELCNT
0695  CB8D- 8E 9B 03           STX DELCNT+1
0696  CB90- AD 98 03   FDIR1   LDA NAMEFLG
0697  CB93- D0 06              BNE *+8
0698  CB95- 20 D2 F4           JSR GETFENT
0699  CB98- 4C A3 CB           JMP FDIR1A
0700  CB9B- 20 D5 CD           JSR NEXTENT
0701  CB9E- AE 7C 03           LDX SCYFC
0702  CBA1- 86 E4              STX FILCNT

----------------------------------------------------------------------

EXTENDED DISK OPERATING SYSTEM     23/10/23   R65 ASSEMBLER  PAGE 16

0703  CBA3- AD 00 03   FDIR1A  LDA FILTYP      0 MEANS END MARK
0704  CBA6- F0 7A              BEQ FDIR2
0705  CBA8- 20 06 E8           JSR ESCTST
0706  CBAB- B0 75              BCS FDIR2
0707  CBAD- AD 99 03           LDA DIRCNT      EVERY 14 LINES
0708  CBB0- 29 0E              AND =$0E
0709  CBB2- D0 0F              BNE FDIR4
0710  CBB4- EE 99 03           INC DIRCNT
0711  CBB7- EE 99 03           INC DIRCNT
0712  CBBA- 20 03 E0           JSR GETCHR
0713  CBBD- 20 06 E8           JSR ESCTST      ESCAPE?
0714  CBC0- 90 01              BCC FDIR4
0715  CBC2- 60                 RTS             RETURN TO COMMAND LINE
0716                   *
0717  CBC3- AD 1E 03   FDIR4   LDA FILLNK
0718  CBC6- 10 0F              BPL FDIR8
0719  CBC8- AD 9A 03           LDA DELCNT      COUNT DELETED SECTORS
0720  CBCB- 18                 CLC
0721  CBCC- 6D 16 03           ADC FILSIZ+1
0722  CBCF- 8D 9A 03           STA DELCNT
0723  CBD2- 90 03              BCC FDIR8
0724  CBD4- EE 9B 03           INC DELCNT+1
0725                   *
0726  CBD7- AD 97 03   FDIR8   LDA FULLFLG
0727  CBDA- F0 65              BEQ FDIR5
0728  CBDC- 20 27 E0           JSR PRTINF      PRINT FULL DIRECTORY
0729  CBDF- 0D 0A 2A           BYT $D,$A,'***** '+128
0729  CBE2- 2A 2A 2A 
0729  CBE5- 2A A0 
0730  CBE7- A6 E4              LDX FILCNT
0731  CBE9- E8                 INX
0732  CBEA- 8A                 TXA
0733  CBEB- 20 2D E0           JSR PRTBYT
0734  CBEE- 20 27 E0           JSR PRTINF
0735  CBF1- 2E 20 20           BYT '.  SIZE='+128
0735  CBF4- 53 49 5A 
0735  CBF7- 45 BD 
0736  CBF9- AD 16 03           LDA FILSIZ+1
0737  CBFC- 20 2D E0           JSR PRTBYT
0738  CBFF- AD 1E 03          LDA FILLNK
0739  CC02- 10 0D              BPL FDIR3-3
0740                   *
0741  CC04- 20 27 E0           JSR PRTINF
0742  CC07- 20 28 44           BYT ' (DELETED)'+128
0742  CC0A- 45 4C 45 
0742  CC0D- 54 45 44 
0742  CC10- A9 
0743  CC11- EE 99 03           INC DIRCNT      COUNT FIRST LINE
0744  CC14- 20 2D E8   FDIR3   JSR PRFLAB
0745  CC17- B0 09              BCS FDIR2       ESCAPE?

----------------------------------------------------------------------

EXTENDED DISK OPERATING SYSTEM     23/10/23   R65 ASSEMBLER  PAGE 17

0746  CC19- EE 99 03           INC DIRCNT      COUNT SECOND LINE
0747  CC1C- A6 E4      FDIR6   LDX FILCNT
0748  CC1E- E8                 INX
0749  CC1F- 4C 90 CB           JMP FDIR1
0750                   *
0751  CC22- 20 B4 F6   FDIR2   JSR DDIR2
0752  CC25- 20 27 E0           JSR PRTINF
0753  CC28- 44 45 4C           BYT 'DELETED:     '+128
0753  CC2B- 45 54 45 
0753  CC2E- 44 3A 20 
0753  CC31- 20 20 20 
0753  CC34- A0 
0754  CC35- AE 9A 03           LDX DELCNT
0755  CC38- AD 9B 03           LDA DELCNT+1
0756  CC3B- 20 30 E0           JSR PRTAX
0757  CC3E- A9 00              LDA =0
0758  CC40- 60                 RTS
0759                   *
0760  CC41- AD 1E 03   FDIR5   LDA FILLNK
0761  CC44- 30 D6              BMI FDIR6
0762  CC46- 10 CC              BPL FDIR3
0763                   *
0764  CC48- 4C 25 F6   PACK9   JMP ENDDO
0765                   *
0766                   * PACK: PACK FLOPPY DISK
0767                   ************************
0768                   *
0769  CC4B- 20 09 F8   PACK    JSR HEXPZE
0770  CC4E- 85 DC              STA FILDRV
0771  CC50- 20 B5 F9           JSR ENDLER
0772  CC53- 20 41 CA           JSR DSKONLY
0773  CC56- 20 15 F0           JSR CLOSAL
0774  CC59- 20 27 E0           JSR PRTINF
0775  CC5C- 0D 0A              BYT $D,$A
0776  CC5E- 50 41 43           BYT 'PACK (DELETED FILES LOST)? '+128
0776  CC61- 4B 20 28 
0776  CC64- 44 45 4C 
0776  CC67- 45 54 45 
0776  CC6A- 44 20 46 
0776  CC6D- 49 4C 45 
0776  CC70- 53 20 4C 
0776  CC73- 4F 53 54 
0776  CC76- 29 3F A0 
0777  CC79- 20 03 E0           JSR GETCHR
0778  CC7C- 29 5F              AND =$5F
0779  CC7E- C9 59              CMP ='Y'
0780  CC80- F0 03              BEQ *+5
0781  CC82- 4C EE C9           JMP INITD1-5    ESCAPE
0782                   *
0783  CC85- 20 A7 F4   PACK0   JSR PREPDO

----------------------------------------------------------------------

EXTENDED DISK OPERATING SYSTEM     23/10/23   R65 ASSEMBLER  PAGE 18

0784  CC88- A2 00              LDX =0
0785  CC8A- 20 D2 F4   PACK1   JSR GETFENT     LOOP UNTIL FIRST
0786  CC8D- AD 00 03           LDA FILTYP      EMPTY RECORD FOUND
0787  CC90- F0 B6              BEQ PACK9       NO PACK NEEDED
0788  CC92- AD 1E 03           LDA FILLNK
0789  CC95- 30 05              BMI PACK2       SKIP, IF DELETED
0790  CC97- A6 E4              LDX FILCNT      ELSE NEXT ENTRY
0791  CC99- E8                 INX
0792  CC9A- D0 EE              BNE PACK1       ALLWAYS TAKEN
0793                   *
0794  CC9C- A6 E4      PACK2   LDX FILCNT      DELETED FILE FOUND
0795  CC9E- 8E 8B 03           STX NEWENT
0796  CCA1- AD 13 03           LDA FILLOC
0797  CCA4- AE 14 03           LDX FILLOC+1
0798  CCA7- 8D 8C 03           STA NEWREC
0799  CCAA- 8E 8D 03           STX NEWREC+1
0800  CCAD- A6 E4              LDX FILCNT
0801  CCAF- E8                 INX
0802  CCB0- 20 D2 F4   PACK3   JSR GETFENT
0803  CCB3- AD 00 03           LDA FILTYP
0804  CCB6- D0 03              BNE *+5
0805  CCB8- 4C 69 CD           JMP PACK8       SKIP, IF END OF DIR.
0806  CCBB- AD 1E 03           LDA FILLNK
0807  CCBE- 10 05              BPL PACK4       SKIP, IF NOT DELETED
0808  CCC0- A6 E4              LDX FILCNT
0809  CCC2- E8                 INX
0810  CCC3- D0 EB              BNE PACK3
0811                   *
0812  CCC5- AD 13 03   PACK4   LDA FILLOC
0813  CCC8- AE 14 03           LDX FILLOC+1
0814  CCCB- 8D 89 03           STA OLDREC
0815  CCCE- 8E 8A 03           STX OLDREC+1
0816  CCD1- A5 E4              LDA FILCNT
0817  CCD3- 8D 88 03           STA OLDENT
0818  CCD6- AD 8C 03           LDA NEWREC
0819  CCD9- AE 8D 03           LDX NEWREC+1
0820  CCDC- 8D 13 03           STA FILLOC
0821  CCDF- 8E 14 03           STX FILLOC+1
0822  CCE2- AE 8B 03           LDX NEWENT
0823  CCE5- 20 ED F4           JSR GETFREC
0824  CCE8- 20 83 F5           JSR PUTFENT+2   MOVE ENTRY
0825  CCEB- AD 16 03           LDA FILSIZ+1
0826  CCEE- 8D 8E 03           STA COUNTER
0827                   *
0828  CCF1- A9 05      PACK5   LDA =5
0829  CCF3- CD 8E 03           CMP COUNTER
0830  CCF6- 90 03              BCC *+5
0831  CCF8- AD 8E 03           LDA COUNTER
0832  CCFB- 8D 8F 03           STA COUNT2
0833                   *

----------------------------------------------------------------------

EXTENDED DISK OPERATING SYSTEM     23/10/23   R65 ASSEMBLER  PAGE 19

0834  CCFE- A9 00             LDA =<FILBUF    MOVE FILE
0835  CD00- A2 D7              LDX =>FILBUF
0836  CD02- 85 E0              STA DATA
0837  CD04- 86 E1              STX DATA+1
0838  CD06- AD 89 03   PACK5A  LDA OLDREC
0839  CD09- AE 8A 03           LDX OLDREC+1
0840  CD0C- 85 DE              STA SECTOR
0841  CD0E- 86 DD              STX TRACK
0842  CD10- 20 5C F5           JSR PREPRW1-2
0843  CD13- 20 57 F4           JSR READ
0844  CD16- EE 89 03           INC OLDREC
0845  CD19- D0 03              BNE *+5
0846  CD1B- EE 8A 03           INC OLDREC+1
0847  CD1E- E6 E1              INC DATA+1
0848  CD20- CE 8F 03           DEC COUNT2
0849  CD23- D0 E1              BNE PACK5A
0850                   *
0851  CD25- A9 D7              LDA =>FILBUF
0852  CD27- 85 E1              STA DATA+1
0853  CD29- A9 05              LDA =5
0854  CD2B- CD 8E 03           CMP COUNTER
0855  CD2E- 90 03              BCC *+5
0856  CD30- AD 8E 03           LDA COUNTER
0857  CD33- 8D 8F 03           STA COUNT2
0858  CD36- AD 8C 03   PACK5B  LDA NEWREC
0859  CD39- AE 8D 03           LDX NEWREC+1
0860  CD3C- 85 DE              STA SECTOR
0861  CD3E- 86 DD              STX TRACK
0862  CD40- 20 5C F5           JSR PREPRW1-2
0863  CD43- 20 25 F4           JSR WRITE
0864  CD46- EE 8C 03           INC NEWREC
0865  CD49- D0 03              BNE *+5
0866  CD4B- EE 8D 03           INC NEWREC+1
0867  CD4E- E6 E1              INC DATA+1
0868  CD50- CE 8E 03           DEC COUNTER
0869  CD53- CE 8F 03           DEC COUNT2
0870  CD56- D0 DE              BNE PACK5B
0871                   *
0872  CD58- AD 8E 03           LDA COUNTER
0873  CD5B- D0 94              BNE PACK5
0874                   *
0875  CD5D- EE 8B 03           INC NEWENT
0876  CD60- EE 88 03           INC OLDENT
0877  CD63- AE 88 03           LDX OLDENT
0878  CD66- 4C B0 CC           JMP PACK3
0879                   *
0880  CD69- A9 00      PACK8   LDA =0          SET END MARK
0881  CD6B- 8D 00 03           STA FILTYP
0882  CD6E- AD 8C 03           LDA NEWREC
0883  CD71- AE 8D 03           LDX NEWREC+1

----------------------------------------------------------------------

EXTENDED DISK OPERATING SYSTEM     23/10/23   R65 ASSEMBLER  PAGE 20

0884  CD74- 8D 13 03           STA FILLOC
0885  CD77- 8E 14 03           STX FILLOC+1
0886  CD7A- AE 8B 03           LDX NEWENT
0887  CD7D- 20 ED F4           JSR GETFREC
0888  CD80- 20 83 F5           JSR PUTFENT+2
0889  CD83- 20 27 E0           JSR PRTINF
0890  CD86- 50 41 43           BYT 'PACKING COMPLETE',' '+128
0890  CD89- 4B 49 4E 
0890  CD8C- 47 20 43 
0890  CD8F- 4F 4D 50 
0890  CD92- 4C 45 54 
0890  CD95- 45 A0 
0891                   *
0892  CD97- 4C 25 F6   PACK7   JMP ENDDO
0893                   *
0894                   * NGETNAM: GET FILE NAME AND CYCLUS
0895                   ***********************************
0896                   *
0897  CD9A- 20 15 F8   NGETNAM JSR GETNAM
0898  CD9D- A2 00              LDX =0
0899                   *
0900  CD9F- A2 00      NGETN6  LDX =0
0901  CDA1- BD 20 03   NGETN7  LDA FILNM1,X
0902  CDA4- C9 40              CMP ='@'
0903  CDA6- D0 12              BNE NGETN9
0904  CDA8- E8                 INX
0905  CDA9- BD 20 03   NGETN8  LDA FILNM1,X
0906  CDAC- C9 20              CMP =' '
0907  CDAE- D0 F1              BNE NGETN7
0908  CDB0- A9 40              LDA ='@'
0909  CDB2- 9D 20 03           STA FILNM1,X
0910  CDB5- E8                 INX
0911  CDB6- E0 10              CPX =16
0912  CDB8- 90 EF              BCC NGETN8
0913                   *
0914  CDBA- E8         NGETN9  INX
0915  CDBB- E0 0F              CPX =15
0916  CDBD- 90 E2              BCC NGETN7
0917  CDBF- 60         NGETN10 RTS
0918                   *
0919                   * NGETNE: GET FILE NAME, NO WILDCARDS
0920                   *************************************
0921                   *
0922  CDC0- 20 9A CD   NGETNE  JSR NGETNAM
0923  CDC3- A2 10              LDX =16
0924  CDC5- BD 21 03   NGETNE1 LDA FILNM1+1,X
0925  CDC8- C9 40              CMP ='@'
0926  CDCA- F0 04              BEQ NGETNE2
0927  CDCC- CA                 DEX
0928  CDCD- D0 F6              BNE NGETNE1

----------------------------------------------------------------------

EXTENDED DISK OPERATING SYSTEM     23/10/23   R65 ASSEMBLER  PAGE 21

0929  CDCF- 60                 RTS
0930                   *
0931  CDD0- A9 61      NGETNE2 LDA =$61        NO WILD CARD
0932  CDD2- 4C 32 F9           JMP ERROR
0933                   *
0934                   * NEXTENTRY
0935                   ***********
0936                   * INPUT: X=FIRST ENTRY TO CHECK
0937                   * OUTPUT: SCYFC: FOUND ENTRY,Z=1 IF END MARK
0938                   *
0939  CDD5- 8E 7C 03   NEXTENT STX SCYFC
0940  CDD8- 20 D2 F4   NEXTE5  JSR GETFENT
0941  CDDB- AD 00 03           LDA FILTYP
0942  CDDE- D0 01              BNE *+3         END MARK?
0943  CDE0- 60                 RTS
0944                   *
0945  CDE1- AD 30 03           LDA FILCY1      IF FILCYC=0
0946  CDE4- F0 05              BEQ NEXTE10     DO NOT CHECK
0947  CDE6- CD 11 03           CMP FILCYC
0948  CDE9- D0 12              BNE NEXTE30
0949                   *
0950  CDEB- A2 0F      NEXTE10 LDX =15
0951  CDED- BD 20 03           LDA FILNM1,X
0952  CDF0- C9 40              CMP ='@'
0953  CDF2- F0 05              BEQ NEXTE20
0954  CDF4- DD 01 03           CMP FILNAM,X
0955  CDF7- D0 04              BNE NEXTE30
0956                   *
0957  CDF9- CA         NEXTE20 DEX
0958  CDFA- 10 F1              BPL NEXTE10+2
0959  CDFC- 60                 RTS             FOUND
0960                   *
0961  CDFD- EE 7C 03  NEXTE30 INC SCYFC
0962  CE00- AE 7C 03           LDX SCYFC
0963  CE03- 4C D8 CD           JMP NEXTE5
0964                   *
0965                   * VOLUME: CHANGE VOLUME NAME
0966                   ****************************
0967                   *
0968  CE06- 20 41 CA   VOLUME  JSR DSKONLY
0969  CE09- 20 A7 F4           JSR PREPDO
0970  CE0C- A2 FF              LDX =255
0971  CE0E- 20 D2 F4           JSR GETFENT
0972  CE11- 20 27 E0           JSR PRTINF
0973  CE14- 0D 0A 4F           BYT $D,$A,'OLD VOLUME: '+128
0973  CE17- 4C 44 20 
0973  CE1A- 56 4F 4C 
0973  CE1D- 55 4D 45 
0973  CE20- 3A A0 
0974  CE22- A2 00              LDX =0

----------------------------------------------------------------------

EXTENDED DISK OPERATING SYSTEM     23/10/23   R65 ASSEMBLER  PAGE 22

0975  CE24- BD 01 03   VOL10   LDA FILNAM,X
0976  CE27- 20 09 E0           JSR PRTCHR
0977  CE2A- E8                 INX
0978  CE2B- E0 10              CPX =16
0979  CE2D- 90 F5              BCC VOL10
0980  CE2F- 20 27 E0           JSR PRTINF
0981  CE32- AE                 BYT '.'+128
0982  CE33- AD 11 03           LDA FILCYC
0983  CE36- 20 2D E0           JSR PRTBYT
0984  CE39- 20 27 E0           JSR PRTINF
0985  CE3C- 0D 0A 4E           BYT $D,$A,'NEW VOLUME: '+128
0985  CE3F- 45 57 20 
0985  CE42- 56 4F 4C 
0985  CE45- 55 4D 45 
0985  CE48- 3A A0 
0986  CE4A- 20 06 E0           JSR GETLIN
0987  CE4D- 20 24 E0           JSR ENDLIN
0988  CE50- D0 01              BNE *+3
0989  CE52- 60                 RTS             NO CHANGE, RETURN
0990  CE53- 20 C0 CD           JSR NGETNE
0991  CE56- A2 10              LDX =16
0992  CE58- BD 20 03   VOL20   LDA FILNM1,X
0993  CE5B- 9D E1 D6           STA DIRBUF+$E1,X
0994  CE5E- CA                 DEX
0995  CE5F- 10 F7              BPL VOL20
0996  CE61- A9 20              LDA =$20        Last directory entry
0997  CE63- 8D 7A 03           STA BUFSEC
0998  CE66- 4C 2A F5           JMP WRITDS
0999                   *
1000                   * DELETE: DELETE ONE OR SEVERAL FILES
1001                   *************************************
1002                   *
1003  CE69- 20 9A CD   DELETE0 JSR NGETNAM
1004  CE6C- 20 F2 FC           JSR HARGUM
1005  CE6F- 85 DC              STA FILDRV
1006  CE71- 20 41 CA           JSR DSKONLY
1007  CE74- A2 10      DELETE1 LDX =16         WILD CARDS?
1008  CE76- BD 1F 03   DEL1    LDA FILNM1-1,X
1009  CE79- C9 40              CMP ='@'
1010  CE7B- F0 06              BEQ DEL2        SKIP, IF YES
1011  CE7D- CA                 DEX
1012  CE7E- D0 F6              BNE DEL1
1013  CE80- 4C 0C F0           JMP DELETE      DELETE ONE FILE
1014                   *
1015  CE83- 20 A7 F4   DEL2    JSR PREPDO
1016                   *
1017  CE86- A2 00              LDX =0
1018  CE88- 8E AD 03           STX SUCCESS     RESET SUCCESS CNT
1019  CE8B- 20 D5 CD   DEL3    JSR NEXTENT
1020  CE8E- AD 00 03           LDA FILTYP

----------------------------------------------------------------------

EXTENDED DISK OPERATING SYSTEM     23/10/23   R65 ASSEMBLER  PAGE 23

1021  CE91- D0 17              BNE DEL4
1022  CE93- AE AD 03           LDX SUCCESS     ANYTHING DONE?
1023  CE96- D0 0F              BNE DEL6
1024                   *
1025  CE98- 20 27 E0   NOSUCC  JSR PRTINF
1026  CE9B- 0D 0A 4E           BYT $D,$A,'NO MATCH',$D,$8A
1026  CE9E- 4F 20 4D 
1026  CEA1- 41 54 43 
1026  CEA4- 48 0D 8A 
1027                   *
1028  CEA7- 4C 25 F6   DEL6    JMP ENDDO       END MARKFOUND
1029                   *
1030  CEAA- AD 1E 03   DEL4    LDA FILLNK
1031  CEAD- 30 09              BMI DEL5
1032  CEAF- 20 2D E8           JSR PRFLAB
1033  CEB2- 20 F1 F6           JSR DELETE4
1034  CEB5- EE AD 03           INC SUCCESS     COUNT SUCCESS
1035  CEB8- EE 7C 03   DEL5    INC SCYFC
1036  CEBB- AE 7C 03           LDX SCYFC
1037  CEBE- 4C 8B CE           JMP DEL3
1038                   *
1039                   * COPY: COPY FILE(S) TO NEW DRIVE
1040                   *********************************
1041                   *
1042  CEC1- 20 13 CB   COPY    JSR IFNAME
1043  CEC4- 20 15 F0           JSR CLOSAL
1044  CEC7- 20 09 F8           JSR HEXPZE      GET OLD DRIVE
1045  CECA- 8D 93 03           STA OLDDRV
1046  CECD- 20 43 CA           JSR DSKONLY+2
1047  CED0- 20 F2 FC           JSR HARGUM      GET NEW DRIVE
1048  CED3- 8D 94 03           STA NEWDRV
1049  CED6- 20 43 CA           JSR DSKONLY+2
1050  CED9- AD 94 03   COPY0   LDA NEWDRV      DIFFERENT DRIVE?
1051  CEDC- CD 93 03           CMP OLDDRV
1052  CEDF- D0 05              BNE COPY1
1053                   *
1054  CEE1- A9 63              LDA =$63        IDENTICAL DRIVE
1055  CEE3- 85 DB              STA FILERR
1056  CEE5- 60                 RTS
1057                   *
1058  CEE6- A2 10      COPY1   LDX =16
1059  CEE8- BD 20 03   COPYL   LDA FILNM1,X
1060  CEEB- 9D 9C 03           STA FILNM2,X
1061  CEEE- CA                 DEX
1062  CEEF- 10 F7              BPL COPYL
1063                   *
1064  CEF1- A2 00              LDX =0
1065  CEF3- 8E AD 03           STX SUCCESS     RESET SUCCESS CNT
1066  CEF6- 8E 88 03   LOOP    STX OLDENT      LOOP THROUGH FILES
1067  CEF9- AD 93 03           LDA OLDDRV

----------------------------------------------------------------------

EXTENDED DISK OPERATING SYSTEM     23/10/23   R65 ASSEMBLER  PAGE 24

1068  CEFC- 85 DC              STA FILDRV
1069  CEFE- A9 00             LDA =0
1070  CF00- 85 DA              STA FILFLG
1071  CF02- 20 A7 F4           JSR PREPDO
1072  CF05- AE 88 03           LDX OLDENT
1073  CF08- AD 98 03           LDA NAMEFLG
1074  CF0B- D0 06              BNE *+8
1075  CF0D- 20 D2 F4           JSR GETFENT
1076  CF10- 4C 1C CF           JMP LOOP1
1077                   *
1078  CF13- 20 D5 CD           JSR NEXTENT
1079  CF16- AE 7C 03           LDX SCYFC
1080  CF19- 8E 88 03           STX OLDENT
1081                   *
1082  CF1C- AD 00 03   LOOP1   LDA FILTYP
1083  CF1F- D0 0B              BNE NOTEND
1084  CF21- AD AD 03           LDA SUCCESS     ANYTHING DONE?
1085  CF24- D0 03              BNE *+5
1086  CF26- 4C 98 CE           JMP NOSUCC
1087  CF29- 4C 25 F6           JMP ENDDO       COMPLETE
1088                   *
1089  CF2C- AD 1E 03   NOTEND  LDA FILLNK      SKIP DELETED FILES
1090  CF2F- 10 03              BPL *+5
1091  CF31- 4C 80 CF           JMP NEXTF
1092  CF34- A2 10              LDX =16
1093  CF36- BD 01 03   NOTE1   LDA FILNAM,X
1094  CF39- 9D 20 03           STA FILNM1,X
1095  CF3C- CA                 DEX
1096  CF3D- 10 F7              BPL NOTE1
1097                   *
1098  CF3F- 20 2D E8   COPYF   JSR PRFLAB
1099  CF42- EE AD 03           INC SUCCESS
1100  CF45- A9 00              LDA =<COPYBS    PREPARE ADDRESS
1101  CF47- A2 20              LDX =>COPYBS
1102  CF49- 20 4E F5           JSR PREPRW+6    AND POINTERS
1103                   *
1104  CF4C- 38                 SEC
1105  CF4D- A9 BF              LDA =>COPYBE    CHECK SIZE OF COPY
1106  CF4F- E9 20              SBC =>COPYBS    BUFFER
1107  CF51- E5 E5              SBC FILCN1
1108  CF53- B0 05              BCS COPYF1
1109  CF55- A9 64              LDA =$64        FILE TOO LARGE
1110  CF57- 85 DB              STA FILERR
1111  CF59- 60                 RTS
1112                   *
1113  CF5A- 20 6E F7   COPYF1  JSR DRDFIL2
1114  CF5D- AD 94 03           LDA NEWDRV
1115  CF60- 85 DC              STA FILDRV
1116  CF62- A9 60              LDA =$60
1117  CF64- 85 DA              STA FILFLG

----------------------------------------------------------------------

EXTENDED DISK OPERATING SYSTEM     23/10/23   R65 ASSEMBLER  PAGE 25

1118  CF66- AD 11 03           LDA FILCYC
1119  CF69- 8D 30 03           STA FILCY1
1120  CF6C- A9 00              LDA =<COPYBS
1121  CF6E- A2 20              LDX =>COPYBS
1122  CF70- 8D 31 03           STA FILSA1
1123  CF73- 8E 32 03           STX FILSA1+1
1124  CF76- 20 2C EB           JSR WRFILE+24   DO NOT OVERWRITE
1125  CF79- F0 05              BEQ NEXTF       FILTYP,DATE
1126  CF7B- A9 01              LDA =1
1127  CF7D- 85 DB              STA FILERR      WRITE ERROR
1128  CF7F- 60                 RTS
1129                   *
1130  CF80- A2 10      NEXTF   LDX =16
1131  CF82- BD 9C 03   NEXTF1  LDA FILNM2,X    RESTORE FILNM1,FILCY1
1132  CF85- 9D 20 03           STA FILNM1,X
1133  CF88- CA                 DEX
1134  CF89- 10 F7              BPL NEXTF1
1135  CF8B- AE 88 03           LDX OLDENT
1136  CF8E- E8                 INX
1137  CF8F- 20 06 E8           JSR ESCTST
1138  CF92- B0 03              BCS *+5
1139  CF94- 4C F6 CE           JMP LOOP
1140                   *
1141  CF97- AD AD 03           LDA SUCCESS     ANYTHING DONE?
1142  CF9A- D0 03              BNE *+5
1143  CF9C- 4C 98 CE           JMP NOSUCC
1144                   *
1145  CF9F- 4C 25 F6           JMP ENDDO       FINISHED
1146                   *
1147                   *
1148                   * EXPORT: EXPORT A SEQUENTIAL FILE
1149                   **********************************
1150                   *
1151  CFA2- 20 41 CA   EXPORT  JSR DSKONLY
1152  CFA5- 20 2C F6           JSR PREPRD
1153  CFA8- 20 2D E8           JSR PRFLAB
1154                   *
1155  CFAB- A9 01              LDA =1          COMMAND 1: EXPORT
1156  CFAD- 8D 30 14           STA EMUCOM      EXECUTE LINUX CMD
1157  CFB0- 20 25 F6           JSR ENDDO
1158  CFB3- AD 31 14           LDA EMURES      GET RESULT
1159  CFB6- 85 DB              STA FILERR
1160  CFB8- 60                 RTS
1161                   *
1162                   *
1163                   * IMPORT: IMPORT A SEQUENTIAL FILE
1164                   **********************************
1165                   *
1166  CFB9- 20 41 CA   IMPORT  JSR DSKONLY
1167  CFBC- 20 B5 F9           JSR ENDLER

----------------------------------------------------------------------

EXTENDED DISK OPERATING SYSTEM     23/10/23   R65 ASSEMBLER  PAGE 26

1168                   *
1169  CFBF- A2 10      IMPORT1 LDX =16
1170  CFC1- BD 20 03           LDA FILNM1,X
1171  CFC4- 9D 01 03           STA FILNAM,X
1172  CFC7- CA                 DEX
1173  CFC8- 10 F7              BPL *-7
1174                   *
1175  CFCA- A9 02              LDA =2          COMMAND 2: IMPORT
1176  CFCC- 8D 30 14           STA EMUCOM      EXECUTE LINUX CMD
1177  CFCF- AD 31 14           LDA EMURES      GET RESULT
1178  CFD2- D0 05              BNE IMPORTE
1179  CFD4- 20 2D E8           JSR PRFLAB
1180  CFD7- A9 00              LDA =0          NO ERROR
1181  CFD9- 85 DB      IMPORTE STA FILERR
1182  CFDB- 60                 RTS
1183                   *
1184                   * EDIT: EDIT USING LEAFPAD
1185                   **************************
1186                   *
1187  CFDC- 20 A2 CF   EDIT    JSR EXPORT
1188  CFDF- D0 21              BNE EDITR
1189  CFE1- 20 27 E8           JSR TDELAY      ALLOW SCREEN UPDATE
1190  CFE4- 20 EF CF           JSR EDIT0
1191  CFE7- D0 19              BNE EDITR
1192  CFE9- 20 BF CF           JSR IMPORT1
1193  CFEC- D0 14              BNE EDITR
1194  CFEE- 60                 RTS
1195                   *
1196  CFEF- A2 10      EDIT0   LDX =16
1197  CFF1- BD 20 03           LDA FILNM1,X
1198  CFF4- 9D 01 03           STA FILNAM,X
1199  CFF7- CA                 DEX
1200  CFF8- 10 F7              BPL *-7
1201                   *
1202  CFFA- A9 03              LDA =3          COMMAND 3: EDIT
1203  CFFC- 8D 30 14           STA EMUCOM      EXECUTE LINUX CMD
1204  CFFF- AD 31 14          LDA EMURES      GET RESULT
1205  D002- 85 DB      EDITR   STA FILERR
1206  D004- 60                 RTS
1207                   *
1208                   * FLOPPY: CHANGE FLOPPY DISK
1209                   ****************************
1210                   *
1211  D005- 20 41 CA   FLOPPY  JSR DSKONLY
1212  D008- 20 B5 F9           JSR ENDLER
1213                   *
1214  D00B- A2 10              LDX =16
1215  D00D- BD 20 03           LDA FILNM1,X
1216  D010- 9D 01 03           STA FILNAM,X
1217  D013- CA                 DEX

----------------------------------------------------------------------

EXTENDED DISK OPERATING SYSTEM     23/10/23   R65 ASSEMBLER  PAGE 27

1218  D014- 10 F7              BPL *-7
1219                   *
1220  D016- A9 04              LDA =4          COMMAND 4: FLOPPY
1221  D018- 8D 30 14           STA EMUCOM      EXECUTE LINUX CMD
1222  D01B- AD 31 14           LDA EMURES      GET RESULT
1223  D01E- 85 DB              STA FILERR
1224  D020- 60                 RTS
1225                   *
1226                   * NEW: CREATE AN NEW SEQUENTIAL FILE
1227                   ************************************
1228                   *
1229  D021- 20 C0 CD   NEW     JSR NGETNE
1230  D024- 20 F2 FC           JSR HARGUM
1231  D027- 85 DC              STA FILDRV
1232  D029- A9 42      NEW0    LDA ='B'        DEFAULT SUBTYPE
1233  D02B- 8D 12 03           STA FILSTP
1234                   *
1235  D02E- A2 0E              LDX =14         FIND TYPE
1236  D030- BD 20 03   NEW1    LDA FILNM1,X
1237  D033- C9 3A              CMP =':'
1238  D035- F0 05              BEQ NEW2
1239  D037- CA                 DEX
1240  D038- D0 F6              BNE NEW1
1241  D03A- F0 06              BEQ NEW3
1242                   *
1243  D03C- BD 21 03   NEW2    LDA FILNM1+1,X
1244  D03F- 8D 12 03           STA FILSTP      STORE SUBTYPE
1245                   *
1246  D042- A9 20      NEW3    LDA =$20        WRITE
1247  D044- 85 DA              STA FILFLG
1248  D046- A9 01              LDA =1
1249  D048- 8D 37 03           STA MAXSIZ      SIZE 1 SECTOR
1250  D04B- 20 0F F0           JSR OPEN
1251  D04E- F0 01              BEQ NEW4
1252  D050- 60         NEWERR  RTS
1253                   *
1254  D051- 8C 96 03   NEW4    STY NEWFIL      SAVE FILE NO
1255  D054- 20 2D E8           JSR PRFLAB
1256  D057- A9 20              LDA =' '
1257  D059- AE 96 03           LDX NEWFIL
1258  D05C- 20 1B F0           JSR WRITCH      WRITE ONE BLANK
1259  D05F- D0 EF              BNE NEWERR
1260  D061- AE 96 03           LDX NEWFIL
1261  D064- 20 12 F0           JSR CLOSE       CLOSE FILE
1262  D067- 60                 RTS
1263                   *
1264                           TIT GRAPHICS SUBROUTINES
1265                           PAG

----------------------------------------------------------------------

GRAPHICS SUBROUTINES               23/10/23   R65 ASSEMBLER  PAGE 28

1266                   *
1267                   * SUBROUTINES FOR GRAPHICS
1268                   **************************
1269                   *
1270                   * PLOT (GRX,GRY,GRC)
1271                   ********************
1272                   * USER MUST CHECK VFOR VALID VALUES!
1273                   *
1274  D068- AD AE 03   PLOT    LDA GRX
1275  D06B- 4A                 LSR A
1276  D06C- 4A                 LSR A
1277  D06D- 4A                 LSR A
1278  D06E- AA                 TAX             X=GRX/8
1279  D06F- A9 1C              LDA =28
1280  D071- 78                 SEI
1281  D072- 8D E0 14           STA MULTX       MULTX=28
1282  D075- AD AF 03           LDA GRY
1283  D078- 8D E1 14           STA MULTY       MULTY=GRY
1284  D07B- AC E3 14           LDY MULTR+1     Y=HIGH(MULTR)
1285  D07E- 58                 CLI
1286  D07F- 8A                 TXA             A=GRX/8
1287  D080- 18                 CLC
1288  D081- 6D E2 14           ADC MULTR
1289  D084- 90 01              BCC PLOT1
1290  D086- C8                 INY
1291  D087- 85 E0      PLOT1   STA DATA        A,Y=GRX/8+28*GRY
1292  D089- 98                 TYA
1293  D08A- 18                 CLC
1294  D08B- 69 07              ADC =7
1295  D08D- 85 E1              STA DATA+1      DATA=GRX/8+28*GRY+$700
1296                   *
1297  D08F- AD AE 03           LDA GRX
1298  D092- 29 07              AND =7          A=GRX AND 7
1299  D094- A8                 TAY             Y=GRX AND Y
1300  D095- B9 B3 D0           LDA MASKTB,Y    A=MASKTB[GRX AND 7]
1301  D098- A0 00              LDY =0
1302  D09A- AE B0 03           LDX GRC         X=GRC
1303  D09D- F0 0F              BEQ PLOR
1304  D09F- CA                 DEX
1305  D0A0- F0 07              BEQ PLEOR
1306                   *
1307  D0A2- 49 FF      PLAND   EOR =$FF        NOT MASK
1308  D0A4- 31 E0              AND (DATA),Y    A=[DATA] AND NOT MASK
1309  D0A6- 91 E0              STA (DATA),Y
1310  D0A8- 60                 RTS
1311                   *
1312  D0A9- 51 E0      PLEOR   EOR (DATA),Y    A=[DATA] EOR MASK
1313  D0AB- 91 E0              STA (DATA),Y
1314  D0AD- 60                 RTS
1315                   *

----------------------------------------------------------------------

GRAPHICS SUBROUTINES               23/10/23   R65 ASSEMBLER  PAGE 29

1316  D0AE- 11 E0      PLOR    ORA (DATA),Y    A=[DATA] OR MASK
1317  D0B0- 91 E0              STA (DATA),Y
1318  D0B2- 60                 RTS
1319                   *
1320  D0B3- 80 40 20   MASKTB  BYT $80,$40,$20,$10
1320  D0B6- 10 
1321  D0B7- 08 04 02           BYT $08,$04,$02,$01
1321  D0BA- 01 
1322                   *
1323                   *
1324                   * PLOTCH (GRX,GRY,GRC)
1325                   **********************
1326                   * USER MUST CHECK FOR VALID VALUES OF
1327                   * X AND Y
1328                   *
1329  D0BB- A9 08      PLOTCH  LDA =8          8 BYTES OF MAP
1330  D0BD- 8D B5 03           STA GRYCNT
1331  D0C0- A9 00              LDA =0          MEANS 8 BITS IN ROW
1332  D0C2- 8D B9 03           STA GRYLOW
1333  D0C5- AD AF 03           LDA GRY
1334  D0C8- 18                 CLC
1335  D0C9- 69 07              ADC =7
1336  D0CB- 8D AF 03           STA GRY         START WITH TOP
1337  D0CE- AD B0 03           LDA GRC
1338  D0D1- 29 7F              AND =$7F
1339  D0D3- 38                 SEC
1340  D0D4- E9 20              SBC =$20        RETURN IF CTRL CHAR
1341  D0D6- 10 01              BPL PLOTCH1
1342  D0D8- 60                 RTS
1343                   *
1344  D0D9- 38         PLOTCH1 SEC
1345  D0DA- C9 40              CMP =$40        CONVERT TO UPPER CASE
1346  D0DC- 90 02              BCC PLOTCH2
1347  D0DE- E9 20              SBC =$20
1348                   *
1349  D0E0- A2 D4      PLOTCH2 LDX =>FONTTB
1350  D0E2- 86 E3              STX DOSPNT+1    A=CODE NOW $00-$3F
1351  D0E4- 0A                 ASL A
1352  D0E5- 0A                 ASL A
1353  D0E6- 0A                 ASL A
1354  D0E7- 90 02              BCC *+4
1355  D0E9- E6 E3              INC DOSPNT+1
1356  D0EB- 8D B2 03           STA GRINDEX     8 * CODE
1357  D0EE- A2 00              LDX =0
1358  D0F0- 8E B3 03           STX GRCNT       GRCNT COUNTS MAP BYTES
1359  D0F3- 18                 CLC             DOSPNT=FONTTB+8*CODE
1360  D0F4- 69 00              ADC =<FONTTB
1361  D0F6- 85 E2              STA DOSPNT
1362  D0F8- 90 02              BCC PLOTCH3
1363  D0FA- E6 E3              INC DOSPNT+1

----------------------------------------------------------------------

GRAPHICS SUBROUTINES               23/10/23   R65 ASSEMBLER  PAGE 30

1364                   *
1365  D0FC- A9 80      PLOTCH3 LDA =$80
1366  D0FE- 8D B4 03          STA GRMASK
1367  D101- AD AE 03           LDA GRX
1368  D104- 8D B8 03           STA GRXLOW      SAVE GRX FOR NEXT ROW
1369  D107- AC B3 03   PLOTCH4 LDY GRCNT       COUNTS FROM 0 TO GRYCNT-
1370  D10A- AD B4 03           LDA GRMASK
1371  D10D- 31 E2              AND (DOSPNT),Y  GET A CHARACTER BIT MAP
1372  D10F- F0 08              BEQ PLOTCH5
1373  D111- A2 00              LDX =0          WHITE
1374  D113- 8E B0 03           STX GRC
1375  D116- 4C 1E D1           JMP PLOTCH6
1376  D119- A2 02      PLOTCH5 LDX =2          BLACK
1377  D11B- 8E B0 03           STX GRC
1378  D11E- 20 68 D0   PLOTCH6 JSR PLOT        PLOT THE DOT
1379  D121- EE AE 03           INC GRX         INCREMENT X FOR NEXT DOT
1380  D124- AD B4 03           LDA GRMASK
1381  D127- C9 01              CMP =$01        LAST BIT DONE?
1382  D129- F0 15              BEQ PLOTCH8
1383  D12B- 4A                 LSR A           SHIFT MASK
1384  D12C- 8D B4 03           STA GRMASK
1385  D12F- CD B9 03           CMP GRYLOW      ONE ROW DONE?
1386  D132- D0 D3              BNE PLOTCH4     NEXT BIT
1387  D134- AD B8 03   PLOTCH7 LDA GRXLOW      RESTORE STARTING GRX
1388  D137- 8D AE 03           STA GRX
1389  D13A- CE AF 03           DEC GRY
1390  D13D- 4C 07 D1           JMP PLOTCH4
1391                   *
1392  D140- EE B3 03   PLOTCH8 INC GRCNT       NEXT MAP BYTE
1393  D143- AD B3 03           LDA GRCNT
1394  D146- CD B5 03           CMP GRYCNT
1395  D149- F0 0C              BEQ PLOTCH9
1396  D14B- AD B8 03           LDA GRXLOW      RESTORE STARTING GRX
1397  D14E- 8D AE 03           STA GRX
1398  D151- CE AF 03           DEC GRY
1399  D154- 4C FC D0           JMP PLOTCH3
1400                   *
1401  D157- 60         PLOTCH9 RTS             DONE
1402                   *
1403                   * BITMAP (GRX,GRY,GRMAP)
1404                   ************************
1405                   * USER MUST CHECK FOR VALID VALUES OF
1406                   * X AND Y
1407                   *
1408  D158- AD B6 03   BITMAP  LDA GRMAP       EXCHANGE BYTES
1409  D15B- AE B7 03           LDX GRMAP+1
1410  D15E- 8D B7 03           STA GRMAP+1
1411  D161- 8E B6 03           STX GRMAP
1412  D164- AD AF 03           LDA GRY         START ON TOP
1413  D167- 69 03              ADC =3

----------------------------------------------------------------------

GRAPHICS SUBROUTINES               23/10/23   R65 ASSEMBLER  PAGE 31

1414  D169- 8D AF 03           STA GRY
1415  D16C- A9 02              LDA =2          2 BYTES OF MAP
1416  D16E- 8D B5 03           STA GRYCNT
1417  D171- A9 08              LDA =8          MEANS 4 BITS IN ROW
1418  D173- 8D B9 03           STA GRYLOW
1419  D176- A2 00              LDX =0
1420  D178- 8E B3 03           STX GRCNT       COUNTS MAP BYTES
1421  D17B- A9 03              LDA =>GRMAP     SET MAP ADDRESS
1422  D17D- 85 E3              STA DOSPNT+1
1423  D17F- A9 B6              LDA =<GRMAP
1424  D181- 85 E2              STA DOSPNT
1425  D183- 4C FC D0           JMP PLOTCH3
1426                   *
1427                   * DRAWX (GRX,GRY,GRC,GRN)
1428                   *************************
1429                   * USER MUST CHECK FOR VALID VALUES OF
1430                   * X AND Y AND N
1431                   *
1432  D186- 20 68 D0   DRAWX   JSR PLOT        PLOT A DOT
1433  D189- EE AE 03           INC GRX
1434  D18C- CE B1 03           DEC GRN
1435  D18F- D0 F5              BNE DRAWX       KEEP DRAWING
1436  D191- 60                 RTS
1437                   *
1438                   * DRAWY (GRX,GRY,GRC,GRN)
1439                   *************************
1440                   * USER MUST CHECK FOR VALID VALUES OF
1441                   * X AND Y AND N
1442                   *
1443  D192- 20 68 D0   DRAWY   JSR PLOT        PLOT A DOT
1444  D195- EE AF 03           INC GRY
1445  D198- CE B1 03           DEC GRN
1446  D19B- D0 F5              BNE DRAWY       KEEP DRAWING
1447  D19D- 60                 RTS
1448                   *
1449                   * DRAWXY (GRX,GRY,GRC,GRN,XINC,YINC)
1450                   ************************************
1451                   * USER MUST CHECK FOR VALID VALUES
1452                   *
1453  D19E- A9 00      DRAWXY  LDA =0
1454  D1A0- 8D B8 03           STA GRXLOW
1455  D1A3- 8D B9 03           STA GRYLOW
1456  D1A6- 20 68 D0   DRAWXY1 JSR PLOT        PLOT A DOT
1457  D1A9- 18                 CLC             CALCULATE NEXT GRX
1458  D1AA- AD B8 03           LDA GRXLOW
1459  D1AD- 6D B6 03           ADC GRXINC
1460  D1B0- 8D B8 03           STA GRXLOW
1461  D1B3- AD AE 03           LDA GRX
1462  D1B6- 6D B7 03           ADC GRXINC+1
1463  D1B9- 8D AE 03           STA GRX

----------------------------------------------------------------------

GRAPHICS SUBROUTINES               23/10/23   R65 ASSEMBLER  PAGE 32

1464                   *
1465  D1BC- 18                 CLC             CALCULATE NEXT GRY
1466  D1BD- AD B9 03           LDA GRYLOW
1467  D1C0- 6D BA 03           ADC GRYINC
1468  D1C3- 8D B9 03           STA GRYLOW
1469  D1C6- AD AF 03           LDA GRY
1470  D1C9- 6D BB 03           ADC GRYINC+1
1471  D1CC- 8D AF 03           STA GRY
1472                   *
1473  D1CF- CE B1 03           DEC GRN
1474  D1D2- D0 D2              BNE DRAWXY1     KEEP DRAWING
1475  D1D4- 60                 RTS
1476                   *
1477                   *
1478                   * 8x8 BIT CHARACTER TABLE
1479                   *************************
1480                   * FOR CHARACTER DISPLAY IN GRAPHICS MODE
1481                   *
1482                   *
1483  D1D5-                    ORG $D400
1484                   *
1485  D400- 00 00 00   FONTTB  BYT $00,$00,$00
1486  D403- 00 00 00           BYT $00,$00,$00
1487  D406- 00 00              BYT $00,$00
1488  D408- 04 04 04           BYT $04,$04,$04         !
1489  D40B- 04 04 00           BYT $04,$04,$00
1490  D40E- 04 00              BYT $04,$00
1491  D410- 0A 0A 0A           BYT $0A,$0A,$0A         "
1492  D413- 00 00 00           BYT $00,$00,$00
1493  D416- 00 00              BYT $00,$00
1494  D418- 0A 0A 1F           BYT $0A,$0A,$1F         #
1495  D41B- 0A 1F 0A           BYT $0A,$1F,$0A
1496  D41E- 0A 00              BYT $0A,$00
1497  D420- 04 0F 14           BYT $04,$0F,$14         $
1498  D423- 0E 05 1E           BYT $0E,$05,$1E
1499  D426- 04 00              BYT $04,$00
1500  D428- 19 19 02           BYT $19,$19,$02         %
1501  D42B- 04 08 13           BYT $04,$08,$13
1502  D42E- 13 00              BYT $13,$00
1503  D430- 04 0A 0A           BYT $04,$0A,$0A         &
1504  D433- 0C 15 12           BYT $0C,$15,$12
1505  D436- 0D 00              BYT $0D,$00
1506  D438- 04 08 10           BYT $04,$08,$10         '
1507  D43B- 00 00 00           BYT $00,$00,$00
1508  D43E- 00 00              BYT $00,$00
1509  D440- 02 04 08           BYT $02,$04,$08         (
1510  D443- 08 08 04           BYT $08,$08,$04
1511  D446- 02 00              BYT $02,$00
1512  D448- 08 04 02           BYT $08,$04,$02         )
1513  D44B- 02 02 04           BYT $02,$02,$04

----------------------------------------------------------------------

GRAPHICS SUBROUTINES               23/10/23   R65 ASSEMBLER  PAGE 33

1514  D44E- 08 00              BYT $08,$00
1515  D450- 00 04 15           BYT $00,$04,$15         *
1516  D453- 0E 15 04           BYT $0E,$15,$04
1517  D456- 00 00              BYT $00,$00
1518  D458- 00 04 04           BYT $00,$04,$04         +
1519  D45B- 1F 04 04           BYT $1F,$04,$04
1520  D45E- 00 00              BYT $00,$00
1521  D460- 00 00 00           BYT $00,$00,$00         ,
1522  D463- 00 00 08           BYT $00,$00,$08
1523  D466- 08 10              BYT $08,$10
1524  D468- 00 00 00           BYT $00,$00,$00         -
1525  D46B- 1F 00 00           BYT $1F,$00,$00
1526  D46E- 00 00              BYT $00,$00
1527  D470- 00 00 00           BYT $00,$00,$00         .
1528  D473- 00 00 00           BYT $00,$00,$00
1529  D476- 10 00              BYT $10,$00
1530  D478- 01 01 02           BYT $01,$01,$02         /
1531  D47B- 04 08 10           BYT $04,$08,$10
1532  D47E- 10 00              BYT $10,$00
1533  D480- 0E 11 13           BYT $0E,$11,$13         0
1534  D483- 15 19 11           BYT $15,$19,$11
1535  D486- 0E 00              BYT $0E,$00
1536  D488- 04 0C 14           BYT $04,$0C,$14         1
1537  D48B- 04 04 04           BYT $04,$04,$04
1538  D48E- 0E 00              BYT $0E,$00
1539  D490- 0E 11 01           BYT $0E,$11,$01         2
1540  D493- 02 0C 10           BYT $02,$0C,$10
1541  D496- 1F 00              BYT $1F,$00
1542  D498- 1E 01 02           BYT $1E,$01,$02         3
1543  D49B- 04 02 01           BYT $04,$02,$01
1544  D49E- 1E 00              BYT $1E,$00
1545  D4A0- 02 06 0A           BYT $02,$06,$0A         4
1546  D4A3- 12 1F 02           BYT $12,$1F,$02
1547  D4A6- 02 00              BYT $02,$00
1548  D4A8- 1F 10 1E           BYT $1F,$10,$1E         5
1549  D4AB- 01 01 11           BYT $01,$01,$11
1550  D4AE- 0E 00              BYT $0E,$00
1551  D4B0- 07 08 10           BYT $07,$08,$10         6
1552  D4B3- 1E 11 11           BYT $1E,$11,$11
1553  D4B6- 0E 00              BYT $0E,$00
1554  D4B8- 1F 01 02           BYT $1F,$01,$02         7
1555  D4BB- 04 08 08           BYT $04,$08,$08
1556  D4BE- 08 00              BYT $08,$00
1557  D4C0- 0E 11 11           BYT $0E,$11,$11         8
1558  D4C3- 0E 11 11           BYT $0E,$11,$11
1559  D4C6- 0E 00              BYT $0E,$00
1560  D4C8- 0E 11 11           BYT $0E,$11,$11         9
1561  D4CB- 0F 01 02           BYT $0F,$01,$02
1562  D4CE- 1C 00              BYT $1C,$00
1563  D4D0- 00 00 00           BYT $00,$00,$00         10

----------------------------------------------------------------------

GRAPHICS SUBROUTINES               23/10/23   R65 ASSEMBLER  PAGE 34

1564  D4D3- 04 00 00           BYT $04,$00,$00
1565  D4D6- 04 00              BYT $04,$00
1566  D4D8- 00 00 00           BYT $00,$00,$00         :
1567  D4DB- 08 00 08           BYT $08,$00,$08
1568  D4DE- 08 10              BYT $08,$10
1569  D4E0- 03 04 08           BYT $03,$04,$08         <
1570  D4E3- 10 08 04           BYT $10,$08,$04
1571  D4E6- 03 00              BYT $03,$00
1572  D4E8- 00 00 1F           BYT $00,$00,$1F         =
1573  D4EB- 00 1F 00           BYT $00,$1F,$00
1574  D4EE- 00 00              BYT $00,$00
1575  D4F0- 18 04 02           BYT $18,$04,$02         >
1576  D4F3- 01 02 04           BYT $01,$02,$04
1577  D4F6- 18 00              BYT $18,$00
1578  D4F8- 1E 11 01           BYT $1E,$11,$01         ?
1579  D4FB- 02 04 00           BYT $02,$04,$00
1580  D4FE- 04 00             BYT $04,$00
1581  D500- 0E 11 17           BYT $0E,$11,$17         @
1582  D503- 15 17 10           BYT $15,$17,$10
1583  D506- 0E 00              BYT $0E,$00
1584  D508- 0E 11 11           BYT $0E,$11,$11         A
1585  D50B- 1F 11 11           BYT $1F,$11,$11
1586  D50E- 11 00              BYT $11,$00
1587  D510- 1E 11 11           BYT $1E,$11,$11         B
1588  D513- 1E 11 11           BYT $1E,$11,$11
1589  D516- 1E 00              BYT $1E,$00
1590  D518- 0E 11 10           BYT $0E,$11,$10         C
1591  D51B- 10 10 11           BYT $10,$10,$11
1592  D51E- 0E 00              BYT $0E,$00
1593  D520- 1C 12 11           BYT $1C,$12,$11         D
1594  D523- 11 11 12           BYT $11,$11,$12
1595  D526- 1C 00              BYT $1C,$00
1596  D528- 1F 10 10           BYT $1F,$10,$10         E
1597  D52B- 1E 10 10           BYT $1E,$10,$10
1598  D52E- 1F 00              BYT $1F,$00
1599  D530- 1F 10 10           BYT $1F,$10,$10         F
1600  D533- 1E 10 10           BYT $1E,$10,$10
1601  D536- 10 00              BYT $10,$00
1602  D538- 0E 11 10           BYT $0E,$11,$10         G
1603  D53B- 13 11 11           BYT $13,$11,$11
1604  D53E- 0F 00              BYT $0F,$00
1605  D540- 11 11 11           BYT $11,$11,$11         H
1606  D543- 1F 11 11           BYT $1F,$11,$11
1607  D546- 11 00              BYT $11,$00
1608  D548- 0E 04 04           BYT $0E,$04,$04         I
1609  D54B- 04 04 04           BYT $04,$04,$04
1610  D54E- 0E 00              BYT $0E,$00
1611  D550- 07 02 02           BYT $07,$02,$02         J
1612  D553- 02 12 12           BYT $02,$12,$12
1613  D556- 0C 00              BYT $0C,$00

----------------------------------------------------------------------

GRAPHICS SUBROUTINES               23/10/23   R65 ASSEMBLER  PAGE 35

1614  D558- 11 12 14           BYT $11,$12,$14         K
1615  D55B- 18 14 12           BYT $18,$14,$12
1616  D55E- 11 00              BYT $11,$00
1617  D560- 10 10 10           BYT $10,$10,$10         L
1618  D563- 10 10 10           BYT $10,$10,$10
1619  D566- 1F 00              BYT $1F,$00
1620  D568- 11 1B 15           BYT $11,$1B,$15         M
1621  D56B- 15 11 11           BYT $15,$11,$11
1622  D56E- 11 00              BYT $11,$00
1623  D570- 11 19 19           BYT $11,$19,$19         N
1624  D573- 15 13 13           BYT $15,$13,$13
1625  D576- 11 00              BYT $11,$00
1626  D578- 0E 11 11           BYT $0E,$11,$11         O
1627  D57B- 11 11 11           BYT $11,$11,$11
1628  D57E- 0E 00              BYT $0E,$00
1629  D580- 1E 11 11           BYT $1E,$11,$11         P
1630  D583- 1E 10 10           BYT $1E,$10,$10
1631  D586- 10 00              BYT $10,$00
1632  D588- 0E 11 11           BYT $0E,$11,$11         Q
1633  D58B- 11 15 13           BYT $11,$15,$13
1634  D58E- 0D 00              BYT $0D,$00
1635  D590- 1E 11 11           BYT $1E,$11,$11         R
1636  D593- 1E 14 12           BYT $1E,$14,$12
1637  D596- 11 00              BYT $11,$00
1638  D598- 0F 10 10           BYT $0F,$10,$10         S
1639  D59B- 0E 01 01           BYT $0E,$01,$01
1640  D59E- 1E 00              BYT $1E,$00
1641  D5A0- 1F 04 04           BYT $1F,$04,$04         T
1642  D5A3- 04 04 04           BYT $04,$04,$04
1643  D5A6- 04 00              BYT $04,$00
1644  D5A8- 11 11 11           BYT $11,$11,$11         U
1645  D5AB- 11 11 11           BYT $11,$11,$11
1646  D5AE- 0E 00              BYT $0E,$00
1647  D5B0- 11 11 11           BYT $11,$11,$11         V
1648  D5B3- 0A 0A 04           BYT $0A,$0A,$04
1649  D5B6- 04 00              BYT $04,$00
1650  D5B8- 11 11 11           BYT $11,$11,$11         W
1651  D5BB- 15 15 1B           BYT $15,$15,$1B
1652  D5BE- 11 00              BYT $11,$00
1653  D5C0- 11 11 0A           BYT $11,$11,$0A         X
1654  D5C3- 04 0A 11           BYT $04,$0A,$11
1655  D5C6- 11 00              BYT $11,$00
1656  D5C8- 11 11 11           BYT $11,$11,$11         Y
1657  D5CB- 0E 04 04           BYT $0E,$04,$04
1658  D5CE- 04 00              BYT $04,$00
1659  D5D0- 1F 01 02           BYT $1F,$01,$02         Z
1660  D5D3- 04 08 10           BYT $04,$08,$10
1661  D5D6- 1F 00              BYT $1F,$00
1662  D5D8- 1C 10 10           BYT $1C,$10,$10         [
1663  D5DB- 10 10 10           BYT $10,$10,$10

----------------------------------------------------------------------

GRAPHICS SUBROUTINES               23/10/23   R65 ASSEMBLER  PAGE 36

1664  D5DE- 1C 00              BYT $1C,$00
1665  D5E0- FF FF FF           BYT $FF,$FF,$FF
1666  D5E3- FF FF FF           BYT $FF,$FF,$FF
1667  D5E6- FF FF              BYT $FF,$FF
1668  D5E8- 07 01 01           BYT $07,$01,$01         ]
1669  D5EB- 01 01 01           BYT $01,$01,$01
1670  D5EE- 07 00              BYT $07,$00
1671  D5F0- 04 0E 15           BYT $04,$0E,$15         ^
1672  D5F3- 04 04 04           BYT $04,$04,$04
1673  D5F6- 04 00              BYT $04,$00
1674  D5F8- 00 00 00           BYT $00,$00,$00         _
1675  D5FB- 00 00 00           BYT $00,$00,$00
1676  D5FE- 00 1F             BYT $00,$1F
1677                   *
1678                           TIT EXTENDED DISK OPERATING SYSTEM
1679                   *
1680                   * DISK AND EXDOS ARE USING BUFFER AREA
1681                   * AT $D600 - $DFFF. DO NOT USE OTHERWISE
1682                   *
1683  D600-                    END
LABELS=0139
ERRORS=00
RECORDS=6B
