----------------------------------------------------------------------

EXTENDED DISK OPERATING SYSTEM     21/10/23   R65 ASSEMBLER  PAGE 01

0001                   *
0002                   **************************************
0003                   * R65 EXTENDED DISK OPERATING SYSTEM *
0004                   **************************************
0005                   *
0006                   * BASED ON VERSION 3.2 21/08/82
0007                   * RRICHARZ RBAUMANN 1978-1982
0008                   * VERSION 4.6 2018-2023
0009                   *   MODIFIED FOR R65 EMULATOR
0010                   *   AND LARGER DISK SIZE
0011                   *   BY RRICHARZ
0012                   *
0013                   *
0014                   * NEW COMMANDS FOR EMULATED SYSTEM:
0015                   *   EXPORT FILNAM.CY,DRIVE
0016                   *               EXPORT SEQUENTIAL FILE
0017                   *   IMPORT FILNAM.CY,DRIVE
0018                   *               IMPORT SEQUENTIAL FILE
0019                   *   EDIT FILNAM.CY,DRIVE
0020                   *               EDIT A SEQUENTIAL FILE
0021                   *               USING LEAFPAD
0022                   *   FLOPPY FILNAM,DRIVE
0023                   *               CHANGE FLOPPY DISK
0024                   *   NEW FILNAM.CY,DRIVE
0025                   *               NEW SEQUENTIAL FILE
0026                   *
0027                   * NEW GRAPHICS SUBROUTINES
0028                   *   PLOT(X,Y,MODE)      PLOT A DOT
0029                   *   PLOTCH(X,Y,CHR)     PLOT A 8x8 CHAR
0030                   *   BITMAP(X,Y,MAP)     PLOT A 4x4 MAP
0031                   *   DRAWX(X,Y,MODE,N)   DRAW N POINTS
0032                   *   DRAWY(X,Y,MODE,N)   DRAW N POINTS
0033                   *   DRAWXY(X,Y,MODE,N,XONC,YINC)
0034                   *
0035                   * WITH FAST PACK ROUTINE
0036                   * USES SCRATCH MEMORY $D700-$DEFF
0037                   * UPDATED FOR DUAL DISK DRIVE SYSTEMS
0038                   * WITH WILD CARD DIRECTORY
0039                   *
0040                   *   ERROR 61: WILD CARD NOT ALLOWED
0041                   *   ERROR 62: ONLY FOR DISK, NOT TAPE
0042                   *   ERROR 63: ILLEGAL COPY
0043                   *   ERROR 64: FILE TOO LARGE
0044                   *   ERROR 65: WRITE ERROR
0045                   *   ERROR 66: IMPORT ERROR
0046                   *   ERROR 67: UNKNOWN EMU COMMAND
0047                   *   ERROR 68: UNABLE TO RUN LEAFPAD
0048                   *
0049                   *
0050                   PSTART  EQU $C800       START OF PROGRAM

----------------------------------------------------------------------

EXTENDED DISK OPERATING SYSTEM     21/10/23   R65 ASSEMBLER  PAGE 02

0051                   SPERTR  EQU 16          SECTORS PER TRACK
0052                   NTRACK  EQU 160         TRACKS
0053                   NRSEQ   EQU 2560        TOTAL SECTORS (16*160)
0054                   *
0055                           TIT EXTENDED DISK OPERATING SYSTEM
0056                   *
0057                   *
0058                   * PAGE ZERO VARIABLES
0059                   *********************
0060                   *
0061  0000-                    ORG $D8
0062                   *
0063  00D8-            COPYBN  BSS 2   POINTER FOR COPY SEQF
0064                   *
0065  00DA-            FILFLG  BSS 1   FILE ENTRY FLAGS
0066                   *               BIT 7=1: PROTECTED
0067                   *               BIT 6=1: NO PRINTED OUTPUT
0068                   *               BIT 5: DIRECTION (1=WRITE)
0069                   *
0070  00DB-            FILERR  BSS 1   FILE HANDLING ERROR
0071  00DC-            FILDRV  BSS 1   TAPE OR DISK DRIVE
0072                   *
0073                   * TAPE TEMPORARIES
0074                   *
0075  00DD-            TRECID  BSS 2   RECORD ID OF FIRST RECORD
0076  00DF-            TRECNO  BSS 1   RECORD NUMBER
0077  00E0-            TRECST  BSS 2   START ADDRESS POINTER
0078  00E2-            TRECSI  BSS 1   RECORD SIZE
0079                   *
0080                   * DISK TEMPORARIES
0081                   *
0082  00E3-                    ORG $DD
0083  00DD-            TRACK   BSS 1   CURRENT TRACK
0084  00DE-            SECTOR  BSS 1   CURRENT SECTOR
0085  00DF-            RESSAV  BSS 1   CURRENT FDC RESULT
0086  00E0-            DATA    BSS 2   DATA POINTER
0087  00E2-            DOSPNT  BSS 2   SECOND POINTER
0088  00E4-            FILCNT  BSS 1   DISK FILE POINTER
0089  00E5-            FILCN1  BSS 1
0090                   *
0091                   VIDPNT  EQU $E9 VIDEO MEMORY POINTER
0092                   POINT   EQU $FA USED AS SEQ FILE PNT
0093                   KCHAR   EQU $FE CHAR SAVE FOR WRITCH
0094                   *
0095                   * PAGE 3 DATA AREA
0096                   ******************
0097                   *
0098  00E6-                    ORG $300
0099                   *
0100  0300-            FILTYP  BSS 1   TYPE OF ACTIVE FILE

----------------------------------------------------------------------

EXTENDED DISK OPERATING SYSTEM     21/10/23   R65 ASSEMBLER  PAGE 03

0101  0301-            FILNAM  BSS 16  FILE NAME
0102  0311-            FILCYC  BSS 1   CYCLUS NUMBER
0103  0312-            FILSTP  BSS 1   FILE SUBTYPE
0104  0313-            FILLOC  BSS 2   LOCATION OR SECTOR
0105  0315-            FILSIZ  BSS 2   FILE SIZE
0106  0317-            FILDAT  BSS 3   FILE GENERATION DATE
0107  031A-            FILSA   BSS 2   START ADDRESS
0108  031C-            FILEA   BSS 2   END ADDRESS
0109  031E-            FILLNK  BSS 2   FILE LINK
0110                   *
0111  0320-            FILNM1  BSS 16
0112  0330-            FILCY1  BSS 1
0113  0331-            FILSA1  BSS 2
0114  0333-            SAVRST  BSS 2
0115                   *
0116  0335-            CURSEQ  BSS 1   CURRENT SEQUENTIAL FILE
0117  0336-            MAXSEQ  BSS 1   MAX NO OF SEQ FILE
0118  0337-            MAXSIZ  BSS 1   MAX SIZE
0119  0338-            FILBU1  BSS 1   START OF BUFFERS
0120                   *
0121                   * TABLE FOR 8 OPEN SEQUENTIAL FILES
0122                   *
0123  0339-            FIDRTB  BSS 8   BIT 7 1=WRITE, 0=READ
0124                   *               BIT 5 1=FILE IS OPEN
0125  0341-            FIDVTB  BSS 8   DRIVE NUMBER
0126  0349-            FIBPTB  BSS 8   BUFFER POINTER LOW BYTE
0127  0351-            FIRCTB  BSS 8   NO OF LAST RECORD
0128  0359-            FIMAXT  BSS 8   MAXIMAL NO OF RECORDS
0129  0361-            FITEMP  BSS 24  TAPE: RECORD ID SAVE (2)
0130                   *               DISK: FIRST SECTOR (2)
0131                   *               AND DIRECTORY ENTRY NO
0132                   *               (1)
0133  0379-            EXITPN  BSS 1   DISK STACK POINTER SAVE
0134  037A-            BUFSEC  BSS 1   CURRENT SECTOR
0135  037B-            SCY     BSS 1   FOUND CYCLUS
0136  037C-            SCYFC   BSS 1   FILE ENTRY OF CY
0137  037D-            SLAST   BSS 1   END OF DIRECTORY MARK
0138  037E-            DISFLG  BSS 1   DISK FLAG REGISTER
0139                   *               BIT 7 DRIVE 0 INITIALIZED
0140                   *               BIT 6 DRIVE 1 INITIALIZED
0141  037F-            DISCNT  BSS 1   SPECIAL DISK COUNTER
0142                   *
0143  0380-                    ORG $388
0144                   *
0145  0388-            OLDENT  BSS 1
0146  0389-            OLDREC  BSS 2
0147  038B-            NEWENT  BSS 1
0148  038C-            NEWREC  BSS 2
0149  038E-            COUNTER BSS 1
0150  038F-            COUNT2  BSS 1

----------------------------------------------------------------------

EXTENDED DISK OPERATING SYSTEM     21/10/23   R65 ASSEMBLER  PAGE 04

0151                   *
0152  0390-            PFILENO BSS 1
0153  0391-            PAGING  BSS 1
0154  0392-            LINE    BSS 1
0155  0393-            OLDDRV  BSS 1
0156  0394-            NEWDRV  BSS 1
0157  0395-            OLDFIL  BSS 1
0158  0396-            NEWFIL  BSS 1
0159  0397-            FULLFLG BSS 1
0160  0398-            NAMEFLG BSS 1
0161  0399-            DIRCNT  BSS 1
0162  039A-            DELCNT  BSS 2
0163  039C-            FILNM2  BSS 17
0164  03AD-            SUCCESS BSS 1   COUNT SUCCESS (COPY,DELETE)
0165  03AE-            GRX     BSS 1   X FOR GRAHICSS
0166  03AF-            GRY     BSS 1   Y FOR GRAPHICS
0167  03B0-            GRC     BSS 1   DRAW MODE FOR GRAPHICS
0168  03B1-            GRN     BSS 1   NUMBER OF POINTS TO DRAW
0169  03B2-            GRINDEX BSS 1   PLOT TEMPORARY
0170  03B3-            GRCNT   BSS 1   PLOT TEMPORARY
0171  03B4-            GRMASK  BSS 1   PLOT TEMPORARY
0172  03B5-            GRYCNT  BSS 1   PLOT TEMPORARY
0173  03B6-            GRMAP   BSS 2   PLOT MAP OR X INCREMENT
0174                   GRXINC  EQU GRMAP
0175  03B8-            GRXLOW  BSS 1
0176  03B9-            GRYLOW  BSS 1
0177  03BA-            GRYINC  BSS 2   PLOT Y INCREMENT
0178                   *
0179                   *
0180                   * BUFFERS
0181                   *********
0182                   *
0183  03BC-                    ORG $D600
0184  D600-            DIRBUF  BSS 256         DISK DIRECTORY BUFFER
0185  D700-            FILBUF  BSS $800        FILE BUFFER, 8
0186                   *                       OPEN FILES ALLOWED
0187                   *                       DEFAULT, CAN BE REMOVED
0188                   COPYBS  EQU $2000       COPY BUFFER
0189                   COPYBE  EQU $BFFF       END OF COPY BUFFER
0190                   *
0191                   *
0192                   * PAGE 17 DATA AREA
0193                   *******************
0194                   *
0195  DF00-                    ORG $1780
0196                   *
0197  1780-            VFLAG   BSS 1
0198  1781-            SFLAG   BSS 1
0199                   VMON    EQU $17D5
0200                   *

----------------------------------------------------------------------

EXTENDED DISK OPERATING SYSTEM     21/10/23   R65 ASSEMBLER  PAGE 05

0201                   * INTERFACE ADDRESSES
0202                   *********************
0203                   *
0204                   PORTB1  EQU $1400       MEMORY WRITE DISABLE
0205                   EMUCOM  EQU $1430       EMULATOR COMMAND REG
0206                   EMURES  EQU $1431       EMULATOR RESULT REG
0207                   FDCOM   EQU $14C0       COMMAND REGISTER
0208                   FDSTAT  EQU $14C0       STATUS REGISTER
0209                   FDPARA  EQU $14C1       PARAMETER REGISTER
0210                   FDRES   EQU $14C1       RESULT REGISTER
0211                   FDTSTM  EQU $14C2       TEST MODE REGISTER
0212                   FDDAT   EQU $14C4       DACK ADDRESS
0213                   RSADAT  EQU $14C8       RS232 DATA REG
0214                   RSASTA  EQU $14CA       RS232 STATUS REG
0215                   RSACOM  EQU $14CA       RS232 COMMAND REG
0216                   MULTX   EQU $14E0       MULTIPLIER X-REGISTER
0217                   MULTY   EQU $14E1       MULTIPLIER Y-REGISTER
0218                   MULTR   EQU $14E2       MULTIPLIER DATA REGISTER
0219                   USPBD   EQU $1702       LED DISPLAY
0220                   PRIOTB  EQU $179C       PRIORITY IRQ TABLE
0221                   *
0222                   *
0223                   * VECTORS TO EPROMS OF OS
0224                   *************************
0225                   *
0226                   GETCHR  EQU $E003       GET CHAR
0227                   GETLIN  EQU $E006       GET LINE
0228                   PRTCHR  EQU $E009       PRINT A CHAR TO CRT
0229                   ENDLIN  EQU $E024       TEST END OF LINE
0230                   PRTINF  EQU $E027       PRINT A STRING
0231                   PRTHEX  EQU $E02A       PRINT HEX CHAR
0232                   PRTBYT  EQU $E02D       PRINT BYTE IN A
0233                   PRTAX   EQU $E030       PRINT TWO BYTES
0234                   RSIRQ   EQU $E92D       *** RS 232 IRQ, NORMAL
0235                   ESCTST  EQU $E806       TEST ESCAPE FLAG
0236                   TDIR    EQU $E809       TAPE DIRECTORY
0237                   DWRFIL  EQU $F000       WRITE DISK FILE
0238                   TPWAIT  EQU $E80F       READY MESSAGE FOR TAPE
0239                   TRDREC  EQU $E812       LOAD A RECORD FROM TAPE
0240                   TWRREC  EQU $E818       WRITE A RECORD TO TAPE
0241                   SETID   EQU $E82A       SET TAPE ID
0242                   SETFID  EQU $E81E       SET DATE TO FILE LABEL
0243                   TAPEON  EQU $E821       START TAPE DRIVE
0244                   TAPEOF  EQU $E824       STOP TAPE DRIVE
0245                   TDELAY  EQU $E827       WAIT 1 SEC
0246                   PRFLAB  EQU $E82D       PRINT FILE LABEL
0247                   TDRLBR  EQU $E830       READ LABEL RECORD
0248                   WRFILE  EQU $EB14       *** SPECIAL ENTRY
0249                   DELETE  EQU $F00C       DELETE ONE FILE
0250                   OPEN    EQU $F00F       OPENS EQUENTIAL FILE

----------------------------------------------------------------------

EXTENDED DISK OPERATING SYSTEM     21/10/23   R65 ASSEMBLER  PAGE 06

0251                   CLOSE   EQU $F012       CLOSE SEQUENTIAL FILE
0252                   CLOSAL  EQU $F015       CLOSE ALL FILES
0253                   READCH  EQU $F018       READ ONE CHAR FROM FILE
0254                   WRITCH  EQU $F01B       WRITE ONE CHAR TO FILE
0255                   DRIVE   EQU $F364       *** COMPUTE DRIVE
0256                   SEEK    EQU $F36D       *** SEEK TRACK
0257                   WRCOMM  EQU $F3A4       *** WRITE COMMAND
0258                   WRPARA  EQU $F3AF       *** WRITE PARAMETER
0259                   RESULT  EQU $F3BC       *** GET RESULT
0260                   DATREAD EQU $F3F6       *** READ DATA
0261                   DATWRIT EQU $F3E1       *** WRITE DATA
0262                   WRITE   EQU $F425       *** WRITE RECORD
0263                   VERIFY  EQU $F44C       *** VERIFY RECORD
0264                   READ    EQU $F457       *** READRECORD
0265                   TRACK0  EQU $F4A0       *** SEEK TO TRACK 0
0266                   PREPDO  EQU $F4A7       *** PREPARE DISK OP
0267                   PREPDO1 EQU $F4CC       *** PREPARE DISK OP
0268                   GETFENT EQU $F4D2       *** GET FILE ENTRY
0269                   GETFREC EQU $F4ED       *** GET ENTRY RECORD
0270                   READDS  EQU $F502       *** READ DIR SECTOR
0271                   WRITDS  EQU $F52A       *** WRITE DIR SECTOR
0272                   PREPRW  EQU $F548       *** PREPARE WRITE
0273                   PREPRW1 EQU $F55E       *** PREPARE WRITE
0274                   PUTFENT EQU $F581       *** PUT FILE ENTRY
0275                   DISCERR EQU $F5F4       *** DISK ERROR
0276                   DISCER1 EQU $F5FD       *** DISK ERROR
0277                   ENDDO   EQU $F625       *** END DISK OPERATION
0278                   PREPRD  EQU $F62C       *** PREPARE READ
0279                   PREPWRA EQU $F651       *** PREPARE WRITE
0280                   DDIR2   EQU $F6B4       *** DISK DIRECTORY
0281                   DELETE4 EQU $F6F1       *** DELETE THIS ENTRY
0282                   DRDFIL2 EQU $F76E       *** READ FILE, WITHOUT
0283                   HEXPZE  EQU $F809       HEX EPRESSION, DEF=0
0284                   GETNAM  EQU $F815       GET FILE NAME
0285                   ENDLER  EQU $F9B5       *** ERROR, IF NOT EOL
0286                   ERROR   EQU $F932       *** ERROR
0287                   TEST    EQU $F94D       *** TEST STRING
0288                   INTCOM  EQU $FA06       *** INTERPRET MON COMM
0289                   BFLOAD0 EQU $FCCA       *** LOAD BLOCK FILE
0290                   BFSTOR0 EQU $FD60       *** STORE BLOCK FILE
0291                   HARGUM  EQU $FCF2       *** GET HEX ARGUMENT
0292                   *
0293                   *
0294                           PAG

----------------------------------------------------------------------

EXTENDED DISK OPERATING SYSTEM     21/10/23   R65 ASSEMBLER  PAGE 07

0295                   *
0296  1782-                    ORG PSTART
0297                   *
0298                   * COLD START ENTRY POINT
0299                   *
0300  C800- 4C 2D C8           JMP START
0301                   *
0302                   * VECTOR TABLE FOR CALLING ROUTINES
0303                   *
0304  C803- 4C 52 C8   FGETCOM JMP FGETCM0     GO TO EXDOS
0305  C806- 4C 44 CB           JMP FDIR0       PRINT DIRECTORY
0306  C809- 4C 8A CC           JMP PACK0       PACK DISK
0307  C80C- 4C 79 CE           JMP DELETE1     DELETE FILE(S)
0308  C80F- 4C E4 CF           JMP EDIT        EDIT FILE
0309  C812- 4C 31 D0           JMP NEW0        CREATE NEW FILE
0310  C815- 4C 70 D0           JMP PLOT        PLOT GRAPHICS DOT
0311  C818- 4C C3 D0           JMP PLOTCH      PLOT CHARACTER
0312  C81B- 4C 60 D1           JMP BITMAP      PLOT 4x4 BITS
0313  C81E- 4C 8E D1           JMP DRAWX       DRAW LINE IN X DIR
0314  C821- 4C 9A D1           JMP DRAWY       DRAW LINE IN Y DIR
0315  C824- 4C A6 D1           JMP DRAWXY      DRAW LINE IN BOTH DIR
0316  C827- 4C 0D D0           JMP FLOPPY      CHANGE FLOPPY
0317  C82A- 4C A7 CF           JMP EXPORT      EXPORT FILE TO HOST
0318                   *
0319  C82D- 78         START   SEI
0320  C82E- A9 03              LDA =<FGETCOM
0321  C830- A2 C8              LDX =>FGETCOM
0322  C832- 8D D5 17           STA VMON
0323  C835- 8E D6 17           STX VMON+1
0324  C838- 20 27 E0           JSR PRTINF
0325  C83B- 52 36 35           BYT 'R65 EXDOS VERSION 4.6',$A0
0325  C83E- 20 45 58 
0325  C841- 44 4F 53 
0325  C844- 20 56 45 
0325  C847- 52 53 49 
0325  C84A- 4F 4E 20 
0325  C84D- 34 2E 36 
0325  C850- A0 
0326  C851- 58                 CLI
0327  C852- 20 27 E0   FGETCM0 JSR PRTINF      MAIN LOOP
0328  C855- 0D 0A 45           BYT $D,$A,'E*'+128
0328  C858- AA 
0329  C859- 20 06 E0           JSR GETLIN
0330  C85C- 20 62 C8           JSR FINTCOM
0331  C85F- 4C 03 C8           JMP FGETCOM
0332                   *
0333  C862- 90 01      FINTCOM BCC *+3         RTS, IF ESC
0334  C864- 60                 RTS
0335  C865- 20 24 E0           JSR ENDLIN      OR EMPTY LINE
0336  C868- F0 FA              BEQ *-4

----------------------------------------------------------------------

EXTENDED DISK OPERATING SYSTEM     21/10/23   R65 ASSEMBLER  PAGE 08

0337                   *
0338  C86A- 20 06 E8           JSR ESCTST      CLEAR ESCAPE FLAG
0339                   *
0340  C86D- 20 4D F9           JSR TEST
0341  C870- 44 46 4F           BYT 'DFORMAT'+128
0341  C873- 52 4D 41 
0341  C876- D4 
0342  C877- B0 11              BCS FINTC1
0343                   *
0344  C879- 20 C5 CD           JSR NGETNE
0345  C87C- 20 F2 FC           JSR HARGUM      *** DFORMAT ***
0346  C87F- 85 DC              STA FILDRV      (DISKNAME,FILDRV)
0347  C881- 20 B5 F9           JSR ENDLER
0348  C884- 20 C3 C9           JSR INITDIR
0349  C887- D0 6D              BNE DERROR
0350  C889- 60                 RTS
0351                   *
0352  C88A- 20 4D F9   FINTC1  JSR TEST
0353  C88D- 45 58 50           BYT 'EXPORT'+128
0353  C890- 4F 52 D4 
0354  C893- B0 0E              BCS FINTC2
0355                   *
0356  C895- 20 C5 CD           JSR NGETNE      *** EXPORT ***
0357  C898- 20 F2 FC           JSR HARGUM      (FILNAM.CY,DRIVE)
0358  C89B- 85 DC              STA FILDRV
0359  C89D- 20 A7 CF           JSR EXPORT
0360  C8A0- D0 54              BNE DERROR
0361  C8A2- 60                 RTS
0362                   *
0363  C8A3- 20 4D F9   FINTC2  JSR TEST
0364  C8A6- 49 4D 50           BYT 'IMPORT'+128
0364  C8A9- 4F 52 D4 
0365  C8AC- B0 0E              BCS FINTC3
0366                   *
0367  C8AE- 20 C5 CD           JSR NGETNE      *** IMPORT ***
0368  C8B1- 20 F2 FC           JSR HARGUM      (FILNAM.CY,DRIVE)
0369  C8B4- 85 DC              STA FILDRV
0370  C8B6- 20 C1 CF           JSR IMPORT
0371  C8B9- D0 3B              BNE DERROR
0372  C8BB- 60                 RTS
0373                   *
0374  C8BC- 20 4D F9   FINTC3  JSR TEST
0375  C8BF- 45 44 49           BYT 'EDIT'+128
0375  C8C2- D4 
0376  C8C3- B0 0E              BCS FINTC4
0377                   *
0378  C8C5- 20 C5 CD           JSR NGETNE      *** EDIT ***
0379  C8C8- 20 F2 FC           JSR HARGUM      (FILNAM.CY,DRIVE)
0380  C8CB- 85 DC              STA FILDRV
0381  C8CD- 20 E4 CF           JSR EDIT

----------------------------------------------------------------------

EXTENDED DISK OPERATING SYSTEM     21/10/23   R65 ASSEMBLER  PAGE 09

0382  C8D0- D0 24              BNE DERROR
0383  C8D2- 60                 RTS
0384                   *
0385  C8D3- 20 4D F9   FINTC4  JSR TEST
0386  C8D6- 46 4C 4F           BYT 'FLOPPY'+128
0386  C8D9- 50 50 D9 
0387  C8DC- B0 1B              BCS FINTC6
0388                   *
0389  C8DE- 20 C5 CD           JSR NGETNE      *** FLOPPY ***
0390  C8E1- 20 F2 FC           JSR HARGUM      (FILNAM.CY,DRIVE)
0391  C8E4- 85 DC              STA FILDRV
0392  C8E6- 20 0D D0           JSR FLOPPY
0393  C8E9- D0 0B              BNE DERROR
0394  C8EB- A9 00              LDA =0          PRINT DIRECTORY
0395  C8ED- 8D 97 03           STA FULLFLG
0396  C8F0- 20 44 CB           JSR FDIR0
0397  C8F3- D0 01              BNE DERROR
0398  C8F5- 60                 RTS
0399                   *
0400  C8F6- 4C 32 F9   DERROR  JMP ERROR
0401                   *
0402  C8F9- 20 4D F9   FINTC6  JSR TEST
0403  C8FC- 52 45 56          BYT 'REVIVE'+128
0403  C8FF- 49 56 C5 
0404  C902- B0 06              BCS FINTC7
0405  C904- 20 4A CA           JSR REVIVE      *** REVIVE ***
0406  C907- D0 ED              BNE DERROR      (ENTRY,DRIVE)
0407  C909- 60                 RTS
0408                   *
0409  C90A- 20 4D F9   FINTC7  JSR TEST
0410  C90D- 52 45 4E           BYT 'RENAME'+128
0410  C910- 41 4D C5 
0411  C913- B0 06              BCS FINTC10
0412  C915- 20 5B CA           JSR RENAME      *** RENAME ***
0413  C918- D0 DC      DERROR1 BNE DERROR      (FILNAM.CY,DRIVE)
0414  C91A- 60                 RTS
0415                   *
0416  C91B- 20 4D F9   FINTC10 JSR TEST
0417  C91E- 46 44 49           BYT 'FDIR'+128
0417  C921- D2 
0418  C922- B0 0B              BCS FINTC25
0419  C924- A9 FF              LDA =$FF
0420  C926- 8D 97 03   FINTC24 STA FULLFLG
0421  C929- 20 36 CB           JSR FDIR        *** FDIR ***
0422  C92C- D0 EA      DERROR2 BNE DERROR1     (DRIVE)
0423  C92E- 60                 RTS
0424                   *
0425  C92F- 20 4D F9   FINTC25 JSR TEST
0426  C932- 44 49 D2           BYT 'DIR'+128   *** DIR ***
0427  C935- B0 05              BCS FINTC11     (DRIVE)

----------------------------------------------------------------------

EXTENDED DISK OPERATING SYSTEM     21/10/23   R65 ASSEMBLER  PAGE 10

0428  C937- A9 00              LDA =0
0429  C939- 4C 26 C9           JMP FINTC24
0430                   *
0431  C93C- 20 4D F9   FINTC11 JSR TEST
0432  C93F- 50 41 43           BYT 'PACK'+128  *** PACK ***
0432  C942- CB 
0433  C943- B0 06              BCS FINTC12     (DRIVE)
0434  C945- 20 4B CC           JSR PACK
0435  C948- D0 E2      DERROR3 BNE DERROR2
0436  C94A- 60                 RTS
0437                   *
0438  C94B- 20 4D F9   FINTC12 JSR TEST
0439  C94E- 50 52 4F           BYT 'PROTECT'+128
0439  C951- 54 45 43 
0439  C954- D4 
0440  C955- B0 06              BCS FINTC15
0441  C957- 20 EF CA           JSR PROTECT     *** PROTECT ***
0442  C95A- D0 D0              BNE DERROR2     (FILNAM.CY,DRIVE)
0443  C95C- 60                 RTS
0444                   *
0445  C95D- 20 4D F9   FINTC15 JSR TEST
0446  C960- 43 4F 50           BYT 'COPY'+128
0446  C963- D9 
0447  C964- B0 06              BCS FINTC17     *** COPY ***
0448  C966- 20 C6 CE           JSR COPY        (FILNAM.CY,DRIVE,DRIVE)
0449  C969- D0 DD              BNE DERROR3
0450  C96B- 60                 RTS
0451                   *
0452  C96C- 20 4D F9   FINTC17 JSR TEST        *** LOAD ***
0453  C96F- 4C 4F 41           BYT 'LOAD'+128
0453  C972- C4 
0454  C973- B0 06              BCS FINTC18
0455  C975- 20 C5 CD           JSR NGETNE
0456  C978- 4C CA FC           JMP BFLOAD0
0457                   *
0458  C97B- 20 4D F9   FINTC18 JSR TEST        *** STORE ***
0459  C97E- 53 54 4F           BYT 'STORE'+128
0459  C981- 52 C5 
0460  C983- B0 06              BCS FINTC19
0461  C985- 20 C5 CD           JSR NGETNE
0462  C988- 4C 60 FD           JMP BFSTOR0
0463                   *
0464  C98B- 20 4D F9   FINTC19 JSR TEST        *** DELETE ***
0465  C98E- 44 45 4C           BYT 'DELETE'+128
0465  C991- 45 54 C5 
0466  C994- B0 06              BCS FINTC20
0467  C996- 20 6E CE           JSR DELETE0
0468  C999- D0 AD              BNE DERROR3
0469  C99B- 60                 RTS
0470                   *

----------------------------------------------------------------------

EXTENDED DISK OPERATING SYSTEM     21/10/23   R65 ASSEMBLER  PAGE 11

0471  C99C- 20 4D F9   FINTC20 JSR TEST        *** VOLUME ***
0472  C99F- 56 4F 4C           BYT 'VOLUME'+128  (DRIVE)
0472  C9A2- 55 4D C5 
0473  C9A5- B0 0B              BCS FINTC21
0474  C9A7- 20 F2 FC           JSR HARGUM
0475  C9AA- 85 DC              STA FILDRV
0476  C9AC- 20 B5 F9           JSR ENDLER
0477  C9AF- 4C 0B CE           JMP VOLUME
0478                   *
0479  C9B2- 20 4D F9   FINTC21 JSR TEST        *** NEW ***
0480  C9B5- 4E 45 D7           BYT 'NEW'+128     (FILNAM.CY,DRIVE)
0481  C9B8- B0 06              BCS FINTC22
0482  C9BA- 20 29 D0           JSR NEW
0483  C9BD- D0 89              BNE DERROR3
0484  C9BF- 60                 RTS
0485                   *
0486  C9C0- 4C 0E FA   FINTC22 JMP INTCOM+8    MUST BE MONITOR COMM
0487                   *
0488                   *
0489                   * SUBROUTINES FOLLOW
0490                   * ******************
0491                   *
0492                   * INITDIR: INITIALIZE DISK DIRECTORY
0493                   ************************************
0494                   *
0495  C9C3- 20 3E CA   INITDIR JSR DSKONLY
0496  C9C6- 20 A7 F4           JSR PREPDO
0497  C9C9- 20 27 E0           JSR PRTINF
0498  C9CC- 0D 0A 46           BYT $D,$A,'FORMAT (DATA LOST)? '+128
0498  C9CF- 4F 52 4D 
0498  C9D2- 41 54 20 
0498  C9D5- 28 44 41 
0498  C9D8- 54 41 20 
0498  C9DB- 4C 4F 53 
0498  C9DE- 54 29 3F 
0498  C9E1- A0 
0499  C9E2- 20 03 E0           JSR GETCHR
0500  C9E5- 29 5F              AND =$5F
0501  C9E7- C9 59              CMP ='Y'
0502  C9E9- F0 05              BEQ INITD1
0503  C9EB- A9 03              LDA =3          ESCAPE
0504  C9ED- 4C FD F5           JMP DISCER1
0505                   *
0506  C9F0- 20 27 E0   INITD1  JSR PRTINF
0507  C9F3- 0D 8A              BYT $D,$8A
0508  C9F5- 20 15 F0           JSR CLOSAL
0509  C9F8- 78                 SEI
0510                   *
0511  C9F9- A0 00      INITD2  LDY =0
0512  C9FB- 98                 TYA             CLEAR BUFFER FIRST

----------------------------------------------------------------------

EXTENDED DISK OPERATING SYSTEM     21/10/23   R65 ASSEMBLER  PAGE 12

0513  C9FC- 99 00 D6           STA DIRBUF,Y
0514  C9FF- 88                DEY
0515  CA00- D0 FA              BNE *-4
0516  CA02- A2 01              LDX =1          STORE SECTORS 1-31
0517  CA04- 8E 7A 03           STX BUFSEC
0518  CA07- 20 2A F5   INITD3  JSR WRITDS
0519  CA0A- EE 7A 03           INC BUFSEC
0520  CA0D- AE 7A 03           LDX BUFSEC
0521  CA10- E0 20              CPX =32
0522  CA12- 90 F3              BCC INITD3
0523  CA14- A2 10              LDX =16         LOAD DISK NAME AND NO
0524  CA16- BD 20 03   INITD4  LDA FILNM1,X
0525  CA19- 9D E1 D6           STA DIRBUF+$E1,X
0526  CA1C- CA                 DEX
0527  CA1D- 10 F7              BPL INITD4
0528  CA1F- 20 2A F5           JSR WRITDS      STORE SECTOR 32
0529  CA22- 60                 RTS
0530                   *
0531                   *
0532  CA23- 20 09 F8   SETEND1 JSR HEXPZE
0533  CA26- AA                 TAX
0534  CA27- CA                 DEX
0535  CA28- 8E 8B 03           STX NEWENT      SAVE ENTRY NO
0536  CA2B- 20 F2 FC           JSR HARGUM
0537  CA2E- 85 DC              STA FILDRV
0538  CA30- 20 B5 F9           JSR ENDLER
0539  CA33- 20 CC F4           JSR PREPDO1
0540  CA36- AE 8B 03           LDX NEWENT
0541  CA39- 20 D2 F4           JSR GETFENT
0542  CA3C- A6 E4              LDX FILCNT
0543                   *
0544  CA3E- A5 DC      DSKONLY LDA FILDRV
0545  CA40- 29 FE              AND =$FE
0546  CA42- D0 01              BNE *+3
0547  CA44- 60                 RTS
0548                   *
0549  CA45- A9 62              LDA =$62
0550  CA47- 4C 32 F9           JMP ERROR
0551                   *
0552                   * REVIVE: REVIVE DELETED FILE
0553                   *****************************
0554                   *
0555  CA4A- 20 23 CA   REVIVE  JSR SETEND1
0556  CA4D- AD 1E 03           LDA FILLNK      CLEAR THE DELETED FLAG
0557  CA50- 29 7F              AND =$7F
0558  CA52- 8D 1E 03           STA FILLNK
0559  CA55- 20 81 F5           JSR PUTFENT
0560  CA58- 4C 25 F6           JMP ENDDO
0561                   *
0562                   * RENAME: RENAME FILE

----------------------------------------------------------------------

EXTENDED DISK OPERATING SYSTEM     21/10/23   R65 ASSEMBLER  PAGE 13

0563                   *********************
0564                   *
0565  CA5B- 20 C5 CD   RENAME  JSR NGETNE
0566  CA5E- 20 F2 FC           JSR HARGUM
0567  CA61- 85 DC              STA FILDRV
0568  CA63- 20 3E CA           JSR DSKONLY
0569  CA66- 20 B5 F9           JSR ENDLER
0570  CA69- 20 2C F6           JSR PREPRD
0571  CA6C- 20 2D E8           JSR PRFLAB
0572  CA6F- 20 27 E0           JSR PRTINF
0573  CA72- 0D 0A 46           BYT $D,$A,'FILNAM.CY,SUBTYPE? '+128
0573  CA75- 49 4C 4E 
0573  CA78- 41 4D 2E 
0573  CA7B- 43 59 2C 
0573  CA7E- 53 55 42 
0573  CA81- 54 59 50 
0573  CA84- 45 3F A0 
0574  CA87- 20 06 E0           JSR GETLIN
0575  CA8A- 20 24 E0           JSR ENDLIN
0576  CA8D- D0 03              BNE *+5
0577  CA8F- 4C EB C9           JMP INITD1-5    ESCAPE
0578                   *
0579  CA92- A6 E4              LDX FILCNT
0580  CA94- 8E 8B 03           STX NEWENT
0581  CA97- 20 C5 CD           JSR NGETNE
0582  CA9A- 20 24 E0           JSR ENDLIN
0583  CA9D- F0 2E              BEQ RENAME1
0584  CA9F- 20 4D F9           JSR TEST
0585  CAA2- AC                 BYT ','+128
0586  CAA3- B0 45              BCS SYNERR
0587  CAA5- 20 4D F9           JSR TEST
0588  CAA8- A1                 BYT '!'+128     PROTECTED?
0589  CAA9- AD 00 03           LDA FILTYP
0590  CAAC- 29 7F              AND =$7F
0591  CAAE- B0 02              BCS *+4
0592  CAB0- 09 80              ORA =$80
0593  CAB2- 8D 00 03           STA FILTYP
0594  CAB5- B1 E9              LDA (VIDPNT),Y
0595  CAB7- C8                 INY
0596  CAB8- C9 41              CMP =$41
0597  CABA- 90 2E              BCC SYNERR
0598  CABC- C9 5C              CMP =$5C
0599  CABE- B0 2A              BCS SYNERR
0600  CAC0- 8D 12 03           STA FILSTP
0601  CAC3- 20 24 E0           JSR ENDLIN
0602  CAC6- F0 05              BEQ RENAME1
0603  CAC8- A9 15              LDA =$15        END OF LINE EXPECTED
0604  CACA- 4C FD F5           JMP DISCER1
0605                   *
0606  CACD- 20 54 F6   RENAME1 JSR PREPWRA+3

----------------------------------------------------------------------

EXTENDED DISK OPERATING SYSTEM     21/10/23   R65 ASSEMBLER  PAGE 14

0607  CAD0- 8E 11 03           STX FILCYC
0608  CAD3- A2 0F              LDX =15
0609  CAD5- BD 20 03           LDA FILNM1,X
0610  CAD8- 9D 01 03           STA FILNAM,X
0611  CADB- CA                 DEX
0612  CADC- 10 F7              BPL *-7
0613  CADE- AE 8B 03           LDX NEWENT
0614  CAE1- 20 ED F4           JSR GETFREC
0615  CAE4- 20 83 F5           JSR PUTFENT+2
0616  CAE7- 4C 25 F6           JMP ENDDO
0617                   *
0618  CAEA- A9 18      SYNERR  LDA =$18
0619  CAEC- 4C F4 F5           JMP DISCERR
0620                   *
0621                   * PROTECT: PROTECT DISK FILE
0622                   * **************************
0623                   *
0624  CAEF- 20 C5 CD   PROTECT JSR NGETNE
0625  CAF2- 20 F2 FC           JSR HARGUM
0626  CAF5- 85 DC              STA FILDRV
0627  CAF7- 20 3E CA           JSR DSKONLY
0628  CAFA- 20 B5 F9           JSR ENDLER
0629  CAFD- 20 2C F6          JSR PREPRD
0630  CB00- AD 00 03           LDA FILTYP
0631  CB03- 09 80              ORA =$80
0632  CB05- 8D 00 03           STA FILTYP
0633  CB08- A6 E5              LDX FILCN1
0634  CB0A- 20 81 F5           JSR PUTFENT
0635  CB0D- 4C 25 F6           JMP ENDDO
0636                   *
0637                   * IFNAME: READ FILE NAME, IF THERE
0638                   **********************************
0639                   *
0640  CB10- A9 00      IFNAME  LDA =0
0641  CB12- 8D 98 03           STA NAMEFLG
0642  CB15- 20 24 E0           JSR ENDLIN      SKIP BLANKS
0643  CB18- F0 1B              BEQ IFNAME1
0644  CB1A- B1 E9              LDA (VIDPNT),Y
0645  CB1C- 29 7F              AND =$7F
0646  CB1E- C9 40              CMP ='@'
0647  CB20- 90 13              BCC IFNAME1
0648  CB22- C9 5B              CMP ='['
0649  CB24- B0 0F              BCS IFNAME1
0650  CB26- 20 9F CD           JSR NGETNAM
0651  CB29- A9 FF              LDA =$FF
0652  CB2B- 8D 98 03           STA NAMEFLG
0653  CB2E- B1 E9              LDA (VIDPNT),Y
0654  CB30- C9 2C              CMP =','
0655  CB32- D0 01              BNE IFNAME1
0656  CB34- C8                 INY

----------------------------------------------------------------------

EXTENDED DISK OPERATING SYSTEM     21/10/23   R65 ASSEMBLER  PAGE 15

0657  CB35- 60         IFNAME1 RTS
0658                   *
0659                   * FDIR: PRINT DIRECTORY
0660                   ***********************
0661                   *
0662  CB36- 20 10 CB   FDIR    JSR IFNAME
0663  CB39- 20 09 F8           JSR HEXPZE
0664  CB3C- 85 DC              STA FILDRV
0665  CB3E- 20 3E CA           JSR DSKONLY
0666  CB41- 20 B5 F9           JSR ENDLER
0667  CB44- A5 DC      FDIR0   LDA FILDRV      ENTRY FOR VECTOR CALL
0668  CB46- 29 FE              AND =$FE
0669  CB48- F0 03              BEQ *+5
0670  CB4A- 4C 09 E8           JMP TDIR
0671                   *
0672  CB4D- 20 A7 F4           JSR PREPDO
0673  CB50- A2 FF              LDX =255
0674  CB52- 20 D2 F4           JSR GETFENT
0675  CB55- 20 27 E0           JSR PRTINF
0676  CB58- 44 49 52           BYT 'DIRECTORY '
0676  CB5B- 45 43 54 
0676  CB5E- 4F 52 59 
0676  CB61- 20 
0677  CB62- 44 49 53           BYT 'DISK '+128
0677  CB65- 4B A0 
0678  CB67- A5 DC              LDA FILDRV
0679  CB69- 20 2D E0           JSR PRTBYT
0680  CB6C- 20 27 E0           JSR PRTINF
0681  CB6F- 3A A0              BYT ': '+128
0682  CB71- A2 00              LDX =0
0683  CB73- BD 01 03   FDIR0A  LDA FILNAM,X
0684  CB76- 20 09 E0           JSR PRTCHR
0685  CB79- E8                 INX
0686  CB7A- E0 10              CPX =16
0687  CB7C- 90 F5              BCC FDIR0A
0688                   *
0689  CB7E- A2 02              LDX =2
0690  CB80- 8E 99 03           STX DIRCNT
0691  CB83- A2 00              LDX =0
0692  CB85- 8E 9A 03           STX DELCNT
0693  CB88- 8E 9B 03           STX DELCNT+1
0694  CB8B- AD 98 03   FDIR1   LDA NAMEFLG
0695  CB8E- D0 06              BNE *+8
0696  CB90- 20 D2 F4           JSR GETFENT
0697  CB93- 4C 9E CB           JMP FDIR1A
0698  CB96- 20 DA CD           JSR NEXTENT
0699  CB99- AE 7C 03           LDX SCYFC
0700  CB9C- 86 E4              STX FILCNT
0701  CB9E- AD 00 03   FDIR1A  LDA FILTYP      0 MEANS END MARK
0702  CBA1- F0 7A              BEQ FDIR2

----------------------------------------------------------------------

EXTENDED DISK OPERATING SYSTEM     21/10/23   R65 ASSEMBLER  PAGE 16

0703  CBA3- 20 06 E8           JSR ESCTST
0704  CBA6- B0 75              BCS FDIR2
0705  CBA8- AD 99 03           LDA DIRCNT      EVERY 14 LINES
0706  CBAB- 29 0E              AND =$0E
0707  CBAD- D0 0F              BNE FDIR4
0708  CBAF- EE 99 03           INC DIRCNT
0709  CBB2- EE 99 03           INC DIRCNT
0710  CBB5- 20 03 E0           JSR GETCHR
0711  CBB8- 20 06 E8           JSR ESCTST      ESCAPE?
0712  CBBB- 90 01              BCC FDIR4
0713  CBBD- 60                 RTS             RETURN TO COMMAND LINE
0714                   *
0715  CBBE- AD 1E 03   FDIR4   LDA FILLNK
0716  CBC1- 10 0F              BPL FDIR8
0717  CBC3- AD 9A 03           LDA DELCNT      COUNT DELETED SECTORS
0718  CBC6- 18                 CLC
0719  CBC7- 6D 16 03           ADC FILSIZ+1
0720  CBCA- 8D 9A 03           STA DELCNT
0721  CBCD- 90 03              BCC FDIR8
0722  CBCF- EE 9B 03           INC DELCNT+1
0723                   *
0724  CBD2- AD 97 03   FDIR8   LDA FULLFLG
0725  CBD5- F0 6A              BEQ FDIR5
0726  CBD7- 20 27 E0           JSR PRTINF      PRINT FULL DIRECTORY
0727  CBDA- 0D 0A 2A           BYT $D,$A,'***** '+128
0727  CBDD- 2A 2A 2A 
0727  CBE0- 2A A0 
0728  CBE2- A6 E4              LDX FILCNT
0729  CBE4- E8                 INX
0730  CBE5- 8A                 TXA
0731  CBE6- 20 2D E0           JSR PRTBYT
0732  CBE9- 20 27 E0           JSR PRTINF
0733  CBEC- 2E 20 20           BYT '.  SIZE='+128
0733  CBEF- 53 49 5A 
0733  CBF2- 45 BD 
0734  CBF4- AD 16 03           LDA FILSIZ+1
0735  CBF7- 20 2D E0           JSR PRTBYT
0736  CBFA- AD 1E 03           LDA FILLNK
0737  CBFD- 10 0D              BPL FDIR3-3
0738                   *
0739  CBFF- 20 27 E0          JSR PRTINF
0740  CC02- 20 28 44           BYT ' (DELETED)'+128
0740  CC05- 45 4C 45 
0740  CC08- 54 45 44 
0740  CC0B- A9 
0741  CC0C- EE 99 03           INC DIRCNT      COUNT FIRST LINE
0742  CC0F- 20 2D E8   FDIR3   JSR PRFLAB
0743  CC12- B0 09              BCS FDIR2       ESCAPE?
0744  CC14- EE 99 03           INC DIRCNT      COUNT SECOND LINE
0745  CC17- A6 E4      FDIR6   LDX FILCNT

----------------------------------------------------------------------

EXTENDED DISK OPERATING SYSTEM     21/10/23   R65 ASSEMBLER  PAGE 17

0746  CC19- E8                 INX
0747  CC1A- 4C 8B CB           JMP FDIR1
0748                   *
0749  CC1D- 20 B4 F6   FDIR2   JSR DDIR2
0750  CC20- 20 27 E0           JSR PRTINF
0751  CC23- 44 45 4C           BYT 'DELETED:     '+128
0751  CC26- 45 54 45 
0751  CC29- 44 3A 20 
0751  CC2C- 20 20 20 
0751  CC2F- A0 
0752  CC30- AE 9A 03           LDX DELCNT
0753  CC33- AD 9B 03           LDA DELCNT+1
0754  CC36- 20 30 E0           JSR PRTAX
0755  CC39- 20 27 E0           JSR PRTINF
0756  CC3C- 0D 8A              BYT $D,$8A
0757  CC3E- A9 00              LDA =0
0758  CC40- 60                 RTS
0759                   *
0760  CC41- AD 1E 03   FDIR5   LDA FILLNK
0761  CC44- 30 D1              BMI FDIR6
0762  CC46- 10 C7              BPL FDIR3
0763                   *
0764  CC48- 4C 25 F6   PACK9   JMP ENDDO
0765                   *
0766                   * PACK: PACK FLOPPY DISK
0767                   ************************
0768                   *
0769  CC4B- 20 09 F8   PACK    JSR HEXPZE
0770  CC4E- 85 DC              STA FILDRV
0771  CC50- 20 B5 F9           JSR ENDLER
0772  CC53- 20 3E CA           JSR DSKONLY
0773  CC56- 20 15 F0           JSR CLOSAL
0774  CC59- 20 27 E0           JSR PRTINF
0775  CC5C- 0D 0A              BYT $D,$A
0776  CC5E- 50 41 43           BYT 'PACK (DELETED FILES LOST)? '+128
0776  CC61- 4B 20 28 
0776  CC64- 44 45 4C 
0776  CC67- 45 54 45 
0776  CC6A- 44 20 46 
0776  CC6D- 49 4C 45 
0776  CC70- 53 20 4C 
0776  CC73- 4F 53 54 
0776  CC76- 29 3F A0 
0777  CC79- 20 03 E0           JSR GETCHR
0778  CC7C- 29 5F              AND =$5F
0779  CC7E- C9 59              CMP ='Y'
0780  CC80- F0 03              BEQ *+5
0781  CC82- 4C EB C9           JMP INITD1-5    ESCAPE
0782                   *
0783  CC85- 20 27 E0           JSR PRTINF

----------------------------------------------------------------------

EXTENDED DISK OPERATING SYSTEM     21/10/23   R65 ASSEMBLER  PAGE 18

0784  CC88- 0D 8A              BYT $D,$8A
0785  CC8A- 20 A7 F4   PACK0   JSR PREPDO
0786  CC8D- A2 00              LDX =0
0787  CC8F- 20 D2 F4   PACK1   JSR GETFENT     LOOP UNTIL FIRST
0788  CC92- AD 00 03           LDA FILTYP      EMPTY RECORD FOUND
0789  CC95- F0 B1              BEQ PACK9       NO PACK NEEDED
0790  CC97- AD 1E 03           LDA FILLNK
0791  CC9A- 30 05              BMI PACK2       SKIP, IF DELETED
0792  CC9C- A6 E4              LDX FILCNT      ELSE NEXT ENTRY
0793  CC9E- E8                 INX
0794  CC9F- D0 EE              BNE PACK1       ALLWAYS TAKEN
0795                   *
0796  CCA1- A6 E4      PACK2   LDX FILCNT      DELETED FILE FOUND
0797  CCA3- 8E 8B 03           STX NEWENT
0798  CCA6- AD 13 03           LDA FILLOC
0799  CCA9- AE 14 03           LDX FILLOC+1
0800  CCAC- 8D 8C 03           STA NEWREC
0801  CCAF- 8E 8D 03           STX NEWREC+1
0802  CCB2- A6 E4              LDX FILCNT
0803  CCB4- E8                 INX
0804  CCB5- 20 D2 F4   PACK3   JSR GETFENT
0805  CCB8- AD 00 03           LDA FILTYP
0806  CCBB- D0 03              BNE *+5
0807  CCBD- 4C 6E CD           JMP PACK8       SKIP, IF END OF DIR.
0808  CCC0- AD 1E 03           LDA FILLNK
0809  CCC3- 10 05              BPL PACK4       SKIP, IF NOT DELETED
0810  CCC5- A6 E4              LDX FILCNT
0811  CCC7- E8                 INX
0812  CCC8- D0 EB              BNE PACK3
0813                   *
0814  CCCA- AD 13 03   PACK4   LDA FILLOC
0815  CCCD- AE 14 03           LDX FILLOC+1
0816  CCD0- 8D 89 03           STA OLDREC
0817  CCD3- 8E 8A 03           STX OLDREC+1
0818  CCD6- A5 E4              LDA FILCNT
0819  CCD8- 8D 88 03           STA OLDENT
0820  CCDB- AD 8C 03           LDA NEWREC
0821  CCDE- AE 8D 03           LDX NEWREC+1
0822  CCE1- 8D 13 03           STA FILLOC
0823  CCE4- 8E 14 03           STX FILLOC+1
0824  CCE7- AE 8B 03           LDX NEWENT
0825  CCEA- 20 ED F4           JSR GETFREC
0826  CCED- 20 83 F5           JSR PUTFENT+2   MOVE ENTRY
0827  CCF0- AD 16 03           LDA FILSIZ+1
0828  CCF3- 8D 8E 03           STA COUNTER
0829                   *
0830  CCF6- A9 05      PACK5   LDA =5
0831  CCF8- CD 8E 03           CMP COUNTER
0832  CCFB- 90 03              BCC *+5
0833  CCFD- AD 8E 03          LDA COUNTER

----------------------------------------------------------------------

EXTENDED DISK OPERATING SYSTEM     21/10/23   R65 ASSEMBLER  PAGE 19

0834  CD00- 8D 8F 03           STA COUNT2
0835                   *
0836  CD03- A9 00              LDA =<FILBUF    MOVE FILE
0837  CD05- A2 D7              LDX =>FILBUF
0838  CD07- 85 E0              STA DATA
0839  CD09- 86 E1              STX DATA+1
0840  CD0B- AD 89 03   PACK5A  LDA OLDREC
0841  CD0E- AE 8A 03           LDX OLDREC+1
0842  CD11- 85 DE              STA SECTOR
0843  CD13- 86 DD              STX TRACK
0844  CD15- 20 5C F5           JSR PREPRW1-2
0845  CD18- 20 57 F4           JSR READ
0846  CD1B- EE 89 03           INC OLDREC
0847  CD1E- D0 03              BNE *+5
0848  CD20- EE 8A 03           INC OLDREC+1
0849  CD23- E6 E1              INC DATA+1
0850  CD25- CE 8F 03           DEC COUNT2
0851  CD28- D0 E1              BNE PACK5A
0852                   *
0853  CD2A- A9 D7              LDA =>FILBUF
0854  CD2C- 85 E1              STA DATA+1
0855  CD2E- A9 05              LDA =5
0856  CD30- CD 8E 03           CMP COUNTER
0857  CD33- 90 03              BCC *+5
0858  CD35- AD 8E 03           LDA COUNTER
0859  CD38- 8D 8F 03           STA COUNT2
0860  CD3B- AD 8C 03   PACK5B  LDA NEWREC
0861  CD3E- AE 8D 03           LDX NEWREC+1
0862  CD41- 85 DE              STA SECTOR
0863  CD43- 86 DD              STX TRACK
0864  CD45- 20 5C F5           JSR PREPRW1-2
0865  CD48- 20 25 F4           JSR WRITE
0866  CD4B- EE 8C 03           INC NEWREC
0867  CD4E- D0 03              BNE *+5
0868  CD50- EE 8D 03           INC NEWREC+1
0869  CD53- E6 E1              INC DATA+1
0870  CD55- CE 8E 03           DEC COUNTER
0871  CD58- CE 8F 03           DEC COUNT2
0872  CD5B- D0 DE              BNE PACK5B
0873                   *
0874  CD5D- AD 8E 03           LDA COUNTER
0875  CD60- D0 94              BNE PACK5
0876                   *
0877  CD62- EE 8B 03           INC NEWENT
0878  CD65- EE 88 03           INC OLDENT
0879  CD68- AE 88 03           LDX OLDENT
0880  CD6B- 4C B5 CC           JMP PACK3
0881                   *
0882  CD6E- A9 00      PACK8   LDA =0          SET END MARK
0883  CD70- 8D 00 03           STA FILTYP

----------------------------------------------------------------------

EXTENDED DISK OPERATING SYSTEM     21/10/23   R65 ASSEMBLER  PAGE 20

0884  CD73- AD 8C 03           LDA NEWREC
0885  CD76- AE 8D 03           LDX NEWREC+1
0886  CD79- 8D 13 03           STA FILLOC
0887  CD7C- 8E 14 03           STX FILLOC+1
0888  CD7F- AE 8B 03           LDX NEWENT
0889  CD82- 20 ED F4           JSR GETFREC
0890  CD85- 20 83 F5           JSR PUTFENT+2
0891  CD88- 20 27 E0           JSR PRTINF
0892  CD8B- 50 41 43           BYT 'PACKING COMPLETE',' '+128
0892  CD8E- 4B 49 4E 
0892  CD91- 47 20 43 
0892  CD94- 4F 4D 50 
0892  CD97- 4C 45 54 
0892  CD9A- 45 A0 
0893                   *
0894  CD9C- 4C 25 F6   PACK7   JMP ENDDO
0895                   *
0896                   * NGETNAM: GET FILE NAME AND CYCLUS
0897                   ***********************************
0898                   *
0899  CD9F- 20 15 F8   NGETNAM JSR GETNAM
0900  CDA2- A2 00              LDX =0
0901                   *
0902  CDA4- A2 00      NGETN6  LDX =0
0903  CDA6- BD 20 03   NGETN7  LDA FILNM1,X
0904  CDA9- C9 40              CMP ='@'
0905  CDAB- D0 12              BNE NGETN9
0906  CDAD- E8                 INX
0907  CDAE- BD 20 03   NGETN8  LDA FILNM1,X
0908  CDB1- C9 20              CMP =' '
0909  CDB3- D0 F1              BNE NGETN7
0910  CDB5- A9 40              LDA ='@'
0911  CDB7- 9D 20 03           STA FILNM1,X
0912  CDBA- E8                 INX
0913  CDBB- E0 10              CPX =16
0914  CDBD- 90 EF              BCC NGETN8
0915                   *
0916  CDBF- E8         NGETN9  INX
0917  CDC0- E0 0F              CPX =15
0918  CDC2- 90 E2              BCC NGETN7
0919  CDC4- 60         NGETN10 RTS
0920                   *
0921                   * NGETNE: GET FILE NAME, NO WILDCARDS
0922                   *************************************
0923                   *
0924  CDC5- 20 9F CD   NGETNE  JSR NGETNAM
0925  CDC8- A2 10              LDX =16
0926  CDCA- BD 21 03   NGETNE1 LDA FILNM1+1,X
0927  CDCD- C9 40              CMP ='@'
0928  CDCF- F0 04              BEQ NGETNE2

----------------------------------------------------------------------

EXTENDED DISK OPERATING SYSTEM     21/10/23   R65 ASSEMBLER  PAGE 21

0929  CDD1- CA                 DEX
0930  CDD2- D0 F6              BNE NGETNE1
0931  CDD4- 60                 RTS
0932                   *
0933  CDD5- A9 61      NGETNE2 LDA =$61        NO WILD CARD
0934  CDD7- 4C 32 F9           JMP ERROR
0935                   *
0936                   * NEXTENTRY
0937                   ***********
0938                   * INPUT: X=FIRST ENTRY TO CHECK
0939                   * OUTPUT: SCYFC: FOUND ENTRY,Z=1 IF END MARK
0940                   *
0941  CDDA- 8E 7C 03   NEXTENT STX SCYFC
0942  CDDD- 20 D2 F4   NEXTE5  JSR GETFENT
0943  CDE0- AD 00 03           LDA FILTYP
0944  CDE3- D0 01              BNE *+3         END MARK?
0945  CDE5- 60                 RTS
0946                   *
0947  CDE6- AD 30 03           LDA FILCY1      IF FILCYC=0
0948  CDE9- F0 05              BEQ NEXTE10     DO NOT CHECK
0949  CDEB- CD 11 03           CMP FILCYC
0950  CDEE- D0 12              BNE NEXTE30
0951                   *
0952  CDF0- A2 0F      NEXTE10 LDX =15
0953  CDF2- BD 20 03           LDA FILNM1,X
0954  CDF5- C9 40              CMP ='@'
0955  CDF7- F0 05              BEQ NEXTE20
0956  CDF9- DD 01 03           CMP FILNAM,X
0957  CDFC- D0 04              BNE NEXTE30
0958                   *
0959  CDFE- CA         NEXTE20 DEX
0960  CDFF- 10 F1             BPL NEXTE10+2
0961  CE01- 60                 RTS             FOUND
0962                   *
0963  CE02- EE 7C 03   NEXTE30 INC SCYFC
0964  CE05- AE 7C 03           LDX SCYFC
0965  CE08- 4C DD CD           JMP NEXTE5
0966                   *
0967                   * VOLUME: CHANGE VOLUME NAME
0968                   ****************************
0969                   *
0970  CE0B- 20 3E CA   VOLUME  JSR DSKONLY
0971  CE0E- 20 A7 F4           JSR PREPDO
0972  CE11- A2 FF              LDX =255
0973  CE13- 20 D2 F4           JSR GETFENT
0974  CE16- 20 27 E0           JSR PRTINF
0975  CE19- 0D 0A 4F           BYT $D,$A,'OLD VOLUME: '+128
0975  CE1C- 4C 44 20 
0975  CE1F- 56 4F 4C 
0975  CE22- 55 4D 45 

----------------------------------------------------------------------

EXTENDED DISK OPERATING SYSTEM     21/10/23   R65 ASSEMBLER  PAGE 22

0975  CE25- 3A A0 
0976  CE27- A2 00              LDX =0
0977  CE29- BD 01 03   VOL10   LDA FILNAM,X
0978  CE2C- 20 09 E0           JSR PRTCHR
0979  CE2F- E8                 INX
0980  CE30- E0 10              CPX =16
0981  CE32- 90 F5              BCC VOL10
0982  CE34- 20 27 E0           JSR PRTINF
0983  CE37- AE                 BYT '.'+128
0984  CE38- AD 11 03           LDA FILCYC
0985  CE3B- 20 2D E0           JSR PRTBYT
0986  CE3E- 20 27 E0           JSR PRTINF
0987  CE41- 0D 0A 4E           BYT $D,$A,'NEW VOLUME: '+128
0987  CE44- 45 57 20 
0987  CE47- 56 4F 4C 
0987  CE4A- 55 4D 45 
0987  CE4D- 3A A0 
0988  CE4F- 20 06 E0           JSR GETLIN
0989  CE52- 20 24 E0           JSR ENDLIN
0990  CE55- D0 01              BNE *+3
0991  CE57- 60                 RTS             NO CHANGE, RETURN
0992  CE58- 20 C5 CD           JSR NGETNE
0993  CE5B- A2 10              LDX =16
0994  CE5D- BD 20 03   VOL20   LDA FILNM1,X
0995  CE60- 9D E1 D6           STA DIRBUF+$E1,X
0996  CE63- CA                 DEX
0997  CE64- 10 F7              BPL VOL20
0998  CE66- A9 20              LDA =$20        Last directory entry
0999  CE68- 8D 7A 03           STA BUFSEC
1000  CE6B- 4C 2A F5           JMP WRITDS
1001                   *
1002                   * DELETE: DELETE ONE OR SEVERAL FILES
1003                   *************************************
1004                   *
1005  CE6E- 20 9F CD   DELETE0 JSR NGETNAM
1006  CE71- 20 F2 FC           JSR HARGUM
1007  CE74- 85 DC              STA FILDRV
1008  CE76- 20 3E CA           JSR DSKONLY
1009  CE79- A2 10      DELETE1 LDX =16         WILD CARDS?
1010  CE7B- BD 1F 03   DEL1    LDA FILNM1-1,X
1011  CE7E- C9 40              CMP ='@'
1012  CE80- F0 06              BEQ DEL2        SKIP, IF YES
1013  CE82- CA                 DEX
1014  CE83- D0 F6              BNE DEL1
1015  CE85- 4C 0C F0           JMP DELETE      DELETE ONE FILE
1016                   *
1017  CE88- 20 A7 F4   DEL2    JSR PREPDO
1018                   *
1019  CE8B- A2 00              LDX =0
1020  CE8D- 8E AD 03           STX SUCCESS     RESET SUCCESS CNT

----------------------------------------------------------------------

EXTENDED DISK OPERATING SYSTEM     21/10/23   R65 ASSEMBLER  PAGE 23

1021  CE90- 20 DA CD   DEL3    JSR NEXTENT
1022  CE93- AD 00 03           LDA FILTYP
1023  CE96- D0 17              BNE DEL4
1024  CE98- AE AD 03           LDX SUCCESS     ANYTHING DONE?
1025  CE9B- D0 0F              BNE DEL6
1026                   *
1027  CE9D- 20 27 E0   NOSUCC  JSR PRTINF
1028  CEA0- 0D 0A 4E           BYT $D,$A,'NO MATCH',$D,$8A
1028  CEA3- 4F 20 4D 
1028  CEA6- 41 54 43 
1028  CEA9- 48 0D 8A 
1029                   *
1030  CEAC- 4C 25 F6   DEL6    JMP ENDDO       END MARKFOUND
1031                   *
1032  CEAF- AD 1E 03   DEL4    LDA FILLNK
1033  CEB2- 30 09              BMI DEL5
1034  CEB4- 20 2D E8           JSR PRFLAB
1035  CEB7- 20 F1 F6           JSR DELETE4
1036  CEBA- EE AD 03           INC SUCCESS     COUNT SUCCESS
1037  CEBD- EE 7C 03   DEL5    INC SCYFC
1038  CEC0- AE 7C 03           LDX SCYFC
1039  CEC3- 4C 90 CE           JMP DEL3
1040                   *
1041                   * COPY: COPY FILE(S) TO NEW DRIVE
1042                   *********************************
1043                   *
1044  CEC6- 20 10 CB   COPY    JSR IFNAME
1045  CEC9- 20 15 F0           JSR CLOSAL
1046  CECC- 20 09 F8           JSR HEXPZE      GET OLD DRIVE
1047  CECF- 8D 93 03           STA OLDDRV
1048  CED2- 20 40 CA           JSR DSKONLY+2
1049  CED5- 20 F2 FC           JSR HARGUM      GET NEW DRIVE
1050  CED8- 8D 94 03           STA NEWDRV
1051  CEDB- 20 40 CA           JSR DSKONLY+2
1052  CEDE- AD 94 03   COPY0   LDA NEWDRV      DIFFERENT DRIVE?
1053  CEE1- CD 93 03           CMP OLDDRV
1054  CEE4- D0 05              BNE COPY1
1055                   *
1056  CEE6- A9 63              LDA =$63        IDENTICAL DRIVE
1057  CEE8- 85 DB              STA FILERR
1058  CEEA- 60                 RTS
1059                   *
1060  CEEB- A2 10      COPY1   LDX =16
1061  CEED- BD 20 03   COPYL   LDA FILNM1,X
1062  CEF0- 9D 9C 03           STA FILNM2,X
1063  CEF3- CA                 DEX
1064  CEF4- 10 F7              BPL COPYL
1065                   *
1066  CEF6- A2 00              LDX =0
1067  CEF8- 8E AD 03           STX SUCCESS     RESET SUCCESS CNT

----------------------------------------------------------------------

EXTENDED DISK OPERATING SYSTEM     21/10/23   R65 ASSEMBLER  PAGE 24

1068  CEFB- 8E 88 03   LOOP    STX OLDENT      LOOP THROUGH FILES
1069  CEFE- AD 93 03          LDA OLDDRV
1070  CF01- 85 DC              STA FILDRV
1071  CF03- A9 00              LDA =0
1072  CF05- 85 DA              STA FILFLG
1073  CF07- 20 A7 F4           JSR PREPDO
1074  CF0A- AE 88 03           LDX OLDENT
1075  CF0D- AD 98 03           LDA NAMEFLG
1076  CF10- D0 06              BNE *+8
1077  CF12- 20 D2 F4           JSR GETFENT
1078  CF15- 4C 21 CF           JMP LOOP1
1079                   *
1080  CF18- 20 DA CD           JSR NEXTENT
1081  CF1B- AE 7C 03           LDX SCYFC
1082  CF1E- 8E 88 03           STX OLDENT
1083                   *
1084  CF21- AD 00 03   LOOP1   LDA FILTYP
1085  CF24- D0 0B              BNE NOTEND
1086  CF26- AD AD 03           LDA SUCCESS     ANYTHING DONE?
1087  CF29- D0 03              BNE *+5
1088  CF2B- 4C 9D CE           JMP NOSUCC
1089  CF2E- 4C 25 F6           JMP ENDDO       COMPLETE
1090                   *
1091  CF31- AD 1E 03   NOTEND  LDA FILLNK      SKIP DELETED FILES
1092  CF34- 10 03              BPL *+5
1093  CF36- 4C 85 CF           JMP NEXTF
1094  CF39- A2 10              LDX =16
1095  CF3B- BD 01 03   NOTE1   LDA FILNAM,X
1096  CF3E- 9D 20 03           STA FILNM1,X
1097  CF41- CA                 DEX
1098  CF42- 10 F7              BPL NOTE1
1099                   *
1100  CF44- 20 2D E8   COPYF   JSR PRFLAB
1101  CF47- EE AD 03           INC SUCCESS
1102  CF4A- A9 00              LDA =<COPYBS    PREPARE ADDRESS
1103  CF4C- A2 20              LDX =>COPYBS
1104  CF4E- 20 4E F5           JSR PREPRW+6    AND POINTERS
1105                   *
1106  CF51- 38                 SEC
1107  CF52- A9 BF              LDA =>COPYBE    CHECK SIZE OF COPY
1108  CF54- E9 20              SBC =>COPYBS    BUFFER
1109  CF56- E5 E5              SBC FILCN1
1110  CF58- B0 05              BCS COPYF1
1111  CF5A- A9 64              LDA =$64        FILE TOO LARGE
1112  CF5C- 85 DB              STA FILERR
1113  CF5E- 60                 RTS
1114                   *
1115  CF5F- 20 6E F7   COPYF1  JSR DRDFIL2
1116  CF62- AD 94 03           LDA NEWDRV
1117  CF65- 85 DC              STA FILDRV

----------------------------------------------------------------------

EXTENDED DISK OPERATING SYSTEM     21/10/23   R65 ASSEMBLER  PAGE 25

1118  CF67- A9 60              LDA =$60
1119  CF69- 85 DA              STA FILFLG
1120  CF6B- AD 11 03           LDA FILCYC
1121  CF6E- 8D 30 03           STA FILCY1
1122  CF71- A9 00              LDA =<COPYBS
1123  CF73- A2 20              LDX =>COPYBS
1124  CF75- 8D 31 03           STA FILSA1
1125  CF78- 8E 32 03           STX FILSA1+1
1126  CF7B- 20 2C EB           JSR WRFILE+24   DO NOT OVERWRITE
1127  CF7E- F0 05              BEQ NEXTF       FILTYP,DATE
1128  CF80- A9 01              LDA =1
1129  CF82- 85 DB              STA FILERR      WRITE ERROR
1130  CF84- 60                 RTS
1131                   *
1132  CF85- A2 10      NEXTF   LDX =16
1133  CF87- BD 9C 03   NEXTF1  LDA FILNM2,X    RESTORE FILNM1,FILCY1
1134  CF8A- 9D 20 03           STA FILNM1,X
1135  CF8D- CA                 DEX
1136  CF8E- 10 F7              BPL NEXTF1
1137  CF90- AE 88 03           LDX OLDENT
1138  CF93- E8                 INX
1139  CF94- 20 06 E8           JSR ESCTST
1140  CF97- B0 03              BCS *+5
1141  CF99- 4C FB CE           JMP LOOP
1142                   *
1143  CF9C- AD AD 03           LDA SUCCESS     ANYTHING DONE?
1144  CF9F- D0 03              BNE *+5
1145  CFA1- 4C 9D CE           JMP NOSUCC
1146                   *
1147  CFA4- 4C 25 F6           JMP ENDDO       FINISHED
1148                   *
1149                   *
1150                   * EXPORT: EXPORT A SEQUENTIAL FILE
1151                   **********************************
1152                   *
1153  CFA7- 20 3E CA   EXPORT  JSR DSKONLY
1154  CFAA- 20 B5 F9           JSR ENDLER
1155  CFAD- 20 2C F6           JSR PREPRD
1156  CFB0- 20 2D E8           JSR PRFLAB
1157                   *
1158  CFB3- A9 01              LDA =1          COMMAND 1: EXPORT
1159  CFB5- 8D 30 14           STA EMUCOM      EXECUTE LINUX CMD
1160  CFB8- 20 25 F6           JSR ENDDO
1161  CFBB- AD 31 14           LDA EMURES      GET RESULT
1162  CFBE- 85 DB              STA FILERR
1163  CFC0- 60                 RTS
1164                   *
1165                   *
1166                   * IMPORT: IMPORT A SEQUENTIAL FILE
1167                   **********************************

----------------------------------------------------------------------

EXTENDED DISK OPERATING SYSTEM     21/10/23   R65 ASSEMBLER  PAGE 26

1168                   *
1169  CFC1- 20 3E CA   IMPORT  JSR DSKONLY
1170  CFC4- 20 B5 F9           JSR ENDLER
1171                   *
1172  CFC7- A2 10      IMPORT1 LDX =16
1173  CFC9- BD 20 03           LDA FILNM1,X
1174  CFCC- 9D 01 03           STA FILNAM,X
1175  CFCF- CA                 DEX
1176  CFD0- 10 F7              BPL *-7
1177                   *
1178  CFD2- A9 02              LDA =2          COMMAND 2: IMPORT
1179  CFD4- 8D 30 14           STA EMUCOM      EXECUTE LINUX CMD
1180  CFD7- AD 31 14           LDA EMURES      GET RESULT
1181  CFDA- D0 05              BNE IMPORTE
1182  CFDC- 20 2D E8           JSR PRFLAB
1183  CFDF- A9 00              LDA =0          NO ERROR
1184  CFE1- 85 DB      IMPORTE STA FILERR
1185  CFE3- 60                 RTS
1186                   *
1187                   * EDIT: EDIT USING LEAFPAD
1188                   **************************
1189                   *
1190  CFE4- 20 A7 CF   EDIT    JSR EXPORT
1191  CFE7- D0 21              BNE EDITR
1192  CFE9- 20 27 E8           JSR TDELAY      ALLOW SCREEN UPDATE
1193  CFEC- 20 F7 CF           JSR EDIT0
1194  CFEF- D0 19              BNE EDITR
1195  CFF1- 20 C7 CF           JSR IMPORT1
1196  CFF4- D0 14              BNE EDITR
1197  CFF6- 60                 RTS
1198                   *
1199  CFF7- A2 10      EDIT0   LDX =16
1200  CFF9- BD 20 03           LDA FILNM1,X
1201  CFFC- 9D 01 03           STA FILNAM,X
1202  CFFF- CA                DEX
1203  D000- 10 F7              BPL *-7
1204                   *
1205  D002- A9 03              LDA =3          COMMAND 3: EDIT
1206  D004- 8D 30 14           STA EMUCOM      EXECUTE LINUX CMD
1207  D007- AD 31 14           LDA EMURES      GET RESULT
1208  D00A- 85 DB      EDITR   STA FILERR
1209  D00C- 60                 RTS
1210                   *
1211                   * FLOPPY: CHANGE FLOPPY DISK
1212                   ****************************
1213                   *
1214  D00D- 20 3E CA   FLOPPY  JSR DSKONLY
1215  D010- 20 B5 F9           JSR ENDLER
1216                   *
1217  D013- A2 10              LDX =16

----------------------------------------------------------------------

EXTENDED DISK OPERATING SYSTEM     21/10/23   R65 ASSEMBLER  PAGE 27

1218  D015- BD 20 03           LDA FILNM1,X
1219  D018- 9D 01 03           STA FILNAM,X
1220  D01B- CA                 DEX
1221  D01C- 10 F7              BPL *-7
1222                   *
1223  D01E- A9 04              LDA =4          COMMAND 4: FLOPPY
1224  D020- 8D 30 14           STA EMUCOM      EXECUTE LINUX CMD
1225  D023- AD 31 14           LDA EMURES      GET RESULT
1226  D026- 85 DB              STA FILERR
1227  D028- 60                 RTS
1228                   *
1229                   * NEW: CREATE AN NEW SEQUENTIAL FILE
1230                   ************************************
1231                   *
1232  D029- 20 C5 CD   NEW     JSR NGETNE
1233  D02C- 20 F2 FC           JSR HARGUM
1234  D02F- 85 DC              STA FILDRV
1235  D031- A9 42      NEW0    LDA ='B'        DEFAULT SUBTYPE
1236  D033- 8D 12 03           STA FILSTP
1237                   *
1238  D036- A2 0E              LDX =14         FIND TYPE
1239  D038- BD 20 03   NEW1    LDA FILNM1,X
1240  D03B- C9 3A              CMP =':'
1241  D03D- F0 05              BEQ NEW2
1242  D03F- CA                 DEX
1243  D040- D0 F6              BNE NEW1
1244  D042- F0 06              BEQ NEW3
1245                   *
1246  D044- BD 21 03   NEW2    LDA FILNM1+1,X
1247  D047- 8D 12 03           STA FILSTP      STORE SUBTYPE
1248                   *
1249  D04A- A9 20      NEW3    LDA =$20        WRITE
1250  D04C- 85 DA              STA FILFLG
1251  D04E- A9 01              LDA =1
1252  D050- 8D 37 03           STA MAXSIZ      SIZE 1 SECTOR
1253  D053- 20 0F F0           JSR OPEN
1254  D056- F0 01              BEQ NEW4
1255  D058- 60         NEWERR  RTS
1256                   *
1257  D059- 8C 96 03   NEW4    STY NEWFIL      SAVE FILE NO
1258  D05C- 20 2D E8           JSR PRFLAB
1259  D05F- A9 20              LDA =' '
1260  D061- AE 96 03           LDX NEWFIL
1261  D064- 20 1B F0           JSR WRITCH      WRITE ONE BLANK
1262  D067- D0 EF              BNE NEWERR
1263  D069- AE 96 03           LDX NEWFIL
1264  D06C- 20 12 F0           JSR CLOSE       CLOSE FILE
1265  D06F- 60                 RTS
1266                   *
1267                           TIT GRAPHICS SUBROUTINES

----------------------------------------------------------------------

GRAPHICS SUBROUTINES               21/10/23   R65 ASSEMBLER  PAGE 28

1268                           PAG

----------------------------------------------------------------------

GRAPHICS SUBROUTINES               21/10/23   R65 ASSEMBLER  PAGE 29

1269                   *
1270                   * SUBROUTINES FOR GRAPHICS
1271                   **************************
1272                   *
1273                   * PLOT (GRX,GRY,GRC)
1274                   ********************
1275                   * USER MUST CHECK VFOR VALID VALUES!
1276                   *
1277  D070- AD AE 03   PLOT    LDA GRX
1278  D073- 4A                 LSR A
1279  D074- 4A                 LSR A
1280  D075- 4A                 LSR A
1281  D076- AA                 TAX             X=GRX/8
1282  D077- A9 1C              LDA =28
1283  D079- 78                 SEI
1284  D07A- 8D E0 14           STA MULTX       MULTX=28
1285  D07D- AD AF 03           LDA GRY
1286  D080- 8D E1 14           STA MULTY       MULTY=GRY
1287  D083- AC E3 14           LDY MULTR+1     Y=HIGH(MULTR)
1288  D086- 58                 CLI
1289  D087- 8A                 TXA             A=GRX/8
1290  D088- 18                 CLC
1291  D089- 6D E2 14           ADC MULTR
1292  D08C- 90 01              BCC PLOT1
1293  D08E- C8                 INY
1294  D08F- 85 E0      PLOT1   STA DATA        A,Y=GRX/8+28*GRY
1295  D091- 98                 TYA
1296  D092- 18                 CLC
1297  D093- 69 07              ADC =7
1298  D095- 85 E1              STA DATA+1      DATA=GRX/8+28*GRY+$700
1299                   *
1300  D097- AD AE 03           LDA GRX
1301  D09A- 29 07              AND =7          A=GRX AND 7
1302  D09C- A8                 TAY             Y=GRX AND Y
1303  D09D- B9 BB D0           LDA MASKTB,Y    A=MASKTB[GRX AND 7]
1304  D0A0- A0 00              LDY =0
1305  D0A2- AE B0 03           LDX GRC         X=GRC
1306  D0A5- F0 0F              BEQ PLOR
1307  D0A7- CA                 DEX
1308  D0A8- F0 07              BEQ PLEOR
1309                   *
1310  D0AA- 49 FF      PLAND   EOR =$FF        NOT MASK
1311  D0AC- 31 E0              AND (DATA),Y    A=[DATA] AND NOT MASK
1312  D0AE- 91 E0              STA (DATA),Y
1313  D0B0- 60                 RTS
1314                   *
1315  D0B1- 51 E0      PLEOR   EOR (DATA),Y    A=[DATA] EOR MASK
1316  D0B3- 91 E0              STA (DATA),Y
1317  D0B5- 60                 RTS
1318                   *

----------------------------------------------------------------------

GRAPHICS SUBROUTINES               21/10/23   R65 ASSEMBLER  PAGE 30

1319  D0B6- 11 E0      PLOR    ORA (DATA),Y    A=[DATA] OR MASK
1320  D0B8- 91 E0              STA (DATA),Y
1321  D0BA- 60                 RTS
1322                   *
1323  D0BB- 80 40 20   MASKTB  BYT $80,$40,$20,$10
1323  D0BE- 10 
1324  D0BF- 08 04 02           BYT $08,$04,$02,$01
1324  D0C2- 01 
1325                   *
1326                   *
1327                   * PLOTCH (GRX,GRY,GRC)
1328                   **********************
1329                   * USER MUST CHECK FOR VALID VALUES OF
1330                   * X AND Y
1331                   *
1332  D0C3- A9 08      PLOTCH  LDA =8          8 BYTES OF MAP
1333  D0C5- 8D B5 03           STA GRYCNT
1334  D0C8- A9 00              LDA =0          MEANS 8 BITS IN ROW
1335  D0CA- 8D B9 03           STA GRYLOW
1336  D0CD- AD AF 03           LDA GRY
1337  D0D0- 18                 CLC
1338  D0D1- 69 07              ADC =7
1339  D0D3- 8D AF 03           STA GRY         START WITH TOP
1340  D0D6- AD B0 03           LDA GRC
1341  D0D9- 29 7F              AND =$7F
1342  D0DB- 38                 SEC
1343  D0DC- E9 20              SBC =$20        RETURN IF CTRL CHAR
1344  D0DE- 10 01              BPL PLOTCH1
1345  D0E0- 60                 RTS
1346                   *
1347  D0E1- 38         PLOTCH1 SEC
1348  D0E2- C9 40              CMP =$40        CONVERT TO UPPER CASE
1349  D0E4- 90 02              BCC PLOTCH2
1350  D0E6- E9 20              SBC =$20
1351                   *
1352  D0E8- A2 D4      PLOTCH2 LDX =>FONTTB
1353  D0EA- 86 E3              STX DOSPNT+1    A=CODE NOW $00-$3F
1354  D0EC- 0A                 ASL A
1355  D0ED- 0A                 ASL A
1356  D0EE- 0A                 ASL A
1357  D0EF- 90 02              BCC *+4
1358  D0F1- E6 E3              INC DOSPNT+1
1359  D0F3- 8D B2 03           STA GRINDEX     8 * CODE
1360  D0F6- A2 00              LDX =0
1361  D0F8- 8E B3 03           STX GRCNT       GRCNT COUNTS MAP BYTES
1362  D0FB- 18                 CLC             DOSPNT=FONTTB+8*CODE
1363  D0FC- 69 00              ADC =<FONTTB
1364  D0FE- 85 E2             STA DOSPNT
1365  D100- 90 02              BCC PLOTCH3
1366  D102- E6 E3              INC DOSPNT+1

----------------------------------------------------------------------

GRAPHICS SUBROUTINES               21/10/23   R65 ASSEMBLER  PAGE 31

1367                   *
1368  D104- A9 80      PLOTCH3 LDA =$80
1369  D106- 8D B4 03           STA GRMASK
1370  D109- AD AE 03           LDA GRX
1371  D10C- 8D B8 03           STA GRXLOW      SAVE GRX FOR NEXT ROW
1372  D10F- AC B3 03   PLOTCH4 LDY GRCNT       COUNTS FROM 0 TO GRYCNT-
1373  D112- AD B4 03           LDA GRMASK
1374  D115- 31 E2              AND (DOSPNT),Y  GET A CHARACTER BIT MAP
1375  D117- F0 08              BEQ PLOTCH5
1376  D119- A2 00              LDX =0          WHITE
1377  D11B- 8E B0 03           STX GRC
1378  D11E- 4C 26 D1           JMP PLOTCH6
1379  D121- A2 02      PLOTCH5 LDX =2          BLACK
1380  D123- 8E B0 03           STX GRC
1381  D126- 20 70 D0   PLOTCH6 JSR PLOT        PLOT THE DOT
1382  D129- EE AE 03           INC GRX         INCREMENT X FOR NEXT DOT
1383  D12C- AD B4 03           LDA GRMASK
1384  D12F- C9 01              CMP =$01        LAST BIT DONE?
1385  D131- F0 15              BEQ PLOTCH8
1386  D133- 4A                 LSR A           SHIFT MASK
1387  D134- 8D B4 03           STA GRMASK
1388  D137- CD B9 03           CMP GRYLOW      ONE ROW DONE?
1389  D13A- D0 D3              BNE PLOTCH4     NEXT BIT
1390  D13C- AD B8 03   PLOTCH7 LDA GRXLOW      RESTORE STARTING GRX
1391  D13F- 8D AE 03           STA GRX
1392  D142- CE AF 03           DEC GRY
1393  D145- 4C 0F D1           JMP PLOTCH4
1394                   *
1395  D148- EE B3 03   PLOTCH8 INC GRCNT       NEXT MAP BYTE
1396  D14B- AD B3 03           LDA GRCNT
1397  D14E- CD B5 03           CMP GRYCNT
1398  D151- F0 0C              BEQ PLOTCH9
1399  D153- AD B8 03           LDA GRXLOW      RESTORE STARTING GRX
1400  D156- 8D AE 03           STA GRX
1401  D159- CE AF 03           DEC GRY
1402  D15C- 4C 04 D1           JMP PLOTCH3
1403                   *
1404  D15F- 60         PLOTCH9 RTS             DONE
1405                   *
1406                   * BITMAP (GRX,GRY,GRMAP)
1407                   ************************
1408                   * USER MUST CHECK FOR VALID VALUES OF
1409                   * X AND Y
1410                   *
1411  D160- AD B6 03   BITMAP  LDA GRMAP       EXCHANGE BYTES
1412  D163- AE B7 03           LDX GRMAP+1
1413  D166- 8D B7 03           STA GRMAP+1
1414  D169- 8E B6 03           STX GRMAP
1415  D16C- AD AF 03           LDA GRY         START ON TOP
1416  D16F- 69 03              ADC =3

----------------------------------------------------------------------

GRAPHICS SUBROUTINES               21/10/23   R65 ASSEMBLER  PAGE 32

1417  D171- 8D AF 03           STA GRY
1418  D174- A9 02              LDA =2          2 BYTES OF MAP
1419  D176- 8D B5 03           STA GRYCNT
1420  D179- A9 08              LDA =8          MEANS 4 BITS IN ROW
1421  D17B- 8D B9 03           STA GRYLOW
1422  D17E- A2 00              LDX =0
1423  D180- 8E B3 03           STX GRCNT       COUNTS MAP BYTES
1424  D183- A9 03              LDA =>GRMAP     SET MAP ADDRESS
1425  D185- 85 E3              STA DOSPNT+1
1426  D187- A9 B6              LDA =<GRMAP
1427  D189- 85 E2              STA DOSPNT
1428  D18B- 4C 04 D1           JMP PLOTCH3
1429                   *
1430                   * DRAWX (GRX,GRY,GRC,GRN)
1431                   *************************
1432                   * USER MUST CHECK FOR VALID VALUES OF
1433                   * X AND Y AND N
1434                   *
1435  D18E- 20 70 D0   DRAWX   JSR PLOT        PLOT A DOT
1436  D191- EE AE 03           INC GRX
1437  D194- CE B1 03           DEC GRN
1438  D197- D0 F5              BNE DRAWX       KEEP DRAWING
1439  D199- 60                 RTS
1440                   *
1441                   * DRAWY (GRX,GRY,GRC,GRN)
1442                   *************************
1443                   * USER MUST CHECK FOR VALID VALUES OF
1444                   * X AND Y AND N
1445                   *
1446  D19A- 20 70 D0   DRAWY   JSR PLOT        PLOT A DOT
1447  D19D- EE AF 03           INC GRY
1448  D1A0- CE B1 03           DEC GRN
1449  D1A3- D0 F5              BNE DRAWY       KEEP DRAWING
1450  D1A5- 60                 RTS
1451                   *
1452                   * DRAWXY (GRX,GRY,GRC,GRN,XINC,YINC)
1453                   ************************************
1454                   * USER MUST CHECK FOR VALID VALUES
1455                   *
1456  D1A6- A9 00      DRAWXY  LDA =0
1457  D1A8- 8D B8 03           STA GRXLOW
1458  D1AB- 8D B9 03           STA GRYLOW
1459  D1AE- 20 70 D0   DRAWXY1 JSR PLOT        PLOT A DOT
1460  D1B1- 18                 CLC             CALCULATE NEXT GRX
1461  D1B2- AD B8 03           LDA GRXLOW
1462  D1B5- 6D B6 03           ADC GRXINC
1463  D1B8- 8D B8 03           STA GRXLOW
1464  D1BB- AD AE 03           LDA GRX
1465  D1BE- 6D B7 03           ADC GRXINC+1
1466  D1C1- 8D AE 03           STA GRX

----------------------------------------------------------------------

GRAPHICS SUBROUTINES               21/10/23   R65 ASSEMBLER  PAGE 33

1467                   *
1468  D1C4- 18                 CLC             CALCULATE NEXT GRY
1469  D1C5- AD B9 03           LDA GRYLOW
1470  D1C8- 6D BA 03           ADC GRYINC
1471  D1CB- 8D B9 03           STA GRYLOW
1472  D1CE- AD AF 03           LDA GRY
1473  D1D1- 6D BB 03           ADC GRYINC+1
1474  D1D4- 8D AF 03           STA GRY
1475                   *
1476  D1D7- CE B1 03           DEC GRN
1477  D1DA- D0 D2              BNE DRAWXY1     KEEP DRAWING
1478  D1DC- 60                 RTS
1479                   *
1480                   *
1481                   * 8x8 BIT CHARACTER TABLE
1482                   *************************
1483                   * FOR CHARACTER DISPLAY IN GRAPHICS MODE
1484                   *
1485                   *
1486  D1DD-                    ORG $D400
1487                   *
1488  D400- 00 00 00   FONTTB  BYT $00,$00,$00
1489  D403- 00 00 00           BYT $00,$00,$00
1490  D406- 00 00              BYT $00,$00
1491  D408- 04 04 04           BYT $04,$04,$04         !
1492  D40B- 04 04 00           BYT $04,$04,$00
1493  D40E- 04 00              BYT $04,$00
1494  D410- 0A 0A 0A           BYT $0A,$0A,$0A         "
1495  D413- 00 00 00           BYT $00,$00,$00
1496  D416- 00 00              BYT $00,$00
1497  D418- 0A 0A 1F           BYT $0A,$0A,$1F         #
1498  D41B- 0A 1F 0A           BYT $0A,$1F,$0A
1499  D41E- 0A 00              BYT $0A,$00
1500  D420- 04 0F 14           BYT $04,$0F,$14         $
1501  D423- 0E 05 1E           BYT $0E,$05,$1E
1502  D426- 04 00              BYT $04,$00
1503  D428- 19 19 02           BYT $19,$19,$02         %
1504  D42B- 04 08 13           BYT $04,$08,$13
1505  D42E- 13 00              BYT $13,$00
1506  D430- 04 0A 0A           BYT $04,$0A,$0A         &
1507  D433- 0C 15 12           BYT $0C,$15,$12
1508  D436- 0D 00              BYT $0D,$00
1509  D438- 04 08 10           BYT $04,$08,$10         '
1510  D43B- 00 00 00           BYT $00,$00,$00
1511  D43E- 00 00              BYT $00,$00
1512  D440- 02 04 08           BYT $02,$04,$08         (
1513  D443- 08 08 04           BYT $08,$08,$04
1514  D446- 02 00              BYT $02,$00
1515  D448- 08 04 02           BYT $08,$04,$02         )
1516  D44B- 02 02 04           BYT $02,$02,$04

----------------------------------------------------------------------

GRAPHICS SUBROUTINES               21/10/23   R65 ASSEMBLER  PAGE 34

1517  D44E- 08 00              BYT $08,$00
1518  D450- 00 04 15           BYT $00,$04,$15         *
1519  D453- 0E 15 04           BYT $0E,$15,$04
1520  D456- 00 00              BYT $00,$00
1521  D458- 00 04 04           BYT $00,$04,$04         +
1522  D45B- 1F 04 04           BYT $1F,$04,$04
1523  D45E- 00 00              BYT $00,$00
1524  D460- 00 00 00           BYT $00,$00,$00         ,
1525  D463- 00 00 08           BYT $00,$00,$08
1526  D466- 08 10              BYT $08,$10
1527  D468- 00 00 00           BYT $00,$00,$00         -
1528  D46B- 1F 00 00           BYT $1F,$00,$00
1529  D46E- 00 00              BYT $00,$00
1530  D470- 00 00 00           BYT $00,$00,$00         .
1531  D473- 00 00 00           BYT $00,$00,$00
1532  D476- 10 00              BYT $10,$00
1533  D478- 01 01 02           BYT $01,$01,$02         /
1534  D47B- 04 08 10           BYT $04,$08,$10
1535  D47E- 10 00              BYT $10,$00
1536  D480- 0E 11 13           BYT $0E,$11,$13         0
1537  D483- 15 19 11           BYT $15,$19,$11
1538  D486- 0E 00              BYT $0E,$00
1539  D488- 04 0C 14           BYT $04,$0C,$14         1
1540  D48B- 04 04 04           BYT $04,$04,$04
1541  D48E- 0E 00              BYT $0E,$00
1542  D490- 0E 11 01           BYT $0E,$11,$01         2
1543  D493- 02 0C 10           BYT $02,$0C,$10
1544  D496- 1F 00              BYT $1F,$00
1545  D498- 1E 01 02           BYT $1E,$01,$02         3
1546  D49B- 04 02 01           BYT $04,$02,$01
1547  D49E- 1E 00              BYT $1E,$00
1548  D4A0- 02 06 0A           BYT $02,$06,$0A         4
1549  D4A3- 12 1F 02           BYT $12,$1F,$02
1550  D4A6- 02 00              BYT $02,$00
1551  D4A8- 1F 10 1E           BYT $1F,$10,$1E         5
1552  D4AB- 01 01 11           BYT $01,$01,$11
1553  D4AE- 0E 00              BYT $0E,$00
1554  D4B0- 07 08 10           BYT $07,$08,$10         6
1555  D4B3- 1E 11 11           BYT $1E,$11,$11
1556  D4B6- 0E 00              BYT $0E,$00
1557  D4B8- 1F 01 02           BYT $1F,$01,$02         7
1558  D4BB- 04 08 08           BYT $04,$08,$08
1559  D4BE- 08 00              BYT $08,$00
1560  D4C0- 0E 11 11           BYT $0E,$11,$11         8
1561  D4C3- 0E 11 11           BYT $0E,$11,$11
1562  D4C6- 0E 00              BYT $0E,$00
1563  D4C8- 0E 11 11           BYT $0E,$11,$11         9
1564  D4CB- 0F 01 02           BYT $0F,$01,$02
1565  D4CE- 1C 00              BYT $1C,$00
1566  D4D0- 00 00 00           BYT $00,$00,$00         10

----------------------------------------------------------------------

GRAPHICS SUBROUTINES               21/10/23   R65 ASSEMBLER  PAGE 35

1567  D4D3- 04 00 00           BYT $04,$00,$00
1568  D4D6- 04 00              BYT $04,$00
1569  D4D8- 00 00 00           BYT $00,$00,$00         :
1570  D4DB- 08 00 08           BYT $08,$00,$08
1571  D4DE- 08 10              BYT $08,$10
1572  D4E0- 03 04 08           BYT $03,$04,$08         <
1573  D4E3- 10 08 04           BYT $10,$08,$04
1574  D4E6- 03 00              BYT $03,$00
1575  D4E8- 00 00 1F           BYT $00,$00,$1F         =
1576  D4EB- 00 1F 00           BYT $00,$1F,$00
1577  D4EE- 00 00              BYT $00,$00
1578  D4F0- 18 04 02           BYT $18,$04,$02         >
1579  D4F3- 01 02 04           BYT $01,$02,$04
1580  D4F6- 18 00              BYT $18,$00
1581  D4F8- 1E 11 01           BYT $1E,$11,$01         ?
1582  D4FB- 02 04 00           BYT $02,$04,$00
1583  D4FE- 04 00             BYT $04,$00
1584  D500- 0E 11 17           BYT $0E,$11,$17         @
1585  D503- 15 17 10           BYT $15,$17,$10
1586  D506- 0E 00              BYT $0E,$00
1587  D508- 0E 11 11           BYT $0E,$11,$11         A
1588  D50B- 1F 11 11           BYT $1F,$11,$11
1589  D50E- 11 00              BYT $11,$00
1590  D510- 1E 11 11           BYT $1E,$11,$11         B
1591  D513- 1E 11 11           BYT $1E,$11,$11
1592  D516- 1E 00              BYT $1E,$00
1593  D518- 0E 11 10           BYT $0E,$11,$10         C
1594  D51B- 10 10 11           BYT $10,$10,$11
1595  D51E- 0E 00              BYT $0E,$00
1596  D520- 1C 12 11           BYT $1C,$12,$11         D
1597  D523- 11 11 12           BYT $11,$11,$12
1598  D526- 1C 00              BYT $1C,$00
1599  D528- 1F 10 10           BYT $1F,$10,$10         E
1600  D52B- 1E 10 10           BYT $1E,$10,$10
1601  D52E- 1F 00              BYT $1F,$00
1602  D530- 1F 10 10           BYT $1F,$10,$10         F
1603  D533- 1E 10 10           BYT $1E,$10,$10
1604  D536- 10 00              BYT $10,$00
1605  D538- 0E 11 10           BYT $0E,$11,$10         G
1606  D53B- 13 11 11           BYT $13,$11,$11
1607  D53E- 0F 00              BYT $0F,$00
1608  D540- 11 11 11           BYT $11,$11,$11         H
1609  D543- 1F 11 11           BYT $1F,$11,$11
1610  D546- 11 00              BYT $11,$00
1611  D548- 0E 04 04           BYT $0E,$04,$04         I
1612  D54B- 04 04 04           BYT $04,$04,$04
1613  D54E- 0E 00              BYT $0E,$00
1614  D550- 07 02 02           BYT $07,$02,$02         J
1615  D553- 02 12 12           BYT $02,$12,$12
1616  D556- 0C 00              BYT $0C,$00

----------------------------------------------------------------------

GRAPHICS SUBROUTINES               21/10/23   R65 ASSEMBLER  PAGE 36

1617  D558- 11 12 14           BYT $11,$12,$14         K
1618  D55B- 18 14 12           BYT $18,$14,$12
1619  D55E- 11 00              BYT $11,$00
1620  D560- 10 10 10           BYT $10,$10,$10         L
1621  D563- 10 10 10           BYT $10,$10,$10
1622  D566- 1F 00              BYT $1F,$00
1623  D568- 11 1B 15           BYT $11,$1B,$15         M
1624  D56B- 15 11 11           BYT $15,$11,$11
1625  D56E- 11 00              BYT $11,$00
1626  D570- 11 19 19           BYT $11,$19,$19         N
1627  D573- 15 13 13           BYT $15,$13,$13
1628  D576- 11 00              BYT $11,$00
1629  D578- 0E 11 11           BYT $0E,$11,$11         O
1630  D57B- 11 11 11           BYT $11,$11,$11
1631  D57E- 0E 00              BYT $0E,$00
1632  D580- 1E 11 11           BYT $1E,$11,$11         P
1633  D583- 1E 10 10           BYT $1E,$10,$10
1634  D586- 10 00              BYT $10,$00
1635  D588- 0E 11 11           BYT $0E,$11,$11         Q
1636  D58B- 11 15 13           BYT $11,$15,$13
1637  D58E- 0D 00              BYT $0D,$00
1638  D590- 1E 11 11           BYT $1E,$11,$11         R
1639  D593- 1E 14 12           BYT $1E,$14,$12
1640  D596- 11 00              BYT $11,$00
1641  D598- 0F 10 10           BYT $0F,$10,$10         S
1642  D59B- 0E 01 01           BYT $0E,$01,$01
1643  D59E- 1E 00              BYT $1E,$00
1644  D5A0- 1F 04 04           BYT $1F,$04,$04         T
1645  D5A3- 04 04 04           BYT $04,$04,$04
1646  D5A6- 04 00              BYT $04,$00
1647  D5A8- 11 11 11           BYT $11,$11,$11         U
1648  D5AB- 11 11 11           BYT $11,$11,$11
1649  D5AE- 0E 00              BYT $0E,$00
1650  D5B0- 11 11 11           BYT $11,$11,$11         V
1651  D5B3- 0A 0A 04           BYT $0A,$0A,$04
1652  D5B6- 04 00              BYT $04,$00
1653  D5B8- 11 11 11           BYT $11,$11,$11         W
1654  D5BB- 15 15 1B           BYT $15,$15,$1B
1655  D5BE- 11 00              BYT $11,$00
1656  D5C0- 11 11 0A           BYT $11,$11,$0A         X
1657  D5C3- 04 0A 11           BYT $04,$0A,$11
1658  D5C6- 11 00              BYT $11,$00
1659  D5C8- 11 11 11           BYT $11,$11,$11         Y
1660  D5CB- 0E 04 04           BYT $0E,$04,$04
1661  D5CE- 04 00              BYT $04,$00
1662  D5D0- 1F 01 02           BYT $1F,$01,$02         Z
1663  D5D3- 04 08 10           BYT $04,$08,$10
1664  D5D6- 1F 00              BYT $1F,$00
1665  D5D8- 1C 10 10           BYT $1C,$10,$10         [
1666  D5DB- 10 10 10           BYT $10,$10,$10

----------------------------------------------------------------------

GRAPHICS SUBROUTINES               21/10/23   R65 ASSEMBLER  PAGE 37

1667  D5DE- 1C 00              BYT $1C,$00
1668  D5E0- FF FF FF           BYT $FF,$FF,$FF
1669  D5E3- FF FF FF           BYT $FF,$FF,$FF
1670  D5E6- FF FF              BYT $FF,$FF
1671  D5E8- 07 01 01           BYT $07,$01,$01         ]
1672  D5EB- 01 01 01           BYT $01,$01,$01
1673  D5EE- 07 00              BYT $07,$00
1674  D5F0- 04 0E 15           BYT $04,$0E,$15         ^
1675  D5F3- 04 04 04           BYT $04,$04,$04
1676  D5F6- 04 00              BYT $04,$00
1677  D5F8- 00 00 00           BYT $00,$00,$00         _
1678  D5FB- 00 00 00           BYT $00,$00,$00
1679  D5FE- 00 1F             BYT $00,$1F
1680                   *
1681                           TIT EXTENDED DISK OPERATING SYSTEM
1682                   *
1683                   * DISK AND EXDOS ARE USING BUFFER AREA
1684                   * AT $D600 - $DFFF. DO NOT USE OTHERWISE
1685                   *
1686  D600-                    END
LABELS=0139
ERRORS=00
RECORDS=6B
