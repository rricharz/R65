----------------------------------------------------------------------

R65 DISK IO - REFERENCE MAP        19/10/23   R65 ASSEMBLER  PAGE 01

0001                   *
0002                   *   ********************************
0003                   *   * R65 DISK AND FILE CONTROLLER *
0004                   *   ********************************
0005                   *
0006                   * EPROM VERSION 1 REVISION 7 15/8/82 RB
0007                   *       - FOR 2 TEAC FD50-E DRIVES
0008                   * RRICHARZ RBAUMANN 1978 - 1982
0009                   * RRICHARZ 2023 MODIFIED FOR LARGER DISK SIZE
0010                   *
0011                   PSTART  EQU $F000       START OF PROGRAM
0012                   SPERTR  EQU 16          SECTORS PER TRACK
0013                   NRSEC   EQU 2560        TOTAL SECTORS (16*160)
0014                   *
0015                           TIT R65 DISK IO - VARIABLES
0016                   *
0017                   * THE R65/JOB DISK CONTROLLER CONTROLS TWO
0018                   * FLOPPY DRIVES. THE DISK FILE HANDLING IS DONE
0019                   * WITH A DIRECTORY ON TRACK 0
0020                   * SEQUENTIAL FILE HANDLING ON DISK AND ON AUDIO
0021                   * TAPE IS ALLOWED. UP TO 8 FILES CAN BE OPEN
0022                   * AT THE SAME TIME
0023                   *
0024                   * IMPROVEMENTS OF REVISION 5:
0025                   *       - WRITE OVERFLOW BUG FIXED
0026                   *       - RANDOM ACCESS FILE COMPATIBILITY
0027                   *       - PROTECTED SEQUENTIAL FILES ALLOWED
0028                   *       - AUTOMATIC RESTORE AFTER DRFIL
0029                   *       - 2 DISK DRIVES
0030                   *       - I-FLAG ONLY SET DURING 1 SECTOR R/W
0031                   *       - FULL FILE NAME(16 CHARS) CHECK
0032                   *       - HEAD UNLOAD TIME 8 REVOLUTIONS
0033                   *       - RECOVERY AFTER DISK NOT READY
0034                   *       - LOADED MESSAGE OPTIONAL
0035                   *
0036                   * PAGE ZERO VARIABLES:
0037                   **********************
0038                   *
0039  0000-                    ORG $DA
0040                   *
0041  00DA-            FILFLG  BSS 1   FILE ENTRY FLAGS
0042                   *               BIT 7 1=PROTECTED
0043                   *               BIT 6 1=NO PRINTING
0044                   *               BIT 5 1=WRITE, 0=READ
0045                   *
0046  00DB-            FILERR  BSS 1   FILE HANDLING ERROR
0047                   *               01 DISK OR TAPE READ ERROR
0048                   *               02 CHECKSUM ERROR
0049                   *               03 ESCAPE EXIT DURING R/W
0050                   *               04 RECORD NO ERROR ON TAPE

----------------------------------------------------------------------

R65 DISK IO - VARIABLES            19/10/23   R65 ASSEMBLER  PAGE 02

0051                   *               05 FILE TYPE ERROR
0052                   *               06 FILE NOT FOUND
0053                   *               07 DISK DRIVE NOT READY
0054                   *               08 DIRECTORY FULL, NOT STORED
0055                   *               23 TOO MANY OPEN FILES
0056                   *               24 DIRECTION OR WRITE PROTECT
0057                   *               25 WRONG FILE NUMBER, NOT OPEN
0058                   *               26 DISK FULL, NOT STORED
0059                   *               27 FILE TOO LONG
0060                   *
0061  00DC-            FILDRV  BSS 1   TAPE OR DISK DRIVE
0062                   *
0063                   * TAPE TEMPORARIES
0064                   *
0065  00DD-            TRECID  BSS 2   RECORD ID OF FIRST RECORD
0066  00DF-            TRECNO  BSS 1   RECORD NUMBER
0067  00E0-            TRECST  BSS 2   START ADDRESS POINTER
0068  00E2-            TRECSI  BSS 1   RECORD SIZE
0069                   *
0070                   * DISK TEMPORARIES
0071                   *
0072  00E3-                    ORG $DD
0073  00DD-            TRACK   BSS 1   CURRENT TRACK
0074  00DE-            SECTOR  BSS 1   CURRENT SECTOR
0075  00DF-            RESSAV  BSS 1   CURRENT FDC RESULT
0076  00E0-            DATA    BSS 2   DATA POINTER
0077  00E2-            DOSPNT  BSS 2   SECOND POINTER
0078  00E4-            FILCNT  BSS 1   DISK FILE POINTER
0079  00E5-            FILCN1  BSS 1
0080                   *
0081                   POINT   EQU $FA USED AS SEQ FILE PNT
0082                   KCHAR   EQU $FE CHAR SAVE FOR WRITCH
0083                   *
0084                   * PAGE 3 DATA REGISTERS
0085                   ***********************
0086                   *
0087  00E6-                    ORG $300
0088                   *
0089  0300-            FILTYP  BSS 1   TYPE OF ACTIVE FILE
0090  0301-            FILNAM  BSS 16  FILE NAME
0091  0311-            FILCYC  BSS 1   CYCLUS NUMBER
0092  0312-            FILSTP  BSS 1   FILE SUBTYPE
0093  0313-            FILLOC  BSS 2   LOCATION OR SECTOR
0094  0315-            FILSIZ  BSS 2   FILE SIZE
0095  0317-            FILDAT  BSS 3   FILE GENERATION DATE
0096  031A-            FILSA   BSS 2   START ADDRESS
0097  031C-            FILEA   BSS 2   END ADDRESS
0098  031E-            FILLNK  BSS 2   FILE LINK
0099                   *
0100  0320-            FILNM1  BSS 16

----------------------------------------------------------------------

R65 DISK IO - VARIABLES            19/10/23   R65 ASSEMBLER  PAGE 03

0101  0330-            FILCY1  BSS 1
0102  0331-            FILSA1  BSS 2
0103  0333-            SAVRST  BSS 2
0104                   *
0105  0335-            CURSEQ  BSS 1   CURRENT SEQUENTIAL FILE
0106  0336-            MAXSEQ  BSS 1   MAX NO OF SEQ FILE
0107  0337-            MAXSIZ  BSS 1   MAX SIZE
0108  0338-            FILBU1  BSS 1   START OF BUFFERS
0109                   *
0110                   * TABLE FOR 8 OPEN SEQUENTIAL FILES
0111                   *
0112  0339-            FIDRTB  BSS 8   BIT 7 1=WRITE, 0=READ
0113                   *               BIT 6 1=RANDOM ACCESS
0114                   *               BIT 5 1=FILE IS OPEN
0115  0341-            FIDVTB  BSS 8   DRIVE NUMBER
0116  0349-            FIBPTB  BSS 8   BUFFER POINTER LOW BYTE
0117  0351-            FIRCTB  BSS 8   NO OF LAST RECORD
0118  0359-            FIMAXT  BSS 8   MAXIMAL NO OF RECORDS
0119  0361-            FITEMP  BSS 24  TAPE: RECORD ID SAVE (2)
0120                   *               DISK: FIRST SECTOR (2)
0121                   *               AND DIRECTORY ENTRY NO
0122                   *               (1)
0123  0379-            EXITPN  BSS 1   DISK STACK POINTER SAVE
0124  037A-            BUFSEC  BSS 1   CURRENT SECTOR
0125  037B-            SCY     BSS 1   FOUND CYCLUS
0126  037C-            SCYFC   BSS 1   FILE ENTRY OF CY
0127  037D-            SLAST   BSS 1   END OF DIRECTORY MARK
0128  037E-            DISFLG  BSS 1   DISK FLAG REGISTER
0129                   *               BIT 7 DRIVE 0 INITIALIZED
0130                   *               BIT 6 DRIVE 1 INITIALIZED
0131  037F-            DISCNT  BSS 1   SPECIAL DISK COUNTER
0132                   *
0133                   *
0134                   * BUFFERS:
0135                   **********
0136                   *
0137  0380-                    ORG $D600
0138  D600-            DIRBUF  BSS $100        DISK DIRECTORY BUFFER
0139  D700-            FILBUF  BSS $800        FILE BUFFER MAX 8
0140                   *                       FILES ALLOWED
0141                   *
0142                   * PAGE 17 DATA AREA
0143                   *******************
0144                   *
0145  DF00-                    ORG $1780
0146                   *
0147  1780-            VFLAG   BSS 1
0148  1781-            SFLAG   BSS 1
0149                   *
0150                   * INTERFACE ADDRESSES

----------------------------------------------------------------------

R65 DISK IO - VARIABLES            19/10/23   R65 ASSEMBLER  PAGE 04

0151                   *********************
0152                   *
0153                   FDCOM   EQU $14C0       COMMAND REGISTER
0154                   FDSTAT  EQU $14C0       STATUS REGISTER
0155                   FDPARA  EQU $14C1       PARAMETER REGISTER
0156                   FDRES   EQU $14C1       RESULT REGISTER
0157                   FDTSTM  EQU $14C2       TEST MODE REGISTER
0158                   FDDAT   EQU $14C4       DACK ADDRESS
0159                   USPBD   EQU $1702       LED DISPLAY
0160                   *
0161                   * VECTORS TO OTHER EPROMS OF OS
0162                   *******************************
0163                   *
0164                   GETCHR  EQU $E003       GET CHAR
0165                   PRTINF  EQU $E027       PRINT A STRING
0166                   PRTAX   EQU $E030       PRINT TWO BYTES
0167                   TWRFIL  EQU $E80C       WRITE TAPE FILE LABEL
0168                   TPWAIT  EQU $E80F       READY MESSAGE FOR TAPE
0169                   TRDREC  EQU $E812       LOAD A RECORD FROM TAPE
0170                   TWRREC  EQU $E818       WRITE A RECORD TO TAPE
0171                   SETID   EQU $E82A       SET SET TAPE ID
0172                   SETFID  EQU $E81E       SET DATE TO FILE LABEL
0173                   TAPEON  EQU $E821       START TAPE DRIVE
0174                   TAPEOF  EQU $E824       STOP TAPE DRIVE
0175                   TDELAY  EQU $E827       WAIT 1 SEC
0176                   PRFLAB  EQU $E82D       PRINT FILE LABEL
0177                   TRDLBR  EQU $E830       READ LABEL RECORD
0178                   *
0179                           TIT R65 DISK IO - FILE HANDLER
0180                           PAG

----------------------------------------------------------------------

R65 DISK IO - FILE HANDLER         19/10/23   R65 ASSEMBLER  PAGE 05

0181                   *
0182                   * START OF PROGRAM
0183                   *
0184  1782-                    ORG PSTART
0185                   *
0186                   * VECTORS FOR SUBROUTINE CALLS
0187                   ******************************
0188                   *
0189  F000- 4C 81 F7           JMP DWRFIL      WRITE BLOCK TO DISK
0190  F003- 4C 2E F7           JMP DRDFIL      READ BLOCK FROM DISK
0191  F006- 4C 2A F3           JMP RSTFLD      RESET DISK CONTROLLER
0192  F009- 4C 93 F6           JMP DDIR        PRINT DISK DIRECTORY
0193  F00C- 4C D6 F6           JMP DELETE      DELETE FILE ON DISK
0194  F00F- 4C 1E F0           JMP OPEN        OPEN SEQUENTIAL FILE
0195  F012- 4C BF F2           JMP CLOSE       CLOSE SEQUENTIAL FILE
0196  F015- 4C 09 F3           JMP CLOSAL      CLOSE ALL FILES
0197  F018- 4C 6B F1           JMP READCH      READ A CHAR FROM FILE
0198  F01B- 4C 2C F2           JMP WRITCH      WRITE A CHAR TO FILE
0199                   *
0200                   *
0201                   * OPEN SEQUENTIAL FILE
0202                   **********************
0203                   *
0204                   * ENTRY: FILNM1,FILCY1,FILDRV,FILFLG (R/W)
0205                   *   FOR WRITE ONLY: FILSTP, FILLOC (TAPE)
0206                   *                   MAXSIZ
0207                   * FILNAM AND FILCYC ARE COPIED FROM FILNM1
0208                   * AND FILCY1
0209                   *
0210                   * EXIT: NO OF OPEN FILE IN Y, STATUS IN A
0211                   *       AND FILERR, Y ONLY VALID IF A=0
0212                   *
0213  F01E- AC 36 03   OPEN    LDY MAXSEQ      SEARCH AN EMPTY ENTRY
0214  F021- B9 39 03           LDA FIDRTB,Y    BIT 6=1: ENTRY USED
0215  F024- 29 20              AND =$20
0216  F026- F0 08              BEQ OPEN1
0217  F028- 88                 DEY
0218  F029- 10 F6              BPL OPEN+3
0219                   *
0220  F02B- A9 23              LDA =$23        ERROR 23
0221  F02D- 85 DB              STA FILERR
0222  F02F- 60                 RTS
0223                   *
0224  F030- 8C 35 03   OPEN1   STY CURSEQ      SAVE CURRENT ENTRY NO
0225  F033- A5 DA              LDA FILFLG
0226  F035- 0A                 ASL A
0227  F036- 0A                 ASL A
0228  F037- 29 80              AND =$80        GET R/W DIRECTION FLAG
0229  F039- 99 39 03           STA FIDRTB,Y    BIT 7=1: WRITE
0230  F03C- F0 23              BEQ OPEN2       SKIP, IF READ

----------------------------------------------------------------------

R65 DISK IO - FILE HANDLER         19/10/23   R65 ASSEMBLER  PAGE 06

0231                   *
0232  F03E- A9 53              LDA ='S'        FOR WRITE ONLY:
0233  F040- 8D 00 03           STA FILTYP      SET FILTYP TO S
0234  F043- A9 00              LDA =0
0235  F045- A2 03              LDX =3
0236  F047- 9D 1A 03           STA FILSA,X     CLEAR FILSA AND FILEA
0237  F04A- CA                 DEX
0238  F04B- 10 FA              BPL *-4
0239  F04D- 8D 15 03           STA FILSIZ      CLEAR FILSIZ
0240  F050- 8D 16 03           STA FILSIZ+1
0241  F053- 20 1E E8           JSR SETFID      SET FILE DATE
0242                   *
0243  F056- A2 10              LDX =16         SET FILNM1 AND
0244  F058- BD 20 03           LDA FILNM1,X    FILCY1
0245  F05B- 9D 01 03           STA FILNAM,X
0246  F05E- CA                 DEX
0247  F05F- 10 F7              BPL *-7
0248                   *
0249  F061- A9 00      OPEN2   LDA =0
0250  F063- 99 49 03           STA FIBPTB,Y    BUFFER POINTER
0251  F066- 99 51 03           STA FIRCTB,Y    RECORD COUNTER
0252  F069- A5 DC              LDA FILDRV
0253  F06B- 99 41 03           STA FIDVTB,Y    SET DRIVE NUMBER
0254                   *
0255  F06E- 29 04              AND =4          TEST DRIVE TYPE
0256  F070- F0 61              BEQ DOPEN       OPEN A DISK FILE
0257                   *
0258  F072- AE 36 03   TOPEN   LDX MAXSEQ      TEST: ONLY ONE OPEN
0259  F075- BD 39 03   TOPEN1  LDA FIDRTB,X    IS THIS ENTRY OPEN?
0260  F078- 29 20              AND =$20
0261  F07A- F0 07              BEQ TOPEN2      SKIP, IF NOT
0262  F07C- BD 41 03           LDA FIDVTB,X
0263  F07F- C5 DC              CMP FILDRV
0264  F081- F0 43              BEQ TOPEN5      SKIP, IF DOUBLE DRIVE
0265  F083- CA         TOPEN2  DEX
0266  F084- 10 EF              BPL TOPEN1
0267                   *
0268  F086- 20 0F E8           JSR TPWAIT
0269                   *
0270  F089- B9 39 03           LDA FIDRTB,Y    TEST DIRECTION
0271  F08C- 30 3D              BMI TOPEN7
0272                   *
0273  F08E- 20 30 E8           JSR TRDLBR      GET LABEL RECORD
0274  F091- 20 51 F1           JSR PRFLB1      PRINT LABEL, IF ALLOWED
0275                   *
0276  F094- AD 00 03           LDA FILTYP
0277  F097- 29 7F              AND =$7F
0278  F099- C9 53              CMP ='S'        IS IT A SEQUENTIAL FILE
0279  F09B- F0 05              BEQ *+7
0280  F09D- A9 05              LDA =$05        ERROR 5

----------------------------------------------------------------------

R65 DISK IO - FILE HANDLER         19/10/23   R65 ASSEMBLER  PAGE 07

0281  F09F- 85 DB              STA FILERR
0282  F0A1- 60                 RTS
0283                   *
0284  F0A2- 20 59 F1           JSR CPOINT      COMPUTE BUFFER POINTER
0285  F0A5- A9 FE              LDA =$FE        SET EOF MARK
0286  F0A7- 91 FA              STA (POINT),Y
0287                   *
0288  F0A9- 20 2A E8   TOPEN4  JSR SETID       COMPUTE ID
0289  F0AC- A5 DD              LDA TRECID
0290  F0AE- AC 35 03           LDY CURSEQ
0291  F0B1- 99 61 03           STA FITEMP,Y    SAVE ID FOR DATA REC
0292  F0B4- A5 DE              LDA TRECID+1
0293  F0B6- 99 69 03           STA FITEMP+8,Y
0294                   *
0295  F0B9- B9 39 03   OPEN3   LDA FIDRTB,Y    AND OPEN NOW FILE
0296  F0BC- 09 20              ORA =$20
0297  F0BE- 99 39 03           STA FIDRTB,Y
0298                   *
0299  F0C1- A9 00              LDA =0          NORMAL EXIT
0300  F0C3- 85 DB              STA FILERR
0301  F0C5- 60                 RTS
0302                   *
0303  F0C6- A9 26      TOPEN5  LDA =$26        ERROR 26
0304  F0C8- 85 DB              STA FILERR
0305  F0CA- 60                 RTS
0306                   *
0307  F0CB- 20 0C E8   TOPEN7  JSR TWRFIL      WRITE LABEL RECORD
0308  F0CE- F0 D9              BEQ TOPEN4      SKIP, IF OK
0309  F0D0- 85 DB              STA FILERR      OR EXIT WITH ERROR
0310  F0D2- 60                 RTS
0311                   *
0312  F0D3- B9 39 03   DOPEN   LDA FIDRTB,Y    TEST DIRECTION
0313  F0D6- 30 43              BMI DOPEN2
0314                   *
0315  F0D8- 20 2C F6           JSR PREPRD      DISK READ FILE
0316  F0DB- 20 51 F1           JSR PRFLB1
0317  F0DE- AD 00 03           LDA FILTYP
0318  F0E1- 29 7F              AND =$7F
0319  F0E3- C9 53              CMP ='S'        MUST BE SEQUENTIAL
0320  F0E5- F0 05              BEQ *+7
0321  F0E7- A9 05              LDA =5
0322  F0E9- 4C FD F5           JMP DISCER1
0323                   *
0324  F0EC- 20 25 F6           JSR ENDDO
0325  F0EF- 20 FF F0           JSR DOPEN1
0326  F0F2- 20 59 F1           JSR CPOINT
0327  F0F5- A9 FE              LDA =$FE        SET EOR MARK
0328  F0F7- 91 FA              STA (POINT),Y
0329  F0F9- AC 35 03           LDY CURSEQ
0330  F0FC- 4C B9 F0           JMP OPEN3       OPEN THE FILE

----------------------------------------------------------------------

R65 DISK IO - FILE HANDLER         19/10/23   R65 ASSEMBLER  PAGE 08

0331                   *
0332  F0FF- AC 35 03  DOPEN1  LDY CURSEQ      SUBROUTINE
0333  F102- AD 14 03           LDA FILLOC+1    GET FIRST SECTOR
0334  F105- 99 61 03           STA FITEMP,Y
0335  F108- AD 13 03           LDA FILLOC
0336  F10B- 99 69 03           STA FITEMP+8,Y
0337  F10E- AD 16 03           LDA FILSIZ+1
0338  F111- 99 59 03           STA FIMAXT,Y    NO OF SECTORS
0339  F114- AD 7C 03           LDA SCYFC       DIRECTORY ENTRY NO
0340  F117- 99 71 03           STA FITEMP+16,Y
0341  F11A- 60                 RTS
0342                   *
0343  F11B- 20 51 F6   DOPEN2  JSR PREPWRA     DISK WRITE FILE
0344  F11E- 8E 11 03           STX FILCYC
0345  F121- 20 6D F6           JSR PREPWRB
0346  F124- A9 FF              LDA =$FF        COMPUTE FREE SPACE
0347  F126- C0 00              CPY =0          MAX 255 SECTORS
0348  F128- D0 01              BNE *+3
0349  F12A- 8A                 TXA
0350  F12B- 20 34 F1           JSR DOPEN3      SET UP DIRECTORY
0351  F12E- AC 35 03           LDY CURSEQ
0352  F131- 4C B9 F0           JMP OPEN3       OPEN NOW THE FILE
0353                   *
0354  F134- 8D 16 03   DOPEN3  STA FILSIZ+1    SET SIZE OF FILE
0355  F137- 8D 1D 03           STA FILEA+1
0356  F13A- A9 00              LDA =0
0357  F13C- 8D 1A 03           STA FILSA
0358  F13F- 8D 1C 03           STA FILEA
0359  F142- 8D 1B 03           STA FILSA+1
0360  F145- AD 7D 03   DOPEN4  LDA SLAST
0361  F148- 8D 7C 03           STA SCYFC
0362  F14B- 20 FF F0           JSR DOPEN1
0363  F14E- 4C C6 F7           JMP DWRFI6
0364                   *
0365                   * PRINT FILE LABEL, IF ALLOWED
0366                   ******************************
0367                   *
0368  F151- 24 DA      PRFLB1  BIT FILFLG
0369  F153- 70 03              BVS *+5
0370  F155- 4C 2D E8           JMP PRFLAB
0371  F158- 60                 RTS
0372                   *
0373                   * COMPUTE BUFFER POINTER (POINT),Y
0374                   **********************************
0375                   * CURSEQ IS USED AS FILE NUMBER
0376                   *
0377  F159- AE 35 03   CPOINT  LDX CURSEQ
0378  F15C- BC 49 03           LDY FIBPTB,X    GET LOW POINTER
0379  F15F- A9 00              LDA =0
0380  F161- 85 FA              STA POINT

----------------------------------------------------------------------

R65 DISK IO - FILE HANDLER         19/10/23   R65 ASSEMBLER  PAGE 09

0381  F163- 8A                 TXA
0382  F164- 18                 CLC
0383  F165- 6D 38 03           ADC FILBU1      AND START OF FILE
0384  F168- 85 FB              STA POINT+1     BUFFERS, FULLPAGE
0385  F16A- 60                 RTS
0386                   *
0387                   * READCH: READ CHAR FROM FILE IN X
0388                   **********************************
0389                   * ENTRY: x,FILDRV
0390                   * EXIT: FILERR IN Y AND STATUS, CHAR IN A
0391                   * CHAR =$1F MEANS EOF, CHAR=$1D MEANS ERROR
0392                   *
0393  F16B- A9 00      READCH  LDA =0          MUST BE READ FILE
0394  F16D- 20 BD F1           JSR TESTFN
0395  F170- 8E 35 03           STX CURSEQ
0396  F173- 20 59 F1           JSR CPOINT
0397  F176- B1 FA              LDA (POINT),Y   GET ONE CHAR FROM FILE
0398  F178- 30 23              BMI READC4      SKIP, IF BIT 7 SET
0399                   *
0400  F17A- AE 35 03   READC0  LDX CURSEQ
0401  F17D- C8                 INY             COUNT CHAR
0402  F17E- D0 09              BNE READC2      SKIP, IF NOT EOR
0403                   *
0404  F180- 48         READC1  PHA             SAV CHAR
0405  F181- 20 15 F2           JSR RDSREC      GET NEXT RECORD
0406  F184- D0 11              BNE READC3      SKIP, IF ERROR
0407  F186- 68                 PLA             IF OK, GET CHAR BACK
0408  F187- A0 00              LDY =0
0409                   *
0410  F189- 48         READC2  PHA             SAVE CHAR AGAIN
0411  F18A- 98                 TYA             POINTER TO A
0412  F18B- AE 35 03           LDX CURSEQ
0413  F18E- 9D 49 03           STA FIBPTB,X    STORE POINTER
0414  F191- 68                 PLA
0415  F192- A0 00      READC7  LDY =0          NORMAL EXIT
0416  F194- 84 DB              STY FILERR
0417  F196- 60                 RTS
0418                   *
0419  F197- 98         READC3  TYA             READ ERROR
0420  F198- 68                 PLA
0421  F199- A9 1D              LDA =$1D
0422  F19B- D0 F7              BNE READC7+2    ALLWAYS TAKEN
0423                   *
0424  F19D- C9 FE      READC4  CMP =$FE        EOR?
0425  F19F- D0 06              BNE READC5
0426  F1A1- 20 80 F1           JSR READC1      GET NEXT RECORD
0427  F1A4- F0 C5              BEQ READCH      OK, GET CHAR
0428  F1A6- 60                 RTS             ERROR, RETURN
0429                   *
0430  F1A7- C9 FF      READC5  CMP =$FF        END OF FILE?

----------------------------------------------------------------------

R65 DISK IO - FILE HANDLER         19/10/23   R65 ASSEMBLER  PAGE 10

0431  F1A9- D0 04              BNE READC6
0432  F1AB- A9 1F              LDA =$1F        END OF FILE
0433  F1AD- D0 E3              BNE READC7      ALLWAYS TAKEN, OK
0434                   *
0435  F1AF- 38         READC6  SEC             COUNT ONE BLANK
0436  F1B0- E9 01              SBC =1
0437  F1B2- 91 FA              STA (POINT),Y
0438  F1B4- AA                 TAX
0439  F1B5- A9 20              LDA =$20
0440  F1B7- E0 80              CPX =$80
0441  F1B9- F0 BF              BEQ READC0      IF LAST BLANK, INCREASE
0442  F1BB- D0 D5              BNE READC7      ELSE SAME PNT AGAIN
0443                   *
0444                   * TESTFN: TEST FILE NUMBER IN X
0445                   *******************************
0446                   * A=00: MUST BE OPEN SEQUENTIAL READ FILE
0447                   * A=80: MUST BE OPEN SEQUENTIAL WRITE FILE
0448                   *
0449  F1BD- EC 36 03   TESTFN  CPX MAXSEQ
0450  F1C0- B0 0F              BCS TESTF1
0451                   *
0452  F1C2- 5D 39 03   TESTF0  EOR FIDRTB,X
0453  F1C5- 30 15              BMI TESTF2      DIRECTON ERROR, SKIP
0454  F1C7- BD 39 03           LDA FIDRTB,X
0455  F1CA- 29 60              AND =$60        TEST FOR NOT OPEN
0456  F1CC- C9 20              CMP =$20        OR RANDOM ACCESS FILE
0457  F1CE- D0 03              BNE TESTF3      SKIP, IF NOT OPEN
0458  F1D0- 60                 RTS
0459                   *
0460  F1D1- F0 EF      TESTF1  BEQ TESTF0
0461  F1D3- A0 25      TESTF3  LDY =$25        WRONG FILE TYPE
0462  F1D5- 68                 PLA             NUMBER
0463  F1D6- 68                 PLA
0464  F1D7- 84 DB              STY FILERR
0465  F1D9- A9 1E              LDA =$1E
0466  F1DB- 60                 RTS
0467                   *
0468  F1DC- A0 24      TESTF2  LDY =$24        DIRECTION ERROR
0469  F1DE- D0 F5              BNE TESTF1+4    ALLWAYS TAKEN
0470                   *
0471                   * PREPSR: PREPARE SEQUENTIAL RECORD R/W
0472                   ***************************************
0473                   *
0474  F1E0- 20 59 F1   PREPSR  JSR CPOINT
0475  F1E3- A5 FA              LDA POINT
0476  F1E5- A4 FB              LDY POINT+1
0477  F1E7- 85 E0              STA TRECST
0478  F1E9- 84 E1              STY TRECST+1
0479  F1EB- BD 51 03           LDA FIRCTB,X
0480  F1EE- 85 DF              STA TRECNO

----------------------------------------------------------------------

R65 DISK IO - FILE HANDLER         19/10/23   R65 ASSEMBLER  PAGE 11

0481  F1F0- E6 DF              INC TRECNO
0482  F1F2- BD 61 03           LDA FITEMP,X
0483  F1F5- 85 DD              STA TRECID
0484  F1F7- BD 69 03           LDA FITEMP+8,X
0485  F1FA- 85 DE              STA TRECID+1
0486  F1FC- BD 41 03           LDA FIDVTB,X
0487  F1FF- 85 DC             STA FILDRV
0488  F201- 29 04              AND =4          TEST DISK OR TAPE
0489  F203- 60                 RTS
0490                   *
0491                   * ENDSR: END OF SEQUENTIAL RECORD R/W
0492                   *************************************
0493                   *
0494  F204- 48         ENDSRT  PHA             ENTRY FOR TAPE ROUTINES
0495  F205- 20 24 E8           JSR TAPEOF
0496  F208- 58                 CLI
0497  F209- 68                 PLA
0498                   *
0499  F20A- D0 08      ENDSRD  BNE ENDSR1      ENTRY FOR DISK ROUTINES
0500  F20C- 48                 PHA
0501  F20D- AE 35 03           LDX CURSEQ
0502  F210- FE 51 03           INC FIRCTB,X
0503  F213- 68                 PLA
0504  F214- 60         ENDSR1  RTS
0505                   *
0506                   * RDSREC: READ SEQUENTIAL RECORD
0507                   ********************************
0508                   *
0509  F215- 20 E0 F1   RDSREC  JSR PREPSR
0510  F218- F0 09              BEQ RDSRE1      SKIP,IFDISK
0511                   *
0512  F21A- 20 21 E8           JSR TAPEON
0513  F21D- 20 12 E8           JSR TRDREC
0514  F220- 4C 04 F2           JMP ENDSRT
0515                   *
0516  F223- 20 9E F2   RDSRE1  JSR PREPSR1
0517  F226- 20 57 F4           JSR READ
0518  F229- 4C 98 F2           JMP ENDSR2
0519                   *
0520                   * WRITCH: WRITE CHAR IN A TO FILE IN X
0521                   **************************************
0522                   * ENTRY: A,X,FILFLG
0523                   * EXIT: FILERR IN Y AND STATUS
0524                   *
0525  F22C- 29 7F      WRITCH  AND =$7F        MASK OFF BIT 7
0526  F22E- C9 0A              CMP =$A         IGNORE LF
0527  F230- D0 01              BNE *+3
0528  F232- 60                 RTS
0529  F233- 85 FE              STA KCHAR       SAVE CHAR DURING TEST
0530  F235- A9 80              LDA =$80        MUST BE WRITE FILE

----------------------------------------------------------------------

R65 DISK IO - FILE HANDLER         19/10/23   R65 ASSEMBLER  PAGE 12

0531  F237- 20 BD F1           JSR TESTFN
0532  F23A- 8E 35 03           STX CURSEQ
0533  F23D- 20 59 F1           JSR CPOINT
0534  F240- A5 FE              LDA KCHAR
0535  F242- C9 20              CMP =$20        BLANK?
0536  F244- F0 20              BEQ WRITC4
0537                   *
0538  F246- 91 FA      WRITC0  STA (POINT),Y
0539  F248- C9 FF              CMP =$FF                EOF?
0540  F24A- F0 03              BEQ WRITC1      YES, STORE BUFFER
0541                   *
0542  F24C- C8                 INY             ELSE COUNT
0543  F24D- D0 07              BNE WRITC2
0544                   *
0545  F24F- 20 7F F2   WRITC1  JSR WRSREC
0546  F252- D0 0E              BNE WRITC3      SKIP, IF ERROR
0547  F254- A0 00              LDY =0          ELSE NEW BUFFER
0548                   *
0549  F256- AE 35 03   WRITC2  LDX CURSEQ
0550  F259- 98                 TYA
0551  F25A- 9D 49 03           STA FIBPTB,X
0552  F25D- A0 00              LDY =0
0553  F25F- 84 DB              STY FILERR
0554  F261- 60                 RTS             NORMAL EXIT
0555                   *
0556  F262- 98         WRITC3  TYA
0557  F263- 84 DB              STY FILERR      ERROR EXIT
0558  F265- 60                 RTS
0559                   *
0560  F266- A9 81      WRITC4  LDA =$81        BLANK
0561  F268- C0 00              CPY =0          PRINT,IF START OF
0562  F26A- F0 DA              BEQ WRITC0      BUFFER
0563  F26C- 88                 DEY             ELSE LOOK AT LAST CHAR
0564  F26D- B1 FA              LDA (POINT),Y
0565  F26F- 10 09              BPL WRITC5      SKIP, IF NOT BLANK
0566  F271- C9 FC              CMP =$FC        MAX BLANK COUNTER
0567  F273- B0 05              BCS WRITC5
0568  F275- 18                 CLC
0569  F276- 69 01              ADC =1
0570  F278- 30 CC              BMI WRITC0      ALLWAYS TAKEN
0571                   *
0572  F27A- C8         WRITC5  INY
0573  F27B- A9 81              LDA =$81
0574  F27D- D0 C7              BNE WRITC0      ALLWAYS TAKEN
0575                   *
0576                   * WRSREC: WRITE SEQUENTIAL RECORD
0577                   *********************************
0578                   *
0579  F27F- 20 E0 F1   WRSREC  JSR PREPSR
0580  F282- F0 0E              BEQ WRSRE1      SKIP, IF DISK

----------------------------------------------------------------------

R65 DISK IO - FILE HANDLER         19/10/23   R65 ASSEMBLER  PAGE 13

0581                   *
0582  F284- 20 21 E8           JSR TAPEON
0583  F287- 20 27 E8           JSR TDELAY
0584  F28A- A9 00              LDA =0
0585  F28C- 20 18 E8           JSR TWRREC
0586  F28F- 4C 04 F2           JMP ENDSRT
0587                   *
0588  F292- 20 9E F2   WRSRE1  JSR PREPSR1
0589  F295- 20 25 F4           JSR WRITE
0590                   *
0591  F298- 20 25 F6   ENDSR2  JSR ENDDO
0592  F29B- 4C 0A F2           JMP ENDSRD
0593                   *
0594  F29E- C6 DF      PREPSR1 DEC TRECNO      FIRST RECORD IS 0
0595  F2A0- A5 DF              LDA TRECNO
0596  F2A2- DD 59 03           CMP FIMAXT,X    TEST SIZE OF FILE
0597  F2A5- 90 07              BCC PREPSR2
0598  F2A7- 68                 PLA
0599  F2A8- 68                 PLA
0600  F2A9- A9 27              LDA =$27        FILE TOO LONG
0601  F2AB- 85 DB              STA FILERR
0602  F2AD- 60                 RTS
0603                   *
0604  F2AE- A5 DE      PREPSR2 LDA SECTOR      SET BINARY RECORD
0605  F2B0- 18                 CLC
0606  F2B1- 65 DF              ADC TRECNO
0607  F2B3- 85 DE              STA SECTOR
0608  F2B5- 90 02              BCC *+4
0609  F2B7- E6 DD              INC TRACK
0610  F2B9- 20 CC F4           JSR PREPDO1
0611  F2BC- 4C 5C F5           JMP PREPRW1-2   CONVERT TO TRACK/SECTOR
0612                   *
0613                   * CLOSE: CLOSE EXISTING FILE IN X
0614                   *********************************
0615                   * EXIT: FILERRIN Y AND STATUS
0616                   *
0617  F2BF- BD 39 03   CLOSE   LDA FIDRTB,X
0618  F2C2- 20 BD F1           JSR TESTFN
0619  F2C5- 8E 35 03           STX CURSEQ
0620  F2C8- BD 39 03           LDA FIDRTB,X
0621  F2CB- 29 80              AND =$80
0622  F2CD- F0 07              BEQ CLOSE1      SKI, IF READ
0623                   *
0624  F2CF- A9 FF              LDA =$FF        WRITE LAST CHAR
0625  F2D1- 20 2E F2           JSR WRITCH+2
0626  F2D4- D0 13              BNE CLOSE2+2    SKIP, IF ERROR
0627                   *
0628  F2D6- BD 39 03   CLOSE1  LDA FIDRTB,X
0629  F2D9- 29 DF              AND =$DF        CLOSE ENTRY IN TABLE
0630  F2DB- 9D 39 03           STA FIDRTB,X

----------------------------------------------------------------------

R65 DISK IO - FILE HANDLER         19/10/23   R65 ASSEMBLER  PAGE 14

0631  F2DE- BD 41 03           LDA FIDVTB,X
0632  F2E1- 29 02              AND =2
0633  F2E3- F0 05              BEQ CLOSE3      SKIP, IF DISK
0634  F2E5- A0 00              LDY =0          NORMAL EXIT
0635                   *
0636  F2E7- 84 DB      CLOSE2  STY FILERR
0637  F2E9- 60                 RTS
0638                   *
0639  F2EA- BD 39 03   CLOSE3  LDA FIDRTB,X    TEST DIRECTION
0640  F2ED- 30 01              BMI *+3
0641  F2EF- 60                 RTS
0642                   *
0643  F2F0- 20 A7 F4           JSR PREPDO
0644  F2F3- AE 35 03           LDX CURSEQ
0645  F2F6- BD 71 03           LDA FITEMP+16,X GET FILE ENTRY NO
0646  F2F9- 8D 7D 03           STA SLAST
0647  F2FC- AA                 TAX
0648  F2FD- 20 D2 F4          JSR GETFENT
0649  F300- AE 35 03           LDX CURSEQ
0650  F303- BD 51 03           LDA FIRCTB,X    GET ACTUAL SIZE
0651  F306- 4C 34 F1           JMP DOPEN3      AND SET UP DIRECTORY
0652                   *
0653                   * CLOSAL: CLOSE ALL SEQUENTIAL FILES
0654                   ************************************
0655                   *
0656  F309- AE 36 03   CLOSAL  LDX MAXSEQ
0657  F30C- 8E 35 03           STX CURSEQ
0658                   *
0659  F30F- AE 35 03   CLOSA1  LDX CURSEQ
0660  F312- BD 39 03           LDA FIDRTB,X    FILE OPEN?
0661  F315- 29 60              AND =$60        AND SEQUENTIAL
0662  F317- C9 20              CMP =$20
0663  F319- D0 03              BNE *+5
0664  F31B- 20 BF F2           JSR CLOSE       CLOSE IT
0665  F31E- D0 09              BNE CLOSA2
0666  F320- CE 35 03           DEC CURSEQ
0667  F323- 10 EA              BPL CLOSA1
0668  F325- A0 00              LDY =0
0669  F327- 84 DB              STY FILERR
0670  F329- 60         CLOSA2  RTS
0671                   *
0672                   * RSTFLD: RESET FLOPPY DISK CONTROLLER
0673                   **************************************
0674                   *
0675  F32A- A2 07      RSTFLD  LDX =7          MAX 8 OPEN FILES
0676  F32C- 8E 36 03           STX MAXSEQ      DEFAULT, CAN BE <8
0677  F32F- A9 D7              LDA =>FILBUF    DEFAULT BUFFER
0678  F331- 8D 38 03           STA FILBU1
0679  F334- A9 00              LDA =0          CLEAR ENTRIES
0680  F336- 9D 39 03           STA FIDRTB,X

----------------------------------------------------------------------

R65 DISK IO - FILE HANDLER         19/10/23   R65 ASSEMBLER  PAGE 15

0681  F339- CA                 DEX
0682  F33A- 10 FA              BPL *-4
0683                   *
0684  F33C- 8D 7E 03           STA DISFLG      CLEAR INITIALIZED FLAG
0685  F33F- 60                 RTS
0686                   *
0687                           TIT R65 DISK IO - FILE HANDLER
0688                           PAG

----------------------------------------------------------------------

R65 DISK IO - FILE HANDLER         19/10/23   R65 ASSEMBLER  PAGE 16

0689                   *
0690                   *
0691  F340- FF FF FF   ITABL   BYT $FF,$FF,$FF,$18     BADTRACK1
0691  F343- 18 
0692  F344- FF FF FF           BYT $FF,$FF,$FF,$10     BADTRACK0
0692  F347- 10 
0693  F348- 85 05 0D           BYT $85,5,13,$0D        SPECIFY
0693  F34B- 0D 
0694                   *
0695                   *
0696                   * INITIALIZATION ROUTINE
0697                   ************************
0698                   *
0699  F34C- A2 0B      INITDC  LDX =11
0700  F34E- A0 03      INITD1  LDY =3
0701  F350- A9 35              LDA =$35        SPECIFY CMD
0702  F352- 20 A4 F3           JSR WRCOMM
0703  F355- BD 40 F3   INITD2  LDA ITABL,X
0704  F358- 20 AF F3           JSR WRPARA
0705  F35B- CA                 DEX
0706  F35C- 30 05              BMI INITD3
0707  F35E- 88                 DEY
0708  F35F- 10 F4              BPL INITD2
0709  F361- 30 EB              BMI INITD1
0710  F363- 60         INITD3  RTS
0711                   *
0712                   *
0713                   *
0714                   * DRIVE CODE SUBROUTINE
0715                   ***********************
0716                   * SELECTED DRIVE IN FILDRV, OUTPUT IN A
0717                   *
0718  F364- A5 DC      DRIVE   LDA FILDRV
0719  F366- 0A                 ASL A
0720  F367- 0A                 ASL A
0721  F368- 0A                 ASL A
0722  F369- 0A                 ASL A
0723  F36A- 0A                 ASL A
0724  F36B- 0A                 ASL A
0725  F36C- 60                 RTS
0726                   *
0727                   * SEEK COMMAND
0728                   **************
0729                   * SELECT DRIVE IN FILDRV
0730                   * TRACK ADDRESS IN TRACK
0731                   *
0732  F36D- 20 64 F3   SEEK    JSR DRIVE
0733  F370- 09 29              ORA =$29        FROM SEEK CMD
0734  F372- 20 A4 F3           JSR WRCOMM
0735  F375- A5 DD              LDA TRACK       GET TRACK ADDRESS

----------------------------------------------------------------------

R65 DISK IO - FILE HANDLER         19/10/23   R65 ASSEMBLER  PAGE 17

0736  F377- 4C AF F3           JMP WRPARA
0737                   *
0738                   *
0739                   * READ DRIVE STATUS
0740                   *******************
0741                   * SELECTED DRIVE IN FILDRV
0742                   *
0743  F37A- 20 64 F3   RDSTAT  JSR DRIVE
0744  F37D- 09 2C              ORA =$2C        READ STATUS COMMAND
0745  F37F- 20 A4 F3           JSR WRCOMM
0746  F382- 4C BC F3           JMP RESULT
0747                   *
0748                   *
0749                   * READ SPECIAL REGISTER
0750                   ***********************
0751                   * REGISTER ADDRESS IN X
0752                   * RESULT RETURNED IN A
0753                   *
0754  F385- 20 64 F3   RDREG   JSR DRIVE       READ SPECIAL REG CMD
0755  F388- 09 3D              ORA =$3D
0756  F38A- 20 A4 F3           JSR WRCOMM
0757  F38D- 8A                 TXA
0758  F38E- 20 AF F3           JSR WRPARA
0759  F391- 4C BC F3           JMP RESULT
0760                   *
0761                   *
0762                   * WRITE SPECIAL REGISTER
0763                   ************************
0764                   * REGISTER ADDRESS IN X
0765                   * DATA TO BE WRITTEN IN Y
0766                   *
0767  F394- 20 64 F3   WRREG   JSR DRIVE       WRITE SPECIAL REG CMD
0768  F397- 09 3A              ORA =$3A
0769  F399- 20 A4 F3           JSR WRCOMM
0770  F39C- 8A                 TXA
0771  F39D- 20 AF F3           JSR WRPARA
0772  F3A0- 98                 TYA
0773  F3A1- 4C AF F3           JMP WRPARA
0774                   *
0775                   *
0776                   * WRITE IN COMMAND REGISTER
0777                   ***************************
0778                   * COMMAND IN A
0779                   *
0780  F3A4- 2C C0 14   WRCOMM  BIT FDSTAT      BUSY?
0781  F3A7- 30 FB              BMI WRCOMM      WAIT IF BUSY
0782  F3A9- 70 F9              BVS WRCOMM      WAIT IF COMMAND FULL
0783  F3AB- 8D C0 14           STA FDCOM
0784  F3AE- 60                 RTS
0785                   *

----------------------------------------------------------------------

R65 DISK IO - FILE HANDLER         19/10/23   R65 ASSEMBLER  PAGE 18

0786                   *
0787                   * WRITE IN PARAMETER REGISTER
0788                   *****************************
0789                   * PARAMETER IN A
0790                   *
0791  F3AF- 48         WRPARA  PHA             SAVE PARAMETER
0792  F3B0- A9 20              LDA =$20        MASK FOR PARAMETER FLAG
0793  F3B2- 2C C0 14           BIT FDSTAT
0794  F3B5- D0 FB              BNE *-3         WAIT IF PARAMETER FULL
0795  F3B7- 68                 PLA
0796  F3B8- 8D C1 14           STA FDPARA
0797  F3BB- 60                 RTS
0798                   *
0799                   *
0800                   * TEST RESULT SUBROUTINE
0801                   ************************
0802                   * Z=0, IF ERROR (ERROR CODE IN RESSAV AND A)
0803                   * $FF RETURNED MEANS NO RESULT
0804                   *
0805  F3BC- A9 10      RESULT  LDA =$10        RESULT FLAG MASK
0806  F3BE- 2C C0 14           BIT FDSTAT
0807  F3C1- 30 FB              BMI *-3         WAIT IF BUSY
0808  F3C3- D0 04              BNE RESULT1
0809  F3C5- A9 FF              LDA =$FF        NO RESULT
0810  F3C7- D0 03              BNE RESULT1+3
0811                   *
0812  F3C9- AD C1 14   RESULT1 LDA FDRES       GET RESULT
0813  F3CC- 85 DF              STA RESSAV
0814  F3CE- 60                 RTS
0815                   *
0816                   *
0817                   * READ OR WRITE OF SINGLE RECORD COMMAND
0818                   ****************************************
0819                   * SELECTED DRIVE AND OPCODE IN A
0820                   * TRACK ADDRESS IN TRACK
0821                   * SECTOR ADDRESS IN SECTOR
0822                   *
0823  F3CF- 20 A4 F3   SINGLE  JSR WRCOMM
0824  F3D2- A5 DD              LDA TRACK
0825  F3D4- 20 AF F3           JSR WRPARA
0826  F3D7- A5 DE              LDA SECTOR
0827  F3D9- 20 AF F3           JSR WRPARA
0828  F3DC- A9 21              LDA =#00100001  ONE SECTOR OF 256 BYTES
0829  F3DE- 4C AF F3           JMP WRPARA
0830                   *
0831                   *
0832                   * DATWRIT: DATA WRITE SUBROUTINE
0833                   ********************************
0834                   * DATA TO WRITE IN A
0835                   * ERROR, IF FDC NOT BUSY

----------------------------------------------------------------------

R65 DISK IO - FILE HANDLER         19/10/23   R65 ASSEMBLER  PAGE 19

0836                   * RETURNS ONE SUB-LEVEL, IF ERROR
0837                   *
0838  F3E1- 48         DATWRIT PHA             SAVE CODE
0839  F3E2- A9 04              LDA =4          MASK FOR DATA REQUEST
0840  F3E4- 2C C0 14           BIT FDSTAT
0841  F3E7- 10 07              BPL DATWRT1     FDC NOT BUSY ERROR
0842  F3E9- F0 F9              BEQ *-5
0843  F3EB- 68                 PLA
0844  F3EC- 8D C4 14           STA FDDAT
0845  F3EF- 60                 RTS
0846                   *
0847  F3F0- 68         DATWRT1 PLA             FDC NOT BUSY
0848  F3F1- 68                 PLA             PULL ONE SUB LEVEL
0849  F3F2- 68                 PLA             AND SAVED CODE
0850  F3F3- 4C BC F3           JMP RESULT
0851                   *
0852                   *
0853                   * DATREAD: DATA READ SUBROUTINE
0854                   *******************************
0855                   * RETURNS WITH DATA IN A, SEE DATA WRITE SUB
0856                   *
0857  F3F6- A9 08      DATREAD LDA =8          MASK FOR DATA PROVIDE
0858  F3F8- 2C C0 14           BIT FDSTAT
0859  F3FB- 10 F4              BPL DATWRT1+1   END: FDC NOT BUSY
0860  F3FD- F0 F9              BEQ *-5         NO IRQ NOW
0861  F3FF- AD C4 14          LDA FDDAT
0862  F402- 60                 RTS
0863                   *
0864                   *
0865                   * TURN MOTOR ON SUBROUTINE
0866                   **************************
0867                   *
0868  F403- 20 7A F3   MOTON   JSR RDSTAT      IS MOTOR ON?
0869  F406- 48                 PHA
0870  F407- A2 23              LDX =$23        FDC OUTPUT PORT
0871  F409- 20 85 F3           JSR RDREG
0872  F40C- 09 20              ORA =$20        MOTOR ON BIT
0873  F40E- A8                 TAY
0874  F40F- 20 94 F3           JSR WRREG
0875  F412- 68                 PLA
0876  F413- 4A                 LSR A           OPI=1 MOTOR WAS ON
0877  F414- B0 01              BCS *+3         SKIP, IF NOT
0878  F416- 60                 RTS
0879                   *
0880  F417- 4C 27 E8           JMP TDELAY      WAIT 1 SECOND
0881                   *
0882                   *
0883                   * TURN MOTOR OFF SUBROUTINE
0884                   ***************************
0885                   *

----------------------------------------------------------------------

R65 DISK IO - FILE HANDLER         19/10/23   R65 ASSEMBLER  PAGE 20

0886  F41A- A2 23      MOTOFF  LDX =$23        FDC OUTPUT PORT
0887  F41C- 20 85 F3           JSR RDREG
0888  F41F- 29 DF              AND =$DF        CLEAR MOTOR ON BIT
0889  F421- A8                 TAY
0890  F422- 4C 94 F3           JMP WRREG
0891                   *
0892                   *
0893                   * WRITE ONE RECORD TO DISK (256 BYTES)
0894                   **************************************
0895                   * TRACK AND SECTOR ADDRESS IN TRACK AND SECTOR
0896                   * DRIVE CODE IN FILDRV, MOTOR MUST BE ON
0897                   * INDIRECT DATA POINTER IN DATA
0898                   * MAX 10 TRIALS ARE DONE, NO VERIFY
0899                   *
0900  F425- A2 0A      WRITE   LDX =10         TRIAL COUNTER
0901  F427- 20 37 F4           JSR WRIT0
0902  F42A- D0 01              BNE *+3
0903  F42C- 60                 RTS             OK
0904                   *
0905  F42D- 20 7A F3           JSR RDSTAT
0906  F430- 78                 SEI
0907  F431- CA                 DEX
0908  F432- D0 F3              BNE WRITE+2
0909  F434- 4C F4 F5           JMP DISCERR     NOT OK
0910                   *
0911  F437- 20 64 F3   WRIT0   JSR DRIVE
0912  F43A- 09 0B              ORA =$0B
0913  F43C- 20 CF F3           JSR SINGLE      WRITE
0914  F43F- A0 00              LDY =0
0915  F441- B1 E0      WRIT1   LDA (DATA),Y    LOAD DATA
0916  F443- 20 E1 F3           JSR DATWRIT     DUMP IT
0917  F446- C8                 INY
0918  F447- D0 F8              BNE WRIT1       END TEST
0919  F449- 4C BC F3           JMP RESULT
0920                   *
0921                   *
0922                   * VERIFY ONE RECORD
0923                   *******************
0924                   * SEE WRITE FOR DETAILS, ONLY ONE TRIAL
0925                   *
0926  F44C- 20 64 F3   VERIFY  JSR DRIVE
0927  F44F- 09 1F              ORA =$1F        VERIFY
0928  F451- 20 CF F3           JSR SINGLE
0929  F454- 4C BC F3           JMP RESULT      TEST RESULT
0930                   *
0931                   *
0932                   * READ ONE RECORD FROM DISK
0933                   ***************************
0934                   * TRACK AND SECTOR ADDRESS IN TRACK AND SECTOR
0935                   * INDIRECT DATA POINTER IN DATA,DRIVE IN FILDRV

----------------------------------------------------------------------

R65 DISK IO - FILE HANDLER         19/10/23   R65 ASSEMBLER  PAGE 21

0936                   * MAX 10 TRIALS ARE DONE
0937                   *
0938  F457- A2 0A      READ    LDX =10         TRIAL COUNTER
0939  F459- 20 69 F4           JSR READ0
0940  F45C- D0 01              BNE *+3
0941  F45E- 60                 RTS             OK
0942                   *
0943  F45F- 20 7A F3           JSR RDSTAT
0944  F462- 78                 SEI
0945  F463- CA                 DEX
0946  F464- D0 F3              BNE READ+2
0947  F466- 4C F4 F5           JMP DISCERR     NOT OK
0948                   *
0949  F469- 20 64 F3   READ0   JSR DRIVE
0950  F46C- 09 13              ORA =$13
0951  F46E- 20 CF F3           JSR SINGLE
0952  F471- A0 00              LDY =0
0953  F473- 20 F6 F3   READ1   JSR DATREAD
0954  F476- 91 E0              STA (DATA),Y
0955  F478- C8                 INY
0956  F479- D0 F8              BNE READ1
0957  F47B- 4C BC F3           JMP RESULT
0958                   *
0959                   *
0960                   * INITIALIZE DISK DRIVE
0961                   ***********************
0962                   * NON DMA MODE,MOTOR MUST BE ON
0963                   * INPUT: FILDRV,EXITPN
0964                   *
0965  F47E- 20 4C F3   INITDRV JSR INITDC      INITIALIZE FDC
0966  F481- EA                 NOP             ################
0967  F482- EA                 NOP             ################
0968  F483- EA                 NOP             ################
0969  F484- A2 17              LDX =$17        MODE REGISTER
0970  F486- A0 C1              LDY =$C1        NON DMA,DOUBLE ACT
0971  F488- 20 94 F3           JSR WRREG
0972  F48B- 20 A0 F4           JSR TRACK0
0973  F48E- 20 BC F3           JSR RESULT
0974  F491- F0 03              BEQ *+5
0975  F493- 4C F4 F5           JMP DISCERR
0976                   *
0977  F496- 20 64 F3           JSR DRIVE       SET INITIALIZED FLAG
0978  F499- 0D 7E 03           ORA DISFLG
0979  F49C- 8D 7E 03           STA DISFLG
0980  F49F- 60                 RTS
0981                   *
0982                   *       SET HEAD TO TRACK0, NO CHECK
0983                   *
0984  F4A0- A2 00      TRACK0  LDX =0
0985  F4A2- 86 DD              STX TRACK

----------------------------------------------------------------------

R65 DISK IO - FILE HANDLER         19/10/23   R65 ASSEMBLER  PAGE 22

0986  F4A4- 4C 6D F3           JMP SEEK
0987                   *
0988                   *
0989                           TIT R65 DISK IO - DIRECTORY
0990                           PAG

----------------------------------------------------------------------

R65 DISK IO - DIRECTORY            19/10/23   R65 ASSEMBLER  PAGE 23

0991                   *
0992                   * PREPARE DISK OPERATION
0993                   * **********************
0994                   * INPUT: FILDRV
0995                   * OUTPUT: EXITPN,BUFSEC
0996                   *
0997  F4A7- BA         PREPDO  TSX             SAVE STACK POINTER
0998  F4A8- E8                 INX
0999  F4A9- E8                 INX             FOR ERROR EXIT
1000  F4AA- 8E 79 03           STX EXITPN
1001  F4AD- A9 FF              LDA =$FF
1002  F4AF- 8D 7A 03           STA BUFSEC
1003  F4B2- AD 02 17           LDA USPBD       SET LED 2
1004  F4B5- 09 04              ORA =4
1005  F4B7- 8D 02 17           STA USPBD       FOR DISK
1006  F4BA- 20 03 F4           JSR MOTON
1007  F4BD- 20 7A F3           JSR RDSTAT      CLEAR READY FLAG
1008  F4C0- 20 64 F3           JSR DRIVE       IS DRIVE INITIALIZED?
1009  F4C3- 2D 7E 03           AND DISFLG
1010  F4C6- D0 03              BNE *+5         YES, SKIP
1011  F4C8- 20 7E F4           JSR INITDRV     ELSE INITIALIZE IT
1012  F4CB- 60                 RTS
1013                   *
1014  F4CC- BA         PREPDO1 TSX             PULL ONE LEVEL MORE
1015  F4CD- E8                 INX
1016  F4CE- E8                 INX
1017  F4CF- 4C A8 F4           JMP PREPDO+1
1018                   *
1019                   *
1020                   * GETFENT: GET ONE FILE ENTRY
1021                   *****************************
1022                   * INPUT: X=NO OF ENTRY, BUFSEC
1023                   * OUTPUT: ENTRY,FILCNT
1024                   *
1025  F4D2- 20 ED F4   GETFENT JSR GETFREC     READ RECORD
1026  F4D5- 20 E3 F4           JSR SDOSPNT
1027  F4D8- A0 1F              LDY =31         TRANSFER ENTRY
1028  F4DA- B1 E2      GETFEN1 LDA (DOSPNT),Y
1029  F4DC- 99 00 03           STA FILTYP,Y
1030  F4DF- 88                 DEY
1031  F4E0- 10 F8              BPL GETFEN1
1032  F4E2- 60                 RTS
1033                   *
1034                   * COMPUTE DOSPNT
1035                   ****************
1036                   *
1037  F4E3- 20 EB F5   SDOSPNT JSR FILENT
1038  F4E6- 84 E2              STY DOSPNT
1039  F4E8- A9 D6              LDA =>DIRBUF
1040  F4EA- 85 E3              STA DOSPNT+1

----------------------------------------------------------------------

R65 DISK IO - DIRECTORY            19/10/23   R65 ASSEMBLER  PAGE 24

1041  F4EC- 60                 RTS
1042                   *
1043                   * GET DIRECTORY RECORD
1044                   **********************
1045                   * LOADS RECORD ONLY,IF NOT IN MEMORY
1046                   * INPUT: X=NO OF ENTRY,BUFSEC,EXITPN
1047                   * OUTPUT: BUDSEC,FILCNT,FILCN1,SECTOR
1048                   *
1049  F4ED- 86 E4      GETFREC STX FILCNT      SET FILCNT
1050  F4EF- 8A                 TXA
1051  F4F0- 29 07              AND =7
1052  F4F2- 85 E5              STA FILCN1      AND FILCN1
1053  F4F4- 8A                 TXA
1054  F4F5- 4A                 LSR A
1055  F4F6- 4A                 LSR A
1056  F4F7- 4A                 LSR A
1057  F4F8- AA                 TAX
1058  F4F9- E8                 INX
1059  F4FA- 86 DE              STX SECTOR
1060  F4FC- EC 7A 03           CPX BUFSEC      IM MEMORY?
1061  F4FF- D0 01             BNE READDS      NO, READ IT
1062  F501- 60                 RTS
1063                   *
1064                   * READ DIRECTORY SECTOR
1065                   ***********************
1066                   * INPUT: FILDRV,SECTOR,EXITPN
1067                   * OUTPUT: BUFSEC
1068                   *
1069  F502- 20 0E F5   READDS  JSR SDIRBUF
1070  F505- 20 57 F4           JSR READ        READ RECORD
1071  F508- A5 DE              LDA SECTOR
1072  F50A- 8D 7A 03           STA BUFSEC
1073  F50D- 60                 RTS
1074                   *
1075                   * SET DATA TO DIRBUF
1076                   ********************
1077                   *
1078  F50E- A9 00      SDIRBUF LDA =0
1079  F510- A2 D6              LDX =>DIRBUF
1080  F512- 85 E0              STA DATA
1081  F514- 86 E1              STX DATA+1
1082  F516- 85 DD              STA TRACK
1083  F518- 60                 RTS
1084                   *
1085                   * COMPUTE NUMBER OF EMPTY SECTORS
1086                   *********************************
1087                   * INPUT: FILCNT
1088                   * OUTPUT: Y(HIGH), X(LOW) SECTORS
1089                   *
1090  F519- 20 EB F5   EMPTSIZ JSR FILENT      Y=POINTER

----------------------------------------------------------------------

R65 DISK IO - DIRECTORY            19/10/23   R65 ASSEMBLER  PAGE 25

1091  F51C- A9 00              LDA =<NRSEC
1092  F51E- 38                 SEC
1093  F51F- F9 13 D6           SBC DIRBUF+$13,Y
1094  F522- AA                 TAX
1095  F523- A9 0A              LDA =>NRSEC
1096  F525- F9 14 D6           SBC DIRBUF+$14,Y
1097  F528- A8                 TAY
1098  F529- 60                 RTS
1099                   *
1100                   * STORE DIRECTORY RECORD
1101                   ************************
1102                   * INPUT: BUFSEC,EXITPN,FILDRV
1103                   * OUTPUT: SECTOR,TRACK
1104                   * DIRECTORY RECORDS ARE VERIFIED AFTER STORE
1105                   *
1106  F52A- 20 0E F5   WRITDS  JSR SDIRBUF
1107  F52D- AD 7A 03           LDA BUFSEC
1108  F530- 85 DE              STA SECTOR
1109  F532- A9 04              LDA =4          4 TRYALS
1110  F534- 8D 7F 03           STA DISCNT
1111  F537- 20 25 F4   WRITD1  JSR WRITE
1112  F53A- 20 4C F4           JSR VERIFY
1113  F53D- D0 01              BNE *+3
1114  F53F- 60                 RTS             OK
1115                   *
1116  F540- CE 7F 03           DEC DISCNT
1117  F543- D0 F2              BNE WRITD1
1118  F545- 4C F4 F5           JMP DISCERR
1119                   *
1120                   * PREPARE DISK READ/WRITE
1121                   *************************
1122                   * INPUT: FILSA,FILSIZ,FILLOC
1123                   * OUTPUT: DATA,TRACK,SECTOR,FILCN1
1124                   *
1125  F548- AD 1A 03   PREPRW  LDA FILSA
1126  F54B- AE 1B 03           LDX FILSA+1
1127  F54E- 85 E0              STA DATA
1128  F550- 86 E1              STX DATA+1
1129  F552- AD 13 03           LDA FILLOC      SET BINARY RECORD
1130  F555- AE 14 03           LDX FILLOC+1
1131  F558- 85 DE      PREPWR0 STA SECTOR      COUNTER
1132  F55A- 86 DD              STX TRACK
1133                   *
1134  F55C- A2 02              LDX =2          START DATA TRACK
1135  F55E- A5 DE      PREPRW1 LDA SECTOR      CONVERT TO TRACK
1136  F560- 38                 SEC             AND SECTOR BY
1137  F561- E9 10              SBC =SPERTR     REPEATED SUBTRACTION
1138  F563- A8                 TAY             (WORKS FOR ANY RPERTR)
1139  F564- A5 DD              LDA TRACK
1140  F566- E9 00              SBC =0

----------------------------------------------------------------------

R65 DISK IO - DIRECTORY            19/10/23   R65 ASSEMBLER  PAGE 26

1141  F568- 90 07              BCC PREPRW2     SKIP, IF DONE
1142                   *
1143  F56A- 84 DE              STY SECTOR
1144  F56C- 85 DD              STA TRACK
1145  F56E- E8                 INX
1146  F56F- D0 ED              BNE PREPRW1     ALLWAYS TAKEN
1147                   *
1148  F571- 86 DD      PREPRW2 STX TRACK
1149  F573- A5 DE              LDA SECTOR
1150  F575- 29 0F              AND =$0F
1151  F577- 85 DE              STA SECTOR
1152  F579- E6 DE              INC SECTOR      SET SECTOR
1153  F57B- AD 16 03           LDA FILSIZ+1
1154  F57E- 85 E5              STA FILCN1      NO OF RECORDS
1155  F580- 60                 RTS
1156                   *
1157                   * PUT FILE ENTRY TO DISK
1158                   ************************
1159                   * INPUT: X=FILE ENTRY
1160                   * OUTPUT:
1161                   *
1162  F581- 86 E5      PUTFENT STX FILCN1
1163  F583- 20 E3 F4           JSR SDOSPNT
1164  F586- A0 1F              LDY =31
1165  F588- B9 00 03   PUTFEN1 LDA FILTYP,Y
1166  F58B- 91 E2              STA (DOSPNT),Y
1167  F58D- 88                 DEY
1168  F58E- 10 F8              BPL PUTFEN1
1169  F590- 4C 2A F5           JMP WRITDS
1170                   *
1171                   * SEARCH IN DIRECTORY
1172                   *********************
1173                   * INPUT:FILDRV,EXITPN,FILCY1,FILNM1
1174                   * FILCY1=0: SEARCH MAXIMAL CYCLUS
1175                   * OUTPUT: SCY,SCYFC,SLAST
1176                   *
1177  F593- A2 00      SEARCH  LDX =0
1178  F595- 8E 7B 03           STX SCY
1179                   *
1180  F598- 20 ED F4   SEARCH1 JSR GETFREC     GET ONE RECORD
1181  F59B- 20 EB F5           JSR FILENT
1182  F59E- B9 00 D6           LDA DIRBUF,Y    GET FILTYP
1183  F5A1- D0 07              BNE SEARCH2     SKIP, IF NOT LAST
1184  F5A3- A6 E4              LDX FILCNT
1185  F5A5- 8E 7D 03           STX SLAST       END OF DIRECTORY
1186  F5A8- 58                 CLI
1187  F5A9- 60                 RTS
1188                   *
1189  F5AA- B9 1E D6   SEARCH2 LDA DIRBUF+$1E,Y        GET FILLNK
1190  F5AD- 10 05              BPL SEARCH4     SKIP, IF NOT DELETED

----------------------------------------------------------------------

R65 DISK IO - DIRECTORY            19/10/23   R65 ASSEMBLER  PAGE 27

1191                   *
1192  F5AF- A6 E4      SEARCH3 LDX FILCNT      NEXT ENRTY
1193  F5B1- E8                 INX
1194  F5B2- D0 E4              BNE SEARCH1     ALLWAYS TAKEN
1195                   *
1196  F5B4- 20 E6 F4   SEARCH4 JSR SDOSPNT+3
1197  F5B7- A0 0F              LDY =15         COMPARE NAME
1198  F5B9- B1 E2      SEARCH5 LDA (DOSPNT),Y
1199  F5BB- D9 1F 03           CMP FILNM1-1,Y
1200  F5BE- D0 EF              BNE SEARCH3     NEXT ENTRY
1201  F5C0- 88                 DEY
1202  F5C1- D0 F6              BNE SEARCH5
1203                   *
1204  F5C3- 20 EB F5           JSR FILENT      FILNAM IS MATCHING
1205  F5C6- AD 30 03           LDA FILCY1
1206  F5C9- D0 16              BNE SEARCH7     CYCLUS=0?
1207  F5CB- AD 7B 03           LDA SCY         YES, <CURRENT CY?
1208  F5CE- D9 11 D6           CMP DIRBUF+$11,Y
1209  F5D1- B0 DC              BCS SEARCH3     NEXT ENTRY, IF NOT
1210                   *
1211  F5D3- B9 11 D6   SEARCH6 LDA DIRBUF+$11,Y
1212  F5D6- 8D 7B 03           STA SCY
1213  F5D9- A5 E4              LDA FILCNT
1214  F5DB- 8D 7C 03           STA SCYFC
1215  F5DE- 4C AF F5           JMP SEARCH3
1216                   *
1217  F5E1- AD 30 03   SEARCH7 LDA FILCY1      CYCLUS # 0
1218  F5E4- D9 11 D6           CMP DIRBUF+$11,Y
1219  F5E7- F0 EA              BEQ SEARCH6
1220  F5E9- D0 C4              BNE SEARCH3     ALLWAYS TAKEN
1221                   *
1222                   * COMPUTE FILE ENTRY POINTER
1223                   ****************************
1224                   * INPUT: FILCN1
1225                   * OUTPUT: Y
1226                   *
1227  F5EB- A5 E5      FILENT  LDA FILCN1
1228  F5ED- 0A                 ASL A
1229  F5EE- 0A                 ASL A
1230  F5EF- 0A                 ASL A
1231  F5F0- 0A                 ASL A
1232  F5F1- 0A                 ASL A
1233  F5F2- A8                 TAY
1234  F5F3- 60                 RTS
1235                   *
1236                   * DISK ERROR FROM CONTROLLER
1237                   ****************************
1238                   *
1239  F5F4- A5 DF      DISCERR LDA RESSAV      GET THE CODE
1240  F5F6- 4A                 LSR A

----------------------------------------------------------------------

R65 DISK IO - DIRECTORY            19/10/23   R65 ASSEMBLER  PAGE 28

1241  F5F7- 29 0F              AND =$0F
1242  F5F9- AA                 TAX
1243  F5FA- BD 18 F6           LDA DISCERT,X   GET FROM TABLE
1244                   *
1245  F5FD- 85 DB      DISCER1 STA FILERR
1246  F5FF- AE 79 03          LDX EXITPN
1247  F602- 9A                 TXS             SET STACK POINTER
1248  F603- A5 DF      ENDDO1  LDA RESSAV
1249  F605- 48                 PHA
1250  F606- 20 1A F4           JSR MOTOFF
1251  F609- 68                 PLA
1252  F60A- 85 DF              STA RESSAV
1253  F60C- AD 02 17           LDA USPBD       TURN LED 2 OFF
1254  F60F- 29 FB              AND =$FB
1255  F611- 8D 02 17           STA USPBD
1256  F614- 58                 CLI
1257  F615- A5 DB              LDA FILERR
1258  F617- 60                 RTS
1259                   *
1260  F618- 00 00 00   DISCERT BYT 0,0,0,0,1,1,1,2,7,$24,1,1,1
1260  F61B- 00 01 01 
1260  F61E- 01 02 07 
1260  F621- 24 01 01 
1260  F624- 01 
1261                   *
1262                   * GOOD COMPLETION
1263                   *****************
1264                   *
1265  F625- A9 00      ENDDO   LDA =0
1266  F627- 85 DB              STA FILERR
1267  F629- 4C 03 F6           JMP ENDDO1
1268                   *
1269                   * PREPARE FILE READ
1270                   *******************
1271                   *
1272  F62C- 20 CC F4   PREPRD  JSR PREPDO1
1273  F62F- 20 93 F5           JSR SEARCH
1274  F632- AD 7B 03           LDA SCY
1275  F635- D0 03              BNE *+5
1276  F637- 4C DE F6           JMP NOTFND      FILE NOT FOUND
1277                   *
1278  F63A- AE 7C 03           LDX SCYFC
1279  F63D- 4C D2 F4           JMP GETFENT
1280                   *
1281                   * INCREMENT POINTERS FOR FILE R/W
1282                   *********************************
1283                   *
1284  F640- E6 E1      INCDATP INC DATA+1
1285  F642- E6 DE              INC SECTOR
1286  F644- A5 DE              LDA SECTOR

----------------------------------------------------------------------

R65 DISK IO - DIRECTORY            19/10/23   R65 ASSEMBLER  PAGE 29

1287  F646- C9 11              CMP =$11
1288  F648- D0 06              BNE *+8
1289  F64A- A9 01              LDA =1
1290  F64C- 85 DE              STA SECTOR
1291  F64E- E6 DD              INC TRACK
1292  F650- 60                 RTS
1293                   *
1294                   * PREPARE WRITE
1295                   ***************
1296                   *
1297  F651- 20 CC F4   PREPWRA JSR PREPDO1
1298  F654- 20 93 F5           JSR SEARCH
1299  F657- AE 30 03           LDX FILCY1
1300  F65A- D0 05              BNE PREPWRC     SKIP, IF NOT DEFAULT
1301                   *
1302  F65C- AE 7B 03           LDX SCY
1303  F65F- E8                 INX
1304  F660- 60                 RTS
1305                   *
1306  F661- AD 7B 03   PREPWRC LDA SCY
1307  F664- F0 FA              BEQ PREPWRC-1   SKIP, IF NOT SAME
1308                   *
1309  F666- 20 F1 F6           JSR DELETE4     ELSE DELETE THIS FILE
1310  F669- AE 30 03           LDX FILCY1
1311  F66C- 60                 RTS
1312                   *
1313  F66D- A9 00      PREPWRB LDA =0
1314  F66F- 8D 1E 03           STA FILLNK
1315  F672- AE 7D 03           LDX SLAST
1316  F675- E0 FF              CPX =255         MAX 255 FILE ENTRIES
1317  F677- D0 05              BNE *+7
1318  F679- A9 08              LDA =8          DIRECTORY FULL
1319  F67B- 4C FD F5           JMP DISCER1
1320                   *
1321  F67E- 20 ED F4           JSR GETFREC
1322  F681- 20 EB F5           JSR FILENT
1323  F684- B9 13 D6           LDA DIRBUF+$13,Y
1324  F687- 8D 13 03           STA FILLOC
1325  F68A- B9 14 D6           LDA DIRBUF+$14,Y
1326  F68D- 8D 14 03           STA FILLOC+1
1327  F690- 4C 19 F5           JMP EMPTSIZ
1328                   *
1329                   *
1330                           TIT R65 DISK IO - MAIN DISK ROUTINES
1331                           PAG

----------------------------------------------------------------------

R65 DISK IO - MAIN DISK ROUTINES   19/10/23   R65 ASSEMBLER  PAGE 30

1332                   *
1333                   ****************************
1334                   * DDIR: PRINT DISK DIRECTORY
1335                   ****************************
1336                   * INPUT: FILDRV
1337                   * OUTPUT: FILERR
1338                   *
1339  F693- 20 27 E0   DDIR    JSR PRTINF
1340  F696- 0D 8A              BYT $D,$8A
1341  F698- 20 A7 F4           JSR PREPDO
1342  F69B- A2 00              LDX =0
1343                   *
1344  F69D- 20 D2 F4   DDIR1   JSR GETFENT
1345  F6A0- AD 00 03           LDA FILTYP      0 MEANS END MARK
1346  F6A3- F0 0F              BEQ DDIR2
1347  F6A5- AD 1E 03           LDA FILLNK      BIT 7+1 MEANS DELETED
1348  F6A8- 30 03              BMI *+5         DO NOT PRINT IF DELETED
1349  F6AA- 20 2D E8           JSR PRFLAB
1350  F6AD- B0 05              BCS DDIR2       ESC?
1351  F6AF- A6 E4              LDX FILCNT
1352  F6B1- E8                 INX
1353  F6B2- D0 E9              BNE DDIR1       ALLWAYS TAKEN
1354                   *
1355  F6B4- 20 27 E0   DDIR2   JSR PRTINF
1356  F6B7- 0D 0A 0A           BYT $D,$A,$A
1357  F6BA- 53 45 43           BYT 'SECTORS FREE:'+128
1357  F6BD- 54 4F 52 
1357  F6C0- 53 20 46 
1357  F6C3- 52 45 45 
1357  F6C6- BA 
1358  F6C7- 20 19 F5           JSR EMPTSIZ
1359  F6CA- 98                 TYA
1360  F6CB- 20 30 E0           JSR PRTAX
1361  F6CE- 20 27 E0           JSR PRTINF
1362  F6D1- 0D 8A              BYT $D,$8A
1363  F6D3- 4C 25 F6           JMP ENDDO
1364                   *
1365                   ****************************
1366                   * DELETE: DELETE DISK FILE *
1367                   ****************************
1368                   * INPUT: FILDRV,FILNM1,FILCY1
1369                   * OUTPUT: FILERR
1370                   *
1371  F6D6- 20 A7 F4   DELETE  JSR PREPDO
1372  F6D9- AD 30 03           LDA FILCY1
1373  F6DC- D0 05              BNE DELETE1
1374                   *
1375  F6DE- A9 06      NOTFND  LDA =6          FILE NOT FOUND
1376  F6E0- 4C FD F5           JMP DISCER1
1377                   *

----------------------------------------------------------------------

R65 DISK IO - MAIN DISK ROUTINES   19/10/23   R65 ASSEMBLER  PAGE 31

1378  F6E3- 20 93 F5   DELETE1 JSR SEARCH
1379  F6E6- AD 7B 03           LDA SCY
1380  F6E9- F0 F3              BEQ NOTFND
1381                   *
1382  F6EB- 20 F1 F6           JSR DELETE4
1383  F6EE- 4C 25 F6           JMP ENDDO
1384                   *
1385  F6F1- AE 7C 03   DELETE4 LDX SCYFC
1386  F6F4- 20 ED F4           JSR GETFREC
1387  F6F7- 20 EB F5           JSR FILENT
1388  F6FA- B9 00 D6           LDA DIRBUF,Y    PROTECTED?
1389  F6FD- 10 24              BPL DELETE3
1390                   *
1391  F6FF- 98                TYA
1392  F700- 48                 PHA
1393  F701- 20 27 E0           JSR PRTINF
1394  F704- 0D 0A 44           BYT $D,$a,'DELETE? '+128
1394  F707- 45 4C 45 
1394  F70A- 54 45 3F 
1394  F70D- A0 
1395  F70E- 20 03 E0           JSR GETCHR
1396  F711- 29 5F              AND =$5F
1397  F713- C9 59              CMP ='Y'
1398  F715- F0 05              BEQ DELETE2
1399                   *
1400  F717- A9 03              LDA =3          ESCAPE FROM DISK OP
1401  F719- 4C FD F5           JMP DISCER1
1402                   *
1403  F71C- 20 27 E0   DELETE2 JSR PRTINF
1404  F71F- 0D 8A              BYT $D,$8A
1405  F721- 68                 PLA
1406  F722- A8                 TAY
1407                   *
1408  F723- B9 1E D6   DELETE3 LDA DIRBUF+$1E,Y
1409  F726- 09 80              ORA =$80        SET DELETET FLAG
1410  F728- 99 1E D6           STA DIRBUF+$1E,Y
1411  F72B- 4C 2A F5           JMP WRITDS
1412                   *
1413                   *
1414                   **************************
1415                   * DRDFIL: LOAD DISK FILE *
1416                   **************************
1417                   * INPUT: FILDRV,FILNM1,FILCY1
1418                   * OUTPUT: FILERR
1419                   *
1420  F72E- 20 2C F6   DRDFIL  JSR PREPRD
1421  F731- AD 31 03           LDA FILSA1
1422  F734- 0D 32 03           ORA FILSA1+1
1423  F737- F0 21              BEQ DRDFIL1
1424                   *

----------------------------------------------------------------------

R65 DISK IO - MAIN DISK ROUTINES   19/10/23   R65 ASSEMBLER  PAGE 32

1425  F739- AD 31 03           LDA FILSA1
1426  F73C- 8D 1A 03           STA FILSA
1427  F73F- 8D 1C 03           STA FILEA
1428  F742- AD 32 03           LDA FILSA1+1
1429  F745- 8D 1B 03           STA FILSA+1
1430  F748- 18                 CLC
1431  F749- 6D 16 03           ADC FILSIZ+1
1432  F74C- 8D 1D 03           STA FILEA+1
1433  F74F- AD 1C 03           LDA FILEA
1434  F752- D0 03              BNE *+5
1435  F754- CE 1D 03           DEC FILEA+1
1436  F757- CE 1C 03           DEC FILEA
1437                   *
1438  F75A- AD 00 03   DRDFIL1 LDA FILTYP
1439  F75D- 29 7F              AND =$7F
1440  F75F- C9 42              CMP ='B'        MUST BE BLOCK FILE
1441  F761- F0 05              BEQ *+7
1442  F763- A9 05              LDA =5          FILE TYPE ERROR
1443  F765- 4C FD F5           JMP DISCER1
1444                   *
1445  F768- 20 51 F1           JSR PRFLB1
1446  F76B- 20 48 F5           JSR PREPRW
1447                   *
1448  F76E- 20 57 F4   DRDFIL2 JSR READ
1449  F771- 20 40 F6           JSR INCDATP
1450  F774- C6 E5              DEC FILCN1
1451  F776- D0 F6              BNE DRDFIL2
1452  F778- 20 25 F6           JSR ENDDO
1453  F77B- 20 A0 F4           JSR TRACK0
1454  F77E- A9 00              LDA =0
1455  F780- 60                 RTS
1456                   *
1457                   **************************
1458                   * DWRFIL:STORE DISK FILE *
1459                   **************************
1460                   * INPUT: FILDRV,FILNM1,FILCY1,ENTRY,FILSA1
1461                   * OUTPUT: FILERR
1462                   *
1463  F781- 20 51 F6   DWRFIL  JSR PREPWRA
1464  F784- 8E 11 03           STX FILCYC
1465  F787- AD 15 03           LDA FILSIZ      SIZE MUST BE FULL
1466  F78A- F0 16              BEQ DWRFI3      RECORDS
1467  F78C- EE 16 03           INC FILSIZ+1
1468  F78F- 49 FF              EOR =$FF
1469  F791- 38                 SEC
1470  F792- 6D 1C 03           ADC FILEA
1471  F795- 8D 1C 03           STA FILEA
1472  F798- 90 03              BCC *+5
1473  F79A- EE 1D 03           INC FILEA+1
1474  F79D- A9 00              LDA =0

----------------------------------------------------------------------

R65 DISK IO - MAIN DISK ROUTINES   19/10/23   R65 ASSEMBLER  PAGE 33

1475  F79F- 8D 15 03           STA FILSIZ
1476                   *
1477  F7A2- 20 6D F6   DWRFI3  JSR PREPWRB
1478  F7A5- 8A                 TXA
1479  F7A6- CD 16 03           CMP FILSIZ+1
1480  F7A9- 98                 TYA
1481  F7AA- E9 00              SBC =0
1482  F7AC- B0 05              BCS *+7
1483  F7AE- A9 26              LDA =$26        DISK FULL
1484  F7B0- 4C FD F5           JMP DISCER1
1485                   *
1486  F7B3- AD 31 03           LDA FILSA1
1487  F7B6- AE 32 03           LDX FILSA1+1
1488  F7B9- 20 4E F5           JSR PREPRW+6
1489                   *
1490  F7BC- 20 25 F4   DWRFI4  JSR WRITE
1491  F7BF- 20 40 F6           JSR INCDATP
1492  F7C2- C6 E5              DEC FILCN1
1493  F7C4- D0 F6              BNE DWRFI4
1494                   *
1495  F7C6- AE 7D 03   DWRFI6  LDX SLAST
1496  F7C9- 8A                 TXA
1497  F7CA- 29 07              AND =7          LAST ENTRY OF RECORD
1498  F7CC- 85 E5              STA FILCN1
1499                   *
1500  F7CE- 20 81 F5           JSR PUTFENT     STORE THIS ENTRY
1501  F7D1- AE 7D 03   DWRFI7  LDX SLAST
1502  F7D4- E8                 INX
1503  F7D5- 20 ED F4           JSR GETFREC
1504                   *
1505  F7D8- 20 EB F5           JSR FILENT
1506  F7DB- A6 E4              LDX FILCNT
1507  F7DD- A9 00              LDA =0
1508  F7DF- 8D 00 03           STA FILTYP      SET NEW END MARK
1509  F7E2- AD 13 03           LDA FILLOC
1510  F7E5- 18                 CLC
1511  F7E6- 6D 16 03           ADC FILSIZ+1
1512  F7E9- 8D 13 03           STA FILLOC
1513  F7EC- 90 03              BCC *+5
1514  F7EE- EE 14 03           INC FILLOC+1
1515  F7F1- 20 81 F5           JSR PUTFENT     STORE THIS ENTRY
1516  F7F4- 4C 25 F6           JMP ENDDO
1517                   *
1518                   *
1519                           TIT R65 DISK IO - REFERENCE MAP
1520                   *
1521  F7F7-                    END
LABELS=00D6
ERRORS=00
RECORDS=62

----------------------------------------------------------------------

R65 DISK IO - REFERENCE MAP        19/10/23   R65 ASSEMBLER  PAGE 34

