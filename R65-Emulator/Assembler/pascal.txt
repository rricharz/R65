----------------------------------------------------------------------

R65 PASCAL: LABELS                 22/10/23   R65 ASSEMBLER  PAGE 01

0001                   *
0002                   *       **********************
0003                   *       * R65 PASCAL RUNTIME *
0004                   *       **********************
0005                   *
0006                   * VERSION 5.3 01/06/82 RRICHARZ,RBAUMANN
0007                   * Modified 22/09/19 RRICHARZ
0008                   * Graphics text devices added
0009                   *
0010                           TIT R65 PASCAL RUNTIME
0011                   *
0012                   * INCLUDES RANDOM ACCESS FILE HANDLING,
0013                   * FLOATING POINT MATH, FILE HANDLING ERROR
0014                   * TESTING (OPTIONAL)
0015                   *
0016                           ORG 0
0017                   *
0018  0000-            ACCU    BSS 4   TOP OF STACKELEMENT
0019                   X1      EQU ACCU        FLP ACCU
0020                   M1      EQU ACCU+1
0021  0004-            E       BSS 4   FLP SCRATCH REGISTER
0022  0008-            SP      BSS 2   CURRENT STACK (-128)
0023  000A-            PC      BSS 2   PROGRAM COUNTER
0024  000C-            RUNERR  BSS 1   RUNTIME ERROR CODE
0025  000D-            DEVICE  BSS 1   I/O DEVICE CODE
0026  000E-            ENDSTK  BSS 2   END OF STACK (-128)
0027  0010-            SIGN    BSS 1   TEMPORARY SIGN
0028  0011-            STPROG  BSS 2   START OF USER PROGRAM
0029  0013-            EOPROG  BSS 2   END OF USER PRORMA
0030  0015-            BUFFPN  BSS 1   INPUT BUFFER POINTER
0031  0016-            ENDBUF  BSS 1   END OF INPUT BUFFER
0032  0017-            BASE    BSS 2   CURRENT BASE (-128)
0033  0019-            ABASE   BSS 2   ALTERNATE BASE (-128)
0034  001B-            ARG1    BSS 2   TEMPORARY ARGUMENT
0035  001D-            ARG3    BSS 4   TEMPORARY REGISTERS
0036  0021-            ARG2    BSS 2
0037                   X2      EQU ARG1        FLP REGISTER
0038                   M2      EQU ARG1+1
0039  0023-            IOCHECK BSS 1   IO ERROR CHECKING FLAG
0040  0024-            LINBUF  BSS 56  INPUT LINE BUFFER
0041                   *
0042                   FILFLG  EQU $DA
0043                   FILERR  EQU $DB
0044                   FILDRV  EQU $DC
0045                   TRACK   EQU $DD
0046                   SECTOR  EQU $DE
0047                   DATA    EQU $E0
0048                   VIDPNT  EQU $E9
0049                   POINT   EQU $FA
0050                   KCHAR   EQU $FE

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 22/10/23   R65 ASSEMBLER  PAGE 02

0051                   *
0052                   EMUCOM  EQU $1430       EMULATOR COMMAND REG
0053                   MULTA   EQU $14E0
0054                   MULTB   EQU $14E1
0055                   MULTR   EQU $14E2
0056                   *
0057                   FILTYP  EQU $0300
0058                   FILNAM  EQU $0301
0059                   FILCYC  EQU $0311
0060                   FILSTP  EQU $0312
0061                   FILLOC  EQU $0313
0062                   FILSIZ  EQU $0315
0063                   FILSA   EQU $031A
0064                   FILEA   EQU $031C
0065                   FILNM1  EQU $0320
0066                   FILCY1  EQU $0330
0067                   FILSA1  EQU $0331
0068                   SAVRST  EQU $0333
0069                   CURSEQ  EQU $0335
0070                   MAXSEQ  EQU $0336
0071                   MAXSIZ  EQU $0337
0072                   FIDRTB  EQU $0339
0073                   FIDVTB  EQU $0341
0074                   FIBPTB  EQU $0349
0075                   FIRCTB  EQU $0351
0076                   GRX     EQU $03AE
0077                   GRY     EQU $03AF
0078                   GRC     EQU $03B0
0079                   SFLAG   EQU $1781
0080                   NUMCHR  EQU $178A
0081                   VMON    EQU $17D5
0082                   *
0083                   APLOTCH EQU $C818
0084                   GETKEY  EQU $E000
0085                   AUTOPR  EQU $E00C
0086                   ENDLIN  EQU $E024
0087                   PRTINF  EQU $E027
0088                   GETCHR  EQU $E003
0089                   GETLIN  EQU $E006
0090                   PRTCHR  EQU $E009
0091                   PRTBYT  EQU $E02D
0092                   PRTAX   EQU $E030
0093                   PRTRSA  EQU $E836
0094                   RDFILE  EQU $E815
0095                   SETFID  EQU $E81E
0096                   OPEN    EQU $F00F
0097                   READCH  EQU $F018
0098                   WRITCH  EQU $F01B
0099                   GETNAM  EQU $F815
0100                   *

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 22/10/23   R65 ASSEMBLER  PAGE 03

0101  005C-                    ORG $2000
0102                   *
0103                           PAG

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 22/10/23   R65 ASSEMBLER  PAGE 04

0104                   *
0105                   * ENTRY VECTORS
0106                   *
0107  2000- 4C C8 2A           JMP COLDST      COLD START ENTRY VECTOR
0108  2003- 4C 3F 29           JMP WARMST      WARM START ENTRY VECTOR
0109  2006- 4C 04 29           JMP PERROR      PASCAL ERROR
0110                   *
0111  2009- 84 2D      USERST  WRD ENDCODE+32
0112  200B- FF C7      USEREND WRD $C7FF
0113                   *
0114  200D- 4C F2 FC   HARGUM  JMP $FCF2       #######
0115                   *
0116                   *
0117                   * P-CODE 00:  STOP      (END OF EXECUTION)
0118                   ******************
0119                   * NO ARGUMENTS
0120                   *
0121  2010- A5 11      STOP    LDA STPROG      IS ANOTHER PROGRAM
0122  2012- A6 12              LDX STPROG+1    RUNNING?
0123  2014- CD 09 20           CMP USERST
0124  2017- D0 22              BNE STOP1
0125  2019- EC 0A 20           CPX USERST+1
0126  201C- D0 1D              BNE STOP1
0127                   *
0128  201E- 20 27 E0           JSR PRTINF      NO, STOP PASCAL
0129  2021- 0D 0A 51           BYT $D,$A,'Quit Pascal',$D,$8A
0129  2024- 75 69 74 
0129  2027- 20 50 61 
0129  202A- 73 63 61 
0129  202D- 6C 0D 8A 
0130  2030- AD 81 17           LDA SFLAG
0131  2033- 29 FE              AND =$FE        CLEAR PASCAL RUNTIME BIT
0132  2035- 8D 81 17           STA SFLAG       IN SFLAG
0133  2038- 6C D5 17           JMP (VMON)
0134                   *
0135  203B- 38         STOP1   SEC             YES, COMPUTE OLD SP
0136  203C- E9 8C              SBC =140
0137  203E- B0 01              BCS *+3
0138  2040- CA                 DEX
0139  2041- 85 08              STA SP
0140  2043- 86 09              STX SP+1
0141  2045- A0 8C              LDY =140
0142  2047- 20 65 27           JSR GETBACK
0143  204A- 85 13              STA EOPROG
0144  204C- 86 14              STX EOPROG+1
0145  204E- 20 65 27           JSR GETBACK
0146  2051- 85 11              STA STPROG
0147  2053- 86 12              STX STPROG+1
0148  2055- 20 65 27           JSR GETBACK
0149  2058- 85 0A              STA PC

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 22/10/23   R65 ASSEMBLER  PAGE 05

0150  205A- 86 0B              STX PC+1
0151  205C- 20 65 27           JSR GETBACK
0152  205F- 85 17              STA BASE
0153  2061- 86 18              STX BASE+1
0154  2063- 20 65 27           JSR GETBACK
0155  2066- 85 00              STA ACCU
0156  2068- 86 01              STX ACCU+1
0157  206A- 4C DB 29           JMP LOOP
0158                   *
0159                   *
0160  206D- 4C FF F0   DOPEN1  JMP $F0FF
0161  2070- 4C 45 F1   DOPEN4  JMP $F145
0162  2073- 4C 51 F1   PRFLB1  JMP $F151
0163  2076- 4C 59 F1   CPOINT  JMP $F159
0164  2079- 4C E0 F1   PREPSR  JMP $F1E0
0165  207C- 4C 9E F2   PREPSR1 JMP $F29E
0166  207F- 4C BF F2   CLOSE   JMP $F2BF
0167  2082- 4C 57 F4   READ    JMP $F457
0168  2085- 4C 25 F4   WRITE   JMP $F425
0169  2088- 4C A7 F4   PREPDO  JMP $F4A7
0170  208B- 4C FD F5   DISCER1 JMP $F5FD
0171  208E- 4C 25 F6   ENDDO   JMP $F625
0172  2091- 4C 2C F6   PREPRD  JMP $F62C
0173  2094- 4C 51 F6   PREPWRA JMP $F651
0174  2097- 4C 6D F6   PREPWRB JMP $F66D
0175                   *
0176                   *
0177                   * P-CODE 01: RETN       (RETURN FROM PROCEDURE
0178                   *****************
0179                   * NO ARGUMENTS
0180                   *
0181  209A- A5 17      RETN    LDA BASE        SP=BASE-2
0182  209C- 38                 SEC
0183  209D- E9 02              SBC =2
0184  209F- 85 08              STA SP
0185  20A1- A5 18              LDA BASE+1
0186  20A3- E9 00              SBC =0
0187  20A5- 85 09              STA SP+1
0188  20A7- A0 80              LDY =128        GET STACK TOP ELEMENT
0189  20A9- B1 08              LDA (SP),Y
0190  20AB- 85 00              STA ACCU
0191  20AD- C8                 INY
0192  20AE- B1 08              LDA (SP),Y
0193  20B0- 85 01              STA ACCU+1
0194  20B2- A0 84              LDY =132
0195  20B4- B1 08              LDA (SP),Y      GET SAVED OLD BASE
0196  20B6- 85 17              STA BASE
0197  20B8- C8                 INY
0198  20B9- B1 08              LDA (SP),Y
0199  20BB- 85 18              STA BASE+1

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 22/10/23   R65 ASSEMBLER  PAGE 06

0200  20BD- C8                 INY
0201  20BE- B1 08              LDA (SP),Y      AND RETURN ADDRESS
0202  20C0- 18                 CLC
0203  20C1- 69 02              ADC =2
0204  20C3- 85 0A              STA PC
0205  20C5- C8                 INY
0206  20C6- B1 08              LDA (SP),Y
0207  20C8- 69 00              ADC =0
0208  20CA- 85 0B              STA PC+1
0209  20CC- 60                 RTS
0210                   *
0211                   * P-CODE 02: NEGA       (NEGATE ACCU)
0212                   *****************
0213                   * NO ARGUMENTS
0214                   *
0215  20CD- A9 00      NEGA    LDA =0
0216  20CF- 38                 SEC
0217  20D0- E5 00              SBC ACCU
0218  20D2- 85 00              STA ACCU
0219  20D4- A9 00              LDA =0
0220  20D6- E5 01              SBC ACCU+1
0221  20D8- 85 01              STA ACCU+1
0222  20DA- 60                 RTS
0223                   *
0224                   * P-CODE 03: ADDA       (ADD)
0225                   *****************
0226                   * NO ARGUMENTS
0227                   *
0228  20DB- A0 7E      ADDA    LDY =126
0229  20DD- 18                 CLC
0230  20DE- B1 08              LDA (SP),Y
0231  20E0- 65 00              ADC ACCU
0232  20E2- 85 00              STA ACCU
0233  20E4- C8                 INY
0234  20E5- B1 08              LDA (SP),Y
0235  20E7- 65 01              ADC ACCU+1
0236  20E9- 85 01              STA ACCU+1
0237                   *
0238  20EB- A5 08      DECS2   LDA SP
0239  20ED- 38                 SEC
0240  20EE- E9 02              SBC =2
0241  20F0- 85 08              STA SP
0242  20F2- B0 02              BCS *+4
0243  20F4- C6 09              DEC SP+1
0244  20F6- 60                 RTS
0245                   *
0246                   * P-CODE 04: SUBA       (SUBTRACT)
0247                   *****************
0248                   * NO ARGUMENTS
0249                   *

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 22/10/23   R65 ASSEMBLER  PAGE 07

0250  20F7- A0 7E      SUBA    LDY =126
0251  20F9- 38                 SEC
0252  20FA- B1 08              LDA (SP),Y
0253  20FC- E5 00              SBC ACCU
0254  20FE- 85 00             STA ACCU
0255  2100- C8                 INY
0256  2101- B1 08              LDA (SP),Y
0257  2103- E5 01              SBC ACCU+1
0258  2105- 85 01              STA ACCU+1
0259  2107- 4C EB 20           JMP DECS2
0260                   *
0261                   * P-CODE 05: MULA       (MULTIPLY)
0262                   *****************
0263                   * NO ARGUMENTS
0264                   *
0265  210A- 20 44 21   MULA    JSR GETSIGN     COMPUTE SIGN OF RESULT
0266  210D- A5 00              LDA ACCU
0267  210F- 78                 SEI
0268  2110- 8D E0 14           STA MULTA
0269  2113- A5 1B              LDA ARG1        GET SAVED ARGUMENT
0270  2115- 8D E1 14           STA MULTB
0271  2118- AD E2 14           LDA MULTR
0272  211B- 85 00              STA ACCU
0273  211D- AD E3 14           LDA MULTR+1
0274  2120- A6 1C              LDX ARG1+1
0275  2122- 8E E1 14           STX MULTB
0276  2125- 18                 CLC
0277  2126- 6D E2 14           ADC MULTR
0278  2129- A6 01              LDX ACCU+1
0279  212B- 8E E0 14           STX MULTA
0280  212E- A6 1B              LDX ARG1
0281  2130- 8E E1 14           STX MULTB
0282  2133- 18                 CLC
0283  2134- 6D E2 14           ADC MULTR
0284  2137- 58                 CLI
0285  2138- 29 7F              AND =$7F
0286  213A- 85 01              STA ACCU+1
0287  213C- 20 EB 20           JSR DECS2
0288  213F- A5 10              LDA SIGN
0289  2141- 30 8A              BMI NEGA
0290  2143- 60                 RTS
0291                   *
0292  2144- A5 01      GETSIGN LDA ACCU+1
0293  2146- 85 10              STA SIGN
0294  2148- 10 03              BPL *+5
0295  214A- 20 CD 20           JSR NEGA
0296                   *
0297  214D- A0 7F              LDY =127
0298  214F- B1 08              LDA (SP),Y
0299  2151- 10 14              BPL GETSI1

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 22/10/23   R65 ASSEMBLER  PAGE 08

0300  2153- 45 10              EOR SIGN
0301  2155- 85 10              STA SIGN
0302  2157- 88                 DEY
0303  2158- A9 00              LDA =0
0304  215A- 38                 SEC
0305  215B- F1 08              SBC (SP),Y
0306  215D- 85 1B              STA ARG1
0307  215F- C8                 INY
0308  2160- A9 00              LDA =0
0309  2162- F1 08              SBC (SP),Y
0310  2164- 85 1C              STA ARG1+1
0311  2166- 60                 RTS
0312                   *
0313  2167- 85 1C      GETSI1  STA ARG1+1
0314  2169- 88                 DEY
0315  216A- B1 08              LDA (SP),Y
0316  216C- 85 1B              STA ARG1
0317  216E- 60                 RTS
0318                   *
0319                   * PCODE 06: DIVA        (DIVIDE)
0320                   ****************
0321                   *
0322  216F- A0 7E      DIVA    LDY =126
0323  2171- B1 08              LDA (SP),Y
0324  2173- 85 1B              STA ARG1
0325  2175- C8                 INY
0326  2176- B1 08              LDA (SP),Y
0327  2178- 85 1C              STA ARG1+1
0328  217A- 20 EB 20           JSR DECS2
0329                   *
0330  217D- A5 1C              LDA ARG1+1
0331  217F- 29 80              AND =$80
0332  2181- F0 02              BEQ *+4
0333  2183- A9 FF              LDA =$FF
0334  2185- 85 21              STA ARG2
0335  2187- 85 22              STA ARG2+1
0336  2189- AA                 TAX
0337  218A- 18                 CLC
0338  218B- 65 1B              ADC ARG1
0339  218D- 85 1B              STA ARG1
0340  218F- 8A                 TXA
0341  2190- 65 1C              ADC ARG1+1
0342  2192- 85 1C              STA ARG1+1
0343  2194- 8A                 TXA
0344  2195- 45 01              EOR ACCU+1
0345  2197- 85 10              STA SIGN
0346  2199- 10 03              BPL *+5
0347  219B- 20 CD 20           JSR NEGA
0348  219E- A0 11              LDY =$11
0349  21A0- A5 00              LDA ACCU

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 22/10/23   R65 ASSEMBLER  PAGE 09

0350  21A2- 05 01              ORA ACCU+1
0351  21A4- D0 05              BNE DIV1
0352  21A6- A2 81              LDX =$81        PASCAL RUNTIME ERROR
0353  21A8- 4C 04 29           JMP PERROR      DIVISION BY ZERO
0354                   *
0355  21AB- 38         DIV1    SEC
0356  21AC- A5 21              LDA ARG2
0357  21AE- E5 00              SBC ACCU
0358  21B0- 48                 PHA
0359  21B1- A5 22              LDA ARG2+1
0360  21B3- E5 01              SBC ACCU+1
0361  21B5- 48                 PHA
0362  21B6- 45 22              EOR ARG2+1
0363  21B8- 30 09              BMI DIV2
0364  21BA- 68                 PLA
0365  21BB- 85 22              STA ARG2+1
0366  21BD- 68                 PLA
0367  21BE- 85 21              STA ARG2
0368  21C0- 38                 SEC
0369  21C1- B0 03              BCS DIV3
0370                   *
0371  21C3- 68         DIV2    PLA
0372  21C4- 68                 PLA
0373  21C5- 18                 CLC
0374  21C6- 26 1B      DIV3    ROL ARG1
0375  21C8- 26 1C              ROL ARG1+1
0376  21CA- 26 21              ROL ARG2
0377  21CC- 26 22              ROL ARG2+1
0378  21CE- 88                 DEY
0379  21CF- D0 DA              BNE DIV1
0380  21D1- A5 1B              LDA ARG1
0381  21D3- A6 1C              LDX ARG1+1
0382  21D5- 85 00              STA ACCU
0383  21D7- 86 01              STX ACCU+1
0384  21D9- A5 10              LDA SIGN
0385  21DB- 10 03              BPL *+5
0386  21DD- 4C CD 20           JMP NEGA
0387  21E0- 60                 RTS
0388                   *
0389                   * P-CODE 07: LOWB       (LOW BIT)
0390                   *****************
0391                   * NO ARGUMENTS
0392                   *
0393  21E1- A5 00      LOWB    LDA ACCU
0394  21E3- 29 01              AND =1
0395  21E5- 85 00      LOWB1   STA ACCU
0396  21E7- A9 00              LDA =0
0397  21E9- 85 01              STA ACCU+1
0398  21EB- 60                 RTS
0399                   *

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 22/10/23   R65 ASSEMBLER  PAGE 10

0400                   * P-CODE 08: TEQU       (TEST EQUAL)
0401                   *****************
0402                   *
0403  21EC- 20 F7 20   TEQU    JSR SUBA
0404  21EF- A5 00              LDA ACCU
0405  21F1- 05 01              ORA ACCU+1
0406  21F3- F0 04              BEQ TEQU1
0407  21F5- A9 00              LDA =0
0408  21F7- F0 EC              BEQ LOWB1       UNCOND.
0409                   *
0410  21F9- A9 01      TEQU1   LDA =1
0411  21FB- D0 E8              BNE LOWB1       UNCOND.
0412                   *
0413                   * PCODE 09: TNEQ        (TEST NOT EQUAL)
0414                   ****************
0415                   *
0416  21FD- 20 EC 21  TNEQ    JSR TEQU
0417  2200- A5 00              LDA ACCU
0418  2202- 49 01              EOR =1
0419  2204- 85 00              STA ACCU
0420  2206- 60                 RTS
0421                   *
0422                   * P-CODE 0A: TLES       (TEST LESS)
0423                   *****************
0424                   *
0425  2207- 20 F7 20   TLES    JSR SUBA
0426  220A- A9 00              LDA =0
0427  220C- 06 01              ASL ACCU+1
0428  220E- 2A                 ROL A
0429  220F- 90 D4              BCC LOWB1       UNCOND.
0430                   *
0431                   * P-CODE 0B: TGRE       (TEST GREATER OR EQUAL)
0432                   *****************
0433                   *
0434  2211- 20 07 22   TGRE    JSR TLES
0435  2214- 4C 00 22           JMP TNEQ+3
0436                   *
0437                   * P-CODE 0C: TGRTS      (TEST GREATER)
0438                   ******************
0439                   *
0440  2217- 20 F5 26   TGRT    JSR EXST
0441  221A- 4C 07 22           JMP TLES
0442                   *
0443                   * P-CODE 0D: TLEE       (TEST LESS OR EQUAL)
0444                   *****************
0445                   *
0446  221D- 20 17 22   TLEE    JSR TGRT
0447  2220- 4C 00 22           JMP TNEQ+3
0448                   *
0449                   * P-CODE 0E: ORAC       (BITWISE OR)

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 22/10/23   R65 ASSEMBLER  PAGE 11

0450                   *****************
0451                   *
0452  2223- A0 7E      ORAC    LDY =126
0453  2225- B1 08              LDA (SP),Y
0454  2227- 05 00              ORA ACCU
0455  2229- 85 00              STA ACCU
0456  222B- C8                 INY
0457  222C- B1 08              LDA (SP),Y
0458  222E- 05 01              ORA ACCU+1
0459  2230- 85 01              STA ACCU+1
0460  2232- 4C EB 20           JMP DECS2
0461                   *
0462                   * P-CODE 0F: ANDA       (BITWISE AND)
0463                   *****************
0464                   *
0465  2235- A0 7E      ANDA    LDY =126
0466  2237- B1 08              LDA (SP),Y
0467  2239- 25 00              AND ACCU
0468  223B- 85 00              STA ACCU
0469  223D- C8                 INY
0470  223E- B1 08              LDA (SP),Y
0471  2240- 25 01              AND ACCU+1
0472  2242- 85 01              STA ACCU+1
0473  2244- 4C EB 20           JMP DECS2
0474                   *
0475                   * PCODE 10: EORA        (BITWISE OR)
0476                   ****************
0477                   *
0478  2247- A0 7E      EORA    LDY =126
0479  2249- B1 08              LDA (SP),Y
0480  224B- 45 00              EOR ACCU
0481  224D- 85 00              STA ACCU
0482  224F- C8                 INY
0483  2250- B1 08              LDA (SP),Y
0484  2252- 45 01              EOR ACCU+1
0485  2254- 85 01              STA ACCU+1
0486  2256- 4C EB 20           JMP DECS2
0487                   *
0488                   * P-CODE 11: NOTA       (BITWISE NOT)
0489                   *****************
0490                   *
0491  2259- A5 00      NOTA    LDA ACCU
0492  225B- 49 FF              EOR =$FF
0493  225D- 85 00              STA ACCU
0494  225F- A5 01              LDA ACCU+1
0495  2261- 49 FF              EOR =$FF
0496  2263- 85 01              STA ACCU+1
0497  2265- 60                 RTS
0498                   *
0499                   * P-CODE 12: LEFT       (SHIFT LEFT N BYTES)

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 22/10/23   R65 ASSEMBLER  PAGE 12

0500                   *****************
0501                   *
0502  2266- 20 CD 20           JSR NEGA
0503  2269- A5 01      LEFT    LDA ACCU+1
0504  226B- 30 12              BMI RIGH-3      ARGUMENT NEGATIVE
0505                   *
0506  226D- A6 00              LDX ACCU
0507  226F- F0 0B              BEQ LEFT2       TAKE ONLY LOW BYTE
0508  2271- 20 DC 22           JSR GETS2       GET SECOND NO FROM ST
0509  2274- 06 00      LEFT1   ASL ACCU
0510  2276- 26 01              ROL ACCU+1
0511  2278- CA                 DEX
0512  2279- D0 F9              BNE LEFT1
0513  227B- 60                 RTS
0514                   *
0515  227C- 4C DC 22   LEFT2   JMP GETS2
0516                   *
0517                   * P-CODE 13: RIGH       (SHIFT RIGHT N BYTES)
0518                   *****************
0519                   *
0520  227F- 20 CD 20           JSR NEGA
0521  2282- A5 01      RIGH    LDA ACCU+1
0522  2284- 30 E0              BMI LEFT-3
0523  2286- A6 00              LDX ACCU
0524  2288- F0 F2              BEQ LEFT2
0525  228A- 20 DC 22           JSR GETS2
0526  228D- 46 01      RIGH1   LSR ACCU+1
0527  228F- A9 00              LDA =0
0528  2291- 90 02              BCC *+4
0529  2293- A9 80              LDA =128
0530  2295- 46 00              LSR ACCU
0531  2297- 05 00              ORA ACCU
0532  2299- 85 00              STA ACCU
0533  229B- CA                 DEX
0534  229C- D0 EF              BNE RIGH1
0535  229E- 60                 RTS
0536                   *
0537                   * P-CODE 14:INCA        (INCREMENT ACCU)
0538                   ****************
0539                   *
0540  229F- E6 00      INCA    INC ACCU
0541  22A1- D0 02              BNE *+4
0542  22A3- E6 01              INC ACCU+1
0543  22A5- 60                 RTS
0544                   *
0545                   * P-CODE 15: DECA       (DECREMENT ACCU)
0546                   *****************
0547                   *
0548  22A6- A5 00      DECA    LDA ACCU
0549  22A8- D0 02              BNE *+4

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 22/10/23   R65 ASSEMBLER  PAGE 13

0550  22AA- C6 01              DEC ACCU+1
0551  22AC- C6 00              DEC ACCU
0552  22AE- 60                 RTS
0553                   *
0554                   * P-CODE 16: COPY       (COPY ACCU0
0555                   *****************
0556                   *
0557  22AF- 20 BE 22   COPY    JSR INCS2       INCREMENT STACK
0558  22B2- A0 7E              LDY =126
0559  22B4- A5 00              LDA ACCU
0560  22B6- 91 08              STA (SP),Y
0561  22B8- C8                 INY
0562  22B9- A5 01              LDA ACCU+1
0563  22BB- 91 08              STA (SP),Y
0564  22BD- 60                 RTS
0565                   *
0566  22BE- A9 02      INCS2   LDA =2
0567  22C0- 18                 CLC
0568  22C1- 65 08              ADC SP
0569  22C3- 85 08              STA SP
0570  22C5- 90 02              BCC *+4
0571  22C7- E6 09              INC SP+1
0572  22C9- C5 0E      INCS2A  CMP ENDSTK      TEST STACK OVERFLOW
0573  22CB- A5 09              LDA SP+1
0574  22CD- E5 0F              SBC ENDSTK+1
0575  22CF- B0 06              BCS INCS2B
0576  22D1- A9 05              LDA =5          LET EMULATOR KNOW THAT
0577  22D3- 8D 30 14           STA EMUCOM      SP HAS BEEN INCREASED
0578  22D6- 60                 RTS
0579                   *
0580  22D7- A0 82      INCS2B  LDY =$82        PASCAL RUN TIME ERROR
0581  22D9- 4C 04 29           JMP PERROR      STACK OVERFLOW
0582                   *
0583                   * GETS2
0584                   *
0585  22DC- A0 7E      GETS2   LDY =126
0586  22DE- B1 08              LDA (SP),Y
0587  22E0- 85 00              STA ACCU
0588  22E2- C8                 INY
0589  22E3- B1 08              LDA (SP),Y
0590  22E5- 85 01              STA ACCU+1
0591  22E7- 4C EB 20           JMP DECS2
0592                   *
0593                   * P-CODE 17: PEEK
0594                   *****************
0595                   *
0596  22EA- A0 00      PEEK    LDY =0
0597  22EC- B1 00              LDA (ACCU),Y
0598  22EE- 85 00              STA ACCU
0599  22F0- 84 01              STY ACCU+1

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 22/10/23   R65 ASSEMBLER  PAGE 14

0600  22F2- 60                 RTS
0601                   *
0602                   * P-CODE 18: POKE
0603                   *****************
0604                   *
0605  22F3- A6 00      POKE    LDX ACCU
0606  22F5- 20 DC 22           JSR GETS2
0607  22F8- A0 00              LDY =0
0608  22FA- 8A                 TXA
0609  22FB- 91 00              STA (ACCU),Y
0610  22FD- 4C DC 22          JMP GETS2
0611                   *
0612                   * P-CODE 19: CALA
0613                   *****************
0614                   *
0615  2300- 20 06 23   CALA    JSR CALA1
0616  2303- 4C DC 22           JMP GETS2
0617                   *
0618  2306- 6C 00 00   CALA1   JMP (ACCU)
0619                   *
0620                   * P-CODE 1A: RLIN
0621                   *****************
0622                   *
0623  2309- 20 06 E0   RLIN    JSR GETLIN
0624  230C- B0 27              BCS RLINESC     IF ESC
0625  230E- A2 00              LDX =0
0626  2310- B1 E9              LDA (VIDPNT),Y
0627  2312- 29 7F              AND =$7F
0628  2314- 95 24              STA LINBUF,X
0629  2316- E8                 INX
0630  2317- C8                 INY
0631  2318- CC 8A 17           CPY NUMCHR
0632  231B- 90 F3              BCC *-11
0633  231D- F0 F1              BEQ *-13
0634  231F- CA                 DEX
0635  2320- 30 06              BMI *+8
0636  2322- B5 24              LDA LINBUF,X
0637  2324- C9 20              CMP =$20
0638  2326- F0 F7              BEQ *-7
0639  2328- E8                 INX
0640  2329- 86 16              STX ENDBUF
0641  232B- A9 00              LDA =0
0642  232D- 85 15              STA BUFFPN
0643  232F- 20 27 E0           JSR PRTINF
0644  2332- 0D 8A              BYT $D,$8A
0645  2334- 60                 RTS
0646                   *
0647  2335- 4C 10 20   RLINESC JMP STOP        ESCAPE
0648                   *
0649                   * P-CODE 1B: GETC

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 22/10/23   R65 ASSEMBLER  PAGE 15

0650                   *****************
0651                   *
0652  2338- 20 AF 22   GETC    JSR COPY
0653  233B- 20 99 28           JSR GETCHR0
0654  233E- 85 00      GETC1   STA ACCU
0655  2340- A9 00              LDA =0
0656  2342- 85 01              STA ACCU+1
0657  2344- 60                 RTS
0658                   *
0659                   * P-CODE 1C: GETN
0660                   *****************
0661                   *
0662  2345- 20 AF 22   GETN    JSR COPY
0663  2348- A9 00              LDA =0
0664  234A- 85 00              STA ACCU
0665  234C- 85 01              STA ACCU+1
0666  234E- 85 10              STA SIGN
0667  2350- 20 99 28   GETN0   JSR GETCHR0
0668  2353- C9 20              CMP =' '
0669  2355- F0 F9              BEQ GETN0
0670  2357- C9 2D              CMP ='-'
0671  2359- D0 05              BNE GETN1
0672                   *
0673  235B- C6 10              DEC SIGN
0674  235D- 4C 64 23           JMP GETN2
0675                   *
0676  2360- C9 2B      GETN1    CMP ='+'
0677  2362- D0 03              BNE GETN2+3
0678                   *
0679  2364- 20 99 28   GETN2   JSR GETCHR0
0680  2367- C9 30              CMP ='0'
0681  2369- 90 2F              BCC GETN3
0682  236B- C9 3A              CMP ='9'+1
0683  236D- B0 2B              BCS GETN3
0684  236F- 38                 SEC
0685  2370- E9 30              SBC ='0'
0686  2372- 48                 PHA
0687  2373- 06 00              ASL ACCU
0688  2375- 26 01              ROL ACCU+1
0689  2377- A6 00              LDX ACCU
0690  2379- A4 01              LDY ACCU+1
0691  237B- 06 00              ASL ACCU
0692  237D- 26 01              ROL ACCU+1
0693  237F- 06 00              ASL ACCU
0694  2381- 26 01              ROL ACCU+1
0695  2383- 18                 CLC
0696  2384- 8A                 TXA
0697  2385- 65 00              ADC ACCU
0698  2387- 85 00              STA ACCU
0699  2389- 98                 TYA

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 22/10/23   R65 ASSEMBLER  PAGE 16

0700  238A- 65 01              ADC ACCU+1
0701  238C- 85 01              STA ACCU+1
0702  238E- 68                 PLA
0703  238F- 18                 CLC
0704  2390- 65 00              ADC ACCU
0705  2392- 85 00              STA ACCU
0706  2394- 90 CE              BCC GETN2
0707  2396- E6 01              INC ACCU+1
0708  2398- B0 CA              BCS GETN2
0709                   *
0710  239A- A5 10      GETN3   LDA SIGN
0711  239C- F0 03              BEQ *+5
0712  239E- 4C CD 20           JMP NEGA
0713  23A1- 60                 RTS
0714                   *
0715                   * P-CODE 1D: PRTC
0716                   *****************
0717                   *
0718  23A2- A5 00      PRTC    LDA ACCU
0719  23A4- 20 C9 28           JSR PRTCHR0
0720  23A7- 4C DC 22           JMP GETS2
0721                   *
0722                   * P-CODE 1E: PRTN
0723                   *****************
0724                   *
0725  23AA- A5 01      PRTN    LDA ACCU+1
0726  23AC- 10 08              BPL PRTN1
0727  23AE- 20 CD 20           JSR NEGA
0728  23B1- A9 2D              LDA ='-'
0729  23B3- 20 C9 28           JSR PRTCHR0
0730                   *
0731  23B6- A5 00      PRTN1   LDA ACCU
0732  23B8- A6 01              LDX ACCU+1
0733  23BA- 85 21              STA ARG2
0734  23BC- 86 22              STX ARG2+1
0735  23BE- A9 1F              LDA =$1F
0736  23C0- 85 1D              STA ARG3
0737  23C2- 85 1F              STA ARG3+2
0738  23C4- A9 2A              LDA =$2A
0739  23C6- 85 1E              STA ARG3+1
0740  23C8- 85 20              STA ARG3+3
0741  23CA- A6 21              LDX ARG2
0742  23CC- A4 22              LDY ARG2+1
0743  23CE- 38                 SEC
0744  23CF- E6 1D      PRTN2   INC ARG3
0745  23D1- 8A                 TXA
0746  23D2- E9 10              SBC =$10
0747  23D4- AA                 TAX
0748  23D5- 98                 TYA
0749  23D6- E9 27              SBC =$27

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 22/10/23   R65 ASSEMBLER  PAGE 17

0750  23D8- A8                 TAY
0751  23D9- B0 F4              BCS PRTN2
0752  23DB- C6 1E      PRTN3   DEC ARG3+1
0753  23DD- 8A                 TXA
0754  23DE- 69 E8              ADC =$E8
0755  23E0- AA                 TAX
0756  23E1- 98                 TYA
0757  23E2- 69 03              ADC =$03
0758  23E4- A8                 TAY
0759  23E5- 90 F4              BCC PRTN3
0760  23E7- 8A                 TXA
0761  23E8- 38         PRTN4   SEC
0762  23E9- E6 1F      PRTN5   INC ARG3+2
0763  23EB- E9 64              SBC =$64
0764  23ED- B0 FA              BCS PRTN5
0765  23EF- 88                 DEY
0766  23F0- 10 F6              BPL PRTN4
0767  23F2- C6 20      PRTN6   DEC ARG3+3
0768  23F4- 69 0A              ADC =$A
0769  23F6- 90 FA              BCC PRTN6
0770  23F8- 09 30              ORA =$30
0771  23FA- 85 21              STA ARG2
0772  23FC- A9 20              LDA =$20
0773  23FE- 85 22             STA ARG2+1
0774  2400- A2 FB              LDX =$FB
0775  2402- 86 10      PRTN7   STX SIGN
0776  2404- B5 22              LDA ARG2+1,X
0777  2406- 05 22              ORA ARG2+1
0778  2408- C9 20              CMP =$20
0779  240A- F0 09              BEQ PRTN8
0780  240C- A0 30              LDY =$30
0781  240E- 84 22              STY ARG2+1
0782  2410- 05 22              ORA ARG2+1
0783  2412- 20 C9 28           JSR PRTCHR0
0784  2415- A6 10      PRTN8   LDX SIGN
0785  2417- E8                 INX
0786  2418- D0 E8              BNE PRTN7
0787  241A- 4C DC 22           JMP GETS2
0788                   *
0789                   * P-CODE 1F: PRTS
0790                   *****************
0791                   *
0792  241D- 06 00      PRTS    ASL ACCU
0793  241F- 26 01              ROL ACCU+1
0794  2421- A5 08              LDA SP
0795  2423- 38                 SEC
0796  2424- E5 00              SBC ACCU
0797  2426- 85 00              STA ACCU
0798  2428- 48                 PHA
0799  2429- A5 09              LDA SP+1

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 22/10/23   R65 ASSEMBLER  PAGE 18

0800  242B- E5 01              SBC ACCU+1
0801  242D- 85 01              STA ACCU+1
0802  242F- 48                 PHA
0803  2430- A0 80      OUTST1  LDY =128
0804  2432- B1 00              LDA (ACCU),Y
0805  2434- 20 C9 28           JSR PRTCHR0
0806  2437- A5 00              LDA ACCU
0807  2439- 18                 CLC
0808  243A- 69 02              ADC =2
0809  243C- 85 00              STA ACCU
0810  243E- 90 02              BCC *+4
0811  2440- E6 01              INC ACCU+1
0812  2442- C5 08              CMP SP
0813  2444- A5 01              LDA ACCU+1
0814  2446- E5 09              SBC SP+1
0815  2448- 90 E6              BCC OUTST1
0816  244A- 68                 PLA
0817  244B- 85 09              STA SP+1
0818  244D- 68                 PLA
0819  244E- 85 08              STA SP
0820  2450- 4C DC 22           JMP GETS2
0821                   *
0822                   * P-CODE 20: LITB
0823                   *****************
0824                   *
0825  2453- 20 AF 22   LITB    JSR COPY
0826  2456- 20 9D 24           JSR FETCH
0827  2459- 85 00              STA ACCU
0828  245B- A9 00              LDA =0
0829  245D- 85 01              STA ACCU+1
0830  245F- 60                 RTS
0831                   *
0832                   * P-CODE 21: INCB
0833                   *****************
0834                   *
0835  2460- A0 80      INCB    LDY =128        SAVE CURRENT ACCU
0836  2462- A5 00              LDA ACCU
0837  2464- 91 08              STA (SP),Y
0838  2466- C8                 INY
0839  2467- A5 01              LDA ACCU+1
0840  2469- 91 08              STA (SP),Y
0841  246B- 20 9D 24           JSR FETCH
0842  246E- A2 00              LDX =0
0843  2470- A8                 TAY             TEST A
0844  2471- 10 01              BPL *+3
0845  2473- CA                 DEX
0846  2474- 18                 CLC
0847  2475- 65 08              ADC SP
0848  2477- 85 08              STA SP
0849  2479- 8A                 TXA

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 22/10/23   R65 ASSEMBLER  PAGE 19

0850  247A- 65 09              ADC SP+1
0851  247C- 85 09              STA SP+1
0852  247E- A5 08      INCB1   LDA SP
0853  2480- 20 C9 22           JSR INCS2A      TEST STACK OVERFLOW
0854  2483- A0 80              LDY =128        AND GET NEW ACCU
0855  2485- B1 08              LDA (SP),Y
0856  2487- 85 00              STA ACCU
0857  2489- C8                 INY
0858  248A- B1 08              LDA (SP),Y
0859  248C- 85 01              STA ACCU+1
0860  248E- 60                 RTS
0861                   *
0862                   * P-CODE 22: LITW
0863                   *****************
0864                   *
0865  248F- 20 AF 22   LITW    JSR COPY
0866  2492- 20 9D 24           JSR FETCH
0867  2495- 85 00              STA ACCU
0868  2497- 20 9D 24           JSR FETCH
0869  249A- 85 01              STA ACCU+1
0870  249C- 60                 RTS
0871                   *
0872                   * FETCH
0873                   *
0874  249D- A0 00      FETCH   LDY =0
0875  249F- B1 0A              LDA (PC),Y
0876  24A1- E6 0A              INC PC
0877  24A3- D0 02              BNE *+4
0878  24A5- E6 0B              INC PC+1
0879  24A7- 60                 RTS
0880                   *
0881                   * P-CODE 23: INCW
0882                   *****************
0883                   *
0884  24A8- A0 80      INCW    LDY =128        SAVE CURRENT ACCU
0885  24AA- A5 00              LDA ACCU
0886  24AC- 91 08              STA (SP),Y
0887  24AE- C8                 INY
0888  24AF- A5 01              LDA ACCU+1
0889  24B1- 91 08              STA (SP),Y
0890  24B3- 20 9D 24           JSR FETCH
0891  24B6- 18                 CLC
0892  24B7- 65 08              ADC SP
0893  24B9- 85 08              STA SP
0894  24BB- 20 9D 24           JSR FETCH
0895  24BE- 65 09              ADC SP+1
0896  24C0- 85 09              STA SP+1
0897  24C2- 4C 7E 24           JMP INCB1
0898                   *
0899                   * P-CODE 24: JUMP

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 22/10/23   R65 ASSEMBLER  PAGE 20

0900                   *****************
0901                   *
0902  24C5- A0 00      JUMP    LDY =0
0903  24C7- B1 0A              LDA (PC),Y
0904  24C9- 18                 CLC
0905  24CA- 65 0A              ADC PC
0906  24CC- AA                 TAX
0907  24CD- C8                 INY
0908  24CE- B1 0A              LDA (PC),Y
0909  24D0- 65 0B              ADC PC+1
0910  24D2- 86 0A              STX PC
0911  24D4- 85 0B              STA PC+1
0912  24D6- 60                 RTS
0913                   *
0914                   * P-CODE 25: JMPZ
0915                   *****************
0916                   *
0917  24D7- 46 00      JMPZ    LSR ACCU
0918  24D9- 08                 PHP
0919  24DA- 20 DC 22           JSR GETS2
0920  24DD- 28                 PLP
0921  24DE- 90 E5              BCC JUMP
0922                   *
0923  24E0- A5 0A              LDA PC
0924  24E2- 18                 CLC
0925  24E3- 69 02              ADC =2
0926  24E5- 85 0A              STA PC
0927  24E7- 90 02              BCC *+4
0928  24E9- E6 0B              INC PC+1
0929  24EB- 60                 RTS
0930                   *
0931                   * P-CODE 26: JMPO
0932                   *****************
0933                   *
0934  24EC- A5 00      JMPO    LDA ACCU
0935  24EE- 49 01              EOR =1
0936  24F0- 85 00              STA ACCU
0937  24F2- 4C D7 24           JMP JMPZ
0938                   *
0939                   * P-CODE 27: LOAD
0940                   *****************
0941                   *
0942  24F5- 20 AF 22   LOAD    JSR COPY
0943  24F8- 20 9D 24           JSR FETCH
0944  24FB- AA                 TAX             LEVEL DIFFERENCE
0945  24FC- 20 9D 24           JSR FETCH
0946  24FF- 85 1B             STA ARG1
0947  2501- 20 9D 24           JSR FETCH
0948  2504- 85 1C      LOAD1   STA ARG1+1
0949  2506- 20 32 25           JSR FBASE3

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 22/10/23   R65 ASSEMBLER  PAGE 21

0950  2509- A0 80      LOAD2   LDY =128
0951  250B- B1 19              LDA (ABASE),Y
0952  250D- 85 00              STA ACCU
0953  250F- C8                 INY
0954  2510- B1 19              LDA (ABASE),Y
0955  2512- 85 01              STA ACCU+1
0956  2514- 60                 RTS
0957                   *
0958                   * FBASE
0959                   *
0960  2515- A5 17      FBASE   LDA BASE
0961  2517- A4 18              LDY BASE+1
0962  2519- 85 19              STA ABASE
0963  251B- 84 1A              STY ABASE+1
0964  251D- E0 00              CPX =0
0965  251F- F0 10              BEQ FBASE2
0966                   *
0967  2521- A0 80      FBASE1  LDY =128
0968  2523- B1 19              LDA (ABASE),Y
0969  2525- 48                 PHA
0970  2526- C8                 INY
0971  2527- B1 19              LDA (ABASE),Y
0972  2529- 85 1A              STA ABASE+1
0973  252B- 68                 PLA
0974  252C- 85 19              STA ABASE
0975  252E- CA                 DEX
0976  252F- D0 F0              BNE FBASE1
0977  2531- 60         FBASE2  RTS
0978                   *
0979  2532- 20 15 25   FBASE3  JSR FBASE
0980  2535- 18                 CLC
0981  2536- A5 1B              LDA ARG1
0982  2538- 65 19              ADC ABASE
0983  253A- 85 19              STA ABASE
0984  253C- A5 1C              LDA ARG1+1
0985  253E- 65 1A              ADC ABASE+1
0986  2540- 85 1A              STA ABASE+1
0987  2542- 60                 RTS
0988                   *
0989                   * P-CODE 28: LODX
0990                   *****************
0991                   *
0992  2543- 20 9D 24   LODX    JSR FETCH
0993  2546- AA                 TAX
0994  2547- 20 9D 24           JSR FETCH
0995  254A- 06 00              ASL ACCU
0996  254C- 26 01              ROL ACCU+1
0997  254E- 18                 CLC
0998  254F- 65 00              ADC ACCU
0999  2551- 85 1B              STA ARG1

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 22/10/23   R65 ASSEMBLER  PAGE 22

1000  2553- 08                 PHP
1001  2554- 20 9D 24           JSR FETCH
1002  2557- 28                 PLP
1003  2558- 65 01              ADC ACCU+1
1004  255A- 4C 04 25           JMP LOAD1
1005                   *
1006                   * P-CODE 29: STOR
1007                   *****************
1008                   *
1009  255D- 20 9D 24   STOR    JSR FETCH
1010  2560- AA                 TAX
1011  2561- 20 9D 24           JSR FETCH
1012  2564- 85 1B              STA ARG1
1013  2566- 20 9D 24           JSR FETCH
1014  2569- 85 1C              STA ARG1+1
1015  256B- 20 32 25   STOR1   JSR FBASE3
1016  256E- A0 80      STOR2   LDY =128
1017  2570- A5 00              LDA ACCU
1018  2572- 91 19              STA (ABASE),Y
1019  2574- C8                 INY
1020  2575- A5 01              LDA ACCU+1
1021  2577- 91 19              STA (ABASE),Y
1022  2579- 4C DC 22           JMP GETS2
1023                   *
1024                   * P-CODE 2A: STOX
1025                   *****************
1026                   *
1027  257C- 20 9D 24   STOX    JSR FETCH
1028  257F- AA                 TAX
1029  2580- A0 7E              LDY =126
1030  2582- B1 08              LDA (SP),Y
1031  2584- 0A                 ASL A
1032  2585- 85 1B              STA ARG1
1033  2587- C8                 INY
1034  2588- B1 08              LDA (SP),Y
1035  258A- 2A                 ROL A
1036  258B- 85 1C              STA ARG1+1
1037  258D- 20 9D 24           JSR FETCH
1038  2590- 18                 CLC
1039  2591- 65 1B              ADC ARG1
1040  2593- 85 1B              STA ARG1
1041  2595- 20 9D 24           JSR FETCH
1042  2598- 65 1C              ADC ARG1+1
1043  259A- 85 1C              STA ARG1+1
1044  259C- 20 EB 20           JSR DECS2
1045  259F- 4C 6B 25           JMP STOR1
1046                   *
1047                   * P-CODE 2B: CALL
1048                   *****************
1049                   *

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 22/10/23   R65 ASSEMBLER  PAGE 23

1050  25A2- 20 9D 24   CALL    JSR FETCH
1051  25A5- AA                 TAX
1052  25A6- 20 15 25           JSR FBASE
1053  25A9- A0 82              LDY =130
1054  25AB- A5 19              LDA ABASE
1055  25AD- 91 08              STA (SP),Y
1056  25AF- C8                 INY
1057  25B0- A5 1A              LDA ABASE+1
1058  25B2- 91 08              STA (SP),Y
1059  25B4- C8                 INY
1060  25B5- A5 17              LDA BASE
1061  25B7- 91 08              STA (SP),Y
1062  25B9- C8                 INY
1063  25BA- A5 18              LDA BASE+1
1064  25BC- 91 08              STA (SP),Y
1065  25BE- C8                 INY
1066  25BF- A5 0A              LDA PC
1067  25C1- 91 08              STA (SP),Y
1068  25C3- C8                 INY
1069  25C4- A5 0B              LDA PC+1
1070  25C6- 91 08              STA (SP),Y
1071  25C8- A5 08              LDA SP
1072  25CA- 18                 CLC
1073  25CB- 69 02              ADC =2
1074  25CD- 85 17              STA BASE
1075  25CF- A5 09              LDA SP+1
1076  25D1- 69 00              ADC =0
1077  25D3- 85 18              STA BASE+1
1078  25D5- 4C C5 24           JMP JUMP
1079                   *
1080                   * PCODE 2C: SDEV
1081                   ****************
1082                   *
1083  25D8- A5 00      SDEV    LDA ACCU
1084  25DA- 85 0D              STA DEVICE
1085  25DC- 4C DC 22           JMP GETS2
1086                   *
1087                   * PCODE 2D: RDEV
1088                   ****************
1089                   *
1090  25DF- A9 00      RDEV    LDA =0
1091  25E1- 85 0D              STA DEVICE
1092  25E3- 60                 RTS
1093                   *
1094                   * PCODE 2E: FNAM
1095                   ****************
1096                   *
1097  25E4- 20 27 E0   FNAM    JSR PRTINF
1098  25E7- 20 3D A0           BYT ' = '+128
1099  25EA- 20 06 E0           JSR GETLIN

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 22/10/23   R65 ASSEMBLER  PAGE 24

1100  25ED- 20 15 F8           JSR GETNAM
1101  25F0- 20 0D 20           JSR HARGUM
1102  25F3- 85 DC              STA FILDRV
1103  25F5- 20 0D 20           JSR HARGUM
1104  25F8- 8D 13 03           STA FILLOC
1105  25FB- 20 27 E0           JSR PRTINF
1106  25FE- 0D 8A             BYT $D,$8A
1107  2600- 60                 RTS
1108                   *
1109                   * P-CODE 2F: OPNR
1110                   *****************
1111                   *
1112                   * NO AUTOMATIC ERROR TESTING
1113                   *
1114  2601- A9 00      OPNR    LDA =0
1115  2603- 85 DA              STA FILFLG
1116  2605- 20 AF 22           JSR COPY
1117  2608- 20 0F F0           JSR OPEN
1118  260B- C8                 INY
1119  260C- C8                 INY
1120  260D- 84 00              STY ACCU
1121  260F- 85 01              STA ACCU+1
1122  2611- 60                 RTS
1123                   *
1124                   * P-CODE 30: OPNW
1125                   *****************
1126                   *
1127  2612- A9 20      OPNW    LDA =$20
1128  2614- 4C 03 26           JMP OPNR+2
1129                   *
1130                   * P-CODE 31: CLOS
1131                   *****************
1132                   *
1133                   * NO AUTOMATIC ERROR CHECKING
1134                   *
1135  2617- A6 00      CLOS    LDX ACCU
1136  2619- CA                 DEX
1137  261A- CA                 DEX
1138  261B- 20 41 2D           JSR CLOSRA
1139  261E- 4C DC 22           JMP GETS2
1140                   *
1141                   * P-CODE 32: PRTI
1142                   *****************
1143                   *
1144  2621- 20 9D 24   PRTI    JSR FETCH
1145  2624- 48                 PHA
1146  2625- 29 7F              AND =$7F
1147  2627- 20 C9 28           JSR PRTCHR0
1148  262A- 68                 PLA
1149  262B- 10 F4              BPL PRTI

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 22/10/23   R65 ASSEMBLER  PAGE 25

1150  262D- 60                 RTS
1151                   *
1152                   * P-CODE 33: GHGH       (GET HIGH)
1153                   *****************
1154                   *
1155  262E- A5 01      GHGH    LDA ACCU+1
1156  2630- 85 00              STA ACCU
1157                   *
1158                   * P-CODE 34: GLOW
1159                   *****************
1160                   *
1161  2632- A9 00      GLOW    LDA =0
1162  2634- 85 01              STA ACCU+1
1163  2636- 60                 RTS
1164                   *
1165                   * P-CODE 35:PHGH
1166                   ****************
1167                   *
1168  2637- A0 7E      PHGH    LDY =126
1169  2639- B1 08              LDA (SP),Y
1170  263B- 85 01              STA ACCU+1
1171  263D- 4C EB 20           JMP DECS2
1172                   *
1173                   * P-CODE 36: PLOW
1174                   *****************
1175                   *
1176  2640- A0 7E      PLOW    LDY =126
1177  2642- B1 08              LDA (SP),Y
1178  2644- 85 00              STA ACCU
1179  2646- 4C EB 20           JMP DECS2
1180                   *
1181                   * P-CODE 37: GSEC
1182                   *****************
1183                   * DEVICE HAS TO BE SET  ########
1184                   *
1185  2649- 20 5B 26   GSEC    JSR PREPSEC
1186  264C- 4C 82 20           JMP READ
1187  264F- 4C 8E 20           JMP ENDDO
1188                   *
1189                   * P-CODE 38: PSEC
1190                   *****************
1191                   * DEVICE HAS TO BE SET  ########
1192                   *
1193  2652- 20 5B 26   PSEC    JSR PREPSEC
1194  2655- 20 85 20           JSR WRITE
1195  2658- 4C 8E 20           JMP ENDDO
1196                   *
1197  265B- EA         PREPSEC NOP             ########
1198  265C- EA                 NOP
1199  265D- EA                 NOP

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 22/10/23   R65 ASSEMBLER  PAGE 26

1200  265E- EA                 NOP
1201  265F- A5 00              LDA ACCU
1202  2661- A6 01              LDX ACCU+1
1203  2663- 85 E0              STA DATA
1204  2665- 86 E1              STX DATA+1
1205  2667- A0 7E              LDY =126
1206  2669- B1 08              LDA (SP),Y
1207  266B- 85 DE              STA SECTOR
1208  266D- A0 7C              LDY =124
1209  266F- B1 08              LDA (SP),Y
1210  2671- 85 DD              STA TRACK
1211  2673- A5 08              LDA SP
1212  2675- 38                 SEC
1213  2676- E9 04              SBC =4
1214  2678- 20 F0 20           JSR DECS2+5
1215  267B- 20 DC 22           JSR GETS2
1216  267E- 4C 88 20           JMP PREPDO
1217                   *
1218                   * P-CODE 39: NBYT       LOAD N BYTES IMMEDIATELY
1219                   *****************
1220                   *
1221  2681- 20 9D 24   NBYT    JSR FETCH
1222  2684- AA                 TAX             BYTE COUNTER
1223  2685- 20 AF 22   NBYT1   JSR COPY
1224  2688- 20 9D 24           JSR FETCH
1225  268B- 84 01              STY ACCU+1      Y=0
1226  268D- 85 00              STA ACCU
1227  268F- CA                 DEX
1228  2690- D0 F3              BNE NBYT1
1229  2692- 60                 RTS
1230                   *
1231                   * P-CODE 3A: NWRD       LOAD N WORD IMMEDIATELY
1232                   *****************
1233                   *
1234  2693- 20 9D 24   NWRD    JSR FETCH
1235  2696- AA                 TAX             WORD COUNTER
1236  2697- 20 AF 22   NWRD1   JSR COPY
1237  269A- 20 9D 24           JSR FETCH
1238  269D- 85 00              STA ACCU
1239  269F- 20 9D 24           JSR FETCH
1240  26A2- 85 01              STA ACCU+1
1241  26A4- CA                 DEX
1242  26A5- D0 F0              BNE NWRD1
1243  26A7- 60                 RTS
1244                   *
1245                   * P-CODE 3B: LODN       LOAD N MORE WORDS
1246                   *****************
1247                   *
1248  26A8- 20 9D 24   LODN    JSR FETCH
1249  26AB- AA                 TAX

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 22/10/23   R65 ASSEMBLER  PAGE 27

1250  26AC- 20 AF 22   LODN1   JSR COPY
1251  26AF- A5 19              LDA ABASE
1252  26B1- 18                 CLC
1253  26B2- 69 02              ADC =2
1254  26B4- 85 19              STA ABASE
1255  26B6- 90 02              BCC *+4
1256  26B8- E6 1A              INC ABASE+1
1257  26BA- 20 09 25           JSR LOAD2
1258  26BD- CA                 DEX
1259  26BE- D0 EC              BNE LODN1
1260  26C0- 60                 RTS
1261                   *
1262                   * P-CODE 3C: STON       STORE N MORE WORDS
1263                   *****************
1264                   *
1265  26C1- 20 9D 24   STON    JSR FETCH
1266  26C4- AA                 TAX
1267  26C5- A5 19      STON1   LDA ABASE
1268  26C7- 38                 SEC
1269  26C8- E9 02              SBC =2
1270  26CA- 85 19              STA ABASE
1271  26CC- B0 02              BCS *+4
1272  26CE- C6 1A              DEC ABASE+1
1273  26D0- 20 6E 25           JSR STOR2
1274  26D3- CA                 DEX
1275  26D4- D0 EF              BNE STON1
1276  26D6- 60                 RTS
1277                   *
1278                   * P-CODE 3D: LODI       LOAD INDIRECT
1279                   *****************
1280                   *
1281  26D7- 20 DD 26   LODI    JSR GETACC
1282  26DA- 4C 09 25           JMP LOAD2
1283                   *
1284  26DD- A5 00      GETACC  LDA ACCU
1285  26DF- A6 01              LDX ACCU+1
1286  26E1- 38                 SEC
1287  26E2- E9 80              SBC =128
1288  26E4- B0 01              BCS *+3
1289  26E6- CA                 DEX
1290  26E7- 85 19              STA ABASE
1291  26E9- 86 1A              STX ABASE+1
1292  26EB- 60                 RTS
1293                   *
1294                   * P-CODE 3E: STOI       STORE INDIRECT
1295                   *****************
1296                   *
1297  26EC- 20 DD 26   STOI    JSR GETACC
1298  26EF- 20 DC 22           JSR GETS2
1299  26F2- 4C 6E 25           JMP STOR2

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 22/10/23   R65 ASSEMBLER  PAGE 28

1300                   *
1301                   * P-CODE 3F: EXST       EXCHANGE STACK
1302                   *****************
1303                   *
1304  26F5- A0 7E      EXST    LDY =126
1305  26F7- B1 08              LDA (SP),Y
1306  26F9- AA                 TAX
1307  26FA- A5 00              LDA ACCU
1308  26FC- 91 08              STA (SP),Y
1309  26FE- 86 00             STX ACCU
1310  2700- C8                 INY
1311  2701- B1 08              LDA (SP),Y
1312  2703- AA                 TAX
1313  2704- A5 01              LDA ACCU+1
1314  2706- 91 08              STA (SP),Y
1315  2708- 86 01              STX ACCU+1
1316  270A- 60                 RTS
1317                   *
1318                   * P-CODE 40 TIND        TEST INDEX
1319                   ****************
1320                   *
1321  270B- 20 9D 24   TIND    JSR FETCH       LOWLIM-1
1322  270E- AA                 TAX
1323  270F- 20 9D 24           JSR FETCH
1324  2712- E4 00              CPX ACCU
1325  2714- E5 01              SBC ACCU+1
1326  2716- 70 0E              BVS TINDERR
1327                   *
1328  2718- 20 9D 24           JSR FETCH       HIGHLIM
1329  271B- AA                 TAX
1330  271C- 20 9D 24           JSR FETCH
1331  271F- E4 00              CPX ACCU
1332  2721- E5 01              SBC ACCU+1
1333  2723- 90 01              BCC TINDERR
1334  2725- 60                 RTS
1335                   *
1336  2726- A2 83      TINDERR LDX =$83        RUNTIME ERROR
1337  2728- 4C 04 29           JMP PERROR      INDEX OUT OF BOUNDS
1338                   *
1339                   * P-CODE 41: RUNP       RUN PROGRAM
1340                   *****************
1341                   *
1342  272B- A0 82      RUNP    LDY =130
1343  272D- A5 00              LDA ACCU        SAVE ACCU
1344  272F- A6 01              LDX ACCU+1
1345  2731- 20 5D 27           JSR SAVE
1346  2734- A5 17              LDA BASE        SAVE BASE
1347  2736- A6 18              LDX BASE+1
1348  2738- 20 5D 27           JSR SAVE
1349  273B- A5 0A              LDA PC          SAVE PC

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 22/10/23   R65 ASSEMBLER  PAGE 29

1350  273D- A6 0B              LDX PC+1
1351  273F- 20 5D 27           JSR SAVE
1352  2742- A5 11              LDA STPROG      SAVE STPROG
1353  2744- A6 12              LDX STPROG+1
1354  2746- 20 5D 27           JSR SAVE
1355  2749- A5 13              LDA EOPROG      SAVE EOPROG
1356  274B- A6 14              LDX EOPROG+1
1357  274D- 20 5D 27           JSR SAVE
1358  2750- A5 08              LDA SP          GET SP
1359  2752- A6 09              LDX SP+1
1360  2754- 18                 CLC
1361  2755- 69 8C              ADC =140
1362  2757- 90 01              BCC *+3
1363  2759- E8                 INX             COMPUTE NEW STPROG
1364  275A- 4C 83 29           JMP EXEC3
1365                   *
1366                   *
1367  275D- 91 08      SAVE    STA (SP),Y
1368  275F- C8                 INY
1369  2760- 8A                 TXA
1370  2761- 91 08              STA (SP),Y
1371  2763- C8                 INY
1372  2764- 60                 RTS
1373                   *
1374                   *
1375  2765- 88         GETBACK DEY
1376  2766- B1 08              LDA (SP),Y
1377  2768- AA                 TAX
1378  2769- 88                 DEY
1379  276A- B1 08              LDA (SP),Y
1380  276C- 60                 RTS
1381                   *
1382                   *
1383                   * P-CODE 42: ADDF
1384                   *****************
1385                   *
1386  276D- 20 8A 27   ADDF    JSR GETFLP2
1387  2770- 20 31 2B           JSR FADD
1388                   *
1389  2773- A5 08      PUTFLP0 LDA SP          DECREMENT SP BY 4
1390  2775- 38                 SEC
1391  2776- E9 04              SBC =4
1392  2778- 85 08              STA SP
1393  277A- B0 02              BCS PUTFLP
1394  277C- C6 09              DEC SP+1
1395  277E- A5 02      PUTFLP  LDA M1+1        AND SAVE HALF OF NUMBER
1396  2780- A0 7E              LDY =126
1397  2782- 91 08              STA (SP),Y
1398  2784- C8                 INY
1399  2785- A5 03              LDA M1+2

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 22/10/23   R65 ASSEMBLER  PAGE 30

1400  2787- 91 08              STA (SP),Y
1401  2789- 60                 RTS
1402                   *
1403  278A- A0 7A      GETFLP2 LDY =122        GET SECOND NUMBER
1404  278C- B1 08              LDA (SP),Y
1405  278E- 85 1D              STA M2+1
1406  2790- C8                 INY
1407  2791- B1 08              LDA (SP),Y
1408  2793- 85 1E              STA M2+2
1409  2795- C8                 INY
1410  2796- B1 08              LDA (SP),Y
1411  2798- 85 1B              STA X2
1412  279A- C8                 INY
1413  279B- B1 08              LDA (SP),Y
1414  279D- 85 1C              STA M2
1415  279F- A0 7E      GETFLP  LDY =126        AND HALF OF FIRST
1416  27A1- B1 08              LDA (SP),Y
1417  27A3- 85 02              STA M1+1
1418  27A5- C8                 INY
1419  27A6- B1 08              LDA (SP),Y
1420  27A8- 85 03              STA M1+2
1421  27AA- 60                 RTS
1422                   *
1423                   * P-CODE 43: SUBF
1424                   *****************
1425                   *
1426  27AB- 20 8A 27   SUBF    JSR GETFLP2
1427  27AE- 20 2B 2B           JSR FSUB
1428  27B1- 4C 73 27           JMP PUTFLP0
1429                   *
1430                   * P-CODE 44: MULF
1431                   *****************
1432                   *
1433  27B4- 20 8A 27   MULF    JSR GETFLP2
1434  27B7- 20 58 2B           JSR FMUL
1435  27BA- 4C 73 27           JMP PUTFLP0
1436                   *
1437                   * P-CODE 45: DIVF
1438                   *****************
1439                   *
1440  27BD- 20 8A 27   DIVF    JSR GETFLP2
1441  27C0- 20 7E 2B           JSR FDIV
1442  27C3- 4C 73 27           JMP PUTFLP0
1443                   *
1444                   * P-CODE 46: FLOF
1445                   *****************
1446                   *
1447  27C6- A5 00      FLOF    LDA ACCU
1448  27C8- 85 02              STA M1+1        HIGH BYTE IS IN ACCU
1449                   *                       SAME AS M1

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 22/10/23   R65 ASSEMBLER  PAGE 31

1450  27CA- 20 0D 2B           JSR FLOAT
1451  27CD- 20 BE 22           JSR INCS2
1452  27D0- 4C 7E 27           JMP PUTFLP
1453                   *
1454                   * P-CODE 47: FIXF
1455                   *****************
1456                   *
1457  27D3- 20 9F 27   FIXF    JSR GETFLP
1458  27D6- 20 CB 2B           JSR FIX
1459  27D9- A5 02              LDA M1+1
1460  27DB- 85 00              STA ACCU
1461  27DD- 4C EB 20           JMP DECS2
1462                   *
1463                   * P-CODE 48: FEQU       =
1464                   *****************
1465                   *
1466  27E0- 20 01 28   FEQU    JSR TESTF
1467  27E3- F0 12              BEQ TRUE
1468                   *
1469  27E5- A2 00      FALSE   LDX =0
1470  27E7- 86 00              STX ACCU
1471  27E9- 86 01              STX ACCU+1
1472  27EB- A5 08      DECS6   LDA SP
1473  27ED- 38                 SEC
1474  27EE- E9 06              SBC =6
1475  27F0- 85 08              STA SP
1476  27F2- B0 02              BCS *+4
1477  27F4- C6 09              DEC SP+1
1478  27F6- 60                 RTS
1479                   *
1480  27F7- A2 01      TRUE    LDX =1
1481  27F9- 86 00              STX ACCU
1482  27FB- CA                 DEX
1483  27FC- 86 01              STX ACCU+1
1484  27FE- 4C EB 27          JMP DECS6
1485                   *
1486  2801- 20 8A 27   TESTF   JSR GETFLP2
1487  2804- 20 2B 2B           JSR FSUB
1488  2807- A5 01              LDA M1
1489  2809- 60                 RTS
1490                   *
1491                   * P-CODE 49: FNEQ       <>
1492                   *****************
1493                   *
1494  280A- 20 01 28   FNEQ    JSR TESTF
1495  280D- D0 E8              BNE TRUE
1496  280F- F0 D4              BEQ FALSE
1497                   *
1498                   * P-CODE 4A: FLES       <
1499                   *****************

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 22/10/23   R65 ASSEMBLER  PAGE 32

1500                   *
1501  2811- 20 01 28   FLES    JSR TESTF
1502  2814- 10 CF              BPL FALSE
1503  2816- 30 DF              BMI TRUE
1504                   *
1505                   * P-CODE 4B: FGRE       >=
1506                   *****************
1507                   *
1508  2818- 20 01 28   FGRE    JSR TESTF
1509  281B- 10 DA              BPL TRUE
1510  281D- 30 C6              BMI FALSE
1511                   *
1512                   * P-CODE 4C: FGRT       >
1513                   *****************
1514                   *
1515  281F- 20 01 28   FGRT    JSR TESTF
1516  2822- 30 C1              BMI FALSE
1517  2824- F0 BF              BEQ FALSE
1518  2826- 10 CF              BPL TRUE
1519                   *
1520                   * P-CODE 4D: FLEE       <=
1521                   *****************
1522                   *
1523  2828- 20 01 28   FLEE    JSR TESTF
1524  282B- 30 CA              BMI TRUE
1525  282D- F0 C8              BEQ TRUE
1526  282F- 10 B4              BPL FALSE
1527                   *
1528                   * P-CODE 4E: FCOM       COMPLEMENT
1529                   *****************
1530                   *
1531  2831- 20 9F 27   FCOM    JSR GETFLP
1532  2834- 20 70 2B           JSR FCOMPL
1533  2837- 4C 7E 27           JMP PUTFLP
1534                   *
1535                   *
1536                   * P-CODE 4F: TFER       TEST FILE ERROR
1537                   *****************
1538                   *
1539  283A- A6 23      TFER    LDX IOCHECK
1540  283C- F0 04              BEQ TFER1
1541  283E- A6 DB              LDX FILERR
1542  2840- D0 01              BNE TFER2
1543  2842- 60         TFER1   RTS             OK
1544                   *
1545  2843- 4C 04 29   TFER2   JMP PERROR
1546                   *
1547                   * P-CODE 50: OPRA       OPEN RA-FILE
1548                   *****************
1549                   *

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 22/10/23   R65 ASSEMBLER  PAGE 33

1550  2846- 20 AF 22   OPRA    JSR COPY        SAVE ACCU
1551  2849- 20 D2 2B           JSR OPENRA      OPEN FILE
1552  284C- C8                 INY
1553  284D- C8                 INY
1554  284E- 84 00              STY ACCU        SAVE FILE NO
1555  2850- A9 00              LDA =0
1556  2852- 85 01              STA ACCU+1
1557  2854- 60                 RTS
1558                   *
1559                   * P-CODE 51: GETR       GET FROM RA FILE
1560                   *****************
1561                   *
1562                   * NO AUTOMATIC ERROR CHECKING
1563                   *
1564  2855- 20 62 28   GETR    JSR GETR1
1565  2858- 20 D9 2C           JSR GETBYTE
1566  285B- 85 00              STA ACCU
1567  285D- A9 00              LDA =0
1568  285F- 85 01              STA ACCU+1
1569  2861- 60                 RTS
1570                   *
1571  2862- 20 EB 20   GETR1   JSR DECS2
1572  2865- A0 80              LDY =128
1573  2867- B1 08              LDA (SP),Y      GET FILE NO
1574  2869- AA                 TAX
1575  286A- CA                 DEX
1576  286B- CA                 DEX
1577  286C- A5 00              LDA ACCU        GET POINTER
1578  286E- A4 01              LDY ACCU+1
1579  2870- 60                 RTS
1580                   *
1581                   * P-CODE 52: PUTR       PUT TO RA=FILE
1582                   *****************
1583                   *
1584                   * NO AUTOMATIC ERROR CHECKING
1585                   *
1586  2871- A5 00      PUTR    LDA ACCU
1587  2873- 85 FE              STA KCHAR
1588  2875- 20 DC 22           JSR GETS2
1589  2878- 20 62 28           JSR GETR1
1590  287B- 20 F7 2C           JSR PUTBYTE
1591  287E- 4C DC 22           JMP GETS2
1592                   *
1593                   * P-CODE 53: SWA2       SWAP 2 AND 3 ON STACK
1594                   *****************
1595                   *
1596  2881- A0 7E      SWA2    LDY =126
1597  2883- 20 88 28           JSR SWA3
1598  2886- A0 7F              LDY =127
1599                   *

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 22/10/23   R65 ASSEMBLER  PAGE 34

1600  2888- B1 08      SWA3    LDA (SP),Y
1601  288A- AA                 TAX
1602  288B- 88                 DEY
1603  288C- 88                 DEY
1604  288D- B1 08              LDA (SP),Y
1605  288F- C8                 INY
1606  2890- C8                 INY
1607  2891- 91 08              STA (SP),Y
1608  2893- 8A                 TXA
1609  2894- 88                 DEY
1610  2895- 88                 DEY
1611  2896- 91 08              STA (SP),Y
1612  2898- 60                 RTS
1613                   *
1614                   * GETCHR0: GET A CHAR FROM SPECIFIED FILE
1615                   *****************************************
1616                   *
1617  2899- A6 0D      GETCHR0 LDX DEVICE
1618  289B- D0 1A              BNE GETCHR4
1619                   *
1620  289D- A6 15      GETCHR1 LDX BUFFPN
1621  289F- 10 06              BPL GETCHR2
1622  28A1- 20 09 23           JSR RLIN
1623  28A4- 4C 9D 28           JMP GETCHR1
1624                   *
1625  28A7- E4 16      GETCHR2 CPX ENDBUF      IS IS END OF BUFFER?
1626  28A9- D0 07              BNE GETCHR3
1627  28AB- A9 FF              LDA =$FF
1628  28AD- 85 15              STA BUFFPN
1629  28AF- A9 0D              LDA =$D
1630  28B1- 60                 RTS
1631                   *
1632  28B2- E6 15      GETCHR3 INC BUFFPN
1633  28B4- B5 24              LDA LINBUF,X
1634  28B6- 60                 RTS
1635                   *
1636  28B7- CA         GETCHR4 DEX
1637  28B8- D0 03              BNE GETCHR5     SKIP, IF NOT KEY
1638  28BA- 4C 00 E0           JMP GETKEY
1639                   *
1640  28BD- CA         GETCHR5 DEX
1641  28BE- A9 00              LDA =0
1642  28C0- 85 DA              STA FILFLG
1643  28C2- 20 18 F0           JSR READCH
1644  28C5- 4C 3A 28           JMP TFER
1645                   *
1646  28C8- 60         GETCHR6 RTS
1647                   *
1648                   * PRTCHR0: PRINT CHAR TO SPECIFIED FILE
1649                   ***************************************

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 22/10/23   R65 ASSEMBLER  PAGE 35

1650                   *
1651  28C9- A6 0D      PRTCHR0 LDX DEVICE
1652  28CB- 30 16              BMI PRTCHR3     Plot text?
1653  28CD- D0 03              BNE PRTCHR1
1654  28CF- 4C 09 E0           JMP PRTCHR
1655                   *
1656  28D2- CA         PRTCHR1 DEX
1657  28D3- D0 03              BNE PRTCHR2
1658  28D5- 4C 0C E0           JMP AUTOPR
1659                   *
1660  28D8- CA         PRTCHR2 DEX
1661  28D9- A0 00              LDY =0
1662  28DB- 84 DA              STY FILFLG
1663  28DD- 20 1B F0           JSR WRITCH
1664  28E0- 4C 3A 28           JMP TFER
1665                   *
1666  28E3- C9 0D      PRTCHR3 CMP =$0D        Plot CR?
1667  28E5- D0 06              BNE PRTCHR4
1668  28E7- A9 00              LDA =0
1669  28E9- 8D AE 03           STA GRX
1670  28EC- 60         PRTCHRE RTS
1671                   *
1672  28ED- C9 0A      PRTCHR4 CMP =$0A        PLOT LF?
1673  28EF- D0 0D              BNE PRTCHR6
1674  28F1- AD AF 03           LDA GRY
1675  28F4- E9 08              SBC =8
1676  28F6- 10 02              BPL PRTCHR5
1677  28F8- A9 00              LDA =0
1678                   *
1679  28FA- 8D AF 03   PRTCHR5 STA GRY
1680  28FD- 60                 RTS
1681                   *
1682  28FE- 8D B0 03  PRTCHR6 STA GRC
1683  2901- 4C 18 C8           JMP APLOTCH     PLOT THE CHARACTER
1684                   *
1685                   * PERROR: PASCAL RUNTIME ERROR
1686                   ******************************
1687                   *
1688  2904- 20 27 E0   PERROR  JSR PRTINF
1689  2907- 0D 0A 07           BYT $D,$A,7,'Pascal error '+128
1689  290A- 50 61 73 
1689  290D- 63 61 6C 
1689  2910- 20 65 72 
1689  2913- 72 6F 72 
1689  2916- A0 
1690  2917- A9 00              LDA =0
1691  2919- 85 0D              STA DEVICE
1692  291B- 8A                 TXA
1693  291C- 85 0C              STA RUNERR
1694  291E- 20 2D E0           JSR PRTBYT

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 22/10/23   R65 ASSEMBLER  PAGE 36

1695  2921- A5 0A              LDA PC
1696  2923- 38                 SEC
1697  2924- E5 11              SBC STPROG
1698  2926- 85 00              STA ACCU
1699  2928- A5 0B              LDA PC+1
1700  292A- E5 12              SBC STPROG+1
1701  292C- 85 01              STA ACCU+1
1702  292E- F0 0C              BEQ PERROR1
1703  2930- 30 0A              BMI PERROR1
1704  2932- 20 27 E0           JSR PRTINF
1705  2935- 20 61 74           BYT ' at '+128
1705  2938- A0 
1706  2939- 20 AA 23           JSR PRTN
1707                   *
1708  293C- 4C 10 20   PERROR1 JMP STOP
1709                   *
1710                   *
1711                   * WARM START ENTRY POINT
1712                   ************************
1713                   *
1714  293F- AD 81 17   WARMST  LDA SFLAG       SET PASCAL RUNTIME BIT
1715  2942- 09 01              ORA =$01        IN SFLAG
1716  2944- 8D 81 17           STA SFLAG
1717  2947- A2 00              LDX =0
1718  2949- 86 0B              STX PC+1
1719  294B- 86 0D              STX DEVICE
1720  294D- CA                 DEX
1721  294E- 86 16              STX ENDBUF
1722  2950- 86 23              STX IOCHECK
1723  2952- A2 00              LDX =0
1724                   *
1725  2954- A0 00      EXEC    LDY =0
1726  2956- 84 0B              STY PC+1
1727  2958- BD 10 2A           LDA EXTABLE,X
1728  295B- 9D 20 03           STA FILNM1,X
1729  295E- E8                 INX
1730  295F- C8                 INY
1731  2960- C0 10              CPY =16
1732  2962- 90 F2              BCC EXEC+2
1733  2964- A9 00              LDA =0
1734  2966- 8D 30 03           STA FILCY1
1735                   *           LDA =1     LOAD SYSTEM:R     FROM
1736                   *           STA FILDRV SAME DRIVE AS PASCAL
1737                   *
1738  2969- A9 00      EXECUTE LDA =0
1739  296B- 85 DA              STA FILFLG
1740  296D- AD 0B 20           LDA USEREND
1741  2970- AE 0C 20           LDX USEREND+1
1742  2973- 38                 SEC
1743  2974- E9 90              SBC =144

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 22/10/23   R65 ASSEMBLER  PAGE 37

1744  2976- B0 01              BCS *+3
1745  2978- CA                 DEX
1746  2979- 85 0E              STA ENDSTK
1747  297B- 86 0F              STX ENDSTK+1
1748                   *
1749  297D- AD 09 20   EXEC1   LDA USERST
1750  2980- AE 0A 20           LDX USERST+1
1751  2983- 85 11      EXEC3   STA STPROG
1752  2985- 86 12              STX STPROG+1
1753  2987- 8D 31 03           STA FILSA1
1754  298A- 8E 32 03           STX FILSA1+1
1755  298D- 20 15 E8           JSR RDFILE      READ FILE TO EXECUTE
1756  2990- F0 04              BEQ EXEC2
1757  2992- AA                 TAX             PASCAL RUNTIME ERROR
1758  2993- 4C 04 29           JMP PERROR
1759                   *
1760  2996- EA         EXEC2   NOP
1761  2997- EA                 NOP
1762  2998- EA                 NOP
1763  2999- EA                 NOP
1764  299A- EA                 NOP
1765  299B- AD 12 03           LDA FILSTP
1766  299E- C9 52              CMP ='R'        MUST BE PASCAL
1767  29A0- F0 05              BEQ RUN           RUNTIME CODE
1768  29A2- A2 84              LDX =$84        PASCAL RUNTIME ERROR
1769  29A4- 4C 04 29           JMP PERROR      WRONG FILEtYPE
1770                   *
1771  29A7- A0 00      RUN     LDY =0          READ END ADDRESS
1772  29A9- B1 11              LDA (STPROG),Y  FROM FILE
1773  29AB- 18                 CLC
1774  29AC- 65 11              ADC STPROG
1775  29AE- 85 13              STA EOPROG
1776  29B0- C8                 INY
1777  29B1- B1 11              LDA (STPROG),Y
1778  29B3- 65 12              ADC STPROG+1
1779  29B5- 85 14              STA EOPROG+1
1780  29B7- A5 13              LDA EOPROG      GET END OF STACK
1781  29B9- A6 14              LDX EOPROG+1
1782  29BB- 38                 SEC
1783  29BC- E9 80              SBC =128
1784  29BE- 85 17              STA BASE
1785  29C0- 85 08              STA SP
1786  29C2- B0 01              BCS *+3
1787  29C4- CA                 DEX
1788  29C5- 86 18              STX BASE+1
1789  29C7- 86 09              STX SP+1
1790                   *
1791  29C9- A5 11              LDA STPROG
1792  29CB- A6 12              LDX STPROG+1
1793  29CD- 18                 CLC

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 22/10/23   R65 ASSEMBLER  PAGE 38

1794  29CE- 69 02              ADC =2
1795  29D0- 85 0A              STA PC
1796  29D2- 90 01              BCC *+3
1797  29D4- E8                 INX
1798  29D5- 86 0B              STX PC+1
1799  29D7- A9 00              LDA =0
1800  29D9- 85 0C              STA RUNERR
1801  29DB- 20 E6 29   LOOP    JSR EXCODE
1802  29DE- AD 81 17           LDA SFLAG
1803  29E1- 30 20              BMI ESCERR
1804  29E3- 4C DB 29           JMP LOOP
1805                   *
1806                   *
1807  29E6- 20 9D 24   EXCODE  JSR FETCH
1808  29E9- 89 F1              STA =$F1
1809  29EB- C9 54              CMP =$54        TEST CODENUMBER
1810  29ED- 90 05              BCC *+7
1811  29EF- A9 85      ILLC    LDA =$85        PASCAL RUNTIME ERROR
1812  29F1- 4C 04 29           JMP PERROR      ILLEGAL P-CODE
1813                   *
1814  29F4- 0A                 ASL A
1815  29F5- AA                 TAX
1816  29F6- BD 20 2A           LDA TABLE,X
1817  29F9- 85 1B              STA ARG1
1818  29FB- BD 21 2A           LDA TABLE+1,X
1819  29FE- 85 1C             STA ARG1+1
1820  2A00- 6C 1B 00           JMP (ARG1)
1821                   *
1822  2A03- AD 81 17   ESCERR  LDA SFLAG       CLEAR ESCAPE FLAG
1823  2A06- 29 7F              AND =$7F
1824  2A08- 8D 81 17           STA SFLAG
1825  2A0B- A2 86              LDX =$86        PASCAL RUNTIME ERROR
1826  2A0D- 4C 04 29           JMP PERROR      ESCAPE DURING EXECUTION
1827                   *
1828  2A10- 53 59 53   EXTABLE BYT 'SYSTEM:R        '
1828  2A13- 54 45 4D 
1828  2A16- 3A 52 20 
1828  2A19- 20 20 20 
1828  2A1C- 20 20 20 
1828  2A1F- 20 
1829                   *
1830  2A20- 10 20 9A   TABLE   WRD STOP,RETN,NEGA,ADDA,SUBA,MULA
1830  2A23- 20 CD 20 
1830  2A26- DB 20 F7 
1830  2A29- 20 0A 21 
1831  2A2C- 6F 21 E1           WRD DIVA,LOWB,TEQU,TNEQ,TLES,TGRE
1831  2A2F- 21 EC 21 
1831  2A32- FD 21 07 
1831  2A35- 22 11 22 
1832  2A38- 17 22 1D           WRD TGRT,TLEE,ORAC,ANDA,EORA,NOTA

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 22/10/23   R65 ASSEMBLER  PAGE 39

1832  2A3B- 22 23 22 
1832  2A3E- 35 22 47 
1832  2A41- 22 59 22 
1833  2A44- 69 22 82           WRD LEFT,RIGH,INCA,DECA,COPY,PEEK
1833  2A47- 22 9F 22 
1833  2A4A- A6 22 AF 
1833  2A4D- 22 EA 22 
1834  2A50- F3 22 00           WRD POKE,CALA,RLIN,GETC,GETN,PRTC
1834  2A53- 23 09 23 
1834  2A56- 38 23 45 
1834  2A59- 23 A2 23 
1835  2A5C- AA 23 1D           WRD PRTN,PRTS,LITB,INCB,LITW,INCW
1835  2A5F- 24 53 24 
1835  2A62- 60 24 8F 
1835  2A65- 24 A8 24 
1836  2A68- C5 24 D7           WRD JUMP,JMPZ,JMPO,LOAD,LODX,STOR
1836  2A6B- 24 EC 24 
1836  2A6E- F5 24 43 
1836  2A71- 25 5D 25 
1837  2A74- 7C 25 A2           WRD STOX,CALL,SDEV,RDEV,FNAM,OPNR
1837  2A77- 25 D8 25 
1837  2A7A- DF 25 E4 
1837  2A7D- 25 01 26 
1838  2A80- 12 26 17           WRD OPNW,CLOS,PRTI,GHGH,GLOW,PHGH
1838  2A83- 26 21 26 
1838  2A86- 2E 26 32 
1838  2A89- 26 37 26 
1839  2A8C- 40 26 49           WRD PLOW,GSEC,PSEC,NBYT,NWRD,LODN
1839  2A8F- 26 52 26 
1839  2A92- 81 26 93 
1839  2A95- 26 A8 26 
1840  2A98- C1 26 D7           WRD STON,LODI,STOI,EXST,TIND,RUNP
1840  2A9B- 26 EC 26 
1840  2A9E- F5 26 0B 
1840  2AA1- 27 2B 27 
1841  2AA4- 6D 27 AB           WRD ADDF,SUBF,MULF,DIVF,FLOF,FIXF
1841  2AA7- 27 B4 27 
1841  2AAA- BD 27 C6 
1841  2AAD- 27 D3 27 
1842  2AB0- E0 27 0A           WRD FEQU,FNEQ,FLES,FGRE,FGRT,FLEE
1842  2AB3- 28 11 28 
1842  2AB6- 18 28 1F 
1842  2AB9- 28 28 28 
1843  2ABC- 31 28 3A           WRD FCOM,TFER,OPRA,GETR,PUTR,SWA2
1843  2ABF- 28 46 28 
1843  2AC2- 55 28 71 
1843  2AC5- 28 81 28 
1844                   *
1845                   * COLDSTART
1846                   ***********

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 22/10/23   R65 ASSEMBLER  PAGE 40

1847                   *
1848  2AC8- 58         COLDST  CLI
1849  2AC9- D8                 CLD
1850  2ACA- AD 09 20           LDA USERST
1851  2ACD- AE 0A 20           LDX USERST+1
1852  2AD0- 85 11              STA STPROG
1853  2AD2- 86 12              STX STPROG+1
1854  2AD4- A0 00              LDY =0
1855  2AD6- 98                 TYA
1856  2AD7- 91 11              STA (STPROG),Y
1857  2AD9- C8                 INY
1858  2ADA- C0 04              CPY =4
1859  2ADC- 90 F9              BCC *-5
1860  2ADE- 4C 3F 29           JMP WARMST
1861                   *
1862                           TIT R65 PASCAL: FLP-MATH
1863                           PAG

----------------------------------------------------------------------

R65 PASCAL: FLP-MATH               22/10/23   R65 ASSEMBLER  PAGE 41

1864                   *
1865                   ********************************
1866                   * R65 PASCAL FLP MATH ROUTINES *
1867                   ********************************
1868                   *
1869                   *
1870  2AE1- 18         ADD     CLC
1871  2AE2- A2 02              LDX =2
1872  2AE4- B5 01      ADD1    LDA M1,X
1873  2AE6- 75 1C              ADC M2,X
1874  2AE8- 95 01              STA M1,X
1875  2AEA- CA                 DEX
1876  2AEB- 10 F7              BPL ADD1
1877  2AED- 60                 RTS
1878                   *
1879  2AEE- 06 10      MD1     ASL SIGN
1880  2AF0- 20 F3 2A           JSR ABSWAP
1881  2AF3- 24 01      ABSWAP  BIT M1
1882  2AF5- 10 05              BPL ABSWP1
1883  2AF7- 20 70 2B           JSR FCOMPL
1884  2AFA- E6 10              INC SIGN
1885  2AFC- 38         ABSWP1  SEC
1886                   *
1887                   * SWAP: EXCHANGE F1 AND F2
1888                   **************************
1889                   *
1890  2AFD- A2 04      SWAP    LDX =4
1891  2AFF- 94 03     SWAP1   STY E-1,X
1892  2B01- B5 FF              LDA <(X1-1),X
1893  2B03- B4 1A              LDY X2-1,X
1894  2B05- 94 FF              STY <(X1-1),X
1895  2B07- 95 1A              STA X2-1,X
1896  2B09- CA                 DEX
1897  2B0A- D0 F3              BNE SWAP1
1898  2B0C- 60                 RTS
1899                   *
1900                   * FLOAT: FLOAT M1,M1+1 TO RESULT IN F1
1901                   **************************************
1902                   *
1903  2B0D- A9 8E      FLOAT   LDA =$8E
1904  2B0F- 85 00              STA X1
1905  2B11- A9 00              LDA =0
1906  2B13- 85 03              STA M1+2
1907  2B15- F0 08              BEQ NORM
1908  2B17- C6 00      NORM1   DEC X1
1909  2B19- 06 03              ASL M1+2
1910  2B1B- 26 02              ROL M1+1
1911  2B1D- 26 01              ROL M1
1912  2B1F- A5 01      NORM    LDA M1
1913  2B21- 0A                 ASL A

----------------------------------------------------------------------

R65 PASCAL: FLP-MATH               22/10/23   R65 ASSEMBLER  PAGE 42

1914  2B22- 45 01              EOR M1
1915  2B24- 30 04              BMI RTS1
1916  2B26- A5 00              LDA X1
1917  2B28- D0 ED              BNE NORM1
1918  2B2A- 60         RTS1    RTS
1919                   *
1920                   * FSUB: F1=F2-F1
1921                   ****************
1922                   *
1923  2B2B- 20 70 2B   FSUB    JSR FCOMPL
1924  2B2E- 20 3E 2B   SWPALG  JSR ALGNSW
1925                   *
1926                   * FADD: F1=F2+F1
1927                   ****************
1928                   *
1929  2B31- A5 1B      FADD    LDA X2
1930  2B33- C5 00              CMP X1
1931  2B35- D0 F7              BNE SWPALG
1932  2B37- 20 E1 2A           JSR ADD
1933  2B3A- 50 E3      ADDEND  BVC NORM
1934  2B3C- 70 05              BVS RTLOG
1935  2B3E- 90 BD      ALGNSW  BCC SWAP
1936  2B40- A5 01      RTAR    LDA M1
1937  2B42- 0A                 ASL A
1938  2B43- E6 00      RTLOG   INC X1
1939  2B45- F0 7E              BEQ OVFL
1940  2B47- A2 FA      RTLOG1  LDX =$FA
1941  2B49- A9 80      ROR1    LDA =$80
1942  2B4B- B0 01              BCS ROR2
1943  2B4D- 0A                 ASL A
1944  2B4E- 56 07      ROR2    LSR E+3,X
1945  2B50- 15 07              ORA E+3,X
1946  2B52- 95 07              STA E+3,X
1947  2B54- E8                 INX
1948  2B55- D0 F2              BNE ROR1
1949  2B57- 60                 RTS
1950                   *
1951                   * FMUL: F1=F2*F1
1952                   ****************
1953                   *
1954  2B58- 20 EE 2A   FMUL    JSR MD1
1955  2B5B- 65 00              ADC X1
1956  2B5D- 20 AE 2B           JSR MD2
1957  2B60- 18                 CLC
1958  2B61- 20 47 2B   MUL1    JSR RTLOG1
1959  2B64- 90 03              BCC MUL2
1960  2B66- 20 E1 2A           JSR ADD
1961  2B69- 88         MUL2    DEY
1962  2B6A- 10 F5              BPL MUL1
1963  2B6C- 46 10      MDEND   LSR SIGN

----------------------------------------------------------------------

R65 PASCAL: FLP-MATH               22/10/23   R65 ASSEMBLER  PAGE 43

1964  2B6E- 90 AF      NORMX   BCC NORM
1965  2B70- 38         FCOMPL  SEC
1966  2B71- A2 03              LDX =3
1967  2B73- A9 00      COMPL1  LDA =0
1968  2B75- F5 00              SBC X1,X
1969  2B77- 95 00              STA X1,X
1970  2B79- CA                 DEX
1971  2B7A- D0 F7              BNE COMPL1
1972  2B7C- F0 BC              BEQ ADDEND
1973                   *
1974                   * FDIV: F1=F2/F1
1975                   ****************
1976                   *
1977  2B7E- 20 EE 2A   FDIV    JSR MD1
1978  2B81- E5 00              SBC X1
1979  2B83- 20 AE 2B           JSR MD2
1980  2B86- 38         FDIV1   SEC
1981  2B87- A2 02              LDX =2
1982  2B89- B5 1C      FDIV2   LDA M2,X
1983  2B8B- F5 04              SBC E,X
1984  2B8D- 48                 PHA
1985  2B8E- CA                 DEX
1986  2B8F- 10 F8              BPL FDIV2
1987  2B91- A2 FD              LDX =$FD
1988  2B93- 68         FDIV3   PLA
1989  2B94- 90 02              BCC FDIV4
1990  2B96- 95 1F              STA M2+3,X
1991  2B98- E8         FDIV4   INX
1992  2B99- D0 F8              BNE FDIV3
1993  2B9B- 26 03              ROL M1+2
1994  2B9D- 26 02              ROL M1+1
1995  2B9F- 26 01              ROL M1
1996  2BA1- 06 1E              ASL M2+2
1997  2BA3- 26 1D              ROL M2+1
1998  2BA5- 26 1C              ROL M2
1999  2BA7- B0 1C              BCS OVFL
2000  2BA9- 88                 DEY
2001  2BAA- D0 DA              BNE FDIV1
2002  2BAC- F0 BE              BEQ MDEND
2003  2BAE- 86 03      MD2     STX M1+2
2004  2BB0- 86 02              STX M1+1
2005  2BB2- 86 01              STX M1
2006  2BB4- B0 0D              BCS OVCHK
2007  2BB6- 30 04              BMI MD3
2008  2BB8- 68                 PLA
2009  2BB9- 68                 PLA
2010  2BBA- 90 B2              BCC NORMX
2011  2BBC- 49 80      MD3     EOR =$80
2012  2BBE- 85 00              STA X1
2013  2BC0- A0 17              LDY =$17

----------------------------------------------------------------------

R65 PASCAL: FLP-MATH               22/10/23   R65 ASSEMBLER  PAGE 44

2014  2BC2- 60                 RTS
2015  2BC3- 10 F7      OVCHK   BPL MD3
2016  2BC5- 4C A6 21   OVFL    JMP DIV1-5      PASCAL RUNTIME ERROR
2017                   *
2018                   * FIX: FIX F1 IN M1, M1+1
2019                   *************************
2020                   *
2021  2BC8- 20 40 2B           JSR RTAR
2022  2BCB- A5 00      FIX     LDA X1
2023  2BCD- C9 8E              CMP =$8E
2024  2BCF- D0 F7              BNE FIX-3
2025  2BD1- 60         RTRN    RTS
2026                   *
2027                           TIT R65 PASCAL: RANDOM ACCESS
2028                           PAG

----------------------------------------------------------------------

R65 PASCAL: RANDOM ACCESS          22/10/23   R65 ASSEMBLER  PAGE 45

2029                   *
2030                   * RANDOM ACCESS FILE HANDLER
2031                   ****************************
2032                   *
2033                   *
2034                   * OPENRA: OPEN A FILE FOR RANDOM ACCESS
2035                   ***************************************
2036                   *
2037                   * ENTRY: FILNM1,FILCY1,FILDRV,FILFLG
2038                   * FILFLG: BIT 7: PROTECTED (NEW ONLY)*
2039                   *         BIT 6: NO PRINTED OUTPUT
2040                   *         BIT 5: DIRECTION (0=READ)
2041                   *         BIT 4: 1=NEW, 0=OLD
2042                   *
2043                   * NEW ONLY: MAXSIZ,FILSA
2044                   *
2045                   * EXIT: NO OF OPEN FILE IN Y, STATUS IN A
2046                   *       AND FILERR, Y IS ONLY VALID
2047                   *       IF A=0
2048                   *
2049                   *
2050  2BD2- AC 36 03   OPENRA  LDY MAXSEQ      SEARCH EMPTY ENTRY
2051  2BD5- B9 39 03           LDA FIDRTB,Y    BIT 5=1: ENTRY USED
2052  2BD8- 29 20              AND =$20
2053  2BDA- F0 08              BEQ OPENRA1     FOUND, SKIP
2054  2BDC- 88                 DEY
2055  2BDD- 10 F6              BPL OPENRA+3
2056                   *
2057  2BDF- A9 23              LDA =$23        TOO MANY OPEN FILES
2058  2BE1- 85 DB              STA FILERR
2059  2BE3- 60                 RTS
2060                   *
2061  2BE4- 8C 35 03   OPENRA1 STY CURSEQ      SAVE CURRENT ENTRY NO
2062  2BE7- A5 DC              LDA FILDRV      GET AND TEST DRIVE
2063  2BE9- 99 41 03           STA FIDVTB,Y
2064  2BEC- 29 FE              AND =$FE
2065  2BEE- F0 05              BEQ OPENRA2     SKIP, IF OK
2066                   *
2067  2BF0- A9 28              LDA =$28        ILLEGAL DRIVE FOR RA
2068  2BF2- 85 DB              STA FILERR
2069  2BF4- 60                 RTS
2070                   *
2071  2BF5- A9 10      OPENRA2 LDA =$10        TEST OLD/NEW FLAG
2072  2BF7- 25 DA              AND FILFLG
2073  2BF9- F0 78              BEQ OPENOLD     SKIP, IF OLD
2074                   *
2075                   * OPEN A NEW FILE
2076                   *
2077  2BFB- A5 DA      OPENNEW LDA FILFLG
2078  2BFD- 29 80              AND =$80        GET PROTECTED FLAG

----------------------------------------------------------------------

R65 PASCAL: RANDOM ACCESS          22/10/23   R65 ASSEMBLER  PAGE 46

2079  2BFF- 09 42             ORA ='B'        BLOCK FILE
2080  2C01- 8D 00 03           STA FILTYP      SET FILE TYPE
2081                   *
2082  2C04- A9 00              LDA =0
2083  2C06- AE 37 03           LDX MAXSIZ      SIZE OF FILE
2084  2C09- 8D 15 03           STA FILSIZ
2085  2C0C- 8E 16 03           STX FILSIZ+1
2086                   *
2087  2C0F- CA                 DEX             COMPUTE FILEA
2088  2C10- AD 1A 03           LDA FILSA
2089  2C13- 18                 CLC
2090  2C14- 69 FF              ADC =$FF
2091  2C16- 8D 1C 03           STA FILEA
2092  2C19- 8A                 TXA
2093  2C1A- 6D 1B 03           ADC FILSA+1
2094  2C1D- 8D 1D 03           STA FILEA+1
2095                   *
2096  2C20- 20 1E E8           JSR SETFID      SET FILEDATE
2097                   *
2098  2C23- A2 10              LDX =16
2099  2C25- BD 20 03   OPENNE1 LDA FILNM1,X    SET FILNM1 AND FILCY1
2100  2C28- 9D 01 03           STA FILNAM,X    TO FILNAM AND FILCYC
2101  2C2B- CA                 DEX
2102  2C2C- 10 F7              BPL OPENNE1
2103                   *
2104                   * SEARCH IN DIRECTORY AND RETURN CYCLUS
2105                   * AND DIRECTORY ENTRY TO USE, TEST EXISTING
2106                   * FILES FOR SAME NAME AND CYCLUS, DISK
2107                   * OPERATION IS INITIALIZED
2108                   *
2109  2C2E- 20 94 20           JSR PREPWRA
2110  2C31- 8E 11 03           STX FILCYC
2111                   *
2112                   * FIND FIRST EMPTY DISK DIRECTORY ENTR
2113                   * FETCH ITAND SET FIRST SECTOR OF FILE TO
2114                   * FILLOC, OUTPUT Y,X AS NUMBER OF EMPTY
2115                   * SECTORS
2116                   *
2117  2C34- 20 97 20           JSR PREPWRB
2118  2C37- 8A                 TXA
2119  2C38- CD 16 03           CMP FILSIZ+1
2120  2C3B- 98                 TYA
2121  2C3C- E9 00              SBC =0          COMPARE WITH REQUESTED
2122  2C3E- B0 05              BCS OPENNE3     SECTORS
2123                   *
2124  2C40- A9 26              LDA =$26        DISK OVERFLOW
2125  2C42- 4C 8B 20           JMP DISCER1
2126                   *
2127                   * SET FITEMP,Y AND FITEMP+8,YNTO FIRST SECTOT
2128                   * OF FILE ON DISK, FIMAXT,Y TO SIZE, DIRECTORY

----------------------------------------------------------------------

R65 PASCAL: RANDOM ACCESS          22/10/23   R65 ASSEMBLER  PAGE 47

2129                   * ENTRY NO TO FITEMP+16,Y
2130                   * THEN PUT THIS ENTRY ONTO THE DISKMAND SET
2131                   * A NEW END OF DIRECTORY MARK
2132                   *
2133  2C45- 20 70 20   OPENNE3 JSR DOPEN4
2134                   *
2135  2C48- AC 35 03           LDY CURSEQ      SETUP DUMMY FIRST SECTOR
2136  2C4B- A9 00              LDA =0
2137  2C4D- 99 49 03           STA FIBPTB,Y
2138  2C50- 99 51 03           STA FIRCTB,Y
2139                   *
2140  2C53- AC 35 03   OPENNE4 LDY CURSEQ      OPEN FILE
2141  2C56- A5 DA              LDA FILFLG
2142  2C58- 0A                 ASL A
2143  2C59- 0A                 ASL A
2144  2C5A- 29 80              AND =$80        GET DIRECTION
2145  2C5C- 48                 PHA
2146  2C5D- 2D 00 03           AND FILTYP
2147  2C60- F0 06              BEQ OPENNE5     OK, SKIP
2148  2C62- 68                 PLA             PROTECTED FILE
2149                   *
2150  2C63- A9 29              LDA =$29
2151  2C65- 85 DB              STA FILERR
2152  2C67- 60                 RTS
2153                   *
2154  2C68- 68         OPENNE5 PLA
2155  2C69- 09 60              ORA =$60        RA FILE, OPENIT
2156  2C6B- 99 39 03           STA FIDRTB,Y
2157                   *
2158  2C6E- A9 00              LDA =0          NORMALEXIT
2159  2C70- 85 DB              STA FILERR
2160  2C72- 60         OPENNE6 RTS
2161                   *
2162                   * OPEN AN OLD FILE:
2163                   * PREPARE DISK OPERATION, SEARCH REQUESTED
2164                   * FILE AND GET CORRSPONDING DISK ENTRY
2165                   *
2166  2C73- 20 91 20   OPENOLD JSR PREPRD
2167                   *
2168  2C76- 20 73 20           JSR PRFLB1      PRINT LABEL, IF REQ.
2169  2C79- AD 00 03           LDA FILTYP
2170  2C7C- 29 7F              AND =$7F
2171  2C7E- C9 42              CMP ='B'        MUST BE BLOCK FILE
2172  2C80- F0 05              BEQ OPENOL1     SKIP, IF OK
2173                   *
2174  2C82- A9 05              LDA =5
2175  2C84- 4C 8B 20           JMP DISCER1     FILE TYPE ERROR
2176                   *
2177  2C87- 20 8E 20   OPENOL1 JSR ENDDO       END OF DISK OPERATION
2178                   *

----------------------------------------------------------------------

R65 PASCAL: RANDOM ACCESS          22/10/23   R65 ASSEMBLER  PAGE 48

2179                   * SET NOW FIRST SECTOR AND SIZE TO TABLE
2180                   *
2181  2C8A- 20 6D 20           JSR DOPEN1
2182                   *
2183  2C8D- A9 00              LDA =0          GET FIRST RECORD
2184  2C8F- 20 96 2C           JSR GETTREC
2185  2C92- D0 DE              BNE OPENNE6     SKIP, IF NOT OK
2186  2C94- F0 BD              BEQ OPENNE4     ELSE OPEN FILE
2187                   *
2188                   *
2189                   * GETTREC: GET ONE RECORD FROM RA-FILE
2190                   * RECORD NUMBER IS IN A, FILE NUMBER IN CURSEQ
2191                   * RESULT IUS Z=1,OF OK, ELSE Z=0 AND FILERR
2192                   *
2193  2C96- AE 35 03   GETTREC LDX CURSEQ      SAVE RECORD NO
2194  2C99- 9D 51 03           STA FIRCTB,X
2195  2C9C- A9 00              LDA =0          CLEAR UPDATED FLAG
2196  2C9E- 9D 49 03           STA FIBPTB,X
2197  2CA1- BD 41 03           LDA FIDVTB,X    SET DRIVE NO
2198  2CA4- 85 DC              STA FILDRV
2199                   *
2200                   * COMPUTE DATA-POINTER AND BINARY
2201                   * TRACK,SECTOR, SETUP FILDRV
2202                   *
2203  2CA6- 20 79 20           JSR PREPSR
2204                   *
2205                   * ADD RECORD NUMBER TO BINARY TRAC/SECTOR
2206                   * TEST SIZE OF FILE, CONVERT TO TRACK AND
2207                   * SECTOR, INITIALIZE DISK OPERATION
2208                   *
2209  2CA9- 20 7C 20           JSR PREPSR1
2210                   *
2211  2CAC- 20 82 20           JSR READ        READ ON SECTOR
2212                   *
2213  2CAF- 4C 8E 20           JMP ENDDO       END OF DISK OPERATION
2214                   *
2215                   * PUTTREC: SAVE CURRENT RECORD ON DISK
2216                   * FILE NUMBER IN CURSEQ, RECORD NUMBER IN
2217                   * FIRCTB,Y, RETURNS Z=1 IF OK, ELSE FILERR
2218                   *
2219  2CB2- BD 41 03   PUTTREC LDA FIDVTB,X
2220  2CB5- 85 DC              STA FILDRV
2221  2CB7- 20 79 20           JSR PREPSR      SEE GETTREC FOR
2222  2CBA- 20 7C 20           JSR PREPSR1     COMMENTS
2223  2CBD- 20 85 20           JSR WRITE
2224  2CC0- 4C 8E 20           JMP ENDDO
2225                   *
2226                   * GETNEWR: GET A NEW RECORD, SAVE OLD, IF
2227                   * OLD HAS BEEN UPDATED
2228                   * ENTRY: NEW RECORD IN A, FILE NO IN CURSEQ

----------------------------------------------------------------------

R65 PASCAL: RANDOM ACCESS          22/10/23   R65 ASSEMBLER  PAGE 49

2229                   * EXIT: z=1 IF OK, ELSE FILERR
2230                   *
2231  2CC3- 8D 34 03   GETNEWR STA SAVRST+1    SAVE REQUESTED RECORD
2232  2CC6- AE 35 03           LDX CURSEQ
2233  2CC9- BD 49 03           LDA FIBPTB,X    UPDATED?
2234  2CCC- 10 05              BPL GETNEW1
2235                   *
2236  2CCE- 20 B2 2C           JSR PUTTREC     YES, SAVE IT
2237  2CD1- D0 23              BNE EXIT
2238                   *
2239  2CD3- AD 34 03   GETNEW1 LDA SAVRST+1    GET REQUESTED RECORD
2240  2CD6- 4C 96 2C           JMP GETTREC
2241                   *
2242                   * GETBYTE: GET ONE BYTE FROM FILE
2243                   *********************************
2244                   * ENTRY: FILE NUMBER IN X
2245                   *        POINTER IN A(LOW) AND Y(HIGH)
2246                   * EXIT:  FILERR IN Y AND STATUS, BYTE IN A
2247                   *
2248  2CD9- 8D 33 03   GETBYTE STA SAVRST      SAVE A
2249  2CDC- 20 26 2D           JSR TESTRA
2250                   *
2251  2CDF- 98                 TYA
2252  2CE0- DD 51 03           CMP FIRCTB,X    IS IT IN CURRENT RECORD?
2253  2CE3- F0 05              BEQ GETBYT1     YES, SKIP
2254                   *
2255  2CE5- 20 C3 2C           JSR GETNEWR     NO, GET NEW RECORD
2256  2CE8- D0 0C              BNE EXIT
2257                   *
2258  2CEA- 20 76 20   GETBYT1 JSR CPOINT      COMPUTE BUFFER PNT
2259  2CED- AC 33 03           LDY SAVRST      RESTORE LOW POINTER
2260  2CF0- B1 FA              LDA (POINT),Y   GET THE BYTE
2261  2CF2- A0 00              LDY =0
2262  2CF4- 84 DB              STY FILERR      OK
2263  2CF6- 60         EXIT    RTS
2264                   *
2265                   * PUTBYTE: PUT ONE BYTE TO FILE
2266                   *******************************
2267                   *
2268                   * ENTRY: BYTE STORED IN KCHAR
2269                   *        FILE NUMBER IN X
2270                   *        POINTER IN A(LOW) AND Y(HIGH)
2271                   * EXIT:  FILERR IN Y AND STATUS
2272                   *
2273  2CF7- 8D 33 03   PUTBYTE STA SAVRST
2274  2CFA- 20 26 2D           JSR TESTRA
2275  2CFD- BD 39 03          LDA FIDRTB,X    IS WRITE ALLOWED?
2276  2D00- 30 05              BMI PUTBYT0     YES,SKIP
2277  2D02- A0 29              LDY =$29        WRITE NOT ALLOWED
2278  2D04- 84 DB              STY FILERR

----------------------------------------------------------------------

R65 PASCAL: RANDOM ACCESS          22/10/23   R65 ASSEMBLER  PAGE 50

2279  2D06- 60                 RTS
2280                   *
2281  2D07- 98         PUTBYT0 TYA             FOR COMMENTS
2282  2D08- DD 51 03           CMP FIRCTB,X    SEE GETBYTE
2283  2D0B- F0 05              BEQ PUTBYT1
2284                   *
2285  2D0D- 20 C3 2C           JSR GETNEWR
2286  2D10- D0 E4              BNE EXIT
2287                   *
2288  2D12- 20 76 20   PUTBYT1 JSR CPOINT
2289  2D15- A9 80              LDA =$80        SET UPDATED FLAG
2290  2D17- 9D 49 03           STA FIBPTB,X
2291  2D1A- AC 33 03           LDY SAVRST
2292  2D1D- A5 FE              LDA KCHAR       GET BACK KCHAR
2293  2D1F- 91 FA              STA (POINT),Y
2294  2D21- A0 00              LDY =0
2295  2D23- 84 DB              STY FILERR
2296  2D25- 60                 RTS
2297                   *
2298                   *
2299                   * TESTRA: TEST X FOR LEGAL RA-FILE
2300                   *
2301  2D26- 8E 35 03   TESTRA  STX CURSEQ
2302  2D29- EC 36 03           CPX MAXSEQ
2303  2D2C- B0 0A              BCS TESTRA2
2304                   *
2305  2D2E- BD 39 03   TESTRA1 LDA FIDRTB,X
2306  2D31- 29 60              AND =$60
2307  2D33- C9 60              CMP =$60
2308  2D35- D0 03              BNE TESTRA3     SKIP, IF NOT OK
2309  2D37- 60                 RTS
2310                   *
2311  2D38- F0 F4      TESTRA2 BEQ TESTRA1
2312  2D3A- 68         TESTRA3 PLA
2313  2D3B- 68                 PLA
2314  2D3C- A0 25              LDY =$25        FILE NUMBER NOT ALLOWED
2315  2D3E- 84 DB              STY FILERR
2316  2D40- 60                 RTS
2317                   *
2318                   * CLOSRA: CLOSE RA OR SEQUENTIAL FILE IN X
2319                   ******************************************
2320                   * ENTRY: FILE IN X
2321                   * EXIT: FILERR IN Y AND STATUS
2322                   *
2323  2D41- BD 39 03   CLOSRA  LDA FIDRTB,X
2324  2D44- 29 40              AND =$40        SEQUENTIAL FILE?
2325  2D46- D0 03              BNE CLOSRA1     NO, SKIP
2326  2D48- 4C 7F 20           JMP CLOSE       YES, CLOSE IT
2327                   *
2328  2D4B- 20 26 2D   CLOSRA1 JSR TESTRA      MUST BE RA-FILE

----------------------------------------------------------------------

R65 PASCAL: RANDOM ACCESS          22/10/23   R65 ASSEMBLER  PAGE 51

2329  2D4E- BD 49 03           LDA FIBPTB,X    UPDATED?
2330  2D51- F0 05              BEQ CLOSRA2     NO, SKIP
2331                   *
2332  2D53- 20 B2 2C           JSR PUTTREC
2333  2D56- D0 0B              BNE CLOSRA3
2334                   *
2335  2D58- AE 35 03   CLOSRA2 LDX CURSEQ
2336  2D5B- A9 00              LDA =0
2337  2D5D- 9D 39 03           STA FIDRTB,X    CLOSE IT
2338  2D60- A8                 TAY
2339  2D61- 84 DB              STY FILERR
2340  2D63- 60         CLOSRA3 RTS
2341                   *
2342                   ENDCODE EQU *
2343                   *
2344                           TIT R65 PASCAL: LABELS
2345                   *
2346  2D64-                    END
LABELS=0157
ERRORS=00
RECORDS=74
