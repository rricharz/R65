----------------------------------------------------------------------

R65 PASCAL: LABELS                 24/10/23   R65 ASSEMBLER  PAGE 01

0001                   *
0002                   *       **********************
0003                   *       * R65 PASCAL RUNTIME *
0004                   *       **********************
0005                   *
0006                   * VERSION 5.3 01/06/82 RRICHARZ,RBAUMANN
0007                   * Modified 22/09/19 RRICHARZ
0008                   * Graphics text devices added
0009                   *
0010                           TIT R65 PASCAL RUNTIME
0011                   *
0012                   * INCLUDES RANDOM ACCESS FILE HANDLING,
0013                   * FLOATING POINT MATH, FILE HANDLING ERROR
0014                   * TESTING (OPTIONAL)
0015                   *
0016                           ORG 0
0017                   *
0018  0000-            ACCU    BSS 4   TOP OF STACKELEMENT
0019                   X1      EQU ACCU        FLP ACCU
0020                   M1      EQU ACCU+1
0021  0004-            E       BSS 4   FLP SCRATCH REGISTER
0022  0008-            SP      BSS 2   CURRENT STACK (-128)
0023  000A-            PC      BSS 2   PROGRAM COUNTER
0024  000C-            RUNERR  BSS 1   RUNTIME ERROR CODE
0025  000D-            DEVICE  BSS 1   I/O DEVICE CODE
0026  000E-            ENDSTK  BSS 2   END OF STACK (-128)
0027  0010-            SIGN    BSS 1   TEMPORARY SIGN
0028  0011-            STPROG  BSS 2   START OF USER PROGRAM
0029  0013-            EOPROG  BSS 2   END OF USER PRORMA
0030  0015-            BUFFPN  BSS 1   INPUT BUFFER POINTER
0031  0016-            ENDBUF  BSS 1   END OF INPUT BUFFER
0032  0017-            BASE    BSS 2   CURRENT BASE (-128)
0033  0019-            ABASE   BSS 2   ALTERNATE BASE (-128)
0034  001B-            ARG1    BSS 2   TEMPORARY ARGUMENT
0035  001D-            ARG3    BSS 4   TEMPORARY REGISTERS
0036  0021-            ARG2    BSS 2
0037                   X2      EQU ARG1        FLP REGISTER
0038                   M2      EQU ARG1+1
0039  0023-            IOCHECK BSS 1   IO ERROR CHECKING FLAG
0040  0024-            LINBUF  BSS 56  INPUT LINE BUFFER
0041                   *
0042                   FILFLG  EQU $DA
0043                   FILERR  EQU $DB
0044                   FILDRV  EQU $DC
0045                   TRACK   EQU $DD
0046                   SECTOR  EQU $DE
0047                   DATA    EQU $E0
0048                   VIDPNT  EQU $E9
0049                   POINT   EQU $FA
0050                   KCHAR   EQU $FE

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 24/10/23   R65 ASSEMBLER  PAGE 02

0051                   *
0052                   EMUCOM  EQU $1430       EMULATOR COMMAND REG
0053                   MULTA   EQU $14E0
0054                   MULTB   EQU $14E1
0055                   MULTR   EQU $14E2
0056                   *
0057                   FILTYP  EQU $0300
0058                   FILNAM  EQU $0301
0059                   FILCYC  EQU $0311
0060                   FILSTP  EQU $0312
0061                   FILLOC  EQU $0313
0062                   FILSIZ  EQU $0315
0063                   FILSA   EQU $031A
0064                   FILEA   EQU $031C
0065                   FILNM1  EQU $0320
0066                   FILCY1  EQU $0330
0067                   FILSA1  EQU $0331
0068                   SAVRST  EQU $0333
0069                   CURSEQ  EQU $0335
0070                   MAXSEQ  EQU $0336
0071                   MAXSIZ  EQU $0337
0072                   FIDRTB  EQU $0339
0073                   FIDVTB  EQU $0341
0074                   FIBPTB  EQU $0349
0075                   FIRCTB  EQU $0351
0076                   GRX     EQU $03AE
0077                   GRY     EQU $03AF
0078                   GRC     EQU $03B0
0079                   SFLAG   EQU $1781
0080                   NUMCHR  EQU $178A
0081                   VMON    EQU $17D5
0082                   SAVS    EQU $17FF
0083                   *
0084                   APLOTCH EQU $C818
0085                   GETKEY  EQU $E000
0086                   AUTOPR  EQU $E00C
0087                   ENDLIN  EQU $E024
0088                   PRTINF  EQU $E027
0089                   GETCHR  EQU $E003
0090                   GETLIN  EQU $E006
0091                   PRTCHR  EQU $E009
0092                   PRTBYT  EQU $E02D
0093                   PRTAX   EQU $E030
0094                   PRTRSA  EQU $E836
0095                   RDFILE  EQU $E815
0096                   SETFID  EQU $E81E
0097                   OPEN    EQU $F00F
0098                   READCH  EQU $F018
0099                   WRITCH  EQU $F01B
0100                   GETNAM  EQU $F815

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 24/10/23   R65 ASSEMBLER  PAGE 03

0101                   *
0102  005C-                    ORG $2000
0103                   *
0104                           PAG

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 24/10/23   R65 ASSEMBLER  PAGE 04

0105                   *
0106                   * ENTRY VECTORS
0107                   *
0108  2000- 4C C6 2A           JMP COLDST      COLD START ENTRY VECTOR
0109  2003- 4C 3A 29           JMP WARMST      WARM START ENTRY VECTOR
0110  2006- 4C FF 28           JMP PERROR      PASCAL ERROR
0111                   *
0112  2009- 82 2D      USERST  WRD ENDCODE+32
0113  200B- FF C7      USEREND WRD $C7FF
0114                   *
0115  200D- 4C F2 FC   HARGUM  JMP $FCF2       #######
0116                   *
0117                   *
0118                   * P-CODE 00:  STOP      (END OF EXECUTION)
0119                   ******************
0120                   * NO ARGUMENTS
0121                   *
0122  2010- A5 11      STOP    LDA STPROG      IS ANOTHER PROGRAM
0123  2012- A6 12              LDX STPROG+1    RUNNING?
0124  2014- CD 09 20           CMP USERST
0125  2017- D0 22              BNE STOP1
0126  2019- EC 0A 20           CPX USERST+1
0127  201C- D0 1D              BNE STOP1
0128                   *
0129  201E- 20 27 E0           JSR PRTINF      NO, STOP PASCAL
0130  2021- 0D 0A 51           BYT $D,$A,'Quit Pascal',$D,$8A
0130  2024- 75 69 74 
0130  2027- 20 50 61 
0130  202A- 73 63 61 
0130  202D- 6C 0D 8A 
0131  2030- AD 81 17           LDA SFLAG
0132  2033- 29 FE              AND =$FE        CLEAR PASCAL RUNTIME BIT
0133  2035- 8D 81 17           STA SFLAG       IN SFLAG
0134  2038- 6C D5 17           JMP (VMON)
0135                   *
0136  203B- 38         STOP1   SEC             YES, COMPUTE OLD SP
0137  203C- E9 8C              SBC =140
0138  203E- B0 01              BCS *+3
0139  2040- CA                 DEX
0140  2041- 85 08              STA SP
0141  2043- 86 09              STX SP+1
0142  2045- A0 8C              LDY =140
0143  2047- 20 60 27           JSR GETBACK
0144  204A- 85 13              STA EOPROG
0145  204C- 86 14              STX EOPROG+1
0146  204E- 20 60 27           JSR GETBACK
0147  2051- 85 11              STA STPROG
0148  2053- 86 12              STX STPROG+1
0149  2055- 20 60 27           JSR GETBACK
0150  2058- 85 0A              STA PC

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 24/10/23   R65 ASSEMBLER  PAGE 05

0151  205A- 86 0B              STX PC+1
0152  205C- 20 60 27           JSR GETBACK
0153  205F- 85 17              STA BASE
0154  2061- 86 18              STX BASE+1
0155  2063- 20 60 27           JSR GETBACK
0156  2066- 85 00              STA ACCU
0157  2068- 86 01              STX ACCU+1
0158  206A- AE FF 17           LDX SAVS        RESTORE STACK POINTER
0159  206D- 9A                 TXS
0160  206E- 4C D5 29           JMP LOOP
0161                   *
0162                   *
0163  2071- 4C FF F0   DOPEN1  JMP $F0FF
0164  2074- 4C 45 F1   DOPEN4  JMP $F145
0165  2077- 4C 51 F1   PRFLB1  JMP $F151
0166  207A- 4C 59 F1   CPOINT  JMP $F159
0167  207D- 4C E0 F1   PREPSR  JMP $F1E0
0168  2080- 4C 9E F2   PREPSR1 JMP $F29E
0169  2083- 4C BF F2   CLOSE   JMP $F2BF
0170  2086- 4C 57 F4   READ    JMP $F457
0171  2089- 4C 25 F4   WRITE   JMP $F425
0172  208C- 4C A7 F4   PREPDO  JMP $F4A7
0173  208F- 4C FD F5   DISCER1 JMP $F5FD
0174  2092- 4C 25 F6   ENDDO   JMP $F625
0175  2095- 4C 2C F6   PREPRD  JMP $F62C
0176  2098- 4C 51 F6   PREPWRA JMP $F651
0177  209B- 4C 6D F6   PREPWRB JMP $F66D
0178                   *
0179                   *
0180                   * P-CODE 01: RETN       (RETURN FROM PROCEDURE
0181                   *****************
0182                   * NO ARGUMENTS
0183                   *
0184  209E- A5 17      RETN    LDA BASE        SP=BASE-2
0185  20A0- 38                 SEC
0186  20A1- E9 02              SBC =2
0187  20A3- 85 08              STA SP
0188  20A5- A5 18              LDA BASE+1
0189  20A7- E9 00              SBC =0
0190  20A9- 85 09              STA SP+1
0191  20AB- A0 80              LDY =128        GET STACK TOP ELEMENT
0192  20AD- B1 08              LDA (SP),Y
0193  20AF- 85 00              STA ACCU
0194  20B1- C8                 INY
0195  20B2- B1 08              LDA (SP),Y
0196  20B4- 85 01              STA ACCU+1
0197  20B6- A0 84              LDY =132
0198  20B8- B1 08              LDA (SP),Y      GET SAVED OLD BASE
0199  20BA- 85 17              STA BASE
0200  20BC- C8                 INY

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 24/10/23   R65 ASSEMBLER  PAGE 06

0201  20BD- B1 08              LDA (SP),Y
0202  20BF- 85 18              STA BASE+1
0203  20C1- C8                 INY
0204  20C2- B1 08              LDA (SP),Y      AND RETURN ADDRESS
0205  20C4- 18                 CLC
0206  20C5- 69 02              ADC =2
0207  20C7- 85 0A              STA PC
0208  20C9- C8                 INY
0209  20CA- B1 08              LDA (SP),Y
0210  20CC- 69 00              ADC =0
0211  20CE- 85 0B              STA PC+1
0212  20D0- 60                 RTS
0213                   *
0214                   * P-CODE 02: NEGA       (NEGATE ACCU)
0215                   *****************
0216                   * NO ARGUMENTS
0217                   *
0218  20D1- A9 00      NEGA    LDA =0
0219  20D3- 38                 SEC
0220  20D4- E5 00              SBC ACCU
0221  20D6- 85 00              STA ACCU
0222  20D8- A9 00              LDA =0
0223  20DA- E5 01              SBC ACCU+1
0224  20DC- 85 01              STA ACCU+1
0225  20DE- 60                 RTS
0226                   *
0227                   * P-CODE 03: ADDA       (ADD)
0228                   *****************
0229                   * NO ARGUMENTS
0230                   *
0231  20DF- A0 7E      ADDA    LDY =126
0232  20E1- 18                 CLC
0233  20E2- B1 08              LDA (SP),Y
0234  20E4- 65 00              ADC ACCU
0235  20E6- 85 00              STA ACCU
0236  20E8- C8                 INY
0237  20E9- B1 08              LDA (SP),Y
0238  20EB- 65 01              ADC ACCU+1
0239  20ED- 85 01              STA ACCU+1
0240                   *
0241  20EF- A5 08      DECS2   LDA SP
0242  20F1- 38                 SEC
0243  20F2- E9 02              SBC =2
0244  20F4- 85 08              STA SP
0245  20F6- B0 02              BCS *+4
0246  20F8- C6 09              DEC SP+1
0247  20FA- 60                 RTS
0248                   *
0249                   * P-CODE 04: SUBA       (SUBTRACT)
0250                   *****************

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 24/10/23   R65 ASSEMBLER  PAGE 07

0251                   * NO ARGUMENTS
0252                   *
0253  20FB- A0 7E      SUBA    LDY =126
0254  20FD- 38                 SEC
0255  20FE- B1 08             LDA (SP),Y
0256  2100- E5 00              SBC ACCU
0257  2102- 85 00              STA ACCU
0258  2104- C8                 INY
0259  2105- B1 08              LDA (SP),Y
0260  2107- E5 01              SBC ACCU+1
0261  2109- 85 01              STA ACCU+1
0262  210B- 4C EF 20           JMP DECS2
0263                   *
0264                   * P-CODE 05: MULA       (MULTIPLY)
0265                   *****************
0266                   * NO ARGUMENTS
0267                   *
0268  210E- 20 48 21   MULA    JSR GETSIGN     COMPUTE SIGN OF RESULT
0269  2111- A5 00              LDA ACCU
0270  2113- 78                 SEI
0271  2114- 8D E0 14           STA MULTA
0272  2117- A5 1B              LDA ARG1        GET SAVED ARGUMENT
0273  2119- 8D E1 14           STA MULTB
0274  211C- AD E2 14           LDA MULTR
0275  211F- 85 00              STA ACCU
0276  2121- AD E3 14           LDA MULTR+1
0277  2124- A6 1C              LDX ARG1+1
0278  2126- 8E E1 14           STX MULTB
0279  2129- 18                 CLC
0280  212A- 6D E2 14           ADC MULTR
0281  212D- A6 01              LDX ACCU+1
0282  212F- 8E E0 14           STX MULTA
0283  2132- A6 1B              LDX ARG1
0284  2134- 8E E1 14           STX MULTB
0285  2137- 18                 CLC
0286  2138- 6D E2 14           ADC MULTR
0287  213B- 58                 CLI
0288  213C- 29 7F              AND =$7F
0289  213E- 85 01              STA ACCU+1
0290  2140- 20 EF 20           JSR DECS2
0291  2143- A5 10              LDA SIGN
0292  2145- 30 8A              BMI NEGA
0293  2147- 60                 RTS
0294                   *
0295  2148- A5 01      GETSIGN LDA ACCU+1
0296  214A- 85 10              STA SIGN
0297  214C- 10 03              BPL *+5
0298  214E- 20 D1 20           JSR NEGA
0299                   *
0300  2151- A0 7F              LDY =127

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 24/10/23   R65 ASSEMBLER  PAGE 08

0301  2153- B1 08              LDA (SP),Y
0302  2155- 10 14              BPL GETSI1
0303  2157- 45 10              EOR SIGN
0304  2159- 85 10              STA SIGN
0305  215B- 88                 DEY
0306  215C- A9 00              LDA =0
0307  215E- 38                 SEC
0308  215F- F1 08              SBC (SP),Y
0309  2161- 85 1B              STA ARG1
0310  2163- C8                 INY
0311  2164- A9 00              LDA =0
0312  2166- F1 08              SBC (SP),Y
0313  2168- 85 1C              STA ARG1+1
0314  216A- 60                 RTS
0315                   *
0316  216B- 85 1C      GETSI1  STA ARG1+1
0317  216D- 88                 DEY
0318  216E- B1 08              LDA (SP),Y
0319  2170- 85 1B              STA ARG1
0320  2172- 60                 RTS
0321                   *
0322                   * PCODE 06: DIVA        (DIVIDE)
0323                   ****************
0324                   *
0325  2173- A0 7E      DIVA    LDY =126
0326  2175- B1 08              LDA (SP),Y
0327  2177- 85 1B              STA ARG1
0328  2179- C8                 INY
0329  217A- B1 08              LDA (SP),Y
0330  217C- 85 1C              STA ARG1+1
0331  217E- 20 EF 20           JSR DECS2
0332                   *
0333  2181- A5 1C              LDA ARG1+1
0334  2183- 29 80              AND =$80
0335  2185- F0 02              BEQ *+4
0336  2187- A9 FF              LDA =$FF
0337  2189- 85 21              STA ARG2
0338  218B- 85 22              STA ARG2+1
0339  218D- AA                 TAX
0340  218E- 18                 CLC
0341  218F- 65 1B              ADC ARG1
0342  2191- 85 1B              STA ARG1
0343  2193- 8A                 TXA
0344  2194- 65 1C              ADC ARG1+1
0345  2196- 85 1C              STA ARG1+1
0346  2198- 8A                 TXA
0347  2199- 45 01              EOR ACCU+1
0348  219B- 85 10              STA SIGN
0349  219D- 10 03              BPL *+5
0350  219F- 20 D1 20           JSR NEGA

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 24/10/23   R65 ASSEMBLER  PAGE 09

0351  21A2- A0 11              LDY =$11
0352  21A4- A5 00              LDA ACCU
0353  21A6- 05 01              ORA ACCU+1
0354  21A8- D0 05              BNE DIV1
0355  21AA- A2 81              LDX =$81        PASCAL RUNTIME ERROR
0356  21AC- 4C FF 28           JMP PERROR      DIVISION BY ZERO
0357                   *
0358  21AF- 38         DIV1    SEC
0359  21B0- A5 21              LDA ARG2
0360  21B2- E5 00              SBC ACCU
0361  21B4- 48                 PHA
0362  21B5- A5 22              LDA ARG2+1
0363  21B7- E5 01              SBC ACCU+1
0364  21B9- 48                 PHA
0365  21BA- 45 22              EOR ARG2+1
0366  21BC- 30 09              BMI DIV2
0367  21BE- 68                 PLA
0368  21BF- 85 22              STA ARG2+1
0369  21C1- 68                 PLA
0370  21C2- 85 21              STA ARG2
0371  21C4- 38                 SEC
0372  21C5- B0 03              BCS DIV3
0373                   *
0374  21C7- 68         DIV2    PLA
0375  21C8- 68                 PLA
0376  21C9- 18                 CLC
0377  21CA- 26 1B      DIV3    ROL ARG1
0378  21CC- 26 1C              ROL ARG1+1
0379  21CE- 26 21              ROL ARG2
0380  21D0- 26 22              ROL ARG2+1
0381  21D2- 88                 DEY
0382  21D3- D0 DA              BNE DIV1
0383  21D5- A5 1B              LDA ARG1
0384  21D7- A6 1C              LDX ARG1+1
0385  21D9- 85 00              STA ACCU
0386  21DB- 86 01              STX ACCU+1
0387  21DD- A5 10              LDA SIGN
0388  21DF- 10 03              BPL *+5
0389  21E1- 4C D1 20           JMP NEGA
0390  21E4- 60                 RTS
0391                   *
0392                   * P-CODE 07: LOWB       (LOW BIT)
0393                   *****************
0394                   * NO ARGUMENTS
0395                   *
0396  21E5- A5 00      LOWB    LDA ACCU
0397  21E7- 29 01              AND =1
0398  21E9- 85 00      LOWB1   STA ACCU
0399  21EB- A9 00              LDA =0
0400  21ED- 85 01              STA ACCU+1

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 24/10/23   R65 ASSEMBLER  PAGE 10

0401  21EF- 60                 RTS
0402                   *
0403                   * P-CODE 08: TEQU       (TEST EQUAL)
0404                   *****************
0405                   *
0406  21F0- 20 FB 20   TEQU    JSR SUBA
0407  21F3- A5 00              LDA ACCU
0408  21F5- 05 01              ORA ACCU+1
0409  21F7- F0 04              BEQ TEQU1
0410  21F9- A9 00              LDA =0
0411  21FB- F0 EC              BEQ LOWB1       UNCOND.
0412                   *
0413  21FD- A9 01      TEQU1   LDA =1
0414  21FF- D0 E8             BNE LOWB1       UNCOND.
0415                   *
0416                   * PCODE 09: TNEQ        (TEST NOT EQUAL)
0417                   ****************
0418                   *
0419  2201- 20 F0 21   TNEQ    JSR TEQU
0420  2204- A5 00              LDA ACCU
0421  2206- 49 01              EOR =1
0422  2208- 85 00              STA ACCU
0423  220A- 60                 RTS
0424                   *
0425                   * P-CODE 0A: TLES       (TEST LESS)
0426                   *****************
0427                   *
0428  220B- 20 FB 20   TLES    JSR SUBA
0429  220E- A9 00              LDA =0
0430  2210- 06 01              ASL ACCU+1
0431  2212- 2A                 ROL A
0432  2213- 90 D4              BCC LOWB1       UNCOND.
0433                   *
0434                   * P-CODE 0B: TGRE       (TEST GREATER OR EQUAL)
0435                   *****************
0436                   *
0437  2215- 20 0B 22   TGRE    JSR TLES
0438  2218- 4C 04 22           JMP TNEQ+3
0439                   *
0440                   * P-CODE 0C: TGRTS      (TEST GREATER)
0441                   ******************
0442                   *
0443  221B- 20 F0 26   TGRT    JSR EXST
0444  221E- 4C 0B 22           JMP TLES
0445                   *
0446                   * P-CODE 0D: TLEE       (TEST LESS OR EQUAL)
0447                   *****************
0448                   *
0449  2221- 20 1B 22   TLEE    JSR TGRT
0450  2224- 4C 04 22           JMP TNEQ+3

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 24/10/23   R65 ASSEMBLER  PAGE 11

0451                   *
0452                   * P-CODE 0E: ORAC       (BITWISE OR)
0453                   *****************
0454                   *
0455  2227- A0 7E      ORAC    LDY =126
0456  2229- B1 08              LDA (SP),Y
0457  222B- 05 00              ORA ACCU
0458  222D- 85 00              STA ACCU
0459  222F- C8                 INY
0460  2230- B1 08              LDA (SP),Y
0461  2232- 05 01              ORA ACCU+1
0462  2234- 85 01              STA ACCU+1
0463  2236- 4C EF 20           JMP DECS2
0464                   *
0465                   * P-CODE 0F: ANDA       (BITWISE AND)
0466                   *****************
0467                   *
0468  2239- A0 7E      ANDA    LDY =126
0469  223B- B1 08              LDA (SP),Y
0470  223D- 25 00              AND ACCU
0471  223F- 85 00              STA ACCU
0472  2241- C8                 INY
0473  2242- B1 08              LDA (SP),Y
0474  2244- 25 01              AND ACCU+1
0475  2246- 85 01              STA ACCU+1
0476  2248- 4C EF 20           JMP DECS2
0477                   *
0478                   * PCODE 10: EORA        (BITWISE OR)
0479                   ****************
0480                   *
0481  224B- A0 7E      EORA    LDY =126
0482  224D- B1 08              LDA (SP),Y
0483  224F- 45 00              EOR ACCU
0484  2251- 85 00              STA ACCU
0485  2253- C8                 INY
0486  2254- B1 08              LDA (SP),Y
0487  2256- 45 01              EOR ACCU+1
0488  2258- 85 01              STA ACCU+1
0489  225A- 4C EF 20           JMP DECS2
0490                   *
0491                   * P-CODE 11: NOTA       (BITWISE NOT)
0492                   *****************
0493                   *
0494  225D- A5 00      NOTA    LDA ACCU
0495  225F- 49 FF              EOR =$FF
0496  2261- 85 00              STA ACCU
0497  2263- A5 01              LDA ACCU+1
0498  2265- 49 FF              EOR =$FF
0499  2267- 85 01              STA ACCU+1
0500  2269- 60                 RTS

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 24/10/23   R65 ASSEMBLER  PAGE 12

0501                   *
0502                   * P-CODE 12: LEFT       (SHIFT LEFT N BYTES)
0503                   *****************
0504                   *
0505  226A- 20 D1 20           JSR NEGA
0506  226D- A5 01      LEFT    LDA ACCU+1
0507  226F- 30 12              BMI RIGH-3      ARGUMENT NEGATIVE
0508                   *
0509  2271- A6 00              LDX ACCU
0510  2273- F0 0B              BEQ LEFT2       TAKE ONLY LOW BYTE
0511  2275- 20 E0 22           JSR GETS2       GET SECOND NO FROM ST
0512  2278- 06 00      LEFT1   ASL ACCU
0513  227A- 26 01              ROL ACCU+1
0514  227C- CA                 DEX
0515  227D- D0 F9              BNE LEFT1
0516  227F- 60                 RTS
0517                   *
0518  2280- 4C E0 22   LEFT2   JMP GETS2
0519                   *
0520                   * P-CODE 13: RIGH       (SHIFT RIGHT N BYTES)
0521                   *****************
0522                   *
0523  2283- 20 D1 20           JSR NEGA
0524  2286- A5 01      RIGH    LDA ACCU+1
0525  2288- 30 E0              BMI LEFT-3
0526  228A- A6 00              LDX ACCU
0527  228C- F0 F2              BEQ LEFT2
0528  228E- 20 E0 22           JSR GETS2
0529  2291- 46 01      RIGH1   LSR ACCU+1
0530  2293- A9 00              LDA =0
0531  2295- 90 02              BCC *+4
0532  2297- A9 80              LDA =128
0533  2299- 46 00              LSR ACCU
0534  229B- 05 00              ORA ACCU
0535  229D- 85 00              STA ACCU
0536  229F- CA                 DEX
0537  22A0- D0 EF              BNE RIGH1
0538  22A2- 60                 RTS
0539                   *
0540                   * P-CODE 14:INCA        (INCREMENT ACCU)
0541                   ****************
0542                   *
0543  22A3- E6 00      INCA    INC ACCU
0544  22A5- D0 02              BNE *+4
0545  22A7- E6 01              INC ACCU+1
0546  22A9- 60                 RTS
0547                   *
0548                   * P-CODE 15: DECA       (DECREMENT ACCU)
0549                   *****************
0550                   *

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 24/10/23   R65 ASSEMBLER  PAGE 13

0551  22AA- A5 00      DECA    LDA ACCU
0552  22AC- D0 02              BNE *+4
0553  22AE- C6 01              DEC ACCU+1
0554  22B0- C6 00              DEC ACCU
0555  22B2- 60                 RTS
0556                   *
0557                   * P-CODE 16: COPY       (COPY ACCU0
0558                   *****************
0559                   *
0560  22B3- 20 C2 22   COPY    JSR INCS2       INCREMENT STACK
0561  22B6- A0 7E              LDY =126
0562  22B8- A5 00              LDA ACCU
0563  22BA- 91 08              STA (SP),Y
0564  22BC- C8                 INY
0565  22BD- A5 01              LDA ACCU+1
0566  22BF- 91 08              STA (SP),Y
0567  22C1- 60                 RTS
0568                   *
0569  22C2- A9 02      INCS2   LDA =2
0570  22C4- 18                 CLC
0571  22C5- 65 08              ADC SP
0572  22C7- 85 08              STA SP
0573  22C9- 90 02              BCC *+4
0574  22CB- E6 09              INC SP+1
0575  22CD- C5 0E      INCS2A  CMP ENDSTK      TEST STACK OVERFLOW
0576  22CF- A5 09              LDA SP+1
0577  22D1- E5 0F              SBC ENDSTK+1
0578  22D3- B0 06              BCS INCS2B
0579  22D5- A9 05              LDA =5          LET EMULATOR KNOW THAT
0580  22D7- 8D 30 14           STA EMUCOM      SP HAS BEEN INCREASED
0581  22DA- 60                 RTS
0582                   *
0583  22DB- A0 82      INCS2B  LDY =$82        PASCAL RUN TIME ERROR
0584  22DD- 4C FF 28           JMP PERROR      STACK OVERFLOW
0585                   *
0586                   * GETS2
0587                   *
0588  22E0- A0 7E      GETS2   LDY =126
0589  22E2- B1 08              LDA (SP),Y
0590  22E4- 85 00              STA ACCU
0591  22E6- C8                 INY
0592  22E7- B1 08              LDA (SP),Y
0593  22E9- 85 01              STA ACCU+1
0594  22EB- 4C EF 20           JMP DECS2
0595                   *
0596                   * P-CODE 17: PEEK
0597                   *****************
0598                   *
0599  22EE- A0 00      PEEK    LDY =0
0600  22F0- B1 00              LDA (ACCU),Y

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 24/10/23   R65 ASSEMBLER  PAGE 14

0601  22F2- 85 00              STA ACCU
0602  22F4- 84 01              STY ACCU+1
0603  22F6- 60                 RTS
0604                   *
0605                   * P-CODE 18: POKE
0606                   *****************
0607                   *
0608  22F7- A6 00      POKE    LDX ACCU
0609  22F9- 20 E0 22           JSR GETS2
0610  22FC- A0 00              LDY =0
0611  22FE- 8A                 TXA
0612  22FF- 91 00             STA (ACCU),Y
0613  2301- 4C E0 22           JMP GETS2
0614                   *
0615                   * P-CODE 19: CALA
0616                   *****************
0617                   *
0618  2304- 20 0A 23   CALA    JSR CALA1
0619  2307- 4C E0 22           JMP GETS2
0620                   *
0621  230A- 6C 00 00   CALA1   JMP (ACCU)
0622                   *
0623                   * P-CODE 1A: RLIN
0624                   *****************
0625                   *
0626  230D- 20 06 E0   RLIN    JSR GETLIN
0627  2310- A2 00              LDX =0
0628  2312- B1 E9              LDA (VIDPNT),Y
0629  2314- 29 7F              AND =$7F
0630  2316- 95 24              STA LINBUF,X
0631  2318- E8                 INX
0632  2319- C8                 INY
0633  231A- CC 8A 17           CPY NUMCHR
0634  231D- 90 F3              BCC *-11
0635  231F- F0 F1              BEQ *-13
0636  2321- CA                 DEX
0637  2322- 30 06              BMI *+8
0638  2324- B5 24              LDA LINBUF,X
0639  2326- C9 20              CMP =$20
0640  2328- F0 F7              BEQ *-7
0641  232A- E8                 INX
0642  232B- 86 16              STX ENDBUF
0643  232D- A9 00              LDA =0
0644  232F- 85 15              STA BUFFPN
0645  2331- 20 27 E0           JSR PRTINF
0646  2334- 0D 8A              BYT $D,$8A
0647  2336- 60                 RTS
0648                   *
0649                   * P-CODE 1B: GETC
0650                   *****************

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 24/10/23   R65 ASSEMBLER  PAGE 15

0651                   *
0652  2337- 20 B3 22   GETC    JSR COPY
0653  233A- 20 94 28           JSR GETCHR0
0654  233D- 85 00      GETC1   STA ACCU
0655  233F- A9 00              LDA =0
0656  2341- 85 01              STA ACCU+1
0657  2343- 60                 RTS
0658                   *
0659                   * P-CODE 1C: GETN
0660                   *****************
0661                   *
0662  2344- 20 B3 22   GETN    JSR COPY
0663  2347- A9 00              LDA =0
0664  2349- 85 00              STA ACCU
0665  234B- 85 01              STA ACCU+1
0666  234D- 85 10              STA SIGN
0667  234F- 20 94 28   GETN0   JSR GETCHR0
0668  2352- C9 20              CMP =' '
0669  2354- F0 F9              BEQ GETN0
0670  2356- C9 2D              CMP ='-'
0671  2358- D0 05              BNE GETN1
0672                   *
0673  235A- C6 10              DEC SIGN
0674  235C- 4C 63 23           JMP GETN2
0675                   *
0676  235F- C9 2B      GETN1    CMP ='+'
0677  2361- D0 03              BNE GETN2+3
0678                   *
0679  2363- 20 94 28   GETN2   JSR GETCHR0
0680  2366- C9 30              CMP ='0'
0681  2368- 90 2F              BCC GETN3
0682  236A- C9 3A              CMP ='9'+1
0683  236C- B0 2B              BCS GETN3
0684  236E- 38                 SEC
0685  236F- E9 30              SBC ='0'
0686  2371- 48                 PHA
0687  2372- 06 00              ASL ACCU
0688  2374- 26 01              ROL ACCU+1
0689  2376- A6 00              LDX ACCU
0690  2378- A4 01              LDY ACCU+1
0691  237A- 06 00              ASL ACCU
0692  237C- 26 01              ROL ACCU+1
0693  237E- 06 00              ASL ACCU
0694  2380- 26 01              ROL ACCU+1
0695  2382- 18                 CLC
0696  2383- 8A                 TXA
0697  2384- 65 00              ADC ACCU
0698  2386- 85 00              STA ACCU
0699  2388- 98                 TYA
0700  2389- 65 01              ADC ACCU+1

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 24/10/23   R65 ASSEMBLER  PAGE 16

0701  238B- 85 01              STA ACCU+1
0702  238D- 68                 PLA
0703  238E- 18                 CLC
0704  238F- 65 00              ADC ACCU
0705  2391- 85 00              STA ACCU
0706  2393- 90 CE              BCC GETN2
0707  2395- E6 01              INC ACCU+1
0708  2397- B0 CA              BCS GETN2
0709                   *
0710  2399- A5 10      GETN3   LDA SIGN
0711  239B- F0 03              BEQ *+5
0712  239D- 4C D1 20           JMP NEGA
0713  23A0- 60                 RTS
0714                   *
0715                   * P-CODE 1D: PRTC
0716                   *****************
0717                   *
0718  23A1- A5 00      PRTC    LDA ACCU
0719  23A3- 20 C4 28           JSR PRTCHR0
0720  23A6- 4C E0 22           JMP GETS2
0721                   *
0722                   * P-CODE 1E: PRTN
0723                   *****************
0724                   *
0725  23A9- A5 01      PRTN    LDA ACCU+1
0726  23AB- 10 08              BPL PRTN1
0727  23AD- 20 D1 20           JSR NEGA
0728  23B0- A9 2D              LDA ='-'
0729  23B2- 20 C4 28           JSR PRTCHR0
0730                   *
0731  23B5- A5 00      PRTN1   LDA ACCU
0732  23B7- A6 01              LDX ACCU+1
0733  23B9- 85 21              STA ARG2
0734  23BB- 86 22              STX ARG2+1
0735  23BD- A9 1F              LDA =$1F
0736  23BF- 85 1D              STA ARG3
0737  23C1- 85 1F              STA ARG3+2
0738  23C3- A9 2A              LDA =$2A
0739  23C5- 85 1E              STA ARG3+1
0740  23C7- 85 20              STA ARG3+3
0741  23C9- A6 21              LDX ARG2
0742  23CB- A4 22              LDY ARG2+1
0743  23CD- 38                 SEC
0744  23CE- E6 1D      PRTN2   INC ARG3
0745  23D0- 8A                 TXA
0746  23D1- E9 10              SBC =$10
0747  23D3- AA                 TAX
0748  23D4- 98                 TYA
0749  23D5- E9 27              SBC =$27
0750  23D7- A8                 TAY

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 24/10/23   R65 ASSEMBLER  PAGE 17

0751  23D8- B0 F4              BCS PRTN2
0752  23DA- C6 1E      PRTN3   DEC ARG3+1
0753  23DC- 8A                 TXA
0754  23DD- 69 E8              ADC =$E8
0755  23DF- AA                 TAX
0756  23E0- 98                 TYA
0757  23E1- 69 03              ADC =$03
0758  23E3- A8                 TAY
0759  23E4- 90 F4              BCC PRTN3
0760  23E6- 8A                 TXA
0761  23E7- 38         PRTN4   SEC
0762  23E8- E6 1F      PRTN5   INC ARG3+2
0763  23EA- E9 64              SBC =$64
0764  23EC- B0 FA              BCS PRTN5
0765  23EE- 88                 DEY
0766  23EF- 10 F6              BPL PRTN4
0767  23F1- C6 20      PRTN6   DEC ARG3+3
0768  23F3- 69 0A              ADC =$A
0769  23F5- 90 FA              BCC PRTN6
0770  23F7- 09 30              ORA =$30
0771  23F9- 85 21              STA ARG2
0772  23FB- A9 20              LDA =$20
0773  23FD- 85 22              STA ARG2+1
0774  23FF- A2 FB             LDX =$FB
0775  2401- 86 10      PRTN7   STX SIGN
0776  2403- B5 22              LDA ARG2+1,X
0777  2405- 05 22              ORA ARG2+1
0778  2407- C9 20              CMP =$20
0779  2409- F0 09              BEQ PRTN8
0780  240B- A0 30              LDY =$30
0781  240D- 84 22              STY ARG2+1
0782  240F- 05 22              ORA ARG2+1
0783  2411- 20 C4 28           JSR PRTCHR0
0784  2414- A6 10      PRTN8   LDX SIGN
0785  2416- E8                 INX
0786  2417- D0 E8              BNE PRTN7
0787  2419- 4C E0 22           JMP GETS2
0788                   *
0789                   * P-CODE 1F: PRTS
0790                   *****************
0791                   *
0792  241C- 06 00      PRTS    ASL ACCU
0793  241E- 26 01              ROL ACCU+1
0794  2420- A5 08              LDA SP
0795  2422- 38                 SEC
0796  2423- E5 00              SBC ACCU
0797  2425- 85 00              STA ACCU
0798  2427- 48                 PHA
0799  2428- A5 09              LDA SP+1
0800  242A- E5 01              SBC ACCU+1

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 24/10/23   R65 ASSEMBLER  PAGE 18

0801  242C- 85 01              STA ACCU+1
0802  242E- 48                 PHA
0803  242F- A0 80      OUTST1  LDY =128
0804  2431- B1 00              LDA (ACCU),Y
0805  2433- 20 C4 28           JSR PRTCHR0
0806  2436- A5 00              LDA ACCU
0807  2438- 18                 CLC
0808  2439- 69 02              ADC =2
0809  243B- 85 00              STA ACCU
0810  243D- 90 02              BCC *+4
0811  243F- E6 01              INC ACCU+1
0812  2441- C5 08              CMP SP
0813  2443- A5 01              LDA ACCU+1
0814  2445- E5 09              SBC SP+1
0815  2447- 90 E6              BCC OUTST1
0816  2449- 68                 PLA
0817  244A- 85 09              STA SP+1
0818  244C- 68                 PLA
0819  244D- 85 08              STA SP
0820  244F- 4C E0 22           JMP GETS2
0821                   *
0822                   * P-CODE 20: LITB
0823                   *****************
0824                   *
0825  2452- 20 B3 22   LITB    JSR COPY
0826  2455- 20 9C 24           JSR FETCH
0827  2458- 85 00              STA ACCU
0828  245A- A9 00              LDA =0
0829  245C- 85 01              STA ACCU+1
0830  245E- 60                 RTS
0831                   *
0832                   * P-CODE 21: INCB
0833                   *****************
0834                   *
0835  245F- A0 80      INCB    LDY =128        SAVE CURRENT ACCU
0836  2461- A5 00              LDA ACCU
0837  2463- 91 08              STA (SP),Y
0838  2465- C8                 INY
0839  2466- A5 01              LDA ACCU+1
0840  2468- 91 08              STA (SP),Y
0841  246A- 20 9C 24           JSR FETCH
0842  246D- A2 00              LDX =0
0843  246F- A8                 TAY             TEST A
0844  2470- 10 01              BPL *+3
0845  2472- CA                 DEX
0846  2473- 18                 CLC
0847  2474- 65 08              ADC SP
0848  2476- 85 08              STA SP
0849  2478- 8A                 TXA
0850  2479- 65 09              ADC SP+1

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 24/10/23   R65 ASSEMBLER  PAGE 19

0851  247B- 85 09              STA SP+1
0852  247D- A5 08      INCB1   LDA SP
0853  247F- 20 CD 22           JSR INCS2A      TEST STACK OVERFLOW
0854  2482- A0 80              LDY =128        AND GET NEW ACCU
0855  2484- B1 08              LDA (SP),Y
0856  2486- 85 00              STA ACCU
0857  2488- C8                 INY
0858  2489- B1 08              LDA (SP),Y
0859  248B- 85 01              STA ACCU+1
0860  248D- 60                 RTS
0861                   *
0862                   * P-CODE 22: LITW
0863                   *****************
0864                   *
0865  248E- 20 B3 22   LITW    JSR COPY
0866  2491- 20 9C 24           JSR FETCH
0867  2494- 85 00              STA ACCU
0868  2496- 20 9C 24           JSR FETCH
0869  2499- 85 01              STA ACCU+1
0870  249B- 60                 RTS
0871                   *
0872                   * FETCH
0873                   *
0874  249C- A0 00      FETCH   LDY =0
0875  249E- B1 0A              LDA (PC),Y
0876  24A0- E6 0A              INC PC
0877  24A2- D0 02              BNE *+4
0878  24A4- E6 0B              INC PC+1
0879  24A6- 60                 RTS
0880                   *
0881                   * P-CODE 23: INCW
0882                   *****************
0883                   *
0884  24A7- A0 80      INCW    LDY =128        SAVE CURRENT ACCU
0885  24A9- A5 00              LDA ACCU
0886  24AB- 91 08              STA (SP),Y
0887  24AD- C8                 INY
0888  24AE- A5 01              LDA ACCU+1
0889  24B0- 91 08              STA (SP),Y
0890  24B2- 20 9C 24           JSR FETCH
0891  24B5- 18                 CLC
0892  24B6- 65 08              ADC SP
0893  24B8- 85 08              STA SP
0894  24BA- 20 9C 24           JSR FETCH
0895  24BD- 65 09              ADC SP+1
0896  24BF- 85 09              STA SP+1
0897  24C1- 4C 7D 24           JMP INCB1
0898                   *
0899                   * P-CODE 24: JUMP
0900                   *****************

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 24/10/23   R65 ASSEMBLER  PAGE 20

0901                   *
0902  24C4- A0 00      JUMP    LDY =0
0903  24C6- B1 0A              LDA (PC),Y
0904  24C8- 18                 CLC
0905  24C9- 65 0A              ADC PC
0906  24CB- AA                 TAX
0907  24CC- C8                 INY
0908  24CD- B1 0A              LDA (PC),Y
0909  24CF- 65 0B              ADC PC+1
0910  24D1- 86 0A              STX PC
0911  24D3- 85 0B              STA PC+1
0912  24D5- 60                 RTS
0913                   *
0914                   * P-CODE 25: JMPZ
0915                   *****************
0916                   *
0917  24D6- 46 00      JMPZ    LSR ACCU
0918  24D8- 08                 PHP
0919  24D9- 20 E0 22           JSR GETS2
0920  24DC- 28                 PLP
0921  24DD- 90 E5              BCC JUMP
0922                   *
0923  24DF- A5 0A              LDA PC
0924  24E1- 18                 CLC
0925  24E2- 69 02              ADC =2
0926  24E4- 85 0A              STA PC
0927  24E6- 90 02              BCC *+4
0928  24E8- E6 0B              INC PC+1
0929  24EA- 60                 RTS
0930                   *
0931                   * P-CODE 26: JMPO
0932                   *****************
0933                   *
0934  24EB- A5 00      JMPO    LDA ACCU
0935  24ED- 49 01              EOR =1
0936  24EF- 85 00              STA ACCU
0937  24F1- 4C D6 24           JMP JMPZ
0938                   *
0939                   * P-CODE 27: LOAD
0940                   *****************
0941                   *
0942  24F4- 20 B3 22   LOAD    JSR COPY
0943  24F7- 20 9C 24           JSR FETCH
0944  24FA- AA                 TAX             LEVEL DIFFERENCE
0945  24FB- 20 9C 24           JSR FETCH
0946  24FE- 85 1B             STA ARG1
0947  2500- 20 9C 24           JSR FETCH
0948  2503- 85 1C      LOAD1   STA ARG1+1
0949  2505- 20 31 25           JSR FBASE3
0950  2508- A0 80      LOAD2   LDY =128

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 24/10/23   R65 ASSEMBLER  PAGE 21

0951  250A- B1 19              LDA (ABASE),Y
0952  250C- 85 00              STA ACCU
0953  250E- C8                 INY
0954  250F- B1 19              LDA (ABASE),Y
0955  2511- 85 01              STA ACCU+1
0956  2513- 60                 RTS
0957                   *
0958                   * FBASE
0959                   *
0960  2514- A5 17      FBASE   LDA BASE
0961  2516- A4 18              LDY BASE+1
0962  2518- 85 19              STA ABASE
0963  251A- 84 1A              STY ABASE+1
0964  251C- E0 00              CPX =0
0965  251E- F0 10              BEQ FBASE2
0966                   *
0967  2520- A0 80      FBASE1  LDY =128
0968  2522- B1 19              LDA (ABASE),Y
0969  2524- 48                 PHA
0970  2525- C8                 INY
0971  2526- B1 19              LDA (ABASE),Y
0972  2528- 85 1A              STA ABASE+1
0973  252A- 68                 PLA
0974  252B- 85 19              STA ABASE
0975  252D- CA                 DEX
0976  252E- D0 F0              BNE FBASE1
0977  2530- 60         FBASE2  RTS
0978                   *
0979  2531- 20 14 25   FBASE3  JSR FBASE
0980  2534- 18                 CLC
0981  2535- A5 1B              LDA ARG1
0982  2537- 65 19              ADC ABASE
0983  2539- 85 19              STA ABASE
0984  253B- A5 1C              LDA ARG1+1
0985  253D- 65 1A              ADC ABASE+1
0986  253F- 85 1A              STA ABASE+1
0987  2541- 60                 RTS
0988                   *
0989                   * P-CODE 28: LODX
0990                   *****************
0991                   *
0992  2542- 20 9C 24   LODX    JSR FETCH
0993  2545- AA                 TAX
0994  2546- 20 9C 24           JSR FETCH
0995  2549- 06 00              ASL ACCU
0996  254B- 26 01              ROL ACCU+1
0997  254D- 18                 CLC
0998  254E- 65 00              ADC ACCU
0999  2550- 85 1B              STA ARG1
1000  2552- 08                 PHP

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 24/10/23   R65 ASSEMBLER  PAGE 22

1001  2553- 20 9C 24           JSR FETCH
1002  2556- 28                 PLP
1003  2557- 65 01              ADC ACCU+1
1004  2559- 4C 03 25           JMP LOAD1
1005                   *
1006                   * P-CODE 29: STOR
1007                   *****************
1008                   *
1009  255C- 20 9C 24   STOR    JSR FETCH
1010  255F- AA                 TAX
1011  2560- 20 9C 24           JSR FETCH
1012  2563- 85 1B              STA ARG1
1013  2565- 20 9C 24           JSR FETCH
1014  2568- 85 1C              STA ARG1+1
1015  256A- 20 31 25   STOR1   JSR FBASE3
1016  256D- A0 80      STOR2   LDY =128
1017  256F- A5 00              LDA ACCU
1018  2571- 91 19              STA (ABASE),Y
1019  2573- C8                 INY
1020  2574- A5 01              LDA ACCU+1
1021  2576- 91 19              STA (ABASE),Y
1022  2578- 4C E0 22           JMP GETS2
1023                   *
1024                   * P-CODE 2A: STOX
1025                   *****************
1026                   *
1027  257B- 20 9C 24   STOX    JSR FETCH
1028  257E- AA                 TAX
1029  257F- A0 7E              LDY =126
1030  2581- B1 08              LDA (SP),Y
1031  2583- 0A                 ASL A
1032  2584- 85 1B              STA ARG1
1033  2586- C8                 INY
1034  2587- B1 08              LDA (SP),Y
1035  2589- 2A                 ROL A
1036  258A- 85 1C              STA ARG1+1
1037  258C- 20 9C 24           JSR FETCH
1038  258F- 18                 CLC
1039  2590- 65 1B              ADC ARG1
1040  2592- 85 1B              STA ARG1
1041  2594- 20 9C 24           JSR FETCH
1042  2597- 65 1C              ADC ARG1+1
1043  2599- 85 1C              STA ARG1+1
1044  259B- 20 EF 20           JSR DECS2
1045  259E- 4C 6A 25           JMP STOR1
1046                   *
1047                   * P-CODE 2B: CALL
1048                   *****************
1049                   *
1050  25A1- 20 9C 24   CALL    JSR FETCH

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 24/10/23   R65 ASSEMBLER  PAGE 23

1051  25A4- AA                 TAX
1052  25A5- 20 14 25           JSR FBASE
1053  25A8- A0 82              LDY =130
1054  25AA- A5 19              LDA ABASE
1055  25AC- 91 08              STA (SP),Y
1056  25AE- C8                 INY
1057  25AF- A5 1A              LDA ABASE+1
1058  25B1- 91 08              STA (SP),Y
1059  25B3- C8                 INY
1060  25B4- A5 17              LDA BASE
1061  25B6- 91 08              STA (SP),Y
1062  25B8- C8                 INY
1063  25B9- A5 18              LDA BASE+1
1064  25BB- 91 08              STA (SP),Y
1065  25BD- C8                 INY
1066  25BE- A5 0A              LDA PC
1067  25C0- 91 08              STA (SP),Y
1068  25C2- C8                 INY
1069  25C3- A5 0B              LDA PC+1
1070  25C5- 91 08              STA (SP),Y
1071  25C7- A5 08              LDA SP
1072  25C9- 18                 CLC
1073  25CA- 69 02              ADC =2
1074  25CC- 85 17              STA BASE
1075  25CE- A5 09              LDA SP+1
1076  25D0- 69 00              ADC =0
1077  25D2- 85 18              STA BASE+1
1078  25D4- 4C C4 24           JMP JUMP
1079                   *
1080                   * PCODE 2C: SDEV
1081                   ****************
1082                   *
1083  25D7- A5 00      SDEV    LDA ACCU
1084  25D9- 85 0D              STA DEVICE
1085  25DB- 4C E0 22           JMP GETS2
1086                   *
1087                   * PCODE 2D: RDEV
1088                   ****************
1089                   *
1090  25DE- A9 00      RDEV    LDA =0
1091  25E0- 85 0D              STA DEVICE
1092  25E2- 60                 RTS
1093                   *
1094                   * PCODE 2E: FNAM
1095                   ****************
1096                   *
1097  25E3- 20 27 E0   FNAM    JSR PRTINF
1098  25E6- 20 3D A0           BYT ' = '+128
1099  25E9- 20 06 E0           JSR GETLIN
1100  25EC- 20 15 F8           JSR GETNAM

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 24/10/23   R65 ASSEMBLER  PAGE 24

1101  25EF- 20 0D 20           JSR HARGUM
1102  25F2- 85 DC              STA FILDRV
1103  25F4- 20 0D 20           JSR HARGUM
1104  25F7- 8D 13 03           STA FILLOC
1105  25FA- 20 27 E0           JSR PRTINF
1106  25FD- 0D 8A              BYT $D,$8A
1107  25FF- 60                RTS
1108                   *
1109                   * P-CODE 2F: OPNR
1110                   *****************
1111                   *
1112                   * NO AUTOMATIC ERROR TESTING
1113                   *
1114  2600- A9 00      OPNR    LDA =0
1115  2602- 85 DA              STA FILFLG
1116  2604- 20 B3 22           JSR COPY
1117  2607- 20 0F F0           JSR OPEN
1118  260A- C8                 INY
1119  260B- C8                 INY
1120  260C- 84 00              STY ACCU
1121  260E- 85 01              STA ACCU+1
1122  2610- 60                 RTS
1123                   *
1124                   * P-CODE 30: OPNW
1125                   *****************
1126                   *
1127  2611- A9 20      OPNW    LDA =$20
1128  2613- 4C 02 26           JMP OPNR+2
1129                   *
1130                   * P-CODE 31: CLOS
1131                   *****************
1132                   *
1133                   * NO AUTOMATIC ERROR CHECKING
1134                   *
1135  2616- A6 00      CLOS    LDX ACCU
1136  2618- CA                 DEX
1137  2619- CA                 DEX
1138  261A- 20 3F 2D           JSR CLOSRA
1139  261D- 4C E0 22           JMP GETS2
1140                   *
1141                   * P-CODE 32: PRTI
1142                   *****************
1143                   *
1144  2620- 20 9C 24   PRTI    JSR FETCH
1145  2623- 48                 PHA
1146  2624- 29 7F              AND =$7F
1147  2626- 20 C4 28           JSR PRTCHR0
1148  2629- 68                 PLA
1149  262A- 10 F4              BPL PRTI
1150  262C- 60                 RTS

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 24/10/23   R65 ASSEMBLER  PAGE 25

1151                   *
1152                   * P-CODE 33: GHGH       (GET HIGH)
1153                   *****************
1154                   *
1155  262D- A5 01      GHGH    LDA ACCU+1
1156  262F- 85 00              STA ACCU
1157                   *
1158                   * P-CODE 34: GLOW
1159                   *****************
1160                   *
1161  2631- A9 00      GLOW    LDA =0
1162  2633- 85 01              STA ACCU+1
1163  2635- 60                 RTS
1164                   *
1165                   * P-CODE 35:PHGH
1166                   ****************
1167                   *
1168  2636- A0 7E      PHGH    LDY =126
1169  2638- B1 08              LDA (SP),Y
1170  263A- 85 01              STA ACCU+1
1171  263C- 4C EF 20           JMP DECS2
1172                   *
1173                   * P-CODE 36: PLOW
1174                   *****************
1175                   *
1176  263F- A0 7E      PLOW    LDY =126
1177  2641- B1 08              LDA (SP),Y
1178  2643- 85 00              STA ACCU
1179  2645- 4C EF 20           JMP DECS2
1180                   *
1181                   * P-CODE 37: GSEC
1182                   *****************
1183                   * DEVICE HAS TO BE SET  ########
1184                   *
1185  2648- 20 5A 26   GSEC    JSR PREPSEC
1186  264B- 4C 86 20           JMP READ
1187  264E- 4C 92 20           JMP ENDDO
1188                   *
1189                   * P-CODE 38: PSEC
1190                   *****************
1191                   * DEVICE HAS TO BE SET  ########
1192                   *
1193  2651- 20 5A 26   PSEC    JSR PREPSEC
1194  2654- 20 89 20           JSR WRITE
1195  2657- 4C 92 20           JMP ENDDO
1196                   *
1197  265A- A5 00      PREPSEC LDA ACCU
1198  265C- A6 01              LDX ACCU+1
1199  265E- 85 E0              STA DATA
1200  2660- 86 E1              STX DATA+1

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 24/10/23   R65 ASSEMBLER  PAGE 26

1201  2662- A0 7E              LDY =126
1202  2664- B1 08              LDA (SP),Y
1203  2666- 85 DE              STA SECTOR
1204  2668- A0 7C              LDY =124
1205  266A- B1 08              LDA (SP),Y
1206  266C- 85 DD              STA TRACK
1207  266E- A5 08              LDA SP
1208  2670- 38                 SEC
1209  2671- E9 04              SBC =4
1210  2673- 20 F4 20           JSR DECS2+5
1211  2676- 20 E0 22           JSR GETS2
1212  2679- 4C 8C 20           JMP PREPDO
1213                   *
1214                   * P-CODE 39: NBYT       LOAD N BYTES IMMEDIATELY
1215                   *****************
1216                   *
1217  267C- 20 9C 24   NBYT    JSR FETCH
1218  267F- AA                 TAX             BYTE COUNTER
1219  2680- 20 B3 22   NBYT1   JSR COPY
1220  2683- 20 9C 24           JSR FETCH
1221  2686- 84 01              STY ACCU+1      Y=0
1222  2688- 85 00              STA ACCU
1223  268A- CA                 DEX
1224  268B- D0 F3              BNE NBYT1
1225  268D- 60                 RTS
1226                   *
1227                   * P-CODE 3A: NWRD       LOAD N WORD IMMEDIATELY
1228                   *****************
1229                   *
1230  268E- 20 9C 24   NWRD    JSR FETCH
1231  2691- AA                 TAX             WORD COUNTER
1232  2692- 20 B3 22   NWRD1   JSR COPY
1233  2695- 20 9C 24           JSR FETCH
1234  2698- 85 00              STA ACCU
1235  269A- 20 9C 24           JSR FETCH
1236  269D- 85 01              STA ACCU+1
1237  269F- CA                 DEX
1238  26A0- D0 F0              BNE NWRD1
1239  26A2- 60                 RTS
1240                   *
1241                   * P-CODE 3B: LODN       LOAD N MORE WORDS
1242                   *****************
1243                   *
1244  26A3- 20 9C 24   LODN    JSR FETCH
1245  26A6- AA                 TAX
1246  26A7- 20 B3 22   LODN1   JSR COPY
1247  26AA- A5 19              LDA ABASE
1248  26AC- 18                 CLC
1249  26AD- 69 02              ADC =2
1250  26AF- 85 19              STA ABASE

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 24/10/23   R65 ASSEMBLER  PAGE 27

1251  26B1- 90 02              BCC *+4
1252  26B3- E6 1A              INC ABASE+1
1253  26B5- 20 08 25           JSR LOAD2
1254  26B8- CA                 DEX
1255  26B9- D0 EC              BNE LODN1
1256  26BB- 60                 RTS
1257                   *
1258                   * P-CODE 3C: STON       STORE N MORE WORDS
1259                   *****************
1260                   *
1261  26BC- 20 9C 24   STON    JSR FETCH
1262  26BF- AA                 TAX
1263  26C0- A5 19      STON1   LDA ABASE
1264  26C2- 38                 SEC
1265  26C3- E9 02              SBC =2
1266  26C5- 85 19              STA ABASE
1267  26C7- B0 02              BCS *+4
1268  26C9- C6 1A              DEC ABASE+1
1269  26CB- 20 6D 25           JSR STOR2
1270  26CE- CA                 DEX
1271  26CF- D0 EF              BNE STON1
1272  26D1- 60                 RTS
1273                   *
1274                   * P-CODE 3D: LODI       LOAD INDIRECT
1275                   *****************
1276                   *
1277  26D2- 20 D8 26   LODI    JSR GETACC
1278  26D5- 4C 08 25           JMP LOAD2
1279                   *
1280  26D8- A5 00      GETACC  LDA ACCU
1281  26DA- A6 01              LDX ACCU+1
1282  26DC- 38                 SEC
1283  26DD- E9 80              SBC =128
1284  26DF- B0 01              BCS *+3
1285  26E1- CA                 DEX
1286  26E2- 85 19              STA ABASE
1287  26E4- 86 1A              STX ABASE+1
1288  26E6- 60                 RTS
1289                   *
1290                   * P-CODE 3E: STOI       STORE INDIRECT
1291                   *****************
1292                   *
1293  26E7- 20 D8 26   STOI    JSR GETACC
1294  26EA- 20 E0 22           JSR GETS2
1295  26ED- 4C 6D 25           JMP STOR2
1296                   *
1297                   * P-CODE 3F: EXST       EXCHANGE STACK
1298                   *****************
1299                   *
1300  26F0- A0 7E      EXST    LDY =126

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 24/10/23   R65 ASSEMBLER  PAGE 28

1301  26F2- B1 08              LDA (SP),Y
1302  26F4- AA                 TAX
1303  26F5- A5 00              LDA ACCU
1304  26F7- 91 08              STA (SP),Y
1305  26F9- 86 00              STX ACCU
1306  26FB- C8                 INY
1307  26FC- B1 08              LDA (SP),Y
1308  26FE- AA                 TAX
1309  26FF- A5 01             LDA ACCU+1
1310  2701- 91 08              STA (SP),Y
1311  2703- 86 01              STX ACCU+1
1312  2705- 60                 RTS
1313                   *
1314                   * P-CODE 40 TIND        TEST INDEX
1315                   ****************
1316                   *
1317  2706- 20 9C 24   TIND    JSR FETCH       LOWLIM-1
1318  2709- AA                 TAX
1319  270A- 20 9C 24           JSR FETCH
1320  270D- E4 00              CPX ACCU
1321  270F- E5 01              SBC ACCU+1
1322  2711- 70 0E              BVS TINDERR
1323                   *
1324  2713- 20 9C 24           JSR FETCH       HIGHLIM
1325  2716- AA                 TAX
1326  2717- 20 9C 24           JSR FETCH
1327  271A- E4 00              CPX ACCU
1328  271C- E5 01              SBC ACCU+1
1329  271E- 90 01              BCC TINDERR
1330  2720- 60                 RTS
1331                   *
1332  2721- A2 83      TINDERR LDX =$83        RUNTIME ERROR
1333  2723- 4C FF 28           JMP PERROR      INDEX OUT OF BOUNDS
1334                   *
1335                   * P-CODE 41: RUNP       RUN PROGRAM
1336                   *****************
1337                   *
1338  2726- A0 82      RUNP    LDY =130
1339  2728- A5 00              LDA ACCU        SAVE ACCU
1340  272A- A6 01              LDX ACCU+1
1341  272C- 20 58 27           JSR SAVE
1342  272F- A5 17              LDA BASE        SAVE BASE
1343  2731- A6 18              LDX BASE+1
1344  2733- 20 58 27           JSR SAVE
1345  2736- A5 0A              LDA PC          SAVE PC
1346  2738- A6 0B              LDX PC+1
1347  273A- 20 58 27           JSR SAVE
1348  273D- A5 11              LDA STPROG      SAVE STPROG
1349  273F- A6 12              LDX STPROG+1
1350  2741- 20 58 27           JSR SAVE

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 24/10/23   R65 ASSEMBLER  PAGE 29

1351  2744- A5 13              LDA EOPROG      SAVE EOPROG
1352  2746- A6 14              LDX EOPROG+1
1353  2748- 20 58 27           JSR SAVE
1354  274B- A5 08              LDA SP          GET SP
1355  274D- A6 09              LDX SP+1
1356  274F- 18                 CLC
1357  2750- 69 8C              ADC =140
1358  2752- 90 01              BCC *+3
1359  2754- E8                 INX             COMPUTE NEW STPROG
1360  2755- 4C 82 29           JMP EXEC3
1361                   *
1362                   *
1363  2758- 91 08      SAVE    STA (SP),Y
1364  275A- C8                 INY
1365  275B- 8A                 TXA
1366  275C- 91 08              STA (SP),Y
1367  275E- C8                 INY
1368  275F- 60                 RTS
1369                   *
1370                   *
1371  2760- 88         GETBACK DEY
1372  2761- B1 08              LDA (SP),Y
1373  2763- AA                 TAX
1374  2764- 88                 DEY
1375  2765- B1 08              LDA (SP),Y
1376  2767- 60                 RTS
1377                   *
1378                   *
1379                   * P-CODE 42: ADDF
1380                   *****************
1381                   *
1382  2768- 20 85 27   ADDF    JSR GETFLP2
1383  276B- 20 2F 2B           JSR FADD
1384                   *
1385  276E- A5 08      PUTFLP0 LDA SP          DECREMENT SP BY 4
1386  2770- 38                 SEC
1387  2771- E9 04              SBC =4
1388  2773- 85 08              STA SP
1389  2775- B0 02              BCS PUTFLP
1390  2777- C6 09              DEC SP+1
1391  2779- A5 02      PUTFLP  LDA M1+1        AND SAVE HALF OF NUMBER
1392  277B- A0 7E              LDY =126
1393  277D- 91 08              STA (SP),Y
1394  277F- C8                 INY
1395  2780- A5 03              LDA M1+2
1396  2782- 91 08              STA (SP),Y
1397  2784- 60                 RTS
1398                   *
1399  2785- A0 7A      GETFLP2 LDY =122        GET SECOND NUMBER
1400  2787- B1 08              LDA (SP),Y

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 24/10/23   R65 ASSEMBLER  PAGE 30

1401  2789- 85 1D              STA M2+1
1402  278B- C8                 INY
1403  278C- B1 08              LDA (SP),Y
1404  278E- 85 1E              STA M2+2
1405  2790- C8                 INY
1406  2791- B1 08              LDA (SP),Y
1407  2793- 85 1B              STA X2
1408  2795- C8                 INY
1409  2796- B1 08              LDA (SP),Y
1410  2798- 85 1C              STA M2
1411  279A- A0 7E      GETFLP  LDY =126        AND HALF OF FIRST
1412  279C- B1 08              LDA (SP),Y
1413  279E- 85 02              STA M1+1
1414  27A0- C8                 INY
1415  27A1- B1 08              LDA (SP),Y
1416  27A3- 85 03              STA M1+2
1417  27A5- 60                 RTS
1418                   *
1419                   * P-CODE 43: SUBF
1420                   *****************
1421                   *
1422  27A6- 20 85 27   SUBF    JSR GETFLP2
1423  27A9- 20 29 2B           JSR FSUB
1424  27AC- 4C 6E 27           JMP PUTFLP0
1425                   *
1426                   * P-CODE 44: MULF
1427                   *****************
1428                   *
1429  27AF- 20 85 27   MULF    JSR GETFLP2
1430  27B2- 20 56 2B           JSR FMUL
1431  27B5- 4C 6E 27           JMP PUTFLP0
1432                   *
1433                   * P-CODE 45: DIVF
1434                   *****************
1435                   *
1436  27B8- 20 85 27   DIVF    JSR GETFLP2
1437  27BB- 20 7C 2B           JSR FDIV
1438  27BE- 4C 6E 27           JMP PUTFLP0
1439                   *
1440                   * P-CODE 46: FLOF
1441                   *****************
1442                   *
1443  27C1- A5 00      FLOF    LDA ACCU
1444  27C3- 85 02              STA M1+1        HIGH BYTE IS IN ACCU
1445                   *                       SAME AS M1
1446  27C5- 20 0B 2B           JSR FLOAT
1447  27C8- 20 C2 22           JSR INCS2
1448  27CB- 4C 79 27           JMP PUTFLP
1449                   *
1450                   * P-CODE 47: FIXF

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 24/10/23   R65 ASSEMBLER  PAGE 31

1451                   *****************
1452                   *
1453  27CE- 20 9A 27   FIXF    JSR GETFLP
1454  27D1- 20 C9 2B           JSR FIX
1455  27D4- A5 02              LDA M1+1
1456  27D6- 85 00              STA ACCU
1457  27D8- 4C EF 20           JMP DECS2
1458                   *
1459                   * P-CODE 48: FEQU       =
1460                   *****************
1461                   *
1462  27DB- 20 FC 27   FEQU    JSR TESTF
1463  27DE- F0 12              BEQ TRUE
1464                   *
1465  27E0- A2 00      FALSE   LDX =0
1466  27E2- 86 00              STX ACCU
1467  27E4- 86 01              STX ACCU+1
1468  27E6- A5 08      DECS6   LDA SP
1469  27E8- 38                 SEC
1470  27E9- E9 06              SBC =6
1471  27EB- 85 08              STA SP
1472  27ED- B0 02              BCS *+4
1473  27EF- C6 09              DEC SP+1
1474  27F1- 60                 RTS
1475                   *
1476  27F2- A2 01      TRUE    LDX =1
1477  27F4- 86 00              STX ACCU
1478  27F6- CA                 DEX
1479  27F7- 86 01              STX ACCU+1
1480  27F9- 4C E6 27           JMP DECS6
1481                   *
1482  27FC- 20 85 27   TESTF   JSR GETFLP2
1483  27FF- 20 29 2B          JSR FSUB
1484  2802- A5 01              LDA M1
1485  2804- 60                 RTS
1486                   *
1487                   * P-CODE 49: FNEQ       <>
1488                   *****************
1489                   *
1490  2805- 20 FC 27   FNEQ    JSR TESTF
1491  2808- D0 E8              BNE TRUE
1492  280A- F0 D4              BEQ FALSE
1493                   *
1494                   * P-CODE 4A: FLES       <
1495                   *****************
1496                   *
1497  280C- 20 FC 27   FLES    JSR TESTF
1498  280F- 10 CF              BPL FALSE
1499  2811- 30 DF              BMI TRUE
1500                   *

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 24/10/23   R65 ASSEMBLER  PAGE 32

1501                   * P-CODE 4B: FGRE       >=
1502                   *****************
1503                   *
1504  2813- 20 FC 27   FGRE    JSR TESTF
1505  2816- 10 DA              BPL TRUE
1506  2818- 30 C6              BMI FALSE
1507                   *
1508                   * P-CODE 4C: FGRT       >
1509                   *****************
1510                   *
1511  281A- 20 FC 27   FGRT    JSR TESTF
1512  281D- 30 C1              BMI FALSE
1513  281F- F0 BF              BEQ FALSE
1514  2821- 10 CF              BPL TRUE
1515                   *
1516                   * P-CODE 4D: FLEE       <=
1517                   *****************
1518                   *
1519  2823- 20 FC 27   FLEE    JSR TESTF
1520  2826- 30 CA              BMI TRUE
1521  2828- F0 C8              BEQ TRUE
1522  282A- 10 B4              BPL FALSE
1523                   *
1524                   * P-CODE 4E: FCOM       COMPLEMENT
1525                   *****************
1526                   *
1527  282C- 20 9A 27   FCOM    JSR GETFLP
1528  282F- 20 6E 2B           JSR FCOMPL
1529  2832- 4C 79 27           JMP PUTFLP
1530                   *
1531                   *
1532                   * P-CODE 4F: TFER       TEST FILE ERROR
1533                   *****************
1534                   *
1535  2835- A6 23      TFER    LDX IOCHECK
1536  2837- F0 04              BEQ TFER1
1537  2839- A6 DB              LDX FILERR
1538  283B- D0 01              BNE TFER2
1539  283D- 60         TFER1   RTS             OK
1540                   *
1541  283E- 4C FF 28   TFER2   JMP PERROR
1542                   *
1543                   * P-CODE 50: OPRA       OPEN RA-FILE
1544                   *****************
1545                   *
1546  2841- 20 B3 22   OPRA    JSR COPY        SAVE ACCU
1547  2844- 20 D0 2B           JSR OPENRA      OPEN FILE
1548  2847- C8                 INY
1549  2848- C8                 INY
1550  2849- 84 00              STY ACCU        SAVE FILE NO

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 24/10/23   R65 ASSEMBLER  PAGE 33

1551  284B- A9 00              LDA =0
1552  284D- 85 01              STA ACCU+1
1553  284F- 60                 RTS
1554                   *
1555                   * P-CODE 51: GETR       GET FROM RA FILE
1556                   *****************
1557                   *
1558                   * NO AUTOMATIC ERROR CHECKING
1559                   *
1560  2850- 20 5D 28   GETR    JSR GETR1
1561  2853- 20 D7 2C           JSR GETBYTE
1562  2856- 85 00              STA ACCU
1563  2858- A9 00              LDA =0
1564  285A- 85 01              STA ACCU+1
1565  285C- 60                 RTS
1566                   *
1567  285D- 20 EF 20   GETR1   JSR DECS2
1568  2860- A0 80              LDY =128
1569  2862- B1 08              LDA (SP),Y      GET FILE NO
1570  2864- AA                 TAX
1571  2865- CA                 DEX
1572  2866- CA                 DEX
1573  2867- A5 00              LDA ACCU        GET POINTER
1574  2869- A4 01              LDY ACCU+1
1575  286B- 60                 RTS
1576                   *
1577                   * P-CODE 52: PUTR       PUT TO RA=FILE
1578                   *****************
1579                   *
1580                   * NO AUTOMATIC ERROR CHECKING
1581                   *
1582  286C- A5 00      PUTR    LDA ACCU
1583  286E- 85 FE              STA KCHAR
1584  2870- 20 E0 22           JSR GETS2
1585  2873- 20 5D 28           JSR GETR1
1586  2876- 20 F5 2C           JSR PUTBYTE
1587  2879- 4C E0 22           JMP GETS2
1588                   *
1589                   * P-CODE 53: SWA2       SWAP 2 AND 3 ON STACK
1590                   *****************
1591                   *
1592  287C- A0 7E      SWA2    LDY =126
1593  287E- 20 83 28           JSR SWA3
1594  2881- A0 7F              LDY =127
1595                   *
1596  2883- B1 08      SWA3    LDA (SP),Y
1597  2885- AA                 TAX
1598  2886- 88                 DEY
1599  2887- 88                 DEY
1600  2888- B1 08              LDA (SP),Y

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 24/10/23   R65 ASSEMBLER  PAGE 34

1601  288A- C8                 INY
1602  288B- C8                 INY
1603  288C- 91 08              STA (SP),Y
1604  288E- 8A                 TXA
1605  288F- 88                 DEY
1606  2890- 88                 DEY
1607  2891- 91 08              STA (SP),Y
1608  2893- 60                 RTS
1609                   *
1610                   * GETCHR0: GET A CHAR FROM SPECIFIED FILE
1611                   *****************************************
1612                   *
1613  2894- A6 0D      GETCHR0 LDX DEVICE
1614  2896- D0 1A              BNE GETCHR4
1615                   *
1616  2898- A6 15      GETCHR1 LDX BUFFPN
1617  289A- 10 06              BPL GETCHR2
1618  289C- 20 0D 23           JSR RLIN
1619  289F- 4C 98 28           JMP GETCHR1
1620                   *
1621  28A2- E4 16      GETCHR2 CPX ENDBUF      IS IS END OF BUFFER?
1622  28A4- D0 07              BNE GETCHR3
1623  28A6- A9 FF              LDA =$FF
1624  28A8- 85 15              STA BUFFPN
1625  28AA- A9 0D              LDA =$D
1626  28AC- 60                 RTS
1627                   *
1628  28AD- E6 15      GETCHR3 INC BUFFPN
1629  28AF- B5 24              LDA LINBUF,X
1630  28B1- 60                 RTS
1631                   *
1632  28B2- CA         GETCHR4 DEX
1633  28B3- D0 03              BNE GETCHR5     SKIP, IF NOT KEY
1634  28B5- 4C 00 E0           JMP GETKEY
1635                   *
1636  28B8- CA         GETCHR5 DEX
1637  28B9- A9 00              LDA =0
1638  28BB- 85 DA              STA FILFLG
1639  28BD- 20 18 F0           JSR READCH
1640  28C0- 4C 35 28           JMP TFER
1641                   *
1642  28C3- 60         GETCHR6 RTS
1643                   *
1644                   * PRTCHR0: PRINT CHAR TO SPECIFIED FILE
1645                   ***************************************
1646                   *
1647  28C4- A6 0D      PRTCHR0 LDX DEVICE
1648  28C6- 30 16              BMI PRTCHR3     Plot text?
1649  28C8- D0 03              BNE PRTCHR1
1650  28CA- 4C 09 E0           JMP PRTCHR

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 24/10/23   R65 ASSEMBLER  PAGE 35

1651                   *
1652  28CD- CA         PRTCHR1 DEX
1653  28CE- D0 03              BNE PRTCHR2
1654  28D0- 4C 0C E0           JMP AUTOPR
1655                   *
1656  28D3- CA         PRTCHR2 DEX
1657  28D4- A0 00              LDY =0
1658  28D6- 84 DA              STY FILFLG
1659  28D8- 20 1B F0           JSR WRITCH
1660  28DB- 4C 35 28           JMP TFER
1661                   *
1662  28DE- C9 0D      PRTCHR3 CMP =$0D        Plot CR?
1663  28E0- D0 06              BNE PRTCHR4
1664  28E2- A9 00              LDA =0
1665  28E4- 8D AE 03           STA GRX
1666  28E7- 60         PRTCHRE RTS
1667                   *
1668  28E8- C9 0A      PRTCHR4 CMP =$0A        PLOT LF?
1669  28EA- D0 0D              BNE PRTCHR6
1670  28EC- AD AF 03           LDA GRY
1671  28EF- E9 08              SBC =8
1672  28F1- 10 02              BPL PRTCHR5
1673  28F3- A9 00              LDA =0
1674                   *
1675  28F5- 8D AF 03   PRTCHR5 STA GRY
1676  28F8- 60                 RTS
1677                   *
1678  28F9- 8D B0 03   PRTCHR6 STA GRC
1679  28FC- 4C 18 C8           JMP APLOTCH     PLOT THE CHARACTER
1680                   *
1681                   * PERROR: PASCAL RUNTIME ERROR
1682                   ******************************
1683                   *
1684  28FF- 20 27 E0  PERROR  JSR PRTINF
1685  2902- 0D 0A 07           BYT $D,$A,7,'Pascal error '+128
1685  2905- 50 61 73 
1685  2908- 63 61 6C 
1685  290B- 20 65 72 
1685  290E- 72 6F 72 
1685  2911- A0 
1686  2912- A9 00              LDA =0
1687  2914- 85 0D              STA DEVICE
1688  2916- 8A                 TXA
1689  2917- 85 0C              STA RUNERR
1690  2919- 20 2D E0           JSR PRTBYT
1691  291C- A5 0A              LDA PC
1692  291E- 38                 SEC
1693  291F- E5 11              SBC STPROG
1694  2921- 85 00              STA ACCU
1695  2923- A5 0B              LDA PC+1

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 24/10/23   R65 ASSEMBLER  PAGE 36

1696  2925- E5 12              SBC STPROG+1
1697  2927- 85 01              STA ACCU+1
1698  2929- F0 0C              BEQ PERROR1
1699  292B- 30 0A              BMI PERROR1
1700  292D- 20 27 E0           JSR PRTINF
1701  2930- 20 61 74           BYT ' at '+128
1701  2933- A0 
1702  2934- 20 A9 23           JSR PRTN
1703                   *
1704  2937- 4C 10 20   PERROR1 JMP STOP
1705                   *
1706                   *
1707                   * WARM START ENTRY POINT
1708                   ************************
1709                   *
1710  293A- AD 81 17   WARMST  LDA SFLAG       SET PASCAL RUNTIME BIT
1711  293D- 09 01              ORA =$01        IN SFLAG
1712  293F- 8D 81 17           STA SFLAG
1713  2942- BA                 TSX
1714  2943- 8E FF 17           STX SAVS        SAVE STACK POINTER
1715  2946- A2 00              LDX =0
1716  2948- 86 0B              STX PC+1
1717  294A- 86 0D              STX DEVICE
1718  294C- CA                 DEX
1719  294D- 86 16              STX ENDBUF
1720  294F- 86 23              STX IOCHECK
1721  2951- A2 00              LDX =0
1722                   *
1723  2953- A0 00      EXEC    LDY =0
1724  2955- 84 0B              STY PC+1
1725  2957- BD 0E 2A           LDA EXTABLE,X
1726  295A- 9D 20 03           STA FILNM1,X
1727  295D- E8                 INX
1728  295E- C8                 INY
1729  295F- C0 10              CPY =16
1730  2961- 90 F2              BCC EXEC+2
1731  2963- A9 00              LDA =0
1732  2965- 8D 30 03           STA FILCY1
1733                   *
1734  2968- A9 00      EXECUTE LDA =0
1735  296A- 85 DA              STA FILFLG
1736  296C- AD 0B 20           LDA USEREND
1737  296F- AE 0C 20           LDX USEREND+1
1738  2972- 38                 SEC
1739  2973- E9 90              SBC =144
1740  2975- B0 01              BCS *+3
1741  2977- CA                 DEX
1742  2978- 85 0E              STA ENDSTK
1743  297A- 86 0F              STX ENDSTK+1
1744                   *

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 24/10/23   R65 ASSEMBLER  PAGE 37

1745  297C- AD 09 20   EXEC1   LDA USERST
1746  297F- AE 0A 20           LDX USERST+1
1747  2982- 85 11      EXEC3   STA STPROG
1748  2984- 86 12              STX STPROG+1
1749  2986- 8D 31 03           STA FILSA1
1750  2989- 8E 32 03           STX FILSA1+1
1751  298C- 20 15 E8           JSR RDFILE      READ FILE TO EXECUTE
1752  298F- F0 04              BEQ EXEC2
1753  2991- AA                 TAX             PASCAL RUNTIME ERROR
1754  2992- 4C FF 28           JMP PERROR
1755                   *
1756  2995- AD 12 03   EXEC2   LDA FILSTP
1757  2998- C9 52              CMP ='R'        MUST BE PASCAL
1758  299A- F0 05              BEQ RUN           RUNTIME CODE
1759  299C- A2 84              LDX =$84        PASCAL RUNTIME ERROR
1760  299E- 4C FF 28           JMP PERROR      WRONG FILEtYPE
1761                   *
1762  29A1- A0 00      RUN     LDY =0          READ END ADDRESS
1763  29A3- B1 11              LDA (STPROG),Y  FROM FILE
1764  29A5- 18                 CLC
1765  29A6- 65 11              ADC STPROG
1766  29A8- 85 13              STA EOPROG
1767  29AA- C8                 INY
1768  29AB- B1 11              LDA (STPROG),Y
1769  29AD- 65 12              ADC STPROG+1
1770  29AF- 85 14              STA EOPROG+1
1771  29B1- A5 13              LDA EOPROG      GET END OF STACK
1772  29B3- A6 14              LDX EOPROG+1
1773  29B5- 38                 SEC
1774  29B6- E9 80              SBC =128
1775  29B8- 85 17              STA BASE
1776  29BA- 85 08              STA SP
1777  29BC- B0 01              BCS *+3
1778  29BE- CA                 DEX
1779  29BF- 86 18              STX BASE+1
1780  29C1- 86 09              STX SP+1
1781                   *
1782  29C3- A5 11              LDA STPROG
1783  29C5- A6 12              LDX STPROG+1
1784  29C7- 18                 CLC
1785  29C8- 69 02              ADC =2
1786  29CA- 85 0A              STA PC
1787  29CC- 90 01              BCC *+3
1788  29CE- E8                 INX
1789  29CF- 86 0B              STX PC+1
1790  29D1- A9 00              LDA =0
1791  29D3- 85 0C              STA RUNERR
1792  29D5- AE FF 17   LOOP    LDX SAVS        RESTORE STACK POINTER
1793  29D8- 9A                 TXS
1794  29D9- 20 E4 29           JSR EXCODE

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 24/10/23   R65 ASSEMBLER  PAGE 38

1795  29DC- AD 81 17           LDA SFLAG
1796  29DF- 30 20              BMI ESCERR
1797  29E1- 4C D5 29           JMP LOOP
1798                   *
1799                   *
1800  29E4- 20 9C 24   EXCODE  JSR FETCH
1801  29E7- 89 F1              STA =$F1
1802  29E9- C9 54              CMP =$54        TEST CODENUMBER
1803  29EB- 90 05              BCC *+7
1804  29ED- A9 85      ILLC    LDA =$85        PASCAL RUNTIME ERROR
1805  29EF- 4C FF 28           JMP PERROR      ILLEGAL P-CODE
1806                   *
1807  29F2- 0A                 ASL A
1808  29F3- AA                 TAX
1809  29F4- BD 1E 2A           LDA TABLE,X
1810  29F7- 85 1B              STA ARG1
1811  29F9- BD 1F 2A           LDA TABLE+1,X
1812  29FC- 85 1C              STA ARG1+1
1813  29FE- 6C 1B 00          JMP (ARG1)
1814                   *
1815  2A01- AD 81 17   ESCERR  LDA SFLAG       CLEAR ESCAPE FLAG
1816  2A04- 29 7F              AND =$7F
1817  2A06- 8D 81 17           STA SFLAG
1818  2A09- A2 86              LDX =$86        PASCAL RUNTIME ERROR
1819  2A0B- 4C FF 28           JMP PERROR      ESCAPE DURING EXECUTION
1820                   *
1821  2A0E- 53 59 53   EXTABLE BYT 'SYSTEM:R        '
1821  2A11- 54 45 4D 
1821  2A14- 3A 52 20 
1821  2A17- 20 20 20 
1821  2A1A- 20 20 20 
1821  2A1D- 20 
1822                   *
1823  2A1E- 10 20 9E   TABLE   WRD STOP,RETN,NEGA,ADDA,SUBA,MULA
1823  2A21- 20 D1 20 
1823  2A24- DF 20 FB 
1823  2A27- 20 0E 21 
1824  2A2A- 73 21 E5           WRD DIVA,LOWB,TEQU,TNEQ,TLES,TGRE
1824  2A2D- 21 F0 21 
1824  2A30- 01 22 0B 
1824  2A33- 22 15 22 
1825  2A36- 1B 22 21           WRD TGRT,TLEE,ORAC,ANDA,EORA,NOTA
1825  2A39- 22 27 22 
1825  2A3C- 39 22 4B 
1825  2A3F- 22 5D 22 
1826  2A42- 6D 22 86           WRD LEFT,RIGH,INCA,DECA,COPY,PEEK
1826  2A45- 22 A3 22 
1826  2A48- AA 22 B3 
1826  2A4B- 22 EE 22 
1827  2A4E- F7 22 04           WRD POKE,CALA,RLIN,GETC,GETN,PRTC

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 24/10/23   R65 ASSEMBLER  PAGE 39

1827  2A51- 23 0D 23 
1827  2A54- 37 23 44 
1827  2A57- 23 A1 23 
1828  2A5A- A9 23 1C           WRD PRTN,PRTS,LITB,INCB,LITW,INCW
1828  2A5D- 24 52 24 
1828  2A60- 5F 24 8E 
1828  2A63- 24 A7 24 
1829  2A66- C4 24 D6           WRD JUMP,JMPZ,JMPO,LOAD,LODX,STOR
1829  2A69- 24 EB 24 
1829  2A6C- F4 24 42 
1829  2A6F- 25 5C 25 
1830  2A72- 7B 25 A1           WRD STOX,CALL,SDEV,RDEV,FNAM,OPNR
1830  2A75- 25 D7 25 
1830  2A78- DE 25 E3 
1830  2A7B- 25 00 26 
1831  2A7E- 11 26 16           WRD OPNW,CLOS,PRTI,GHGH,GLOW,PHGH
1831  2A81- 26 20 26 
1831  2A84- 2D 26 31 
1831  2A87- 26 36 26 
1832  2A8A- 3F 26 48           WRD PLOW,GSEC,PSEC,NBYT,NWRD,LODN
1832  2A8D- 26 51 26 
1832  2A90- 7C 26 8E 
1832  2A93- 26 A3 26 
1833  2A96- BC 26 D2           WRD STON,LODI,STOI,EXST,TIND,RUNP
1833  2A99- 26 E7 26 
1833  2A9C- F0 26 06 
1833  2A9F- 27 26 27 
1834  2AA2- 68 27 A6           WRD ADDF,SUBF,MULF,DIVF,FLOF,FIXF
1834  2AA5- 27 AF 27 
1834  2AA8- B8 27 C1 
1834  2AAB- 27 CE 27 
1835  2AAE- DB 27 05           WRD FEQU,FNEQ,FLES,FGRE,FGRT,FLEE
1835  2AB1- 28 0C 28 
1835  2AB4- 13 28 1A 
1835  2AB7- 28 23 28 
1836  2ABA- 2C 28 35           WRD FCOM,TFER,OPRA,GETR,PUTR,SWA2
1836  2ABD- 28 41 28 
1836  2AC0- 50 28 6C 
1836  2AC3- 28 7C 28 
1837                   *
1838                   * COLDSTART
1839                   ***********
1840                   *
1841  2AC6- 58         COLDST  CLI
1842  2AC7- D8                 CLD
1843  2AC8- AD 09 20           LDA USERST
1844  2ACB- AE 0A 20           LDX USERST+1
1845  2ACE- 85 11              STA STPROG
1846  2AD0- 86 12              STX STPROG+1
1847  2AD2- A0 00              LDY =0

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 24/10/23   R65 ASSEMBLER  PAGE 40

1848  2AD4- 98                 TYA
1849  2AD5- 91 11              STA (STPROG),Y
1850  2AD7- C8                 INY
1851  2AD8- C0 04              CPY =4
1852  2ADA- 90 F9              BCC *-5
1853  2ADC- 4C 3A 29           JMP WARMST
1854                   *
1855                           TIT R65 PASCAL: FLP-MATH
1856                           PAG

----------------------------------------------------------------------

R65 PASCAL: FLP-MATH               24/10/23   R65 ASSEMBLER  PAGE 41

1857                   *
1858                   ********************************
1859                   * R65 PASCAL FLP MATH ROUTINES *
1860                   ********************************
1861                   *
1862                   *
1863  2ADF- 18         ADD     CLC
1864  2AE0- A2 02              LDX =2
1865  2AE2- B5 01      ADD1    LDA M1,X
1866  2AE4- 75 1C              ADC M2,X
1867  2AE6- 95 01              STA M1,X
1868  2AE8- CA                 DEX
1869  2AE9- 10 F7              BPL ADD1
1870  2AEB- 60                 RTS
1871                   *
1872  2AEC- 06 10      MD1     ASL SIGN
1873  2AEE- 20 F1 2A           JSR ABSWAP
1874  2AF1- 24 01      ABSWAP  BIT M1
1875  2AF3- 10 05              BPL ABSWP1
1876  2AF5- 20 6E 2B           JSR FCOMPL
1877  2AF8- E6 10              INC SIGN
1878  2AFA- 38         ABSWP1  SEC
1879                   *
1880                   * SWAP: EXCHANGE F1 AND F2
1881                   **************************
1882                   *
1883  2AFB- A2 04      SWAP    LDX =4
1884  2AFD- 94 03      SWAP1   STY E-1,X
1885  2AFF- B5 FF             LDA <(X1-1),X
1886  2B01- B4 1A              LDY X2-1,X
1887  2B03- 94 FF              STY <(X1-1),X
1888  2B05- 95 1A              STA X2-1,X
1889  2B07- CA                 DEX
1890  2B08- D0 F3              BNE SWAP1
1891  2B0A- 60                 RTS
1892                   *
1893                   * FLOAT: FLOAT M1,M1+1 TO RESULT IN F1
1894                   **************************************
1895                   *
1896  2B0B- A9 8E      FLOAT   LDA =$8E
1897  2B0D- 85 00              STA X1
1898  2B0F- A9 00              LDA =0
1899  2B11- 85 03              STA M1+2
1900  2B13- F0 08              BEQ NORM
1901  2B15- C6 00      NORM1   DEC X1
1902  2B17- 06 03              ASL M1+2
1903  2B19- 26 02              ROL M1+1
1904  2B1B- 26 01              ROL M1
1905  2B1D- A5 01      NORM    LDA M1
1906  2B1F- 0A                 ASL A

----------------------------------------------------------------------

R65 PASCAL: FLP-MATH               24/10/23   R65 ASSEMBLER  PAGE 42

1907  2B20- 45 01              EOR M1
1908  2B22- 30 04              BMI RTS1
1909  2B24- A5 00              LDA X1
1910  2B26- D0 ED              BNE NORM1
1911  2B28- 60         RTS1    RTS
1912                   *
1913                   * FSUB: F1=F2-F1
1914                   ****************
1915                   *
1916  2B29- 20 6E 2B   FSUB    JSR FCOMPL
1917  2B2C- 20 3C 2B   SWPALG  JSR ALGNSW
1918                   *
1919                   * FADD: F1=F2+F1
1920                   ****************
1921                   *
1922  2B2F- A5 1B      FADD    LDA X2
1923  2B31- C5 00              CMP X1
1924  2B33- D0 F7              BNE SWPALG
1925  2B35- 20 DF 2A           JSR ADD
1926  2B38- 50 E3      ADDEND  BVC NORM
1927  2B3A- 70 05              BVS RTLOG
1928  2B3C- 90 BD      ALGNSW  BCC SWAP
1929  2B3E- A5 01      RTAR    LDA M1
1930  2B40- 0A                 ASL A
1931  2B41- E6 00      RTLOG   INC X1
1932  2B43- F0 7E              BEQ OVFL
1933  2B45- A2 FA      RTLOG1  LDX =$FA
1934  2B47- A9 80      ROR1    LDA =$80
1935  2B49- B0 01              BCS ROR2
1936  2B4B- 0A                 ASL A
1937  2B4C- 56 07      ROR2    LSR E+3,X
1938  2B4E- 15 07              ORA E+3,X
1939  2B50- 95 07              STA E+3,X
1940  2B52- E8                 INX
1941  2B53- D0 F2              BNE ROR1
1942  2B55- 60                 RTS
1943                   *
1944                   * FMUL: F1=F2*F1
1945                   ****************
1946                   *
1947  2B56- 20 EC 2A   FMUL    JSR MD1
1948  2B59- 65 00              ADC X1
1949  2B5B- 20 AC 2B           JSR MD2
1950  2B5E- 18                 CLC
1951  2B5F- 20 45 2B   MUL1    JSR RTLOG1
1952  2B62- 90 03              BCC MUL2
1953  2B64- 20 DF 2A           JSR ADD
1954  2B67- 88         MUL2    DEY
1955  2B68- 10 F5              BPL MUL1
1956  2B6A- 46 10      MDEND   LSR SIGN

----------------------------------------------------------------------

R65 PASCAL: FLP-MATH               24/10/23   R65 ASSEMBLER  PAGE 43

1957  2B6C- 90 AF      NORMX   BCC NORM
1958  2B6E- 38         FCOMPL  SEC
1959  2B6F- A2 03              LDX =3
1960  2B71- A9 00      COMPL1  LDA =0
1961  2B73- F5 00              SBC X1,X
1962  2B75- 95 00              STA X1,X
1963  2B77- CA                 DEX
1964  2B78- D0 F7              BNE COMPL1
1965  2B7A- F0 BC              BEQ ADDEND
1966                   *
1967                   * FDIV: F1=F2/F1
1968                   ****************
1969                   *
1970  2B7C- 20 EC 2A   FDIV    JSR MD1
1971  2B7F- E5 00              SBC X1
1972  2B81- 20 AC 2B           JSR MD2
1973  2B84- 38         FDIV1   SEC
1974  2B85- A2 02              LDX =2
1975  2B87- B5 1C      FDIV2   LDA M2,X
1976  2B89- F5 04              SBC E,X
1977  2B8B- 48                 PHA
1978  2B8C- CA                 DEX
1979  2B8D- 10 F8              BPL FDIV2
1980  2B8F- A2 FD              LDX =$FD
1981  2B91- 68         FDIV3   PLA
1982  2B92- 90 02              BCC FDIV4
1983  2B94- 95 1F              STA M2+3,X
1984  2B96- E8         FDIV4   INX
1985  2B97- D0 F8              BNE FDIV3
1986  2B99- 26 03              ROL M1+2
1987  2B9B- 26 02              ROL M1+1
1988  2B9D- 26 01              ROL M1
1989  2B9F- 06 1E              ASL M2+2
1990  2BA1- 26 1D              ROL M2+1
1991  2BA3- 26 1C              ROL M2
1992  2BA5- B0 1C              BCS OVFL
1993  2BA7- 88                 DEY
1994  2BA8- D0 DA              BNE FDIV1
1995  2BAA- F0 BE              BEQ MDEND
1996  2BAC- 86 03      MD2     STX M1+2
1997  2BAE- 86 02              STX M1+1
1998  2BB0- 86 01              STX M1
1999  2BB2- B0 0D              BCS OVCHK
2000  2BB4- 30 04              BMI MD3
2001  2BB6- 68                 PLA
2002  2BB7- 68                 PLA
2003  2BB8- 90 B2              BCC NORMX
2004  2BBA- 49 80      MD3     EOR =$80
2005  2BBC- 85 00              STA X1
2006  2BBE- A0 17              LDY =$17

----------------------------------------------------------------------

R65 PASCAL: FLP-MATH               24/10/23   R65 ASSEMBLER  PAGE 44

2007  2BC0- 60                 RTS
2008  2BC1- 10 F7      OVCHK   BPL MD3
2009  2BC3- 4C AA 21   OVFL    JMP DIV1-5      PASCAL RUNTIME ERROR
2010                   *
2011                   * FIX: FIX F1 IN M1, M1+1
2012                   *************************
2013                   *
2014  2BC6- 20 3E 2B           JSR RTAR
2015  2BC9- A5 00      FIX     LDA X1
2016  2BCB- C9 8E              CMP =$8E
2017  2BCD- D0 F7              BNE FIX-3
2018  2BCF- 60         RTRN    RTS
2019                   *
2020                           TIT R65 PASCAL: RANDOM ACCESS
2021                           PAG

----------------------------------------------------------------------

R65 PASCAL: RANDOM ACCESS          24/10/23   R65 ASSEMBLER  PAGE 45

2022                   *
2023                   * RANDOM ACCESS FILE HANDLER
2024                   ****************************
2025                   *
2026                   *
2027                   * OPENRA: OPEN A FILE FOR RANDOM ACCESS
2028                   ***************************************
2029                   *
2030                   * ENTRY: FILNM1,FILCY1,FILDRV,FILFLG
2031                   * FILFLG: BIT 7: PROTECTED (NEW ONLY)*
2032                   *         BIT 6: NO PRINTED OUTPUT
2033                   *         BIT 5: DIRECTION (0=READ)
2034                   *         BIT 4: 1=NEW, 0=OLD
2035                   *
2036                   * NEW ONLY: MAXSIZ,FILSA
2037                   *
2038                   * EXIT: NO OF OPEN FILE IN Y, STATUS IN A
2039                   *       AND FILERR, Y IS ONLY VALID
2040                   *       IF A=0
2041                   *
2042                   *
2043  2BD0- AC 36 03   OPENRA  LDY MAXSEQ      SEARCH EMPTY ENTRY
2044  2BD3- B9 39 03           LDA FIDRTB,Y    BIT 5=1: ENTRY USED
2045  2BD6- 29 20              AND =$20
2046  2BD8- F0 08              BEQ OPENRA1     FOUND, SKIP
2047  2BDA- 88                 DEY
2048  2BDB- 10 F6              BPL OPENRA+3
2049                   *
2050  2BDD- A9 23              LDA =$23        TOO MANY OPEN FILES
2051  2BDF- 85 DB              STA FILERR
2052  2BE1- 60                 RTS
2053                   *
2054  2BE2- 8C 35 03   OPENRA1 STY CURSEQ      SAVE CURRENT ENTRY NO
2055  2BE5- A5 DC              LDA FILDRV      GET AND TEST DRIVE
2056  2BE7- 99 41 03           STA FIDVTB,Y
2057  2BEA- 29 FE              AND =$FE
2058  2BEC- F0 05              BEQ OPENRA2     SKIP, IF OK
2059                   *
2060  2BEE- A9 28              LDA =$28        ILLEGAL DRIVE FOR RA
2061  2BF0- 85 DB              STA FILERR
2062  2BF2- 60                 RTS
2063                   *
2064  2BF3- A9 10      OPENRA2 LDA =$10        TEST OLD/NEW FLAG
2065  2BF5- 25 DA              AND FILFLG
2066  2BF7- F0 78              BEQ OPENOLD     SKIP, IF OLD
2067                   *
2068                   * OPEN A NEW FILE
2069                   *
2070  2BF9- A5 DA      OPENNEW LDA FILFLG
2071  2BFB- 29 80              AND =$80        GET PROTECTED FLAG

----------------------------------------------------------------------

R65 PASCAL: RANDOM ACCESS          24/10/23   R65 ASSEMBLER  PAGE 46

2072  2BFD- 09 42              ORA ='B'        BLOCK FILE
2073  2BFF- 8D 00 03          STA FILTYP      SET FILE TYPE
2074                   *
2075  2C02- A9 00              LDA =0
2076  2C04- AE 37 03           LDX MAXSIZ      SIZE OF FILE
2077  2C07- 8D 15 03           STA FILSIZ
2078  2C0A- 8E 16 03           STX FILSIZ+1
2079                   *
2080  2C0D- CA                 DEX             COMPUTE FILEA
2081  2C0E- AD 1A 03           LDA FILSA
2082  2C11- 18                 CLC
2083  2C12- 69 FF              ADC =$FF
2084  2C14- 8D 1C 03           STA FILEA
2085  2C17- 8A                 TXA
2086  2C18- 6D 1B 03           ADC FILSA+1
2087  2C1B- 8D 1D 03           STA FILEA+1
2088                   *
2089  2C1E- 20 1E E8           JSR SETFID      SET FILEDATE
2090                   *
2091  2C21- A2 10              LDX =16
2092  2C23- BD 20 03   OPENNE1 LDA FILNM1,X    SET FILNM1 AND FILCY1
2093  2C26- 9D 01 03           STA FILNAM,X    TO FILNAM AND FILCYC
2094  2C29- CA                 DEX
2095  2C2A- 10 F7              BPL OPENNE1
2096                   *
2097                   * SEARCH IN DIRECTORY AND RETURN CYCLUS
2098                   * AND DIRECTORY ENTRY TO USE, TEST EXISTING
2099                   * FILES FOR SAME NAME AND CYCLUS, DISK
2100                   * OPERATION IS INITIALIZED
2101                   *
2102  2C2C- 20 98 20           JSR PREPWRA
2103  2C2F- 8E 11 03           STX FILCYC
2104                   *
2105                   * FIND FIRST EMPTY DISK DIRECTORY ENTR
2106                   * FETCH ITAND SET FIRST SECTOR OF FILE TO
2107                   * FILLOC, OUTPUT Y,X AS NUMBER OF EMPTY
2108                   * SECTORS
2109                   *
2110  2C32- 20 9B 20           JSR PREPWRB
2111  2C35- 8A                 TXA
2112  2C36- CD 16 03           CMP FILSIZ+1
2113  2C39- 98                 TYA
2114  2C3A- E9 00              SBC =0          COMPARE WITH REQUESTED
2115  2C3C- B0 05              BCS OPENNE3     SECTORS
2116                   *
2117  2C3E- A9 26              LDA =$26        DISK OVERFLOW
2118  2C40- 4C 8F 20           JMP DISCER1
2119                   *
2120                   * SET FITEMP,Y AND FITEMP+8,YNTO FIRST SECTOT
2121                   * OF FILE ON DISK, FIMAXT,Y TO SIZE, DIRECTORY

----------------------------------------------------------------------

R65 PASCAL: RANDOM ACCESS          24/10/23   R65 ASSEMBLER  PAGE 47

2122                   * ENTRY NO TO FITEMP+16,Y
2123                   * THEN PUT THIS ENTRY ONTO THE DISKMAND SET
2124                   * A NEW END OF DIRECTORY MARK
2125                   *
2126  2C43- 20 74 20   OPENNE3 JSR DOPEN4
2127                   *
2128  2C46- AC 35 03           LDY CURSEQ      SETUP DUMMY FIRST SECTOR
2129  2C49- A9 00              LDA =0
2130  2C4B- 99 49 03           STA FIBPTB,Y
2131  2C4E- 99 51 03           STA FIRCTB,Y
2132                   *
2133  2C51- AC 35 03   OPENNE4 LDY CURSEQ      OPEN FILE
2134  2C54- A5 DA              LDA FILFLG
2135  2C56- 0A                 ASL A
2136  2C57- 0A                 ASL A
2137  2C58- 29 80              AND =$80        GET DIRECTION
2138  2C5A- 48                 PHA
2139  2C5B- 2D 00 03           AND FILTYP
2140  2C5E- F0 06              BEQ OPENNE5     OK, SKIP
2141  2C60- 68                 PLA             PROTECTED FILE
2142                   *
2143  2C61- A9 29              LDA =$29
2144  2C63- 85 DB              STA FILERR
2145  2C65- 60                 RTS
2146                   *
2147  2C66- 68         OPENNE5 PLA
2148  2C67- 09 60              ORA =$60        RA FILE, OPENIT
2149  2C69- 99 39 03           STA FIDRTB,Y
2150                   *
2151  2C6C- A9 00              LDA =0          NORMALEXIT
2152  2C6E- 85 DB              STA FILERR
2153  2C70- 60         OPENNE6 RTS
2154                   *
2155                   * OPEN AN OLD FILE:
2156                   * PREPARE DISK OPERATION, SEARCH REQUESTED
2157                   * FILE AND GET CORRSPONDING DISK ENTRY
2158                   *
2159  2C71- 20 95 20   OPENOLD JSR PREPRD
2160                   *
2161  2C74- 20 77 20           JSR PRFLB1      PRINT LABEL, IF REQ.
2162  2C77- AD 00 03           LDA FILTYP
2163  2C7A- 29 7F              AND =$7F
2164  2C7C- C9 42              CMP ='B'        MUST BE BLOCK FILE
2165  2C7E- F0 05              BEQ OPENOL1     SKIP, IF OK
2166                   *
2167  2C80- A9 05              LDA =5
2168  2C82- 4C 8F 20           JMP DISCER1     FILE TYPE ERROR
2169                   *
2170  2C85- 20 92 20   OPENOL1 JSR ENDDO       END OF DISK OPERATION
2171                   *

----------------------------------------------------------------------

R65 PASCAL: RANDOM ACCESS          24/10/23   R65 ASSEMBLER  PAGE 48

2172                   * SET NOW FIRST SECTOR AND SIZE TO TABLE
2173                   *
2174  2C88- 20 71 20           JSR DOPEN1
2175                   *
2176  2C8B- A9 00              LDA =0          GET FIRST RECORD
2177  2C8D- 20 94 2C           JSR GETTREC
2178  2C90- D0 DE              BNE OPENNE6     SKIP, IF NOT OK
2179  2C92- F0 BD              BEQ OPENNE4     ELSE OPEN FILE
2180                   *
2181                   *
2182                   * GETTREC: GET ONE RECORD FROM RA-FILE
2183                   * RECORD NUMBER IS IN A, FILE NUMBER IN CURSEQ
2184                   * RESULT IUS Z=1,OF OK, ELSE Z=0 AND FILERR
2185                   *
2186  2C94- AE 35 03   GETTREC LDX CURSEQ      SAVE RECORD NO
2187  2C97- 9D 51 03           STA FIRCTB,X
2188  2C9A- A9 00              LDA =0          CLEAR UPDATED FLAG
2189  2C9C- 9D 49 03           STA FIBPTB,X
2190  2C9F- BD 41 03           LDA FIDVTB,X    SET DRIVE NO
2191  2CA2- 85 DC              STA FILDRV
2192                   *
2193                   * COMPUTE DATA-POINTER AND BINARY
2194                   * TRACK,SECTOR, SETUP FILDRV
2195                   *
2196  2CA4- 20 7D 20           JSR PREPSR
2197                   *
2198                   * ADD RECORD NUMBER TO BINARY TRAC/SECTOR
2199                   * TEST SIZE OF FILE, CONVERT TO TRACK AND
2200                   * SECTOR, INITIALIZE DISK OPERATION
2201                   *
2202  2CA7- 20 80 20           JSR PREPSR1
2203                   *
2204  2CAA- 20 86 20           JSR READ        READ ON SECTOR
2205                   *
2206  2CAD- 4C 92 20           JMP ENDDO       END OF DISK OPERATION
2207                   *
2208                   * PUTTREC: SAVE CURRENT RECORD ON DISK
2209                   * FILE NUMBER IN CURSEQ, RECORD NUMBER IN
2210                   * FIRCTB,Y, RETURNS Z=1 IF OK, ELSE FILERR
2211                   *
2212  2CB0- BD 41 03   PUTTREC LDA FIDVTB,X
2213  2CB3- 85 DC              STA FILDRV
2214  2CB5- 20 7D 20           JSR PREPSR      SEE GETTREC FOR
2215  2CB8- 20 80 20           JSR PREPSR1     COMMENTS
2216  2CBB- 20 89 20           JSR WRITE
2217  2CBE- 4C 92 20           JMP ENDDO
2218                   *
2219                   * GETNEWR: GET A NEW RECORD, SAVE OLD, IF
2220                   * OLD HAS BEEN UPDATED
2221                   * ENTRY: NEW RECORD IN A, FILE NO IN CURSEQ

----------------------------------------------------------------------

R65 PASCAL: RANDOM ACCESS          24/10/23   R65 ASSEMBLER  PAGE 49

2222                   * EXIT: z=1 IF OK, ELSE FILERR
2223                   *
2224  2CC1- 8D 34 03   GETNEWR STA SAVRST+1    SAVE REQUESTED RECORD
2225  2CC4- AE 35 03           LDX CURSEQ
2226  2CC7- BD 49 03           LDA FIBPTB,X    UPDATED?
2227  2CCA- 10 05              BPL GETNEW1
2228                   *
2229  2CCC- 20 B0 2C           JSR PUTTREC     YES, SAVE IT
2230  2CCF- D0 23              BNE EXIT
2231                   *
2232  2CD1- AD 34 03   GETNEW1 LDA SAVRST+1    GET REQUESTED RECORD
2233  2CD4- 4C 94 2C           JMP GETTREC
2234                   *
2235                   * GETBYTE: GET ONE BYTE FROM FILE
2236                   *********************************
2237                   * ENTRY: FILE NUMBER IN X
2238                   *        POINTER IN A(LOW) AND Y(HIGH)
2239                   * EXIT:  FILERR IN Y AND STATUS, BYTE IN A
2240                   *
2241  2CD7- 8D 33 03   GETBYTE STA SAVRST      SAVE A
2242  2CDA- 20 24 2D           JSR TESTRA
2243                   *
2244  2CDD- 98                 TYA
2245  2CDE- DD 51 03           CMP FIRCTB,X    IS IT IN CURRENT RECORD?
2246  2CE1- F0 05              BEQ GETBYT1     YES, SKIP
2247                   *
2248  2CE3- 20 C1 2C           JSR GETNEWR     NO, GET NEW RECORD
2249  2CE6- D0 0C              BNE EXIT
2250                   *
2251  2CE8- 20 7A 20   GETBYT1 JSR CPOINT      COMPUTE BUFFER PNT
2252  2CEB- AC 33 03           LDY SAVRST      RESTORE LOW POINTER
2253  2CEE- B1 FA              LDA (POINT),Y   GET THE BYTE
2254  2CF0- A0 00              LDY =0
2255  2CF2- 84 DB              STY FILERR      OK
2256  2CF4- 60         EXIT    RTS
2257                   *
2258                   * PUTBYTE: PUT ONE BYTE TO FILE
2259                   *******************************
2260                   *
2261                   * ENTRY: BYTE STORED IN KCHAR
2262                   *        FILE NUMBER IN X
2263                   *        POINTER IN A(LOW) AND Y(HIGH)
2264                   * EXIT:  FILERR IN Y AND STATUS
2265                   *
2266  2CF5- 8D 33 03   PUTBYTE STA SAVRST
2267  2CF8- 20 24 2D           JSR TESTRA
2268  2CFB- BD 39 03           LDA FIDRTB,X    IS WRITE ALLOWED?
2269  2CFE- 30 05             BMI PUTBYT0     YES,SKIP
2270  2D00- A0 29              LDY =$29        WRITE NOT ALLOWED
2271  2D02- 84 DB              STY FILERR

----------------------------------------------------------------------

R65 PASCAL: RANDOM ACCESS          24/10/23   R65 ASSEMBLER  PAGE 50

2272  2D04- 60                 RTS
2273                   *
2274  2D05- 98         PUTBYT0 TYA             FOR COMMENTS
2275  2D06- DD 51 03           CMP FIRCTB,X    SEE GETBYTE
2276  2D09- F0 05              BEQ PUTBYT1
2277                   *
2278  2D0B- 20 C1 2C           JSR GETNEWR
2279  2D0E- D0 E4              BNE EXIT
2280                   *
2281  2D10- 20 7A 20   PUTBYT1 JSR CPOINT
2282  2D13- A9 80              LDA =$80        SET UPDATED FLAG
2283  2D15- 9D 49 03           STA FIBPTB,X
2284  2D18- AC 33 03           LDY SAVRST
2285  2D1B- A5 FE              LDA KCHAR       GET BACK KCHAR
2286  2D1D- 91 FA              STA (POINT),Y
2287  2D1F- A0 00              LDY =0
2288  2D21- 84 DB              STY FILERR
2289  2D23- 60                 RTS
2290                   *
2291                   *
2292                   * TESTRA: TEST X FOR LEGAL RA-FILE
2293                   *
2294  2D24- 8E 35 03   TESTRA  STX CURSEQ
2295  2D27- EC 36 03           CPX MAXSEQ
2296  2D2A- B0 0A              BCS TESTRA2
2297                   *
2298  2D2C- BD 39 03   TESTRA1 LDA FIDRTB,X
2299  2D2F- 29 60              AND =$60
2300  2D31- C9 60              CMP =$60
2301  2D33- D0 03              BNE TESTRA3     SKIP, IF NOT OK
2302  2D35- 60                 RTS
2303                   *
2304  2D36- F0 F4      TESTRA2 BEQ TESTRA1
2305  2D38- 68         TESTRA3 PLA
2306  2D39- 68                 PLA
2307  2D3A- A0 25              LDY =$25        FILE NUMBER NOT ALLOWED
2308  2D3C- 84 DB              STY FILERR
2309  2D3E- 60                 RTS
2310                   *
2311                   * CLOSRA: CLOSE RA OR SEQUENTIAL FILE IN X
2312                   ******************************************
2313                   * ENTRY: FILE IN X
2314                   * EXIT: FILERR IN Y AND STATUS
2315                   *
2316  2D3F- BD 39 03   CLOSRA  LDA FIDRTB,X
2317  2D42- 29 40              AND =$40        SEQUENTIAL FILE?
2318  2D44- D0 03              BNE CLOSRA1     NO, SKIP
2319  2D46- 4C 83 20           JMP CLOSE       YES, CLOSE IT
2320                   *
2321  2D49- 20 24 2D   CLOSRA1 JSR TESTRA      MUST BE RA-FILE

----------------------------------------------------------------------

R65 PASCAL: RANDOM ACCESS          24/10/23   R65 ASSEMBLER  PAGE 51

2322  2D4C- BD 49 03           LDA FIBPTB,X    UPDATED?
2323  2D4F- F0 05              BEQ CLOSRA2     NO, SKIP
2324                   *
2325  2D51- 20 B0 2C           JSR PUTTREC
2326  2D54- D0 0B              BNE CLOSRA3
2327                   *
2328  2D56- AE 35 03   CLOSRA2 LDX CURSEQ
2329  2D59- A9 00              LDA =0
2330  2D5B- 9D 39 03           STA FIDRTB,X    CLOSE IT
2331  2D5E- A8                 TAY
2332  2D5F- 84 DB              STY FILERR
2333  2D61- 60         CLOSRA3 RTS
2334                   *
2335                   ENDCODE EQU *
2336                   *
2337                           TIT R65 PASCAL: LABELS
2338                   *
2339  2D62-                    END
LABELS=0157
ERRORS=00
RECORDS=73
