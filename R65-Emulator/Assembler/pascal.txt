----------------------------------------------------------------------

R65 PASCAL: LABELS                 09/03/18   R65 ASSEMBLER  PAGE 01

0001                   *
0002                   *       **********************
0003                   *       * R65 PASCAL RUNTIME *
0004                   *       **********************
0005                   *
0006                   * VERSION 5.3 01/06/82 RRICHARZ,RBAUMANN
0007                   *
0008                           TIT R65 PASCAL RUNTIME
0009                   *
0010                   * INCLUDES RANDOM ACCESS FILE HANDLING,
0011                   * FLOATING POINT MATH, FILE HANDLING ERROR
0012                   * TESTING (OPTIONAL)
0013                   *
0014                           ORG 0
0015                   *
0016  0000-            ACCU    BSS 4   TOP OF STACKELEMENT
0017                   X1      EQU ACCU        FLP ACCU
0018                   M1      EQU ACCU+1
0019  0004-            E       BSS 4   FLP SCRATCH REGISTER
0020  0008-            SP      BSS 2   CURRENT STACK (-128)
0021  000A-            PC      BSS 2   PROGRAM COUNTER
0022  000C-            RUNERR  BSS 1   RUNTIME ERROR CODE
0023  000D-            DEVICE  BSS 1   I/O DEVICE CODE
0024  000E-            ENDSTK  BSS 2   END OF STACK (-128)
0025  0010-            SIGN    BSS 1   TEMPORARY SIGN
0026  0011-            STPROG  BSS 2   START OF USER PROGRAM
0027  0013-            EOPROG  BSS 2   END OF USER PRORMA
0028  0015-            BUFFPN  BSS 1   INPUT BUFFER POINTER
0029  0016-            ENDBUF  BSS 1   END OF INPUT BUFFER
0030  0017-            BASE    BSS 2   CURRENT BASE (-128)
0031  0019-            ABASE   BSS 2   ALTERNATE BASE (-128)
0032  001B-            ARG1    BSS 2   TEMPORARY ARGUMENT
0033  001D-            ARG3    BSS 4   TEMPORARY REGISTERS
0034  0021-            ARG2    BSS 2
0035                   X2      EQU ARG1        FLP REGISTER
0036                   M2      EQU ARG1+1
0037  0023-            IOCHECK BSS 1   IO ERROR CHECKING FLAG
0038  0024-            LINBUF  BSS 56  INPUT LINE BUFFER
0039                   *
0040                   FILFLG  EQU $DA
0041                   FILERR  EQU $DB
0042                   FILDRV  EQU $DC
0043                   TRACK   EQU $DD
0044                   SECTOR  EQU $DE
0045                   DATA    EQU $E0
0046                   VIDPNT  EQU $E9
0047                   POINT   EQU $FA
0048                   KCHAR   EQU $FE
0049                   *
0050                   EMUCOM  EQU $1430       EMULATOR COMMAND REG

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 09/03/18   R65 ASSEMBLER  PAGE 02

0051                   MULTA   EQU $14E0
0052                   MULTB   EQU $14E1
0053                   MULTR   EQU $14E2
0054                   *
0055                   FILTYP  EQU $0300
0056                   FILNAM  EQU $0301
0057                   FILCYC  EQU $0311
0058                   FILSTP  EQU $0312
0059                   FILLOC  EQU $0313
0060                   FILSIZ  EQU $0315
0061                   FILSA   EQU $031A
0062                   FILEA   EQU $031C
0063                   FILNM1  EQU $0320
0064                   FILCY1  EQU $0330
0065                   FILSA1  EQU $0331
0066                   SAVRST  EQU $0333
0067                   CURSEQ  EQU $0335
0068                   MAXSEQ  EQU $0336
0069                   MAXSIZ  EQU $0337
0070                   FIDRTB  EQU $0339
0071                   FIDVTB  EQU $0341
0072                   FIBPTB  EQU $0349
0073                   FIRCTB  EQU $0351
0074                   SFLAG   EQU $1781
0075                   NUMCHR  EQU $178A
0076                   VMON    EQU $17D5
0077                   *
0078                   GETKEY  EQU $E000
0079                   AUTOPR  EQU $E00C
0080                   ENDLIN  EQU $E024
0081                   PRTINF  EQU $E027
0082                   GETCHR  EQU $E003
0083                   GETLIN  EQU $E006
0084                   PRTCHR  EQU $E009
0085                   PRTBYT  EQU $E02D
0086                   PRTAX   EQU $E030
0087                   PRTRSA  EQU $E836
0088                   RDFILE  EQU $E815
0089                   SETFID  EQU $E81E
0090                   OPEN    EQU $F00F
0091                   READCH  EQU $F018
0092                   WRITCH  EQU $F01B
0093                   GETNAM  EQU $F815
0094                   *
0095  005C-                    ORG $2000
0096                   *
0097                           PAG

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 09/03/18   R65 ASSEMBLER  PAGE 03

0098                   *
0099                   * ENTRY VECTORS
0100                   *
0101  2000- 4C 9C 2A           JMP COLDST      COLD START ENTRY VECTOR
0102  2003- 4C 13 29           JMP WARMST      WARM START ENTRY VECTOR
0103  2006- 4C D8 28           JMP PERROR      PASCAL ERROR
0104                   *
0105  2009- 58 2D      USERST  WRD ENDCODE+32
0106  200B- FF C7      USEREND WRD $C7FF
0107                   *
0108  200D- 4C F2 FC   HARGUM  JMP $FCF2       #######
0109                   *
0110                   *
0111                   * P-CODE 00:  STOP      (END OF EXECUTION)
0112                   ******************
0113                   * NO ARGUMENTS
0114                   *
0115  2010- A5 11      STOP    LDA STPROG      IS ANOTHER PROGRAM
0116  2012- A6 12              LDX STPROG+1    RUNNING?
0117  2014- CD 09 20           CMP USERST
0118  2017- D0 22              BNE STOP1
0119  2019- EC 0A 20           CPX USERST+1
0120  201C- D0 1D              BNE STOP1
0121                   *
0122  201E- 20 27 E0           JSR PRTINF      NO, STOP PASCAL
0123  2021- 0D 0A 51           BYT $D,$A,'Quit Pascal',$D,$8A
0123  2024- 75 69 74 
0123  2027- 20 50 61 
0123  202A- 73 63 61 
0123  202D- 6C 0D 8A 
0124  2030- AD 81 17           LDA SFLAG
0125  2033- 29 FE              AND =$FE        CLEAR PASCAL RUNTIME BIT
0126  2035- 8D 81 17           STA SFLAG       IN SFLAG
0127  2038- 6C D5 17           JMP (VMON)
0128                   *
0129  203B- 38         STOP1   SEC             YES, COMPUTE OLD SP
0130  203C- E9 8C              SBC =140
0131  203E- B0 01              BCS *+3
0132  2040- CA                 DEX
0133  2041- 85 08              STA SP
0134  2043- 86 09              STX SP+1
0135  2045- A0 8C              LDY =140
0136  2047- 20 65 27           JSR GETBACK
0137  204A- 85 13              STA EOPROG
0138  204C- 86 14              STX EOPROG+1
0139  204E- 20 65 27           JSR GETBACK
0140  2051- 85 11              STA STPROG
0141  2053- 86 12              STX STPROG+1
0142  2055- 20 65 27           JSR GETBACK
0143  2058- 85 0A              STA PC

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 09/03/18   R65 ASSEMBLER  PAGE 04

0144  205A- 86 0B              STX PC+1
0145  205C- 20 65 27           JSR GETBACK
0146  205F- 85 17              STA BASE
0147  2061- 86 18              STX BASE+1
0148  2063- 20 65 27           JSR GETBACK
0149  2066- 85 00              STA ACCU
0150  2068- 86 01              STX ACCU+1
0151  206A- 4C AF 29           JMP LOOP
0152                   *
0153                   *
0154  206D- 4C FF F0   DOPEN1  JMP $F0FF
0155  2070- 4C 45 F1   DOPEN4  JMP $F145
0156  2073- 4C 51 F1   PRFLB1  JMP $F151
0157  2076- 4C 59 F1   CPOINT  JMP $F159
0158  2079- 4C E0 F1   PREPSR  JMP $F1E0
0159  207C- 4C 9E F2   PREPSR1 JMP $F29E
0160  207F- 4C BF F2   CLOSE   JMP $F2BF
0161  2082- 4C 57 F4   READ    JMP $F457
0162  2085- 4C 25 F4   WRITE   JMP $F425
0163  2088- 4C A7 F4   PREPDO  JMP $F4A7
0164  208B- 4C FD F5   DISCER1 JMP $F5FD
0165  208E- 4C 25 F6   ENDDO   JMP $F625
0166  2091- 4C 2C F6   PREPRD  JMP $F62C
0167  2094- 4C 51 F6   PREPWRA JMP $F651
0168  2097- 4C 6D F6   PREPWRB JMP $F66D
0169                   *
0170                   *
0171                   * P-CODE 01: RETN       (RETURN FROM PROCEDURE
0172                   *****************
0173                   * NO ARGUMENTS
0174                   *
0175  209A- A5 17      RETN    LDA BASE        SP=BASE-2
0176  209C- 38                 SEC
0177  209D- E9 02              SBC =2
0178  209F- 85 08              STA SP
0179  20A1- A5 18              LDA BASE+1
0180  20A3- E9 00              SBC =0
0181  20A5- 85 09              STA SP+1
0182  20A7- A0 80              LDY =128        GET STACK TOP ELEMENT
0183  20A9- B1 08              LDA (SP),Y
0184  20AB- 85 00              STA ACCU
0185  20AD- C8                 INY
0186  20AE- B1 08              LDA (SP),Y
0187  20B0- 85 01              STA ACCU+1
0188  20B2- A0 84              LDY =132
0189  20B4- B1 08              LDA (SP),Y      GET SAVED OLD BASE
0190  20B6- 85 17              STA BASE
0191  20B8- C8                 INY
0192  20B9- B1 08              LDA (SP),Y
0193  20BB- 85 18              STA BASE+1

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 09/03/18   R65 ASSEMBLER  PAGE 05

0194  20BD- C8                 INY
0195  20BE- B1 08              LDA (SP),Y      AND RETURN ADDRESS
0196  20C0- 18                 CLC
0197  20C1- 69 02              ADC =2
0198  20C3- 85 0A              STA PC
0199  20C5- C8                 INY
0200  20C6- B1 08              LDA (SP),Y
0201  20C8- 69 00              ADC =0
0202  20CA- 85 0B              STA PC+1
0203  20CC- 60                 RTS
0204                   *
0205                   * P-CODE 02: NEGA       (NEGATE ACCU)
0206                   *****************
0207                   * NO ARGUMENTS
0208                   *
0209  20CD- A9 00      NEGA    LDA =0
0210  20CF- 38                 SEC
0211  20D0- E5 00              SBC ACCU
0212  20D2- 85 00              STA ACCU
0213  20D4- A9 00              LDA =0
0214  20D6- E5 01              SBC ACCU+1
0215  20D8- 85 01              STA ACCU+1
0216  20DA- 60                 RTS
0217                   *
0218                   * P-CODE 03: ADDA       (ADD)
0219                   *****************
0220                   * NO ARGUMENTS
0221                   *
0222  20DB- A0 7E      ADDA    LDY =126
0223  20DD- 18                 CLC
0224  20DE- B1 08              LDA (SP),Y
0225  20E0- 65 00              ADC ACCU
0226  20E2- 85 00              STA ACCU
0227  20E4- C8                 INY
0228  20E5- B1 08              LDA (SP),Y
0229  20E7- 65 01              ADC ACCU+1
0230  20E9- 85 01              STA ACCU+1
0231                   *
0232  20EB- A5 08      DECS2   LDA SP
0233  20ED- 38                 SEC
0234  20EE- E9 02              SBC =2
0235  20F0- 85 08              STA SP
0236  20F2- B0 02              BCS *+4
0237  20F4- C6 09              DEC SP+1
0238  20F6- 60                 RTS
0239                   *
0240                   * P-CODE 04: SUBA       (SUBTRACT)
0241                   *****************
0242                   * NO ARGUMENTS
0243                   *

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 09/03/18   R65 ASSEMBLER  PAGE 06

0244  20F7- A0 7E      SUBA    LDY =126
0245  20F9- 38                 SEC
0246  20FA- B1 08              LDA (SP),Y
0247  20FC- E5 00              SBC ACCU
0248  20FE- 85 00             STA ACCU
0249  2100- C8                 INY
0250  2101- B1 08              LDA (SP),Y
0251  2103- E5 01              SBC ACCU+1
0252  2105- 85 01              STA ACCU+1
0253  2107- 4C EB 20           JMP DECS2
0254                   *
0255                   * P-CODE 05: MULA       (MULTIPLY)
0256                   *****************
0257                   * NO ARGUMENTS
0258                   *
0259  210A- 20 44 21   MULA    JSR GETSIGN     COMPUTE SIGN OF RESULT
0260  210D- A5 00              LDA ACCU
0261  210F- 78                 SEI
0262  2110- 8D E0 14           STA MULTA
0263  2113- A5 1B              LDA ARG1        GET SAVED ARGUMENT
0264  2115- 8D E1 14           STA MULTB
0265  2118- AD E2 14           LDA MULTR
0266  211B- 85 00              STA ACCU
0267  211D- AD E3 14           LDA MULTR+1
0268  2120- A6 1C              LDX ARG1+1
0269  2122- 8E E1 14           STX MULTB
0270  2125- 18                 CLC
0271  2126- 6D E2 14           ADC MULTR
0272  2129- A6 01              LDX ACCU+1
0273  212B- 8E E0 14           STX MULTA
0274  212E- A6 1B              LDX ARG1
0275  2130- 8E E1 14           STX MULTB
0276  2133- 18                 CLC
0277  2134- 6D E2 14           ADC MULTR
0278  2137- 58                 CLI
0279  2138- 29 7F              AND =$7F
0280  213A- 85 01              STA ACCU+1
0281  213C- 20 EB 20           JSR DECS2
0282  213F- A5 10              LDA SIGN
0283  2141- 30 8A              BMI NEGA
0284  2143- 60                 RTS
0285                   *
0286  2144- A5 01      GETSIGN LDA ACCU+1
0287  2146- 85 10              STA SIGN
0288  2148- 10 03              BPL *+5
0289  214A- 20 CD 20           JSR NEGA
0290                   *
0291  214D- A0 7F              LDY =127
0292  214F- B1 08              LDA (SP),Y
0293  2151- 10 14              BPL GETSI1

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 09/03/18   R65 ASSEMBLER  PAGE 07

0294  2153- 45 10              EOR SIGN
0295  2155- 85 10              STA SIGN
0296  2157- 88                 DEY
0297  2158- A9 00              LDA =0
0298  215A- 38                 SEC
0299  215B- F1 08              SBC (SP),Y
0300  215D- 85 1B              STA ARG1
0301  215F- C8                 INY
0302  2160- A9 00              LDA =0
0303  2162- F1 08              SBC (SP),Y
0304  2164- 85 1C              STA ARG1+1
0305  2166- 60                 RTS
0306                   *
0307  2167- 85 1C      GETSI1  STA ARG1+1
0308  2169- 88                 DEY
0309  216A- B1 08              LDA (SP),Y
0310  216C- 85 1B              STA ARG1
0311  216E- 60                 RTS
0312                   *
0313                   * PCODE 06: DIVA        (DIVIDE)
0314                   ****************
0315                   *
0316  216F- A0 7E      DIVA    LDY =126
0317  2171- B1 08              LDA (SP),Y
0318  2173- 85 1B              STA ARG1
0319  2175- C8                 INY
0320  2176- B1 08              LDA (SP),Y
0321  2178- 85 1C              STA ARG1+1
0322  217A- 20 EB 20           JSR DECS2
0323                   *
0324  217D- A5 1C              LDA ARG1+1
0325  217F- 29 80              AND =$80
0326  2181- F0 02              BEQ *+4
0327  2183- A9 FF              LDA =$FF
0328  2185- 85 21              STA ARG2
0329  2187- 85 22              STA ARG2+1
0330  2189- AA                 TAX
0331  218A- 18                 CLC
0332  218B- 65 1B              ADC ARG1
0333  218D- 85 1B              STA ARG1
0334  218F- 8A                 TXA
0335  2190- 65 1C              ADC ARG1+1
0336  2192- 85 1C              STA ARG1+1
0337  2194- 8A                 TXA
0338  2195- 45 01              EOR ACCU+1
0339  2197- 85 10              STA SIGN
0340  2199- 10 03              BPL *+5
0341  219B- 20 CD 20           JSR NEGA
0342  219E- A0 11              LDY =$11
0343  21A0- A5 00              LDA ACCU

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 09/03/18   R65 ASSEMBLER  PAGE 08

0344  21A2- 05 01              ORA ACCU+1
0345  21A4- D0 05              BNE DIV1
0346  21A6- A2 81              LDX =$81        PASCAL RUNTIME ERROR
0347  21A8- 4C D8 28           JMP PERROR      DIVISION BY ZERO
0348                   *
0349  21AB- 38         DIV1    SEC
0350  21AC- A5 21              LDA ARG2
0351  21AE- E5 00              SBC ACCU
0352  21B0- 48                 PHA
0353  21B1- A5 22              LDA ARG2+1
0354  21B3- E5 01              SBC ACCU+1
0355  21B5- 48                 PHA
0356  21B6- 45 22              EOR ARG2+1
0357  21B8- 30 09              BMI DIV2
0358  21BA- 68                 PLA
0359  21BB- 85 22              STA ARG2+1
0360  21BD- 68                 PLA
0361  21BE- 85 21              STA ARG2
0362  21C0- 38                 SEC
0363  21C1- B0 03              BCS DIV3
0364                   *
0365  21C3- 68         DIV2    PLA
0366  21C4- 68                 PLA
0367  21C5- 18                 CLC
0368  21C6- 26 1B      DIV3    ROL ARG1
0369  21C8- 26 1C              ROL ARG1+1
0370  21CA- 26 21              ROL ARG2
0371  21CC- 26 22              ROL ARG2+1
0372  21CE- 88                 DEY
0373  21CF- D0 DA              BNE DIV1
0374  21D1- A5 1B              LDA ARG1
0375  21D3- A6 1C              LDX ARG1+1
0376  21D5- 85 00              STA ACCU
0377  21D7- 86 01              STX ACCU+1
0378  21D9- A5 10              LDA SIGN
0379  21DB- 10 03              BPL *+5
0380  21DD- 4C CD 20           JMP NEGA
0381  21E0- 60                 RTS
0382                   *
0383                   * P-CODE 07: LOWB       (LOW BIT)
0384                   *****************
0385                   * NO ARGUMENTS
0386                   *
0387  21E1- A5 00      LOWB    LDA ACCU
0388  21E3- 29 01              AND =1
0389  21E5- 85 00      LOWB1   STA ACCU
0390  21E7- A9 00              LDA =0
0391  21E9- 85 01              STA ACCU+1
0392  21EB- 60                 RTS
0393                   *

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 09/03/18   R65 ASSEMBLER  PAGE 09

0394                   * P-CODE 08: TEQU       (TEST EQUAL)
0395                   *****************
0396                   *
0397  21EC- 20 F7 20   TEQU    JSR SUBA
0398  21EF- A5 00              LDA ACCU
0399  21F1- 05 01              ORA ACCU+1
0400  21F3- F0 04              BEQ TEQU1
0401  21F5- A9 00              LDA =0
0402  21F7- F0 EC              BEQ LOWB1       UNCOND.
0403                   *
0404  21F9- A9 01      TEQU1   LDA =1
0405  21FB- D0 E8              BNE LOWB1       UNCOND.
0406                   *
0407                   * PCODE 09: TNEQ        (TEST NOT EQUAL)
0408                   ****************
0409                   *
0410  21FD- 20 EC 21  TNEQ    JSR TEQU
0411  2200- A5 00              LDA ACCU
0412  2202- 49 01              EOR =1
0413  2204- 85 00              STA ACCU
0414  2206- 60                 RTS
0415                   *
0416                   * P-CODE 0A: TLES       (TEST LESS)
0417                   *****************
0418                   *
0419  2207- 20 F7 20   TLES    JSR SUBA
0420  220A- A9 00              LDA =0
0421  220C- 06 01              ASL ACCU+1
0422  220E- 2A                 ROL A
0423  220F- 90 D4              BCC LOWB1       UNCOND.
0424                   *
0425                   * P-CODE 0B: TGRE       (TEST GREATER OR EQUAL)
0426                   *****************
0427                   *
0428  2211- 20 07 22   TGRE    JSR TLES
0429  2214- 4C 00 22           JMP TNEQ+3
0430                   *
0431                   * P-CODE 0C: TGRTS      (TEST GREATER)
0432                   ******************
0433                   *
0434  2217- 20 F5 26   TGRT    JSR EXST
0435  221A- 4C 07 22           JMP TLES
0436                   *
0437                   * P-CODE 0D: TLEE       (TEST LESS OR EQUAL)
0438                   *****************
0439                   *
0440  221D- 20 17 22   TLEE    JSR TGRT
0441  2220- 4C 00 22           JMP TNEQ+3
0442                   *
0443                   * P-CODE 0E: ORAC       (BITWISE OR)

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 09/03/18   R65 ASSEMBLER  PAGE 10

0444                   *****************
0445                   *
0446  2223- A0 7E      ORAC    LDY =126
0447  2225- B1 08              LDA (SP),Y
0448  2227- 05 00              ORA ACCU
0449  2229- 85 00              STA ACCU
0450  222B- C8                 INY
0451  222C- B1 08              LDA (SP),Y
0452  222E- 05 01              ORA ACCU+1
0453  2230- 85 01              STA ACCU+1
0454  2232- 4C EB 20           JMP DECS2
0455                   *
0456                   * P-CODE 0F: ANDA       (BITWISE AND)
0457                   *****************
0458                   *
0459  2235- A0 7E      ANDA    LDY =126
0460  2237- B1 08              LDA (SP),Y
0461  2239- 25 00              AND ACCU
0462  223B- 85 00              STA ACCU
0463  223D- C8                 INY
0464  223E- B1 08              LDA (SP),Y
0465  2240- 25 01              AND ACCU+1
0466  2242- 85 01              STA ACCU+1
0467  2244- 4C EB 20           JMP DECS2
0468                   *
0469                   * PCODE 10: EORA        (BITWISE OR)
0470                   ****************
0471                   *
0472  2247- A0 7E      EORA    LDY =126
0473  2249- B1 08              LDA (SP),Y
0474  224B- 45 00              EOR ACCU
0475  224D- 85 00              STA ACCU
0476  224F- C8                 INY
0477  2250- B1 08              LDA (SP),Y
0478  2252- 45 01              EOR ACCU+1
0479  2254- 85 01              STA ACCU+1
0480  2256- 4C EB 20           JMP DECS2
0481                   *
0482                   * P-CODE 11: NOTA       (BITWISE NOT)
0483                   *****************
0484                   *
0485  2259- A5 00      NOTA    LDA ACCU
0486  225B- 49 FF              EOR =$FF
0487  225D- 85 00              STA ACCU
0488  225F- A5 01              LDA ACCU+1
0489  2261- 49 FF              EOR =$FF
0490  2263- 85 01              STA ACCU+1
0491  2265- 60                 RTS
0492                   *
0493                   * P-CODE 12: LEFT       (SHIFT LEFT N BYTES)

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 09/03/18   R65 ASSEMBLER  PAGE 11

0494                   *****************
0495                   *
0496  2266- 20 CD 20           JSR NEGA
0497  2269- A5 01      LEFT    LDA ACCU+1
0498  226B- 30 12              BMI RIGH-3      ARGUMENT NEGATIVE
0499                   *
0500  226D- A6 00              LDX ACCU
0501  226F- F0 0B              BEQ LEFT2       TAKE ONLY LOW BYTE
0502  2271- 20 DC 22           JSR GETS2       GET SECOND NO FROM ST
0503  2274- 06 00      LEFT1   ASL ACCU
0504  2276- 26 01              ROL ACCU+1
0505  2278- CA                 DEX
0506  2279- D0 F9              BNE LEFT1
0507  227B- 60                 RTS
0508                   *
0509  227C- 4C DC 22   LEFT2   JMP GETS2
0510                   *
0511                   * P-CODE 13: RIGH       (SHIFT RIGHT N BYTES)
0512                   *****************
0513                   *
0514  227F- 20 CD 20           JSR NEGA
0515  2282- A5 01      RIGH    LDA ACCU+1
0516  2284- 30 E0              BMI LEFT-3
0517  2286- A6 00              LDX ACCU
0518  2288- F0 F2              BEQ LEFT2
0519  228A- 20 DC 22           JSR GETS2
0520  228D- 46 01      RIGH1   LSR ACCU+1
0521  228F- A9 00              LDA =0
0522  2291- 90 02              BCC *+4
0523  2293- A9 80              LDA =128
0524  2295- 46 00              LSR ACCU
0525  2297- 05 00              ORA ACCU
0526  2299- 85 00              STA ACCU
0527  229B- CA                 DEX
0528  229C- D0 EF              BNE RIGH1
0529  229E- 60                 RTS
0530                   *
0531                   * P-CODE 14:INCA        (INCREMENT ACCU)
0532                   ****************
0533                   *
0534  229F- E6 00      INCA    INC ACCU
0535  22A1- D0 02              BNE *+4
0536  22A3- E6 01              INC ACCU+1
0537  22A5- 60                 RTS
0538                   *
0539                   * P-CODE 15: DECA       (DECREMENT ACCU)
0540                   *****************
0541                   *
0542  22A6- A5 00      DECA    LDA ACCU
0543  22A8- D0 02              BNE *+4

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 09/03/18   R65 ASSEMBLER  PAGE 12

0544  22AA- C6 01              DEC ACCU+1
0545  22AC- C6 00              DEC ACCU
0546  22AE- 60                 RTS
0547                   *
0548                   * P-CODE 16: COPY       (COPY ACCU0
0549                   *****************
0550                   *
0551  22AF- 20 BE 22   COPY    JSR INCS2       INCREMENT STACK
0552  22B2- A0 7E              LDY =126
0553  22B4- A5 00              LDA ACCU
0554  22B6- 91 08              STA (SP),Y
0555  22B8- C8                 INY
0556  22B9- A5 01              LDA ACCU+1
0557  22BB- 91 08              STA (SP),Y
0558  22BD- 60                 RTS
0559                   *
0560  22BE- A9 02      INCS2   LDA =2
0561  22C0- 18                 CLC
0562  22C1- 65 08              ADC SP
0563  22C3- 85 08              STA SP
0564  22C5- 90 02              BCC *+4
0565  22C7- E6 09              INC SP+1
0566  22C9- C5 0E      INCS2A  CMP ENDSTK      TEST STACK OVERFLOW
0567  22CB- A5 09              LDA SP+1
0568  22CD- E5 0F              SBC ENDSTK+1
0569  22CF- B0 06              BCS INCS2B
0570  22D1- A9 05              LDA =5          LET EMULATOR KNOW THAT
0571  22D3- 8D 30 14           STA EMUCOM      SP HAS BEEN INCREASED
0572  22D6- 60                 RTS
0573                   *
0574  22D7- A0 82      INCS2B  LDY =$82        PASCAL RUN TIME ERROR
0575  22D9- 4C D8 28           JMP PERROR      STACK OVERFLOW
0576                   *
0577                   * GETS2
0578                   *
0579  22DC- A0 7E      GETS2   LDY =126
0580  22DE- B1 08              LDA (SP),Y
0581  22E0- 85 00              STA ACCU
0582  22E2- C8                 INY
0583  22E3- B1 08              LDA (SP),Y
0584  22E5- 85 01              STA ACCU+1
0585  22E7- 4C EB 20           JMP DECS2
0586                   *
0587                   * P-CODE 17: PEEK
0588                   *****************
0589                   *
0590  22EA- A0 00      PEEK    LDY =0
0591  22EC- B1 00              LDA (ACCU),Y
0592  22EE- 85 00              STA ACCU
0593  22F0- 84 01              STY ACCU+1

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 09/03/18   R65 ASSEMBLER  PAGE 13

0594  22F2- 60                 RTS
0595                   *
0596                   * P-CODE 18: POKE
0597                   *****************
0598                   *
0599  22F3- A6 00      POKE    LDX ACCU
0600  22F5- 20 DC 22           JSR GETS2
0601  22F8- A0 00              LDY =0
0602  22FA- 8A                 TXA
0603  22FB- 91 00              STA (ACCU),Y
0604  22FD- 4C DC 22          JMP GETS2
0605                   *
0606                   * P-CODE 19: CALA
0607                   *****************
0608                   *
0609  2300- 20 06 23   CALA    JSR CALA1
0610  2303- 4C DC 22           JMP GETS2
0611                   *
0612  2306- 6C 00 00   CALA1   JMP (ACCU)
0613                   *
0614                   * P-CODE 1A: RLIN
0615                   *****************
0616                   *
0617  2309- 20 06 E0   RLIN    JSR GETLIN
0618  230C- B0 27              BCS RLINESC     IF ESC
0619  230E- A2 00              LDX =0
0620  2310- B1 E9              LDA (VIDPNT),Y
0621  2312- 29 7F              AND =$7F
0622  2314- 95 24              STA LINBUF,X
0623  2316- E8                 INX
0624  2317- C8                 INY
0625  2318- CC 8A 17           CPY NUMCHR
0626  231B- 90 F3              BCC *-11
0627  231D- F0 F1              BEQ *-13
0628  231F- CA                 DEX
0629  2320- 30 06              BMI *+8
0630  2322- B5 24              LDA LINBUF,X
0631  2324- C9 20              CMP =$20
0632  2326- F0 F7              BEQ *-7
0633  2328- E8                 INX
0634  2329- 86 16              STX ENDBUF
0635  232B- A9 00              LDA =0
0636  232D- 85 15              STA BUFFPN
0637  232F- 20 27 E0           JSR PRTINF
0638  2332- 0D 8A              BYT $D,$8A
0639  2334- 60                 RTS
0640                   *
0641  2335- 4C 10 20   RLINESC JMP STOP        ESCAPE
0642                   *
0643                   * P-CODE 1B: GETC

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 09/03/18   R65 ASSEMBLER  PAGE 14

0644                   *****************
0645                   *
0646  2338- 20 AF 22   GETC    JSR COPY
0647  233B- 20 90 28           JSR GETCHR0
0648  233E- 85 00      GETC1   STA ACCU
0649  2340- A9 00              LDA =0
0650  2342- 85 01              STA ACCU+1
0651  2344- 60                 RTS
0652                   *
0653                   * P-CODE 1C: GETN
0654                   *****************
0655                   *
0656  2345- 20 AF 22   GETN    JSR COPY
0657  2348- A9 00              LDA =0
0658  234A- 85 00              STA ACCU
0659  234C- 85 01              STA ACCU+1
0660  234E- 85 10              STA SIGN
0661  2350- 20 90 28   GETN0   JSR GETCHR0
0662  2353- C9 20              CMP =' '
0663  2355- F0 F9              BEQ GETN0
0664  2357- C9 2D              CMP ='-'
0665  2359- D0 05              BNE GETN1
0666                   *
0667  235B- C6 10              DEC SIGN
0668  235D- 4C 64 23           JMP GETN2
0669                   *
0670  2360- C9 2B      GETN1    CMP ='+'
0671  2362- D0 03              BNE GETN2+3
0672                   *
0673  2364- 20 90 28   GETN2   JSR GETCHR0
0674  2367- C9 30              CMP ='0'
0675  2369- 90 2F              BCC GETN3
0676  236B- C9 3A              CMP ='9'+1
0677  236D- B0 2B              BCS GETN3
0678  236F- 38                 SEC
0679  2370- E9 30              SBC ='0'
0680  2372- 48                 PHA
0681  2373- 06 00              ASL ACCU
0682  2375- 26 01              ROL ACCU+1
0683  2377- A6 00              LDX ACCU
0684  2379- A4 01              LDY ACCU+1
0685  237B- 06 00              ASL ACCU
0686  237D- 26 01              ROL ACCU+1
0687  237F- 06 00              ASL ACCU
0688  2381- 26 01              ROL ACCU+1
0689  2383- 18                 CLC
0690  2384- 8A                 TXA
0691  2385- 65 00              ADC ACCU
0692  2387- 85 00              STA ACCU
0693  2389- 98                 TYA

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 09/03/18   R65 ASSEMBLER  PAGE 15

0694  238A- 65 01              ADC ACCU+1
0695  238C- 85 01              STA ACCU+1
0696  238E- 68                 PLA
0697  238F- 18                 CLC
0698  2390- 65 00              ADC ACCU
0699  2392- 85 00              STA ACCU
0700  2394- 90 CE              BCC GETN2
0701  2396- E6 01              INC ACCU+1
0702  2398- B0 CA              BCS GETN2
0703                   *
0704  239A- A5 10      GETN3   LDA SIGN
0705  239C- F0 03              BEQ *+5
0706  239E- 4C CD 20           JMP NEGA
0707  23A1- 60                 RTS
0708                   *
0709                   * P-CODE 1D: PRTC
0710                   *****************
0711                   *
0712  23A2- A5 00      PRTC    LDA ACCU
0713  23A4- 20 C0 28           JSR PRTCHR0
0714  23A7- 4C DC 22           JMP GETS2
0715                   *
0716                   * P-CODE 1E: PRTN
0717                   *****************
0718                   *
0719  23AA- A5 01      PRTN    LDA ACCU+1
0720  23AC- 10 08              BPL PRTN1
0721  23AE- 20 CD 20           JSR NEGA
0722  23B1- A9 2D              LDA ='-'
0723  23B3- 20 C0 28           JSR PRTCHR0
0724                   *
0725  23B6- A5 00      PRTN1   LDA ACCU
0726  23B8- A6 01              LDX ACCU+1
0727  23BA- 85 21              STA ARG2
0728  23BC- 86 22              STX ARG2+1
0729  23BE- A9 1F              LDA =$1F
0730  23C0- 85 1D              STA ARG3
0731  23C2- 85 1F              STA ARG3+2
0732  23C4- A9 2A              LDA =$2A
0733  23C6- 85 1E              STA ARG3+1
0734  23C8- 85 20              STA ARG3+3
0735  23CA- A6 21              LDX ARG2
0736  23CC- A4 22              LDY ARG2+1
0737  23CE- 38                 SEC
0738  23CF- E6 1D      PRTN2   INC ARG3
0739  23D1- 8A                 TXA
0740  23D2- E9 10              SBC =$10
0741  23D4- AA                 TAX
0742  23D5- 98                 TYA
0743  23D6- E9 27              SBC =$27

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 09/03/18   R65 ASSEMBLER  PAGE 16

0744  23D8- A8                 TAY
0745  23D9- B0 F4              BCS PRTN2
0746  23DB- C6 1E      PRTN3   DEC ARG3+1
0747  23DD- 8A                 TXA
0748  23DE- 69 E8              ADC =$E8
0749  23E0- AA                 TAX
0750  23E1- 98                 TYA
0751  23E2- 69 03              ADC =$03
0752  23E4- A8                 TAY
0753  23E5- 90 F4              BCC PRTN3
0754  23E7- 8A                 TXA
0755  23E8- 38         PRTN4   SEC
0756  23E9- E6 1F      PRTN5   INC ARG3+2
0757  23EB- E9 64              SBC =$64
0758  23ED- B0 FA              BCS PRTN5
0759  23EF- 88                 DEY
0760  23F0- 10 F6              BPL PRTN4
0761  23F2- C6 20      PRTN6   DEC ARG3+3
0762  23F4- 69 0A              ADC =$A
0763  23F6- 90 FA              BCC PRTN6
0764  23F8- 09 30              ORA =$30
0765  23FA- 85 21              STA ARG2
0766  23FC- A9 20              LDA =$20
0767  23FE- 85 22             STA ARG2+1
0768  2400- A2 FB              LDX =$FB
0769  2402- 86 10      PRTN7   STX SIGN
0770  2404- B5 22              LDA ARG2+1,X
0771  2406- 05 22              ORA ARG2+1
0772  2408- C9 20              CMP =$20
0773  240A- F0 09              BEQ PRTN8
0774  240C- A0 30              LDY =$30
0775  240E- 84 22              STY ARG2+1
0776  2410- 05 22              ORA ARG2+1
0777  2412- 20 C0 28           JSR PRTCHR0
0778  2415- A6 10      PRTN8   LDX SIGN
0779  2417- E8                 INX
0780  2418- D0 E8              BNE PRTN7
0781  241A- 4C DC 22           JMP GETS2
0782                   *
0783                   * P-CODE 1F: PRTS
0784                   *****************
0785                   *
0786  241D- 06 00      PRTS    ASL ACCU
0787  241F- 26 01              ROL ACCU+1
0788  2421- A5 08              LDA SP
0789  2423- 38                 SEC
0790  2424- E5 00              SBC ACCU
0791  2426- 85 00              STA ACCU
0792  2428- 48                 PHA
0793  2429- A5 09              LDA SP+1

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 09/03/18   R65 ASSEMBLER  PAGE 17

0794  242B- E5 01              SBC ACCU+1
0795  242D- 85 01              STA ACCU+1
0796  242F- 48                 PHA
0797  2430- A0 80      OUTST1  LDY =128
0798  2432- B1 00              LDA (ACCU),Y
0799  2434- 20 C0 28           JSR PRTCHR0
0800  2437- A5 00              LDA ACCU
0801  2439- 18                 CLC
0802  243A- 69 02              ADC =2
0803  243C- 85 00              STA ACCU
0804  243E- 90 02              BCC *+4
0805  2440- E6 01              INC ACCU+1
0806  2442- C5 08              CMP SP
0807  2444- A5 01              LDA ACCU+1
0808  2446- E5 09              SBC SP+1
0809  2448- 90 E6              BCC OUTST1
0810  244A- 68                 PLA
0811  244B- 85 09              STA SP+1
0812  244D- 68                 PLA
0813  244E- 85 08              STA SP
0814  2450- 4C DC 22           JMP GETS2
0815                   *
0816                   * P-CODE 20: LITB
0817                   *****************
0818                   *
0819  2453- 20 AF 22   LITB    JSR COPY
0820  2456- 20 9D 24           JSR FETCH
0821  2459- 85 00              STA ACCU
0822  245B- A9 00              LDA =0
0823  245D- 85 01              STA ACCU+1
0824  245F- 60                 RTS
0825                   *
0826                   * P-CODE 21: INCB
0827                   *****************
0828                   *
0829  2460- A0 80      INCB    LDY =128        SAVE CURRENT ACCU
0830  2462- A5 00              LDA ACCU
0831  2464- 91 08              STA (SP),Y
0832  2466- C8                 INY
0833  2467- A5 01              LDA ACCU+1
0834  2469- 91 08              STA (SP),Y
0835  246B- 20 9D 24           JSR FETCH
0836  246E- A2 00              LDX =0
0837  2470- A8                 TAY             TEST A
0838  2471- 10 01              BPL *+3
0839  2473- CA                 DEX
0840  2474- 18                 CLC
0841  2475- 65 08              ADC SP
0842  2477- 85 08              STA SP
0843  2479- 8A                 TXA

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 09/03/18   R65 ASSEMBLER  PAGE 18

0844  247A- 65 09              ADC SP+1
0845  247C- 85 09              STA SP+1
0846  247E- A5 08      INCB1   LDA SP
0847  2480- 20 C9 22           JSR INCS2A      TEST STACK OVERFLOW
0848  2483- A0 80              LDY =128        AND GET NEW ACCU
0849  2485- B1 08              LDA (SP),Y
0850  2487- 85 00              STA ACCU
0851  2489- C8                 INY
0852  248A- B1 08              LDA (SP),Y
0853  248C- 85 01              STA ACCU+1
0854  248E- 60                 RTS
0855                   *
0856                   * P-CODE 22: LITW
0857                   *****************
0858                   *
0859  248F- 20 AF 22   LITW    JSR COPY
0860  2492- 20 9D 24           JSR FETCH
0861  2495- 85 00              STA ACCU
0862  2497- 20 9D 24           JSR FETCH
0863  249A- 85 01              STA ACCU+1
0864  249C- 60                 RTS
0865                   *
0866                   * FETCH
0867                   *
0868  249D- A0 00      FETCH   LDY =0
0869  249F- B1 0A              LDA (PC),Y
0870  24A1- E6 0A              INC PC
0871  24A3- D0 02              BNE *+4
0872  24A5- E6 0B              INC PC+1
0873  24A7- 60                 RTS
0874                   *
0875                   * P-CODE 23: INCW
0876                   *****************
0877                   *
0878  24A8- A0 80      INCW    LDY =128        SAVE CURRENT ACCU
0879  24AA- A5 00              LDA ACCU
0880  24AC- 91 08              STA (SP),Y
0881  24AE- C8                 INY
0882  24AF- A5 01              LDA ACCU+1
0883  24B1- 91 08              STA (SP),Y
0884  24B3- 20 9D 24           JSR FETCH
0885  24B6- 18                 CLC
0886  24B7- 65 08              ADC SP
0887  24B9- 85 08              STA SP
0888  24BB- 20 9D 24           JSR FETCH
0889  24BE- 65 09              ADC SP+1
0890  24C0- 85 09              STA SP+1
0891  24C2- 4C 7E 24           JMP INCB1
0892                   *
0893                   * P-CODE 24: JUMP

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 09/03/18   R65 ASSEMBLER  PAGE 19

0894                   *****************
0895                   *
0896  24C5- A0 00      JUMP    LDY =0
0897  24C7- B1 0A              LDA (PC),Y
0898  24C9- 18                 CLC
0899  24CA- 65 0A              ADC PC
0900  24CC- AA                 TAX
0901  24CD- C8                 INY
0902  24CE- B1 0A              LDA (PC),Y
0903  24D0- 65 0B              ADC PC+1
0904  24D2- 86 0A              STX PC
0905  24D4- 85 0B              STA PC+1
0906  24D6- 60                 RTS
0907                   *
0908                   * P-CODE 25: JMPZ
0909                   *****************
0910                   *
0911  24D7- 46 00      JMPZ    LSR ACCU
0912  24D9- 08                 PHP
0913  24DA- 20 DC 22           JSR GETS2
0914  24DD- 28                 PLP
0915  24DE- 90 E5              BCC JUMP
0916                   *
0917  24E0- A5 0A              LDA PC
0918  24E2- 18                 CLC
0919  24E3- 69 02              ADC =2
0920  24E5- 85 0A              STA PC
0921  24E7- 90 02              BCC *+4
0922  24E9- E6 0B              INC PC+1
0923  24EB- 60                 RTS
0924                   *
0925                   * P-CODE 26: JMPO
0926                   *****************
0927                   *
0928  24EC- A5 00      JMPO    LDA ACCU
0929  24EE- 49 01              EOR =1
0930  24F0- 85 00              STA ACCU
0931  24F2- 4C D7 24           JMP JMPZ
0932                   *
0933                   * P-CODE 27: LOAD
0934                   *****************
0935                   *
0936  24F5- 20 AF 22   LOAD    JSR COPY
0937  24F8- 20 9D 24           JSR FETCH
0938  24FB- AA                 TAX             LEVEL DIFFERENCE
0939  24FC- 20 9D 24           JSR FETCH
0940  24FF- 85 1B             STA ARG1
0941  2501- 20 9D 24           JSR FETCH
0942  2504- 85 1C      LOAD1   STA ARG1+1
0943  2506- 20 32 25           JSR FBASE3

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 09/03/18   R65 ASSEMBLER  PAGE 20

0944  2509- A0 80      LOAD2   LDY =128
0945  250B- B1 19              LDA (ABASE),Y
0946  250D- 85 00              STA ACCU
0947  250F- C8                 INY
0948  2510- B1 19              LDA (ABASE),Y
0949  2512- 85 01              STA ACCU+1
0950  2514- 60                 RTS
0951                   *
0952                   * FBASE
0953                   *
0954  2515- A5 17      FBASE   LDA BASE
0955  2517- A4 18              LDY BASE+1
0956  2519- 85 19              STA ABASE
0957  251B- 84 1A              STY ABASE+1
0958  251D- E0 00              CPX =0
0959  251F- F0 10              BEQ FBASE2
0960                   *
0961  2521- A0 80      FBASE1  LDY =128
0962  2523- B1 19              LDA (ABASE),Y
0963  2525- 48                 PHA
0964  2526- C8                 INY
0965  2527- B1 19              LDA (ABASE),Y
0966  2529- 85 1A              STA ABASE+1
0967  252B- 68                 PLA
0968  252C- 85 19              STA ABASE
0969  252E- CA                 DEX
0970  252F- D0 F0              BNE FBASE1
0971  2531- 60         FBASE2  RTS
0972                   *
0973  2532- 20 15 25   FBASE3  JSR FBASE
0974  2535- 18                 CLC
0975  2536- A5 1B              LDA ARG1
0976  2538- 65 19              ADC ABASE
0977  253A- 85 19              STA ABASE
0978  253C- A5 1C              LDA ARG1+1
0979  253E- 65 1A              ADC ABASE+1
0980  2540- 85 1A              STA ABASE+1
0981  2542- 60                 RTS
0982                   *
0983                   * P-CODE 28: LODX
0984                   *****************
0985                   *
0986  2543- 20 9D 24   LODX    JSR FETCH
0987  2546- AA                 TAX
0988  2547- 20 9D 24           JSR FETCH
0989  254A- 06 00              ASL ACCU
0990  254C- 26 01              ROL ACCU+1
0991  254E- 18                 CLC
0992  254F- 65 00              ADC ACCU
0993  2551- 85 1B              STA ARG1

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 09/03/18   R65 ASSEMBLER  PAGE 21

0994  2553- 08                 PHP
0995  2554- 20 9D 24           JSR FETCH
0996  2557- 28                 PLP
0997  2558- 65 01              ADC ACCU+1
0998  255A- 4C 04 25           JMP LOAD1
0999                   *
1000                   * P-CODE 29: STOR
1001                   *****************
1002                   *
1003  255D- 20 9D 24   STOR    JSR FETCH
1004  2560- AA                 TAX
1005  2561- 20 9D 24           JSR FETCH
1006  2564- 85 1B              STA ARG1
1007  2566- 20 9D 24           JSR FETCH
1008  2569- 85 1C              STA ARG1+1
1009  256B- 20 32 25   STOR1   JSR FBASE3
1010  256E- A0 80      STOR2   LDY =128
1011  2570- A5 00              LDA ACCU
1012  2572- 91 19              STA (ABASE),Y
1013  2574- C8                 INY
1014  2575- A5 01              LDA ACCU+1
1015  2577- 91 19              STA (ABASE),Y
1016  2579- 4C DC 22           JMP GETS2
1017                   *
1018                   * P-CODE 2A: STOX
1019                   *****************
1020                   *
1021  257C- 20 9D 24   STOX    JSR FETCH
1022  257F- AA                 TAX
1023  2580- A0 7E              LDY =126
1024  2582- B1 08              LDA (SP),Y
1025  2584- 0A                 ASL A
1026  2585- 85 1B              STA ARG1
1027  2587- C8                 INY
1028  2588- B1 08              LDA (SP),Y
1029  258A- 2A                 ROL A
1030  258B- 85 1C              STA ARG1+1
1031  258D- 20 9D 24           JSR FETCH
1032  2590- 18                 CLC
1033  2591- 65 1B              ADC ARG1
1034  2593- 85 1B              STA ARG1
1035  2595- 20 9D 24           JSR FETCH
1036  2598- 65 1C              ADC ARG1+1
1037  259A- 85 1C              STA ARG1+1
1038  259C- 20 EB 20           JSR DECS2
1039  259F- 4C 6B 25           JMP STOR1
1040                   *
1041                   * P-CODE 2B: CALL
1042                   *****************
1043                   *

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 09/03/18   R65 ASSEMBLER  PAGE 22

1044  25A2- 20 9D 24   CALL    JSR FETCH
1045  25A5- AA                 TAX
1046  25A6- 20 15 25           JSR FBASE
1047  25A9- A0 82              LDY =130
1048  25AB- A5 19              LDA ABASE
1049  25AD- 91 08              STA (SP),Y
1050  25AF- C8                 INY
1051  25B0- A5 1A              LDA ABASE+1
1052  25B2- 91 08              STA (SP),Y
1053  25B4- C8                 INY
1054  25B5- A5 17              LDA BASE
1055  25B7- 91 08              STA (SP),Y
1056  25B9- C8                 INY
1057  25BA- A5 18              LDA BASE+1
1058  25BC- 91 08              STA (SP),Y
1059  25BE- C8                 INY
1060  25BF- A5 0A              LDA PC
1061  25C1- 91 08              STA (SP),Y
1062  25C3- C8                 INY
1063  25C4- A5 0B              LDA PC+1
1064  25C6- 91 08              STA (SP),Y
1065  25C8- A5 08              LDA SP
1066  25CA- 18                 CLC
1067  25CB- 69 02              ADC =2
1068  25CD- 85 17              STA BASE
1069  25CF- A5 09              LDA SP+1
1070  25D1- 69 00              ADC =0
1071  25D3- 85 18              STA BASE+1
1072  25D5- 4C C5 24           JMP JUMP
1073                   *
1074                   * PCODE 2C: SDEV
1075                   ****************
1076                   *
1077  25D8- A5 00      SDEV    LDA ACCU
1078  25DA- 85 0D              STA DEVICE
1079  25DC- 4C DC 22           JMP GETS2
1080                   *
1081                   * PCODE 2D: RDEV
1082                   ****************
1083                   *
1084  25DF- A9 00      RDEV    LDA =0
1085  25E1- 85 0D              STA DEVICE
1086  25E3- 60                 RTS
1087                   *
1088                   * PCODE 2E: FNAM
1089                   ****************
1090                   *
1091  25E4- 20 27 E0   FNAM    JSR PRTINF
1092  25E7- 20 3D A0           BYT ' = '+128
1093  25EA- 20 06 E0           JSR GETLIN

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 09/03/18   R65 ASSEMBLER  PAGE 23

1094  25ED- 20 15 F8           JSR GETNAM
1095  25F0- 20 0D 20           JSR HARGUM
1096  25F3- 85 DC              STA FILDRV
1097  25F5- 20 0D 20           JSR HARGUM
1098  25F8- 8D 13 03           STA FILLOC
1099  25FB- 20 27 E0           JSR PRTINF
1100  25FE- 0D 8A             BYT $D,$8A
1101  2600- 60                 RTS
1102                   *
1103                   * P-CODE 2F: OPNR
1104                   *****************
1105                   *
1106                   * NO AUTOMATIC ERROR TESTING
1107                   *
1108  2601- A9 00      OPNR    LDA =0
1109  2603- 85 DA              STA FILFLG
1110  2605- 20 AF 22           JSR COPY
1111  2608- 20 0F F0           JSR OPEN
1112  260B- C8                 INY
1113  260C- C8                 INY
1114  260D- 84 00              STY ACCU
1115  260F- 85 01              STA ACCU+1
1116  2611- 60                 RTS
1117                   *
1118                   * P-CODE 30: OPNW
1119                   *****************
1120                   *
1121  2612- A9 20      OPNW    LDA =$20
1122  2614- 4C 03 26           JMP OPNR+2
1123                   *
1124                   * P-CODE 31: CLOS
1125                   *****************
1126                   *
1127                   * NO AUTOMATIC ERROR CHECKING
1128                   *
1129  2617- A6 00      CLOS    LDX ACCU
1130  2619- CA                 DEX
1131  261A- CA                 DEX
1132  261B- 20 15 2D           JSR CLOSRA
1133  261E- 4C DC 22           JMP GETS2
1134                   *
1135                   * P-CODE 32: PRTI
1136                   *****************
1137                   *
1138  2621- 20 9D 24   PRTI    JSR FETCH
1139  2624- 48                 PHA
1140  2625- 29 7F              AND =$7F
1141  2627- 20 C0 28           JSR PRTCHR0
1142  262A- 68                 PLA
1143  262B- 10 F4              BPL PRTI

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 09/03/18   R65 ASSEMBLER  PAGE 24

1144  262D- 60                 RTS
1145                   *
1146                   * P-CODE 33: GHGH       (GET HIGH)
1147                   *****************
1148                   *
1149  262E- A5 01      GHGH    LDA ACCU+1
1150  2630- 85 00              STA ACCU
1151                   *
1152                   * P-CODE 34: GLOW
1153                   *****************
1154                   *
1155  2632- A9 00      GLOW    LDA =0
1156  2634- 85 01              STA ACCU+1
1157  2636- 60                 RTS
1158                   *
1159                   * P-CODE 35:PHGH
1160                   ****************
1161                   *
1162  2637- A0 7E      PHGH    LDY =126
1163  2639- B1 08              LDA (SP),Y
1164  263B- 85 01              STA ACCU+1
1165  263D- 4C EB 20           JMP DECS2
1166                   *
1167                   * P-CODE 36: PLOW
1168                   *****************
1169                   *
1170  2640- A0 7E      PLOW    LDY =126
1171  2642- B1 08              LDA (SP),Y
1172  2644- 85 00              STA ACCU
1173  2646- 4C EB 20           JMP DECS2
1174                   *
1175                   * P-CODE 37: GSEC
1176                   *****************
1177                   * DEVICE HAS TO BE SET  ########
1178                   *
1179  2649- 20 5B 26   GSEC    JSR PREPSEC
1180  264C- 4C 82 20           JMP READ
1181  264F- 4C 8E 20           JMP ENDDO
1182                   *
1183                   * P-CODE 38: PSEC
1184                   *****************
1185                   * DEVICE HAS TO BE SET  ########
1186                   *
1187  2652- 20 5B 26   PSEC    JSR PREPSEC
1188  2655- 20 85 20           JSR WRITE
1189  2658- 4C 8E 20           JMP ENDDO
1190                   *
1191  265B- EA         PREPSEC NOP             ########
1192  265C- EA                 NOP
1193  265D- EA                 NOP

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 09/03/18   R65 ASSEMBLER  PAGE 25

1194  265E- EA                 NOP
1195  265F- A5 00              LDA ACCU
1196  2661- A6 01              LDX ACCU+1
1197  2663- 85 E0              STA DATA
1198  2665- 86 E1              STX DATA+1
1199  2667- A0 7E              LDY =126
1200  2669- B1 08              LDA (SP),Y
1201  266B- 85 DE              STA SECTOR
1202  266D- A0 7C              LDY =124
1203  266F- B1 08              LDA (SP),Y
1204  2671- 85 DD              STA TRACK
1205  2673- A5 08              LDA SP
1206  2675- 38                 SEC
1207  2676- E9 04              SBC =4
1208  2678- 20 F0 20           JSR DECS2+5
1209  267B- 20 DC 22           JSR GETS2
1210  267E- 4C 88 20           JMP PREPDO
1211                   *
1212                   * P-CODE 39: NBYT       LOAD N BYTES IMMEDIATELY
1213                   *****************
1214                   *
1215  2681- 20 9D 24   NBYT    JSR FETCH
1216  2684- AA                 TAX             BYTE COUNTER
1217  2685- 20 AF 22   NBYT1   JSR COPY
1218  2688- 20 9D 24           JSR FETCH
1219  268B- 84 01              STY ACCU+1      Y=0
1220  268D- 85 00              STA ACCU
1221  268F- CA                 DEX
1222  2690- D0 F3              BNE NBYT1
1223  2692- 60                 RTS
1224                   *
1225                   * P-CODE 3A: NWRD       LOAD N WORD IMMEDIATELY
1226                   *****************
1227                   *
1228  2693- 20 9D 24   NWRD    JSR FETCH
1229  2696- AA                 TAX             WORD COUNTER
1230  2697- 20 AF 22   NWRD1   JSR COPY
1231  269A- 20 9D 24           JSR FETCH
1232  269D- 85 00              STA ACCU
1233  269F- 20 9D 24           JSR FETCH
1234  26A2- 85 01              STA ACCU+1
1235  26A4- CA                 DEX
1236  26A5- D0 F0              BNE NWRD1
1237  26A7- 60                 RTS
1238                   *
1239                   * P-CODE 3B: LODN       LOAD N MORE WORDS
1240                   *****************
1241                   *
1242  26A8- 20 9D 24   LODN    JSR FETCH
1243  26AB- AA                 TAX

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 09/03/18   R65 ASSEMBLER  PAGE 26

1244  26AC- 20 AF 22   LODN1   JSR COPY
1245  26AF- A5 19              LDA ABASE
1246  26B1- 18                 CLC
1247  26B2- 69 02              ADC =2
1248  26B4- 85 19              STA ABASE
1249  26B6- 90 02              BCC *+4
1250  26B8- E6 1A              INC ABASE+1
1251  26BA- 20 09 25           JSR LOAD2
1252  26BD- CA                 DEX
1253  26BE- D0 EC              BNE LODN1
1254  26C0- 60                 RTS
1255                   *
1256                   * P-CODE 3C: STON       STORE N MORE WORDS
1257                   *****************
1258                   *
1259  26C1- 20 9D 24   STON    JSR FETCH
1260  26C4- AA                 TAX
1261  26C5- A5 19      STON1   LDA ABASE
1262  26C7- 38                 SEC
1263  26C8- E9 02              SBC =2
1264  26CA- 85 19              STA ABASE
1265  26CC- B0 02              BCS *+4
1266  26CE- C6 1A              DEC ABASE+1
1267  26D0- 20 6E 25           JSR STOR2
1268  26D3- CA                 DEX
1269  26D4- D0 EF              BNE STON1
1270  26D6- 60                 RTS
1271                   *
1272                   * P-CODE 3D: LODI       LOAD INDIRECT
1273                   *****************
1274                   *
1275  26D7- 20 DD 26   LODI    JSR GETACC
1276  26DA- 4C 09 25           JMP LOAD2
1277                   *
1278  26DD- A5 00      GETACC  LDA ACCU
1279  26DF- A6 01              LDX ACCU+1
1280  26E1- 38                 SEC
1281  26E2- E9 80              SBC =128
1282  26E4- B0 01              BCS *+3
1283  26E6- CA                 DEX
1284  26E7- 85 19              STA ABASE
1285  26E9- 86 1A              STX ABASE+1
1286  26EB- 60                 RTS
1287                   *
1288                   * P-CODE 3E: STOI       STORE INDIRECT
1289                   *****************
1290                   *
1291  26EC- 20 DD 26   STOI    JSR GETACC
1292  26EF- 20 DC 22           JSR GETS2
1293  26F2- 4C 6E 25           JMP STOR2

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 09/03/18   R65 ASSEMBLER  PAGE 27

1294                   *
1295                   * P-CODE 3F: EXST       EXCHANGE STACK
1296                   *****************
1297                   *
1298  26F5- A0 7E      EXST    LDY =126
1299  26F7- B1 08              LDA (SP),Y
1300  26F9- AA                 TAX
1301  26FA- A5 00              LDA ACCU
1302  26FC- 91 08              STA (SP),Y
1303  26FE- 86 00             STX ACCU
1304  2700- C8                 INY
1305  2701- B1 08              LDA (SP),Y
1306  2703- AA                 TAX
1307  2704- A5 01              LDA ACCU+1
1308  2706- 91 08              STA (SP),Y
1309  2708- 86 01              STX ACCU+1
1310  270A- 60                 RTS
1311                   *
1312                   * P-CODE 40 TIND        TEST INDEX
1313                   ****************
1314                   *
1315  270B- 20 9D 24   TIND    JSR FETCH       LOWLIM-1
1316  270E- AA                 TAX
1317  270F- 20 9D 24           JSR FETCH
1318  2712- E4 00              CPX ACCU
1319  2714- E5 01              SBC ACCU+1
1320  2716- 70 0E              BVS TINDERR
1321                   *
1322  2718- 20 9D 24           JSR FETCH       HIGHLIM
1323  271B- AA                 TAX
1324  271C- 20 9D 24           JSR FETCH
1325  271F- E4 00              CPX ACCU
1326  2721- E5 01              SBC ACCU+1
1327  2723- 90 01              BCC TINDERR
1328  2725- 60                 RTS
1329                   *
1330  2726- A2 83      TINDERR LDX =$83        RUNTIME ERROR
1331  2728- 4C D8 28           JMP PERROR      INDEX OUT OF BOUNDS
1332                   *
1333                   * P-CODE 41: RUNP       RUN PROGRAM
1334                   *****************
1335                   *
1336  272B- A0 82      RUNP    LDY =130
1337  272D- A5 00              LDA ACCU        SAVE ACCU
1338  272F- A6 01              LDX ACCU+1
1339  2731- 20 5D 27           JSR SAVE
1340  2734- A5 17              LDA BASE        SAVE BASE
1341  2736- A6 18              LDX BASE+1
1342  2738- 20 5D 27           JSR SAVE
1343  273B- A5 0A              LDA PC          SAVE PC

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 09/03/18   R65 ASSEMBLER  PAGE 28

1344  273D- A6 0B              LDX PC+1
1345  273F- 20 5D 27           JSR SAVE
1346  2742- A5 11              LDA STPROG      SAVE STPROG
1347  2744- A6 12              LDX STPROG+1
1348  2746- 20 5D 27           JSR SAVE
1349  2749- A5 13              LDA EOPROG      SAVE EOPROG
1350  274B- A6 14              LDX EOPROG+1
1351  274D- 20 5D 27           JSR SAVE
1352  2750- A5 08              LDA SP          GET SP
1353  2752- A6 09              LDX SP+1
1354  2754- 18                 CLC
1355  2755- 69 8C              ADC =140
1356  2757- 90 01              BCC *+3
1357  2759- E8                 INX             COMPUTE NEW STPROG
1358  275A- 4C 57 29           JMP EXEC3
1359                   *
1360                   *
1361  275D- 91 08      SAVE    STA (SP),Y
1362  275F- C8                 INY
1363  2760- 8A                 TXA
1364  2761- 91 08              STA (SP),Y
1365  2763- C8                 INY
1366  2764- 60                 RTS
1367                   *
1368                   *
1369  2765- 88         GETBACK DEY
1370  2766- B1 08              LDA (SP),Y
1371  2768- AA                 TAX
1372  2769- 88                 DEY
1373  276A- B1 08              LDA (SP),Y
1374  276C- 60                 RTS
1375                   *
1376                   *
1377                   * P-CODE 42: ADDF
1378                   *****************
1379                   *
1380  276D- 20 8A 27   ADDF    JSR GETFLP2
1381  2770- 20 05 2B           JSR FADD
1382                   *
1383  2773- A5 08      PUTFLP0 LDA SP          DECREMENT SP BY 4
1384  2775- 38                 SEC
1385  2776- E9 04              SBC =4
1386  2778- 85 08              STA SP
1387  277A- B0 02              BCS PUTFLP
1388  277C- C6 09              DEC SP+1
1389  277E- A5 02      PUTFLP  LDA M1+1        AND SAVE HALF OF NUMBER
1390  2780- A0 7E              LDY =126
1391  2782- 91 08              STA (SP),Y
1392  2784- C8                 INY
1393  2785- A5 03              LDA M1+2

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 09/03/18   R65 ASSEMBLER  PAGE 29

1394  2787- 91 08              STA (SP),Y
1395  2789- 60                 RTS
1396                   *
1397  278A- A0 7A      GETFLP2 LDY =122        GET SECOND NUMBER
1398  278C- B1 08              LDA (SP),Y
1399  278E- 85 1D              STA M2+1
1400  2790- C8                 INY
1401  2791- B1 08              LDA (SP),Y
1402  2793- 85 1E              STA M2+2
1403  2795- C8                 INY
1404  2796- B1 08              LDA (SP),Y
1405  2798- 85 1B              STA X2
1406  279A- C8                 INY
1407  279B- B1 08              LDA (SP),Y
1408  279D- 85 1C              STA M2
1409  279F- A0 7E      GETFLP  LDY =126        AND HALF OF FIRST
1410  27A1- B1 08              LDA (SP),Y
1411  27A3- 85 02              STA M1+1
1412  27A5- C8                 INY
1413  27A6- B1 08              LDA (SP),Y
1414  27A8- 85 03              STA M1+2
1415  27AA- 60                 RTS
1416                   *
1417                   * P-CODE 43: SUBF
1418                   *****************
1419                   *
1420  27AB- 20 8A 27   SUBF    JSR GETFLP2
1421  27AE- 20 FF 2A           JSR FSUB
1422  27B1- 4C 73 27           JMP PUTFLP0
1423                   *
1424                   * P-CODE 44: MULF
1425                   *****************
1426                   *
1427  27B4- 20 8A 27   MULF    JSR GETFLP2
1428  27B7- 20 2C 2B           JSR FMUL
1429  27BA- 4C 73 27           JMP PUTFLP0
1430                   *
1431                   * P-CODE 45: DIVF
1432                   *****************
1433                   *
1434  27BD- 20 8A 27   DIVF    JSR GETFLP2
1435  27C0- 20 52 2B           JSR FDIV
1436  27C3- 4C 73 27           JMP PUTFLP0
1437                   *
1438                   * P-CODE 46: FLOF
1439                   *****************
1440                   *
1441  27C6- A5 00      FLOF    LDA ACCU
1442  27C8- 85 02              STA M1+1        HIGH BYTE IS IN ACCU
1443                   *                       SAME AS M1

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 09/03/18   R65 ASSEMBLER  PAGE 30

1444  27CA- 20 E1 2A           JSR FLOAT
1445  27CD- 20 BE 22           JSR INCS2
1446  27D0- 4C 7E 27           JMP PUTFLP
1447                   *
1448                   * P-CODE 47: FIXF
1449                   *****************
1450                   *
1451  27D3- 20 9F 27   FIXF    JSR GETFLP
1452  27D6- 20 9F 2B           JSR FIX
1453  27D9- A5 02              LDA M1+1
1454  27DB- 85 00              STA ACCU
1455  27DD- 4C EB 20           JMP DECS2
1456                   *
1457                   * P-CODE 48: FEQU       =
1458                   *****************
1459                   *
1460  27E0- 20 F8 27   FEQU    JSR TESTF
1461  27E3- F0 09              BEQ TRUE
1462                   *
1463  27E5- A2 00      FALSE   LDX =0
1464  27E7- 86 00              STX ACCU
1465  27E9- 86 01              STX ACCU+1
1466  27EB- 4C EB 20           JMP DECS2
1467                   *
1468  27EE- A2 01      TRUE    LDX =1
1469  27F0- 86 00              STX ACCU
1470  27F2- CA                 DEX
1471  27F3- 86 01              STX ACCU+1
1472  27F5- 4C EB 20           JMP DECS2
1473                   *
1474  27F8- 20 8A 27   TESTF   JSR GETFLP2
1475  27FB- 20 FF 2A           JSR FSUB
1476  27FE- A5 01             LDA M1
1477  2800- 60                 RTS
1478                   *
1479                   * P-CODE 49: FNEQ       <>
1480                   *****************
1481                   *
1482  2801- 20 F8 27   FNEQ    JSR TESTF
1483  2804- D0 E8              BNE TRUE
1484  2806- F0 DD              BEQ FALSE
1485                   *
1486                   * P-CODE 4A: FLES       <
1487                   *****************
1488                   *
1489  2808- 20 F8 27   FLES    JSR TESTF
1490  280B- 10 D8              BPL FALSE
1491  280D- 30 DF              BMI TRUE
1492                   *
1493                   * P-CODE 4B: FGRE       >=

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 09/03/18   R65 ASSEMBLER  PAGE 31

1494                   *****************
1495                   *
1496  280F- 20 F8 27   FGRE    JSR TESTF
1497  2812- 10 DA              BPL TRUE
1498  2814- 30 CF              BMI FALSE
1499                   *
1500                   * P-CODE 4C: FGRT       >
1501                   *****************
1502                   *
1503  2816- 20 F8 27   FGRT    JSR TESTF
1504  2819- 30 CA              BMI FALSE
1505  281B- F0 C8              BEQ FALSE
1506  281D- 10 CF              BPL TRUE
1507                   *
1508                   * P-CODE 4D: FLEE       <=
1509                   *****************
1510                   *
1511  281F- 20 F8 27   FLEE    JSR TESTF
1512  2822- 30 CA              BMI TRUE
1513  2824- F0 C8              BEQ TRUE
1514  2826- 10 BD              BPL FALSE
1515                   *
1516                   * P-CODE 4E: FCOM       COMPLEMENT
1517                   *****************
1518                   *
1519  2828- 20 9F 27   FCOM    JSR GETFLP
1520  282B- 20 44 2B           JSR FCOMPL
1521  282E- 4C 7E 27           JMP PUTFLP
1522                   *
1523                   *
1524                   * P-CODE 4F: TFER       TEST FILE ERROR
1525                   *****************
1526                   *
1527  2831- A6 23      TFER    LDX IOCHECK
1528  2833- F0 04              BEQ TFER1
1529  2835- A6 DB              LDX FILERR
1530  2837- D0 01              BNE TFER2
1531  2839- 60         TFER1   RTS             OK
1532                   *
1533  283A- 4C D8 28   TFER2   JMP PERROR
1534                   *
1535                   * P-CODE 50: OPRA       OPEN RA-FILE
1536                   *****************
1537                   *
1538  283D- 20 AF 22   OPRA    JSR COPY        SAVE ACCU
1539  2840- 20 A6 2B           JSR OPENRA      OPEN FILE
1540  2843- C8                 INY
1541  2844- C8                 INY
1542  2845- 84 00              STY ACCU        SAVE FILE NO
1543  2847- A9 00              LDA =0

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 09/03/18   R65 ASSEMBLER  PAGE 32

1544  2849- 85 01              STA ACCU+1
1545  284B- 60                 RTS
1546                   *
1547                   * P-CODE 51: GETR       GET FROM RA FILE
1548                   *****************
1549                   *
1550                   * NO AUTOMATIC ERROR CHECKING
1551                   *
1552  284C- 20 59 28   GETR    JSR GETR1
1553  284F- 20 AD 2C           JSR GETBYTE
1554  2852- 85 00              STA ACCU
1555  2854- A9 00              LDA =0
1556  2856- 85 01              STA ACCU+1
1557  2858- 60                 RTS
1558                   *
1559  2859- 20 EB 20   GETR1   JSR DECS2
1560  285C- A0 80              LDY =128
1561  285E- B1 08              LDA (SP),Y      GET FILE NO
1562  2860- AA                 TAX
1563  2861- CA                 DEX
1564  2862- CA                 DEX
1565  2863- A5 00              LDA ACCU        GET POINTER
1566  2865- A4 01              LDY ACCU+1
1567  2867- 60                 RTS
1568                   *
1569                   * P-CODE 52: PUTR       PUT TO RA=FILE
1570                   *****************
1571                   *
1572                   * NO AUTOMATIC ERROR CHECLING
1573                   *
1574  2868- A5 00      PUTR    LDA ACCU
1575  286A- 85 FE              STA KCHAR
1576  286C- 20 EB 20           JSR DECS2
1577  286F- 20 59 28           JSR GETR1
1578  2872- 20 CB 2C           JSR PUTBYTE
1579  2875- 4C DC 22           JMP GETS2
1580                   *
1581                   * P-CODE 53: SWA2       SWAP 2 AND 3 ON STACK
1582                   *****************
1583                   *
1584  2878- A0 7E      SWA2    LDY =126
1585  287A- 20 7F 28           JSR SWA3
1586  287D- A0 7F              LDY =127
1587                   *
1588  287F- B1 08      SWA3    LDA (SP),Y
1589  2881- AA                 TAX
1590  2882- 88                 DEY
1591  2883- 88                 DEY
1592  2884- B1 08              LDA (SP),Y
1593  2886- C8                 INY

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 09/03/18   R65 ASSEMBLER  PAGE 33

1594  2887- C8                 INY
1595  2888- 91 08              STA (SP),Y
1596  288A- 8A                 TXA
1597  288B- 88                 DEY
1598  288C- 88                 DEY
1599  288D- 91 08              STA (SP),Y
1600  288F- 60                 RTS
1601                   *
1602                   * GETCHR0: GET A CHAR FROM SPECIFIED FILE
1603                   *****************************************
1604                   *
1605  2890- A6 0D      GETCHR0 LDX DEVICE
1606  2892- D0 1A              BNE GETCHR4
1607                   *
1608  2894- A6 15      GETCHR1 LDX BUFFPN
1609  2896- 10 06              BPL GETCHR2
1610  2898- 20 09 23           JSR RLIN
1611  289B- 4C 94 28           JMP GETCHR1
1612                   *
1613  289E- E4 16      GETCHR2 CPX ENDBUF      IS IS END OF BUFFER?
1614  28A0- D0 07              BNE GETCHR3
1615  28A2- A9 FF              LDA =$FF
1616  28A4- 85 15              STA BUFFPN
1617  28A6- A9 0D              LDA =$D
1618  28A8- 60                 RTS
1619                   *
1620  28A9- E6 15      GETCHR3 INC BUFFPN
1621  28AB- B5 24              LDA LINBUF,X
1622  28AD- 60                 RTS
1623                   *
1624  28AE- CA         GETCHR4 DEX
1625  28AF- D0 03              BNE GETCHR5     SKIP, IF NOT KEY
1626  28B1- 4C 00 E0           JMP GETKEY
1627                   *
1628  28B4- CA         GETCHR5 DEX
1629  28B5- A9 00              LDA =0
1630  28B7- 85 DA              STA FILFLG
1631  28B9- 20 18 F0           JSR READCH
1632  28BC- 4C 31 28           JMP TFER
1633                   *
1634  28BF- 60         GETCHR6 RTS
1635                   *
1636                   * PRTCHR0: PRINT CHAR TO SPECIFIED FILE
1637                   ***************************************
1638                   *
1639  28C0- A6 0D      PRTCHR0 LDX DEVICE
1640  28C2- D0 03              BNE PRTCHR1
1641  28C4- 4C 09 E0           JMP PRTCHR
1642                   *
1643  28C7- CA         PRTCHR1 DEX

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 09/03/18   R65 ASSEMBLER  PAGE 34

1644  28C8- D0 03              BNE PRTCHR2
1645  28CA- 4C 0C E0           JMP AUTOPR
1646                   *
1647  28CD- CA         PRTCHR2 DEX
1648  28CE- A0 00              LDY =0
1649  28D0- 84 DA              STY FILFLG
1650  28D2- 20 1B F0           JSR WRITCH
1651  28D5- 4C 31 28           JMP TFER
1652                   *
1653                   *
1654                   * PERROR: PASCAL RUNTIME ERROR
1655                   ******************************
1656                   *
1657  28D8- 20 27 E0   PERROR  JSR PRTINF
1658  28DB- 0D 0A 07           BYT $D,$A,7,'Pascal error '+128
1658  28DE- 50 61 73 
1658  28E1- 63 61 6C 
1658  28E4- 20 65 72 
1658  28E7- 72 6F 72 
1658  28EA- A0 
1659  28EB- A9 00              LDA =0
1660  28ED- 85 0D              STA DEVICE
1661  28EF- 8A                 TXA
1662  28F0- 85 0C              STA RUNERR
1663  28F2- 20 2D E0           JSR PRTBYT
1664  28F5- A5 0A              LDA PC
1665  28F7- 38                 SEC
1666  28F8- E5 11              SBC STPROG
1667  28FA- 85 00              STA ACCU
1668  28FC- A5 0B              LDA PC+1
1669  28FE- E5 12             SBC STPROG+1
1670  2900- 85 01              STA ACCU+1
1671  2902- F0 0C              BEQ PERROR1
1672  2904- 30 0A              BMI PERROR1
1673  2906- 20 27 E0           JSR PRTINF
1674  2909- 20 61 74           BYT ' at '+128
1674  290C- A0 
1675  290D- 20 AA 23           JSR PRTN
1676                   *
1677  2910- 4C 10 20   PERROR1 JMP STOP
1678                   *
1679                   *
1680                   * WARM START ENTRY POINT
1681                   ************************
1682                   *
1683  2913- AD 81 17   WARMST  LDA SFLAG       SET PASCAL RUNTIME BIT
1684  2916- 09 01              ORA =$01        IN SFLAG
1685  2918- 8D 81 17           STA SFLAG
1686  291B- A2 00              LDX =0
1687  291D- 86 0B              STX PC+1

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 09/03/18   R65 ASSEMBLER  PAGE 35

1688  291F- 86 0D              STX DEVICE
1689  2921- CA                 DEX
1690  2922- 86 16              STX ENDBUF
1691  2924- 86 23              STX IOCHECK
1692  2926- A2 00              LDX =0
1693                   *
1694  2928- A0 00      EXEC    LDY =0
1695  292A- 84 0B              STY PC+1
1696  292C- BD E4 29           LDA EXTABLE,X
1697  292F- 9D 20 03           STA FILNM1,X
1698  2932- E8                 INX
1699  2933- C8                 INY
1700  2934- C0 10              CPY =16
1701  2936- 90 F2              BCC EXEC+2
1702  2938- A9 00              LDA =0
1703  293A- 8D 30 03           STA FILCY1
1704                   *           LDA =1     LOAD SYSTEM:R     FROM
1705                   *           STA FILDRV SAME DRIVE AS PASCAL
1706                   *
1707  293D- A9 00      EXECUTE LDA =0
1708  293F- 85 DA              STA FILFLG
1709  2941- AD 0B 20           LDA USEREND
1710  2944- AE 0C 20           LDX USEREND+1
1711  2947- 38                 SEC
1712  2948- E9 90              SBC =144
1713  294A- B0 01              BCS *+3
1714  294C- CA                 DEX
1715  294D- 85 0E              STA ENDSTK
1716  294F- 86 0F              STX ENDSTK+1
1717                   *
1718  2951- AD 09 20   EXEC1   LDA USERST
1719  2954- AE 0A 20           LDX USERST+1
1720  2957- 85 11      EXEC3   STA STPROG
1721  2959- 86 12              STX STPROG+1
1722  295B- 8D 31 03           STA FILSA1
1723  295E- 8E 32 03           STX FILSA1+1
1724  2961- 20 15 E8           JSR RDFILE      READ FILE TO EXECUTE
1725  2964- F0 04              BEQ EXEC2
1726  2966- AA                 TAX             PASCAL RUNTIME ERROR
1727  2967- 4C D8 28           JMP PERROR
1728                   *
1729  296A- 20 27 E0   EXEC2   JSR PRTINF
1730  296D- 0D 8A              BYT $D,$8A
1731  296F- AD 12 03           LDA FILSTP
1732  2972- C9 52              CMP ='R'        MUST BE PASCAL
1733  2974- F0 05              BEQ RUN           RUNTIME CODE
1734  2976- A2 84              LDX =$84        PASCAL RUNTIME ERROR
1735  2978- 4C D8 28           JMP PERROR      WRONG FILEtYPE
1736                   *
1737  297B- A0 00      RUN     LDY =0          READ END ADDRESS

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 09/03/18   R65 ASSEMBLER  PAGE 36

1738  297D- B1 11              LDA (STPROG),Y  FROM FILE
1739  297F- 18                 CLC
1740  2980- 65 11              ADC STPROG
1741  2982- 85 13              STA EOPROG
1742  2984- C8                 INY
1743  2985- B1 11              LDA (STPROG),Y
1744  2987- 65 12              ADC STPROG+1
1745  2989- 85 14              STA EOPROG+1
1746  298B- A5 13              LDA EOPROG      GET END OF STACK
1747  298D- A6 14              LDX EOPROG+1
1748  298F- 38                 SEC
1749  2990- E9 80              SBC =128
1750  2992- 85 17              STA BASE
1751  2994- 85 08              STA SP
1752  2996- B0 01              BCS *+3
1753  2998- CA                 DEX
1754  2999- 86 18              STX BASE+1
1755  299B- 86 09              STX SP+1
1756                   *
1757  299D- A5 11              LDA STPROG
1758  299F- A6 12              LDX STPROG+1
1759  29A1- 18                 CLC
1760  29A2- 69 02              ADC =2
1761  29A4- 85 0A              STA PC
1762  29A6- 90 01              BCC *+3
1763  29A8- E8                 INX
1764  29A9- 86 0B              STX PC+1
1765  29AB- A9 00              LDA =0
1766  29AD- 85 0C              STA RUNERR
1767  29AF- 20 BA 29   LOOP    JSR EXCODE
1768  29B2- AD 81 17           LDA SFLAG
1769  29B5- 30 20              BMI ESCERR
1770  29B7- 4C AF 29           JMP LOOP
1771                   *
1772                   *
1773  29BA- 20 9D 24   EXCODE  JSR FETCH
1774  29BD- 89 F1              STA =$F1
1775  29BF- C9 54              CMP =$54        TEST CODENUMBER
1776  29C1- 90 05              BCC *+7
1777  29C3- A9 85      ILLC    LDA =$85        PASCAL RUNTIME ERROR
1778  29C5- 4C D8 28           JMP PERROR      ILLEGAL P-CODE
1779                   *
1780  29C8- 0A                 ASL A
1781  29C9- AA                 TAX
1782  29CA- BD F4 29           LDA TABLE,X
1783  29CD- 85 1B              STA ARG1
1784  29CF- BD F5 29           LDA TABLE+1,X
1785  29D2- 85 1C              STA ARG1+1
1786  29D4- 6C 1B 00           JMP (ARG1)
1787                   *

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 09/03/18   R65 ASSEMBLER  PAGE 37

1788  29D7- AD 81 17   ESCERR  LDA SFLAG       CLEAR ESCAPE FLAG
1789  29DA- 29 7F              AND =$7F
1790  29DC- 8D 81 17           STA SFLAG
1791  29DF- A2 86              LDX =$86        PASCAL RUNTIME ERROR
1792  29E1- 4C D8 28           JMP PERROR      ESCAPE DURING EXECUTION
1793                   *
1794  29E4- 53 59 53   EXTABLE BYT 'SYSTEM:R        '
1794  29E7- 54 45 4D 
1794  29EA- 3A 52 20 
1794  29ED- 20 20 20 
1794  29F0- 20 20 20 
1794  29F3- 20 
1795                   *
1796  29F4- 10 20 9A  TABLE   WRD STOP,RETN,NEGA,ADDA,SUBA,MULA
1796  29F7- 20 CD 20 
1796  29FA- DB 20 F7 
1796  29FD- 20 0A 21 
1797  2A00- 6F 21 E1           WRD DIVA,LOWB,TEQU,TNEQ,TLES,TGRE
1797  2A03- 21 EC 21 
1797  2A06- FD 21 07 
1797  2A09- 22 11 22 
1798  2A0C- 17 22 1D           WRD TGRT,TLEE,ORAC,ANDA,EORA,NOTA
1798  2A0F- 22 23 22 
1798  2A12- 35 22 47 
1798  2A15- 22 59 22 
1799  2A18- 69 22 82           WRD LEFT,RIGH,INCA,DECA,COPY,PEEK
1799  2A1B- 22 9F 22 
1799  2A1E- A6 22 AF 
1799  2A21- 22 EA 22 
1800  2A24- F3 22 00           WRD POKE,CALA,RLIN,GETC,GETN,PRTC
1800  2A27- 23 09 23 
1800  2A2A- 38 23 45 
1800  2A2D- 23 A2 23 
1801  2A30- AA 23 1D           WRD PRTN,PRTS,LITB,INCB,LITW,INCW
1801  2A33- 24 53 24 
1801  2A36- 60 24 8F 
1801  2A39- 24 A8 24 
1802  2A3C- C5 24 D7           WRD JUMP,JMPZ,JMPO,LOAD,LODX,STOR
1802  2A3F- 24 EC 24 
1802  2A42- F5 24 43 
1802  2A45- 25 5D 25 
1803  2A48- 7C 25 A2           WRD STOX,CALL,SDEV,RDEV,FNAM,OPNR
1803  2A4B- 25 D8 25 
1803  2A4E- DF 25 E4 
1803  2A51- 25 01 26 
1804  2A54- 12 26 17           WRD OPNW,CLOS,PRTI,GHGH,GLOW,PHGH
1804  2A57- 26 21 26 
1804  2A5A- 2E 26 32 
1804  2A5D- 26 37 26 
1805  2A60- 40 26 49           WRD PLOW,GSEC,PSEC,NBYT,NWRD,LODN

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 09/03/18   R65 ASSEMBLER  PAGE 38

1805  2A63- 26 52 26 
1805  2A66- 81 26 93 
1805  2A69- 26 A8 26 
1806  2A6C- C1 26 D7           WRD STON,LODI,STOI,EXST,TIND,RUNP
1806  2A6F- 26 EC 26 
1806  2A72- F5 26 0B 
1806  2A75- 27 2B 27 
1807  2A78- 6D 27 AB           WRD ADDF,SUBF,MULF,DIVF,FLOF,FIXF
1807  2A7B- 27 B4 27 
1807  2A7E- BD 27 C6 
1807  2A81- 27 D3 27 
1808  2A84- E0 27 01           WRD FEQU,FNEQ,FLES,FGRE,FGRT,FLEE
1808  2A87- 28 08 28 
1808  2A8A- 0F 28 16 
1808  2A8D- 28 1F 28 
1809  2A90- 28 28 31           WRD FCOM,TFER,OPRA,GETR,PUTR,SWA2
1809  2A93- 28 3D 28 
1809  2A96- 4C 28 68 
1809  2A99- 28 78 28 
1810                   *
1811                   * COLDSTART
1812                   ***********
1813                   *
1814  2A9C- 58         COLDST  CLI
1815  2A9D- D8                 CLD
1816  2A9E- AD 09 20           LDA USERST
1817  2AA1- AE 0A 20           LDX USERST+1
1818  2AA4- 85 11              STA STPROG
1819  2AA6- 86 12              STX STPROG+1
1820  2AA8- A0 00              LDY =0
1821  2AAA- 98                 TYA
1822  2AAB- 91 11              STA (STPROG),Y
1823  2AAD- C8                 INY
1824  2AAE- C0 04              CPY =4
1825  2AB0- 90 F9              BCC *-5
1826  2AB2- 4C 13 29           JMP WARMST
1827                   *
1828                           TIT R65 PASCAL: FLP-MATH
1829                           PAG

----------------------------------------------------------------------

R65 PASCAL: FLP-MATH               09/03/18   R65 ASSEMBLER  PAGE 39

1830                   *
1831                   ********************************
1832                   * R65 PASCAL FLP MATH ROUTINES *
1833                   ********************************
1834                   *
1835                   *
1836  2AB5- 18         ADD     CLC
1837  2AB6- A2 02              LDX =2
1838  2AB8- B5 01      ADD1    LDA M1,X
1839  2ABA- 75 1C              ADC M2,X
1840  2ABC- 95 01              STA M1,X
1841  2ABE- CA                 DEX
1842  2ABF- 10 F7              BPL ADD1
1843  2AC1- 60                 RTS
1844                   *
1845  2AC2- 06 10      MD1     ASL SIGN
1846  2AC4- 20 C7 2A           JSR ABSWAP
1847  2AC7- 24 01      ABSWAP  BIT M1
1848  2AC9- 10 05              BPL ABSWP1
1849  2ACB- 20 44 2B           JSR FCOMPL
1850  2ACE- E6 10              INC SIGN
1851  2AD0- 38         ABSWP1  SEC
1852                   *
1853                   * SWAP: EXCHANGE F1 AND F2
1854                   **************************
1855                   *
1856  2AD1- A2 04      SWAP    LDX =4
1857  2AD3- 94 03      SWAP1   STY E-1,X
1858  2AD5- B5 FF              LDA <(X1-1),X
1859  2AD7- B4 1A              LDY X2-1,X
1860  2AD9- 94 FF              STY <(X1-1),X
1861  2ADB- 95 1A              STA X2-1,X
1862  2ADD- CA                 DEX
1863  2ADE- D0 F3              BNE SWAP1
1864  2AE0- 60                 RTS
1865                   *
1866                   * FLOAT: FLOAT M1,M1+1 TO RESULT IN F1
1867                   **************************************
1868                   *
1869  2AE1- A9 8E      FLOAT   LDA =$8E
1870  2AE3- 85 00              STA X1
1871  2AE5- A9 00              LDA =0
1872  2AE7- 85 03              STA M1+2
1873  2AE9- F0 08              BEQ NORM
1874  2AEB- C6 00      NORM1   DEC X1
1875  2AED- 06 03              ASL M1+2
1876  2AEF- 26 02              ROL M1+1
1877  2AF1- 26 01              ROL M1
1878  2AF3- A5 01      NORM    LDA M1
1879  2AF5- 0A                 ASL A

----------------------------------------------------------------------

R65 PASCAL: FLP-MATH               09/03/18   R65 ASSEMBLER  PAGE 40

1880  2AF6- 45 01              EOR M1
1881  2AF8- 30 04              BMI RTS1
1882  2AFA- A5 00              LDA X1
1883  2AFC- D0 ED              BNE NORM1
1884  2AFE- 60         RTS1    RTS
1885                   *
1886                   * FSUB: F1=F2-F1
1887                   ****************
1888                   *
1889  2AFF- 20 44 2B  FSUB    JSR FCOMPL
1890  2B02- 20 12 2B   SWPALG  JSR ALGNSW
1891                   *
1892                   * FADD: F1=F2+F1
1893                   ****************
1894                   *
1895  2B05- A5 1B      FADD    LDA X2
1896  2B07- C5 00              CMP X1
1897  2B09- D0 F7              BNE SWPALG
1898  2B0B- 20 B5 2A           JSR ADD
1899  2B0E- 50 E3      ADDEND  BVC NORM
1900  2B10- 70 05              BVS RTLOG
1901  2B12- 90 BD      ALGNSW  BCC SWAP
1902  2B14- A5 01      RTAR    LDA M1
1903  2B16- 0A                 ASL A
1904  2B17- E6 00      RTLOG   INC X1
1905  2B19- F0 7E              BEQ OVFL
1906  2B1B- A2 FA      RTLOG1  LDX =$FA
1907  2B1D- A9 80      ROR1    LDA =$80
1908  2B1F- B0 01              BCS ROR2
1909  2B21- 0A                 ASL A
1910  2B22- 56 07      ROR2    LSR E+3,X
1911  2B24- 15 07              ORA E+3,X
1912  2B26- 95 07              STA E+3,X
1913  2B28- E8                 INX
1914  2B29- D0 F2              BNE ROR1
1915  2B2B- 60                 RTS
1916                   *
1917                   * FMUL: F1=F2*F1
1918                   ****************
1919                   *
1920  2B2C- 20 C2 2A   FMUL    JSR MD1
1921  2B2F- 65 00              ADC X1
1922  2B31- 20 82 2B           JSR MD2
1923  2B34- 18                 CLC
1924  2B35- 20 1B 2B   MUL1    JSR RTLOG1
1925  2B38- 90 03              BCC MUL2
1926  2B3A- 20 B5 2A           JSR ADD
1927  2B3D- 88         MUL2    DEY
1928  2B3E- 10 F5              BPL MUL1
1929  2B40- 46 10      MDEND   LSR SIGN

----------------------------------------------------------------------

R65 PASCAL: FLP-MATH               09/03/18   R65 ASSEMBLER  PAGE 41

1930  2B42- 90 AF      NORMX   BCC NORM
1931  2B44- 38         FCOMPL  SEC
1932  2B45- A2 03              LDX =3
1933  2B47- A9 00      COMPL1  LDA =0
1934  2B49- F5 00              SBC X1,X
1935  2B4B- 95 00              STA X1,X
1936  2B4D- CA                 DEX
1937  2B4E- D0 F7              BNE COMPL1
1938  2B50- F0 BC              BEQ ADDEND
1939                   *
1940                   * FDIV: F1=F2/F1
1941                   ****************
1942                   *
1943  2B52- 20 C2 2A   FDIV    JSR MD1
1944  2B55- E5 00              SBC X1
1945  2B57- 20 82 2B           JSR MD2
1946  2B5A- 38         FDIV1   SEC
1947  2B5B- A2 02              LDX =2
1948  2B5D- B5 1C      FDIV2   LDA M2,X
1949  2B5F- F5 04              SBC E,X
1950  2B61- 48                 PHA
1951  2B62- CA                 DEX
1952  2B63- 10 F8              BPL FDIV2
1953  2B65- A2 FD              LDX =$FD
1954  2B67- 68         FDIV3   PLA
1955  2B68- 90 02              BCC FDIV4
1956  2B6A- 95 1F              STA M2+3,X
1957  2B6C- E8         FDIV4   INX
1958  2B6D- D0 F8              BNE FDIV3
1959  2B6F- 26 03              ROL M1+2
1960  2B71- 26 02              ROL M1+1
1961  2B73- 26 01              ROL M1
1962  2B75- 06 1E              ASL M2+2
1963  2B77- 26 1D              ROL M2+1
1964  2B79- 26 1C              ROL M2
1965  2B7B- B0 1C              BCS OVFL
1966  2B7D- 88                 DEY
1967  2B7E- D0 DA              BNE FDIV1
1968  2B80- F0 BE              BEQ MDEND
1969  2B82- 86 03      MD2     STX M1+2
1970  2B84- 86 02              STX M1+1
1971  2B86- 86 01              STX M1
1972  2B88- B0 0D              BCS OVCHK
1973  2B8A- 30 04              BMI MD3
1974  2B8C- 68                 PLA
1975  2B8D- 68                 PLA
1976  2B8E- 90 B2              BCC NORMX
1977  2B90- 49 80      MD3     EOR =$80
1978  2B92- 85 00              STA X1
1979  2B94- A0 17              LDY =$17

----------------------------------------------------------------------

R65 PASCAL: FLP-MATH               09/03/18   R65 ASSEMBLER  PAGE 42

1980  2B96- 60                 RTS
1981  2B97- 10 F7      OVCHK   BPL MD3
1982  2B99- 4C A6 21   OVFL    JMP DIV1-5      PASCAL RUNTIME ERROR
1983                   *
1984                   * FIX: FIX F1 IN M1, M1+1
1985                   *************************
1986                   *
1987  2B9C- 20 14 2B           JSR RTAR
1988  2B9F- A5 00      FIX     LDA X1
1989  2BA1- C9 8E              CMP =$8E
1990  2BA3- D0 F7              BNE FIX-3
1991  2BA5- 60         RTRN    RTS
1992                   *
1993                           TIT R65 PASCAL: RANDOM ACCESS
1994                           PAG

----------------------------------------------------------------------

R65 PASCAL: RANDOM ACCESS          09/03/18   R65 ASSEMBLER  PAGE 43

1995                   *
1996                   * RANDOM ACCESS FILE HANDLER
1997                   ****************************
1998                   *
1999                   *
2000                   * OPENRA: OPEN A FILE FOR RANDOM ACCESS
2001                   ***************************************
2002                   *
2003                   * ENTRY: FILNM1,FILCY1,FILDRV,FILFLG
2004                   * FILFLG: BIT 7: PROTECTED (NEW ONLY)*
2005                   *         BIT 6: NO PRINTED OUTPUT
2006                   *         BIT 5: DIRECTION (0=READ)
2007                   *         BIT 4: 1=NEW, 0=OLD
2008                   *
2009                   * NEW ONLY: MAXSIZ,FILSA
2010                   *
2011                   * EXIT: NO OF OPEN FILE IN Y, STATUS IN A
2012                   *       AND FILERR, Y IS ONLY VALID
2013                   *       IF A=0
2014                   *
2015                   *
2016  2BA6- AC 36 03   OPENRA  LDY MAXSEQ      SEARCH EMPTY ENTRY
2017  2BA9- B9 39 03           LDA FIDRTB,Y    BIT 5=1: ENTRY USED
2018  2BAC- 29 20              AND =$20
2019  2BAE- F0 08              BEQ OPENRA1     FOUND, SKIP
2020  2BB0- 88                 DEY
2021  2BB1- 10 F6              BPL OPENRA+3
2022                   *
2023  2BB3- A9 23              LDA =$23        TOO MANY OPEN FILES
2024  2BB5- 85 DB              STA FILERR
2025  2BB7- 60                 RTS
2026                   *
2027  2BB8- 8C 35 03   OPENRA1 STY CURSEQ      SAVE CURRENT ENTRY NO
2028  2BBB- A5 DC              LDA FILDRV      GET AND TEST DRIVE
2029  2BBD- 99 41 03           STA FIDVTB,Y
2030  2BC0- 29 FE              AND =$FE
2031  2BC2- F0 05              BEQ OPENRA2     SKIP, IF OK
2032                   *
2033  2BC4- A9 28              LDA =$28        ILLEGAL DRIVE FOR RA
2034  2BC6- 85 DB              STA FILERR
2035  2BC8- 60                 RTS
2036                   *
2037  2BC9- A9 10      OPENRA2 LDA =$10        TEST OLD/NEW FLAG
2038  2BCB- 25 DA              AND FILFLG
2039  2BCD- F0 78              BEQ OPENOLD     SKIP, IF OLF
2040                   *
2041                   * OPEN A NEW FILE
2042                   *
2043  2BCF- A5 DA      OPENNEW LDA FILFLG
2044  2BD1- 29 80              AND =$80        GET PROTECTED FLAG

----------------------------------------------------------------------

R65 PASCAL: RANDOM ACCESS          09/03/18   R65 ASSEMBLER  PAGE 44

2045  2BD3- 09 42              ORA ='B'        BLOCK FILE
2046  2BD5- 8D 00 03           STA FILTYP      SET FILE TYPE
2047                   *
2048  2BD8- A9 00              LDA =0
2049  2BDA- AD 37 03           LDA MAXSIZ      SIZE OF FILE
2050  2BDD- 8D 15 03           STA FILSIZ
2051  2BE0- 8E 16 03           STX FILSIZ+1
2052                   *
2053  2BE3- CA                 DEX             COMPUTE FILEA
2054  2BE4- AD 1A 03           LDA FILSA
2055  2BE7- 18                 CLC
2056  2BE8- 69 FF              ADC =$FF
2057  2BEA- 8D 1C 03           STA FILEA
2058  2BED- 8A                 TXA
2059  2BEE- 6D 1B 03           ADC FILSA+1
2060  2BF1- 8D 1D 03           STA FILEA+1
2061                   *
2062  2BF4- 20 1E E8           JSR SETFID      SET FILEDATE
2063                   *
2064  2BF7- A2 10              LDX =16
2065  2BF9- BD 20 03   OPENNE1 LDA FILNM1,X    SET FILNM1 AND FILCY1
2066  2BFC- 9D 01 03           STA FILNAM,X    TO FILNAM AND FILCYC
2067  2BFF- CA                DEX
2068  2C00- 10 F7              BPL OPENNE1
2069                   *
2070                   * SEARCH IN DIRECTORY AND RETURN CYCLUS
2071                   * AND DIRECTORY ENTRY TO USE, TEST EXISTING
2072                   * FILES FOR SAME NAME AND CYCLUS, DISK
2073                   * OPERATION IS INITIALIZED
2074                   *
2075  2C02- 20 94 20           JSR PREPWRA
2076  2C05- 8E 11 03           STX FILCYC
2077                   *
2078                   * FIND FIRST EMPTY DISK DIRECTORY ENTR
2079                   * FETCH ITAND SET FIRST SECTOR OF FILE TO
2080                   * FILLOC, OUTPUT Y,X AS NUMBER OF EMPTY
2081                   * SECTORS
2082                   *
2083  2C08- 20 97 20           JSR PREPWRB
2084  2C0B- 8A                 TXA
2085  2C0C- CD 16 03           CMP FILSIZ+1
2086  2C0F- 98                 TYA
2087  2C10- E9 00              SBC =0          COMPARE WITH REQUESTED
2088  2C12- B0 05              BCS OPENNE3     SECTORS
2089                   *
2090  2C14- A9 26              LDA =$26        DISK OVERFLOW
2091  2C16- 4C 8B 20           JMP DISCER1
2092                   *
2093                   * SET FITEMP,Y AND FITEMP+8,YNTO FIRST SECTOT
2094                   * OF FILE ON DISK, FIMAXT,Y TO SIZE, DIRECTORY

----------------------------------------------------------------------

R65 PASCAL: RANDOM ACCESS          09/03/18   R65 ASSEMBLER  PAGE 45

2095                   * ENTRY NO TO FITEMP+16,Y
2096                   * THEN PUT THIS ENTRY ONTO THE DISKMAND SET
2097                   * A NEW END OF DIRECTORY MARK
2098                   *
2099  2C19- 20 70 20   OPENNE3 JSR DOPEN4
2100                   *
2101  2C1C- AC 35 03           LDY CURSEQ      SETUP DUMMY FIRST SECTOR
2102  2C1F- A9 00              LDA =0
2103  2C21- 99 49 03           STA FIBPTB,Y
2104  2C24- 99 51 03           STA FIRCTB,Y
2105                   *
2106  2C27- AC 35 03   OPENNE4 LDY CURSEQ      OPEN FILE
2107  2C2A- A5 DA              LDA FILFLG
2108  2C2C- 0A                 ASL A
2109  2C2D- 0A                 ASL A
2110  2C2E- 29 80              AND =$80        GET DIRECTION
2111  2C30- 48                 PHA
2112  2C31- 2D 00 03           AND FILTYP
2113  2C34- F0 06              BEQ OPENNE5     OK, SKIP
2114  2C36- 68                 PLA             PROTECTED FILE
2115                   *
2116  2C37- A9 29              LDA =$29
2117  2C39- 85 DB              STA FILERR
2118  2C3B- 60                 RTS
2119                   *
2120  2C3C- 68         OPENNE5 PLA
2121  2C3D- 09 60              ORA =$60        RA FILE, OPENIT
2122  2C3F- 99 39 03           STA FIDRTB,Y
2123                   *
2124  2C42- A9 00              LDA =0          NORMALEXIT
2125  2C44- 85 DB              STA FILERR
2126  2C46- 60         OPENNE6 RTS
2127                   *
2128                   * OPEN AN OLD FILE:
2129                   * PREPARE DISK OPERATION, SEARCH REQUESTED
2130                   * FILE AND GET CORRSPONDING DISK ENTRY
2131                   *
2132  2C47- 20 91 20   OPENOLD JSR PREPRD
2133                   *
2134  2C4A- 20 73 20           JSR PRFLB1      PRINT LABEL, IF REQ.
2135  2C4D- AD 00 03           LDA FILTYP
2136  2C50- 29 7F              AND =$7F
2137  2C52- C9 42              CMP ='B'        MUST BE BLOCK FILE
2138  2C54- F0 05              BEQ OPENOL1     SKIP, IF OK
2139                   *
2140  2C56- A9 05              LDA =5
2141  2C58- 4C 8B 20           JMP DISCER1     FILE TYPE ERROR
2142                   *
2143  2C5B- 20 8E 20   OPENOL1 JSR ENDDO       END OF DISK OPERATION
2144                   *

----------------------------------------------------------------------

R65 PASCAL: RANDOM ACCESS          09/03/18   R65 ASSEMBLER  PAGE 46

2145                   * SET NOW FIRST SECTOR AND SIZE TO TABLE
2146                   *
2147  2C5E- 20 6D 20           JSR DOPEN1
2148                   *
2149  2C61- A9 00              LDA =0          GET FIRST RECORD
2150  2C63- 20 6A 2C           JSR GETTREC
2151  2C66- D0 DE              BNE OPENNE6     SKIP, IF NOT OK
2152  2C68- F0 BD              BEQ OPENNE4     ELSE OPEN FILE
2153                   *
2154                   *
2155                   * GETTREC: GET ONE RECORD FROM RA-FILE
2156                   * RECORD NUMBER IS IN A, FILE NUMBER IN CURSEQ
2157                   * RESULT IUS Z=1,OF OK, ELSE Z=0 AND FILERR
2158                   *
2159  2C6A- AE 35 03   GETTREC LDX CURSEQ      SAVE RECORD NO
2160  2C6D- 9D 51 03           STA FIRCTB,X
2161  2C70- A9 00              LDA =0          CLEAR UPDATED FLAG
2162  2C72- 9D 49 03           STA FIBPTB,X
2163  2C75- BD 41 03           LDA FIDVTB,X    SET DRIVE NO
2164  2C78- 85 DC              STA FILDRV
2165                   *
2166                   * COMPUTE DATA-POINTER AND BINARY
2167                   * TRACK,SECTOR, SETUP FILDRV
2168                   *
2169  2C7A- 20 79 20           JSR PREPSR
2170                   *
2171                   * ADD RECORD NUMBER TO BINARY TRAC/SECTOR
2172                   * TEST SIZE OF FILE, CONVERT TO TRACK AND
2173                   * SECTOR, INITIALIZE DISK OPERATION
2174                   *
2175  2C7D- 20 7C 20           JSR PREPSR1
2176                   *
2177  2C80- 20 82 20           JSR READ        READ ON SECTOR
2178                   *
2179  2C83- 4C 8E 20           JMP ENDDO       END OF DISK OPERATION
2180                   *
2181                   * PUTTREC: SAVE CURRENT RECORD ON DISK
2182                   * FILE NUMBER IN CURSEQ, RECORD NUMBER IN
2183                   * FIRCTB,Y, RETURNS Z=1 IF OK, ELSE FILERR
2184                   *
2185  2C86- BD 41 03   PUTTREC LDA FIDVTB,X
2186  2C89- 85 DC              STA FILDRV
2187  2C8B- 20 79 20           JSR PREPSR      SEE GETTREC FOR
2188  2C8E- 20 7C 20           JSR PREPSR1     COMMENTS
2189  2C91- 20 85 20           JSR WRITE
2190  2C94- 4C 8E 20           JMP ENDDO
2191                   *
2192                   * GETNEWR: GET A NEW RECORD, SAVE OLD, IF
2193                   * OLD HAS BEEN UPDATED
2194                   * ENTRY: NEW RECORD IN A, FILE NO IN CURSEQ

----------------------------------------------------------------------

R65 PASCAL: RANDOM ACCESS          09/03/18   R65 ASSEMBLER  PAGE 47

2195                   * EXIT: z=1 IF OK, ELSE FILERR
2196                   *
2197  2C97- 8D 34 03   GETNEWR STA SAVRST+1    SAVE REQUESTED RECORD
2198  2C9A- AE 35 03           LDX CURSEQ
2199  2C9D- BD 49 03           LDA FIBPTB,X    UPDATED?
2200  2CA0- 10 05              BPL GETNEW1
2201                   *
2202  2CA2- 20 86 2C           JSR PUTTREC     YES, SAVE IT
2203  2CA5- D0 23              BNE EXIT
2204                   *
2205  2CA7- AD 34 03   GETNEW1 LDA SAVRST+1    GET REQUESTED RECORD
2206  2CAA- 4C 6A 2C           JMP GETTREC
2207                   *
2208                   * GETBYTE: GET ONE BYTE FROM FILE
2209                   *********************************
2210                   * ENTRY: FILE NUMBER IN X
2211                   *        POINTER IN A(LOW) AND Y(HIGH)
2212                   * EXIT:  FILERR IN Y AND STATUS, BYTE IN A
2213                   *
2214  2CAD- 8D 33 03   GETBYTE STA SAVRST      SAVE A
2215  2CB0- 20 FA 2C           JSR TESTRA
2216                   *
2217  2CB3- 98                 TYA
2218  2CB4- DD 51 03           CMP FIRCTB,X    IS IT IN CURRENT RECORD?
2219  2CB7- F0 05              BEQ GETBYT1     YES, SKIP
2220                   *
2221  2CB9- 20 97 2C           JSR GETNEWR     NO, GET NEW RECORD
2222  2CBC- D0 0C              BNE EXIT
2223                   *
2224  2CBE- 20 76 20   GETBYT1 JSR CPOINT      COMPUTE BUFFER PNT
2225  2CC1- AC 33 03           LDY SAVRST      RESTORE LOW POINTER
2226  2CC4- B1 FA              LDA (POINT),Y   GET THE BYTE
2227  2CC6- A0 00              LDY =0
2228  2CC8- 84 DB              STY FILERR      OK
2229  2CCA- 60         EXIT    RTS
2230                   *
2231                   * PUTBYTE: PUT ONE BYTE TO FILE
2232                   *******************************
2233                   *
2234                   * ENTRY: BYTE STORED IN KCHAR
2235                   *        FILE NUMBER IN X
2236                   *        POINTER IN A(LOW) AND Y(HIGH)
2237                   * EXIT:  FILERR IN Y AND STATUS
2238                   *
2239  2CCB- 8D 33 03   PUTBYTE STA SAVRST
2240  2CCE- 20 FA 2C           JSR TESTRA
2241  2CD1- BD 39 03           LDA FIDRTB,X    IS WRITE ALLOWED?
2242  2CD4- 10 05              BPL PUTBYT0     YES,SKIP
2243  2CD6- A0 29              LDY =$29        WRITE NOT ALLOWED
2244  2CD8- 84 DB              STY FILERR

----------------------------------------------------------------------

R65 PASCAL: RANDOM ACCESS          09/03/18   R65 ASSEMBLER  PAGE 48

2245  2CDA- 60                 RTS
2246                   *
2247  2CDB- 98         PUTBYT0 TYA             FOR COMMENTS
2248  2CDC- DD 51 03           CMP FIRCTB,X    SEE GETBYTE
2249  2CDF- F0 05              BEQ PUTBYT1
2250                   *
2251  2CE1- 20 97 2C           JSR GETNEWR
2252  2CE4- D0 E4              BNE EXIT
2253                   *
2254  2CE6- 20 76 20   PUTBYT1 JSR CPOINT
2255  2CE9- A9 80              LDA =$80        SET UPDATED FLAG
2256  2CEB- 9D 49 03           STA FIBPTB,X
2257  2CEE- AC 33 03           LDY SAVRST
2258  2CF1- A5 FE              LDA KCHAR       GET BACK KCHAR
2259  2CF3- 91 FA              STA (POINT),Y
2260  2CF5- A0 00              LDY =0
2261  2CF7- 84 DB              STY FILERR
2262  2CF9- 60                 RTS
2263                   *
2264                   *
2265                   * TESTRA: TEST X FOR LEGAL RA-FILE
2266                   *
2267  2CFA- 8E 35 03   TESTRA  STX CURSEQ
2268  2CFD- EC 36 03          CPX MAXSEQ
2269  2D00- B0 0A              BCS TESTRA2
2270                   *
2271  2D02- BD 39 03   TESTRA1 LDA FIDRTB,X
2272  2D05- 29 60              AND =$60
2273  2D07- C9 60              CMP =$60
2274  2D09- D0 03              BNE TESTRA3     SKIP, IF NOT OK
2275  2D0B- 60                 RTS
2276                   *
2277  2D0C- F0 F4      TESTRA2 BEQ TESTRA1
2278  2D0E- 68         TESTRA3 PLA
2279  2D0F- 68                 PLA
2280  2D10- A0 25              LDY =$25        FILE NUMBER NOT ALLOWED
2281  2D12- 84 DB              STY FILERR
2282  2D14- 60                 RTS
2283                   *
2284                   * CLOSRA: CLOSE RA OR SEQUENTIAL FILE IN X
2285                   ******************************************
2286                   * ENTRY: FILE IN X
2287                   * EXIT: FILERR IN Y AND STATUS
2288                   *
2289  2D15- BD 39 03   CLOSRA  LDA FIDRTB,X
2290  2D18- 29 40              AND =$40        SEQUENTIAL FILE?
2291  2D1A- D0 03              BNE CLOSRA1     NO, SKIP
2292  2D1C- 4C 7F 20           JMP CLOSE       YES, CLOSE IT
2293                   *
2294  2D1F- 20 FA 2C   CLOSRA1 JSR TESTRA      MUST BE RA-FILE

----------------------------------------------------------------------

R65 PASCAL: RANDOM ACCESS          09/03/18   R65 ASSEMBLER  PAGE 49

2295  2D22- BD 49 03           LDA FIBPTB,X    UPDATED?
2296  2D25- F0 05              BEQ CLOSRA2     NO, SKIP
2297                   *
2298  2D27- 20 86 2C           JSR PUTTREC
2299  2D2A- D0 0B              BNE CLOSRA3
2300                   *
2301  2D2C- AE 35 03   CLOSRA2 LDX CURSEQ
2302  2D2F- A9 00              LDA =0
2303  2D31- 9D 39 03           STA FIDRTB,X    CLOSE IT
2304  2D34- A8                 TAY
2305  2D35- 84 DB              STY FILERR
2306  2D37- 60         CLOSRA3 RTS
2307                   *
2308                   ENDCODE EQU *
2309                   *
2310                           TIT R65 PASCAL: LABELS
2311                   *
2312  2D38-                    END
LABELS=014D
ERRORS=00
RECORDS=72
