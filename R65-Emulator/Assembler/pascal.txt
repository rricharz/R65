----------------------------------------------------------------------

R65 PASCAL: LABELS                 24/10/23   R65 ASSEMBLER  PAGE 01

0001                   *
0002                   *       **********************
0003                   *       * R65 PASCAL RUNTIME *
0004                   *       **********************
0005                   *
0006                   * VERSION 5.3 01/06/82 RRICHARZ,RBAUMANN
0007                   * Modified 22/09/19 RRICHARZ
0008                   * Graphics text devices added
0009                   *
0010                           TIT R65 PASCAL RUNTIME
0011                   *
0012                   * INCLUDES RANDOM ACCESS FILE HANDLING,
0013                   * FLOATING POINT MATH, FILE HANDLING ERROR
0014                   * TESTING (OPTIONAL)
0015                   *
0016                           ORG 0
0017                   *
0018  0000-            ACCU    BSS 4   TOP OF STACKELEMENT
0019                   X1      EQU ACCU        FLP ACCU
0020                   M1      EQU ACCU+1
0021  0004-            E       BSS 4   FLP SCRATCH REGISTER
0022  0008-            SP      BSS 2   CURRENT STACK (-128)
0023  000A-            PC      BSS 2   PROGRAM COUNTER
0024  000C-            RUNERR  BSS 1   RUNTIME ERROR CODE
0025  000D-            DEVICE  BSS 1   I/O DEVICE CODE
0026  000E-            ENDSTK  BSS 2   END OF STACK (-128)
0027  0010-            SIGN    BSS 1   TEMPORARY SIGN
0028  0011-            STPROG  BSS 2   START OF USER PROGRAM
0029  0013-            EOPROG  BSS 2   END OF USER PRORMA
0030  0015-            BUFFPN  BSS 1   INPUT BUFFER POINTER
0031  0016-            ENDBUF  BSS 1   END OF INPUT BUFFER
0032  0017-            BASE    BSS 2   CURRENT BASE (-128)
0033  0019-            ABASE   BSS 2   ALTERNATE BASE (-128)
0034  001B-            ARG1    BSS 2   TEMPORARY ARGUMENT
0035  001D-            ARG3    BSS 4   TEMPORARY REGISTERS
0036  0021-            ARG2    BSS 2
0037                   X2      EQU ARG1        FLP REGISTER
0038                   M2      EQU ARG1+1
0039  0023-            IOCHECK BSS 1   IO ERROR CHECKING FLAG
0040  0024-            LINBUF  BSS 56  INPUT LINE BUFFER
0041                   *
0042                   FILFLG  EQU $DA
0043                   FILERR  EQU $DB
0044                   FILDRV  EQU $DC
0045                   TRACK   EQU $DD
0046                   SECTOR  EQU $DE
0047                   DATA    EQU $E0
0048                   VIDPNT  EQU $E9
0049                   POINT   EQU $FA
0050                   KCHAR   EQU $FE

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 24/10/23   R65 ASSEMBLER  PAGE 02

0051                   *
0052                   EMUCOM  EQU $1430       EMULATOR COMMAND REG
0053                   MULTA   EQU $14E0
0054                   MULTB   EQU $14E1
0055                   MULTR   EQU $14E2
0056                   *
0057                   FILTYP  EQU $0300
0058                   FILNAM  EQU $0301
0059                   FILCYC  EQU $0311
0060                   FILSTP  EQU $0312
0061                   FILLOC  EQU $0313
0062                   FILSIZ  EQU $0315
0063                   FILSA   EQU $031A
0064                   FILEA   EQU $031C
0065                   FILNM1  EQU $0320
0066                   FILCY1  EQU $0330
0067                   FILSA1  EQU $0331
0068                   SAVRST  EQU $0333
0069                   CURSEQ  EQU $0335
0070                   MAXSEQ  EQU $0336
0071                   MAXSIZ  EQU $0337
0072                   FIDRTB  EQU $0339
0073                   FIDVTB  EQU $0341
0074                   FIBPTB  EQU $0349
0075                   FIRCTB  EQU $0351
0076                   GRX     EQU $03AE
0077                   GRY     EQU $03AF
0078                   GRC     EQU $03B0
0079                   SFLAG   EQU $1781
0080                   NUMCHR  EQU $178A
0081                   VMON    EQU $17D5
0082                   SAVS    EQU $17FF
0083                   *
0084                   APLOTCH EQU $C818
0085                   GETKEY  EQU $E000
0086                   AUTOPR  EQU $E00C
0087                   ENDLIN  EQU $E024
0088                   PRTINF  EQU $E027
0089                   GETCHR  EQU $E003
0090                   GETLIN  EQU $E006
0091                   PRTCHR  EQU $E009
0092                   PRTBYT  EQU $E02D
0093                   PRTAX   EQU $E030
0094                   PRTRSA  EQU $E836
0095                   RDFILE  EQU $E815
0096                   SETFID  EQU $E81E
0097                   OPEN    EQU $F00F
0098                   READCH  EQU $F018
0099                   WRITCH  EQU $F01B
0100                   GETNAM  EQU $F815

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 24/10/23   R65 ASSEMBLER  PAGE 03

0101                   *
0102  005C-                    ORG $2000
0103                   *
0104                           PAG

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 24/10/23   R65 ASSEMBLER  PAGE 04

0105                   *
0106                   * ENTRY VECTORS
0107                   *
0108  2000- 4C C2 2A           JMP COLDST      COLD START ENTRY VECTOR
0109  2003- 4C 36 29           JMP WARMST      WARM START ENTRY VECTOR
0110  2006- 4C FB 28           JMP PERROR      PASCAL ERROR
0111                   *
0112  2009- 7E 2D      USERST  WRD ENDCODE+32
0113  200B- FF C7      USEREND WRD $C7FF
0114                   *
0115  200D- 4C F2 FC   HARGUM  JMP $FCF2       #######
0116                   *
0117                   *
0118                   * P-CODE 00:  STOP      (END OF EXECUTION)
0119                   ******************
0120                   * NO ARGUMENTS
0121                   *
0122  2010- A5 11      STOP    LDA STPROG      IS ANOTHER PROGRAM
0123  2012- A6 12              LDX STPROG+1    RUNNING?
0124  2014- CD 09 20           CMP USERST
0125  2017- D0 1E              BNE STOP1
0126  2019- EC 0A 20           CPX USERST+1
0127  201C- D0 19              BNE STOP1
0128                   *
0129  201E- 20 27 E0           JSR PRTINF      NO, STOP PASCAL
0130  2021- 51 75 69           BYT 'Quit Pascal'+$80
0130  2024- 74 20 50 
0130  2027- 61 73 63 
0130  202A- 61 EC 
0131  202C- AD 81 17           LDA SFLAG
0132  202F- 29 FE              AND =$FE        CLEAR PASCAL RUNTIME BIT
0133  2031- 8D 81 17           STA SFLAG       IN SFLAG
0134  2034- 6C D5 17           JMP (VMON)
0135                   *
0136  2037- 38         STOP1   SEC             YES, COMPUTE OLD SP
0137  2038- E9 8C              SBC =140
0138  203A- B0 01              BCS *+3
0139  203C- CA                 DEX
0140  203D- 85 08              STA SP
0141  203F- 86 09              STX SP+1
0142  2041- A0 8C              LDY =140
0143  2043- 20 5C 27           JSR GETBACK
0144  2046- 85 13              STA EOPROG
0145  2048- 86 14              STX EOPROG+1
0146  204A- 20 5C 27           JSR GETBACK
0147  204D- 85 11              STA STPROG
0148  204F- 86 12              STX STPROG+1
0149  2051- 20 5C 27           JSR GETBACK
0150  2054- 85 0A              STA PC
0151  2056- 86 0B              STX PC+1

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 24/10/23   R65 ASSEMBLER  PAGE 05

0152  2058- 20 5C 27           JSR GETBACK
0153  205B- 85 17              STA BASE
0154  205D- 86 18              STX BASE+1
0155  205F- 20 5C 27           JSR GETBACK
0156  2062- 85 00              STA ACCU
0157  2064- 86 01              STX ACCU+1
0158  2066- AE FF 17           LDX SAVS        RESTORE STACK POINTER
0159  2069- 9A                 TXS
0160  206A- 4C D1 29           JMP LOOP
0161                   *
0162                   *
0163  206D- 4C FF F0   DOPEN1  JMP $F0FF
0164  2070- 4C 45 F1   DOPEN4  JMP $F145
0165  2073- 4C 51 F1   PRFLB1  JMP $F151
0166  2076- 4C 59 F1   CPOINT  JMP $F159
0167  2079- 4C E0 F1   PREPSR  JMP $F1E0
0168  207C- 4C 9E F2   PREPSR1 JMP $F29E
0169  207F- 4C BF F2   CLOSE   JMP $F2BF
0170  2082- 4C 57 F4   READ    JMP $F457
0171  2085- 4C 25 F4   WRITE   JMP $F425
0172  2088- 4C A7 F4   PREPDO  JMP $F4A7
0173  208B- 4C FD F5   DISCER1 JMP $F5FD
0174  208E- 4C 25 F6   ENDDO   JMP $F625
0175  2091- 4C 2C F6   PREPRD  JMP $F62C
0176  2094- 4C 51 F6   PREPWRA JMP $F651
0177  2097- 4C 6D F6   PREPWRB JMP $F66D
0178                   *
0179                   *
0180                   * P-CODE 01: RETN       (RETURN FROM PROCEDURE
0181                   *****************
0182                   * NO ARGUMENTS
0183                   *
0184  209A- A5 17      RETN    LDA BASE        SP=BASE-2
0185  209C- 38                 SEC
0186  209D- E9 02              SBC =2
0187  209F- 85 08              STA SP
0188  20A1- A5 18              LDA BASE+1
0189  20A3- E9 00              SBC =0
0190  20A5- 85 09              STA SP+1
0191  20A7- A0 80              LDY =128        GET STACK TOP ELEMENT
0192  20A9- B1 08              LDA (SP),Y
0193  20AB- 85 00              STA ACCU
0194  20AD- C8                 INY
0195  20AE- B1 08              LDA (SP),Y
0196  20B0- 85 01              STA ACCU+1
0197  20B2- A0 84              LDY =132
0198  20B4- B1 08              LDA (SP),Y      GET SAVED OLD BASE
0199  20B6- 85 17              STA BASE
0200  20B8- C8                 INY
0201  20B9- B1 08              LDA (SP),Y

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 24/10/23   R65 ASSEMBLER  PAGE 06

0202  20BB- 85 18              STA BASE+1
0203  20BD- C8                 INY
0204  20BE- B1 08              LDA (SP),Y      AND RETURN ADDRESS
0205  20C0- 18                 CLC
0206  20C1- 69 02              ADC =2
0207  20C3- 85 0A              STA PC
0208  20C5- C8                 INY
0209  20C6- B1 08              LDA (SP),Y
0210  20C8- 69 00              ADC =0
0211  20CA- 85 0B              STA PC+1
0212  20CC- 60                 RTS
0213                   *
0214                   * P-CODE 02: NEGA       (NEGATE ACCU)
0215                   *****************
0216                   * NO ARGUMENTS
0217                   *
0218  20CD- A9 00      NEGA    LDA =0
0219  20CF- 38                 SEC
0220  20D0- E5 00              SBC ACCU
0221  20D2- 85 00              STA ACCU
0222  20D4- A9 00              LDA =0
0223  20D6- E5 01              SBC ACCU+1
0224  20D8- 85 01              STA ACCU+1
0225  20DA- 60                 RTS
0226                   *
0227                   * P-CODE 03: ADDA       (ADD)
0228                   *****************
0229                   * NO ARGUMENTS
0230                   *
0231  20DB- A0 7E      ADDA    LDY =126
0232  20DD- 18                 CLC
0233  20DE- B1 08              LDA (SP),Y
0234  20E0- 65 00              ADC ACCU
0235  20E2- 85 00              STA ACCU
0236  20E4- C8                 INY
0237  20E5- B1 08              LDA (SP),Y
0238  20E7- 65 01              ADC ACCU+1
0239  20E9- 85 01              STA ACCU+1
0240                   *
0241  20EB- A5 08      DECS2   LDA SP
0242  20ED- 38                 SEC
0243  20EE- E9 02              SBC =2
0244  20F0- 85 08              STA SP
0245  20F2- B0 02              BCS *+4
0246  20F4- C6 09              DEC SP+1
0247  20F6- 60                 RTS
0248                   *
0249                   * P-CODE 04: SUBA       (SUBTRACT)
0250                   *****************
0251                   * NO ARGUMENTS

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 24/10/23   R65 ASSEMBLER  PAGE 07

0252                   *
0253  20F7- A0 7E      SUBA    LDY =126
0254  20F9- 38                 SEC
0255  20FA- B1 08              LDA (SP),Y
0256  20FC- E5 00              SBC ACCU
0257  20FE- 85 00             STA ACCU
0258  2100- C8                 INY
0259  2101- B1 08              LDA (SP),Y
0260  2103- E5 01              SBC ACCU+1
0261  2105- 85 01              STA ACCU+1
0262  2107- 4C EB 20           JMP DECS2
0263                   *
0264                   * P-CODE 05: MULA       (MULTIPLY)
0265                   *****************
0266                   * NO ARGUMENTS
0267                   *
0268  210A- 20 44 21   MULA    JSR GETSIGN     COMPUTE SIGN OF RESULT
0269  210D- A5 00              LDA ACCU
0270  210F- 78                 SEI
0271  2110- 8D E0 14           STA MULTA
0272  2113- A5 1B              LDA ARG1        GET SAVED ARGUMENT
0273  2115- 8D E1 14           STA MULTB
0274  2118- AD E2 14           LDA MULTR
0275  211B- 85 00              STA ACCU
0276  211D- AD E3 14           LDA MULTR+1
0277  2120- A6 1C              LDX ARG1+1
0278  2122- 8E E1 14           STX MULTB
0279  2125- 18                 CLC
0280  2126- 6D E2 14           ADC MULTR
0281  2129- A6 01              LDX ACCU+1
0282  212B- 8E E0 14           STX MULTA
0283  212E- A6 1B              LDX ARG1
0284  2130- 8E E1 14           STX MULTB
0285  2133- 18                 CLC
0286  2134- 6D E2 14           ADC MULTR
0287  2137- 58                 CLI
0288  2138- 29 7F              AND =$7F
0289  213A- 85 01              STA ACCU+1
0290  213C- 20 EB 20           JSR DECS2
0291  213F- A5 10              LDA SIGN
0292  2141- 30 8A              BMI NEGA
0293  2143- 60                 RTS
0294                   *
0295  2144- A5 01      GETSIGN LDA ACCU+1
0296  2146- 85 10              STA SIGN
0297  2148- 10 03              BPL *+5
0298  214A- 20 CD 20           JSR NEGA
0299                   *
0300  214D- A0 7F              LDY =127
0301  214F- B1 08              LDA (SP),Y

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 24/10/23   R65 ASSEMBLER  PAGE 08

0302  2151- 10 14              BPL GETSI1
0303  2153- 45 10              EOR SIGN
0304  2155- 85 10              STA SIGN
0305  2157- 88                 DEY
0306  2158- A9 00              LDA =0
0307  215A- 38                 SEC
0308  215B- F1 08              SBC (SP),Y
0309  215D- 85 1B              STA ARG1
0310  215F- C8                 INY
0311  2160- A9 00              LDA =0
0312  2162- F1 08              SBC (SP),Y
0313  2164- 85 1C              STA ARG1+1
0314  2166- 60                 RTS
0315                   *
0316  2167- 85 1C      GETSI1  STA ARG1+1
0317  2169- 88                 DEY
0318  216A- B1 08              LDA (SP),Y
0319  216C- 85 1B              STA ARG1
0320  216E- 60                 RTS
0321                   *
0322                   * PCODE 06: DIVA        (DIVIDE)
0323                   ****************
0324                   *
0325  216F- A0 7E      DIVA    LDY =126
0326  2171- B1 08              LDA (SP),Y
0327  2173- 85 1B              STA ARG1
0328  2175- C8                 INY
0329  2176- B1 08              LDA (SP),Y
0330  2178- 85 1C              STA ARG1+1
0331  217A- 20 EB 20           JSR DECS2
0332                   *
0333  217D- A5 1C              LDA ARG1+1
0334  217F- 29 80              AND =$80
0335  2181- F0 02              BEQ *+4
0336  2183- A9 FF              LDA =$FF
0337  2185- 85 21              STA ARG2
0338  2187- 85 22              STA ARG2+1
0339  2189- AA                 TAX
0340  218A- 18                 CLC
0341  218B- 65 1B              ADC ARG1
0342  218D- 85 1B              STA ARG1
0343  218F- 8A                 TXA
0344  2190- 65 1C              ADC ARG1+1
0345  2192- 85 1C              STA ARG1+1
0346  2194- 8A                 TXA
0347  2195- 45 01              EOR ACCU+1
0348  2197- 85 10              STA SIGN
0349  2199- 10 03              BPL *+5
0350  219B- 20 CD 20           JSR NEGA
0351  219E- A0 11              LDY =$11

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 24/10/23   R65 ASSEMBLER  PAGE 09

0352  21A0- A5 00              LDA ACCU
0353  21A2- 05 01              ORA ACCU+1
0354  21A4- D0 05              BNE DIV1
0355  21A6- A2 81              LDX =$81        PASCAL RUNTIME ERROR
0356  21A8- 4C FB 28           JMP PERROR      DIVISION BY ZERO
0357                   *
0358  21AB- 38         DIV1    SEC
0359  21AC- A5 21              LDA ARG2
0360  21AE- E5 00              SBC ACCU
0361  21B0- 48                 PHA
0362  21B1- A5 22              LDA ARG2+1
0363  21B3- E5 01              SBC ACCU+1
0364  21B5- 48                 PHA
0365  21B6- 45 22              EOR ARG2+1
0366  21B8- 30 09              BMI DIV2
0367  21BA- 68                 PLA
0368  21BB- 85 22              STA ARG2+1
0369  21BD- 68                 PLA
0370  21BE- 85 21              STA ARG2
0371  21C0- 38                 SEC
0372  21C1- B0 03              BCS DIV3
0373                   *
0374  21C3- 68         DIV2    PLA
0375  21C4- 68                 PLA
0376  21C5- 18                 CLC
0377  21C6- 26 1B      DIV3    ROL ARG1
0378  21C8- 26 1C              ROL ARG1+1
0379  21CA- 26 21              ROL ARG2
0380  21CC- 26 22              ROL ARG2+1
0381  21CE- 88                 DEY
0382  21CF- D0 DA              BNE DIV1
0383  21D1- A5 1B              LDA ARG1
0384  21D3- A6 1C              LDX ARG1+1
0385  21D5- 85 00              STA ACCU
0386  21D7- 86 01              STX ACCU+1
0387  21D9- A5 10              LDA SIGN
0388  21DB- 10 03              BPL *+5
0389  21DD- 4C CD 20           JMP NEGA
0390  21E0- 60                 RTS
0391                   *
0392                   * P-CODE 07: LOWB       (LOW BIT)
0393                   *****************
0394                   * NO ARGUMENTS
0395                   *
0396  21E1- A5 00      LOWB    LDA ACCU
0397  21E3- 29 01              AND =1
0398  21E5- 85 00      LOWB1   STA ACCU
0399  21E7- A9 00              LDA =0
0400  21E9- 85 01              STA ACCU+1
0401  21EB- 60                 RTS

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 24/10/23   R65 ASSEMBLER  PAGE 10

0402                   *
0403                   * P-CODE 08: TEQU       (TEST EQUAL)
0404                   *****************
0405                   *
0406  21EC- 20 F7 20   TEQU    JSR SUBA
0407  21EF- A5 00              LDA ACCU
0408  21F1- 05 01              ORA ACCU+1
0409  21F3- F0 04              BEQ TEQU1
0410  21F5- A9 00              LDA =0
0411  21F7- F0 EC              BEQ LOWB1       UNCOND.
0412                   *
0413  21F9- A9 01      TEQU1   LDA =1
0414  21FB- D0 E8              BNE LOWB1       UNCOND.
0415                   *
0416                   * PCODE 09: TNEQ        (TEST NOT EQUAL)
0417                   ****************
0418                   *
0419  21FD- 20 EC 21  TNEQ    JSR TEQU
0420  2200- A5 00              LDA ACCU
0421  2202- 49 01              EOR =1
0422  2204- 85 00              STA ACCU
0423  2206- 60                 RTS
0424                   *
0425                   * P-CODE 0A: TLES       (TEST LESS)
0426                   *****************
0427                   *
0428  2207- 20 F7 20   TLES    JSR SUBA
0429  220A- A9 00              LDA =0
0430  220C- 06 01              ASL ACCU+1
0431  220E- 2A                 ROL A
0432  220F- 90 D4              BCC LOWB1       UNCOND.
0433                   *
0434                   * P-CODE 0B: TGRE       (TEST GREATER OR EQUAL)
0435                   *****************
0436                   *
0437  2211- 20 07 22   TGRE    JSR TLES
0438  2214- 4C 00 22           JMP TNEQ+3
0439                   *
0440                   * P-CODE 0C: TGRTS      (TEST GREATER)
0441                   ******************
0442                   *
0443  2217- 20 EC 26   TGRT    JSR EXST
0444  221A- 4C 07 22           JMP TLES
0445                   *
0446                   * P-CODE 0D: TLEE       (TEST LESS OR EQUAL)
0447                   *****************
0448                   *
0449  221D- 20 17 22   TLEE    JSR TGRT
0450  2220- 4C 00 22           JMP TNEQ+3
0451                   *

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 24/10/23   R65 ASSEMBLER  PAGE 11

0452                   * P-CODE 0E: ORAC       (BITWISE OR)
0453                   *****************
0454                   *
0455  2223- A0 7E      ORAC    LDY =126
0456  2225- B1 08              LDA (SP),Y
0457  2227- 05 00              ORA ACCU
0458  2229- 85 00              STA ACCU
0459  222B- C8                 INY
0460  222C- B1 08              LDA (SP),Y
0461  222E- 05 01              ORA ACCU+1
0462  2230- 85 01              STA ACCU+1
0463  2232- 4C EB 20           JMP DECS2
0464                   *
0465                   * P-CODE 0F: ANDA       (BITWISE AND)
0466                   *****************
0467                   *
0468  2235- A0 7E      ANDA    LDY =126
0469  2237- B1 08              LDA (SP),Y
0470  2239- 25 00              AND ACCU
0471  223B- 85 00              STA ACCU
0472  223D- C8                 INY
0473  223E- B1 08              LDA (SP),Y
0474  2240- 25 01              AND ACCU+1
0475  2242- 85 01              STA ACCU+1
0476  2244- 4C EB 20           JMP DECS2
0477                   *
0478                   * PCODE 10: EORA        (BITWISE OR)
0479                   ****************
0480                   *
0481  2247- A0 7E      EORA    LDY =126
0482  2249- B1 08              LDA (SP),Y
0483  224B- 45 00              EOR ACCU
0484  224D- 85 00              STA ACCU
0485  224F- C8                 INY
0486  2250- B1 08              LDA (SP),Y
0487  2252- 45 01              EOR ACCU+1
0488  2254- 85 01              STA ACCU+1
0489  2256- 4C EB 20           JMP DECS2
0490                   *
0491                   * P-CODE 11: NOTA       (BITWISE NOT)
0492                   *****************
0493                   *
0494  2259- A5 00      NOTA    LDA ACCU
0495  225B- 49 FF              EOR =$FF
0496  225D- 85 00              STA ACCU
0497  225F- A5 01              LDA ACCU+1
0498  2261- 49 FF              EOR =$FF
0499  2263- 85 01              STA ACCU+1
0500  2265- 60                 RTS
0501                   *

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 24/10/23   R65 ASSEMBLER  PAGE 12

0502                   * P-CODE 12: LEFT       (SHIFT LEFT N BYTES)
0503                   *****************
0504                   *
0505  2266- 20 CD 20           JSR NEGA
0506  2269- A5 01      LEFT    LDA ACCU+1
0507  226B- 30 12              BMI RIGH-3      ARGUMENT NEGATIVE
0508                   *
0509  226D- A6 00              LDX ACCU
0510  226F- F0 0B              BEQ LEFT2       TAKE ONLY LOW BYTE
0511  2271- 20 DC 22           JSR GETS2       GET SECOND NO FROM ST
0512  2274- 06 00      LEFT1   ASL ACCU
0513  2276- 26 01              ROL ACCU+1
0514  2278- CA                 DEX
0515  2279- D0 F9              BNE LEFT1
0516  227B- 60                 RTS
0517                   *
0518  227C- 4C DC 22   LEFT2   JMP GETS2
0519                   *
0520                   * P-CODE 13: RIGH       (SHIFT RIGHT N BYTES)
0521                   *****************
0522                   *
0523  227F- 20 CD 20           JSR NEGA
0524  2282- A5 01      RIGH    LDA ACCU+1
0525  2284- 30 E0              BMI LEFT-3
0526  2286- A6 00              LDX ACCU
0527  2288- F0 F2              BEQ LEFT2
0528  228A- 20 DC 22           JSR GETS2
0529  228D- 46 01      RIGH1   LSR ACCU+1
0530  228F- A9 00              LDA =0
0531  2291- 90 02              BCC *+4
0532  2293- A9 80              LDA =128
0533  2295- 46 00              LSR ACCU
0534  2297- 05 00              ORA ACCU
0535  2299- 85 00              STA ACCU
0536  229B- CA                 DEX
0537  229C- D0 EF              BNE RIGH1
0538  229E- 60                 RTS
0539                   *
0540                   * P-CODE 14:INCA        (INCREMENT ACCU)
0541                   ****************
0542                   *
0543  229F- E6 00      INCA    INC ACCU
0544  22A1- D0 02              BNE *+4
0545  22A3- E6 01              INC ACCU+1
0546  22A5- 60                 RTS
0547                   *
0548                   * P-CODE 15: DECA       (DECREMENT ACCU)
0549                   *****************
0550                   *
0551  22A6- A5 00      DECA    LDA ACCU

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 24/10/23   R65 ASSEMBLER  PAGE 13

0552  22A8- D0 02              BNE *+4
0553  22AA- C6 01              DEC ACCU+1
0554  22AC- C6 00              DEC ACCU
0555  22AE- 60                 RTS
0556                   *
0557                   * P-CODE 16: COPY       (COPY ACCU0
0558                   *****************
0559                   *
0560  22AF- 20 BE 22   COPY    JSR INCS2       INCREMENT STACK
0561  22B2- A0 7E              LDY =126
0562  22B4- A5 00              LDA ACCU
0563  22B6- 91 08              STA (SP),Y
0564  22B8- C8                 INY
0565  22B9- A5 01              LDA ACCU+1
0566  22BB- 91 08              STA (SP),Y
0567  22BD- 60                 RTS
0568                   *
0569  22BE- A9 02      INCS2   LDA =2
0570  22C0- 18                 CLC
0571  22C1- 65 08              ADC SP
0572  22C3- 85 08              STA SP
0573  22C5- 90 02              BCC *+4
0574  22C7- E6 09              INC SP+1
0575  22C9- C5 0E      INCS2A  CMP ENDSTK      TEST STACK OVERFLOW
0576  22CB- A5 09              LDA SP+1
0577  22CD- E5 0F              SBC ENDSTK+1
0578  22CF- B0 06              BCS INCS2B
0579  22D1- A9 05              LDA =5          LET EMULATOR KNOW THAT
0580  22D3- 8D 30 14           STA EMUCOM      SP HAS BEEN INCREASED
0581  22D6- 60                 RTS
0582                   *
0583  22D7- A0 82      INCS2B  LDY =$82        PASCAL RUN TIME ERROR
0584  22D9- 4C FB 28           JMP PERROR      STACK OVERFLOW
0585                   *
0586                   * GETS2
0587                   *
0588  22DC- A0 7E      GETS2   LDY =126
0589  22DE- B1 08              LDA (SP),Y
0590  22E0- 85 00              STA ACCU
0591  22E2- C8                 INY
0592  22E3- B1 08              LDA (SP),Y
0593  22E5- 85 01              STA ACCU+1
0594  22E7- 4C EB 20           JMP DECS2
0595                   *
0596                   * P-CODE 17: PEEK
0597                   *****************
0598                   *
0599  22EA- A0 00      PEEK    LDY =0
0600  22EC- B1 00              LDA (ACCU),Y
0601  22EE- 85 00              STA ACCU

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 24/10/23   R65 ASSEMBLER  PAGE 14

0602  22F0- 84 01              STY ACCU+1
0603  22F2- 60                 RTS
0604                   *
0605                   * P-CODE 18: POKE
0606                   *****************
0607                   *
0608  22F3- A6 00      POKE    LDX ACCU
0609  22F5- 20 DC 22           JSR GETS2
0610  22F8- A0 00              LDY =0
0611  22FA- 8A                 TXA
0612  22FB- 91 00              STA (ACCU),Y
0613  22FD- 4C DC 22          JMP GETS2
0614                   *
0615                   * P-CODE 19: CALA
0616                   *****************
0617                   *
0618  2300- 20 06 23   CALA    JSR CALA1
0619  2303- 4C DC 22           JMP GETS2
0620                   *
0621  2306- 6C 00 00   CALA1   JMP (ACCU)
0622                   *
0623                   * P-CODE 1A: RLIN
0624                   *****************
0625                   *
0626  2309- 20 06 E0   RLIN    JSR GETLIN
0627  230C- A2 00              LDX =0
0628  230E- B1 E9              LDA (VIDPNT),Y
0629  2310- 29 7F              AND =$7F
0630  2312- 95 24              STA LINBUF,X
0631  2314- E8                 INX
0632  2315- C8                 INY
0633  2316- CC 8A 17           CPY NUMCHR
0634  2319- 90 F3              BCC *-11
0635  231B- F0 F1              BEQ *-13
0636  231D- CA                 DEX
0637  231E- 30 06              BMI *+8
0638  2320- B5 24              LDA LINBUF,X
0639  2322- C9 20              CMP =$20
0640  2324- F0 F7              BEQ *-7
0641  2326- E8                 INX
0642  2327- 86 16              STX ENDBUF
0643  2329- A9 00              LDA =0
0644  232B- 85 15              STA BUFFPN
0645  232D- 20 27 E0           JSR PRTINF
0646  2330- 0D 8A              BYT $D,$8A
0647  2332- 60                 RTS
0648                   *
0649                   * P-CODE 1B: GETC
0650                   *****************
0651                   *

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 24/10/23   R65 ASSEMBLER  PAGE 15

0652  2333- 20 AF 22   GETC    JSR COPY
0653  2336- 20 90 28           JSR GETCHR0
0654  2339- 85 00      GETC1   STA ACCU
0655  233B- A9 00              LDA =0
0656  233D- 85 01              STA ACCU+1
0657  233F- 60                 RTS
0658                   *
0659                   * P-CODE 1C: GETN
0660                   *****************
0661                   *
0662  2340- 20 AF 22   GETN    JSR COPY
0663  2343- A9 00              LDA =0
0664  2345- 85 00              STA ACCU
0665  2347- 85 01              STA ACCU+1
0666  2349- 85 10              STA SIGN
0667  234B- 20 90 28   GETN0   JSR GETCHR0
0668  234E- C9 20              CMP =' '
0669  2350- F0 F9              BEQ GETN0
0670  2352- C9 2D              CMP ='-'
0671  2354- D0 05              BNE GETN1
0672                   *
0673  2356- C6 10              DEC SIGN
0674  2358- 4C 5F 23           JMP GETN2
0675                   *
0676  235B- C9 2B      GETN1    CMP ='+'
0677  235D- D0 03              BNE GETN2+3
0678                   *
0679  235F- 20 90 28   GETN2   JSR GETCHR0
0680  2362- C9 30              CMP ='0'
0681  2364- 90 2F              BCC GETN3
0682  2366- C9 3A              CMP ='9'+1
0683  2368- B0 2B              BCS GETN3
0684  236A- 38                 SEC
0685  236B- E9 30              SBC ='0'
0686  236D- 48                 PHA
0687  236E- 06 00              ASL ACCU
0688  2370- 26 01              ROL ACCU+1
0689  2372- A6 00              LDX ACCU
0690  2374- A4 01              LDY ACCU+1
0691  2376- 06 00              ASL ACCU
0692  2378- 26 01              ROL ACCU+1
0693  237A- 06 00              ASL ACCU
0694  237C- 26 01              ROL ACCU+1
0695  237E- 18                 CLC
0696  237F- 8A                 TXA
0697  2380- 65 00              ADC ACCU
0698  2382- 85 00              STA ACCU
0699  2384- 98                 TYA
0700  2385- 65 01              ADC ACCU+1
0701  2387- 85 01              STA ACCU+1

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 24/10/23   R65 ASSEMBLER  PAGE 16

0702  2389- 68                 PLA
0703  238A- 18                 CLC
0704  238B- 65 00              ADC ACCU
0705  238D- 85 00              STA ACCU
0706  238F- 90 CE              BCC GETN2
0707  2391- E6 01              INC ACCU+1
0708  2393- B0 CA              BCS GETN2
0709                   *
0710  2395- A5 10      GETN3   LDA SIGN
0711  2397- F0 03              BEQ *+5
0712  2399- 4C CD 20           JMP NEGA
0713  239C- 60                 RTS
0714                   *
0715                   * P-CODE 1D: PRTC
0716                   *****************
0717                   *
0718  239D- A5 00      PRTC    LDA ACCU
0719  239F- 20 C0 28           JSR PRTCHR0
0720  23A2- 4C DC 22           JMP GETS2
0721                   *
0722                   * P-CODE 1E: PRTN
0723                   *****************
0724                   *
0725  23A5- A5 01      PRTN    LDA ACCU+1
0726  23A7- 10 08              BPL PRTN1
0727  23A9- 20 CD 20           JSR NEGA
0728  23AC- A9 2D              LDA ='-'
0729  23AE- 20 C0 28           JSR PRTCHR0
0730                   *
0731  23B1- A5 00      PRTN1   LDA ACCU
0732  23B3- A6 01              LDX ACCU+1
0733  23B5- 85 21              STA ARG2
0734  23B7- 86 22              STX ARG2+1
0735  23B9- A9 1F              LDA =$1F
0736  23BB- 85 1D              STA ARG3
0737  23BD- 85 1F              STA ARG3+2
0738  23BF- A9 2A              LDA =$2A
0739  23C1- 85 1E              STA ARG3+1
0740  23C3- 85 20              STA ARG3+3
0741  23C5- A6 21              LDX ARG2
0742  23C7- A4 22              LDY ARG2+1
0743  23C9- 38                 SEC
0744  23CA- E6 1D      PRTN2   INC ARG3
0745  23CC- 8A                 TXA
0746  23CD- E9 10              SBC =$10
0747  23CF- AA                 TAX
0748  23D0- 98                 TYA
0749  23D1- E9 27              SBC =$27
0750  23D3- A8                 TAY
0751  23D4- B0 F4              BCS PRTN2

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 24/10/23   R65 ASSEMBLER  PAGE 17

0752  23D6- C6 1E      PRTN3   DEC ARG3+1
0753  23D8- 8A                 TXA
0754  23D9- 69 E8              ADC =$E8
0755  23DB- AA                 TAX
0756  23DC- 98                 TYA
0757  23DD- 69 03              ADC =$03
0758  23DF- A8                 TAY
0759  23E0- 90 F4              BCC PRTN3
0760  23E2- 8A                 TXA
0761  23E3- 38         PRTN4   SEC
0762  23E4- E6 1F      PRTN5   INC ARG3+2
0763  23E6- E9 64              SBC =$64
0764  23E8- B0 FA              BCS PRTN5
0765  23EA- 88                 DEY
0766  23EB- 10 F6              BPL PRTN4
0767  23ED- C6 20      PRTN6   DEC ARG3+3
0768  23EF- 69 0A              ADC =$A
0769  23F1- 90 FA              BCC PRTN6
0770  23F3- 09 30              ORA =$30
0771  23F5- 85 21              STA ARG2
0772  23F7- A9 20              LDA =$20
0773  23F9- 85 22              STA ARG2+1
0774  23FB- A2 FB              LDX =$FB
0775  23FD- 86 10      PRTN7   STX SIGN
0776  23FF- B5 22             LDA ARG2+1,X
0777  2401- 05 22              ORA ARG2+1
0778  2403- C9 20              CMP =$20
0779  2405- F0 09              BEQ PRTN8
0780  2407- A0 30              LDY =$30
0781  2409- 84 22              STY ARG2+1
0782  240B- 05 22              ORA ARG2+1
0783  240D- 20 C0 28           JSR PRTCHR0
0784  2410- A6 10      PRTN8   LDX SIGN
0785  2412- E8                 INX
0786  2413- D0 E8              BNE PRTN7
0787  2415- 4C DC 22           JMP GETS2
0788                   *
0789                   * P-CODE 1F: PRTS
0790                   *****************
0791                   *
0792  2418- 06 00      PRTS    ASL ACCU
0793  241A- 26 01              ROL ACCU+1
0794  241C- A5 08              LDA SP
0795  241E- 38                 SEC
0796  241F- E5 00              SBC ACCU
0797  2421- 85 00              STA ACCU
0798  2423- 48                 PHA
0799  2424- A5 09              LDA SP+1
0800  2426- E5 01              SBC ACCU+1
0801  2428- 85 01              STA ACCU+1

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 24/10/23   R65 ASSEMBLER  PAGE 18

0802  242A- 48                 PHA
0803  242B- A0 80      OUTST1  LDY =128
0804  242D- B1 00              LDA (ACCU),Y
0805  242F- 20 C0 28           JSR PRTCHR0
0806  2432- A5 00              LDA ACCU
0807  2434- 18                 CLC
0808  2435- 69 02              ADC =2
0809  2437- 85 00              STA ACCU
0810  2439- 90 02              BCC *+4
0811  243B- E6 01              INC ACCU+1
0812  243D- C5 08              CMP SP
0813  243F- A5 01              LDA ACCU+1
0814  2441- E5 09              SBC SP+1
0815  2443- 90 E6              BCC OUTST1
0816  2445- 68                 PLA
0817  2446- 85 09              STA SP+1
0818  2448- 68                 PLA
0819  2449- 85 08              STA SP
0820  244B- 4C DC 22           JMP GETS2
0821                   *
0822                   * P-CODE 20: LITB
0823                   *****************
0824                   *
0825  244E- 20 AF 22   LITB    JSR COPY
0826  2451- 20 98 24           JSR FETCH
0827  2454- 85 00              STA ACCU
0828  2456- A9 00              LDA =0
0829  2458- 85 01              STA ACCU+1
0830  245A- 60                 RTS
0831                   *
0832                   * P-CODE 21: INCB
0833                   *****************
0834                   *
0835  245B- A0 80      INCB    LDY =128        SAVE CURRENT ACCU
0836  245D- A5 00              LDA ACCU
0837  245F- 91 08              STA (SP),Y
0838  2461- C8                 INY
0839  2462- A5 01              LDA ACCU+1
0840  2464- 91 08              STA (SP),Y
0841  2466- 20 98 24           JSR FETCH
0842  2469- A2 00              LDX =0
0843  246B- A8                 TAY             TEST A
0844  246C- 10 01              BPL *+3
0845  246E- CA                 DEX
0846  246F- 18                 CLC
0847  2470- 65 08              ADC SP
0848  2472- 85 08              STA SP
0849  2474- 8A                 TXA
0850  2475- 65 09              ADC SP+1
0851  2477- 85 09              STA SP+1

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 24/10/23   R65 ASSEMBLER  PAGE 19

0852  2479- A5 08      INCB1   LDA SP
0853  247B- 20 C9 22           JSR INCS2A      TEST STACK OVERFLOW
0854  247E- A0 80              LDY =128        AND GET NEW ACCU
0855  2480- B1 08              LDA (SP),Y
0856  2482- 85 00              STA ACCU
0857  2484- C8                 INY
0858  2485- B1 08              LDA (SP),Y
0859  2487- 85 01              STA ACCU+1
0860  2489- 60                 RTS
0861                   *
0862                   * P-CODE 22: LITW
0863                   *****************
0864                   *
0865  248A- 20 AF 22   LITW    JSR COPY
0866  248D- 20 98 24           JSR FETCH
0867  2490- 85 00              STA ACCU
0868  2492- 20 98 24           JSR FETCH
0869  2495- 85 01              STA ACCU+1
0870  2497- 60                 RTS
0871                   *
0872                   * FETCH
0873                   *
0874  2498- A0 00      FETCH   LDY =0
0875  249A- B1 0A              LDA (PC),Y
0876  249C- E6 0A              INC PC
0877  249E- D0 02              BNE *+4
0878  24A0- E6 0B              INC PC+1
0879  24A2- 60                 RTS
0880                   *
0881                   * P-CODE 23: INCW
0882                   *****************
0883                   *
0884  24A3- A0 80      INCW    LDY =128        SAVE CURRENT ACCU
0885  24A5- A5 00              LDA ACCU
0886  24A7- 91 08              STA (SP),Y
0887  24A9- C8                 INY
0888  24AA- A5 01              LDA ACCU+1
0889  24AC- 91 08              STA (SP),Y
0890  24AE- 20 98 24           JSR FETCH
0891  24B1- 18                 CLC
0892  24B2- 65 08              ADC SP
0893  24B4- 85 08              STA SP
0894  24B6- 20 98 24           JSR FETCH
0895  24B9- 65 09              ADC SP+1
0896  24BB- 85 09              STA SP+1
0897  24BD- 4C 79 24           JMP INCB1
0898                   *
0899                   * P-CODE 24: JUMP
0900                   *****************
0901                   *

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 24/10/23   R65 ASSEMBLER  PAGE 20

0902  24C0- A0 00      JUMP    LDY =0
0903  24C2- B1 0A              LDA (PC),Y
0904  24C4- 18                 CLC
0905  24C5- 65 0A              ADC PC
0906  24C7- AA                 TAX
0907  24C8- C8                 INY
0908  24C9- B1 0A              LDA (PC),Y
0909  24CB- 65 0B              ADC PC+1
0910  24CD- 86 0A              STX PC
0911  24CF- 85 0B              STA PC+1
0912  24D1- 60                 RTS
0913                   *
0914                   * P-CODE 25: JMPZ
0915                   *****************
0916                   *
0917  24D2- 46 00      JMPZ    LSR ACCU
0918  24D4- 08                 PHP
0919  24D5- 20 DC 22           JSR GETS2
0920  24D8- 28                 PLP
0921  24D9- 90 E5              BCC JUMP
0922                   *
0923  24DB- A5 0A              LDA PC
0924  24DD- 18                 CLC
0925  24DE- 69 02              ADC =2
0926  24E0- 85 0A              STA PC
0927  24E2- 90 02              BCC *+4
0928  24E4- E6 0B              INC PC+1
0929  24E6- 60                 RTS
0930                   *
0931                   * P-CODE 26: JMPO
0932                   *****************
0933                   *
0934  24E7- A5 00      JMPO    LDA ACCU
0935  24E9- 49 01              EOR =1
0936  24EB- 85 00              STA ACCU
0937  24ED- 4C D2 24           JMP JMPZ
0938                   *
0939                   * P-CODE 27: LOAD
0940                   *****************
0941                   *
0942  24F0- 20 AF 22   LOAD    JSR COPY
0943  24F3- 20 98 24           JSR FETCH
0944  24F6- AA                 TAX             LEVEL DIFFERENCE
0945  24F7- 20 98 24           JSR FETCH
0946  24FA- 85 1B              STA ARG1
0947  24FC- 20 98 24           JSR FETCH
0948  24FF- 85 1C     LOAD1   STA ARG1+1
0949  2501- 20 2D 25           JSR FBASE3
0950  2504- A0 80      LOAD2   LDY =128
0951  2506- B1 19              LDA (ABASE),Y

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 24/10/23   R65 ASSEMBLER  PAGE 21

0952  2508- 85 00              STA ACCU
0953  250A- C8                 INY
0954  250B- B1 19              LDA (ABASE),Y
0955  250D- 85 01              STA ACCU+1
0956  250F- 60                 RTS
0957                   *
0958                   * FBASE
0959                   *
0960  2510- A5 17      FBASE   LDA BASE
0961  2512- A4 18              LDY BASE+1
0962  2514- 85 19              STA ABASE
0963  2516- 84 1A              STY ABASE+1
0964  2518- E0 00              CPX =0
0965  251A- F0 10              BEQ FBASE2
0966                   *
0967  251C- A0 80      FBASE1  LDY =128
0968  251E- B1 19              LDA (ABASE),Y
0969  2520- 48                 PHA
0970  2521- C8                 INY
0971  2522- B1 19              LDA (ABASE),Y
0972  2524- 85 1A              STA ABASE+1
0973  2526- 68                 PLA
0974  2527- 85 19              STA ABASE
0975  2529- CA                 DEX
0976  252A- D0 F0              BNE FBASE1
0977  252C- 60         FBASE2  RTS
0978                   *
0979  252D- 20 10 25   FBASE3  JSR FBASE
0980  2530- 18                 CLC
0981  2531- A5 1B              LDA ARG1
0982  2533- 65 19              ADC ABASE
0983  2535- 85 19              STA ABASE
0984  2537- A5 1C              LDA ARG1+1
0985  2539- 65 1A              ADC ABASE+1
0986  253B- 85 1A              STA ABASE+1
0987  253D- 60                 RTS
0988                   *
0989                   * P-CODE 28: LODX
0990                   *****************
0991                   *
0992  253E- 20 98 24   LODX    JSR FETCH
0993  2541- AA                 TAX
0994  2542- 20 98 24           JSR FETCH
0995  2545- 06 00              ASL ACCU
0996  2547- 26 01              ROL ACCU+1
0997  2549- 18                 CLC
0998  254A- 65 00              ADC ACCU
0999  254C- 85 1B              STA ARG1
1000  254E- 08                 PHP
1001  254F- 20 98 24           JSR FETCH

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 24/10/23   R65 ASSEMBLER  PAGE 22

1002  2552- 28                 PLP
1003  2553- 65 01              ADC ACCU+1
1004  2555- 4C FF 24           JMP LOAD1
1005                   *
1006                   * P-CODE 29: STOR
1007                   *****************
1008                   *
1009  2558- 20 98 24   STOR    JSR FETCH
1010  255B- AA                 TAX
1011  255C- 20 98 24           JSR FETCH
1012  255F- 85 1B              STA ARG1
1013  2561- 20 98 24           JSR FETCH
1014  2564- 85 1C              STA ARG1+1
1015  2566- 20 2D 25   STOR1   JSR FBASE3
1016  2569- A0 80      STOR2   LDY =128
1017  256B- A5 00              LDA ACCU
1018  256D- 91 19              STA (ABASE),Y
1019  256F- C8                 INY
1020  2570- A5 01              LDA ACCU+1
1021  2572- 91 19              STA (ABASE),Y
1022  2574- 4C DC 22           JMP GETS2
1023                   *
1024                   * P-CODE 2A: STOX
1025                   *****************
1026                   *
1027  2577- 20 98 24   STOX    JSR FETCH
1028  257A- AA                 TAX
1029  257B- A0 7E              LDY =126
1030  257D- B1 08              LDA (SP),Y
1031  257F- 0A                 ASL A
1032  2580- 85 1B              STA ARG1
1033  2582- C8                 INY
1034  2583- B1 08              LDA (SP),Y
1035  2585- 2A                 ROL A
1036  2586- 85 1C              STA ARG1+1
1037  2588- 20 98 24           JSR FETCH
1038  258B- 18                 CLC
1039  258C- 65 1B              ADC ARG1
1040  258E- 85 1B              STA ARG1
1041  2590- 20 98 24           JSR FETCH
1042  2593- 65 1C              ADC ARG1+1
1043  2595- 85 1C              STA ARG1+1
1044  2597- 20 EB 20           JSR DECS2
1045  259A- 4C 66 25           JMP STOR1
1046                   *
1047                   * P-CODE 2B: CALL
1048                   *****************
1049                   *
1050  259D- 20 98 24   CALL    JSR FETCH
1051  25A0- AA                 TAX

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 24/10/23   R65 ASSEMBLER  PAGE 23

1052  25A1- 20 10 25           JSR FBASE
1053  25A4- A0 82              LDY =130
1054  25A6- A5 19              LDA ABASE
1055  25A8- 91 08              STA (SP),Y
1056  25AA- C8                 INY
1057  25AB- A5 1A              LDA ABASE+1
1058  25AD- 91 08              STA (SP),Y
1059  25AF- C8                 INY
1060  25B0- A5 17              LDA BASE
1061  25B2- 91 08              STA (SP),Y
1062  25B4- C8                 INY
1063  25B5- A5 18              LDA BASE+1
1064  25B7- 91 08              STA (SP),Y
1065  25B9- C8                 INY
1066  25BA- A5 0A              LDA PC
1067  25BC- 91 08              STA (SP),Y
1068  25BE- C8                 INY
1069  25BF- A5 0B              LDA PC+1
1070  25C1- 91 08              STA (SP),Y
1071  25C3- A5 08              LDA SP
1072  25C5- 18                 CLC
1073  25C6- 69 02              ADC =2
1074  25C8- 85 17              STA BASE
1075  25CA- A5 09              LDA SP+1
1076  25CC- 69 00              ADC =0
1077  25CE- 85 18              STA BASE+1
1078  25D0- 4C C0 24           JMP JUMP
1079                   *
1080                   * PCODE 2C: SDEV
1081                   ****************
1082                   *
1083  25D3- A5 00      SDEV    LDA ACCU
1084  25D5- 85 0D              STA DEVICE
1085  25D7- 4C DC 22           JMP GETS2
1086                   *
1087                   * PCODE 2D: RDEV
1088                   ****************
1089                   *
1090  25DA- A9 00      RDEV    LDA =0
1091  25DC- 85 0D              STA DEVICE
1092  25DE- 60                 RTS
1093                   *
1094                   * PCODE 2E: FNAM
1095                   ****************
1096                   *
1097  25DF- 20 27 E0   FNAM    JSR PRTINF
1098  25E2- 20 3D A0           BYT ' = '+128
1099  25E5- 20 06 E0           JSR GETLIN
1100  25E8- 20 15 F8           JSR GETNAM
1101  25EB- 20 0D 20           JSR HARGUM

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 24/10/23   R65 ASSEMBLER  PAGE 24

1102  25EE- 85 DC              STA FILDRV
1103  25F0- 20 0D 20           JSR HARGUM
1104  25F3- 8D 13 03           STA FILLOC
1105  25F6- 20 27 E0           JSR PRTINF
1106  25F9- 0D 8A              BYT $D,$8A
1107  25FB- 60                 RTS
1108                   *
1109                   * P-CODE 2F: OPNR
1110                   *****************
1111                   *
1112                   * NO AUTOMATIC ERROR TESTING
1113                   *
1114  25FC- A9 00      OPNR    LDA =0
1115  25FE- 85 DA             STA FILFLG
1116  2600- 20 AF 22           JSR COPY
1117  2603- 20 0F F0           JSR OPEN
1118  2606- C8                 INY
1119  2607- C8                 INY
1120  2608- 84 00              STY ACCU
1121  260A- 85 01              STA ACCU+1
1122  260C- 60                 RTS
1123                   *
1124                   * P-CODE 30: OPNW
1125                   *****************
1126                   *
1127  260D- A9 20      OPNW    LDA =$20
1128  260F- 4C FE 25           JMP OPNR+2
1129                   *
1130                   * P-CODE 31: CLOS
1131                   *****************
1132                   *
1133                   * NO AUTOMATIC ERROR CHECKING
1134                   *
1135  2612- A6 00      CLOS    LDX ACCU
1136  2614- CA                 DEX
1137  2615- CA                 DEX
1138  2616- 20 3B 2D           JSR CLOSRA
1139  2619- 4C DC 22           JMP GETS2
1140                   *
1141                   * P-CODE 32: PRTI
1142                   *****************
1143                   *
1144  261C- 20 98 24   PRTI    JSR FETCH
1145  261F- 48                 PHA
1146  2620- 29 7F              AND =$7F
1147  2622- 20 C0 28           JSR PRTCHR0
1148  2625- 68                 PLA
1149  2626- 10 F4              BPL PRTI
1150  2628- 60                 RTS
1151                   *

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 24/10/23   R65 ASSEMBLER  PAGE 25

1152                   * P-CODE 33: GHGH       (GET HIGH)
1153                   *****************
1154                   *
1155  2629- A5 01      GHGH    LDA ACCU+1
1156  262B- 85 00              STA ACCU
1157                   *
1158                   * P-CODE 34: GLOW
1159                   *****************
1160                   *
1161  262D- A9 00      GLOW    LDA =0
1162  262F- 85 01              STA ACCU+1
1163  2631- 60                 RTS
1164                   *
1165                   * P-CODE 35:PHGH
1166                   ****************
1167                   *
1168  2632- A0 7E      PHGH    LDY =126
1169  2634- B1 08              LDA (SP),Y
1170  2636- 85 01              STA ACCU+1
1171  2638- 4C EB 20           JMP DECS2
1172                   *
1173                   * P-CODE 36: PLOW
1174                   *****************
1175                   *
1176  263B- A0 7E      PLOW    LDY =126
1177  263D- B1 08              LDA (SP),Y
1178  263F- 85 00              STA ACCU
1179  2641- 4C EB 20           JMP DECS2
1180                   *
1181                   * P-CODE 37: GSEC
1182                   *****************
1183                   * DEVICE HAS TO BE SET  ########
1184                   *
1185  2644- 20 56 26   GSEC    JSR PREPSEC
1186  2647- 4C 82 20           JMP READ
1187  264A- 4C 8E 20           JMP ENDDO
1188                   *
1189                   * P-CODE 38: PSEC
1190                   *****************
1191                   * DEVICE HAS TO BE SET  ########
1192                   *
1193  264D- 20 56 26   PSEC    JSR PREPSEC
1194  2650- 20 85 20           JSR WRITE
1195  2653- 4C 8E 20           JMP ENDDO
1196                   *
1197  2656- A5 00      PREPSEC LDA ACCU
1198  2658- A6 01              LDX ACCU+1
1199  265A- 85 E0              STA DATA
1200  265C- 86 E1              STX DATA+1
1201  265E- A0 7E              LDY =126

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 24/10/23   R65 ASSEMBLER  PAGE 26

1202  2660- B1 08              LDA (SP),Y
1203  2662- 85 DE              STA SECTOR
1204  2664- A0 7C              LDY =124
1205  2666- B1 08              LDA (SP),Y
1206  2668- 85 DD              STA TRACK
1207  266A- A5 08              LDA SP
1208  266C- 38                 SEC
1209  266D- E9 04              SBC =4
1210  266F- 20 F0 20           JSR DECS2+5
1211  2672- 20 DC 22           JSR GETS2
1212  2675- 4C 88 20           JMP PREPDO
1213                   *
1214                   * P-CODE 39: NBYT       LOAD N BYTES IMMEDIATELY
1215                   *****************
1216                   *
1217  2678- 20 98 24   NBYT    JSR FETCH
1218  267B- AA                 TAX             BYTE COUNTER
1219  267C- 20 AF 22   NBYT1   JSR COPY
1220  267F- 20 98 24           JSR FETCH
1221  2682- 84 01              STY ACCU+1      Y=0
1222  2684- 85 00              STA ACCU
1223  2686- CA                 DEX
1224  2687- D0 F3              BNE NBYT1
1225  2689- 60                 RTS
1226                   *
1227                   * P-CODE 3A: NWRD       LOAD N WORD IMMEDIATELY
1228                   *****************
1229                   *
1230  268A- 20 98 24   NWRD    JSR FETCH
1231  268D- AA                 TAX             WORD COUNTER
1232  268E- 20 AF 22   NWRD1   JSR COPY
1233  2691- 20 98 24           JSR FETCH
1234  2694- 85 00              STA ACCU
1235  2696- 20 98 24           JSR FETCH
1236  2699- 85 01              STA ACCU+1
1237  269B- CA                 DEX
1238  269C- D0 F0              BNE NWRD1
1239  269E- 60                 RTS
1240                   *
1241                   * P-CODE 3B: LODN       LOAD N MORE WORDS
1242                   *****************
1243                   *
1244  269F- 20 98 24   LODN    JSR FETCH
1245  26A2- AA                 TAX
1246  26A3- 20 AF 22   LODN1   JSR COPY
1247  26A6- A5 19              LDA ABASE
1248  26A8- 18                 CLC
1249  26A9- 69 02              ADC =2
1250  26AB- 85 19              STA ABASE
1251  26AD- 90 02              BCC *+4

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 24/10/23   R65 ASSEMBLER  PAGE 27

1252  26AF- E6 1A              INC ABASE+1
1253  26B1- 20 04 25           JSR LOAD2
1254  26B4- CA                 DEX
1255  26B5- D0 EC              BNE LODN1
1256  26B7- 60                 RTS
1257                   *
1258                   * P-CODE 3C: STON       STORE N MORE WORDS
1259                   *****************
1260                   *
1261  26B8- 20 98 24   STON    JSR FETCH
1262  26BB- AA                 TAX
1263  26BC- A5 19      STON1   LDA ABASE
1264  26BE- 38                 SEC
1265  26BF- E9 02              SBC =2
1266  26C1- 85 19              STA ABASE
1267  26C3- B0 02              BCS *+4
1268  26C5- C6 1A              DEC ABASE+1
1269  26C7- 20 69 25           JSR STOR2
1270  26CA- CA                 DEX
1271  26CB- D0 EF              BNE STON1
1272  26CD- 60                 RTS
1273                   *
1274                   * P-CODE 3D: LODI       LOAD INDIRECT
1275                   *****************
1276                   *
1277  26CE- 20 D4 26   LODI    JSR GETACC
1278  26D1- 4C 04 25           JMP LOAD2
1279                   *
1280  26D4- A5 00      GETACC  LDA ACCU
1281  26D6- A6 01              LDX ACCU+1
1282  26D8- 38                 SEC
1283  26D9- E9 80              SBC =128
1284  26DB- B0 01              BCS *+3
1285  26DD- CA                 DEX
1286  26DE- 85 19              STA ABASE
1287  26E0- 86 1A              STX ABASE+1
1288  26E2- 60                 RTS
1289                   *
1290                   * P-CODE 3E: STOI       STORE INDIRECT
1291                   *****************
1292                   *
1293  26E3- 20 D4 26   STOI    JSR GETACC
1294  26E6- 20 DC 22           JSR GETS2
1295  26E9- 4C 69 25           JMP STOR2
1296                   *
1297                   * P-CODE 3F: EXST       EXCHANGE STACK
1298                   *****************
1299                   *
1300  26EC- A0 7E      EXST    LDY =126
1301  26EE- B1 08              LDA (SP),Y

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 24/10/23   R65 ASSEMBLER  PAGE 28

1302  26F0- AA                 TAX
1303  26F1- A5 00              LDA ACCU
1304  26F3- 91 08              STA (SP),Y
1305  26F5- 86 00              STX ACCU
1306  26F7- C8                 INY
1307  26F8- B1 08              LDA (SP),Y
1308  26FA- AA                 TAX
1309  26FB- A5 01              LDA ACCU+1
1310  26FD- 91 08              STA (SP),Y
1311  26FF- 86 01             STX ACCU+1
1312  2701- 60                 RTS
1313                   *
1314                   * P-CODE 40 TIND        TEST INDEX
1315                   ****************
1316                   *
1317  2702- 20 98 24   TIND    JSR FETCH       LOWLIM-1
1318  2705- AA                 TAX
1319  2706- 20 98 24           JSR FETCH
1320  2709- E4 00              CPX ACCU
1321  270B- E5 01              SBC ACCU+1
1322  270D- 70 0E              BVS TINDERR
1323                   *
1324  270F- 20 98 24           JSR FETCH       HIGHLIM
1325  2712- AA                 TAX
1326  2713- 20 98 24           JSR FETCH
1327  2716- E4 00              CPX ACCU
1328  2718- E5 01              SBC ACCU+1
1329  271A- 90 01              BCC TINDERR
1330  271C- 60                 RTS
1331                   *
1332  271D- A2 83      TINDERR LDX =$83        RUNTIME ERROR
1333  271F- 4C FB 28           JMP PERROR      INDEX OUT OF BOUNDS
1334                   *
1335                   * P-CODE 41: RUNP       RUN PROGRAM
1336                   *****************
1337                   *
1338  2722- A0 82      RUNP    LDY =130
1339  2724- A5 00              LDA ACCU        SAVE ACCU
1340  2726- A6 01              LDX ACCU+1
1341  2728- 20 54 27           JSR SAVE
1342  272B- A5 17              LDA BASE        SAVE BASE
1343  272D- A6 18              LDX BASE+1
1344  272F- 20 54 27           JSR SAVE
1345  2732- A5 0A              LDA PC          SAVE PC
1346  2734- A6 0B              LDX PC+1
1347  2736- 20 54 27           JSR SAVE
1348  2739- A5 11              LDA STPROG      SAVE STPROG
1349  273B- A6 12              LDX STPROG+1
1350  273D- 20 54 27           JSR SAVE
1351  2740- A5 13              LDA EOPROG      SAVE EOPROG

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 24/10/23   R65 ASSEMBLER  PAGE 29

1352  2742- A6 14              LDX EOPROG+1
1353  2744- 20 54 27           JSR SAVE
1354  2747- A5 08              LDA SP          GET SP
1355  2749- A6 09              LDX SP+1
1356  274B- 18                 CLC
1357  274C- 69 8C              ADC =140
1358  274E- 90 01              BCC *+3
1359  2750- E8                 INX             COMPUTE NEW STPROG
1360  2751- 4C 7E 29           JMP EXEC3
1361                   *
1362                   *
1363  2754- 91 08      SAVE    STA (SP),Y
1364  2756- C8                 INY
1365  2757- 8A                 TXA
1366  2758- 91 08              STA (SP),Y
1367  275A- C8                 INY
1368  275B- 60                 RTS
1369                   *
1370                   *
1371  275C- 88         GETBACK DEY
1372  275D- B1 08              LDA (SP),Y
1373  275F- AA                 TAX
1374  2760- 88                 DEY
1375  2761- B1 08              LDA (SP),Y
1376  2763- 60                 RTS
1377                   *
1378                   *
1379                   * P-CODE 42: ADDF
1380                   *****************
1381                   *
1382  2764- 20 81 27   ADDF    JSR GETFLP2
1383  2767- 20 2B 2B           JSR FADD
1384                   *
1385  276A- A5 08      PUTFLP0 LDA SP          DECREMENT SP BY 4
1386  276C- 38                 SEC
1387  276D- E9 04              SBC =4
1388  276F- 85 08              STA SP
1389  2771- B0 02              BCS PUTFLP
1390  2773- C6 09              DEC SP+1
1391  2775- A5 02      PUTFLP  LDA M1+1        AND SAVE HALF OF NUMBER
1392  2777- A0 7E              LDY =126
1393  2779- 91 08              STA (SP),Y
1394  277B- C8                 INY
1395  277C- A5 03              LDA M1+2
1396  277E- 91 08              STA (SP),Y
1397  2780- 60                 RTS
1398                   *
1399  2781- A0 7A      GETFLP2 LDY =122        GET SECOND NUMBER
1400  2783- B1 08              LDA (SP),Y
1401  2785- 85 1D              STA M2+1

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 24/10/23   R65 ASSEMBLER  PAGE 30

1402  2787- C8                 INY
1403  2788- B1 08              LDA (SP),Y
1404  278A- 85 1E              STA M2+2
1405  278C- C8                 INY
1406  278D- B1 08              LDA (SP),Y
1407  278F- 85 1B              STA X2
1408  2791- C8                 INY
1409  2792- B1 08              LDA (SP),Y
1410  2794- 85 1C              STA M2
1411  2796- A0 7E      GETFLP  LDY =126        AND HALF OF FIRST
1412  2798- B1 08              LDA (SP),Y
1413  279A- 85 02              STA M1+1
1414  279C- C8                 INY
1415  279D- B1 08              LDA (SP),Y
1416  279F- 85 03              STA M1+2
1417  27A1- 60                 RTS
1418                   *
1419                   * P-CODE 43: SUBF
1420                   *****************
1421                   *
1422  27A2- 20 81 27   SUBF    JSR GETFLP2
1423  27A5- 20 25 2B           JSR FSUB
1424  27A8- 4C 6A 27           JMP PUTFLP0
1425                   *
1426                   * P-CODE 44: MULF
1427                   *****************
1428                   *
1429  27AB- 20 81 27   MULF    JSR GETFLP2
1430  27AE- 20 52 2B           JSR FMUL
1431  27B1- 4C 6A 27           JMP PUTFLP0
1432                   *
1433                   * P-CODE 45: DIVF
1434                   *****************
1435                   *
1436  27B4- 20 81 27   DIVF    JSR GETFLP2
1437  27B7- 20 78 2B           JSR FDIV
1438  27BA- 4C 6A 27           JMP PUTFLP0
1439                   *
1440                   * P-CODE 46: FLOF
1441                   *****************
1442                   *
1443  27BD- A5 00      FLOF    LDA ACCU
1444  27BF- 85 02              STA M1+1        HIGH BYTE IS IN ACCU
1445                   *                       SAME AS M1
1446  27C1- 20 07 2B           JSR FLOAT
1447  27C4- 20 BE 22           JSR INCS2
1448  27C7- 4C 75 27           JMP PUTFLP
1449                   *
1450                   * P-CODE 47: FIXF
1451                   *****************

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 24/10/23   R65 ASSEMBLER  PAGE 31

1452                   *
1453  27CA- 20 96 27   FIXF    JSR GETFLP
1454  27CD- 20 C5 2B           JSR FIX
1455  27D0- A5 02              LDA M1+1
1456  27D2- 85 00              STA ACCU
1457  27D4- 4C EB 20           JMP DECS2
1458                   *
1459                   * P-CODE 48: FEQU       =
1460                   *****************
1461                   *
1462  27D7- 20 F8 27   FEQU    JSR TESTF
1463  27DA- F0 12              BEQ TRUE
1464                   *
1465  27DC- A2 00      FALSE   LDX =0
1466  27DE- 86 00              STX ACCU
1467  27E0- 86 01              STX ACCU+1
1468  27E2- A5 08      DECS6   LDA SP
1469  27E4- 38                 SEC
1470  27E5- E9 06              SBC =6
1471  27E7- 85 08              STA SP
1472  27E9- B0 02              BCS *+4
1473  27EB- C6 09              DEC SP+1
1474  27ED- 60                 RTS
1475                   *
1476  27EE- A2 01      TRUE    LDX =1
1477  27F0- 86 00              STX ACCU
1478  27F2- CA                 DEX
1479  27F3- 86 01              STX ACCU+1
1480  27F5- 4C E2 27           JMP DECS6
1481                   *
1482  27F8- 20 81 27   TESTF   JSR GETFLP2
1483  27FB- 20 25 2B           JSR FSUB
1484  27FE- A5 01             LDA M1
1485  2800- 60                 RTS
1486                   *
1487                   * P-CODE 49: FNEQ       <>
1488                   *****************
1489                   *
1490  2801- 20 F8 27   FNEQ    JSR TESTF
1491  2804- D0 E8              BNE TRUE
1492  2806- F0 D4              BEQ FALSE
1493                   *
1494                   * P-CODE 4A: FLES       <
1495                   *****************
1496                   *
1497  2808- 20 F8 27   FLES    JSR TESTF
1498  280B- 10 CF              BPL FALSE
1499  280D- 30 DF              BMI TRUE
1500                   *
1501                   * P-CODE 4B: FGRE       >=

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 24/10/23   R65 ASSEMBLER  PAGE 32

1502                   *****************
1503                   *
1504  280F- 20 F8 27   FGRE    JSR TESTF
1505  2812- 10 DA              BPL TRUE
1506  2814- 30 C6              BMI FALSE
1507                   *
1508                   * P-CODE 4C: FGRT       >
1509                   *****************
1510                   *
1511  2816- 20 F8 27   FGRT    JSR TESTF
1512  2819- 30 C1              BMI FALSE
1513  281B- F0 BF              BEQ FALSE
1514  281D- 10 CF              BPL TRUE
1515                   *
1516                   * P-CODE 4D: FLEE       <=
1517                   *****************
1518                   *
1519  281F- 20 F8 27   FLEE    JSR TESTF
1520  2822- 30 CA              BMI TRUE
1521  2824- F0 C8              BEQ TRUE
1522  2826- 10 B4              BPL FALSE
1523                   *
1524                   * P-CODE 4E: FCOM       COMPLEMENT
1525                   *****************
1526                   *
1527  2828- 20 96 27   FCOM    JSR GETFLP
1528  282B- 20 6A 2B           JSR FCOMPL
1529  282E- 4C 75 27           JMP PUTFLP
1530                   *
1531                   *
1532                   * P-CODE 4F: TFER       TEST FILE ERROR
1533                   *****************
1534                   *
1535  2831- A6 23      TFER    LDX IOCHECK
1536  2833- F0 04              BEQ TFER1
1537  2835- A6 DB              LDX FILERR
1538  2837- D0 01              BNE TFER2
1539  2839- 60         TFER1   RTS             OK
1540                   *
1541  283A- 4C FB 28   TFER2   JMP PERROR
1542                   *
1543                   * P-CODE 50: OPRA       OPEN RA-FILE
1544                   *****************
1545                   *
1546  283D- 20 AF 22   OPRA    JSR COPY        SAVE ACCU
1547  2840- 20 CC 2B           JSR OPENRA      OPEN FILE
1548  2843- C8                 INY
1549  2844- C8                 INY
1550  2845- 84 00              STY ACCU        SAVE FILE NO
1551  2847- A9 00              LDA =0

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 24/10/23   R65 ASSEMBLER  PAGE 33

1552  2849- 85 01              STA ACCU+1
1553  284B- 60                 RTS
1554                   *
1555                   * P-CODE 51: GETR       GET FROM RA FILE
1556                   *****************
1557                   *
1558                   * NO AUTOMATIC ERROR CHECKING
1559                   *
1560  284C- 20 59 28   GETR    JSR GETR1
1561  284F- 20 D3 2C           JSR GETBYTE
1562  2852- 85 00              STA ACCU
1563  2854- A9 00              LDA =0
1564  2856- 85 01              STA ACCU+1
1565  2858- 60                 RTS
1566                   *
1567  2859- 20 EB 20   GETR1   JSR DECS2
1568  285C- A0 80              LDY =128
1569  285E- B1 08              LDA (SP),Y      GET FILE NO
1570  2860- AA                 TAX
1571  2861- CA                 DEX
1572  2862- CA                 DEX
1573  2863- A5 00              LDA ACCU        GET POINTER
1574  2865- A4 01              LDY ACCU+1
1575  2867- 60                 RTS
1576                   *
1577                   * P-CODE 52: PUTR       PUT TO RA=FILE
1578                   *****************
1579                   *
1580                   * NO AUTOMATIC ERROR CHECKING
1581                   *
1582  2868- A5 00      PUTR    LDA ACCU
1583  286A- 85 FE              STA KCHAR
1584  286C- 20 DC 22           JSR GETS2
1585  286F- 20 59 28           JSR GETR1
1586  2872- 20 F1 2C           JSR PUTBYTE
1587  2875- 4C DC 22           JMP GETS2
1588                   *
1589                   * P-CODE 53: SWA2       SWAP 2 AND 3 ON STACK
1590                   *****************
1591                   *
1592  2878- A0 7E      SWA2    LDY =126
1593  287A- 20 7F 28           JSR SWA3
1594  287D- A0 7F              LDY =127
1595                   *
1596  287F- B1 08      SWA3    LDA (SP),Y
1597  2881- AA                 TAX
1598  2882- 88                 DEY
1599  2883- 88                 DEY
1600  2884- B1 08              LDA (SP),Y
1601  2886- C8                 INY

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 24/10/23   R65 ASSEMBLER  PAGE 34

1602  2887- C8                 INY
1603  2888- 91 08              STA (SP),Y
1604  288A- 8A                 TXA
1605  288B- 88                 DEY
1606  288C- 88                 DEY
1607  288D- 91 08              STA (SP),Y
1608  288F- 60                 RTS
1609                   *
1610                   * GETCHR0: GET A CHAR FROM SPECIFIED FILE
1611                   *****************************************
1612                   *
1613  2890- A6 0D      GETCHR0 LDX DEVICE
1614  2892- D0 1A              BNE GETCHR4
1615                   *
1616  2894- A6 15      GETCHR1 LDX BUFFPN
1617  2896- 10 06              BPL GETCHR2
1618  2898- 20 09 23           JSR RLIN
1619  289B- 4C 94 28           JMP GETCHR1
1620                   *
1621  289E- E4 16      GETCHR2 CPX ENDBUF      IS IS END OF BUFFER?
1622  28A0- D0 07              BNE GETCHR3
1623  28A2- A9 FF              LDA =$FF
1624  28A4- 85 15              STA BUFFPN
1625  28A6- A9 0D              LDA =$D
1626  28A8- 60                 RTS
1627                   *
1628  28A9- E6 15      GETCHR3 INC BUFFPN
1629  28AB- B5 24              LDA LINBUF,X
1630  28AD- 60                 RTS
1631                   *
1632  28AE- CA         GETCHR4 DEX
1633  28AF- D0 03              BNE GETCHR5     SKIP, IF NOT KEY
1634  28B1- 4C 00 E0           JMP GETKEY
1635                   *
1636  28B4- CA         GETCHR5 DEX
1637  28B5- A9 00              LDA =0
1638  28B7- 85 DA              STA FILFLG
1639  28B9- 20 18 F0           JSR READCH
1640  28BC- 4C 31 28           JMP TFER
1641                   *
1642  28BF- 60         GETCHR6 RTS
1643                   *
1644                   * PRTCHR0: PRINT CHAR TO SPECIFIED FILE
1645                   ***************************************
1646                   *
1647  28C0- A6 0D      PRTCHR0 LDX DEVICE
1648  28C2- 30 16              BMI PRTCHR3     Plot text?
1649  28C4- D0 03              BNE PRTCHR1
1650  28C6- 4C 09 E0           JMP PRTCHR
1651                   *

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 24/10/23   R65 ASSEMBLER  PAGE 35

1652  28C9- CA         PRTCHR1 DEX
1653  28CA- D0 03              BNE PRTCHR2
1654  28CC- 4C 0C E0           JMP AUTOPR
1655                   *
1656  28CF- CA         PRTCHR2 DEX
1657  28D0- A0 00              LDY =0
1658  28D2- 84 DA              STY FILFLG
1659  28D4- 20 1B F0           JSR WRITCH
1660  28D7- 4C 31 28           JMP TFER
1661                   *
1662  28DA- C9 0D      PRTCHR3 CMP =$0D        Plot CR?
1663  28DC- D0 06              BNE PRTCHR4
1664  28DE- A9 00              LDA =0
1665  28E0- 8D AE 03           STA GRX
1666  28E3- 60         PRTCHRE RTS
1667                   *
1668  28E4- C9 0A      PRTCHR4 CMP =$0A        PLOT LF?
1669  28E6- D0 0D              BNE PRTCHR6
1670  28E8- AD AF 03           LDA GRY
1671  28EB- E9 08              SBC =8
1672  28ED- 10 02              BPL PRTCHR5
1673  28EF- A9 00              LDA =0
1674                   *
1675  28F1- 8D AF 03   PRTCHR5 STA GRY
1676  28F4- 60                 RTS
1677                   *
1678  28F5- 8D B0 03   PRTCHR6 STA GRC
1679  28F8- 4C 18 C8           JMP APLOTCH     PLOT THE CHARACTER
1680                   *
1681                   * PERROR: PASCAL RUNTIME ERROR
1682                   ******************************
1683                   *
1684  28FB- 20 27 E0   PERROR  JSR PRTINF
1685  28FE- 0D 0A 07          BYT $D,$A,7,'Pascal error '+128
1685  2901- 50 61 73 
1685  2904- 63 61 6C 
1685  2907- 20 65 72 
1685  290A- 72 6F 72 
1685  290D- A0 
1686  290E- A9 00              LDA =0
1687  2910- 85 0D              STA DEVICE
1688  2912- 8A                 TXA
1689  2913- 85 0C              STA RUNERR
1690  2915- 20 2D E0           JSR PRTBYT
1691  2918- A5 0A              LDA PC
1692  291A- 38                 SEC
1693  291B- E5 11              SBC STPROG
1694  291D- 85 00              STA ACCU
1695  291F- A5 0B              LDA PC+1
1696  2921- E5 12              SBC STPROG+1

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 24/10/23   R65 ASSEMBLER  PAGE 36

1697  2923- 85 01              STA ACCU+1
1698  2925- F0 0C              BEQ PERROR1
1699  2927- 30 0A              BMI PERROR1
1700  2929- 20 27 E0           JSR PRTINF
1701  292C- 20 61 74           BYT ' at '+128
1701  292F- A0 
1702  2930- 20 A5 23           JSR PRTN
1703                   *
1704  2933- 4C 10 20   PERROR1 JMP STOP
1705                   *
1706                   *
1707                   * WARM START ENTRY POINT
1708                   ************************
1709                   *
1710  2936- AD 81 17   WARMST  LDA SFLAG       SET PASCAL RUNTIME BIT
1711  2939- 09 01              ORA =$01        IN SFLAG
1712  293B- 8D 81 17           STA SFLAG
1713  293E- BA                 TSX
1714  293F- 8E FF 17           STX SAVS        SAVE STACK POINTER
1715  2942- A2 00              LDX =0
1716  2944- 86 0B              STX PC+1
1717  2946- 86 0D              STX DEVICE
1718  2948- CA                 DEX
1719  2949- 86 16              STX ENDBUF
1720  294B- 86 23              STX IOCHECK
1721  294D- A2 00              LDX =0
1722                   *
1723  294F- A0 00      EXEC    LDY =0
1724  2951- 84 0B              STY PC+1
1725  2953- BD 0A 2A           LDA EXTABLE,X
1726  2956- 9D 20 03           STA FILNM1,X
1727  2959- E8                 INX
1728  295A- C8                 INY
1729  295B- C0 10              CPY =16
1730  295D- 90 F2              BCC EXEC+2
1731  295F- A9 00              LDA =0
1732  2961- 8D 30 03           STA FILCY1
1733                   *
1734  2964- A9 00      EXECUTE LDA =0
1735  2966- 85 DA              STA FILFLG
1736  2968- AD 0B 20           LDA USEREND
1737  296B- AE 0C 20           LDX USEREND+1
1738  296E- 38                 SEC
1739  296F- E9 90              SBC =144
1740  2971- B0 01              BCS *+3
1741  2973- CA                 DEX
1742  2974- 85 0E              STA ENDSTK
1743  2976- 86 0F              STX ENDSTK+1
1744                   *
1745  2978- AD 09 20   EXEC1   LDA USERST

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 24/10/23   R65 ASSEMBLER  PAGE 37

1746  297B- AE 0A 20           LDX USERST+1
1747  297E- 85 11      EXEC3   STA STPROG
1748  2980- 86 12              STX STPROG+1
1749  2982- 8D 31 03           STA FILSA1
1750  2985- 8E 32 03           STX FILSA1+1
1751  2988- 20 15 E8           JSR RDFILE      READ FILE TO EXECUTE
1752  298B- F0 04              BEQ EXEC2
1753  298D- AA                 TAX             PASCAL RUNTIME ERROR
1754  298E- 4C FB 28           JMP PERROR
1755                   *
1756  2991- AD 12 03   EXEC2   LDA FILSTP
1757  2994- C9 52              CMP ='R'        MUST BE PASCAL
1758  2996- F0 05              BEQ RUN           RUNTIME CODE
1759  2998- A2 84              LDX =$84        PASCAL RUNTIME ERROR
1760  299A- 4C FB 28           JMP PERROR      WRONG FILEtYPE
1761                   *
1762  299D- A0 00      RUN     LDY =0          READ END ADDRESS
1763  299F- B1 11              LDA (STPROG),Y  FROM FILE
1764  29A1- 18                 CLC
1765  29A2- 65 11              ADC STPROG
1766  29A4- 85 13              STA EOPROG
1767  29A6- C8                 INY
1768  29A7- B1 11              LDA (STPROG),Y
1769  29A9- 65 12              ADC STPROG+1
1770  29AB- 85 14              STA EOPROG+1
1771  29AD- A5 13              LDA EOPROG      GET END OF STACK
1772  29AF- A6 14              LDX EOPROG+1
1773  29B1- 38                 SEC
1774  29B2- E9 80              SBC =128
1775  29B4- 85 17              STA BASE
1776  29B6- 85 08              STA SP
1777  29B8- B0 01              BCS *+3
1778  29BA- CA                 DEX
1779  29BB- 86 18              STX BASE+1
1780  29BD- 86 09              STX SP+1
1781                   *
1782  29BF- A5 11              LDA STPROG
1783  29C1- A6 12              LDX STPROG+1
1784  29C3- 18                 CLC
1785  29C4- 69 02              ADC =2
1786  29C6- 85 0A              STA PC
1787  29C8- 90 01              BCC *+3
1788  29CA- E8                 INX
1789  29CB- 86 0B              STX PC+1
1790  29CD- A9 00              LDA =0
1791  29CF- 85 0C              STA RUNERR
1792  29D1- AE FF 17   LOOP    LDX SAVS        RESTORE STACK POINTER
1793  29D4- 9A                 TXS
1794  29D5- 20 E0 29           JSR EXCODE
1795  29D8- AD 81 17           LDA SFLAG

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 24/10/23   R65 ASSEMBLER  PAGE 38

1796  29DB- 30 20              BMI ESCERR
1797  29DD- 4C D1 29           JMP LOOP
1798                   *
1799                   *
1800  29E0- 20 98 24   EXCODE  JSR FETCH
1801  29E3- 89 F1              STA =$F1
1802  29E5- C9 54              CMP =$54        TEST CODENUMBER
1803  29E7- 90 05              BCC *+7
1804  29E9- A9 85      ILLC    LDA =$85        PASCAL RUNTIME ERROR
1805  29EB- 4C FB 28           JMP PERROR      ILLEGAL P-CODE
1806                   *
1807  29EE- 0A                 ASL A
1808  29EF- AA                 TAX
1809  29F0- BD 1A 2A           LDA TABLE,X
1810  29F3- 85 1B              STA ARG1
1811  29F5- BD 1B 2A           LDA TABLE+1,X
1812  29F8- 85 1C              STA ARG1+1
1813  29FA- 6C 1B 00           JMP (ARG1)
1814                   *
1815  29FD- AD 81 17  ESCERR  LDA SFLAG       CLEAR ESCAPE FLAG
1816  2A00- 29 7F              AND =$7F
1817  2A02- 8D 81 17           STA SFLAG
1818  2A05- A2 86              LDX =$86        PASCAL RUNTIME ERROR
1819  2A07- 4C FB 28           JMP PERROR      ESCAPE DURING EXECUTION
1820                   *
1821  2A0A- 53 59 53   EXTABLE BYT 'SYSTEM:R        '
1821  2A0D- 54 45 4D 
1821  2A10- 3A 52 20 
1821  2A13- 20 20 20 
1821  2A16- 20 20 20 
1821  2A19- 20 
1822                   *
1823  2A1A- 10 20 9A   TABLE   WRD STOP,RETN,NEGA,ADDA,SUBA,MULA
1823  2A1D- 20 CD 20 
1823  2A20- DB 20 F7 
1823  2A23- 20 0A 21 
1824  2A26- 6F 21 E1           WRD DIVA,LOWB,TEQU,TNEQ,TLES,TGRE
1824  2A29- 21 EC 21 
1824  2A2C- FD 21 07 
1824  2A2F- 22 11 22 
1825  2A32- 17 22 1D           WRD TGRT,TLEE,ORAC,ANDA,EORA,NOTA
1825  2A35- 22 23 22 
1825  2A38- 35 22 47 
1825  2A3B- 22 59 22 
1826  2A3E- 69 22 82           WRD LEFT,RIGH,INCA,DECA,COPY,PEEK
1826  2A41- 22 9F 22 
1826  2A44- A6 22 AF 
1826  2A47- 22 EA 22 
1827  2A4A- F3 22 00           WRD POKE,CALA,RLIN,GETC,GETN,PRTC
1827  2A4D- 23 09 23 

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 24/10/23   R65 ASSEMBLER  PAGE 39

1827  2A50- 33 23 40 
1827  2A53- 23 9D 23 
1828  2A56- A5 23 18           WRD PRTN,PRTS,LITB,INCB,LITW,INCW
1828  2A59- 24 4E 24 
1828  2A5C- 5B 24 8A 
1828  2A5F- 24 A3 24 
1829  2A62- C0 24 D2           WRD JUMP,JMPZ,JMPO,LOAD,LODX,STOR
1829  2A65- 24 E7 24 
1829  2A68- F0 24 3E 
1829  2A6B- 25 58 25 
1830  2A6E- 77 25 9D           WRD STOX,CALL,SDEV,RDEV,FNAM,OPNR
1830  2A71- 25 D3 25 
1830  2A74- DA 25 DF 
1830  2A77- 25 FC 25 
1831  2A7A- 0D 26 12           WRD OPNW,CLOS,PRTI,GHGH,GLOW,PHGH
1831  2A7D- 26 1C 26 
1831  2A80- 29 26 2D 
1831  2A83- 26 32 26 
1832  2A86- 3B 26 44           WRD PLOW,GSEC,PSEC,NBYT,NWRD,LODN
1832  2A89- 26 4D 26 
1832  2A8C- 78 26 8A 
1832  2A8F- 26 9F 26 
1833  2A92- B8 26 CE           WRD STON,LODI,STOI,EXST,TIND,RUNP
1833  2A95- 26 E3 26 
1833  2A98- EC 26 02 
1833  2A9B- 27 22 27 
1834  2A9E- 64 27 A2           WRD ADDF,SUBF,MULF,DIVF,FLOF,FIXF
1834  2AA1- 27 AB 27 
1834  2AA4- B4 27 BD 
1834  2AA7- 27 CA 27 
1835  2AAA- D7 27 01           WRD FEQU,FNEQ,FLES,FGRE,FGRT,FLEE
1835  2AAD- 28 08 28 
1835  2AB0- 0F 28 16 
1835  2AB3- 28 1F 28 
1836  2AB6- 28 28 31           WRD FCOM,TFER,OPRA,GETR,PUTR,SWA2
1836  2AB9- 28 3D 28 
1836  2ABC- 4C 28 68 
1836  2ABF- 28 78 28 
1837                   *
1838                   * COLDSTART
1839                   ***********
1840                   *
1841  2AC2- 58         COLDST  CLI
1842  2AC3- D8                 CLD
1843  2AC4- AD 09 20           LDA USERST
1844  2AC7- AE 0A 20           LDX USERST+1
1845  2ACA- 85 11              STA STPROG
1846  2ACC- 86 12              STX STPROG+1
1847  2ACE- A0 00              LDY =0
1848  2AD0- 98                 TYA

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 24/10/23   R65 ASSEMBLER  PAGE 40

1849  2AD1- 91 11              STA (STPROG),Y
1850  2AD3- C8                 INY
1851  2AD4- C0 04              CPY =4
1852  2AD6- 90 F9              BCC *-5
1853  2AD8- 4C 36 29           JMP WARMST
1854                   *
1855                           TIT R65 PASCAL: FLP-MATH
1856                           PAG

----------------------------------------------------------------------

R65 PASCAL: FLP-MATH               24/10/23   R65 ASSEMBLER  PAGE 41

1857                   *
1858                   ********************************
1859                   * R65 PASCAL FLP MATH ROUTINES *
1860                   ********************************
1861                   *
1862                   *
1863  2ADB- 18         ADD     CLC
1864  2ADC- A2 02              LDX =2
1865  2ADE- B5 01      ADD1    LDA M1,X
1866  2AE0- 75 1C              ADC M2,X
1867  2AE2- 95 01              STA M1,X
1868  2AE4- CA                 DEX
1869  2AE5- 10 F7              BPL ADD1
1870  2AE7- 60                 RTS
1871                   *
1872  2AE8- 06 10      MD1     ASL SIGN
1873  2AEA- 20 ED 2A           JSR ABSWAP
1874  2AED- 24 01      ABSWAP  BIT M1
1875  2AEF- 10 05              BPL ABSWP1
1876  2AF1- 20 6A 2B           JSR FCOMPL
1877  2AF4- E6 10              INC SIGN
1878  2AF6- 38         ABSWP1  SEC
1879                   *
1880                   * SWAP: EXCHANGE F1 AND F2
1881                   **************************
1882                   *
1883  2AF7- A2 04      SWAP    LDX =4
1884  2AF9- 94 03      SWAP1   STY E-1,X
1885  2AFB- B5 FF              LDA <(X1-1),X
1886  2AFD- B4 1A              LDY X2-1,X
1887  2AFF- 94 FF             STY <(X1-1),X
1888  2B01- 95 1A              STA X2-1,X
1889  2B03- CA                 DEX
1890  2B04- D0 F3              BNE SWAP1
1891  2B06- 60                 RTS
1892                   *
1893                   * FLOAT: FLOAT M1,M1+1 TO RESULT IN F1
1894                   **************************************
1895                   *
1896  2B07- A9 8E      FLOAT   LDA =$8E
1897  2B09- 85 00              STA X1
1898  2B0B- A9 00              LDA =0
1899  2B0D- 85 03              STA M1+2
1900  2B0F- F0 08              BEQ NORM
1901  2B11- C6 00      NORM1   DEC X1
1902  2B13- 06 03              ASL M1+2
1903  2B15- 26 02              ROL M1+1
1904  2B17- 26 01              ROL M1
1905  2B19- A5 01      NORM    LDA M1
1906  2B1B- 0A                 ASL A

----------------------------------------------------------------------

R65 PASCAL: FLP-MATH               24/10/23   R65 ASSEMBLER  PAGE 42

1907  2B1C- 45 01              EOR M1
1908  2B1E- 30 04              BMI RTS1
1909  2B20- A5 00              LDA X1
1910  2B22- D0 ED              BNE NORM1
1911  2B24- 60         RTS1    RTS
1912                   *
1913                   * FSUB: F1=F2-F1
1914                   ****************
1915                   *
1916  2B25- 20 6A 2B   FSUB    JSR FCOMPL
1917  2B28- 20 38 2B   SWPALG  JSR ALGNSW
1918                   *
1919                   * FADD: F1=F2+F1
1920                   ****************
1921                   *
1922  2B2B- A5 1B      FADD    LDA X2
1923  2B2D- C5 00              CMP X1
1924  2B2F- D0 F7              BNE SWPALG
1925  2B31- 20 DB 2A           JSR ADD
1926  2B34- 50 E3      ADDEND  BVC NORM
1927  2B36- 70 05              BVS RTLOG
1928  2B38- 90 BD      ALGNSW  BCC SWAP
1929  2B3A- A5 01      RTAR    LDA M1
1930  2B3C- 0A                 ASL A
1931  2B3D- E6 00      RTLOG   INC X1
1932  2B3F- F0 7E              BEQ OVFL
1933  2B41- A2 FA      RTLOG1  LDX =$FA
1934  2B43- A9 80      ROR1    LDA =$80
1935  2B45- B0 01              BCS ROR2
1936  2B47- 0A                 ASL A
1937  2B48- 56 07      ROR2    LSR E+3,X
1938  2B4A- 15 07              ORA E+3,X
1939  2B4C- 95 07              STA E+3,X
1940  2B4E- E8                 INX
1941  2B4F- D0 F2              BNE ROR1
1942  2B51- 60                 RTS
1943                   *
1944                   * FMUL: F1=F2*F1
1945                   ****************
1946                   *
1947  2B52- 20 E8 2A   FMUL    JSR MD1
1948  2B55- 65 00              ADC X1
1949  2B57- 20 A8 2B           JSR MD2
1950  2B5A- 18                 CLC
1951  2B5B- 20 41 2B   MUL1    JSR RTLOG1
1952  2B5E- 90 03              BCC MUL2
1953  2B60- 20 DB 2A           JSR ADD
1954  2B63- 88         MUL2    DEY
1955  2B64- 10 F5              BPL MUL1
1956  2B66- 46 10      MDEND   LSR SIGN

----------------------------------------------------------------------

R65 PASCAL: FLP-MATH               24/10/23   R65 ASSEMBLER  PAGE 43

1957  2B68- 90 AF      NORMX   BCC NORM
1958  2B6A- 38         FCOMPL  SEC
1959  2B6B- A2 03              LDX =3
1960  2B6D- A9 00      COMPL1  LDA =0
1961  2B6F- F5 00              SBC X1,X
1962  2B71- 95 00              STA X1,X
1963  2B73- CA                 DEX
1964  2B74- D0 F7              BNE COMPL1
1965  2B76- F0 BC              BEQ ADDEND
1966                   *
1967                   * FDIV: F1=F2/F1
1968                   ****************
1969                   *
1970  2B78- 20 E8 2A   FDIV    JSR MD1
1971  2B7B- E5 00              SBC X1
1972  2B7D- 20 A8 2B           JSR MD2
1973  2B80- 38         FDIV1   SEC
1974  2B81- A2 02              LDX =2
1975  2B83- B5 1C      FDIV2   LDA M2,X
1976  2B85- F5 04              SBC E,X
1977  2B87- 48                 PHA
1978  2B88- CA                 DEX
1979  2B89- 10 F8              BPL FDIV2
1980  2B8B- A2 FD              LDX =$FD
1981  2B8D- 68         FDIV3   PLA
1982  2B8E- 90 02              BCC FDIV4
1983  2B90- 95 1F              STA M2+3,X
1984  2B92- E8         FDIV4   INX
1985  2B93- D0 F8              BNE FDIV3
1986  2B95- 26 03              ROL M1+2
1987  2B97- 26 02              ROL M1+1
1988  2B99- 26 01              ROL M1
1989  2B9B- 06 1E              ASL M2+2
1990  2B9D- 26 1D              ROL M2+1
1991  2B9F- 26 1C              ROL M2
1992  2BA1- B0 1C              BCS OVFL
1993  2BA3- 88                 DEY
1994  2BA4- D0 DA              BNE FDIV1
1995  2BA6- F0 BE              BEQ MDEND
1996  2BA8- 86 03      MD2     STX M1+2
1997  2BAA- 86 02              STX M1+1
1998  2BAC- 86 01              STX M1
1999  2BAE- B0 0D              BCS OVCHK
2000  2BB0- 30 04              BMI MD3
2001  2BB2- 68                 PLA
2002  2BB3- 68                 PLA
2003  2BB4- 90 B2              BCC NORMX
2004  2BB6- 49 80      MD3     EOR =$80
2005  2BB8- 85 00              STA X1
2006  2BBA- A0 17              LDY =$17

----------------------------------------------------------------------

R65 PASCAL: FLP-MATH               24/10/23   R65 ASSEMBLER  PAGE 44

2007  2BBC- 60                 RTS
2008  2BBD- 10 F7      OVCHK   BPL MD3
2009  2BBF- 4C A6 21   OVFL    JMP DIV1-5      PASCAL RUNTIME ERROR
2010                   *
2011                   * FIX: FIX F1 IN M1, M1+1
2012                   *************************
2013                   *
2014  2BC2- 20 3A 2B           JSR RTAR
2015  2BC5- A5 00      FIX     LDA X1
2016  2BC7- C9 8E              CMP =$8E
2017  2BC9- D0 F7              BNE FIX-3
2018  2BCB- 60         RTRN    RTS
2019                   *
2020                           TIT R65 PASCAL: RANDOM ACCESS
2021                           PAG

----------------------------------------------------------------------

R65 PASCAL: RANDOM ACCESS          24/10/23   R65 ASSEMBLER  PAGE 45

2022                   *
2023                   * RANDOM ACCESS FILE HANDLER
2024                   ****************************
2025                   *
2026                   *
2027                   * OPENRA: OPEN A FILE FOR RANDOM ACCESS
2028                   ***************************************
2029                   *
2030                   * ENTRY: FILNM1,FILCY1,FILDRV,FILFLG
2031                   * FILFLG: BIT 7: PROTECTED (NEW ONLY)*
2032                   *         BIT 6: NO PRINTED OUTPUT
2033                   *         BIT 5: DIRECTION (0=READ)
2034                   *         BIT 4: 1=NEW, 0=OLD
2035                   *
2036                   * NEW ONLY: MAXSIZ,FILSA
2037                   *
2038                   * EXIT: NO OF OPEN FILE IN Y, STATUS IN A
2039                   *       AND FILERR, Y IS ONLY VALID
2040                   *       IF A=0
2041                   *
2042                   *
2043  2BCC- AC 36 03   OPENRA  LDY MAXSEQ      SEARCH EMPTY ENTRY
2044  2BCF- B9 39 03           LDA FIDRTB,Y    BIT 5=1: ENTRY USED
2045  2BD2- 29 20              AND =$20
2046  2BD4- F0 08              BEQ OPENRA1     FOUND, SKIP
2047  2BD6- 88                 DEY
2048  2BD7- 10 F6              BPL OPENRA+3
2049                   *
2050  2BD9- A9 23              LDA =$23        TOO MANY OPEN FILES
2051  2BDB- 85 DB              STA FILERR
2052  2BDD- 60                 RTS
2053                   *
2054  2BDE- 8C 35 03   OPENRA1 STY CURSEQ      SAVE CURRENT ENTRY NO
2055  2BE1- A5 DC              LDA FILDRV      GET AND TEST DRIVE
2056  2BE3- 99 41 03           STA FIDVTB,Y
2057  2BE6- 29 FE              AND =$FE
2058  2BE8- F0 05              BEQ OPENRA2     SKIP, IF OK
2059                   *
2060  2BEA- A9 28              LDA =$28        ILLEGAL DRIVE FOR RA
2061  2BEC- 85 DB              STA FILERR
2062  2BEE- 60                 RTS
2063                   *
2064  2BEF- A9 10      OPENRA2 LDA =$10        TEST OLD/NEW FLAG
2065  2BF1- 25 DA              AND FILFLG
2066  2BF3- F0 78              BEQ OPENOLD     SKIP, IF OLD
2067                   *
2068                   * OPEN A NEW FILE
2069                   *
2070  2BF5- A5 DA      OPENNEW LDA FILFLG
2071  2BF7- 29 80              AND =$80        GET PROTECTED FLAG

----------------------------------------------------------------------

R65 PASCAL: RANDOM ACCESS          24/10/23   R65 ASSEMBLER  PAGE 46

2072  2BF9- 09 42              ORA ='B'        BLOCK FILE
2073  2BFB- 8D 00 03           STA FILTYP      SET FILE TYPE
2074                   *
2075  2BFE- A9 00             LDA =0
2076  2C00- AE 37 03           LDX MAXSIZ      SIZE OF FILE
2077  2C03- 8D 15 03           STA FILSIZ
2078  2C06- 8E 16 03           STX FILSIZ+1
2079                   *
2080  2C09- CA                 DEX             COMPUTE FILEA
2081  2C0A- AD 1A 03           LDA FILSA
2082  2C0D- 18                 CLC
2083  2C0E- 69 FF              ADC =$FF
2084  2C10- 8D 1C 03           STA FILEA
2085  2C13- 8A                 TXA
2086  2C14- 6D 1B 03           ADC FILSA+1
2087  2C17- 8D 1D 03           STA FILEA+1
2088                   *
2089  2C1A- 20 1E E8           JSR SETFID      SET FILEDATE
2090                   *
2091  2C1D- A2 10              LDX =16
2092  2C1F- BD 20 03   OPENNE1 LDA FILNM1,X    SET FILNM1 AND FILCY1
2093  2C22- 9D 01 03           STA FILNAM,X    TO FILNAM AND FILCYC
2094  2C25- CA                 DEX
2095  2C26- 10 F7              BPL OPENNE1
2096                   *
2097                   * SEARCH IN DIRECTORY AND RETURN CYCLUS
2098                   * AND DIRECTORY ENTRY TO USE, TEST EXISTING
2099                   * FILES FOR SAME NAME AND CYCLUS, DISK
2100                   * OPERATION IS INITIALIZED
2101                   *
2102  2C28- 20 94 20           JSR PREPWRA
2103  2C2B- 8E 11 03           STX FILCYC
2104                   *
2105                   * FIND FIRST EMPTY DISK DIRECTORY ENTR
2106                   * FETCH ITAND SET FIRST SECTOR OF FILE TO
2107                   * FILLOC, OUTPUT Y,X AS NUMBER OF EMPTY
2108                   * SECTORS
2109                   *
2110  2C2E- 20 97 20           JSR PREPWRB
2111  2C31- 8A                 TXA
2112  2C32- CD 16 03           CMP FILSIZ+1
2113  2C35- 98                 TYA
2114  2C36- E9 00              SBC =0          COMPARE WITH REQUESTED
2115  2C38- B0 05              BCS OPENNE3     SECTORS
2116                   *
2117  2C3A- A9 26              LDA =$26        DISK OVERFLOW
2118  2C3C- 4C 8B 20           JMP DISCER1
2119                   *
2120                   * SET FITEMP,Y AND FITEMP+8,YNTO FIRST SECTOT
2121                   * OF FILE ON DISK, FIMAXT,Y TO SIZE, DIRECTORY

----------------------------------------------------------------------

R65 PASCAL: RANDOM ACCESS          24/10/23   R65 ASSEMBLER  PAGE 47

2122                   * ENTRY NO TO FITEMP+16,Y
2123                   * THEN PUT THIS ENTRY ONTO THE DISKMAND SET
2124                   * A NEW END OF DIRECTORY MARK
2125                   *
2126  2C3F- 20 70 20   OPENNE3 JSR DOPEN4
2127                   *
2128  2C42- AC 35 03           LDY CURSEQ      SETUP DUMMY FIRST SECTOR
2129  2C45- A9 00              LDA =0
2130  2C47- 99 49 03           STA FIBPTB,Y
2131  2C4A- 99 51 03           STA FIRCTB,Y
2132                   *
2133  2C4D- AC 35 03   OPENNE4 LDY CURSEQ      OPEN FILE
2134  2C50- A5 DA              LDA FILFLG
2135  2C52- 0A                 ASL A
2136  2C53- 0A                 ASL A
2137  2C54- 29 80              AND =$80        GET DIRECTION
2138  2C56- 48                 PHA
2139  2C57- 2D 00 03           AND FILTYP
2140  2C5A- F0 06              BEQ OPENNE5     OK, SKIP
2141  2C5C- 68                 PLA             PROTECTED FILE
2142                   *
2143  2C5D- A9 29              LDA =$29
2144  2C5F- 85 DB              STA FILERR
2145  2C61- 60                 RTS
2146                   *
2147  2C62- 68         OPENNE5 PLA
2148  2C63- 09 60              ORA =$60        RA FILE, OPENIT
2149  2C65- 99 39 03           STA FIDRTB,Y
2150                   *
2151  2C68- A9 00              LDA =0          NORMALEXIT
2152  2C6A- 85 DB              STA FILERR
2153  2C6C- 60         OPENNE6 RTS
2154                   *
2155                   * OPEN AN OLD FILE:
2156                   * PREPARE DISK OPERATION, SEARCH REQUESTED
2157                   * FILE AND GET CORRSPONDING DISK ENTRY
2158                   *
2159  2C6D- 20 91 20   OPENOLD JSR PREPRD
2160                   *
2161  2C70- 20 73 20           JSR PRFLB1      PRINT LABEL, IF REQ.
2162  2C73- AD 00 03           LDA FILTYP
2163  2C76- 29 7F              AND =$7F
2164  2C78- C9 42              CMP ='B'        MUST BE BLOCK FILE
2165  2C7A- F0 05              BEQ OPENOL1     SKIP, IF OK
2166                   *
2167  2C7C- A9 05              LDA =5
2168  2C7E- 4C 8B 20           JMP DISCER1     FILE TYPE ERROR
2169                   *
2170  2C81- 20 8E 20   OPENOL1 JSR ENDDO       END OF DISK OPERATION
2171                   *

----------------------------------------------------------------------

R65 PASCAL: RANDOM ACCESS          24/10/23   R65 ASSEMBLER  PAGE 48

2172                   * SET NOW FIRST SECTOR AND SIZE TO TABLE
2173                   *
2174  2C84- 20 6D 20           JSR DOPEN1
2175                   *
2176  2C87- A9 00              LDA =0          GET FIRST RECORD
2177  2C89- 20 90 2C           JSR GETTREC
2178  2C8C- D0 DE              BNE OPENNE6     SKIP, IF NOT OK
2179  2C8E- F0 BD              BEQ OPENNE4     ELSE OPEN FILE
2180                   *
2181                   *
2182                   * GETTREC: GET ONE RECORD FROM RA-FILE
2183                   * RECORD NUMBER IS IN A, FILE NUMBER IN CURSEQ
2184                   * RESULT IUS Z=1,OF OK, ELSE Z=0 AND FILERR
2185                   *
2186  2C90- AE 35 03   GETTREC LDX CURSEQ      SAVE RECORD NO
2187  2C93- 9D 51 03           STA FIRCTB,X
2188  2C96- A9 00              LDA =0          CLEAR UPDATED FLAG
2189  2C98- 9D 49 03           STA FIBPTB,X
2190  2C9B- BD 41 03           LDA FIDVTB,X    SET DRIVE NO
2191  2C9E- 85 DC              STA FILDRV
2192                   *
2193                   * COMPUTE DATA-POINTER AND BINARY
2194                   * TRACK,SECTOR, SETUP FILDRV
2195                   *
2196  2CA0- 20 79 20           JSR PREPSR
2197                   *
2198                   * ADD RECORD NUMBER TO BINARY TRAC/SECTOR
2199                   * TEST SIZE OF FILE, CONVERT TO TRACK AND
2200                   * SECTOR, INITIALIZE DISK OPERATION
2201                   *
2202  2CA3- 20 7C 20           JSR PREPSR1
2203                   *
2204  2CA6- 20 82 20           JSR READ        READ ON SECTOR
2205                   *
2206  2CA9- 4C 8E 20           JMP ENDDO       END OF DISK OPERATION
2207                   *
2208                   * PUTTREC: SAVE CURRENT RECORD ON DISK
2209                   * FILE NUMBER IN CURSEQ, RECORD NUMBER IN
2210                   * FIRCTB,Y, RETURNS Z=1 IF OK, ELSE FILERR
2211                   *
2212  2CAC- BD 41 03   PUTTREC LDA FIDVTB,X
2213  2CAF- 85 DC              STA FILDRV
2214  2CB1- 20 79 20           JSR PREPSR      SEE GETTREC FOR
2215  2CB4- 20 7C 20           JSR PREPSR1     COMMENTS
2216  2CB7- 20 85 20           JSR WRITE
2217  2CBA- 4C 8E 20           JMP ENDDO
2218                   *
2219                   * GETNEWR: GET A NEW RECORD, SAVE OLD, IF
2220                   * OLD HAS BEEN UPDATED
2221                   * ENTRY: NEW RECORD IN A, FILE NO IN CURSEQ

----------------------------------------------------------------------

R65 PASCAL: RANDOM ACCESS          24/10/23   R65 ASSEMBLER  PAGE 49

2222                   * EXIT: z=1 IF OK, ELSE FILERR
2223                   *
2224  2CBD- 8D 34 03   GETNEWR STA SAVRST+1    SAVE REQUESTED RECORD
2225  2CC0- AE 35 03           LDX CURSEQ
2226  2CC3- BD 49 03           LDA FIBPTB,X    UPDATED?
2227  2CC6- 10 05              BPL GETNEW1
2228                   *
2229  2CC8- 20 AC 2C           JSR PUTTREC     YES, SAVE IT
2230  2CCB- D0 23              BNE EXIT
2231                   *
2232  2CCD- AD 34 03   GETNEW1 LDA SAVRST+1    GET REQUESTED RECORD
2233  2CD0- 4C 90 2C           JMP GETTREC
2234                   *
2235                   * GETBYTE: GET ONE BYTE FROM FILE
2236                   *********************************
2237                   * ENTRY: FILE NUMBER IN X
2238                   *        POINTER IN A(LOW) AND Y(HIGH)
2239                   * EXIT:  FILERR IN Y AND STATUS, BYTE IN A
2240                   *
2241  2CD3- 8D 33 03   GETBYTE STA SAVRST      SAVE A
2242  2CD6- 20 20 2D           JSR TESTRA
2243                   *
2244  2CD9- 98                 TYA
2245  2CDA- DD 51 03           CMP FIRCTB,X    IS IT IN CURRENT RECORD?
2246  2CDD- F0 05              BEQ GETBYT1     YES, SKIP
2247                   *
2248  2CDF- 20 BD 2C           JSR GETNEWR     NO, GET NEW RECORD
2249  2CE2- D0 0C              BNE EXIT
2250                   *
2251  2CE4- 20 76 20   GETBYT1 JSR CPOINT      COMPUTE BUFFER PNT
2252  2CE7- AC 33 03           LDY SAVRST      RESTORE LOW POINTER
2253  2CEA- B1 FA              LDA (POINT),Y   GET THE BYTE
2254  2CEC- A0 00              LDY =0
2255  2CEE- 84 DB              STY FILERR      OK
2256  2CF0- 60         EXIT    RTS
2257                   *
2258                   * PUTBYTE: PUT ONE BYTE TO FILE
2259                   *******************************
2260                   *
2261                   * ENTRY: BYTE STORED IN KCHAR
2262                   *        FILE NUMBER IN X
2263                   *        POINTER IN A(LOW) AND Y(HIGH)
2264                   * EXIT:  FILERR IN Y AND STATUS
2265                   *
2266  2CF1- 8D 33 03   PUTBYTE STA SAVRST
2267  2CF4- 20 20 2D           JSR TESTRA
2268  2CF7- BD 39 03           LDA FIDRTB,X    IS WRITE ALLOWED?
2269  2CFA- 30 05              BMI PUTBYT0     YES,SKIP
2270  2CFC- A0 29              LDY =$29        WRITE NOT ALLOWED
2271  2CFE- 84 DB             STY FILERR

----------------------------------------------------------------------

R65 PASCAL: RANDOM ACCESS          24/10/23   R65 ASSEMBLER  PAGE 50

2272  2D00- 60                 RTS
2273                   *
2274  2D01- 98         PUTBYT0 TYA             FOR COMMENTS
2275  2D02- DD 51 03           CMP FIRCTB,X    SEE GETBYTE
2276  2D05- F0 05              BEQ PUTBYT1
2277                   *
2278  2D07- 20 BD 2C           JSR GETNEWR
2279  2D0A- D0 E4              BNE EXIT
2280                   *
2281  2D0C- 20 76 20   PUTBYT1 JSR CPOINT
2282  2D0F- A9 80              LDA =$80        SET UPDATED FLAG
2283  2D11- 9D 49 03           STA FIBPTB,X
2284  2D14- AC 33 03           LDY SAVRST
2285  2D17- A5 FE              LDA KCHAR       GET BACK KCHAR
2286  2D19- 91 FA              STA (POINT),Y
2287  2D1B- A0 00              LDY =0
2288  2D1D- 84 DB              STY FILERR
2289  2D1F- 60                 RTS
2290                   *
2291                   *
2292                   * TESTRA: TEST X FOR LEGAL RA-FILE
2293                   *
2294  2D20- 8E 35 03   TESTRA  STX CURSEQ
2295  2D23- EC 36 03           CPX MAXSEQ
2296  2D26- B0 0A              BCS TESTRA2
2297                   *
2298  2D28- BD 39 03   TESTRA1 LDA FIDRTB,X
2299  2D2B- 29 60              AND =$60
2300  2D2D- C9 60              CMP =$60
2301  2D2F- D0 03              BNE TESTRA3     SKIP, IF NOT OK
2302  2D31- 60                 RTS
2303                   *
2304  2D32- F0 F4      TESTRA2 BEQ TESTRA1
2305  2D34- 68         TESTRA3 PLA
2306  2D35- 68                 PLA
2307  2D36- A0 25              LDY =$25        FILE NUMBER NOT ALLOWED
2308  2D38- 84 DB              STY FILERR
2309  2D3A- 60                 RTS
2310                   *
2311                   * CLOSRA: CLOSE RA OR SEQUENTIAL FILE IN X
2312                   ******************************************
2313                   * ENTRY: FILE IN X
2314                   * EXIT: FILERR IN Y AND STATUS
2315                   *
2316  2D3B- BD 39 03   CLOSRA  LDA FIDRTB,X
2317  2D3E- 29 40              AND =$40        SEQUENTIAL FILE?
2318  2D40- D0 03              BNE CLOSRA1     NO, SKIP
2319  2D42- 4C 7F 20           JMP CLOSE       YES, CLOSE IT
2320                   *
2321  2D45- 20 20 2D   CLOSRA1 JSR TESTRA      MUST BE RA-FILE

----------------------------------------------------------------------

R65 PASCAL: RANDOM ACCESS          24/10/23   R65 ASSEMBLER  PAGE 51

2322  2D48- BD 49 03           LDA FIBPTB,X    UPDATED?
2323  2D4B- F0 05              BEQ CLOSRA2     NO, SKIP
2324                   *
2325  2D4D- 20 AC 2C           JSR PUTTREC
2326  2D50- D0 0B              BNE CLOSRA3
2327                   *
2328  2D52- AE 35 03   CLOSRA2 LDX CURSEQ
2329  2D55- A9 00              LDA =0
2330  2D57- 9D 39 03           STA FIDRTB,X    CLOSE IT
2331  2D5A- A8                 TAY
2332  2D5B- 84 DB              STY FILERR
2333  2D5D- 60         CLOSRA3 RTS
2334                   *
2335                   ENDCODE EQU *
2336                   *
2337                           TIT R65 PASCAL: LABELS
2338                   *
2339  2D5E-                    END
LABELS=0157
ERRORS=00
RECORDS=73
