

----------------------------------------------------------------------

R65 PASCAL: LABELS                 01/11/23   R65 ASSEMBLER  PAGE 01

0001                    *
0002                   *       **********************
0003                   *       * R65 PASCAL RUNTIME *
0004                   *       **********************
0005                   *
0006                   * VERSION 5.3 01/06/82 RRICHARZ,RBAUMANN
0007                   * IMPROVED 2019-2023 RRICHARZ
0008                   *
0009                           TIT R65 PASCAL RUNTIME
0010                   *
0011                   * INCLUDES RANDOM ACCESS FILE HANDLING,
0012                   * FLOATING POINT MATH, FILE HANDLING ERROR
0013                   * TESTING (OPTIONAL) AND CPNT POINTERS
0014                   *
0015                           ORG 0
0016                   *
0017  0000-            ACCU    BSS 4   TOP OF STACKELEMENT
0018                   X1      EQU ACCU        FLP ACCU
0019                   M1      EQU ACCU+1
0020  0004-            E       BSS 4   FLP SCRATCH REGISTER
0021  0008-            SP      BSS 2   CURRENT STACK (-128)
0022  000A-            PC      BSS 2   PROGRAM COUNTER
0023  000C-            RUNERR  BSS 1   RUNTIME ERROR CODE
0024  000D-            DEVICE  BSS 1   I/O DEVICE CODE
0025  000E-            ENDSTK  BSS 2   END OF STACK (-128)
0026  0010-            SIGN    BSS 1   TEMPORARY SIGN
0027  0011-            STPROG  BSS 2   START OF USER PROGRAM
0028  0013-            EOPROG  BSS 2   END OF USER PRORMA
0029  0015-            BUFFPN  BSS 1   INPUT BUFFER POINTER
0030  0016-            ENDBUF  BSS 1   END OF INPUT BUFFER
0031  0017-            BASE    BSS 2   CURRENT BASE (-128)
0032  0019-            ABASE   BSS 2   ALTERNATE BASE (-128)
0033  001B-            ARG1    BSS 2   TEMPORARY ARGUMENT
0034  001D-            ARG3    BSS 4   TEMPORARY REGISTERS
0035  0021-            ARG2    BSS 2
0036                   X2      EQU ARG1        FLP REGISTER
0037                   M2      EQU ARG1+1
0038  0023-            IOCHECK BSS 1   IO ERROR CHECKING FLAG
0039  0024-            LINBUF  BSS 56  INPUT LINE BUFFER
0040                   *
0041                   FILFLG  EQU $DA
0042                   FILERR  EQU $DB
0043                   FILDRV  EQU $DC
0044                   TRACK   EQU $DD
0045                   SECTOR  EQU $DE
0046                   DATA    EQU $E0
0047                   VIDPNT  EQU $E9
0048                   POINT   EQU $FA
0049                   KCHAR   EQU $FE
0050                   *

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 01/11/23   R65 ASSEMBLER  PAGE 01

0051                   EMUCOM  EQU $1430       EMULATOR COMMAND REG
0052                   MULTA   EQU $14E0
0053                   MULTB   EQU $14E1
0054                   MULTR   EQU $14E2
0055                   *
0056                   FILTYP  EQU $0300
0057                   FILNAM  EQU $0301
0058                   FILCYC  EQU $0311
0059                   FILSTP  EQU $0312
0060                   FILLOC  EQU $0313
0061                   FILSIZ  EQU $0315
0062                   FILSA   EQU $031A
0063                   FILEA   EQU $031C
0064                   FILNM1  EQU $0320
0065                   FILCY1  EQU $0330
0066                   FILSA1  EQU $0331
0067                   SAVRST  EQU $0333
0068                   CURSEQ  EQU $0335
0069                   MAXSEQ  EQU $0336
0070                   MAXSIZ  EQU $0337
0071                   FIDRTB  EQU $0339
0072                   FIDVTB  EQU $0341
0073                   FIBPTB  EQU $0349
0074                   FIRCTB  EQU $0351
0075                   GRX     EQU $03AE
0076                   GRY     EQU $03AF
0077                   GRC     EQU $03B0
0078                   SFLAG   EQU $1781
0079                   NUMCHR  EQU $178A
0080                   VMON    EQU $17D5
0081                   SAVS    EQU $17FF
0082                   *
0083                   APLOTCH EQU $C818
0084                   GETKEY  EQU $E000
0085                   AUTOPR  EQU $E00C
0086                   ENDLIN  EQU $E024
0087                   PRTINF  EQU $E027
0088                   GETCHR  EQU $E003
0089                   GETLIN  EQU $E006
0090                   PRTCHR  EQU $E009
0091                   PRTBYT  EQU $E02D
0092                   PRTAX   EQU $E030
0093                   PRTRSA  EQU $E836
0094                   RDFILE  EQU $E815
0095                   SETFID  EQU $E81E
0096                   OPEN    EQU $F00F
0097                   READCH  EQU $F018
0098                   WRITCH  EQU $F01B
0099                   GETNAM  EQU $F815
0100                   *

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 01/11/23   R65 ASSEMBLER  PAGE 02

0101  005C-                    ORG $2000
0102                   *
0103                           PAG

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 01/11/23   R65 ASSEMBLER  PAGE 03

0104                   *
0105                   * ENTRY VECTORS
0106                   *
0107  2000- 4C 4D 2B           JMP COLDST      COLD START ENTRY VECTOR
0108  2003- 4C BB 29           JMP WARMST      WARM START ENTRY VECTOR
0109  2006- 4C 80 29           JMP PERROR      PASCAL ERROR
0110                   *
0111  2009- 09 2E      USERST  WRD ENDCODE+32
0112  200B- FF C7      USEREND WRD $C7FF
0113                   *
0114  200D- 4C F2 FC   HARGUM  JMP $FCF2       #######
0115                   *
0116                   *
0117                   * P-CODE 00:  STOP      (END OF EXECUTION)
0118                   ******************
0119                   * NO ARGUMENTS
0120                   *
0121  2010- A5 11      STOP    LDA STPROG      IS ANOTHER PROGRAM
0122  2012- A6 12              LDX STPROG+1    RUNNING?
0123  2014- CD 09 20           CMP USERST
0124  2017- D0 20              BNE STOP1
0125  2019- EC 0A 20           CPX USERST+1
0126  201C- D0 1B              BNE STOP1
0127                   *
0128  201E- 20 27 E0           JSR PRTINF      NO, STOP PASCAL
0129  2021- 0D 0A 51           BYT $0D,$0A,'Quit Pascal'+$80
0129  2024- 75 69 74 
0129  2027- 20 50 61 
0129  202A- 73 63 61 
0129  202D- EC 
0130  202E- AD 81 17           LDA SFLAG
0131  2031- 29 FE              AND =$FE        CLEAR PASCAL RUNTIME BIT
0132  2033- 8D 81 17           STA SFLAG       IN SFLAG
0133  2036- 6C D5 17           JMP (VMON)
0134                   *
0135  2039- 38         STOP1   SEC             YES, COMPUTE OLD SP
0136  203A- E9 8C              SBC =140
0137  203C- B0 01              BCS *+3
0138  203E- CA                 DEX
0139  203F- 85 08              STA SP
0140  2041- 86 09              STX SP+1
0141  2043- A0 8C              LDY =140
0142  2045- 20 5E 27           JSR GETBACK
0143  2048- 85 13              STA EOPROG
0144  204A- 86 14              STX EOPROG+1
0145  204C- 20 5E 27           JSR GETBACK
0146  204F- 85 11              STA STPROG
0147  2051- 86 12              STX STPROG+1
0148  2053- 20 5E 27           JSR GETBACK
0149  2056- 85 0A              STA PC

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 01/11/23   R65 ASSEMBLER  PAGE 04

0150  2058- 86 0B              STX PC+1
0151  205A- 20 5E 27           JSR GETBACK
0152  205D- 85 17              STA BASE
0153  205F- 86 18              STX BASE+1
0154  2061- 20 5E 27           JSR GETBACK
0155  2064- 85 00              STA ACCU
0156  2066- 86 01              STX ACCU+1
0157  2068- AE FF 17           LDX SAVS        RESTORE STACK POINTER
0158  206B- 9A                 TXS
0159  206C- 4C 54 2A           JMP LOOP
0160                   *
0161                   *
0162  206F- 4C FF F0   DOPEN1  JMP $F0FF
0163  2072- 4C 45 F1   DOPEN4  JMP $F145
0164  2075- 4C 51 F1   PRFLB1  JMP $F151
0165  2078- 4C 59 F1   CPOINT  JMP $F159
0166  207B- 4C E0 F1   PREPSR  JMP $F1E0
0167  207E- 4C 9E F2   PREPSR1 JMP $F29E
0168  2081- 4C BF F2   CLOSE   JMP $F2BF
0169  2084- 4C 57 F4   READ    JMP $F457
0170  2087- 4C 25 F4   WRITE   JMP $F425
0171  208A- 4C A7 F4   PREPDO  JMP $F4A7
0172  208D- 4C FD F5   DISCER1 JMP $F5FD
0173  2090- 4C 25 F6   ENDDO   JMP $F625
0174  2093- 4C 2C F6   PREPRD  JMP $F62C
0175  2096- 4C 51 F6   PREPWRA JMP $F651
0176  2099- 4C 6D F6   PREPWRB JMP $F66D
0177                   *
0178                   *
0179                   * P-CODE 01: RETN       (RETURN FROM PROCEDURE
0180                   *****************
0181                   * NO ARGUMENTS
0182                   *
0183  209C- A5 17      RETN    LDA BASE        SP=BASE-2
0184  209E- 38                 SEC
0185  209F- E9 02              SBC =2
0186  20A1- 85 08              STA SP
0187  20A3- A5 18              LDA BASE+1
0188  20A5- E9 00              SBC =0
0189  20A7- 85 09              STA SP+1
0190  20A9- A0 80              LDY =128        GET STACK TOP ELEMENT
0191  20AB- B1 08              LDA (SP),Y
0192  20AD- 85 00              STA ACCU
0193  20AF- C8                 INY
0194  20B0- B1 08              LDA (SP),Y
0195  20B2- 85 01              STA ACCU+1
0196  20B4- A0 84              LDY =132
0197  20B6- B1 08              LDA (SP),Y      GET SAVED OLD BASE
0198  20B8- 85 17              STA BASE
0199  20BA- C8                 INY

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 01/11/23   R65 ASSEMBLER  PAGE 05

0200  20BB- B1 08              LDA (SP),Y
0201  20BD- 85 18              STA BASE+1
0202  20BF- C8                 INY
0203  20C0- B1 08              LDA (SP),Y      AND RETURN ADDRESS
0204  20C2- 18                 CLC
0205  20C3- 69 02              ADC =2
0206  20C5- 85 0A              STA PC
0207  20C7- C8                 INY
0208  20C8- B1 08              LDA (SP),Y
0209  20CA- 69 00              ADC =0
0210  20CC- 85 0B              STA PC+1
0211  20CE- 60                 RTS
0212                   *
0213                   * P-CODE 02: NEGA       (NEGATE ACCU)
0214                   *****************
0215                   * NO ARGUMENTS
0216                   *
0217  20CF- A9 00      NEGA    LDA =0
0218  20D1- 38                 SEC
0219  20D2- E5 00              SBC ACCU
0220  20D4- 85 00              STA ACCU
0221  20D6- A9 00              LDA =0
0222  20D8- E5 01              SBC ACCU+1
0223  20DA- 85 01              STA ACCU+1
0224  20DC- 60                 RTS
0225                   *
0226                   * P-CODE 03: ADDA       (ADD)
0227                   *****************
0228                   * NO ARGUMENTS
0229                   *
0230  20DD- A0 7E      ADDA    LDY =126
0231  20DF- 18                 CLC
0232  20E0- B1 08              LDA (SP),Y
0233  20E2- 65 00              ADC ACCU
0234  20E4- 85 00              STA ACCU
0235  20E6- C8                 INY
0236  20E7- B1 08              LDA (SP),Y
0237  20E9- 65 01              ADC ACCU+1
0238  20EB- 85 01              STA ACCU+1
0239                   *
0240  20ED- A5 08      DECS2   LDA SP
0241  20EF- 38                 SEC
0242  20F0- E9 02              SBC =2
0243  20F2- 85 08              STA SP
0244  20F4- B0 02              BCS *+4
0245  20F6- C6 09              DEC SP+1
0246  20F8- 60                 RTS
0247                   *
0248                   * P-CODE 04: SUBA       (SUBTRACT)
0249                   *****************

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 01/11/23   R65 ASSEMBLER  PAGE 06

0250                   * NO ARGUMENTS
0251                   *
0252  20F9- A0 7E      SUBA    LDY =126
0253  20FB- 38                 SEC
0254  20FC- B1 08              LDA (SP),Y
0255  20FE- E5 00             SBC ACCU
0256  2100- 85 00              STA ACCU
0257  2102- C8                 INY
0258  2103- B1 08              LDA (SP),Y
0259  2105- E5 01              SBC ACCU+1
0260  2107- 85 01              STA ACCU+1
0261  2109- 4C ED 20           JMP DECS2
0262                   *
0263                   * P-CODE 05: MULA       (MULTIPLY)
0264                   *****************
0265                   * NO ARGUMENTS
0266                   *
0267  210C- 20 46 21   MULA    JSR GETSIGN     COMPUTE SIGN OF RESULT
0268  210F- A5 00              LDA ACCU
0269  2111- 78                 SEI
0270  2112- 8D E0 14           STA MULTA
0271  2115- A5 1B              LDA ARG1        GET SAVED ARGUMENT
0272  2117- 8D E1 14           STA MULTB
0273  211A- AD E2 14           LDA MULTR
0274  211D- 85 00              STA ACCU
0275  211F- AD E3 14           LDA MULTR+1
0276  2122- A6 1C              LDX ARG1+1
0277  2124- 8E E1 14           STX MULTB
0278  2127- 18                 CLC
0279  2128- 6D E2 14           ADC MULTR
0280  212B- A6 01              LDX ACCU+1
0281  212D- 8E E0 14           STX MULTA
0282  2130- A6 1B              LDX ARG1
0283  2132- 8E E1 14           STX MULTB
0284  2135- 18                 CLC
0285  2136- 6D E2 14           ADC MULTR
0286  2139- 58                 CLI
0287  213A- 29 7F              AND =$7F
0288  213C- 85 01              STA ACCU+1
0289  213E- 20 ED 20           JSR DECS2
0290  2141- A5 10              LDA SIGN
0291  2143- 30 8A              BMI NEGA
0292  2145- 60                 RTS
0293                   *
0294  2146- A5 01      GETSIGN LDA ACCU+1
0295  2148- 85 10              STA SIGN
0296  214A- 10 03              BPL *+5
0297  214C- 20 CF 20           JSR NEGA
0298                   *
0299  214F- A0 7F              LDY =127

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 01/11/23   R65 ASSEMBLER  PAGE 07

0300  2151- B1 08              LDA (SP),Y
0301  2153- 10 14              BPL GETSI1
0302  2155- 45 10              EOR SIGN
0303  2157- 85 10              STA SIGN
0304  2159- 88                 DEY
0305  215A- A9 00              LDA =0
0306  215C- 38                 SEC
0307  215D- F1 08              SBC (SP),Y
0308  215F- 85 1B              STA ARG1
0309  2161- C8                 INY
0310  2162- A9 00              LDA =0
0311  2164- F1 08              SBC (SP),Y
0312  2166- 85 1C              STA ARG1+1
0313  2168- 60                 RTS
0314                   *
0315  2169- 85 1C      GETSI1  STA ARG1+1
0316  216B- 88                 DEY
0317  216C- B1 08              LDA (SP),Y
0318  216E- 85 1B              STA ARG1
0319  2170- 60                 RTS
0320                   *
0321                   * PCODE 06: DIVA        (DIVIDE)
0322                   ****************
0323                   *
0324  2171- A0 7E      DIVA    LDY =126
0325  2173- B1 08              LDA (SP),Y
0326  2175- 85 1B              STA ARG1
0327  2177- C8                 INY
0328  2178- B1 08              LDA (SP),Y
0329  217A- 85 1C              STA ARG1+1
0330  217C- 20 ED 20           JSR DECS2
0331                   *
0332  217F- A5 1C              LDA ARG1+1
0333  2181- 29 80              AND =$80
0334  2183- F0 02              BEQ *+4
0335  2185- A9 FF              LDA =$FF
0336  2187- 85 21              STA ARG2
0337  2189- 85 22              STA ARG2+1
0338  218B- AA                 TAX
0339  218C- 18                 CLC
0340  218D- 65 1B              ADC ARG1
0341  218F- 85 1B              STA ARG1
0342  2191- 8A                 TXA
0343  2192- 65 1C              ADC ARG1+1
0344  2194- 85 1C              STA ARG1+1
0345  2196- 8A                 TXA
0346  2197- 45 01              EOR ACCU+1
0347  2199- 85 10              STA SIGN
0348  219B- 10 03              BPL *+5
0349  219D- 20 CF 20           JSR NEGA

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 01/11/23   R65 ASSEMBLER  PAGE 08

0350  21A0- A0 11              LDY =$11
0351  21A2- A5 00              LDA ACCU
0352  21A4- 05 01              ORA ACCU+1
0353  21A6- D0 05              BNE DIV1
0354  21A8- A2 81              LDX =$81        PASCAL RUNTIME ERROR
0355  21AA- 4C 80 29           JMP PERROR      DIVISION BY ZERO
0356                   *
0357  21AD- 38         DIV1    SEC
0358  21AE- A5 21              LDA ARG2
0359  21B0- E5 00              SBC ACCU
0360  21B2- 48                 PHA
0361  21B3- A5 22              LDA ARG2+1
0362  21B5- E5 01              SBC ACCU+1
0363  21B7- 48                 PHA
0364  21B8- 45 22              EOR ARG2+1
0365  21BA- 30 09              BMI DIV2
0366  21BC- 68                 PLA
0367  21BD- 85 22              STA ARG2+1
0368  21BF- 68                 PLA
0369  21C0- 85 21              STA ARG2
0370  21C2- 38                 SEC
0371  21C3- B0 03              BCS DIV3
0372                   *
0373  21C5- 68         DIV2    PLA
0374  21C6- 68                 PLA
0375  21C7- 18                 CLC
0376  21C8- 26 1B      DIV3    ROL ARG1
0377  21CA- 26 1C              ROL ARG1+1
0378  21CC- 26 21              ROL ARG2
0379  21CE- 26 22              ROL ARG2+1
0380  21D0- 88                 DEY
0381  21D1- D0 DA              BNE DIV1
0382  21D3- A5 1B              LDA ARG1
0383  21D5- A6 1C              LDX ARG1+1
0384  21D7- 85 00              STA ACCU
0385  21D9- 86 01              STX ACCU+1
0386  21DB- A5 10              LDA SIGN
0387  21DD- 10 03              BPL *+5
0388  21DF- 4C CF 20           JMP NEGA
0389  21E2- 60                 RTS
0390                   *
0391                   * P-CODE 07: LOWB       (LOW BIT)
0392                   *****************
0393                   * NO ARGUMENTS
0394                   *
0395  21E3- A5 00      LOWB    LDA ACCU
0396  21E5- 29 01              AND =1
0397  21E7- 85 00      LOWB1   STA ACCU
0398  21E9- A9 00              LDA =0
0399  21EB- 85 01              STA ACCU+1

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 01/11/23   R65 ASSEMBLER  PAGE 09

0400  21ED- 60                 RTS
0401                   *
0402                   * P-CODE 08: TEQU       (TEST EQUAL)
0403                   *****************
0404                   *
0405  21EE- 20 F9 20   TEQU    JSR SUBA
0406  21F1- A5 00              LDA ACCU
0407  21F3- 05 01              ORA ACCU+1
0408  21F5- F0 04              BEQ TEQU1
0409  21F7- A9 00              LDA =0
0410  21F9- F0 EC              BEQ LOWB1       UNCOND.
0411                   *
0412  21FB- A9 01      TEQU1   LDA =1
0413  21FD- D0 E8              BNE LOWB1       UNCOND.
0414                   *
0415                   * PCODE 09: TNEQ        (TEST NOT EQUAL)
0416                   ****************
0417                   *
0418  21FF- 20 EE 21  TNEQ    JSR TEQU
0419  2202- A5 00              LDA ACCU
0420  2204- 49 01              EOR =1
0421  2206- 85 00              STA ACCU
0422  2208- 60                 RTS
0423                   *
0424                   * P-CODE 0A: TLES       (TEST LESS)
0425                   *****************
0426                   *
0427  2209- 20 F9 20   TLES    JSR SUBA
0428  220C- A9 00              LDA =0
0429  220E- 06 01              ASL ACCU+1
0430  2210- 2A                 ROL A
0431  2211- 90 D4              BCC LOWB1       UNCOND.
0432                   *
0433                   * P-CODE 0B: TGRE       (TEST GREATER OR EQUAL)
0434                   *****************
0435                   *
0436  2213- 20 09 22   TGRE    JSR TLES
0437  2216- 4C 02 22           JMP TNEQ+3
0438                   *
0439                   * P-CODE 0C: TGRTS      (TEST GREATER)
0440                   ******************
0441                   *
0442  2219- 20 EE 26   TGRT    JSR EXST
0443  221C- 4C 09 22           JMP TLES
0444                   *
0445                   * P-CODE 0D: TLEE       (TEST LESS OR EQUAL)
0446                   *****************
0447                   *
0448  221F- 20 19 22   TLEE    JSR TGRT
0449  2222- 4C 02 22           JMP TNEQ+3

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 01/11/23   R65 ASSEMBLER  PAGE 10

0450                   *
0451                   * P-CODE 0E: ORAC       (BITWISE OR)
0452                   *****************
0453                   *
0454  2225- A0 7E      ORAC    LDY =126
0455  2227- B1 08              LDA (SP),Y
0456  2229- 05 00              ORA ACCU
0457  222B- 85 00              STA ACCU
0458  222D- C8                 INY
0459  222E- B1 08              LDA (SP),Y
0460  2230- 05 01              ORA ACCU+1
0461  2232- 85 01              STA ACCU+1
0462  2234- 4C ED 20           JMP DECS2
0463                   *
0464                   * P-CODE 0F: ANDA       (BITWISE AND)
0465                   *****************
0466                   *
0467  2237- A0 7E      ANDA    LDY =126
0468  2239- B1 08              LDA (SP),Y
0469  223B- 25 00              AND ACCU
0470  223D- 85 00              STA ACCU
0471  223F- C8                 INY
0472  2240- B1 08              LDA (SP),Y
0473  2242- 25 01              AND ACCU+1
0474  2244- 85 01              STA ACCU+1
0475  2246- 4C ED 20           JMP DECS2
0476                   *
0477                   * PCODE 10: EORA        (BITWISE OR)
0478                   ****************
0479                   *
0480  2249- A0 7E      EORA    LDY =126
0481  224B- B1 08              LDA (SP),Y
0482  224D- 45 00              EOR ACCU
0483  224F- 85 00              STA ACCU
0484  2251- C8                 INY
0485  2252- B1 08              LDA (SP),Y
0486  2254- 45 01              EOR ACCU+1
0487  2256- 85 01              STA ACCU+1
0488  2258- 4C ED 20           JMP DECS2
0489                   *
0490                   * P-CODE 11: NOTA       (BITWISE NOT)
0491                   *****************
0492                   *
0493  225B- A5 00      NOTA    LDA ACCU
0494  225D- 49 FF              EOR =$FF
0495  225F- 85 00              STA ACCU
0496  2261- A5 01              LDA ACCU+1
0497  2263- 49 FF              EOR =$FF
0498  2265- 85 01              STA ACCU+1
0499  2267- 60                 RTS

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 01/11/23   R65 ASSEMBLER  PAGE 11

0500                   *
0501                   * P-CODE 12: LEFT       (SHIFT LEFT N BYTES)
0502                   *****************
0503                   *
0504  2268- 20 CF 20           JSR NEGA
0505  226B- A5 01      LEFT    LDA ACCU+1
0506  226D- 30 12              BMI RIGH-3      ARGUMENT NEGATIVE
0507                   *
0508  226F- A6 00              LDX ACCU
0509  2271- F0 0B              BEQ LEFT2       TAKE ONLY LOW BYTE
0510  2273- 20 DE 22           JSR GETS2       GET SECOND NO FROM ST
0511  2276- 06 00      LEFT1   ASL ACCU
0512  2278- 26 01              ROL ACCU+1
0513  227A- CA                 DEX
0514  227B- D0 F9              BNE LEFT1
0515  227D- 60                 RTS
0516                   *
0517  227E- 4C DE 22   LEFT2   JMP GETS2
0518                   *
0519                   * P-CODE 13: RIGH       (SHIFT RIGHT N BYTES)
0520                   *****************
0521                   *
0522  2281- 20 CF 20           JSR NEGA
0523  2284- A5 01      RIGH    LDA ACCU+1
0524  2286- 30 E0              BMI LEFT-3
0525  2288- A6 00              LDX ACCU
0526  228A- F0 F2              BEQ LEFT2
0527  228C- 20 DE 22           JSR GETS2
0528  228F- 46 01      RIGH1   LSR ACCU+1
0529  2291- A9 00              LDA =0
0530  2293- 90 02              BCC *+4
0531  2295- A9 80              LDA =128
0532  2297- 46 00              LSR ACCU
0533  2299- 05 00              ORA ACCU
0534  229B- 85 00              STA ACCU
0535  229D- CA                 DEX
0536  229E- D0 EF              BNE RIGH1
0537  22A0- 60                 RTS
0538                   *
0539                   * P-CODE 14:INCA        (INCREMENT ACCU)
0540                   ****************
0541                   *
0542  22A1- E6 00      INCA    INC ACCU
0543  22A3- D0 02              BNE *+4
0544  22A5- E6 01              INC ACCU+1
0545  22A7- 60                 RTS
0546                   *
0547                   * P-CODE 15: DECA       (DECREMENT ACCU)
0548                   *****************
0549                   *

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 01/11/23   R65 ASSEMBLER  PAGE 12

0550  22A8- A5 00      DECA    LDA ACCU
0551  22AA- D0 02              BNE *+4
0552  22AC- C6 01              DEC ACCU+1
0553  22AE- C6 00              DEC ACCU
0554  22B0- 60                 RTS
0555                   *
0556                   * P-CODE 16: COPY       (COPY ACCU0
0557                   *****************
0558                   *
0559  22B1- 20 C0 22   COPY    JSR INCS2       INCREMENT STACK
0560  22B4- A0 7E              LDY =126
0561  22B6- A5 00              LDA ACCU
0562  22B8- 91 08              STA (SP),Y
0563  22BA- C8                 INY
0564  22BB- A5 01              LDA ACCU+1
0565  22BD- 91 08              STA (SP),Y
0566  22BF- 60                 RTS
0567                   *
0568  22C0- A9 02      INCS2   LDA =2
0569  22C2- 18                 CLC
0570  22C3- 65 08              ADC SP
0571  22C5- 85 08              STA SP
0572  22C7- 90 02              BCC *+4
0573  22C9- E6 09              INC SP+1
0574  22CB- C5 0E      INCS2A  CMP ENDSTK      TEST STACK OVERFLOW
0575  22CD- A5 09              LDA SP+1
0576  22CF- E5 0F              SBC ENDSTK+1
0577  22D1- B0 06              BCS INCS2B
0578  22D3- A9 05              LDA =5          LET EMULATOR KNOW THAT
0579  22D5- 8D 30 14           STA EMUCOM      SP HAS BEEN INCREASED
0580  22D8- 60                 RTS
0581                   *
0582  22D9- A0 82      INCS2B  LDY =$82        PASCAL RUN TIME ERROR
0583  22DB- 4C 80 29           JMP PERROR      STACK OVERFLOW
0584                   *
0585                   * GETS2
0586                   *
0587  22DE- A0 7E      GETS2   LDY =126
0588  22E0- B1 08              LDA (SP),Y
0589  22E2- 85 00              STA ACCU
0590  22E4- C8                 INY
0591  22E5- B1 08              LDA (SP),Y
0592  22E7- 85 01              STA ACCU+1
0593  22E9- 4C ED 20           JMP DECS2
0594                   *
0595                   * P-CODE 17: PEEK
0596                   *****************
0597                   *
0598  22EC- A0 00      PEEK    LDY =0
0599  22EE- B1 00              LDA (ACCU),Y

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 01/11/23   R65 ASSEMBLER  PAGE 13

0600  22F0- 85 00              STA ACCU
0601  22F2- 84 01              STY ACCU+1
0602  22F4- 60                 RTS
0603                   *
0604                   * P-CODE 18: POKE
0605                   *****************
0606                   *
0607  22F5- A6 00      POKE    LDX ACCU
0608  22F7- 20 DE 22           JSR GETS2
0609  22FA- A0 00              LDY =0
0610  22FC- 8A                 TXA
0611  22FD- 91 00              STA (ACCU),Y
0612  22FF- 4C DE 22          JMP GETS2
0613                   *
0614                   * P-CODE 19: CALA
0615                   *****************
0616                   *
0617  2302- 20 08 23   CALA    JSR CALA1
0618  2305- 4C DE 22           JMP GETS2
0619                   *
0620  2308- 6C 00 00   CALA1   JMP (ACCU)
0621                   *
0622                   * P-CODE 1A: RLIN
0623                   *****************
0624                   *
0625  230B- 20 06 E0   RLIN    JSR GETLIN
0626  230E- A2 00              LDX =0
0627  2310- B1 E9              LDA (VIDPNT),Y
0628  2312- 29 7F              AND =$7F
0629  2314- 95 24              STA LINBUF,X
0630  2316- E8                 INX
0631  2317- C8                 INY
0632  2318- CC 8A 17           CPY NUMCHR
0633  231B- 90 F3              BCC *-11
0634  231D- F0 F1              BEQ *-13
0635  231F- CA                 DEX
0636  2320- 30 06              BMI *+8
0637  2322- B5 24              LDA LINBUF,X
0638  2324- C9 20              CMP =$20
0639  2326- F0 F7              BEQ *-7
0640  2328- E8                 INX
0641  2329- 86 16              STX ENDBUF
0642  232B- A9 00              LDA =0
0643  232D- 85 15              STA BUFFPN
0644  232F- 20 27 E0           JSR PRTINF
0645  2332- 0D 8A              BYT $D,$8A
0646  2334- 60                 RTS
0647                   *
0648                   * P-CODE 1B: GETC
0649                   *****************

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 01/11/23   R65 ASSEMBLER  PAGE 14

0650                   *
0651  2335- 20 B1 22   GETC    JSR COPY
0652  2338- 20 15 29           JSR GETCHR0
0653  233B- 85 00      GETC1   STA ACCU
0654  233D- A9 00              LDA =0
0655  233F- 85 01              STA ACCU+1
0656  2341- 60                 RTS
0657                   *
0658                   * P-CODE 1C: GETN
0659                   *****************
0660                   *
0661  2342- 20 B1 22   GETN    JSR COPY
0662  2345- A9 00              LDA =0
0663  2347- 85 00              STA ACCU
0664  2349- 85 01              STA ACCU+1
0665  234B- 85 10              STA SIGN
0666  234D- 20 15 29   GETN0   JSR GETCHR0
0667  2350- C9 20              CMP =' '
0668  2352- F0 F9              BEQ GETN0
0669  2354- C9 2D              CMP ='-'
0670  2356- D0 05              BNE GETN1
0671                   *
0672  2358- C6 10              DEC SIGN
0673  235A- 4C 61 23           JMP GETN2
0674                   *
0675  235D- C9 2B      GETN1    CMP ='+'
0676  235F- D0 03              BNE GETN2+3
0677                   *
0678  2361- 20 15 29   GETN2   JSR GETCHR0
0679  2364- C9 30              CMP ='0'
0680  2366- 90 2F              BCC GETN3
0681  2368- C9 3A              CMP ='9'+1
0682  236A- B0 2B              BCS GETN3
0683  236C- 38                 SEC
0684  236D- E9 30              SBC ='0'
0685  236F- 48                 PHA
0686  2370- 06 00              ASL ACCU
0687  2372- 26 01              ROL ACCU+1
0688  2374- A6 00              LDX ACCU
0689  2376- A4 01              LDY ACCU+1
0690  2378- 06 00              ASL ACCU
0691  237A- 26 01              ROL ACCU+1
0692  237C- 06 00              ASL ACCU
0693  237E- 26 01              ROL ACCU+1
0694  2380- 18                 CLC
0695  2381- 8A                 TXA
0696  2382- 65 00              ADC ACCU
0697  2384- 85 00              STA ACCU
0698  2386- 98                 TYA
0699  2387- 65 01              ADC ACCU+1

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 01/11/23   R65 ASSEMBLER  PAGE 15

0700  2389- 85 01              STA ACCU+1
0701  238B- 68                 PLA
0702  238C- 18                 CLC
0703  238D- 65 00              ADC ACCU
0704  238F- 85 00              STA ACCU
0705  2391- 90 CE              BCC GETN2
0706  2393- E6 01              INC ACCU+1
0707  2395- B0 CA              BCS GETN2
0708                   *
0709  2397- A5 10      GETN3   LDA SIGN
0710  2399- F0 03              BEQ *+5
0711  239B- 4C CF 20           JMP NEGA
0712  239E- 60                 RTS
0713                   *
0714                   * P-CODE 1D: PRTC
0715                   *****************
0716                   *
0717  239F- A5 00      PRTC    LDA ACCU
0718  23A1- 20 45 29           JSR PRTCHR0
0719  23A4- 4C DE 22           JMP GETS2
0720                   *
0721                   * P-CODE 1E: PRTN
0722                   *****************
0723                   *
0724  23A7- A5 01      PRTN    LDA ACCU+1
0725  23A9- 10 08              BPL PRTN1
0726  23AB- 20 CF 20           JSR NEGA
0727  23AE- A9 2D              LDA ='-'
0728  23B0- 20 45 29           JSR PRTCHR0
0729                   *
0730  23B3- A5 00      PRTN1   LDA ACCU
0731  23B5- A6 01              LDX ACCU+1
0732  23B7- 85 21              STA ARG2
0733  23B9- 86 22              STX ARG2+1
0734  23BB- A9 1F              LDA =$1F
0735  23BD- 85 1D              STA ARG3
0736  23BF- 85 1F              STA ARG3+2
0737  23C1- A9 2A              LDA =$2A
0738  23C3- 85 1E              STA ARG3+1
0739  23C5- 85 20              STA ARG3+3
0740  23C7- A6 21              LDX ARG2
0741  23C9- A4 22              LDY ARG2+1
0742  23CB- 38                 SEC
0743  23CC- E6 1D      PRTN2   INC ARG3
0744  23CE- 8A                 TXA
0745  23CF- E9 10              SBC =$10
0746  23D1- AA                 TAX
0747  23D2- 98                 TYA
0748  23D3- E9 27              SBC =$27
0749  23D5- A8                 TAY

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 01/11/23   R65 ASSEMBLER  PAGE 16

0750  23D6- B0 F4              BCS PRTN2
0751  23D8- C6 1E      PRTN3   DEC ARG3+1
0752  23DA- 8A                 TXA
0753  23DB- 69 E8              ADC =$E8
0754  23DD- AA                 TAX
0755  23DE- 98                 TYA
0756  23DF- 69 03              ADC =$03
0757  23E1- A8                 TAY
0758  23E2- 90 F4              BCC PRTN3
0759  23E4- 8A                 TXA
0760  23E5- 38         PRTN4   SEC
0761  23E6- E6 1F      PRTN5   INC ARG3+2
0762  23E8- E9 64              SBC =$64
0763  23EA- B0 FA              BCS PRTN5
0764  23EC- 88                 DEY
0765  23ED- 10 F6              BPL PRTN4
0766  23EF- C6 20      PRTN6   DEC ARG3+3
0767  23F1- 69 0A              ADC =$A
0768  23F3- 90 FA              BCC PRTN6
0769  23F5- 09 30              ORA =$30
0770  23F7- 85 21              STA ARG2
0771  23F9- A9 20              LDA =$20
0772  23FB- 85 22              STA ARG2+1
0773  23FD- A2 FB              LDX =$FB
0774  23FF- 86 10     PRTN7   STX SIGN
0775  2401- B5 22              LDA ARG2+1,X
0776  2403- 05 22              ORA ARG2+1
0777  2405- C9 20              CMP =$20
0778  2407- F0 09              BEQ PRTN8
0779  2409- A0 30              LDY =$30
0780  240B- 84 22              STY ARG2+1
0781  240D- 05 22              ORA ARG2+1
0782  240F- 20 45 29           JSR PRTCHR0
0783  2412- A6 10      PRTN8   LDX SIGN
0784  2414- E8                 INX
0785  2415- D0 E8              BNE PRTN7
0786  2417- 4C DE 22           JMP GETS2
0787                   *
0788                   * P-CODE 1F: PRTS
0789                   *****************
0790                   *
0791  241A- 06 00      PRTS    ASL ACCU
0792  241C- 26 01              ROL ACCU+1
0793  241E- A5 08              LDA SP
0794  2420- 38                 SEC
0795  2421- E5 00              SBC ACCU
0796  2423- 85 00              STA ACCU
0797  2425- 48                 PHA
0798  2426- A5 09              LDA SP+1
0799  2428- E5 01              SBC ACCU+1

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 01/11/23   R65 ASSEMBLER  PAGE 17

0800  242A- 85 01              STA ACCU+1
0801  242C- 48                 PHA
0802  242D- A0 80      OUTST1  LDY =128
0803  242F- B1 00              LDA (ACCU),Y
0804  2431- 20 45 29           JSR PRTCHR0
0805  2434- A5 00              LDA ACCU
0806  2436- 18                 CLC
0807  2437- 69 02              ADC =2
0808  2439- 85 00              STA ACCU
0809  243B- 90 02              BCC *+4
0810  243D- E6 01              INC ACCU+1
0811  243F- C5 08              CMP SP
0812  2441- A5 01              LDA ACCU+1
0813  2443- E5 09              SBC SP+1
0814  2445- 90 E6              BCC OUTST1
0815  2447- 68                 PLA
0816  2448- 85 09              STA SP+1
0817  244A- 68                 PLA
0818  244B- 85 08              STA SP
0819  244D- 4C DE 22           JMP GETS2
0820                   *
0821                   * P-CODE 20: LITB
0822                   *****************
0823                   *
0824  2450- 20 B1 22   LITB    JSR COPY
0825  2453- 20 9A 24           JSR FETCH
0826  2456- 85 00              STA ACCU
0827  2458- A9 00              LDA =0
0828  245A- 85 01              STA ACCU+1
0829  245C- 60                 RTS
0830                   *
0831                   * P-CODE 21: INCB
0832                   *****************
0833                   *
0834  245D- A0 80      INCB    LDY =128        SAVE CURRENT ACCU
0835  245F- A5 00              LDA ACCU
0836  2461- 91 08              STA (SP),Y
0837  2463- C8                 INY
0838  2464- A5 01              LDA ACCU+1
0839  2466- 91 08              STA (SP),Y
0840  2468- 20 9A 24           JSR FETCH
0841  246B- A2 00              LDX =0
0842  246D- A8                 TAY             TEST A
0843  246E- 10 01              BPL *+3
0844  2470- CA                 DEX
0845  2471- 18                 CLC
0846  2472- 65 08              ADC SP
0847  2474- 85 08              STA SP
0848  2476- 8A                 TXA
0849  2477- 65 09              ADC SP+1

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 01/11/23   R65 ASSEMBLER  PAGE 18

0850  2479- 85 09              STA SP+1
0851  247B- A5 08      INCB1   LDA SP
0852  247D- 20 CB 22           JSR INCS2A      TEST STACK OVERFLOW
0853  2480- A0 80              LDY =128        AND GET NEW ACCU
0854  2482- B1 08              LDA (SP),Y
0855  2484- 85 00              STA ACCU
0856  2486- C8                 INY
0857  2487- B1 08              LDA (SP),Y
0858  2489- 85 01              STA ACCU+1
0859  248B- 60                 RTS
0860                   *
0861                   * P-CODE 22: LITW
0862                   *****************
0863                   *
0864  248C- 20 B1 22   LITW    JSR COPY
0865  248F- 20 9A 24           JSR FETCH
0866  2492- 85 00              STA ACCU
0867  2494- 20 9A 24           JSR FETCH
0868  2497- 85 01              STA ACCU+1
0869  2499- 60                 RTS
0870                   *
0871                   * FETCH
0872                   *
0873  249A- A0 00      FETCH   LDY =0
0874  249C- B1 0A              LDA (PC),Y
0875  249E- E6 0A              INC PC
0876  24A0- D0 02              BNE *+4
0877  24A2- E6 0B              INC PC+1
0878  24A4- 60                 RTS
0879                   *
0880                   * P-CODE 23: INCW
0881                   *****************
0882                   *
0883  24A5- A0 80      INCW    LDY =128        SAVE CURRENT ACCU
0884  24A7- A5 00              LDA ACCU
0885  24A9- 91 08              STA (SP),Y
0886  24AB- C8                 INY
0887  24AC- A5 01              LDA ACCU+1
0888  24AE- 91 08              STA (SP),Y
0889  24B0- 20 9A 24           JSR FETCH
0890  24B3- 18                 CLC
0891  24B4- 65 08              ADC SP
0892  24B6- 85 08              STA SP
0893  24B8- 20 9A 24           JSR FETCH
0894  24BB- 65 09              ADC SP+1
0895  24BD- 85 09              STA SP+1
0896  24BF- 4C 7B 24           JMP INCB1
0897                   *
0898                   * P-CODE 24: JUMP
0899                   *****************

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 01/11/23   R65 ASSEMBLER  PAGE 19

0900                   *
0901  24C2- A0 00      JUMP    LDY =0
0902  24C4- B1 0A              LDA (PC),Y
0903  24C6- 18                 CLC
0904  24C7- 65 0A              ADC PC
0905  24C9- AA                 TAX
0906  24CA- C8                 INY
0907  24CB- B1 0A              LDA (PC),Y
0908  24CD- 65 0B              ADC PC+1
0909  24CF- 86 0A              STX PC
0910  24D1- 85 0B              STA PC+1
0911  24D3- 60                 RTS
0912                   *
0913                   * P-CODE 25: JMPZ
0914                   *****************
0915                   *
0916  24D4- 46 00      JMPZ    LSR ACCU
0917  24D6- 08                 PHP
0918  24D7- 20 DE 22           JSR GETS2
0919  24DA- 28                 PLP
0920  24DB- 90 E5              BCC JUMP
0921                   *
0922  24DD- A5 0A              LDA PC
0923  24DF- 18                 CLC
0924  24E0- 69 02              ADC =2
0925  24E2- 85 0A              STA PC
0926  24E4- 90 02              BCC *+4
0927  24E6- E6 0B              INC PC+1
0928  24E8- 60                 RTS
0929                   *
0930                   * P-CODE 26: JMPO
0931                   *****************
0932                   *
0933  24E9- A5 00      JMPO    LDA ACCU
0934  24EB- 49 01              EOR =1
0935  24ED- 85 00              STA ACCU
0936  24EF- 4C D4 24           JMP JMPZ
0937                   *
0938                   * P-CODE 27: LOAD
0939                   *****************
0940                   *
0941  24F2- 20 B1 22   LOAD    JSR COPY
0942  24F5- 20 9A 24           JSR FETCH
0943  24F8- AA                 TAX             LEVEL DIFFERENCE
0944  24F9- 20 9A 24           JSR FETCH
0945  24FC- 85 1B              STA ARG1
0946  24FE- 20 9A 24          JSR FETCH
0947  2501- 85 1C      LOAD1   STA ARG1+1
0948  2503- 20 2F 25           JSR FBASE3
0949  2506- A0 80      LOAD2   LDY =128

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 01/11/23   R65 ASSEMBLER  PAGE 20

0950  2508- B1 19              LDA (ABASE),Y
0951  250A- 85 00              STA ACCU
0952  250C- C8                 INY
0953  250D- B1 19              LDA (ABASE),Y
0954  250F- 85 01              STA ACCU+1
0955  2511- 60                 RTS
0956                   *
0957                   * FBASE
0958                   *
0959  2512- A5 17      FBASE   LDA BASE
0960  2514- A4 18              LDY BASE+1
0961  2516- 85 19              STA ABASE
0962  2518- 84 1A              STY ABASE+1
0963  251A- E0 00              CPX =0
0964  251C- F0 10              BEQ FBASE2
0965                   *
0966  251E- A0 80      FBASE1  LDY =128
0967  2520- B1 19              LDA (ABASE),Y
0968  2522- 48                 PHA
0969  2523- C8                 INY
0970  2524- B1 19              LDA (ABASE),Y
0971  2526- 85 1A              STA ABASE+1
0972  2528- 68                 PLA
0973  2529- 85 19              STA ABASE
0974  252B- CA                 DEX
0975  252C- D0 F0              BNE FBASE1
0976  252E- 60         FBASE2  RTS
0977                   *
0978  252F- 20 12 25   FBASE3  JSR FBASE
0979  2532- 18                 CLC
0980  2533- A5 1B              LDA ARG1
0981  2535- 65 19              ADC ABASE
0982  2537- 85 19              STA ABASE
0983  2539- A5 1C              LDA ARG1+1
0984  253B- 65 1A              ADC ABASE+1
0985  253D- 85 1A              STA ABASE+1
0986  253F- 60                 RTS
0987                   *
0988                   * P-CODE 28: LODX
0989                   *****************
0990                   *
0991  2540- 20 9A 24   LODX    JSR FETCH
0992  2543- AA                 TAX
0993  2544- 20 9A 24           JSR FETCH
0994  2547- 06 00              ASL ACCU
0995  2549- 26 01              ROL ACCU+1
0996  254B- 18                 CLC
0997  254C- 65 00              ADC ACCU
0998  254E- 85 1B              STA ARG1
0999  2550- 08                 PHP

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 01/11/23   R65 ASSEMBLER  PAGE 21

1000  2551- 20 9A 24           JSR FETCH
1001  2554- 28                 PLP
1002  2555- 65 01              ADC ACCU+1
1003  2557- 4C 01 25           JMP LOAD1
1004                   *
1005                   * P-CODE 29: STOR
1006                   *****************
1007                   *
1008  255A- 20 9A 24   STOR    JSR FETCH
1009  255D- AA                 TAX
1010  255E- 20 9A 24           JSR FETCH
1011  2561- 85 1B              STA ARG1
1012  2563- 20 9A 24           JSR FETCH
1013  2566- 85 1C              STA ARG1+1
1014  2568- 20 2F 25   STOR1   JSR FBASE3
1015  256B- A0 80      STOR2   LDY =128
1016  256D- A5 00              LDA ACCU
1017  256F- 91 19              STA (ABASE),Y
1018  2571- C8                 INY
1019  2572- A5 01              LDA ACCU+1
1020  2574- 91 19              STA (ABASE),Y
1021  2576- 4C DE 22           JMP GETS2
1022                   *
1023                   * P-CODE 2A: STOX
1024                   *****************
1025                   *
1026  2579- 20 9A 24   STOX    JSR FETCH
1027  257C- AA                 TAX
1028  257D- A0 7E              LDY =126
1029  257F- B1 08              LDA (SP),Y
1030  2581- 0A                 ASL A
1031  2582- 85 1B              STA ARG1
1032  2584- C8                 INY
1033  2585- B1 08              LDA (SP),Y
1034  2587- 2A                 ROL A
1035  2588- 85 1C              STA ARG1+1
1036  258A- 20 9A 24           JSR FETCH
1037  258D- 18                 CLC
1038  258E- 65 1B              ADC ARG1
1039  2590- 85 1B              STA ARG1
1040  2592- 20 9A 24           JSR FETCH
1041  2595- 65 1C              ADC ARG1+1
1042  2597- 85 1C              STA ARG1+1
1043  2599- 20 ED 20           JSR DECS2
1044  259C- 4C 68 25           JMP STOR1
1045                   *
1046                   * P-CODE 2B: CALL
1047                   *****************
1048                   *
1049  259F- 20 9A 24   CALL    JSR FETCH

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 01/11/23   R65 ASSEMBLER  PAGE 22

1050  25A2- AA                 TAX
1051  25A3- 20 12 25           JSR FBASE
1052  25A6- A0 82              LDY =130
1053  25A8- A5 19              LDA ABASE
1054  25AA- 91 08              STA (SP),Y
1055  25AC- C8                 INY
1056  25AD- A5 1A              LDA ABASE+1
1057  25AF- 91 08              STA (SP),Y
1058  25B1- C8                 INY
1059  25B2- A5 17              LDA BASE
1060  25B4- 91 08              STA (SP),Y
1061  25B6- C8                 INY
1062  25B7- A5 18              LDA BASE+1
1063  25B9- 91 08              STA (SP),Y
1064  25BB- C8                 INY
1065  25BC- A5 0A              LDA PC
1066  25BE- 91 08              STA (SP),Y
1067  25C0- C8                 INY
1068  25C1- A5 0B              LDA PC+1
1069  25C3- 91 08              STA (SP),Y
1070  25C5- A5 08              LDA SP
1071  25C7- 18                 CLC
1072  25C8- 69 02              ADC =2
1073  25CA- 85 17              STA BASE
1074  25CC- A5 09              LDA SP+1
1075  25CE- 69 00              ADC =0
1076  25D0- 85 18              STA BASE+1
1077  25D2- 4C C2 24           JMP JUMP
1078                   *
1079                   * PCODE 2C: SDEV
1080                   ****************
1081                   *
1082  25D5- A5 00      SDEV    LDA ACCU
1083  25D7- 85 0D              STA DEVICE
1084  25D9- 4C DE 22           JMP GETS2
1085                   *
1086                   * PCODE 2D: RDEV
1087                   ****************
1088                   *
1089  25DC- A9 00      RDEV    LDA =0
1090  25DE- 85 0D              STA DEVICE
1091  25E0- 60                 RTS
1092                   *
1093                   * PCODE 2E: FNAM
1094                   ****************
1095                   *
1096  25E1- 20 27 E0   FNAM    JSR PRTINF
1097  25E4- 20 3D A0           BYT ' = '+128
1098  25E7- 20 06 E0           JSR GETLIN
1099  25EA- 20 15 F8           JSR GETNAM

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 01/11/23   R65 ASSEMBLER  PAGE 23

1100  25ED- 20 0D 20           JSR HARGUM
1101  25F0- 85 DC              STA FILDRV
1102  25F2- 20 0D 20           JSR HARGUM
1103  25F5- 8D 13 03           STA FILLOC
1104  25F8- 20 27 E0           JSR PRTINF
1105  25FB- 0D 8A              BYT $D,$8A
1106  25FD- 60                 RTS
1107                   *
1108                   * P-CODE 2F: OPNR
1109                   *****************
1110                   *
1111                   * NO AUTOMATIC ERROR TESTING
1112                   *
1113  25FE- A9 00     OPNR    LDA =0
1114  2600- 85 DA              STA FILFLG
1115  2602- 20 B1 22           JSR COPY
1116  2605- 20 0F F0           JSR OPEN
1117  2608- C8                 INY
1118  2609- C8                 INY
1119  260A- 84 00              STY ACCU
1120  260C- 85 01              STA ACCU+1
1121  260E- 60                 RTS
1122                   *
1123                   * P-CODE 30: OPNW
1124                   *****************
1125                   *
1126  260F- A9 20      OPNW    LDA =$20
1127  2611- 4C 00 26           JMP OPNR+2
1128                   *
1129                   * P-CODE 31: CLOS
1130                   *****************
1131                   *
1132                   * NO AUTOMATIC ERROR CHECKING
1133                   *
1134  2614- A6 00      CLOS    LDX ACCU
1135  2616- CA                 DEX
1136  2617- CA                 DEX
1137  2618- 20 C6 2D           JSR CLOSRA
1138  261B- 4C DE 22           JMP GETS2
1139                   *
1140                   * P-CODE 32: PRTI
1141                   *****************
1142                   *
1143  261E- 20 9A 24   PRTI    JSR FETCH
1144  2621- 48                 PHA
1145  2622- 29 7F              AND =$7F
1146  2624- 20 45 29           JSR PRTCHR0
1147  2627- 68                 PLA
1148  2628- 10 F4              BPL PRTI
1149  262A- 60                 RTS

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 01/11/23   R65 ASSEMBLER  PAGE 24

1150                   *
1151                   * P-CODE 33: GHGH       (GET HIGH)
1152                   *****************
1153                   *
1154  262B- A5 01      GHGH    LDA ACCU+1
1155  262D- 85 00              STA ACCU
1156                   *
1157                   * P-CODE 34: GLOW
1158                   *****************
1159                   *
1160  262F- A9 00      GLOW    LDA =0
1161  2631- 85 01              STA ACCU+1
1162  2633- 60                 RTS
1163                   *
1164                   * P-CODE 35:PHGH
1165                   ****************
1166                   *
1167  2634- A0 7E      PHGH    LDY =126
1168  2636- B1 08              LDA (SP),Y
1169  2638- 85 01              STA ACCU+1
1170  263A- 4C ED 20           JMP DECS2
1171                   *
1172                   * P-CODE 36: PLOW
1173                   *****************
1174                   *
1175  263D- A0 7E      PLOW    LDY =126
1176  263F- B1 08              LDA (SP),Y
1177  2641- 85 00              STA ACCU
1178  2643- 4C ED 20           JMP DECS2
1179                   *
1180                   * P-CODE 37: GSEC
1181                   *****************
1182                   * DEVICE HAS TO BE SET  ########
1183                   *
1184  2646- 20 58 26   GSEC    JSR PREPSEC
1185  2649- 4C 84 20           JMP READ
1186  264C- 4C 90 20           JMP ENDDO
1187                   *
1188                   * P-CODE 38: PSEC
1189                   *****************
1190                   * DEVICE HAS TO BE SET  ########
1191                   *
1192  264F- 20 58 26   PSEC    JSR PREPSEC
1193  2652- 20 87 20           JSR WRITE
1194  2655- 4C 90 20           JMP ENDDO
1195                   *
1196  2658- A5 00      PREPSEC LDA ACCU
1197  265A- A6 01              LDX ACCU+1
1198  265C- 85 E0              STA DATA
1199  265E- 86 E1              STX DATA+1

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 01/11/23   R65 ASSEMBLER  PAGE 25

1200  2660- A0 7E              LDY =126
1201  2662- B1 08              LDA (SP),Y
1202  2664- 85 DE              STA SECTOR
1203  2666- A0 7C              LDY =124
1204  2668- B1 08              LDA (SP),Y
1205  266A- 85 DD              STA TRACK
1206  266C- A5 08              LDA SP
1207  266E- 38                 SEC
1208  266F- E9 04              SBC =4
1209  2671- 20 F2 20           JSR DECS2+5
1210  2674- 20 DE 22           JSR GETS2
1211  2677- 4C 8A 20           JMP PREPDO
1212                   *
1213                   * P-CODE 39: NBYT       LOAD N BYTES IMMEDIATELY
1214                   *****************
1215                   *
1216  267A- 20 9A 24   NBYT    JSR FETCH
1217  267D- AA                 TAX             BYTE COUNTER
1218  267E- 20 B1 22   NBYT1   JSR COPY
1219  2681- 20 9A 24           JSR FETCH
1220  2684- 84 01              STY ACCU+1      Y=0
1221  2686- 85 00              STA ACCU
1222  2688- CA                 DEX
1223  2689- D0 F3              BNE NBYT1
1224  268B- 60                 RTS
1225                   *
1226                   * P-CODE 3A: NWRD       LOAD N WORD IMMEDIATELY
1227                   *****************
1228                   *
1229  268C- 20 9A 24   NWRD    JSR FETCH
1230  268F- AA                 TAX             WORD COUNTER
1231  2690- 20 B1 22   NWRD1   JSR COPY
1232  2693- 20 9A 24           JSR FETCH
1233  2696- 85 00              STA ACCU
1234  2698- 20 9A 24           JSR FETCH
1235  269B- 85 01              STA ACCU+1
1236  269D- CA                 DEX
1237  269E- D0 F0              BNE NWRD1
1238  26A0- 60                 RTS
1239                   *
1240                   * P-CODE 3B: LODN       LOAD N MORE WORDS
1241                   *****************
1242                   *
1243  26A1- 20 9A 24   LODN    JSR FETCH
1244  26A4- AA                 TAX
1245  26A5- 20 B1 22   LODN1   JSR COPY
1246  26A8- A5 19              LDA ABASE
1247  26AA- 18                 CLC
1248  26AB- 69 02              ADC =2
1249  26AD- 85 19              STA ABASE

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 01/11/23   R65 ASSEMBLER  PAGE 26

1250  26AF- 90 02              BCC *+4
1251  26B1- E6 1A              INC ABASE+1
1252  26B3- 20 06 25           JSR LOAD2
1253  26B6- CA                 DEX
1254  26B7- D0 EC              BNE LODN1
1255  26B9- 60                 RTS
1256                   *
1257                   * P-CODE 3C: STON       STORE N MORE WORDS
1258                   *****************
1259                   *
1260  26BA- 20 9A 24   STON    JSR FETCH
1261  26BD- AA                 TAX
1262  26BE- A5 19      STON1   LDA ABASE
1263  26C0- 38                 SEC
1264  26C1- E9 02              SBC =2
1265  26C3- 85 19              STA ABASE
1266  26C5- B0 02              BCS *+4
1267  26C7- C6 1A              DEC ABASE+1
1268  26C9- 20 6B 25           JSR STOR2
1269  26CC- CA                 DEX
1270  26CD- D0 EF              BNE STON1
1271  26CF- 60                 RTS
1272                   *
1273                   * P-CODE 3D: LODI       LOAD INDIRECT
1274                   *****************
1275                   *
1276  26D0- 20 D6 26   LODI    JSR GETACC
1277  26D3- 4C 06 25           JMP LOAD2
1278                   *
1279  26D6- A5 00      GETACC  LDA ACCU
1280  26D8- A6 01              LDX ACCU+1
1281  26DA- 38                 SEC
1282  26DB- E9 80              SBC =128
1283  26DD- B0 01              BCS *+3
1284  26DF- CA                 DEX
1285  26E0- 85 19              STA ABASE
1286  26E2- 86 1A              STX ABASE+1
1287  26E4- 60                 RTS
1288                   *
1289                   * P-CODE 3E: STOI       STORE INDIRECT
1290                   *****************
1291                   *
1292  26E5- 20 D6 26   STOI    JSR GETACC
1293  26E8- 20 DE 22           JSR GETS2
1294  26EB- 4C 6B 25           JMP STOR2
1295                   *
1296                   * P-CODE 3F: EXST       EXCHANGE STACK
1297                   *****************
1298                   *
1299  26EE- A0 7E      EXST    LDY =126

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 01/11/23   R65 ASSEMBLER  PAGE 27

1300  26F0- B1 08              LDA (SP),Y
1301  26F2- AA                 TAX
1302  26F3- A5 00              LDA ACCU
1303  26F5- 91 08              STA (SP),Y
1304  26F7- 86 00              STX ACCU
1305  26F9- C8                 INY
1306  26FA- B1 08              LDA (SP),Y
1307  26FC- AA                 TAX
1308  26FD- A5 01              LDA ACCU+1
1309  26FF- 91 08             STA (SP),Y
1310  2701- 86 01              STX ACCU+1
1311  2703- 60                 RTS
1312                   *
1313                   * P-CODE 40 TIND        TEST INDEX
1314                   ****************
1315                   *
1316  2704- 20 9A 24   TIND    JSR FETCH       LOWLIM-1
1317  2707- AA                 TAX
1318  2708- 20 9A 24           JSR FETCH
1319  270B- E4 00              CPX ACCU
1320  270D- E5 01              SBC ACCU+1
1321  270F- 70 0E              BVS TINDERR
1322                   *
1323  2711- 20 9A 24           JSR FETCH       HIGHLIM
1324  2714- AA                 TAX
1325  2715- 20 9A 24           JSR FETCH
1326  2718- E4 00              CPX ACCU
1327  271A- E5 01              SBC ACCU+1
1328  271C- 90 01              BCC TINDERR
1329  271E- 60                 RTS
1330                   *
1331  271F- A2 83      TINDERR LDX =$83        RUNTIME ERROR
1332  2721- 4C 80 29           JMP PERROR      INDEX OUT OF BOUNDS
1333                   *
1334                   * P-CODE 41: RUNP       RUN PROGRAM
1335                   *****************
1336                   *
1337  2724- A0 82      RUNP    LDY =130
1338  2726- A5 00              LDA ACCU        SAVE ACCU
1339  2728- A6 01              LDX ACCU+1
1340  272A- 20 56 27           JSR SAVE
1341  272D- A5 17              LDA BASE        SAVE BASE
1342  272F- A6 18              LDX BASE+1
1343  2731- 20 56 27           JSR SAVE
1344  2734- A5 0A              LDA PC          SAVE PC
1345  2736- A6 0B              LDX PC+1
1346  2738- 20 56 27           JSR SAVE
1347  273B- A5 11              LDA STPROG      SAVE STPROG
1348  273D- A6 12              LDX STPROG+1
1349  273F- 20 56 27           JSR SAVE

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 01/11/23   R65 ASSEMBLER  PAGE 28

1350  2742- A5 13              LDA EOPROG      SAVE EOPROG
1351  2744- A6 14              LDX EOPROG+1
1352  2746- 20 56 27           JSR SAVE
1353  2749- A5 08              LDA SP          GET SP
1354  274B- A6 09              LDX SP+1
1355  274D- 18                 CLC
1356  274E- 69 8C              ADC =140
1357  2750- 90 01              BCC *+3
1358  2752- E8                 INX             COMPUTE NEW STPROG
1359  2753- 4C 03 2A           JMP EXEC3
1360                   *
1361                   *
1362  2756- 91 08      SAVE    STA (SP),Y
1363  2758- C8                 INY
1364  2759- 8A                 TXA
1365  275A- 91 08              STA (SP),Y
1366  275C- C8                 INY
1367  275D- 60                 RTS
1368                   *
1369                   *
1370  275E- 88         GETBACK DEY
1371  275F- B1 08              LDA (SP),Y
1372  2761- AA                 TAX
1373  2762- 88                 DEY
1374  2763- B1 08              LDA (SP),Y
1375  2765- 60                 RTS
1376                   *
1377                   *
1378                   * P-CODE 42: ADDF
1379                   *****************
1380                   *
1381  2766- 20 83 27   ADDF    JSR GETFLP2
1382  2769- 20 B6 2B           JSR FADD
1383                   *
1384  276C- A5 08      PUTFLP0 LDA SP          DECREMENT SP BY 4
1385  276E- 38                 SEC
1386  276F- E9 04              SBC =4
1387  2771- 85 08              STA SP
1388  2773- B0 02              BCS PUTFLP
1389  2775- C6 09              DEC SP+1
1390  2777- A5 02      PUTFLP  LDA M1+1        AND SAVE HALF OF NUMBER
1391  2779- A0 7E              LDY =126
1392  277B- 91 08              STA (SP),Y
1393  277D- C8                 INY
1394  277E- A5 03              LDA M1+2
1395  2780- 91 08              STA (SP),Y
1396  2782- 60                 RTS
1397                   *
1398  2783- A0 7A      GETFLP2 LDY =122        GET SECOND NUMBER
1399  2785- B1 08              LDA (SP),Y

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 01/11/23   R65 ASSEMBLER  PAGE 29

1400  2787- 85 1D              STA M2+1
1401  2789- C8                 INY
1402  278A- B1 08              LDA (SP),Y
1403  278C- 85 1E              STA M2+2
1404  278E- C8                 INY
1405  278F- B1 08              LDA (SP),Y
1406  2791- 85 1B              STA X2
1407  2793- C8                 INY
1408  2794- B1 08              LDA (SP),Y
1409  2796- 85 1C              STA M2
1410  2798- A0 7E      GETFLP  LDY =126        AND HALF OF FIRST
1411  279A- B1 08              LDA (SP),Y
1412  279C- 85 02              STA M1+1
1413  279E- C8                 INY
1414  279F- B1 08              LDA (SP),Y
1415  27A1- 85 03              STA M1+2
1416  27A3- 60                 RTS
1417                   *
1418                   * P-CODE 43: SUBF
1419                   *****************
1420                   *
1421  27A4- 20 83 27   SUBF    JSR GETFLP2
1422  27A7- 20 B0 2B           JSR FSUB
1423  27AA- 4C 6C 27           JMP PUTFLP0
1424                   *
1425                   * P-CODE 44: MULF
1426                   *****************
1427                   *
1428  27AD- 20 83 27   MULF    JSR GETFLP2
1429  27B0- 20 DD 2B           JSR FMUL
1430  27B3- 4C 6C 27           JMP PUTFLP0
1431                   *
1432                   * P-CODE 45: DIVF
1433                   *****************
1434                   *
1435  27B6- 20 83 27   DIVF    JSR GETFLP2
1436  27B9- 20 03 2C           JSR FDIV
1437  27BC- 4C 6C 27           JMP PUTFLP0
1438                   *
1439                   * P-CODE 46: FLOF
1440                   *****************
1441                   *
1442  27BF- A5 00      FLOF    LDA ACCU
1443  27C1- 85 02              STA M1+1        HIGH BYTE IS IN ACCU
1444                   *                       SAME AS M1
1445  27C3- 20 92 2B           JSR FLOAT
1446  27C6- 20 C0 22           JSR INCS2
1447  27C9- 4C 77 27           JMP PUTFLP
1448                   *
1449                   * P-CODE 47: FIXF

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 01/11/23   R65 ASSEMBLER  PAGE 30

1450                   *****************
1451                   *
1452  27CC- 20 98 27   FIXF    JSR GETFLP
1453  27CF- 20 50 2C           JSR FIX
1454  27D2- A5 02              LDA M1+1
1455  27D4- 85 00              STA ACCU
1456  27D6- 4C ED 20           JMP DECS2
1457                   *
1458                   * P-CODE 48: FEQU       =
1459                   *****************
1460                   *
1461  27D9- 20 FA 27   FEQU    JSR TESTF
1462  27DC- F0 12              BEQ TRUE
1463                   *
1464  27DE- A2 00      FALSE   LDX =0
1465  27E0- 86 00              STX ACCU
1466  27E2- 86 01              STX ACCU+1
1467  27E4- A5 08      DECS6   LDA SP
1468  27E6- 38                 SEC
1469  27E7- E9 06              SBC =6
1470  27E9- 85 08              STA SP
1471  27EB- B0 02              BCS *+4
1472  27ED- C6 09              DEC SP+1
1473  27EF- 60                 RTS
1474                   *
1475  27F0- A2 01      TRUE    LDX =1
1476  27F2- 86 00              STX ACCU
1477  27F4- CA                 DEX
1478  27F5- 86 01              STX ACCU+1
1479  27F7- 4C E4 27           JMP DECS6
1480                   *
1481  27FA- 20 83 27   TESTF   JSR GETFLP2
1482  27FD- 20 B0 2B          JSR FSUB
1483  2800- A5 01              LDA M1
1484  2802- 60                 RTS
1485                   *
1486                   * P-CODE 49: FNEQ       <>
1487                   *****************
1488                   *
1489  2803- 20 FA 27   FNEQ    JSR TESTF
1490  2806- D0 E8              BNE TRUE
1491  2808- F0 D4              BEQ FALSE
1492                   *
1493                   * P-CODE 4A: FLES       <
1494                   *****************
1495                   *
1496  280A- 20 FA 27   FLES    JSR TESTF
1497  280D- 10 CF              BPL FALSE
1498  280F- 30 DF              BMI TRUE
1499                   *

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 01/11/23   R65 ASSEMBLER  PAGE 31

1500                   * P-CODE 4B: FGRE       >=
1501                   *****************
1502                   *
1503  2811- 20 FA 27   FGRE    JSR TESTF
1504  2814- 10 DA              BPL TRUE
1505  2816- 30 C6              BMI FALSE
1506                   *
1507                   * P-CODE 4C: FGRT       >
1508                   *****************
1509                   *
1510  2818- 20 FA 27   FGRT    JSR TESTF
1511  281B- 30 C1              BMI FALSE
1512  281D- F0 BF              BEQ FALSE
1513  281F- 10 CF              BPL TRUE
1514                   *
1515                   * P-CODE 4D: FLEE       <=
1516                   *****************
1517                   *
1518  2821- 20 FA 27   FLEE    JSR TESTF
1519  2824- 30 CA              BMI TRUE
1520  2826- F0 C8              BEQ TRUE
1521  2828- 10 B4              BPL FALSE
1522                   *
1523                   * P-CODE 4E: FCOM       COMPLEMENT
1524                   *****************
1525                   *
1526  282A- 20 98 27   FCOM    JSR GETFLP
1527  282D- 20 F5 2B           JSR FCOMPL
1528  2830- 4C 77 27           JMP PUTFLP
1529                   *
1530                   *
1531                   * P-CODE 4F: TFER       TEST FILE ERROR
1532                   *****************
1533                   *
1534  2833- A6 23      TFER    LDX IOCHECK
1535  2835- F0 04              BEQ TFER1
1536  2837- A6 DB              LDX FILERR
1537  2839- D0 01              BNE TFER2
1538  283B- 60         TFER1   RTS             OK
1539                   *
1540  283C- 4C 80 29   TFER2   JMP PERROR
1541                   *
1542                   * P-CODE 50: OPRA       OPEN RA-FILE
1543                   *****************
1544                   *
1545  283F- 20 B1 22   OPRA    JSR COPY        SAVE ACCU
1546  2842- 20 57 2C           JSR OPENRA      OPEN FILE
1547  2845- C8                 INY
1548  2846- C8                 INY
1549  2847- 84 00              STY ACCU        SAVE FILE NO

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 01/11/23   R65 ASSEMBLER  PAGE 32

1550  2849- A9 00              LDA =0
1551  284B- 85 01              STA ACCU+1
1552  284D- 60                 RTS
1553                   *
1554                   * P-CODE 51: GETR       GET FROM RA FILE
1555                   *****************
1556                   *
1557                   * NO AUTOMATIC ERROR CHECKING
1558                   *
1559  284E- 20 5B 28   GETR    JSR GETR1
1560  2851- 20 5E 2D           JSR GETBYTE
1561  2854- 85 00              STA ACCU
1562  2856- A9 00              LDA =0
1563  2858- 85 01              STA ACCU+1
1564  285A- 60                 RTS
1565                   *
1566  285B- 20 ED 20   GETR1   JSR DECS2
1567  285E- A0 80              LDY =128
1568  2860- B1 08              LDA (SP),Y      GET FILE NO
1569  2862- AA                 TAX
1570  2863- CA                 DEX
1571  2864- CA                 DEX
1572  2865- A5 00              LDA ACCU        GET POINTER
1573  2867- A4 01              LDY ACCU+1
1574  2869- 60                 RTS
1575                   *
1576                   * P-CODE 52: PUTR       PUT TO RA=FILE
1577                   *****************
1578                   *
1579                   * NO AUTOMATIC ERROR CHECKING
1580                   *
1581  286A- A5 00      PUTR    LDA ACCU
1582  286C- 85 FE              STA KCHAR
1583  286E- 20 DE 22           JSR GETS2
1584  2871- 20 5B 28           JSR GETR1
1585  2874- 20 7C 2D           JSR PUTBYTE
1586  2877- 4C DE 22           JMP GETS2
1587                   *
1588                   * P-CODE 53: SWA2       SWAP 2 AND 3 ON STACK
1589                   *****************
1590                   *
1591  287A- A0 7E      SWA2    LDY =126
1592  287C- 20 81 28           JSR SWA3
1593  287F- A0 7F              LDY =127
1594                   *
1595  2881- B1 08      SWA3    LDA (SP),Y
1596  2883- AA                 TAX
1597  2884- 88                 DEY
1598  2885- 88                 DEY
1599  2886- B1 08              LDA (SP),Y

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 01/11/23   R65 ASSEMBLER  PAGE 33

1600  2888- C8                 INY
1601  2889- C8                 INY
1602  288A- 91 08              STA (SP),Y
1603  288C- 8A                 TXA
1604  288D- 88                 DEY
1605  288E- 88                 DEY
1606  288F- 91 08              STA (SP),Y
1607  2891- 60                 RTS
1608                   *
1609                   * P-CODE 54: LDXI       PREPARE LOAD CPNT
1610                   *****************
1611                   *
1612  2892- A0 00      LDXI    LDY =0          INDIRECTION
1613  2894- A5 01              LDA ACCU+1
1614  2896- F0 3F              BEQ NILERR
1615  2898- B1 00              LDA (ACCU),Y
1616  289A- 85 00              STA ACCU
1617  289C- 84 01              STY ACCU+1
1618  289E- 60                 RTS
1619                   *
1620                   * P-CODE 55: STXI       STORE CPNT INDEXED
1621                   *****************
1622                   *
1623  289F- 20 9A 24   STXI    JSR FETCH
1624  28A2- AA                 TAX
1625  28A3- A0 7E              LDY =126
1626  28A5- B1 08              LDA (SP),Y
1627  28A7- 85 21              STA ARG2
1628  28A9- C8                 INY
1629  28AA- B1 08              LDA (SP),Y
1630  28AC- 85 22              STA ARG2+1      ARG2 IS INDEX
1631  28AE- 20 9A 24           JSR FETCH
1632  28B1- 85 1B              STA ARG1
1633  28B3- 20 9A 24           JSR FETCH
1634  28B6- 85 1C              STA ARG1+1      ARG1 IS ADDRESS
1635  28B8- 20 ED 20           JSR DECS2       OF VARIABLE
1636  28BB- 20 2F 25           JSR FBASE3
1637  28BE- 20 DC 28           JSR INDI        INDIRECTION
1638  28C1- 18                 CLC
1639  28C2- A5 19              LDA ABASE
1640  28C4- 65 21              ADC ARG2        ADD INDEX
1641  28C6- 85 19              STA ABASE
1642  28C8- A5 1A              LDA ABASE+1
1643  28CA- 65 22              ADC ARG2+1
1644  28CC- 85 1A              STA ABASE+1
1645  28CE- A0 00              LDY =0
1646  28D0- A5 00              LDA ACCU
1647  28D2- 91 19              STA (ABASE),Y   ONLY BYTE
1648  28D4- 4C DE 22           JMP GETS2
1649                   *

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 01/11/23   R65 ASSEMBLER  PAGE 34

1650  28D7- A2 89      NILERR  LDX =$89        CPNT IS NIL
1651  28D9- 4C 80 29           JMP PERROR
1652                   *
1653  28DC- A0 81      INDI    LDY =129        INDIRECTION
1654  28DE- B1 19              LDA (ABASE),Y
1655  28E0- F0 F5              BEQ NILERR      NIL STRING
1656  28E2- AA                 TAX
1657  28E3- 88                 DEY
1658  28E4- B1 19              LDA (ABASE),Y   POINTER IS IN A,X
1659  28E6- 85 19              STA ABASE
1660  28E8- 86 1A              STX ABASE+1
1661  28EA- 60                 RTS
1662                   *
1663                   * P-CODE 56: CPNT       CPNT CONSTANT
1664                   *****************
1665                   *
1666  28EB- 20 B1 22   CPNT    JSR COPY
1667  28EE- 20 9A 24           JSR FETCH       STRING SIZE IN A
1668  28F1- AA                 TAX
1669  28F2- E8                 INX
1670  28F3- A5 0A              LDA PC          PC IS POINTER
1671  28F5- 85 00              STA ACCU        TO RETURN
1672  28F7- A5 0B              LDA PC+1
1673  28F9- 85 01              STA ACCU+1
1674  28FB- 8A                 TXA
1675  28FC- 18                 CLC
1676  28FD- 65 0A              ADC PC          ADVANCE PC
1677  28FF- 85 0A             STA PC
1678  2901- 90 02              BCC *+4
1679  2903- E6 0B              INC PC+1
1680  2905- 60                 RTS
1681                   *
1682                   * P-CODE 57: WRCP       WRITE CPNT
1683                   *****************
1684                   *
1685  2906- A0 00      WRCP    LDY =0
1686  2908- B1 00              LDA (ACCU),Y
1687  290A- F0 08              BEQ WRCP2
1688  290C- 20 45 29           JSR PRTCHR0     END MARK
1689  290F- C8                 INY
1690  2910- C0 3F              CPY =63
1691  2912- D0 F4              BNE WRCP+2
1692  2914- 60         WRCP2   RTS
1693                   *
1694                   * GETCHR0: GET A CHAR FROM SPECIFIED FILE
1695                   *****************************************
1696                   *
1697  2915- A6 0D      GETCHR0 LDX DEVICE
1698  2917- D0 1A              BNE GETCHR4
1699                   *

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 01/11/23   R65 ASSEMBLER  PAGE 35

1700  2919- A6 15      GETCHR1 LDX BUFFPN
1701  291B- 10 06              BPL GETCHR2
1702  291D- 20 0B 23           JSR RLIN
1703  2920- 4C 19 29           JMP GETCHR1
1704                   *
1705  2923- E4 16      GETCHR2 CPX ENDBUF      IS IS END OF BUFFER?
1706  2925- D0 07              BNE GETCHR3
1707  2927- A9 FF              LDA =$FF
1708  2929- 85 15              STA BUFFPN
1709  292B- A9 0D              LDA =$D
1710  292D- 60                 RTS
1711                   *
1712  292E- E6 15      GETCHR3 INC BUFFPN
1713  2930- B5 24              LDA LINBUF,X
1714  2932- 60                 RTS
1715                   *
1716  2933- CA         GETCHR4 DEX
1717  2934- D0 03              BNE GETCHR5     SKIP, IF NOT KEY
1718  2936- 4C 00 E0           JMP GETKEY
1719                   *
1720  2939- CA         GETCHR5 DEX
1721  293A- A9 00              LDA =0
1722  293C- 85 DA              STA FILFLG
1723  293E- 20 18 F0           JSR READCH
1724  2941- 4C 33 28           JMP TFER
1725                   *
1726  2944- 60         GETCHR6 RTS
1727                   *
1728                   * PRTCHR0: PRINT CHAR TO SPECIFIED FILE
1729                   ***************************************
1730                   *
1731  2945- A6 0D      PRTCHR0 LDX DEVICE
1732  2947- 30 16              BMI PRTCHR3     Plot text?
1733  2949- D0 03              BNE PRTCHR1
1734  294B- 4C 09 E0           JMP PRTCHR
1735                   *
1736  294E- CA         PRTCHR1 DEX
1737  294F- D0 03              BNE PRTCHR2
1738  2951- 4C 0C E0           JMP AUTOPR
1739                   *
1740  2954- CA         PRTCHR2 DEX
1741  2955- A0 00              LDY =0
1742  2957- 84 DA              STY FILFLG
1743  2959- 20 1B F0           JSR WRITCH
1744  295C- 4C 33 28           JMP TFER
1745                   *
1746  295F- C9 0D      PRTCHR3 CMP =$0D        Plot CR?
1747  2961- D0 06              BNE PRTCHR4
1748  2963- A9 00              LDA =0
1749  2965- 8D AE 03           STA GRX

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 01/11/23   R65 ASSEMBLER  PAGE 36

1750  2968- 60         PRTCHRE RTS
1751                   *
1752  2969- C9 0A      PRTCHR4 CMP =$0A        PLOT LF?
1753  296B- D0 0D              BNE PRTCHR6
1754  296D- AD AF 03           LDA GRY
1755  2970- E9 08              SBC =8
1756  2972- 10 02              BPL PRTCHR5
1757  2974- A9 00              LDA =0
1758                   *
1759  2976- 8D AF 03   PRTCHR5 STA GRY
1760  2979- 60                 RTS
1761                   *
1762  297A- 8D B0 03   PRTCHR6 STA GRC
1763  297D- 4C 18 C8           JMP APLOTCH     PLOT THE CHARACTER
1764                   *
1765                   * PERROR: PASCAL RUNTIME ERROR
1766                   ******************************
1767                   *
1768  2980- 20 27 E0   PERROR  JSR PRTINF
1769  2983- 0D 0A 07           BYT $D,$A,7,'Pascal error '+128
1769  2986- 50 61 73 
1769  2989- 63 61 6C 
1769  298C- 20 65 72 
1769  298F- 72 6F 72 
1769  2992- A0 
1770  2993- A9 00              LDA =0
1771  2995- 85 0D              STA DEVICE
1772  2997- 8A                 TXA
1773  2998- 85 0C              STA RUNERR
1774  299A- 20 2D E0           JSR PRTBYT
1775  299D- A5 0A              LDA PC
1776  299F- 38                 SEC
1777  29A0- E5 11              SBC STPROG
1778  29A2- 85 00              STA ACCU
1779  29A4- A5 0B              LDA PC+1
1780  29A6- E5 12              SBC STPROG+1
1781  29A8- 85 01              STA ACCU+1
1782  29AA- F0 0C              BEQ PERROR1
1783  29AC- 30 0A              BMI PERROR1
1784  29AE- 20 27 E0           JSR PRTINF
1785  29B1- 20 61 74           BYT ' at '+128
1785  29B4- A0 
1786  29B5- 20 A7 23           JSR PRTN
1787                   *
1788  29B8- 4C 10 20   PERROR1 JMP STOP
1789                   *
1790                   *
1791                   * WARM START ENTRY POINT
1792                   ************************
1793                   *

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 01/11/23   R65 ASSEMBLER  PAGE 37

1794  29BB- AD 81 17   WARMST  LDA SFLAG       SET PASCAL RUNTIME BIT
1795  29BE- 09 01              ORA =$01        IN SFLAG
1796  29C0- 8D 81 17           STA SFLAG
1797  29C3- BA                 TSX
1798  29C4- 8E FF 17           STX SAVS        SAVE STACK POINTER
1799  29C7- A2 00              LDX =0
1800  29C9- 86 0B              STX PC+1
1801  29CB- 86 0D              STX DEVICE
1802  29CD- CA                 DEX
1803  29CE- 86 16              STX ENDBUF
1804  29D0- 86 23              STX IOCHECK
1805  29D2- A2 00              LDX =0
1806                   *
1807  29D4- A0 00      EXEC    LDY =0
1808  29D6- 84 0B              STY PC+1
1809  29D8- BD 8D 2A           LDA EXTABLE,X
1810  29DB- 9D 20 03           STA FILNM1,X
1811  29DE- E8                 INX
1812  29DF- C8                 INY
1813  29E0- C0 10              CPY =16
1814  29E2- 90 F2              BCC EXEC+2
1815  29E4- A9 00              LDA =0
1816  29E6- 8D 30 03           STA FILCY1
1817                   *
1818  29E9- A9 00      EXECUTE LDA =0
1819  29EB- 85 DA              STA FILFLG
1820  29ED- AD 0B 20           LDA USEREND
1821  29F0- AE 0C 20           LDX USEREND+1
1822  29F3- 38                 SEC
1823  29F4- E9 90              SBC =144
1824  29F6- B0 01              BCS *+3
1825  29F8- CA                 DEX
1826  29F9- 85 0E              STA ENDSTK
1827  29FB- 86 0F              STX ENDSTK+1
1828                   *
1829  29FD- AD 09 20  EXEC1   LDA USERST
1830  2A00- AE 0A 20           LDX USERST+1
1831  2A03- 85 11      EXEC3   STA STPROG
1832  2A05- 86 12              STX STPROG+1
1833  2A07- 8D 31 03           STA FILSA1
1834  2A0A- 8E 32 03           STX FILSA1+1
1835  2A0D- 20 15 E8           JSR RDFILE      READ FILE TO EXECUTE
1836  2A10- D0 07              BNE EXECE       PROGRAM NOT LOOADED?
1837                   *
1838  2A12- AD 12 03           LDA FILSTP
1839  2A15- C9 52              CMP ='R'        IS PASCAL PROGRAM?
1840  2A17- F0 07              BEQ RUN
1841  2A19- A9 84      EXECE   LDA =$84        PASCAL RUNPROG ERROR
1842  2A1B- 85 0C              STA RUNERR
1843  2A1D- 4C 10 20           JMP STOP        SILENT ERROR

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 01/11/23   R65 ASSEMBLER  PAGE 38

1844                   *
1845  2A20- A0 00      RUN     LDY =0          READ END ADDRESS
1846  2A22- B1 11              LDA (STPROG),Y  FROM FILE
1847  2A24- 18                 CLC
1848  2A25- 65 11              ADC STPROG
1849  2A27- 85 13              STA EOPROG
1850  2A29- C8                 INY
1851  2A2A- B1 11              LDA (STPROG),Y
1852  2A2C- 65 12              ADC STPROG+1
1853  2A2E- 85 14              STA EOPROG+1
1854  2A30- A5 13              LDA EOPROG      GET END OF STACK
1855  2A32- A6 14              LDX EOPROG+1
1856  2A34- 38                 SEC
1857  2A35- E9 80              SBC =128
1858  2A37- 85 17              STA BASE
1859  2A39- 85 08              STA SP
1860  2A3B- B0 01              BCS *+3
1861  2A3D- CA                 DEX
1862  2A3E- 86 18              STX BASE+1
1863  2A40- 86 09              STX SP+1
1864                   *
1865  2A42- A5 11              LDA STPROG
1866  2A44- A6 12              LDX STPROG+1
1867  2A46- 18                 CLC
1868  2A47- 69 02              ADC =2
1869  2A49- 85 0A              STA PC
1870  2A4B- 90 01              BCC *+3
1871  2A4D- E8                 INX
1872  2A4E- 86 0B              STX PC+1
1873  2A50- A9 00              LDA =0
1874  2A52- 85 0C              STA RUNERR
1875  2A54- AE FF 17   LOOP    LDX SAVS        RESTORE STACK POINTER
1876  2A57- 9A                 TXS
1877  2A58- 20 63 2A           JSR EXCODE
1878  2A5B- AD 81 17           LDA SFLAG
1879  2A5E- 30 20              BMI ESCERR
1880  2A60- 4C 54 2A           JMP LOOP
1881                   *
1882                   *
1883  2A63- 20 9A 24   EXCODE  JSR FETCH
1884  2A66- 89 F1              STA =$F1
1885  2A68- C9 58              CMP =$58        TEST CODENUMBER
1886  2A6A- 90 05              BCC *+7
1887  2A6C- A2 86      ILLC    LDX =$86        PASCAL RUNTIME ERROR
1888  2A6E- 4C 80 29           JMP PERROR      ILLEGAL P-CODE
1889                   *
1890  2A71- 0A                 ASL A
1891  2A72- AA                 TAX
1892  2A73- BD 9D 2A           LDA TABLE,X
1893  2A76- 85 1B              STA ARG1

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 01/11/23   R65 ASSEMBLER  PAGE 39

1894  2A78- BD 9E 2A           LDA TABLE+1,X
1895  2A7B- 85 1C              STA ARG1+1
1896  2A7D- 6C 1B 00           JMP (ARG1)
1897                   *
1898  2A80- AD 81 17   ESCERR  LDA SFLAG       CLEAR ESCAPE FLAG
1899  2A83- 29 7F              AND =$7F
1900  2A85- 8D 81 17           STA SFLAG
1901  2A88- A2 86              LDX =$86        PASCAL RUNTIME ERROR
1902  2A8A- 4C 80 29           JMP PERROR      ESCAPE DURING EXECUTION
1903                   *
1904  2A8D- 53 59 53   EXTABLE BYT 'SYSTEM:R        '
1904  2A90- 54 45 4D 
1904  2A93- 3A 52 20 
1904  2A96- 20 20 20 
1904  2A99- 20 20 20 
1904  2A9C- 20 
1905                   *
1906  2A9D- 10 20 9C   TABLE   WRD STOP,RETN,NEGA,ADDA,SUBA,MULA
1906  2AA0- 20 CF 20 
1906  2AA3- DD 20 F9 
1906  2AA6- 20 0C 21 
1907  2AA9- 71 21 E3           WRD DIVA,LOWB,TEQU,TNEQ,TLES,TGRE
1907  2AAC- 21 EE 21 
1907  2AAF- FF 21 09 
1907  2AB2- 22 13 22 
1908  2AB5- 19 22 1F           WRD TGRT,TLEE,ORAC,ANDA,EORA,NOTA
1908  2AB8- 22 25 22 
1908  2ABB- 37 22 49 
1908  2ABE- 22 5B 22 
1909  2AC1- 6B 22 84           WRD LEFT,RIGH,INCA,DECA,COPY,PEEK
1909  2AC4- 22 A1 22 
1909  2AC7- A8 22 B1 
1909  2ACA- 22 EC 22 
1910  2ACD- F5 22 02           WRD POKE,CALA,RLIN,GETC,GETN,PRTC
1910  2AD0- 23 0B 23 
1910  2AD3- 35 23 42 
1910  2AD6- 23 9F 23 
1911  2AD9- A7 23 1A           WRD PRTN,PRTS,LITB,INCB,LITW,INCW
1911  2ADC- 24 50 24 
1911  2ADF- 5D 24 8C 
1911  2AE2- 24 A5 24 
1912  2AE5- C2 24 D4           WRD JUMP,JMPZ,JMPO,LOAD,LODX,STOR
1912  2AE8- 24 E9 24 
1912  2AEB- F2 24 40 
1912  2AEE- 25 5A 25 
1913  2AF1- 79 25 9F           WRD STOX,CALL,SDEV,RDEV,FNAM,OPNR
1913  2AF4- 25 D5 25 
1913  2AF7- DC 25 E1 
1913  2AFA- 25 FE 25 
1914  2AFD- 0F 26 14          WRD OPNW,CLOS,PRTI,GHGH,GLOW,PHGH

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 01/11/23   R65 ASSEMBLER  PAGE 40

1914  2B00- 26 1E 26 
1914  2B03- 2B 26 2F 
1914  2B06- 26 34 26 
1915  2B09- 3D 26 46           WRD PLOW,GSEC,PSEC,NBYT,NWRD,LODN
1915  2B0C- 26 4F 26 
1915  2B0F- 7A 26 8C 
1915  2B12- 26 A1 26 
1916  2B15- BA 26 D0           WRD STON,LODI,STOI,EXST,TIND,RUNP
1916  2B18- 26 E5 26 
1916  2B1B- EE 26 04 
1916  2B1E- 27 24 27 
1917  2B21- 66 27 A4           WRD ADDF,SUBF,MULF,DIVF,FLOF,FIXF
1917  2B24- 27 AD 27 
1917  2B27- B6 27 BF 
1917  2B2A- 27 CC 27 
1918  2B2D- D9 27 03           WRD FEQU,FNEQ,FLES,FGRE,FGRT,FLEE
1918  2B30- 28 0A 28 
1918  2B33- 11 28 18 
1918  2B36- 28 21 28 
1919  2B39- 2A 28 33           WRD FCOM,TFER,OPRA,GETR,PUTR,SWA2
1919  2B3C- 28 3F 28 
1919  2B3F- 4E 28 6A 
1919  2B42- 28 7A 28 
1920  2B45- 92 28 9F           WRD LDXI,STXI,CPNT,WRCP
1920  2B48- 28 EB 28 
1920  2B4B- 06 29 
1921                   *
1922                   * COLDSTART
1923                   ***********
1924                   *
1925  2B4D- 58         COLDST  CLI
1926  2B4E- D8                 CLD
1927  2B4F- AD 09 20           LDA USERST
1928  2B52- AE 0A 20           LDX USERST+1
1929  2B55- 85 11              STA STPROG
1930  2B57- 86 12              STX STPROG+1
1931  2B59- A0 00              LDY =0
1932  2B5B- 98                 TYA
1933  2B5C- 91 11              STA (STPROG),Y
1934  2B5E- C8                 INY
1935  2B5F- C0 04              CPY =4
1936  2B61- 90 F9              BCC *-5
1937  2B63- 4C BB 29           JMP WARMST
1938                   *
1939                           TIT R65 PASCAL: FLP-MATH
1940                           PAG

----------------------------------------------------------------------

R65 PASCAL: FLP-MATH               01/11/23   R65 ASSEMBLER  PAGE 41

1941                   *
1942                   ********************************
1943                   * R65 PASCAL FLP MATH ROUTINES *
1944                   ********************************
1945                   *
1946                   *
1947  2B66- 18         ADD     CLC
1948  2B67- A2 02              LDX =2
1949  2B69- B5 01      ADD1    LDA M1,X
1950  2B6B- 75 1C              ADC M2,X
1951  2B6D- 95 01              STA M1,X
1952  2B6F- CA                 DEX
1953  2B70- 10 F7              BPL ADD1
1954  2B72- 60                 RTS
1955                   *
1956  2B73- 06 10      MD1     ASL SIGN
1957  2B75- 20 78 2B           JSR ABSWAP
1958  2B78- 24 01      ABSWAP  BIT M1
1959  2B7A- 10 05              BPL ABSWP1
1960  2B7C- 20 F5 2B           JSR FCOMPL
1961  2B7F- E6 10              INC SIGN
1962  2B81- 38         ABSWP1  SEC
1963                   *
1964                   * SWAP: EXCHANGE F1 AND F2
1965                   **************************
1966                   *
1967  2B82- A2 04      SWAP    LDX =4
1968  2B84- 94 03      SWAP1   STY E-1,X
1969  2B86- B5 FF              LDA <(X1-1),X
1970  2B88- B4 1A              LDY X2-1,X
1971  2B8A- 94 FF              STY <(X1-1),X
1972  2B8C- 95 1A              STA X2-1,X
1973  2B8E- CA                 DEX
1974  2B8F- D0 F3              BNE SWAP1
1975  2B91- 60                 RTS
1976                   *
1977                   * FLOAT: FLOAT M1,M1+1 TO RESULT IN F1
1978                   **************************************
1979                   *
1980  2B92- A9 8E      FLOAT   LDA =$8E
1981  2B94- 85 00              STA X1
1982  2B96- A9 00              LDA =0
1983  2B98- 85 03              STA M1+2
1984  2B9A- F0 08              BEQ NORM
1985  2B9C- C6 00      NORM1   DEC X1
1986  2B9E- 06 03              ASL M1+2
1987  2BA0- 26 02              ROL M1+1
1988  2BA2- 26 01              ROL M1
1989  2BA4- A5 01      NORM    LDA M1
1990  2BA6- 0A                 ASL A

----------------------------------------------------------------------

R65 PASCAL: FLP-MATH               01/11/23   R65 ASSEMBLER  PAGE 42

1991  2BA7- 45 01              EOR M1
1992  2BA9- 30 04              BMI RTS1
1993  2BAB- A5 00              LDA X1
1994  2BAD- D0 ED              BNE NORM1
1995  2BAF- 60         RTS1    RTS
1996                   *
1997                   * FSUB: F1=F2-F1
1998                   ****************
1999                   *
2000  2BB0- 20 F5 2B   FSUB    JSR FCOMPL
2001  2BB3- 20 C3 2B   SWPALG  JSR ALGNSW
2002                   *
2003                   * FADD: F1=F2+F1
2004                   ****************
2005                   *
2006  2BB6- A5 1B      FADD    LDA X2
2007  2BB8- C5 00              CMP X1
2008  2BBA- D0 F7              BNE SWPALG
2009  2BBC- 20 66 2B           JSR ADD
2010  2BBF- 50 E3      ADDEND  BVC NORM
2011  2BC1- 70 05              BVS RTLOG
2012  2BC3- 90 BD      ALGNSW  BCC SWAP
2013  2BC5- A5 01      RTAR    LDA M1
2014  2BC7- 0A                 ASL A
2015  2BC8- E6 00      RTLOG   INC X1
2016  2BCA- F0 7E              BEQ OVFL
2017  2BCC- A2 FA      RTLOG1  LDX =$FA
2018  2BCE- A9 80      ROR1    LDA =$80
2019  2BD0- B0 01              BCS ROR2
2020  2BD2- 0A                 ASL A
2021  2BD3- 56 07      ROR2    LSR E+3,X
2022  2BD5- 15 07              ORA E+3,X
2023  2BD7- 95 07              STA E+3,X
2024  2BD9- E8                 INX
2025  2BDA- D0 F2              BNE ROR1
2026  2BDC- 60                 RTS
2027                   *
2028                   * FMUL: F1=F2*F1
2029                   ****************
2030                   *
2031  2BDD- 20 73 2B   FMUL    JSR MD1
2032  2BE0- 65 00              ADC X1
2033  2BE2- 20 33 2C           JSR MD2
2034  2BE5- 18                 CLC
2035  2BE6- 20 CC 2B   MUL1    JSR RTLOG1
2036  2BE9- 90 03              BCC MUL2
2037  2BEB- 20 66 2B           JSR ADD
2038  2BEE- 88         MUL2    DEY
2039  2BEF- 10 F5              BPL MUL1
2040  2BF1- 46 10      MDEND   LSR SIGN

----------------------------------------------------------------------

R65 PASCAL: FLP-MATH               01/11/23   R65 ASSEMBLER  PAGE 43

2041  2BF3- 90 AF      NORMX   BCC NORM
2042  2BF5- 38         FCOMPL  SEC
2043  2BF6- A2 03              LDX =3
2044  2BF8- A9 00      COMPL1  LDA =0
2045  2BFA- F5 00              SBC X1,X
2046  2BFC- 95 00              STA X1,X
2047  2BFE- CA                 DEX
2048  2BFF- D0 F7             BNE COMPL1
2049  2C01- F0 BC              BEQ ADDEND
2050                   *
2051                   * FDIV: F1=F2/F1
2052                   ****************
2053                   *
2054  2C03- 20 73 2B   FDIV    JSR MD1
2055  2C06- E5 00              SBC X1
2056  2C08- 20 33 2C           JSR MD2
2057  2C0B- 38         FDIV1   SEC
2058  2C0C- A2 02              LDX =2
2059  2C0E- B5 1C      FDIV2   LDA M2,X
2060  2C10- F5 04              SBC E,X
2061  2C12- 48                 PHA
2062  2C13- CA                 DEX
2063  2C14- 10 F8              BPL FDIV2
2064  2C16- A2 FD              LDX =$FD
2065  2C18- 68         FDIV3   PLA
2066  2C19- 90 02              BCC FDIV4
2067  2C1B- 95 1F              STA M2+3,X
2068  2C1D- E8         FDIV4   INX
2069  2C1E- D0 F8              BNE FDIV3
2070  2C20- 26 03              ROL M1+2
2071  2C22- 26 02              ROL M1+1
2072  2C24- 26 01              ROL M1
2073  2C26- 06 1E              ASL M2+2
2074  2C28- 26 1D              ROL M2+1
2075  2C2A- 26 1C              ROL M2
2076  2C2C- B0 1C              BCS OVFL
2077  2C2E- 88                 DEY
2078  2C2F- D0 DA              BNE FDIV1
2079  2C31- F0 BE              BEQ MDEND
2080  2C33- 86 03      MD2     STX M1+2
2081  2C35- 86 02              STX M1+1
2082  2C37- 86 01              STX M1
2083  2C39- B0 0D              BCS OVCHK
2084  2C3B- 30 04              BMI MD3
2085  2C3D- 68                 PLA
2086  2C3E- 68                 PLA
2087  2C3F- 90 B2              BCC NORMX
2088  2C41- 49 80      MD3     EOR =$80
2089  2C43- 85 00              STA X1
2090  2C45- A0 17              LDY =$17

----------------------------------------------------------------------

R65 PASCAL: FLP-MATH               01/11/23   R65 ASSEMBLER  PAGE 44

2091  2C47- 60                 RTS
2092  2C48- 10 F7      OVCHK   BPL MD3
2093  2C4A- 4C A8 21   OVFL    JMP DIV1-5      PASCAL RUNTIME ERROR
2094                   *
2095                   * FIX: FIX F1 IN M1, M1+1
2096                   *************************
2097                   *
2098  2C4D- 20 C5 2B           JSR RTAR
2099  2C50- A5 00      FIX     LDA X1
2100  2C52- C9 8E              CMP =$8E
2101  2C54- D0 F7              BNE FIX-3
2102  2C56- 60         RTRN    RTS
2103                   *
2104                           TIT R65 PASCAL: RANDOM ACCESS
2105                           PAG

----------------------------------------------------------------------

R65 PASCAL: RANDOM ACCESS          01/11/23   R65 ASSEMBLER  PAGE 45

2106                   *
2107                   * RANDOM ACCESS FILE HANDLER
2108                   ****************************
2109                   *
2110                   *
2111                   * OPENRA: OPEN A FILE FOR RANDOM ACCESS
2112                   ***************************************
2113                   *
2114                   * ENTRY: FILNM1,FILCY1,FILDRV,FILFLG
2115                   * FILFLG: BIT 7: PROTECTED (NEW ONLY)*
2116                   *         BIT 6: NO PRINTED OUTPUT
2117                   *         BIT 5: DIRECTION (0=READ)
2118                   *         BIT 4: 1=NEW, 0=OLD
2119                   *
2120                   * NEW ONLY: MAXSIZ,FILSA
2121                   *
2122                   * EXIT: NO OF OPEN FILE IN Y, STATUS IN A
2123                   *       AND FILERR, Y IS ONLY VALID
2124                   *       IF A=0
2125                   *
2126                   *
2127  2C57- AC 36 03   OPENRA  LDY MAXSEQ      SEARCH EMPTY ENTRY
2128  2C5A- B9 39 03           LDA FIDRTB,Y    BIT 5=1: ENTRY USED
2129  2C5D- 29 20              AND =$20
2130  2C5F- F0 08              BEQ OPENRA1     FOUND, SKIP
2131  2C61- 88                 DEY
2132  2C62- 10 F6              BPL OPENRA+3
2133                   *
2134  2C64- A9 23              LDA =$23        TOO MANY OPEN FILES
2135  2C66- 85 DB              STA FILERR
2136  2C68- 60                 RTS
2137                   *
2138  2C69- 8C 35 03   OPENRA1 STY CURSEQ      SAVE CURRENT ENTRY NO
2139  2C6C- A5 DC              LDA FILDRV      GET AND TEST DRIVE
2140  2C6E- 99 41 03           STA FIDVTB,Y
2141  2C71- 29 FE              AND =$FE
2142  2C73- F0 05              BEQ OPENRA2     SKIP, IF OK
2143                   *
2144  2C75- A9 28              LDA =$28        ILLEGAL DRIVE FOR RA
2145  2C77- 85 DB              STA FILERR
2146  2C79- 60                 RTS
2147                   *
2148  2C7A- A9 10      OPENRA2 LDA =$10        TEST OLD/NEW FLAG
2149  2C7C- 25 DA              AND FILFLG
2150  2C7E- F0 78              BEQ OPENOLD     SKIP, IF OLD
2151                   *
2152                   * OPEN A NEW FILE
2153                   *
2154  2C80- A5 DA      OPENNEW LDA FILFLG
2155  2C82- 29 80              AND =$80        GET PROTECTED FLAG

----------------------------------------------------------------------

R65 PASCAL: RANDOM ACCESS          01/11/23   R65 ASSEMBLER  PAGE 46

2156  2C84- 09 42              ORA ='B'        BLOCK FILE
2157  2C86- 8D 00 03           STA FILTYP      SET FILE TYPE
2158                   *
2159  2C89- A9 00              LDA =0
2160  2C8B- AE 37 03           LDX MAXSIZ      SIZE OF FILE
2161  2C8E- 8D 15 03           STA FILSIZ
2162  2C91- 8E 16 03           STX FILSIZ+1
2163                   *
2164  2C94- CA                 DEX             COMPUTE FILEA
2165  2C95- AD 1A 03           LDA FILSA
2166  2C98- 18                 CLC
2167  2C99- 69 FF              ADC =$FF
2168  2C9B- 8D 1C 03           STA FILEA
2169  2C9E- 8A                 TXA
2170  2C9F- 6D 1B 03           ADC FILSA+1
2171  2CA2- 8D 1D 03           STA FILEA+1
2172                   *
2173  2CA5- 20 1E E8           JSR SETFID      SET FILEDATE
2174                   *
2175  2CA8- A2 10              LDX =16
2176  2CAA- BD 20 03   OPENNE1 LDA FILNM1,X    SET FILNM1 AND FILCY1
2177  2CAD- 9D 01 03           STA FILNAM,X    TO FILNAM AND FILCYC
2178  2CB0- CA                 DEX
2179  2CB1- 10 F7              BPL OPENNE1
2180                   *
2181                   * SEARCH IN DIRECTORY AND RETURN CYCLUS
2182                   * AND DIRECTORY ENTRY TO USE, TEST EXISTING
2183                   * FILES FOR SAME NAME AND CYCLUS, DISK
2184                   * OPERATION IS INITIALIZED
2185                   *
2186  2CB3- 20 96 20           JSR PREPWRA
2187  2CB6- 8E 11 03           STX FILCYC
2188                   *
2189                   * FIND FIRST EMPTY DISK DIRECTORY ENTR
2190                   * FETCH ITAND SET FIRST SECTOR OF FILE TO
2191                   * FILLOC, OUTPUT Y,X AS NUMBER OF EMPTY
2192                   * SECTORS
2193                   *
2194  2CB9- 20 99 20           JSR PREPWRB
2195  2CBC- 8A                 TXA
2196  2CBD- CD 16 03           CMP FILSIZ+1
2197  2CC0- 98                 TYA
2198  2CC1- E9 00              SBC =0          COMPARE WITH REQUESTED
2199  2CC3- B0 05              BCS OPENNE3     SECTORS
2200                   *
2201  2CC5- A9 26              LDA =$26        DISK OVERFLOW
2202  2CC7- 4C 8D 20           JMP DISCER1
2203                   *
2204                   * SET FITEMP,Y AND FITEMP+8,YNTO FIRST SECTOT
2205                   * OF FILE ON DISK, FIMAXT,Y TO SIZE, DIRECTORY

----------------------------------------------------------------------

R65 PASCAL: RANDOM ACCESS          01/11/23   R65 ASSEMBLER  PAGE 47

2206                   * ENTRY NO TO FITEMP+16,Y
2207                   * THEN PUT THIS ENTRY ONTO THE DISKMAND SET
2208                   * A NEW END OF DIRECTORY MARK
2209                   *
2210  2CCA- 20 72 20   OPENNE3 JSR DOPEN4
2211                   *
2212  2CCD- AC 35 03           LDY CURSEQ      SETUP DUMMY FIRST SECTOR
2213  2CD0- A9 00              LDA =0
2214  2CD2- 99 49 03           STA FIBPTB,Y
2215  2CD5- 99 51 03           STA FIRCTB,Y
2216                   *
2217  2CD8- AC 35 03   OPENNE4 LDY CURSEQ      OPEN FILE
2218  2CDB- A5 DA              LDA FILFLG
2219  2CDD- 0A                 ASL A
2220  2CDE- 0A                 ASL A
2221  2CDF- 29 80              AND =$80        GET DIRECTION
2222  2CE1- 48                 PHA
2223  2CE2- 2D 00 03           AND FILTYP
2224  2CE5- F0 06              BEQ OPENNE5     OK, SKIP
2225  2CE7- 68                 PLA             PROTECTED FILE
2226                   *
2227  2CE8- A9 29              LDA =$29
2228  2CEA- 85 DB              STA FILERR
2229  2CEC- 60                 RTS
2230                   *
2231  2CED- 68         OPENNE5 PLA
2232  2CEE- 09 60              ORA =$60        RA FILE, OPENIT
2233  2CF0- 99 39 03           STA FIDRTB,Y
2234                   *
2235  2CF3- A9 00              LDA =0          NORMALEXIT
2236  2CF5- 85 DB              STA FILERR
2237  2CF7- 60         OPENNE6 RTS
2238                   *
2239                   * OPEN AN OLD FILE:
2240                   * PREPARE DISK OPERATION, SEARCH REQUESTED
2241                   * FILE AND GET CORRSPONDING DISK ENTRY
2242                   *
2243  2CF8- 20 93 20   OPENOLD JSR PREPRD
2244                   *
2245  2CFB- 20 75 20           JSR PRFLB1      PRINT LABEL, IF REQ.
2246  2CFE- AD 00 03          LDA FILTYP
2247  2D01- 29 7F              AND =$7F
2248  2D03- C9 42              CMP ='B'        MUST BE BLOCK FILE
2249  2D05- F0 05              BEQ OPENOL1     SKIP, IF OK
2250                   *
2251  2D07- A9 05              LDA =5
2252  2D09- 4C 8D 20           JMP DISCER1     FILE TYPE ERROR
2253                   *
2254  2D0C- 20 90 20   OPENOL1 JSR ENDDO       END OF DISK OPERATION
2255                   *

----------------------------------------------------------------------

R65 PASCAL: RANDOM ACCESS          01/11/23   R65 ASSEMBLER  PAGE 48

2256                   * SET NOW FIRST SECTOR AND SIZE TO TABLE
2257                   *
2258  2D0F- 20 6F 20           JSR DOPEN1
2259                   *
2260  2D12- A9 00              LDA =0          GET FIRST RECORD
2261  2D14- 20 1B 2D           JSR GETTREC
2262  2D17- D0 DE              BNE OPENNE6     SKIP, IF NOT OK
2263  2D19- F0 BD              BEQ OPENNE4     ELSE OPEN FILE
2264                   *
2265                   *
2266                   * GETTREC: GET ONE RECORD FROM RA-FILE
2267                   * RECORD NUMBER IS IN A, FILE NUMBER IN CURSEQ
2268                   * RESULT IUS Z=1,OF OK, ELSE Z=0 AND FILERR
2269                   *
2270  2D1B- AE 35 03   GETTREC LDX CURSEQ      SAVE RECORD NO
2271  2D1E- 9D 51 03           STA FIRCTB,X
2272  2D21- A9 00              LDA =0          CLEAR UPDATED FLAG
2273  2D23- 9D 49 03           STA FIBPTB,X
2274  2D26- BD 41 03           LDA FIDVTB,X    SET DRIVE NO
2275  2D29- 85 DC              STA FILDRV
2276                   *
2277                   * COMPUTE DATA-POINTER AND BINARY
2278                   * TRACK,SECTOR, SETUP FILDRV
2279                   *
2280  2D2B- 20 7B 20           JSR PREPSR
2281                   *
2282                   * ADD RECORD NUMBER TO BINARY TRAC/SECTOR
2283                   * TEST SIZE OF FILE, CONVERT TO TRACK AND
2284                   * SECTOR, INITIALIZE DISK OPERATION
2285                   *
2286  2D2E- 20 7E 20           JSR PREPSR1
2287                   *
2288  2D31- 20 84 20           JSR READ        READ ON SECTOR
2289                   *
2290  2D34- 4C 90 20           JMP ENDDO       END OF DISK OPERATION
2291                   *
2292                   * PUTTREC: SAVE CURRENT RECORD ON DISK
2293                   * FILE NUMBER IN CURSEQ, RECORD NUMBER IN
2294                   * FIRCTB,Y, RETURNS Z=1 IF OK, ELSE FILERR
2295                   *
2296  2D37- BD 41 03   PUTTREC LDA FIDVTB,X
2297  2D3A- 85 DC              STA FILDRV
2298  2D3C- 20 7B 20           JSR PREPSR      SEE GETTREC FOR
2299  2D3F- 20 7E 20           JSR PREPSR1     COMMENTS
2300  2D42- 20 87 20           JSR WRITE
2301  2D45- 4C 90 20           JMP ENDDO
2302                   *
2303                   * GETNEWR: GET A NEW RECORD, SAVE OLD, IF
2304                   * OLD HAS BEEN UPDATED
2305                   * ENTRY: NEW RECORD IN A, FILE NO IN CURSEQ

----------------------------------------------------------------------

R65 PASCAL: RANDOM ACCESS          01/11/23   R65 ASSEMBLER  PAGE 49

2306                   * EXIT: z=1 IF OK, ELSE FILERR
2307                   *
2308  2D48- 8D 34 03   GETNEWR STA SAVRST+1    SAVE REQUESTED RECORD
2309  2D4B- AE 35 03           LDX CURSEQ
2310  2D4E- BD 49 03           LDA FIBPTB,X    UPDATED?
2311  2D51- 10 05              BPL GETNEW1
2312                   *
2313  2D53- 20 37 2D           JSR PUTTREC     YES, SAVE IT
2314  2D56- D0 23              BNE EXIT
2315                   *
2316  2D58- AD 34 03   GETNEW1 LDA SAVRST+1    GET REQUESTED RECORD
2317  2D5B- 4C 1B 2D           JMP GETTREC
2318                   *
2319                   * GETBYTE: GET ONE BYTE FROM FILE
2320                   *********************************
2321                   * ENTRY: FILE NUMBER IN X
2322                   *        POINTER IN A(LOW) AND Y(HIGH)
2323                   * EXIT:  FILERR IN Y AND STATUS, BYTE IN A
2324                   *
2325  2D5E- 8D 33 03   GETBYTE STA SAVRST      SAVE A
2326  2D61- 20 AB 2D           JSR TESTRA
2327                   *
2328  2D64- 98                 TYA
2329  2D65- DD 51 03           CMP FIRCTB,X    IS IT IN CURRENT RECORD?
2330  2D68- F0 05              BEQ GETBYT1     YES, SKIP
2331                   *
2332  2D6A- 20 48 2D           JSR GETNEWR     NO, GET NEW RECORD
2333  2D6D- D0 0C              BNE EXIT
2334                   *
2335  2D6F- 20 78 20   GETBYT1 JSR CPOINT      COMPUTE BUFFER PNT
2336  2D72- AC 33 03           LDY SAVRST      RESTORE LOW POINTER
2337  2D75- B1 FA              LDA (POINT),Y   GET THE BYTE
2338  2D77- A0 00              LDY =0
2339  2D79- 84 DB              STY FILERR      OK
2340  2D7B- 60         EXIT    RTS
2341                   *
2342                   * PUTBYTE: PUT ONE BYTE TO FILE
2343                   *******************************
2344                   *
2345                   * ENTRY: BYTE STORED IN KCHAR
2346                   *        FILE NUMBER IN X
2347                   *        POINTER IN A(LOW) AND Y(HIGH)
2348                   * EXIT:  FILERR IN Y AND STATUS
2349                   *
2350  2D7C- 8D 33 03   PUTBYTE STA SAVRST
2351  2D7F- 20 AB 2D           JSR TESTRA
2352  2D82- BD 39 03           LDA FIDRTB,X    IS WRITE ALLOWED?
2353  2D85- 30 05              BMI PUTBYT0     YES,SKIP
2354  2D87- A0 29              LDY =$29        WRITE NOT ALLOWED
2355  2D89- 84 DB              STY FILERR

----------------------------------------------------------------------

R65 PASCAL: RANDOM ACCESS          01/11/23   R65 ASSEMBLER  PAGE 50

2356  2D8B- 60                 RTS
2357                   *
2358  2D8C- 98         PUTBYT0 TYA             FOR COMMENTS
2359  2D8D- DD 51 03           CMP FIRCTB,X    SEE GETBYTE
2360  2D90- F0 05              BEQ PUTBYT1
2361                   *
2362  2D92- 20 48 2D           JSR GETNEWR
2363  2D95- D0 E4              BNE EXIT
2364                   *
2365  2D97- 20 78 20   PUTBYT1 JSR CPOINT
2366  2D9A- A9 80              LDA =$80        SET UPDATED FLAG
2367  2D9C- 9D 49 03           STA FIBPTB,X
2368  2D9F- AC 33 03           LDY SAVRST
2369  2DA2- A5 FE              LDA KCHAR       GET BACK KCHAR
2370  2DA4- 91 FA              STA (POINT),Y
2371  2DA6- A0 00              LDY =0
2372  2DA8- 84 DB              STY FILERR
2373  2DAA- 60                 RTS
2374                   *
2375                   *
2376                   * TESTRA: TEST X FOR LEGAL RA-FILE
2377                   *
2378  2DAB- 8E 35 03   TESTRA  STX CURSEQ
2379  2DAE- EC 36 03           CPX MAXSEQ
2380  2DB1- B0 0A              BCS TESTRA2
2381                   *
2382  2DB3- BD 39 03   TESTRA1 LDA FIDRTB,X
2383  2DB6- 29 60              AND =$60
2384  2DB8- C9 60              CMP =$60
2385  2DBA- D0 03              BNE TESTRA3     SKIP, IF NOT OK
2386  2DBC- 60                 RTS
2387                   *
2388  2DBD- F0 F4      TESTRA2 BEQ TESTRA1
2389  2DBF- 68         TESTRA3 PLA
2390  2DC0- 68                 PLA
2391  2DC1- A0 25              LDY =$25        FILE NUMBER NOT ALLOWED
2392  2DC3- 84 DB              STY FILERR
2393  2DC5- 60                 RTS
2394                   *
2395                   * CLOSRA: CLOSE RA OR SEQUENTIAL FILE IN X
2396                   ******************************************
2397                   * ENTRY: FILE IN X
2398                   * EXIT: FILERR IN Y AND STATUS
2399                   *
2400  2DC6- BD 39 03   CLOSRA  LDA FIDRTB,X
2401  2DC9- 29 40              AND =$40        SEQUENTIAL FILE?
2402  2DCB- D0 03              BNE CLOSRA1     NO, SKIP
2403  2DCD- 4C 81 20           JMP CLOSE       YES, CLOSE IT
2404                   *
2405  2DD0- 20 AB 2D   CLOSRA1 JSR TESTRA      MUST BE RA-FILE

----------------------------------------------------------------------

R65 PASCAL: RANDOM ACCESS          01/11/23   R65 ASSEMBLER  PAGE 51

2406  2DD3- BD 49 03           LDA FIBPTB,X    UPDATED?
2407  2DD6- F0 05              BEQ CLOSRA2     NO, SKIP
2408                   *
2409  2DD8- 20 37 2D           JSR PUTTREC
2410  2DDB- D0 0B              BNE CLOSRA3
2411                   *
2412  2DDD- AE 35 03   CLOSRA2 LDX CURSEQ
2413  2DE0- A9 00              LDA =0
2414  2DE2- 9D 39 03           STA FIDRTB,X    CLOSE IT
2415  2DE5- A8                 TAY
2416  2DE6- 84 DB              STY FILERR
2417  2DE8- 60         CLOSRA3 RTS
2418                   *
2419                   ENDCODE EQU *
2420                   *
2421                           TIT R65 PASCAL: LABELS
2422                   *
2423  2DE9-                    END
LABELS=015E
ERRORS=00
RECORDS=78
