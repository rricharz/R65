0001                    *

----------------------------------------------------------------------

R65 PASCAL: LABELS                 26/10/23   R65 ASSEMBLER  PAGE 01

0002                   *       **********************
0003                   *       * R65 PASCAL RUNTIME *
0004                   *       **********************
0005                   *
0006                   * VERSION 5.3 01/06/82 RRICHARZ,RBAUMANN
0007                   * Modified 22/09/19 RRICHARZ
0008                   * Graphics text devices added
0009                   *
0010                           TIT R65 PASCAL RUNTIME
0011                   *
0012                   * INCLUDES RANDOM ACCESS FILE HANDLING,
0013                   * FLOATING POINT MATH, FILE HANDLING ERROR
0014                   * TESTING (OPTIONAL)
0015                   *
0016                           ORG 0
0017                   *
0018  0000-            ACCU    BSS 4   TOP OF STACKELEMENT
0019                   X1      EQU ACCU        FLP ACCU
0020                   M1      EQU ACCU+1
0021  0004-            E       BSS 4   FLP SCRATCH REGISTER
0022  0008-            SP      BSS 2   CURRENT STACK (-128)
0023  000A-            PC      BSS 2   PROGRAM COUNTER
0024  000C-            RUNERR  BSS 1   RUNTIME ERROR CODE
0025  000D-            DEVICE  BSS 1   I/O DEVICE CODE
0026  000E-            ENDSTK  BSS 2   END OF STACK (-128)
0027  0010-            SIGN    BSS 1   TEMPORARY SIGN
0028  0011-            STPROG  BSS 2   START OF USER PROGRAM
0029  0013-            EOPROG  BSS 2   END OF USER PRORMA
0030  0015-            BUFFPN  BSS 1   INPUT BUFFER POINTER
0031  0016-            ENDBUF  BSS 1   END OF INPUT BUFFER
0032  0017-            BASE    BSS 2   CURRENT BASE (-128)
0033  0019-            ABASE   BSS 2   ALTERNATE BASE (-128)
0034  001B-            ARG1    BSS 2   TEMPORARY ARGUMENT
0035  001D-            ARG3    BSS 4   TEMPORARY REGISTERS
0036  0021-            ARG2    BSS 2
0037                   X2      EQU ARG1        FLP REGISTER
0038                   M2      EQU ARG1+1
0039  0023-            IOCHECK BSS 1   IO ERROR CHECKING FLAG
0040  0024-            LINBUF  BSS 56  INPUT LINE BUFFER
0041                   *
0042                   FILFLG  EQU $DA
0043                   FILERR  EQU $DB
0044                   FILDRV  EQU $DC
0045                   TRACK   EQU $DD
0046                   SECTOR  EQU $DE
0047                   DATA    EQU $E0
0048                   VIDPNT  EQU $E9
0049                   POINT   EQU $FA
0050                   KCHAR   EQU $FE
0051                   *

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 26/10/23   R65 ASSEMBLER  PAGE 02

0052                   EMUCOM  EQU $1430       EMULATOR COMMAND REG
0053                   MULTA   EQU $14E0
0054                   MULTB   EQU $14E1
0055                   MULTR   EQU $14E2
0056                   *
0057                   FILTYP  EQU $0300
0058                   FILNAM  EQU $0301
0059                   FILCYC  EQU $0311
0060                   FILSTP  EQU $0312
0061                   FILLOC  EQU $0313
0062                   FILSIZ  EQU $0315
0063                   FILSA   EQU $031A
0064                   FILEA   EQU $031C
0065                   FILNM1  EQU $0320
0066                   FILCY1  EQU $0330
0067                   FILSA1  EQU $0331
0068                   SAVRST  EQU $0333
0069                   CURSEQ  EQU $0335
0070                   MAXSEQ  EQU $0336
0071                   MAXSIZ  EQU $0337
0072                   FIDRTB  EQU $0339
0073                   FIDVTB  EQU $0341
0074                   FIBPTB  EQU $0349
0075                   FIRCTB  EQU $0351
0076                   GRX     EQU $03AE
0077                   GRY     EQU $03AF
0078                   GRC     EQU $03B0
0079                   SFLAG   EQU $1781
0080                   NUMCHR  EQU $178A
0081                   VMON    EQU $17D5
0082                   SAVS    EQU $17FF
0083                   *
0084                   APLOTCH EQU $C818
0085                   GETKEY  EQU $E000
0086                   AUTOPR  EQU $E00C
0087                   ENDLIN  EQU $E024
0088                   PRTINF  EQU $E027
0089                   GETCHR  EQU $E003
0090                   GETLIN  EQU $E006
0091                   PRTCHR  EQU $E009
0092                   PRTBYT  EQU $E02D
0093                   PRTAX   EQU $E030
0094                   PRTRSA  EQU $E836
0095                   RDFILE  EQU $E815
0096                   SETFID  EQU $E81E
0097                   OPEN    EQU $F00F
0098                   READCH  EQU $F018
0099                   WRITCH  EQU $F01B
0100                   GETNAM  EQU $F815
0101                   *

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 26/10/23   R65 ASSEMBLER  PAGE 03

0102  005C-                    ORG $2000
0103                   *
0104                           PAG

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 26/10/23   R65 ASSEMBLER  PAGE 04

0105                   *
0106                   * ENTRY VECTORS
0107                   *
0108  2000- 4C C2 2A           JMP COLDST      COLD START ENTRY VECTOR
0109  2003- 4C 38 29           JMP WARMST      WARM START ENTRY VECTOR
0110  2006- 4C FD 28           JMP PERROR      PASCAL ERROR
0111                   *
0112  2009- 7E 2D      USERST  WRD ENDCODE+32
0113  200B- FF C7      USEREND WRD $C7FF
0114                   *
0115  200D- 4C F2 FC   HARGUM  JMP $FCF2       #######
0116                   *
0117                   *
0118                   * P-CODE 00:  STOP      (END OF EXECUTION)
0119                   ******************
0120                   * NO ARGUMENTS
0121                   *
0122  2010- A5 11      STOP    LDA STPROG      IS ANOTHER PROGRAM
0123  2012- A6 12              LDX STPROG+1    RUNNING?
0124  2014- CD 09 20           CMP USERST
0125  2017- D0 20              BNE STOP1
0126  2019- EC 0A 20           CPX USERST+1
0127  201C- D0 1B              BNE STOP1
0128                   *
0129  201E- 20 27 E0           JSR PRTINF      NO, STOP PASCAL
0130  2021- 0D 0A 51           BYT $0D,$0A,'Quit Pascal'+$80
0130  2024- 75 69 74 
0130  2027- 20 50 61 
0130  202A- 73 63 61 
0130  202D- EC 
0131  202E- AD 81 17           LDA SFLAG
0132  2031- 29 FE              AND =$FE        CLEAR PASCAL RUNTIME BIT
0133  2033- 8D 81 17           STA SFLAG       IN SFLAG
0134  2036- 6C D5 17           JMP (VMON)
0135                   *
0136  2039- 38         STOP1   SEC             YES, COMPUTE OLD SP
0137  203A- E9 8C              SBC =140
0138  203C- B0 01              BCS *+3
0139  203E- CA                 DEX
0140  203F- 85 08              STA SP
0141  2041- 86 09              STX SP+1
0142  2043- A0 8C              LDY =140
0143  2045- 20 5E 27           JSR GETBACK
0144  2048- 85 13              STA EOPROG
0145  204A- 86 14              STX EOPROG+1
0146  204C- 20 5E 27           JSR GETBACK
0147  204F- 85 11              STA STPROG
0148  2051- 86 12              STX STPROG+1
0149  2053- 20 5E 27           JSR GETBACK
0150  2056- 85 0A              STA PC

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 26/10/23   R65 ASSEMBLER  PAGE 05

0151  2058- 86 0B              STX PC+1
0152  205A- 20 5E 27           JSR GETBACK
0153  205D- 85 17              STA BASE
0154  205F- 86 18              STX BASE+1
0155  2061- 20 5E 27           JSR GETBACK
0156  2064- 85 00              STA ACCU
0157  2066- 86 01              STX ACCU+1
0158  2068- AE FF 17           LDX SAVS        RESTORE STACK POINTER
0159  206B- 9A                 TXS
0160  206C- 4C D1 29           JMP LOOP
0161                   *
0162                   *
0163  206F- 4C FF F0   DOPEN1  JMP $F0FF
0164  2072- 4C 45 F1   DOPEN4  JMP $F145
0165  2075- 4C 51 F1   PRFLB1  JMP $F151
0166  2078- 4C 59 F1   CPOINT  JMP $F159
0167  207B- 4C E0 F1   PREPSR  JMP $F1E0
0168  207E- 4C 9E F2   PREPSR1 JMP $F29E
0169  2081- 4C BF F2   CLOSE   JMP $F2BF
0170  2084- 4C 57 F4   READ    JMP $F457
0171  2087- 4C 25 F4   WRITE   JMP $F425
0172  208A- 4C A7 F4   PREPDO  JMP $F4A7
0173  208D- 4C FD F5   DISCER1 JMP $F5FD
0174  2090- 4C 25 F6   ENDDO   JMP $F625
0175  2093- 4C 2C F6   PREPRD  JMP $F62C
0176  2096- 4C 51 F6   PREPWRA JMP $F651
0177  2099- 4C 6D F6   PREPWRB JMP $F66D
0178                   *
0179                   *
0180                   * P-CODE 01: RETN       (RETURN FROM PROCEDURE
0181                   *****************
0182                   * NO ARGUMENTS
0183                   *
0184  209C- A5 17      RETN    LDA BASE        SP=BASE-2
0185  209E- 38                 SEC
0186  209F- E9 02              SBC =2
0187  20A1- 85 08              STA SP
0188  20A3- A5 18              LDA BASE+1
0189  20A5- E9 00              SBC =0
0190  20A7- 85 09              STA SP+1
0191  20A9- A0 80              LDY =128        GET STACK TOP ELEMENT
0192  20AB- B1 08              LDA (SP),Y
0193  20AD- 85 00              STA ACCU
0194  20AF- C8                 INY
0195  20B0- B1 08              LDA (SP),Y
0196  20B2- 85 01              STA ACCU+1
0197  20B4- A0 84              LDY =132
0198  20B6- B1 08              LDA (SP),Y      GET SAVED OLD BASE
0199  20B8- 85 17              STA BASE
0200  20BA- C8                 INY

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 26/10/23   R65 ASSEMBLER  PAGE 06

0201  20BB- B1 08              LDA (SP),Y
0202  20BD- 85 18              STA BASE+1
0203  20BF- C8                 INY
0204  20C0- B1 08              LDA (SP),Y      AND RETURN ADDRESS
0205  20C2- 18                 CLC
0206  20C3- 69 02              ADC =2
0207  20C5- 85 0A              STA PC
0208  20C7- C8                 INY
0209  20C8- B1 08              LDA (SP),Y
0210  20CA- 69 00              ADC =0
0211  20CC- 85 0B              STA PC+1
0212  20CE- 60                 RTS
0213                   *
0214                   * P-CODE 02: NEGA       (NEGATE ACCU)
0215                   *****************
0216                   * NO ARGUMENTS
0217                   *
0218  20CF- A9 00      NEGA    LDA =0
0219  20D1- 38                 SEC
0220  20D2- E5 00              SBC ACCU
0221  20D4- 85 00              STA ACCU
0222  20D6- A9 00              LDA =0
0223  20D8- E5 01              SBC ACCU+1
0224  20DA- 85 01              STA ACCU+1
0225  20DC- 60                 RTS
0226                   *
0227                   * P-CODE 03: ADDA       (ADD)
0228                   *****************
0229                   * NO ARGUMENTS
0230                   *
0231  20DD- A0 7E      ADDA    LDY =126
0232  20DF- 18                 CLC
0233  20E0- B1 08              LDA (SP),Y
0234  20E2- 65 00              ADC ACCU
0235  20E4- 85 00              STA ACCU
0236  20E6- C8                 INY
0237  20E7- B1 08              LDA (SP),Y
0238  20E9- 65 01              ADC ACCU+1
0239  20EB- 85 01              STA ACCU+1
0240                   *
0241  20ED- A5 08      DECS2   LDA SP
0242  20EF- 38                 SEC
0243  20F0- E9 02              SBC =2
0244  20F2- 85 08              STA SP
0245  20F4- B0 02              BCS *+4
0246  20F6- C6 09              DEC SP+1
0247  20F8- 60                 RTS
0248                   *
0249                   * P-CODE 04: SUBA       (SUBTRACT)
0250                   *****************

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 26/10/23   R65 ASSEMBLER  PAGE 07

0251                   * NO ARGUMENTS
0252                   *
0253  20F9- A0 7E      SUBA    LDY =126
0254  20FB- 38                 SEC
0255  20FC- B1 08              LDA (SP),Y
0256  20FE- E5 00             SBC ACCU
0257  2100- 85 00              STA ACCU
0258  2102- C8                 INY
0259  2103- B1 08              LDA (SP),Y
0260  2105- E5 01              SBC ACCU+1
0261  2107- 85 01              STA ACCU+1
0262  2109- 4C ED 20           JMP DECS2
0263                   *
0264                   * P-CODE 05: MULA       (MULTIPLY)
0265                   *****************
0266                   * NO ARGUMENTS
0267                   *
0268  210C- 20 46 21   MULA    JSR GETSIGN     COMPUTE SIGN OF RESULT
0269  210F- A5 00              LDA ACCU
0270  2111- 78                 SEI
0271  2112- 8D E0 14           STA MULTA
0272  2115- A5 1B              LDA ARG1        GET SAVED ARGUMENT
0273  2117- 8D E1 14           STA MULTB
0274  211A- AD E2 14           LDA MULTR
0275  211D- 85 00              STA ACCU
0276  211F- AD E3 14           LDA MULTR+1
0277  2122- A6 1C              LDX ARG1+1
0278  2124- 8E E1 14           STX MULTB
0279  2127- 18                 CLC
0280  2128- 6D E2 14           ADC MULTR
0281  212B- A6 01              LDX ACCU+1
0282  212D- 8E E0 14           STX MULTA
0283  2130- A6 1B              LDX ARG1
0284  2132- 8E E1 14           STX MULTB
0285  2135- 18                 CLC
0286  2136- 6D E2 14           ADC MULTR
0287  2139- 58                 CLI
0288  213A- 29 7F              AND =$7F
0289  213C- 85 01              STA ACCU+1
0290  213E- 20 ED 20           JSR DECS2
0291  2141- A5 10              LDA SIGN
0292  2143- 30 8A              BMI NEGA
0293  2145- 60                 RTS
0294                   *
0295  2146- A5 01      GETSIGN LDA ACCU+1
0296  2148- 85 10              STA SIGN
0297  214A- 10 03              BPL *+5
0298  214C- 20 CF 20           JSR NEGA
0299                   *
0300  214F- A0 7F              LDY =127

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 26/10/23   R65 ASSEMBLER  PAGE 08

0301  2151- B1 08              LDA (SP),Y
0302  2153- 10 14              BPL GETSI1
0303  2155- 45 10              EOR SIGN
0304  2157- 85 10              STA SIGN
0305  2159- 88                 DEY
0306  215A- A9 00              LDA =0
0307  215C- 38                 SEC
0308  215D- F1 08              SBC (SP),Y
0309  215F- 85 1B              STA ARG1
0310  2161- C8                 INY
0311  2162- A9 00              LDA =0
0312  2164- F1 08              SBC (SP),Y
0313  2166- 85 1C              STA ARG1+1
0314  2168- 60                 RTS
0315                   *
0316  2169- 85 1C      GETSI1  STA ARG1+1
0317  216B- 88                 DEY
0318  216C- B1 08              LDA (SP),Y
0319  216E- 85 1B              STA ARG1
0320  2170- 60                 RTS
0321                   *
0322                   * PCODE 06: DIVA        (DIVIDE)
0323                   ****************
0324                   *
0325  2171- A0 7E      DIVA    LDY =126
0326  2173- B1 08              LDA (SP),Y
0327  2175- 85 1B              STA ARG1
0328  2177- C8                 INY
0329  2178- B1 08              LDA (SP),Y
0330  217A- 85 1C              STA ARG1+1
0331  217C- 20 ED 20           JSR DECS2
0332                   *
0333  217F- A5 1C              LDA ARG1+1
0334  2181- 29 80              AND =$80
0335  2183- F0 02              BEQ *+4
0336  2185- A9 FF              LDA =$FF
0337  2187- 85 21              STA ARG2
0338  2189- 85 22              STA ARG2+1
0339  218B- AA                 TAX
0340  218C- 18                 CLC
0341  218D- 65 1B              ADC ARG1
0342  218F- 85 1B              STA ARG1
0343  2191- 8A                 TXA
0344  2192- 65 1C              ADC ARG1+1
0345  2194- 85 1C              STA ARG1+1
0346  2196- 8A                 TXA
0347  2197- 45 01              EOR ACCU+1
0348  2199- 85 10              STA SIGN
0349  219B- 10 03              BPL *+5
0350  219D- 20 CF 20           JSR NEGA

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 26/10/23   R65 ASSEMBLER  PAGE 09

0351  21A0- A0 11              LDY =$11
0352  21A2- A5 00              LDA ACCU
0353  21A4- 05 01              ORA ACCU+1
0354  21A6- D0 05              BNE DIV1
0355  21A8- A2 81              LDX =$81        PASCAL RUNTIME ERROR
0356  21AA- 4C FD 28           JMP PERROR      DIVISION BY ZERO
0357                   *
0358  21AD- 38         DIV1    SEC
0359  21AE- A5 21              LDA ARG2
0360  21B0- E5 00              SBC ACCU
0361  21B2- 48                 PHA
0362  21B3- A5 22              LDA ARG2+1
0363  21B5- E5 01              SBC ACCU+1
0364  21B7- 48                 PHA
0365  21B8- 45 22              EOR ARG2+1
0366  21BA- 30 09              BMI DIV2
0367  21BC- 68                 PLA
0368  21BD- 85 22              STA ARG2+1
0369  21BF- 68                 PLA
0370  21C0- 85 21              STA ARG2
0371  21C2- 38                 SEC
0372  21C3- B0 03              BCS DIV3
0373                   *
0374  21C5- 68         DIV2    PLA
0375  21C6- 68                 PLA
0376  21C7- 18                 CLC
0377  21C8- 26 1B      DIV3    ROL ARG1
0378  21CA- 26 1C              ROL ARG1+1
0379  21CC- 26 21              ROL ARG2
0380  21CE- 26 22              ROL ARG2+1
0381  21D0- 88                 DEY
0382  21D1- D0 DA              BNE DIV1
0383  21D3- A5 1B              LDA ARG1
0384  21D5- A6 1C              LDX ARG1+1
0385  21D7- 85 00              STA ACCU
0386  21D9- 86 01              STX ACCU+1
0387  21DB- A5 10              LDA SIGN
0388  21DD- 10 03              BPL *+5
0389  21DF- 4C CF 20           JMP NEGA
0390  21E2- 60                 RTS
0391                   *
0392                   * P-CODE 07: LOWB       (LOW BIT)
0393                   *****************
0394                   * NO ARGUMENTS
0395                   *
0396  21E3- A5 00      LOWB    LDA ACCU
0397  21E5- 29 01              AND =1
0398  21E7- 85 00      LOWB1   STA ACCU
0399  21E9- A9 00              LDA =0
0400  21EB- 85 01              STA ACCU+1

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 26/10/23   R65 ASSEMBLER  PAGE 10

0401  21ED- 60                 RTS
0402                   *
0403                   * P-CODE 08: TEQU       (TEST EQUAL)
0404                   *****************
0405                   *
0406  21EE- 20 F9 20   TEQU    JSR SUBA
0407  21F1- A5 00              LDA ACCU
0408  21F3- 05 01              ORA ACCU+1
0409  21F5- F0 04              BEQ TEQU1
0410  21F7- A9 00              LDA =0
0411  21F9- F0 EC              BEQ LOWB1       UNCOND.
0412                   *
0413  21FB- A9 01      TEQU1   LDA =1
0414  21FD- D0 E8              BNE LOWB1       UNCOND.
0415                   *
0416                   * PCODE 09: TNEQ        (TEST NOT EQUAL)
0417                   ****************
0418                   *
0419  21FF- 20 EE 21  TNEQ    JSR TEQU
0420  2202- A5 00              LDA ACCU
0421  2204- 49 01              EOR =1
0422  2206- 85 00              STA ACCU
0423  2208- 60                 RTS
0424                   *
0425                   * P-CODE 0A: TLES       (TEST LESS)
0426                   *****************
0427                   *
0428  2209- 20 F9 20   TLES    JSR SUBA
0429  220C- A9 00              LDA =0
0430  220E- 06 01              ASL ACCU+1
0431  2210- 2A                 ROL A
0432  2211- 90 D4              BCC LOWB1       UNCOND.
0433                   *
0434                   * P-CODE 0B: TGRE       (TEST GREATER OR EQUAL)
0435                   *****************
0436                   *
0437  2213- 20 09 22   TGRE    JSR TLES
0438  2216- 4C 02 22           JMP TNEQ+3
0439                   *
0440                   * P-CODE 0C: TGRTS      (TEST GREATER)
0441                   ******************
0442                   *
0443  2219- 20 EE 26   TGRT    JSR EXST
0444  221C- 4C 09 22           JMP TLES
0445                   *
0446                   * P-CODE 0D: TLEE       (TEST LESS OR EQUAL)
0447                   *****************
0448                   *
0449  221F- 20 19 22   TLEE    JSR TGRT
0450  2222- 4C 02 22           JMP TNEQ+3

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 26/10/23   R65 ASSEMBLER  PAGE 11

0451                   *
0452                   * P-CODE 0E: ORAC       (BITWISE OR)
0453                   *****************
0454                   *
0455  2225- A0 7E      ORAC    LDY =126
0456  2227- B1 08              LDA (SP),Y
0457  2229- 05 00              ORA ACCU
0458  222B- 85 00              STA ACCU
0459  222D- C8                 INY
0460  222E- B1 08              LDA (SP),Y
0461  2230- 05 01              ORA ACCU+1
0462  2232- 85 01              STA ACCU+1
0463  2234- 4C ED 20           JMP DECS2
0464                   *
0465                   * P-CODE 0F: ANDA       (BITWISE AND)
0466                   *****************
0467                   *
0468  2237- A0 7E      ANDA    LDY =126
0469  2239- B1 08              LDA (SP),Y
0470  223B- 25 00              AND ACCU
0471  223D- 85 00              STA ACCU
0472  223F- C8                 INY
0473  2240- B1 08              LDA (SP),Y
0474  2242- 25 01              AND ACCU+1
0475  2244- 85 01              STA ACCU+1
0476  2246- 4C ED 20           JMP DECS2
0477                   *
0478                   * PCODE 10: EORA        (BITWISE OR)
0479                   ****************
0480                   *
0481  2249- A0 7E      EORA    LDY =126
0482  224B- B1 08              LDA (SP),Y
0483  224D- 45 00              EOR ACCU
0484  224F- 85 00              STA ACCU
0485  2251- C8                 INY
0486  2252- B1 08              LDA (SP),Y
0487  2254- 45 01              EOR ACCU+1
0488  2256- 85 01              STA ACCU+1
0489  2258- 4C ED 20           JMP DECS2
0490                   *
0491                   * P-CODE 11: NOTA       (BITWISE NOT)
0492                   *****************
0493                   *
0494  225B- A5 00      NOTA    LDA ACCU
0495  225D- 49 FF              EOR =$FF
0496  225F- 85 00              STA ACCU
0497  2261- A5 01              LDA ACCU+1
0498  2263- 49 FF              EOR =$FF
0499  2265- 85 01              STA ACCU+1
0500  2267- 60                 RTS

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 26/10/23   R65 ASSEMBLER  PAGE 12

0501                   *
0502                   * P-CODE 12: LEFT       (SHIFT LEFT N BYTES)
0503                   *****************
0504                   *
0505  2268- 20 CF 20           JSR NEGA
0506  226B- A5 01      LEFT    LDA ACCU+1
0507  226D- 30 12              BMI RIGH-3      ARGUMENT NEGATIVE
0508                   *
0509  226F- A6 00              LDX ACCU
0510  2271- F0 0B              BEQ LEFT2       TAKE ONLY LOW BYTE
0511  2273- 20 DE 22           JSR GETS2       GET SECOND NO FROM ST
0512  2276- 06 00      LEFT1   ASL ACCU
0513  2278- 26 01              ROL ACCU+1
0514  227A- CA                 DEX
0515  227B- D0 F9              BNE LEFT1
0516  227D- 60                 RTS
0517                   *
0518  227E- 4C DE 22   LEFT2   JMP GETS2
0519                   *
0520                   * P-CODE 13: RIGH       (SHIFT RIGHT N BYTES)
0521                   *****************
0522                   *
0523  2281- 20 CF 20           JSR NEGA
0524  2284- A5 01      RIGH    LDA ACCU+1
0525  2286- 30 E0              BMI LEFT-3
0526  2288- A6 00              LDX ACCU
0527  228A- F0 F2              BEQ LEFT2
0528  228C- 20 DE 22           JSR GETS2
0529  228F- 46 01      RIGH1   LSR ACCU+1
0530  2291- A9 00              LDA =0
0531  2293- 90 02              BCC *+4
0532  2295- A9 80              LDA =128
0533  2297- 46 00              LSR ACCU
0534  2299- 05 00              ORA ACCU
0535  229B- 85 00              STA ACCU
0536  229D- CA                 DEX
0537  229E- D0 EF              BNE RIGH1
0538  22A0- 60                 RTS
0539                   *
0540                   * P-CODE 14:INCA        (INCREMENT ACCU)
0541                   ****************
0542                   *
0543  22A1- E6 00      INCA    INC ACCU
0544  22A3- D0 02              BNE *+4
0545  22A5- E6 01              INC ACCU+1
0546  22A7- 60                 RTS
0547                   *
0548                   * P-CODE 15: DECA       (DECREMENT ACCU)
0549                   *****************
0550                   *

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 26/10/23   R65 ASSEMBLER  PAGE 13

0551  22A8- A5 00      DECA    LDA ACCU
0552  22AA- D0 02              BNE *+4
0553  22AC- C6 01              DEC ACCU+1
0554  22AE- C6 00              DEC ACCU
0555  22B0- 60                 RTS
0556                   *
0557                   * P-CODE 16: COPY       (COPY ACCU0
0558                   *****************
0559                   *
0560  22B1- 20 C0 22   COPY    JSR INCS2       INCREMENT STACK
0561  22B4- A0 7E              LDY =126
0562  22B6- A5 00              LDA ACCU
0563  22B8- 91 08              STA (SP),Y
0564  22BA- C8                 INY
0565  22BB- A5 01              LDA ACCU+1
0566  22BD- 91 08              STA (SP),Y
0567  22BF- 60                 RTS
0568                   *
0569  22C0- A9 02      INCS2   LDA =2
0570  22C2- 18                 CLC
0571  22C3- 65 08              ADC SP
0572  22C5- 85 08              STA SP
0573  22C7- 90 02              BCC *+4
0574  22C9- E6 09              INC SP+1
0575  22CB- C5 0E      INCS2A  CMP ENDSTK      TEST STACK OVERFLOW
0576  22CD- A5 09              LDA SP+1
0577  22CF- E5 0F              SBC ENDSTK+1
0578  22D1- B0 06              BCS INCS2B
0579  22D3- A9 05              LDA =5          LET EMULATOR KNOW THAT
0580  22D5- 8D 30 14           STA EMUCOM      SP HAS BEEN INCREASED
0581  22D8- 60                 RTS
0582                   *
0583  22D9- A0 82      INCS2B  LDY =$82        PASCAL RUN TIME ERROR
0584  22DB- 4C FD 28           JMP PERROR      STACK OVERFLOW
0585                   *
0586                   * GETS2
0587                   *
0588  22DE- A0 7E      GETS2   LDY =126
0589  22E0- B1 08              LDA (SP),Y
0590  22E2- 85 00              STA ACCU
0591  22E4- C8                 INY
0592  22E5- B1 08              LDA (SP),Y
0593  22E7- 85 01              STA ACCU+1
0594  22E9- 4C ED 20           JMP DECS2
0595                   *
0596                   * P-CODE 17: PEEK
0597                   *****************
0598                   *
0599  22EC- A0 00      PEEK    LDY =0
0600  22EE- B1 00              LDA (ACCU),Y

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 26/10/23   R65 ASSEMBLER  PAGE 14

0601  22F0- 85 00              STA ACCU
0602  22F2- 84 01              STY ACCU+1
0603  22F4- 60                 RTS
0604                   *
0605                   * P-CODE 18: POKE
0606                   *****************
0607                   *
0608  22F5- A6 00      POKE    LDX ACCU
0609  22F7- 20 DE 22           JSR GETS2
0610  22FA- A0 00              LDY =0
0611  22FC- 8A                 TXA
0612  22FD- 91 00              STA (ACCU),Y
0613  22FF- 4C DE 22          JMP GETS2
0614                   *
0615                   * P-CODE 19: CALA
0616                   *****************
0617                   *
0618  2302- 20 08 23   CALA    JSR CALA1
0619  2305- 4C DE 22           JMP GETS2
0620                   *
0621  2308- 6C 00 00   CALA1   JMP (ACCU)
0622                   *
0623                   * P-CODE 1A: RLIN
0624                   *****************
0625                   *
0626  230B- 20 06 E0   RLIN    JSR GETLIN
0627  230E- A2 00              LDX =0
0628  2310- B1 E9              LDA (VIDPNT),Y
0629  2312- 29 7F              AND =$7F
0630  2314- 95 24              STA LINBUF,X
0631  2316- E8                 INX
0632  2317- C8                 INY
0633  2318- CC 8A 17           CPY NUMCHR
0634  231B- 90 F3              BCC *-11
0635  231D- F0 F1              BEQ *-13
0636  231F- CA                 DEX
0637  2320- 30 06              BMI *+8
0638  2322- B5 24              LDA LINBUF,X
0639  2324- C9 20              CMP =$20
0640  2326- F0 F7              BEQ *-7
0641  2328- E8                 INX
0642  2329- 86 16              STX ENDBUF
0643  232B- A9 00              LDA =0
0644  232D- 85 15              STA BUFFPN
0645  232F- 20 27 E0           JSR PRTINF
0646  2332- 0D 8A              BYT $D,$8A
0647  2334- 60                 RTS
0648                   *
0649                   * P-CODE 1B: GETC
0650                   *****************

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 26/10/23   R65 ASSEMBLER  PAGE 15

0651                   *
0652  2335- 20 B1 22   GETC    JSR COPY
0653  2338- 20 92 28           JSR GETCHR0
0654  233B- 85 00      GETC1   STA ACCU
0655  233D- A9 00              LDA =0
0656  233F- 85 01              STA ACCU+1
0657  2341- 60                 RTS
0658                   *
0659                   * P-CODE 1C: GETN
0660                   *****************
0661                   *
0662  2342- 20 B1 22   GETN    JSR COPY
0663  2345- A9 00              LDA =0
0664  2347- 85 00              STA ACCU
0665  2349- 85 01              STA ACCU+1
0666  234B- 85 10              STA SIGN
0667  234D- 20 92 28   GETN0   JSR GETCHR0
0668  2350- C9 20              CMP =' '
0669  2352- F0 F9              BEQ GETN0
0670  2354- C9 2D              CMP ='-'
0671  2356- D0 05              BNE GETN1
0672                   *
0673  2358- C6 10              DEC SIGN
0674  235A- 4C 61 23           JMP GETN2
0675                   *
0676  235D- C9 2B      GETN1    CMP ='+'
0677  235F- D0 03              BNE GETN2+3
0678                   *
0679  2361- 20 92 28   GETN2   JSR GETCHR0
0680  2364- C9 30              CMP ='0'
0681  2366- 90 2F              BCC GETN3
0682  2368- C9 3A              CMP ='9'+1
0683  236A- B0 2B              BCS GETN3
0684  236C- 38                 SEC
0685  236D- E9 30              SBC ='0'
0686  236F- 48                 PHA
0687  2370- 06 00              ASL ACCU
0688  2372- 26 01              ROL ACCU+1
0689  2374- A6 00              LDX ACCU
0690  2376- A4 01              LDY ACCU+1
0691  2378- 06 00              ASL ACCU
0692  237A- 26 01              ROL ACCU+1
0693  237C- 06 00              ASL ACCU
0694  237E- 26 01              ROL ACCU+1
0695  2380- 18                 CLC
0696  2381- 8A                 TXA
0697  2382- 65 00              ADC ACCU
0698  2384- 85 00              STA ACCU
0699  2386- 98                 TYA
0700  2387- 65 01              ADC ACCU+1

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 26/10/23   R65 ASSEMBLER  PAGE 16

0701  2389- 85 01              STA ACCU+1
0702  238B- 68                 PLA
0703  238C- 18                 CLC
0704  238D- 65 00              ADC ACCU
0705  238F- 85 00              STA ACCU
0706  2391- 90 CE              BCC GETN2
0707  2393- E6 01              INC ACCU+1
0708  2395- B0 CA              BCS GETN2
0709                   *
0710  2397- A5 10      GETN3   LDA SIGN
0711  2399- F0 03              BEQ *+5
0712  239B- 4C CF 20           JMP NEGA
0713  239E- 60                 RTS
0714                   *
0715                   * P-CODE 1D: PRTC
0716                   *****************
0717                   *
0718  239F- A5 00      PRTC    LDA ACCU
0719  23A1- 20 C2 28           JSR PRTCHR0
0720  23A4- 4C DE 22           JMP GETS2
0721                   *
0722                   * P-CODE 1E: PRTN
0723                   *****************
0724                   *
0725  23A7- A5 01      PRTN    LDA ACCU+1
0726  23A9- 10 08              BPL PRTN1
0727  23AB- 20 CF 20           JSR NEGA
0728  23AE- A9 2D              LDA ='-'
0729  23B0- 20 C2 28           JSR PRTCHR0
0730                   *
0731  23B3- A5 00      PRTN1   LDA ACCU
0732  23B5- A6 01              LDX ACCU+1
0733  23B7- 85 21              STA ARG2
0734  23B9- 86 22              STX ARG2+1
0735  23BB- A9 1F              LDA =$1F
0736  23BD- 85 1D              STA ARG3
0737  23BF- 85 1F              STA ARG3+2
0738  23C1- A9 2A              LDA =$2A
0739  23C3- 85 1E              STA ARG3+1
0740  23C5- 85 20              STA ARG3+3
0741  23C7- A6 21              LDX ARG2
0742  23C9- A4 22              LDY ARG2+1
0743  23CB- 38                 SEC
0744  23CC- E6 1D      PRTN2   INC ARG3
0745  23CE- 8A                 TXA
0746  23CF- E9 10              SBC =$10
0747  23D1- AA                 TAX
0748  23D2- 98                 TYA
0749  23D3- E9 27              SBC =$27
0750  23D5- A8                 TAY

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 26/10/23   R65 ASSEMBLER  PAGE 17

0751  23D6- B0 F4              BCS PRTN2
0752  23D8- C6 1E      PRTN3   DEC ARG3+1
0753  23DA- 8A                 TXA
0754  23DB- 69 E8              ADC =$E8
0755  23DD- AA                 TAX
0756  23DE- 98                 TYA
0757  23DF- 69 03              ADC =$03
0758  23E1- A8                 TAY
0759  23E2- 90 F4              BCC PRTN3
0760  23E4- 8A                 TXA
0761  23E5- 38         PRTN4   SEC
0762  23E6- E6 1F      PRTN5   INC ARG3+2
0763  23E8- E9 64              SBC =$64
0764  23EA- B0 FA              BCS PRTN5
0765  23EC- 88                 DEY
0766  23ED- 10 F6              BPL PRTN4
0767  23EF- C6 20      PRTN6   DEC ARG3+3
0768  23F1- 69 0A              ADC =$A
0769  23F3- 90 FA              BCC PRTN6
0770  23F5- 09 30              ORA =$30
0771  23F7- 85 21              STA ARG2
0772  23F9- A9 20              LDA =$20
0773  23FB- 85 22              STA ARG2+1
0774  23FD- A2 FB              LDX =$FB
0775  23FF- 86 10     PRTN7   STX SIGN
0776  2401- B5 22              LDA ARG2+1,X
0777  2403- 05 22              ORA ARG2+1
0778  2405- C9 20              CMP =$20
0779  2407- F0 09              BEQ PRTN8
0780  2409- A0 30              LDY =$30
0781  240B- 84 22              STY ARG2+1
0782  240D- 05 22              ORA ARG2+1
0783  240F- 20 C2 28           JSR PRTCHR0
0784  2412- A6 10      PRTN8   LDX SIGN
0785  2414- E8                 INX
0786  2415- D0 E8              BNE PRTN7
0787  2417- 4C DE 22           JMP GETS2
0788                   *
0789                   * P-CODE 1F: PRTS
0790                   *****************
0791                   *
0792  241A- 06 00      PRTS    ASL ACCU
0793  241C- 26 01              ROL ACCU+1
0794  241E- A5 08              LDA SP
0795  2420- 38                 SEC
0796  2421- E5 00              SBC ACCU
0797  2423- 85 00              STA ACCU
0798  2425- 48                 PHA
0799  2426- A5 09              LDA SP+1
0800  2428- E5 01              SBC ACCU+1

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 26/10/23   R65 ASSEMBLER  PAGE 18

0801  242A- 85 01              STA ACCU+1
0802  242C- 48                 PHA
0803  242D- A0 80      OUTST1  LDY =128
0804  242F- B1 00              LDA (ACCU),Y
0805  2431- 20 C2 28           JSR PRTCHR0
0806  2434- A5 00              LDA ACCU
0807  2436- 18                 CLC
0808  2437- 69 02              ADC =2
0809  2439- 85 00              STA ACCU
0810  243B- 90 02              BCC *+4
0811  243D- E6 01              INC ACCU+1
0812  243F- C5 08              CMP SP
0813  2441- A5 01              LDA ACCU+1
0814  2443- E5 09              SBC SP+1
0815  2445- 90 E6              BCC OUTST1
0816  2447- 68                 PLA
0817  2448- 85 09              STA SP+1
0818  244A- 68                 PLA
0819  244B- 85 08              STA SP
0820  244D- 4C DE 22           JMP GETS2
0821                   *
0822                   * P-CODE 20: LITB
0823                   *****************
0824                   *
0825  2450- 20 B1 22   LITB    JSR COPY
0826  2453- 20 9A 24           JSR FETCH
0827  2456- 85 00              STA ACCU
0828  2458- A9 00              LDA =0
0829  245A- 85 01              STA ACCU+1
0830  245C- 60                 RTS
0831                   *
0832                   * P-CODE 21: INCB
0833                   *****************
0834                   *
0835  245D- A0 80      INCB    LDY =128        SAVE CURRENT ACCU
0836  245F- A5 00              LDA ACCU
0837  2461- 91 08              STA (SP),Y
0838  2463- C8                 INY
0839  2464- A5 01              LDA ACCU+1
0840  2466- 91 08              STA (SP),Y
0841  2468- 20 9A 24           JSR FETCH
0842  246B- A2 00              LDX =0
0843  246D- A8                 TAY             TEST A
0844  246E- 10 01              BPL *+3
0845  2470- CA                 DEX
0846  2471- 18                 CLC
0847  2472- 65 08              ADC SP
0848  2474- 85 08              STA SP
0849  2476- 8A                 TXA
0850  2477- 65 09              ADC SP+1

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 26/10/23   R65 ASSEMBLER  PAGE 19

0851  2479- 85 09              STA SP+1
0852  247B- A5 08      INCB1   LDA SP
0853  247D- 20 CB 22           JSR INCS2A      TEST STACK OVERFLOW
0854  2480- A0 80              LDY =128        AND GET NEW ACCU
0855  2482- B1 08              LDA (SP),Y
0856  2484- 85 00              STA ACCU
0857  2486- C8                 INY
0858  2487- B1 08              LDA (SP),Y
0859  2489- 85 01              STA ACCU+1
0860  248B- 60                 RTS
0861                   *
0862                   * P-CODE 22: LITW
0863                   *****************
0864                   *
0865  248C- 20 B1 22   LITW    JSR COPY
0866  248F- 20 9A 24           JSR FETCH
0867  2492- 85 00              STA ACCU
0868  2494- 20 9A 24           JSR FETCH
0869  2497- 85 01              STA ACCU+1
0870  2499- 60                 RTS
0871                   *
0872                   * FETCH
0873                   *
0874  249A- A0 00      FETCH   LDY =0
0875  249C- B1 0A              LDA (PC),Y
0876  249E- E6 0A              INC PC
0877  24A0- D0 02              BNE *+4
0878  24A2- E6 0B              INC PC+1
0879  24A4- 60                 RTS
0880                   *
0881                   * P-CODE 23: INCW
0882                   *****************
0883                   *
0884  24A5- A0 80      INCW    LDY =128        SAVE CURRENT ACCU
0885  24A7- A5 00              LDA ACCU
0886  24A9- 91 08              STA (SP),Y
0887  24AB- C8                 INY
0888  24AC- A5 01              LDA ACCU+1
0889  24AE- 91 08              STA (SP),Y
0890  24B0- 20 9A 24           JSR FETCH
0891  24B3- 18                 CLC
0892  24B4- 65 08              ADC SP
0893  24B6- 85 08              STA SP
0894  24B8- 20 9A 24           JSR FETCH
0895  24BB- 65 09              ADC SP+1
0896  24BD- 85 09              STA SP+1
0897  24BF- 4C 7B 24           JMP INCB1
0898                   *
0899                   * P-CODE 24: JUMP
0900                   *****************

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 26/10/23   R65 ASSEMBLER  PAGE 20

0901                   *
0902  24C2- A0 00      JUMP    LDY =0
0903  24C4- B1 0A              LDA (PC),Y
0904  24C6- 18                 CLC
0905  24C7- 65 0A              ADC PC
0906  24C9- AA                 TAX
0907  24CA- C8                 INY
0908  24CB- B1 0A              LDA (PC),Y
0909  24CD- 65 0B              ADC PC+1
0910  24CF- 86 0A              STX PC
0911  24D1- 85 0B              STA PC+1
0912  24D3- 60                 RTS
0913                   *
0914                   * P-CODE 25: JMPZ
0915                   *****************
0916                   *
0917  24D4- 46 00      JMPZ    LSR ACCU
0918  24D6- 08                 PHP
0919  24D7- 20 DE 22           JSR GETS2
0920  24DA- 28                 PLP
0921  24DB- 90 E5              BCC JUMP
0922                   *
0923  24DD- A5 0A              LDA PC
0924  24DF- 18                 CLC
0925  24E0- 69 02              ADC =2
0926  24E2- 85 0A              STA PC
0927  24E4- 90 02              BCC *+4
0928  24E6- E6 0B              INC PC+1
0929  24E8- 60                 RTS
0930                   *
0931                   * P-CODE 26: JMPO
0932                   *****************
0933                   *
0934  24E9- A5 00      JMPO    LDA ACCU
0935  24EB- 49 01              EOR =1
0936  24ED- 85 00              STA ACCU
0937  24EF- 4C D4 24           JMP JMPZ
0938                   *
0939                   * P-CODE 27: LOAD
0940                   *****************
0941                   *
0942  24F2- 20 B1 22   LOAD    JSR COPY
0943  24F5- 20 9A 24           JSR FETCH
0944  24F8- AA                 TAX             LEVEL DIFFERENCE
0945  24F9- 20 9A 24           JSR FETCH
0946  24FC- 85 1B              STA ARG1
0947  24FE- 20 9A 24          JSR FETCH
0948  2501- 85 1C      LOAD1   STA ARG1+1
0949  2503- 20 2F 25           JSR FBASE3
0950  2506- A0 80      LOAD2   LDY =128

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 26/10/23   R65 ASSEMBLER  PAGE 21

0951  2508- B1 19              LDA (ABASE),Y
0952  250A- 85 00              STA ACCU
0953  250C- C8                 INY
0954  250D- B1 19              LDA (ABASE),Y
0955  250F- 85 01              STA ACCU+1
0956  2511- 60                 RTS
0957                   *
0958                   * FBASE
0959                   *
0960  2512- A5 17      FBASE   LDA BASE
0961  2514- A4 18              LDY BASE+1
0962  2516- 85 19              STA ABASE
0963  2518- 84 1A              STY ABASE+1
0964  251A- E0 00              CPX =0
0965  251C- F0 10              BEQ FBASE2
0966                   *
0967  251E- A0 80      FBASE1  LDY =128
0968  2520- B1 19              LDA (ABASE),Y
0969  2522- 48                 PHA
0970  2523- C8                 INY
0971  2524- B1 19              LDA (ABASE),Y
0972  2526- 85 1A              STA ABASE+1
0973  2528- 68                 PLA
0974  2529- 85 19              STA ABASE
0975  252B- CA                 DEX
0976  252C- D0 F0              BNE FBASE1
0977  252E- 60         FBASE2  RTS
0978                   *
0979  252F- 20 12 25   FBASE3  JSR FBASE
0980  2532- 18                 CLC
0981  2533- A5 1B              LDA ARG1
0982  2535- 65 19              ADC ABASE
0983  2537- 85 19              STA ABASE
0984  2539- A5 1C              LDA ARG1+1
0985  253B- 65 1A              ADC ABASE+1
0986  253D- 85 1A              STA ABASE+1
0987  253F- 60                 RTS
0988                   *
0989                   * P-CODE 28: LODX
0990                   *****************
0991                   *
0992  2540- 20 9A 24   LODX    JSR FETCH
0993  2543- AA                 TAX
0994  2544- 20 9A 24           JSR FETCH
0995  2547- 06 00              ASL ACCU
0996  2549- 26 01              ROL ACCU+1
0997  254B- 18                 CLC
0998  254C- 65 00              ADC ACCU
0999  254E- 85 1B              STA ARG1
1000  2550- 08                 PHP

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 26/10/23   R65 ASSEMBLER  PAGE 22

1001  2551- 20 9A 24           JSR FETCH
1002  2554- 28                 PLP
1003  2555- 65 01              ADC ACCU+1
1004  2557- 4C 01 25           JMP LOAD1
1005                   *
1006                   * P-CODE 29: STOR
1007                   *****************
1008                   *
1009  255A- 20 9A 24   STOR    JSR FETCH
1010  255D- AA                 TAX
1011  255E- 20 9A 24           JSR FETCH
1012  2561- 85 1B              STA ARG1
1013  2563- 20 9A 24           JSR FETCH
1014  2566- 85 1C              STA ARG1+1
1015  2568- 20 2F 25   STOR1   JSR FBASE3
1016  256B- A0 80      STOR2   LDY =128
1017  256D- A5 00              LDA ACCU
1018  256F- 91 19              STA (ABASE),Y
1019  2571- C8                 INY
1020  2572- A5 01              LDA ACCU+1
1021  2574- 91 19              STA (ABASE),Y
1022  2576- 4C DE 22           JMP GETS2
1023                   *
1024                   * P-CODE 2A: STOX
1025                   *****************
1026                   *
1027  2579- 20 9A 24   STOX    JSR FETCH
1028  257C- AA                 TAX
1029  257D- A0 7E              LDY =126
1030  257F- B1 08              LDA (SP),Y
1031  2581- 0A                 ASL A
1032  2582- 85 1B              STA ARG1
1033  2584- C8                 INY
1034  2585- B1 08              LDA (SP),Y
1035  2587- 2A                 ROL A
1036  2588- 85 1C              STA ARG1+1
1037  258A- 20 9A 24           JSR FETCH
1038  258D- 18                 CLC
1039  258E- 65 1B              ADC ARG1
1040  2590- 85 1B              STA ARG1
1041  2592- 20 9A 24           JSR FETCH
1042  2595- 65 1C              ADC ARG1+1
1043  2597- 85 1C              STA ARG1+1
1044  2599- 20 ED 20           JSR DECS2
1045  259C- 4C 68 25           JMP STOR1
1046                   *
1047                   * P-CODE 2B: CALL
1048                   *****************
1049                   *
1050  259F- 20 9A 24   CALL    JSR FETCH

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 26/10/23   R65 ASSEMBLER  PAGE 23

1051  25A2- AA                 TAX
1052  25A3- 20 12 25           JSR FBASE
1053  25A6- A0 82              LDY =130
1054  25A8- A5 19              LDA ABASE
1055  25AA- 91 08              STA (SP),Y
1056  25AC- C8                 INY
1057  25AD- A5 1A              LDA ABASE+1
1058  25AF- 91 08              STA (SP),Y
1059  25B1- C8                 INY
1060  25B2- A5 17              LDA BASE
1061  25B4- 91 08              STA (SP),Y
1062  25B6- C8                 INY
1063  25B7- A5 18              LDA BASE+1
1064  25B9- 91 08              STA (SP),Y
1065  25BB- C8                 INY
1066  25BC- A5 0A              LDA PC
1067  25BE- 91 08              STA (SP),Y
1068  25C0- C8                 INY
1069  25C1- A5 0B              LDA PC+1
1070  25C3- 91 08              STA (SP),Y
1071  25C5- A5 08              LDA SP
1072  25C7- 18                 CLC
1073  25C8- 69 02              ADC =2
1074  25CA- 85 17              STA BASE
1075  25CC- A5 09              LDA SP+1
1076  25CE- 69 00              ADC =0
1077  25D0- 85 18              STA BASE+1
1078  25D2- 4C C2 24           JMP JUMP
1079                   *
1080                   * PCODE 2C: SDEV
1081                   ****************
1082                   *
1083  25D5- A5 00      SDEV    LDA ACCU
1084  25D7- 85 0D              STA DEVICE
1085  25D9- 4C DE 22           JMP GETS2
1086                   *
1087                   * PCODE 2D: RDEV
1088                   ****************
1089                   *
1090  25DC- A9 00      RDEV    LDA =0
1091  25DE- 85 0D              STA DEVICE
1092  25E0- 60                 RTS
1093                   *
1094                   * PCODE 2E: FNAM
1095                   ****************
1096                   *
1097  25E1- 20 27 E0   FNAM    JSR PRTINF
1098  25E4- 20 3D A0           BYT ' = '+128
1099  25E7- 20 06 E0           JSR GETLIN
1100  25EA- 20 15 F8           JSR GETNAM

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 26/10/23   R65 ASSEMBLER  PAGE 24

1101  25ED- 20 0D 20           JSR HARGUM
1102  25F0- 85 DC              STA FILDRV
1103  25F2- 20 0D 20           JSR HARGUM
1104  25F5- 8D 13 03           STA FILLOC
1105  25F8- 20 27 E0           JSR PRTINF
1106  25FB- 0D 8A              BYT $D,$8A
1107  25FD- 60                 RTS
1108                   *
1109                   * P-CODE 2F: OPNR
1110                   *****************
1111                   *
1112                   * NO AUTOMATIC ERROR TESTING
1113                   *
1114  25FE- A9 00     OPNR    LDA =0
1115  2600- 85 DA              STA FILFLG
1116  2602- 20 B1 22           JSR COPY
1117  2605- 20 0F F0           JSR OPEN
1118  2608- C8                 INY
1119  2609- C8                 INY
1120  260A- 84 00              STY ACCU
1121  260C- 85 01              STA ACCU+1
1122  260E- 60                 RTS
1123                   *
1124                   * P-CODE 30: OPNW
1125                   *****************
1126                   *
1127  260F- A9 20      OPNW    LDA =$20
1128  2611- 4C 00 26           JMP OPNR+2
1129                   *
1130                   * P-CODE 31: CLOS
1131                   *****************
1132                   *
1133                   * NO AUTOMATIC ERROR CHECKING
1134                   *
1135  2614- A6 00      CLOS    LDX ACCU
1136  2616- CA                 DEX
1137  2617- CA                 DEX
1138  2618- 20 3B 2D           JSR CLOSRA
1139  261B- 4C DE 22           JMP GETS2
1140                   *
1141                   * P-CODE 32: PRTI
1142                   *****************
1143                   *
1144  261E- 20 9A 24   PRTI    JSR FETCH
1145  2621- 48                 PHA
1146  2622- 29 7F              AND =$7F
1147  2624- 20 C2 28           JSR PRTCHR0
1148  2627- 68                 PLA
1149  2628- 10 F4              BPL PRTI
1150  262A- 60                 RTS

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 26/10/23   R65 ASSEMBLER  PAGE 25

1151                   *
1152                   * P-CODE 33: GHGH       (GET HIGH)
1153                   *****************
1154                   *
1155  262B- A5 01      GHGH    LDA ACCU+1
1156  262D- 85 00              STA ACCU
1157                   *
1158                   * P-CODE 34: GLOW
1159                   *****************
1160                   *
1161  262F- A9 00      GLOW    LDA =0
1162  2631- 85 01              STA ACCU+1
1163  2633- 60                 RTS
1164                   *
1165                   * P-CODE 35:PHGH
1166                   ****************
1167                   *
1168  2634- A0 7E      PHGH    LDY =126
1169  2636- B1 08              LDA (SP),Y
1170  2638- 85 01              STA ACCU+1
1171  263A- 4C ED 20           JMP DECS2
1172                   *
1173                   * P-CODE 36: PLOW
1174                   *****************
1175                   *
1176  263D- A0 7E      PLOW    LDY =126
1177  263F- B1 08              LDA (SP),Y
1178  2641- 85 00              STA ACCU
1179  2643- 4C ED 20           JMP DECS2
1180                   *
1181                   * P-CODE 37: GSEC
1182                   *****************
1183                   * DEVICE HAS TO BE SET  ########
1184                   *
1185  2646- 20 58 26   GSEC    JSR PREPSEC
1186  2649- 4C 84 20           JMP READ
1187  264C- 4C 90 20           JMP ENDDO
1188                   *
1189                   * P-CODE 38: PSEC
1190                   *****************
1191                   * DEVICE HAS TO BE SET  ########
1192                   *
1193  264F- 20 58 26   PSEC    JSR PREPSEC
1194  2652- 20 87 20           JSR WRITE
1195  2655- 4C 90 20           JMP ENDDO
1196                   *
1197  2658- A5 00      PREPSEC LDA ACCU
1198  265A- A6 01              LDX ACCU+1
1199  265C- 85 E0              STA DATA
1200  265E- 86 E1              STX DATA+1

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 26/10/23   R65 ASSEMBLER  PAGE 26

1201  2660- A0 7E              LDY =126
1202  2662- B1 08              LDA (SP),Y
1203  2664- 85 DE              STA SECTOR
1204  2666- A0 7C              LDY =124
1205  2668- B1 08              LDA (SP),Y
1206  266A- 85 DD              STA TRACK
1207  266C- A5 08              LDA SP
1208  266E- 38                 SEC
1209  266F- E9 04              SBC =4
1210  2671- 20 F2 20           JSR DECS2+5
1211  2674- 20 DE 22           JSR GETS2
1212  2677- 4C 8A 20           JMP PREPDO
1213                   *
1214                   * P-CODE 39: NBYT       LOAD N BYTES IMMEDIATELY
1215                   *****************
1216                   *
1217  267A- 20 9A 24   NBYT    JSR FETCH
1218  267D- AA                 TAX             BYTE COUNTER
1219  267E- 20 B1 22   NBYT1   JSR COPY
1220  2681- 20 9A 24           JSR FETCH
1221  2684- 84 01              STY ACCU+1      Y=0
1222  2686- 85 00              STA ACCU
1223  2688- CA                 DEX
1224  2689- D0 F3              BNE NBYT1
1225  268B- 60                 RTS
1226                   *
1227                   * P-CODE 3A: NWRD       LOAD N WORD IMMEDIATELY
1228                   *****************
1229                   *
1230  268C- 20 9A 24   NWRD    JSR FETCH
1231  268F- AA                 TAX             WORD COUNTER
1232  2690- 20 B1 22   NWRD1   JSR COPY
1233  2693- 20 9A 24           JSR FETCH
1234  2696- 85 00              STA ACCU
1235  2698- 20 9A 24           JSR FETCH
1236  269B- 85 01              STA ACCU+1
1237  269D- CA                 DEX
1238  269E- D0 F0              BNE NWRD1
1239  26A0- 60                 RTS
1240                   *
1241                   * P-CODE 3B: LODN       LOAD N MORE WORDS
1242                   *****************
1243                   *
1244  26A1- 20 9A 24   LODN    JSR FETCH
1245  26A4- AA                 TAX
1246  26A5- 20 B1 22   LODN1   JSR COPY
1247  26A8- A5 19              LDA ABASE
1248  26AA- 18                 CLC
1249  26AB- 69 02              ADC =2
1250  26AD- 85 19              STA ABASE

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 26/10/23   R65 ASSEMBLER  PAGE 27

1251  26AF- 90 02              BCC *+4
1252  26B1- E6 1A              INC ABASE+1
1253  26B3- 20 06 25           JSR LOAD2
1254  26B6- CA                 DEX
1255  26B7- D0 EC              BNE LODN1
1256  26B9- 60                 RTS
1257                   *
1258                   * P-CODE 3C: STON       STORE N MORE WORDS
1259                   *****************
1260                   *
1261  26BA- 20 9A 24   STON    JSR FETCH
1262  26BD- AA                 TAX
1263  26BE- A5 19      STON1   LDA ABASE
1264  26C0- 38                 SEC
1265  26C1- E9 02              SBC =2
1266  26C3- 85 19              STA ABASE
1267  26C5- B0 02              BCS *+4
1268  26C7- C6 1A              DEC ABASE+1
1269  26C9- 20 6B 25           JSR STOR2
1270  26CC- CA                 DEX
1271  26CD- D0 EF              BNE STON1
1272  26CF- 60                 RTS
1273                   *
1274                   * P-CODE 3D: LODI       LOAD INDIRECT
1275                   *****************
1276                   *
1277  26D0- 20 D6 26   LODI    JSR GETACC
1278  26D3- 4C 06 25           JMP LOAD2
1279                   *
1280  26D6- A5 00      GETACC  LDA ACCU
1281  26D8- A6 01              LDX ACCU+1
1282  26DA- 38                 SEC
1283  26DB- E9 80              SBC =128
1284  26DD- B0 01              BCS *+3
1285  26DF- CA                 DEX
1286  26E0- 85 19              STA ABASE
1287  26E2- 86 1A              STX ABASE+1
1288  26E4- 60                 RTS
1289                   *
1290                   * P-CODE 3E: STOI       STORE INDIRECT
1291                   *****************
1292                   *
1293  26E5- 20 D6 26   STOI    JSR GETACC
1294  26E8- 20 DE 22           JSR GETS2
1295  26EB- 4C 6B 25           JMP STOR2
1296                   *
1297                   * P-CODE 3F: EXST       EXCHANGE STACK
1298                   *****************
1299                   *
1300  26EE- A0 7E      EXST    LDY =126

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 26/10/23   R65 ASSEMBLER  PAGE 28

1301  26F0- B1 08              LDA (SP),Y
1302  26F2- AA                 TAX
1303  26F3- A5 00              LDA ACCU
1304  26F5- 91 08              STA (SP),Y
1305  26F7- 86 00              STX ACCU
1306  26F9- C8                 INY
1307  26FA- B1 08              LDA (SP),Y
1308  26FC- AA                 TAX
1309  26FD- A5 01              LDA ACCU+1
1310  26FF- 91 08             STA (SP),Y
1311  2701- 86 01              STX ACCU+1
1312  2703- 60                 RTS
1313                   *
1314                   * P-CODE 40 TIND        TEST INDEX
1315                   ****************
1316                   *
1317  2704- 20 9A 24   TIND    JSR FETCH       LOWLIM-1
1318  2707- AA                 TAX
1319  2708- 20 9A 24           JSR FETCH
1320  270B- E4 00              CPX ACCU
1321  270D- E5 01              SBC ACCU+1
1322  270F- 70 0E              BVS TINDERR
1323                   *
1324  2711- 20 9A 24           JSR FETCH       HIGHLIM
1325  2714- AA                 TAX
1326  2715- 20 9A 24           JSR FETCH
1327  2718- E4 00              CPX ACCU
1328  271A- E5 01              SBC ACCU+1
1329  271C- 90 01              BCC TINDERR
1330  271E- 60                 RTS
1331                   *
1332  271F- A2 83      TINDERR LDX =$83        RUNTIME ERROR
1333  2721- 4C FD 28           JMP PERROR      INDEX OUT OF BOUNDS
1334                   *
1335                   * P-CODE 41: RUNP       RUN PROGRAM
1336                   *****************
1337                   *
1338  2724- A0 82      RUNP    LDY =130
1339  2726- A5 00              LDA ACCU        SAVE ACCU
1340  2728- A6 01              LDX ACCU+1
1341  272A- 20 56 27           JSR SAVE
1342  272D- A5 17              LDA BASE        SAVE BASE
1343  272F- A6 18              LDX BASE+1
1344  2731- 20 56 27           JSR SAVE
1345  2734- A5 0A              LDA PC          SAVE PC
1346  2736- A6 0B              LDX PC+1
1347  2738- 20 56 27           JSR SAVE
1348  273B- A5 11              LDA STPROG      SAVE STPROG
1349  273D- A6 12              LDX STPROG+1
1350  273F- 20 56 27           JSR SAVE

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 26/10/23   R65 ASSEMBLER  PAGE 29

1351  2742- A5 13              LDA EOPROG      SAVE EOPROG
1352  2744- A6 14              LDX EOPROG+1
1353  2746- 20 56 27           JSR SAVE
1354  2749- A5 08              LDA SP          GET SP
1355  274B- A6 09              LDX SP+1
1356  274D- 18                 CLC
1357  274E- 69 8C              ADC =140
1358  2750- 90 01              BCC *+3
1359  2752- E8                 INX             COMPUTE NEW STPROG
1360  2753- 4C 80 29           JMP EXEC3
1361                   *
1362                   *
1363  2756- 91 08      SAVE    STA (SP),Y
1364  2758- C8                 INY
1365  2759- 8A                 TXA
1366  275A- 91 08              STA (SP),Y
1367  275C- C8                 INY
1368  275D- 60                 RTS
1369                   *
1370                   *
1371  275E- 88         GETBACK DEY
1372  275F- B1 08              LDA (SP),Y
1373  2761- AA                 TAX
1374  2762- 88                 DEY
1375  2763- B1 08              LDA (SP),Y
1376  2765- 60                 RTS
1377                   *
1378                   *
1379                   * P-CODE 42: ADDF
1380                   *****************
1381                   *
1382  2766- 20 83 27   ADDF    JSR GETFLP2
1383  2769- 20 2B 2B           JSR FADD
1384                   *
1385  276C- A5 08      PUTFLP0 LDA SP          DECREMENT SP BY 4
1386  276E- 38                 SEC
1387  276F- E9 04              SBC =4
1388  2771- 85 08              STA SP
1389  2773- B0 02              BCS PUTFLP
1390  2775- C6 09              DEC SP+1
1391  2777- A5 02      PUTFLP  LDA M1+1        AND SAVE HALF OF NUMBER
1392  2779- A0 7E              LDY =126
1393  277B- 91 08              STA (SP),Y
1394  277D- C8                 INY
1395  277E- A5 03              LDA M1+2
1396  2780- 91 08              STA (SP),Y
1397  2782- 60                 RTS
1398                   *
1399  2783- A0 7A      GETFLP2 LDY =122        GET SECOND NUMBER
1400  2785- B1 08              LDA (SP),Y

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 26/10/23   R65 ASSEMBLER  PAGE 30

1401  2787- 85 1D              STA M2+1
1402  2789- C8                 INY
1403  278A- B1 08              LDA (SP),Y
1404  278C- 85 1E              STA M2+2
1405  278E- C8                 INY
1406  278F- B1 08              LDA (SP),Y
1407  2791- 85 1B              STA X2
1408  2793- C8                 INY
1409  2794- B1 08              LDA (SP),Y
1410  2796- 85 1C              STA M2
1411  2798- A0 7E      GETFLP  LDY =126        AND HALF OF FIRST
1412  279A- B1 08              LDA (SP),Y
1413  279C- 85 02              STA M1+1
1414  279E- C8                 INY
1415  279F- B1 08              LDA (SP),Y
1416  27A1- 85 03              STA M1+2
1417  27A3- 60                 RTS
1418                   *
1419                   * P-CODE 43: SUBF
1420                   *****************
1421                   *
1422  27A4- 20 83 27   SUBF    JSR GETFLP2
1423  27A7- 20 25 2B           JSR FSUB
1424  27AA- 4C 6C 27           JMP PUTFLP0
1425                   *
1426                   * P-CODE 44: MULF
1427                   *****************
1428                   *
1429  27AD- 20 83 27   MULF    JSR GETFLP2
1430  27B0- 20 52 2B           JSR FMUL
1431  27B3- 4C 6C 27           JMP PUTFLP0
1432                   *
1433                   * P-CODE 45: DIVF
1434                   *****************
1435                   *
1436  27B6- 20 83 27   DIVF    JSR GETFLP2
1437  27B9- 20 78 2B           JSR FDIV
1438  27BC- 4C 6C 27           JMP PUTFLP0
1439                   *
1440                   * P-CODE 46: FLOF
1441                   *****************
1442                   *
1443  27BF- A5 00      FLOF    LDA ACCU
1444  27C1- 85 02              STA M1+1        HIGH BYTE IS IN ACCU
1445                   *                       SAME AS M1
1446  27C3- 20 07 2B           JSR FLOAT
1447  27C6- 20 C0 22           JSR INCS2
1448  27C9- 4C 77 27           JMP PUTFLP
1449                   *
1450                   * P-CODE 47: FIXF

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 26/10/23   R65 ASSEMBLER  PAGE 31

1451                   *****************
1452                   *
1453  27CC- 20 98 27   FIXF    JSR GETFLP
1454  27CF- 20 C5 2B           JSR FIX
1455  27D2- A5 02              LDA M1+1
1456  27D4- 85 00              STA ACCU
1457  27D6- 4C ED 20           JMP DECS2
1458                   *
1459                   * P-CODE 48: FEQU       =
1460                   *****************
1461                   *
1462  27D9- 20 FA 27   FEQU    JSR TESTF
1463  27DC- F0 12              BEQ TRUE
1464                   *
1465  27DE- A2 00      FALSE   LDX =0
1466  27E0- 86 00              STX ACCU
1467  27E2- 86 01              STX ACCU+1
1468  27E4- A5 08      DECS6   LDA SP
1469  27E6- 38                 SEC
1470  27E7- E9 06              SBC =6
1471  27E9- 85 08              STA SP
1472  27EB- B0 02              BCS *+4
1473  27ED- C6 09              DEC SP+1
1474  27EF- 60                 RTS
1475                   *
1476  27F0- A2 01      TRUE    LDX =1
1477  27F2- 86 00              STX ACCU
1478  27F4- CA                 DEX
1479  27F5- 86 01              STX ACCU+1
1480  27F7- 4C E4 27           JMP DECS6
1481                   *
1482  27FA- 20 83 27   TESTF   JSR GETFLP2
1483  27FD- 20 25 2B          JSR FSUB
1484  2800- A5 01              LDA M1
1485  2802- 60                 RTS
1486                   *
1487                   * P-CODE 49: FNEQ       <>
1488                   *****************
1489                   *
1490  2803- 20 FA 27   FNEQ    JSR TESTF
1491  2806- D0 E8              BNE TRUE
1492  2808- F0 D4              BEQ FALSE
1493                   *
1494                   * P-CODE 4A: FLES       <
1495                   *****************
1496                   *
1497  280A- 20 FA 27   FLES    JSR TESTF
1498  280D- 10 CF              BPL FALSE
1499  280F- 30 DF              BMI TRUE
1500                   *

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 26/10/23   R65 ASSEMBLER  PAGE 32

1501                   * P-CODE 4B: FGRE       >=
1502                   *****************
1503                   *
1504  2811- 20 FA 27   FGRE    JSR TESTF
1505  2814- 10 DA              BPL TRUE
1506  2816- 30 C6              BMI FALSE
1507                   *
1508                   * P-CODE 4C: FGRT       >
1509                   *****************
1510                   *
1511  2818- 20 FA 27   FGRT    JSR TESTF
1512  281B- 30 C1              BMI FALSE
1513  281D- F0 BF              BEQ FALSE
1514  281F- 10 CF              BPL TRUE
1515                   *
1516                   * P-CODE 4D: FLEE       <=
1517                   *****************
1518                   *
1519  2821- 20 FA 27   FLEE    JSR TESTF
1520  2824- 30 CA              BMI TRUE
1521  2826- F0 C8              BEQ TRUE
1522  2828- 10 B4              BPL FALSE
1523                   *
1524                   * P-CODE 4E: FCOM       COMPLEMENT
1525                   *****************
1526                   *
1527  282A- 20 98 27   FCOM    JSR GETFLP
1528  282D- 20 6A 2B           JSR FCOMPL
1529  2830- 4C 77 27           JMP PUTFLP
1530                   *
1531                   *
1532                   * P-CODE 4F: TFER       TEST FILE ERROR
1533                   *****************
1534                   *
1535  2833- A6 23      TFER    LDX IOCHECK
1536  2835- F0 04              BEQ TFER1
1537  2837- A6 DB              LDX FILERR
1538  2839- D0 01              BNE TFER2
1539  283B- 60         TFER1   RTS             OK
1540                   *
1541  283C- 4C FD 28   TFER2   JMP PERROR
1542                   *
1543                   * P-CODE 50: OPRA       OPEN RA-FILE
1544                   *****************
1545                   *
1546  283F- 20 B1 22   OPRA    JSR COPY        SAVE ACCU
1547  2842- 20 CC 2B           JSR OPENRA      OPEN FILE
1548  2845- C8                 INY
1549  2846- C8                 INY
1550  2847- 84 00              STY ACCU        SAVE FILE NO

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 26/10/23   R65 ASSEMBLER  PAGE 33

1551  2849- A9 00              LDA =0
1552  284B- 85 01              STA ACCU+1
1553  284D- 60                 RTS
1554                   *
1555                   * P-CODE 51: GETR       GET FROM RA FILE
1556                   *****************
1557                   *
1558                   * NO AUTOMATIC ERROR CHECKING
1559                   *
1560  284E- 20 5B 28   GETR    JSR GETR1
1561  2851- 20 D3 2C           JSR GETBYTE
1562  2854- 85 00              STA ACCU
1563  2856- A9 00              LDA =0
1564  2858- 85 01              STA ACCU+1
1565  285A- 60                 RTS
1566                   *
1567  285B- 20 ED 20   GETR1   JSR DECS2
1568  285E- A0 80              LDY =128
1569  2860- B1 08              LDA (SP),Y      GET FILE NO
1570  2862- AA                 TAX
1571  2863- CA                 DEX
1572  2864- CA                 DEX
1573  2865- A5 00              LDA ACCU        GET POINTER
1574  2867- A4 01              LDY ACCU+1
1575  2869- 60                 RTS
1576                   *
1577                   * P-CODE 52: PUTR       PUT TO RA=FILE
1578                   *****************
1579                   *
1580                   * NO AUTOMATIC ERROR CHECKING
1581                   *
1582  286A- A5 00      PUTR    LDA ACCU
1583  286C- 85 FE              STA KCHAR
1584  286E- 20 DE 22           JSR GETS2
1585  2871- 20 5B 28           JSR GETR1
1586  2874- 20 F1 2C           JSR PUTBYTE
1587  2877- 4C DE 22           JMP GETS2
1588                   *
1589                   * P-CODE 53: SWA2       SWAP 2 AND 3 ON STACK
1590                   *****************
1591                   *
1592  287A- A0 7E      SWA2    LDY =126
1593  287C- 20 81 28           JSR SWA3
1594  287F- A0 7F              LDY =127
1595                   *
1596  2881- B1 08      SWA3    LDA (SP),Y
1597  2883- AA                 TAX
1598  2884- 88                 DEY
1599  2885- 88                 DEY
1600  2886- B1 08              LDA (SP),Y

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 26/10/23   R65 ASSEMBLER  PAGE 34

1601  2888- C8                 INY
1602  2889- C8                 INY
1603  288A- 91 08              STA (SP),Y
1604  288C- 8A                 TXA
1605  288D- 88                 DEY
1606  288E- 88                 DEY
1607  288F- 91 08              STA (SP),Y
1608  2891- 60                 RTS
1609                   *
1610                   * GETCHR0: GET A CHAR FROM SPECIFIED FILE
1611                   *****************************************
1612                   *
1613  2892- A6 0D      GETCHR0 LDX DEVICE
1614  2894- D0 1A              BNE GETCHR4
1615                   *
1616  2896- A6 15      GETCHR1 LDX BUFFPN
1617  2898- 10 06              BPL GETCHR2
1618  289A- 20 0B 23           JSR RLIN
1619  289D- 4C 96 28           JMP GETCHR1
1620                   *
1621  28A0- E4 16      GETCHR2 CPX ENDBUF      IS IS END OF BUFFER?
1622  28A2- D0 07              BNE GETCHR3
1623  28A4- A9 FF              LDA =$FF
1624  28A6- 85 15              STA BUFFPN
1625  28A8- A9 0D              LDA =$D
1626  28AA- 60                 RTS
1627                   *
1628  28AB- E6 15      GETCHR3 INC BUFFPN
1629  28AD- B5 24              LDA LINBUF,X
1630  28AF- 60                 RTS
1631                   *
1632  28B0- CA         GETCHR4 DEX
1633  28B1- D0 03              BNE GETCHR5     SKIP, IF NOT KEY
1634  28B3- 4C 00 E0           JMP GETKEY
1635                   *
1636  28B6- CA         GETCHR5 DEX
1637  28B7- A9 00              LDA =0
1638  28B9- 85 DA              STA FILFLG
1639  28BB- 20 18 F0           JSR READCH
1640  28BE- 4C 33 28           JMP TFER
1641                   *
1642  28C1- 60         GETCHR6 RTS
1643                   *
1644                   * PRTCHR0: PRINT CHAR TO SPECIFIED FILE
1645                   ***************************************
1646                   *
1647  28C2- A6 0D      PRTCHR0 LDX DEVICE
1648  28C4- 30 16              BMI PRTCHR3     Plot text?
1649  28C6- D0 03              BNE PRTCHR1
1650  28C8- 4C 09 E0           JMP PRTCHR

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 26/10/23   R65 ASSEMBLER  PAGE 35

1651                   *
1652  28CB- CA         PRTCHR1 DEX
1653  28CC- D0 03              BNE PRTCHR2
1654  28CE- 4C 0C E0           JMP AUTOPR
1655                   *
1656  28D1- CA         PRTCHR2 DEX
1657  28D2- A0 00              LDY =0
1658  28D4- 84 DA              STY FILFLG
1659  28D6- 20 1B F0           JSR WRITCH
1660  28D9- 4C 33 28           JMP TFER
1661                   *
1662  28DC- C9 0D      PRTCHR3 CMP =$0D        Plot CR?
1663  28DE- D0 06              BNE PRTCHR4
1664  28E0- A9 00              LDA =0
1665  28E2- 8D AE 03           STA GRX
1666  28E5- 60         PRTCHRE RTS
1667                   *
1668  28E6- C9 0A      PRTCHR4 CMP =$0A        PLOT LF?
1669  28E8- D0 0D              BNE PRTCHR6
1670  28EA- AD AF 03           LDA GRY
1671  28ED- E9 08              SBC =8
1672  28EF- 10 02              BPL PRTCHR5
1673  28F1- A9 00              LDA =0
1674                   *
1675  28F3- 8D AF 03   PRTCHR5 STA GRY
1676  28F6- 60                 RTS
1677                   *
1678  28F7- 8D B0 03   PRTCHR6 STA GRC
1679  28FA- 4C 18 C8           JMP APLOTCH     PLOT THE CHARACTER
1680                   *
1681                   * PERROR: PASCAL RUNTIME ERROR
1682                   ******************************
1683                   *
1684  28FD- 20 27 E0  PERROR  JSR PRTINF
1685  2900- 0D 0A 07           BYT $D,$A,7,'Pascal error '+128
1685  2903- 50 61 73 
1685  2906- 63 61 6C 
1685  2909- 20 65 72 
1685  290C- 72 6F 72 
1685  290F- A0 
1686  2910- A9 00              LDA =0
1687  2912- 85 0D              STA DEVICE
1688  2914- 8A                 TXA
1689  2915- 85 0C              STA RUNERR
1690  2917- 20 2D E0           JSR PRTBYT
1691  291A- A5 0A              LDA PC
1692  291C- 38                 SEC
1693  291D- E5 11              SBC STPROG
1694  291F- 85 00              STA ACCU
1695  2921- A5 0B              LDA PC+1

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 26/10/23   R65 ASSEMBLER  PAGE 36

1696  2923- E5 12              SBC STPROG+1
1697  2925- 85 01              STA ACCU+1
1698  2927- F0 0C              BEQ PERROR1
1699  2929- 30 0A              BMI PERROR1
1700  292B- 20 27 E0           JSR PRTINF
1701  292E- 20 61 74           BYT ' at '+128
1701  2931- A0 
1702  2932- 20 A7 23           JSR PRTN
1703                   *
1704  2935- 4C 10 20   PERROR1 JMP STOP
1705                   *
1706                   *
1707                   * WARM START ENTRY POINT
1708                   ************************
1709                   *
1710  2938- AD 81 17   WARMST  LDA SFLAG       SET PASCAL RUNTIME BIT
1711  293B- 09 01              ORA =$01        IN SFLAG
1712  293D- 8D 81 17           STA SFLAG
1713  2940- BA                 TSX
1714  2941- 8E FF 17           STX SAVS        SAVE STACK POINTER
1715  2944- A2 00              LDX =0
1716  2946- 86 0B              STX PC+1
1717  2948- 86 0D              STX DEVICE
1718  294A- CA                 DEX
1719  294B- 86 16              STX ENDBUF
1720  294D- 86 23              STX IOCHECK
1721  294F- A2 00              LDX =0
1722                   *
1723  2951- A0 00      EXEC    LDY =0
1724  2953- 84 0B              STY PC+1
1725  2955- BD 0A 2A           LDA EXTABLE,X
1726  2958- 9D 20 03           STA FILNM1,X
1727  295B- E8                 INX
1728  295C- C8                 INY
1729  295D- C0 10              CPY =16
1730  295F- 90 F2              BCC EXEC+2
1731  2961- A9 00              LDA =0
1732  2963- 8D 30 03           STA FILCY1
1733                   *
1734  2966- A9 00      EXECUTE LDA =0
1735  2968- 85 DA              STA FILFLG
1736  296A- AD 0B 20           LDA USEREND
1737  296D- AE 0C 20           LDX USEREND+1
1738  2970- 38                 SEC
1739  2971- E9 90              SBC =144
1740  2973- B0 01              BCS *+3
1741  2975- CA                 DEX
1742  2976- 85 0E              STA ENDSTK
1743  2978- 86 0F              STX ENDSTK+1
1744                   *

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 26/10/23   R65 ASSEMBLER  PAGE 37

1745  297A- AD 09 20   EXEC1   LDA USERST
1746  297D- AE 0A 20           LDX USERST+1
1747  2980- 85 11      EXEC3   STA STPROG
1748  2982- 86 12              STX STPROG+1
1749  2984- 8D 31 03           STA FILSA1
1750  2987- 8E 32 03           STX FILSA1+1
1751  298A- 20 15 E8           JSR RDFILE      READ FILE TO EXECUTE
1752  298D- D0 07              BNE EXECE       PROGRAM NOT LOOADED?
1753                   *
1754  298F- AD 12 03           LDA FILSTP
1755  2992- C9 52              CMP ='R'        IS PASCAL PROGRAM?
1756  2994- F0 07              BEQ RUN
1757  2996- A9 84      EXECE   LDA =$84        PASCAL RUNPROG ERROR
1758  2998- 85 0C              STA RUNERR
1759  299A- 4C 10 20           JMP STOP        SILENT ERROR
1760                   *
1761  299D- A0 00      RUN     LDY =0          READ END ADDRESS
1762  299F- B1 11              LDA (STPROG),Y  FROM FILE
1763  29A1- 18                 CLC
1764  29A2- 65 11              ADC STPROG
1765  29A4- 85 13              STA EOPROG
1766  29A6- C8                 INY
1767  29A7- B1 11              LDA (STPROG),Y
1768  29A9- 65 12              ADC STPROG+1
1769  29AB- 85 14              STA EOPROG+1
1770  29AD- A5 13              LDA EOPROG      GET END OF STACK
1771  29AF- A6 14              LDX EOPROG+1
1772  29B1- 38                 SEC
1773  29B2- E9 80              SBC =128
1774  29B4- 85 17              STA BASE
1775  29B6- 85 08              STA SP
1776  29B8- B0 01              BCS *+3
1777  29BA- CA                 DEX
1778  29BB- 86 18              STX BASE+1
1779  29BD- 86 09              STX SP+1
1780                   *
1781  29BF- A5 11              LDA STPROG
1782  29C1- A6 12              LDX STPROG+1
1783  29C3- 18                 CLC
1784  29C4- 69 02              ADC =2
1785  29C6- 85 0A              STA PC
1786  29C8- 90 01              BCC *+3
1787  29CA- E8                 INX
1788  29CB- 86 0B              STX PC+1
1789  29CD- A9 00              LDA =0
1790  29CF- 85 0C              STA RUNERR
1791  29D1- AE FF 17   LOOP    LDX SAVS        RESTORE STACK POINTER
1792  29D4- 9A                 TXS
1793  29D5- 20 E0 29           JSR EXCODE
1794  29D8- AD 81 17           LDA SFLAG

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 26/10/23   R65 ASSEMBLER  PAGE 38

1795  29DB- 30 20              BMI ESCERR
1796  29DD- 4C D1 29           JMP LOOP
1797                   *
1798                   *
1799  29E0- 20 9A 24   EXCODE  JSR FETCH
1800  29E3- 89 F1              STA =$F1
1801  29E5- C9 54              CMP =$54        TEST CODENUMBER
1802  29E7- 90 05              BCC *+7
1803  29E9- A9 85      ILLC    LDA =$85        PASCAL RUNTIME ERROR
1804  29EB- 4C FD 28           JMP PERROR      ILLEGAL P-CODE
1805                   *
1806  29EE- 0A                 ASL A
1807  29EF- AA                 TAX
1808  29F0- BD 1A 2A           LDA TABLE,X
1809  29F3- 85 1B              STA ARG1
1810  29F5- BD 1B 2A           LDA TABLE+1,X
1811  29F8- 85 1C              STA ARG1+1
1812  29FA- 6C 1B 00           JMP (ARG1)
1813                   *
1814  29FD- AD 81 17  ESCERR  LDA SFLAG       CLEAR ESCAPE FLAG
1815  2A00- 29 7F              AND =$7F
1816  2A02- 8D 81 17           STA SFLAG
1817  2A05- A2 86              LDX =$86        PASCAL RUNTIME ERROR
1818  2A07- 4C FD 28           JMP PERROR      ESCAPE DURING EXECUTION
1819                   *
1820  2A0A- 53 59 53   EXTABLE BYT 'SYSTEM:R        '
1820  2A0D- 54 45 4D 
1820  2A10- 3A 52 20 
1820  2A13- 20 20 20 
1820  2A16- 20 20 20 
1820  2A19- 20 
1821                   *
1822  2A1A- 10 20 9C   TABLE   WRD STOP,RETN,NEGA,ADDA,SUBA,MULA
1822  2A1D- 20 CF 20 
1822  2A20- DD 20 F9 
1822  2A23- 20 0C 21 
1823  2A26- 71 21 E3           WRD DIVA,LOWB,TEQU,TNEQ,TLES,TGRE
1823  2A29- 21 EE 21 
1823  2A2C- FF 21 09 
1823  2A2F- 22 13 22 
1824  2A32- 19 22 1F           WRD TGRT,TLEE,ORAC,ANDA,EORA,NOTA
1824  2A35- 22 25 22 
1824  2A38- 37 22 49 
1824  2A3B- 22 5B 22 
1825  2A3E- 6B 22 84           WRD LEFT,RIGH,INCA,DECA,COPY,PEEK
1825  2A41- 22 A1 22 
1825  2A44- A8 22 B1 
1825  2A47- 22 EC 22 
1826  2A4A- F5 22 02           WRD POKE,CALA,RLIN,GETC,GETN,PRTC
1826  2A4D- 23 0B 23 

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 26/10/23   R65 ASSEMBLER  PAGE 39

1826  2A50- 35 23 42 
1826  2A53- 23 9F 23 
1827  2A56- A7 23 1A           WRD PRTN,PRTS,LITB,INCB,LITW,INCW
1827  2A59- 24 50 24 
1827  2A5C- 5D 24 8C 
1827  2A5F- 24 A5 24 
1828  2A62- C2 24 D4           WRD JUMP,JMPZ,JMPO,LOAD,LODX,STOR
1828  2A65- 24 E9 24 
1828  2A68- F2 24 40 
1828  2A6B- 25 5A 25 
1829  2A6E- 79 25 9F           WRD STOX,CALL,SDEV,RDEV,FNAM,OPNR
1829  2A71- 25 D5 25 
1829  2A74- DC 25 E1 
1829  2A77- 25 FE 25 
1830  2A7A- 0F 26 14           WRD OPNW,CLOS,PRTI,GHGH,GLOW,PHGH
1830  2A7D- 26 1E 26 
1830  2A80- 2B 26 2F 
1830  2A83- 26 34 26 
1831  2A86- 3D 26 46           WRD PLOW,GSEC,PSEC,NBYT,NWRD,LODN
1831  2A89- 26 4F 26 
1831  2A8C- 7A 26 8C 
1831  2A8F- 26 A1 26 
1832  2A92- BA 26 D0           WRD STON,LODI,STOI,EXST,TIND,RUNP
1832  2A95- 26 E5 26 
1832  2A98- EE 26 04 
1832  2A9B- 27 24 27 
1833  2A9E- 66 27 A4           WRD ADDF,SUBF,MULF,DIVF,FLOF,FIXF
1833  2AA1- 27 AD 27 
1833  2AA4- B6 27 BF 
1833  2AA7- 27 CC 27 
1834  2AAA- D9 27 03           WRD FEQU,FNEQ,FLES,FGRE,FGRT,FLEE
1834  2AAD- 28 0A 28 
1834  2AB0- 11 28 18 
1834  2AB3- 28 21 28 
1835  2AB6- 2A 28 33           WRD FCOM,TFER,OPRA,GETR,PUTR,SWA2
1835  2AB9- 28 3F 28 
1835  2ABC- 4E 28 6A 
1835  2ABF- 28 7A 28 
1836                   *
1837                   * COLDSTART
1838                   ***********
1839                   *
1840  2AC2- 58         COLDST  CLI
1841  2AC3- D8                 CLD
1842  2AC4- AD 09 20           LDA USERST
1843  2AC7- AE 0A 20           LDX USERST+1
1844  2ACA- 85 11              STA STPROG
1845  2ACC- 86 12              STX STPROG+1
1846  2ACE- A0 00              LDY =0
1847  2AD0- 98                 TYA

----------------------------------------------------------------------

R65 PASCAL RUNTIME                 26/10/23   R65 ASSEMBLER  PAGE 40

1848  2AD1- 91 11              STA (STPROG),Y
1849  2AD3- C8                 INY
1850  2AD4- C0 04              CPY =4
1851  2AD6- 90 F9              BCC *-5
1852  2AD8- 4C 38 29           JMP WARMST
1853                   *
1854                           TIT R65 PASCAL: FLP-MATH
1855                           PAG

----------------------------------------------------------------------

R65 PASCAL: FLP-MATH               26/10/23   R65 ASSEMBLER  PAGE 41

1856                   *
1857                   ********************************
1858                   * R65 PASCAL FLP MATH ROUTINES *
1859                   ********************************
1860                   *
1861                   *
1862  2ADB- 18         ADD     CLC
1863  2ADC- A2 02              LDX =2
1864  2ADE- B5 01      ADD1    LDA M1,X
1865  2AE0- 75 1C              ADC M2,X
1866  2AE2- 95 01              STA M1,X
1867  2AE4- CA                 DEX
1868  2AE5- 10 F7              BPL ADD1
1869  2AE7- 60                 RTS
1870                   *
1871  2AE8- 06 10      MD1     ASL SIGN
1872  2AEA- 20 ED 2A           JSR ABSWAP
1873  2AED- 24 01      ABSWAP  BIT M1
1874  2AEF- 10 05              BPL ABSWP1
1875  2AF1- 20 6A 2B           JSR FCOMPL
1876  2AF4- E6 10              INC SIGN
1877  2AF6- 38         ABSWP1  SEC
1878                   *
1879                   * SWAP: EXCHANGE F1 AND F2
1880                   **************************
1881                   *
1882  2AF7- A2 04      SWAP    LDX =4
1883  2AF9- 94 03      SWAP1   STY E-1,X
1884  2AFB- B5 FF              LDA <(X1-1),X
1885  2AFD- B4 1A              LDY X2-1,X
1886  2AFF- 94 FF             STY <(X1-1),X
1887  2B01- 95 1A              STA X2-1,X
1888  2B03- CA                 DEX
1889  2B04- D0 F3              BNE SWAP1
1890  2B06- 60                 RTS
1891                   *
1892                   * FLOAT: FLOAT M1,M1+1 TO RESULT IN F1
1893                   **************************************
1894                   *
1895  2B07- A9 8E      FLOAT   LDA =$8E
1896  2B09- 85 00              STA X1
1897  2B0B- A9 00              LDA =0
1898  2B0D- 85 03              STA M1+2
1899  2B0F- F0 08              BEQ NORM
1900  2B11- C6 00      NORM1   DEC X1
1901  2B13- 06 03              ASL M1+2
1902  2B15- 26 02              ROL M1+1
1903  2B17- 26 01              ROL M1
1904  2B19- A5 01      NORM    LDA M1
1905  2B1B- 0A                 ASL A

----------------------------------------------------------------------

R65 PASCAL: FLP-MATH               26/10/23   R65 ASSEMBLER  PAGE 42

1906  2B1C- 45 01              EOR M1
1907  2B1E- 30 04              BMI RTS1
1908  2B20- A5 00              LDA X1
1909  2B22- D0 ED              BNE NORM1
1910  2B24- 60         RTS1    RTS
1911                   *
1912                   * FSUB: F1=F2-F1
1913                   ****************
1914                   *
1915  2B25- 20 6A 2B   FSUB    JSR FCOMPL
1916  2B28- 20 38 2B   SWPALG  JSR ALGNSW
1917                   *
1918                   * FADD: F1=F2+F1
1919                   ****************
1920                   *
1921  2B2B- A5 1B      FADD    LDA X2
1922  2B2D- C5 00              CMP X1
1923  2B2F- D0 F7              BNE SWPALG
1924  2B31- 20 DB 2A           JSR ADD
1925  2B34- 50 E3      ADDEND  BVC NORM
1926  2B36- 70 05              BVS RTLOG
1927  2B38- 90 BD      ALGNSW  BCC SWAP
1928  2B3A- A5 01      RTAR    LDA M1
1929  2B3C- 0A                 ASL A
1930  2B3D- E6 00      RTLOG   INC X1
1931  2B3F- F0 7E              BEQ OVFL
1932  2B41- A2 FA      RTLOG1  LDX =$FA
1933  2B43- A9 80      ROR1    LDA =$80
1934  2B45- B0 01              BCS ROR2
1935  2B47- 0A                 ASL A
1936  2B48- 56 07      ROR2    LSR E+3,X
1937  2B4A- 15 07              ORA E+3,X
1938  2B4C- 95 07              STA E+3,X
1939  2B4E- E8                 INX
1940  2B4F- D0 F2              BNE ROR1
1941  2B51- 60                 RTS
1942                   *
1943                   * FMUL: F1=F2*F1
1944                   ****************
1945                   *
1946  2B52- 20 E8 2A   FMUL    JSR MD1
1947  2B55- 65 00              ADC X1
1948  2B57- 20 A8 2B           JSR MD2
1949  2B5A- 18                 CLC
1950  2B5B- 20 41 2B   MUL1    JSR RTLOG1
1951  2B5E- 90 03              BCC MUL2
1952  2B60- 20 DB 2A           JSR ADD
1953  2B63- 88         MUL2    DEY
1954  2B64- 10 F5              BPL MUL1
1955  2B66- 46 10      MDEND   LSR SIGN

----------------------------------------------------------------------

R65 PASCAL: FLP-MATH               26/10/23   R65 ASSEMBLER  PAGE 43

1956  2B68- 90 AF      NORMX   BCC NORM
1957  2B6A- 38         FCOMPL  SEC
1958  2B6B- A2 03              LDX =3
1959  2B6D- A9 00      COMPL1  LDA =0
1960  2B6F- F5 00              SBC X1,X
1961  2B71- 95 00              STA X1,X
1962  2B73- CA                 DEX
1963  2B74- D0 F7              BNE COMPL1
1964  2B76- F0 BC              BEQ ADDEND
1965                   *
1966                   * FDIV: F1=F2/F1
1967                   ****************
1968                   *
1969  2B78- 20 E8 2A   FDIV    JSR MD1
1970  2B7B- E5 00              SBC X1
1971  2B7D- 20 A8 2B           JSR MD2
1972  2B80- 38         FDIV1   SEC
1973  2B81- A2 02              LDX =2
1974  2B83- B5 1C      FDIV2   LDA M2,X
1975  2B85- F5 04              SBC E,X
1976  2B87- 48                 PHA
1977  2B88- CA                 DEX
1978  2B89- 10 F8              BPL FDIV2
1979  2B8B- A2 FD              LDX =$FD
1980  2B8D- 68         FDIV3   PLA
1981  2B8E- 90 02              BCC FDIV4
1982  2B90- 95 1F              STA M2+3,X
1983  2B92- E8         FDIV4   INX
1984  2B93- D0 F8              BNE FDIV3
1985  2B95- 26 03              ROL M1+2
1986  2B97- 26 02              ROL M1+1
1987  2B99- 26 01              ROL M1
1988  2B9B- 06 1E              ASL M2+2
1989  2B9D- 26 1D              ROL M2+1
1990  2B9F- 26 1C              ROL M2
1991  2BA1- B0 1C              BCS OVFL
1992  2BA3- 88                 DEY
1993  2BA4- D0 DA              BNE FDIV1
1994  2BA6- F0 BE              BEQ MDEND
1995  2BA8- 86 03      MD2     STX M1+2
1996  2BAA- 86 02              STX M1+1
1997  2BAC- 86 01              STX M1
1998  2BAE- B0 0D              BCS OVCHK
1999  2BB0- 30 04              BMI MD3
2000  2BB2- 68                 PLA
2001  2BB3- 68                 PLA
2002  2BB4- 90 B2              BCC NORMX
2003  2BB6- 49 80      MD3     EOR =$80
2004  2BB8- 85 00              STA X1
2005  2BBA- A0 17              LDY =$17

----------------------------------------------------------------------

R65 PASCAL: FLP-MATH               26/10/23   R65 ASSEMBLER  PAGE 44

2006  2BBC- 60                 RTS
2007  2BBD- 10 F7      OVCHK   BPL MD3
2008  2BBF- 4C A8 21   OVFL    JMP DIV1-5      PASCAL RUNTIME ERROR
2009                   *
2010                   * FIX: FIX F1 IN M1, M1+1
2011                   *************************
2012                   *
2013  2BC2- 20 3A 2B           JSR RTAR
2014  2BC5- A5 00      FIX     LDA X1
2015  2BC7- C9 8E              CMP =$8E
2016  2BC9- D0 F7              BNE FIX-3
2017  2BCB- 60         RTRN    RTS
2018                   *
2019                           TIT R65 PASCAL: RANDOM ACCESS
2020                           PAG

----------------------------------------------------------------------

R65 PASCAL: RANDOM ACCESS          26/10/23   R65 ASSEMBLER  PAGE 45

2021                   *
2022                   * RANDOM ACCESS FILE HANDLER
2023                   ****************************
2024                   *
2025                   *
2026                   * OPENRA: OPEN A FILE FOR RANDOM ACCESS
2027                   ***************************************
2028                   *
2029                   * ENTRY: FILNM1,FILCY1,FILDRV,FILFLG
2030                   * FILFLG: BIT 7: PROTECTED (NEW ONLY)*
2031                   *         BIT 6: NO PRINTED OUTPUT
2032                   *         BIT 5: DIRECTION (0=READ)
2033                   *         BIT 4: 1=NEW, 0=OLD
2034                   *
2035                   * NEW ONLY: MAXSIZ,FILSA
2036                   *
2037                   * EXIT: NO OF OPEN FILE IN Y, STATUS IN A
2038                   *       AND FILERR, Y IS ONLY VALID
2039                   *       IF A=0
2040                   *
2041                   *
2042  2BCC- AC 36 03   OPENRA  LDY MAXSEQ      SEARCH EMPTY ENTRY
2043  2BCF- B9 39 03           LDA FIDRTB,Y    BIT 5=1: ENTRY USED
2044  2BD2- 29 20              AND =$20
2045  2BD4- F0 08              BEQ OPENRA1     FOUND, SKIP
2046  2BD6- 88                 DEY
2047  2BD7- 10 F6              BPL OPENRA+3
2048                   *
2049  2BD9- A9 23              LDA =$23        TOO MANY OPEN FILES
2050  2BDB- 85 DB              STA FILERR
2051  2BDD- 60                 RTS
2052                   *
2053  2BDE- 8C 35 03   OPENRA1 STY CURSEQ      SAVE CURRENT ENTRY NO
2054  2BE1- A5 DC              LDA FILDRV      GET AND TEST DRIVE
2055  2BE3- 99 41 03           STA FIDVTB,Y
2056  2BE6- 29 FE              AND =$FE
2057  2BE8- F0 05              BEQ OPENRA2     SKIP, IF OK
2058                   *
2059  2BEA- A9 28              LDA =$28        ILLEGAL DRIVE FOR RA
2060  2BEC- 85 DB              STA FILERR
2061  2BEE- 60                 RTS
2062                   *
2063  2BEF- A9 10      OPENRA2 LDA =$10        TEST OLD/NEW FLAG
2064  2BF1- 25 DA              AND FILFLG
2065  2BF3- F0 78              BEQ OPENOLD     SKIP, IF OLD
2066                   *
2067                   * OPEN A NEW FILE
2068                   *
2069  2BF5- A5 DA      OPENNEW LDA FILFLG
2070  2BF7- 29 80              AND =$80        GET PROTECTED FLAG

----------------------------------------------------------------------

R65 PASCAL: RANDOM ACCESS          26/10/23   R65 ASSEMBLER  PAGE 46

2071  2BF9- 09 42              ORA ='B'        BLOCK FILE
2072  2BFB- 8D 00 03           STA FILTYP      SET FILE TYPE
2073                   *
2074  2BFE- A9 00             LDA =0
2075  2C00- AE 37 03           LDX MAXSIZ      SIZE OF FILE
2076  2C03- 8D 15 03           STA FILSIZ
2077  2C06- 8E 16 03           STX FILSIZ+1
2078                   *
2079  2C09- CA                 DEX             COMPUTE FILEA
2080  2C0A- AD 1A 03           LDA FILSA
2081  2C0D- 18                 CLC
2082  2C0E- 69 FF              ADC =$FF
2083  2C10- 8D 1C 03           STA FILEA
2084  2C13- 8A                 TXA
2085  2C14- 6D 1B 03           ADC FILSA+1
2086  2C17- 8D 1D 03           STA FILEA+1
2087                   *
2088  2C1A- 20 1E E8           JSR SETFID      SET FILEDATE
2089                   *
2090  2C1D- A2 10              LDX =16
2091  2C1F- BD 20 03   OPENNE1 LDA FILNM1,X    SET FILNM1 AND FILCY1
2092  2C22- 9D 01 03           STA FILNAM,X    TO FILNAM AND FILCYC
2093  2C25- CA                 DEX
2094  2C26- 10 F7              BPL OPENNE1
2095                   *
2096                   * SEARCH IN DIRECTORY AND RETURN CYCLUS
2097                   * AND DIRECTORY ENTRY TO USE, TEST EXISTING
2098                   * FILES FOR SAME NAME AND CYCLUS, DISK
2099                   * OPERATION IS INITIALIZED
2100                   *
2101  2C28- 20 96 20           JSR PREPWRA
2102  2C2B- 8E 11 03           STX FILCYC
2103                   *
2104                   * FIND FIRST EMPTY DISK DIRECTORY ENTR
2105                   * FETCH ITAND SET FIRST SECTOR OF FILE TO
2106                   * FILLOC, OUTPUT Y,X AS NUMBER OF EMPTY
2107                   * SECTORS
2108                   *
2109  2C2E- 20 99 20           JSR PREPWRB
2110  2C31- 8A                 TXA
2111  2C32- CD 16 03           CMP FILSIZ+1
2112  2C35- 98                 TYA
2113  2C36- E9 00              SBC =0          COMPARE WITH REQUESTED
2114  2C38- B0 05              BCS OPENNE3     SECTORS
2115                   *
2116  2C3A- A9 26              LDA =$26        DISK OVERFLOW
2117  2C3C- 4C 8D 20           JMP DISCER1
2118                   *
2119                   * SET FITEMP,Y AND FITEMP+8,YNTO FIRST SECTOT
2120                   * OF FILE ON DISK, FIMAXT,Y TO SIZE, DIRECTORY

----------------------------------------------------------------------

R65 PASCAL: RANDOM ACCESS          26/10/23   R65 ASSEMBLER  PAGE 47

2121                   * ENTRY NO TO FITEMP+16,Y
2122                   * THEN PUT THIS ENTRY ONTO THE DISKMAND SET
2123                   * A NEW END OF DIRECTORY MARK
2124                   *
2125  2C3F- 20 72 20   OPENNE3 JSR DOPEN4
2126                   *
2127  2C42- AC 35 03           LDY CURSEQ      SETUP DUMMY FIRST SECTOR
2128  2C45- A9 00              LDA =0
2129  2C47- 99 49 03           STA FIBPTB,Y
2130  2C4A- 99 51 03           STA FIRCTB,Y
2131                   *
2132  2C4D- AC 35 03   OPENNE4 LDY CURSEQ      OPEN FILE
2133  2C50- A5 DA              LDA FILFLG
2134  2C52- 0A                 ASL A
2135  2C53- 0A                 ASL A
2136  2C54- 29 80              AND =$80        GET DIRECTION
2137  2C56- 48                 PHA
2138  2C57- 2D 00 03           AND FILTYP
2139  2C5A- F0 06              BEQ OPENNE5     OK, SKIP
2140  2C5C- 68                 PLA             PROTECTED FILE
2141                   *
2142  2C5D- A9 29              LDA =$29
2143  2C5F- 85 DB              STA FILERR
2144  2C61- 60                 RTS
2145                   *
2146  2C62- 68         OPENNE5 PLA
2147  2C63- 09 60              ORA =$60        RA FILE, OPENIT
2148  2C65- 99 39 03           STA FIDRTB,Y
2149                   *
2150  2C68- A9 00              LDA =0          NORMALEXIT
2151  2C6A- 85 DB              STA FILERR
2152  2C6C- 60         OPENNE6 RTS
2153                   *
2154                   * OPEN AN OLD FILE:
2155                   * PREPARE DISK OPERATION, SEARCH REQUESTED
2156                   * FILE AND GET CORRSPONDING DISK ENTRY
2157                   *
2158  2C6D- 20 93 20   OPENOLD JSR PREPRD
2159                   *
2160  2C70- 20 75 20           JSR PRFLB1      PRINT LABEL, IF REQ.
2161  2C73- AD 00 03           LDA FILTYP
2162  2C76- 29 7F              AND =$7F
2163  2C78- C9 42              CMP ='B'        MUST BE BLOCK FILE
2164  2C7A- F0 05              BEQ OPENOL1     SKIP, IF OK
2165                   *
2166  2C7C- A9 05              LDA =5
2167  2C7E- 4C 8D 20           JMP DISCER1     FILE TYPE ERROR
2168                   *
2169  2C81- 20 90 20   OPENOL1 JSR ENDDO       END OF DISK OPERATION
2170                   *

----------------------------------------------------------------------

R65 PASCAL: RANDOM ACCESS          26/10/23   R65 ASSEMBLER  PAGE 48

2171                   * SET NOW FIRST SECTOR AND SIZE TO TABLE
2172                   *
2173  2C84- 20 6F 20           JSR DOPEN1
2174                   *
2175  2C87- A9 00              LDA =0          GET FIRST RECORD
2176  2C89- 20 90 2C           JSR GETTREC
2177  2C8C- D0 DE              BNE OPENNE6     SKIP, IF NOT OK
2178  2C8E- F0 BD              BEQ OPENNE4     ELSE OPEN FILE
2179                   *
2180                   *
2181                   * GETTREC: GET ONE RECORD FROM RA-FILE
2182                   * RECORD NUMBER IS IN A, FILE NUMBER IN CURSEQ
2183                   * RESULT IUS Z=1,OF OK, ELSE Z=0 AND FILERR
2184                   *
2185  2C90- AE 35 03   GETTREC LDX CURSEQ      SAVE RECORD NO
2186  2C93- 9D 51 03           STA FIRCTB,X
2187  2C96- A9 00              LDA =0          CLEAR UPDATED FLAG
2188  2C98- 9D 49 03           STA FIBPTB,X
2189  2C9B- BD 41 03           LDA FIDVTB,X    SET DRIVE NO
2190  2C9E- 85 DC              STA FILDRV
2191                   *
2192                   * COMPUTE DATA-POINTER AND BINARY
2193                   * TRACK,SECTOR, SETUP FILDRV
2194                   *
2195  2CA0- 20 7B 20           JSR PREPSR
2196                   *
2197                   * ADD RECORD NUMBER TO BINARY TRAC/SECTOR
2198                   * TEST SIZE OF FILE, CONVERT TO TRACK AND
2199                   * SECTOR, INITIALIZE DISK OPERATION
2200                   *
2201  2CA3- 20 7E 20           JSR PREPSR1
2202                   *
2203  2CA6- 20 84 20           JSR READ        READ ON SECTOR
2204                   *
2205  2CA9- 4C 90 20           JMP ENDDO       END OF DISK OPERATION
2206                   *
2207                   * PUTTREC: SAVE CURRENT RECORD ON DISK
2208                   * FILE NUMBER IN CURSEQ, RECORD NUMBER IN
2209                   * FIRCTB,Y, RETURNS Z=1 IF OK, ELSE FILERR
2210                   *
2211  2CAC- BD 41 03   PUTTREC LDA FIDVTB,X
2212  2CAF- 85 DC              STA FILDRV
2213  2CB1- 20 7B 20           JSR PREPSR      SEE GETTREC FOR
2214  2CB4- 20 7E 20           JSR PREPSR1     COMMENTS
2215  2CB7- 20 87 20           JSR WRITE
2216  2CBA- 4C 90 20           JMP ENDDO
2217                   *
2218                   * GETNEWR: GET A NEW RECORD, SAVE OLD, IF
2219                   * OLD HAS BEEN UPDATED
2220                   * ENTRY: NEW RECORD IN A, FILE NO IN CURSEQ

----------------------------------------------------------------------

R65 PASCAL: RANDOM ACCESS          26/10/23   R65 ASSEMBLER  PAGE 49

2221                   * EXIT: z=1 IF OK, ELSE FILERR
2222                   *
2223  2CBD- 8D 34 03   GETNEWR STA SAVRST+1    SAVE REQUESTED RECORD
2224  2CC0- AE 35 03           LDX CURSEQ
2225  2CC3- BD 49 03           LDA FIBPTB,X    UPDATED?
2226  2CC6- 10 05              BPL GETNEW1
2227                   *
2228  2CC8- 20 AC 2C           JSR PUTTREC     YES, SAVE IT
2229  2CCB- D0 23              BNE EXIT
2230                   *
2231  2CCD- AD 34 03   GETNEW1 LDA SAVRST+1    GET REQUESTED RECORD
2232  2CD0- 4C 90 2C           JMP GETTREC
2233                   *
2234                   * GETBYTE: GET ONE BYTE FROM FILE
2235                   *********************************
2236                   * ENTRY: FILE NUMBER IN X
2237                   *        POINTER IN A(LOW) AND Y(HIGH)
2238                   * EXIT:  FILERR IN Y AND STATUS, BYTE IN A
2239                   *
2240  2CD3- 8D 33 03   GETBYTE STA SAVRST      SAVE A
2241  2CD6- 20 20 2D           JSR TESTRA
2242                   *
2243  2CD9- 98                 TYA
2244  2CDA- DD 51 03           CMP FIRCTB,X    IS IT IN CURRENT RECORD?
2245  2CDD- F0 05              BEQ GETBYT1     YES, SKIP
2246                   *
2247  2CDF- 20 BD 2C           JSR GETNEWR     NO, GET NEW RECORD
2248  2CE2- D0 0C              BNE EXIT
2249                   *
2250  2CE4- 20 78 20   GETBYT1 JSR CPOINT      COMPUTE BUFFER PNT
2251  2CE7- AC 33 03           LDY SAVRST      RESTORE LOW POINTER
2252  2CEA- B1 FA              LDA (POINT),Y   GET THE BYTE
2253  2CEC- A0 00              LDY =0
2254  2CEE- 84 DB              STY FILERR      OK
2255  2CF0- 60         EXIT    RTS
2256                   *
2257                   * PUTBYTE: PUT ONE BYTE TO FILE
2258                   *******************************
2259                   *
2260                   * ENTRY: BYTE STORED IN KCHAR
2261                   *        FILE NUMBER IN X
2262                   *        POINTER IN A(LOW) AND Y(HIGH)
2263                   * EXIT:  FILERR IN Y AND STATUS
2264                   *
2265  2CF1- 8D 33 03   PUTBYTE STA SAVRST
2266  2CF4- 20 20 2D           JSR TESTRA
2267  2CF7- BD 39 03           LDA FIDRTB,X    IS WRITE ALLOWED?
2268  2CFA- 30 05              BMI PUTBYT0     YES,SKIP
2269  2CFC- A0 29              LDY =$29        WRITE NOT ALLOWED
2270  2CFE- 84 DB             STY FILERR

----------------------------------------------------------------------

R65 PASCAL: RANDOM ACCESS          26/10/23   R65 ASSEMBLER  PAGE 50

2271  2D00- 60                 RTS
2272                   *
2273  2D01- 98         PUTBYT0 TYA             FOR COMMENTS
2274  2D02- DD 51 03           CMP FIRCTB,X    SEE GETBYTE
2275  2D05- F0 05              BEQ PUTBYT1
2276                   *
2277  2D07- 20 BD 2C           JSR GETNEWR
2278  2D0A- D0 E4              BNE EXIT
2279                   *
2280  2D0C- 20 78 20   PUTBYT1 JSR CPOINT
2281  2D0F- A9 80              LDA =$80        SET UPDATED FLAG
2282  2D11- 9D 49 03           STA FIBPTB,X
2283  2D14- AC 33 03           LDY SAVRST
2284  2D17- A5 FE              LDA KCHAR       GET BACK KCHAR
2285  2D19- 91 FA              STA (POINT),Y
2286  2D1B- A0 00              LDY =0
2287  2D1D- 84 DB              STY FILERR
2288  2D1F- 60                 RTS
2289                   *
2290                   *
2291                   * TESTRA: TEST X FOR LEGAL RA-FILE
2292                   *
2293  2D20- 8E 35 03   TESTRA  STX CURSEQ
2294  2D23- EC 36 03           CPX MAXSEQ
2295  2D26- B0 0A              BCS TESTRA2
2296                   *
2297  2D28- BD 39 03   TESTRA1 LDA FIDRTB,X
2298  2D2B- 29 60              AND =$60
2299  2D2D- C9 60              CMP =$60
2300  2D2F- D0 03              BNE TESTRA3     SKIP, IF NOT OK
2301  2D31- 60                 RTS
2302                   *
2303  2D32- F0 F4      TESTRA2 BEQ TESTRA1
2304  2D34- 68         TESTRA3 PLA
2305  2D35- 68                 PLA
2306  2D36- A0 25              LDY =$25        FILE NUMBER NOT ALLOWED
2307  2D38- 84 DB              STY FILERR
2308  2D3A- 60                 RTS
2309                   *
2310                   * CLOSRA: CLOSE RA OR SEQUENTIAL FILE IN X
2311                   ******************************************
2312                   * ENTRY: FILE IN X
2313                   * EXIT: FILERR IN Y AND STATUS
2314                   *
2315  2D3B- BD 39 03   CLOSRA  LDA FIDRTB,X
2316  2D3E- 29 40              AND =$40        SEQUENTIAL FILE?
2317  2D40- D0 03              BNE CLOSRA1     NO, SKIP
2318  2D42- 4C 81 20           JMP CLOSE       YES, CLOSE IT
2319                   *
2320  2D45- 20 20 2D   CLOSRA1 JSR TESTRA      MUST BE RA-FILE

----------------------------------------------------------------------

R65 PASCAL: RANDOM ACCESS          26/10/23   R65 ASSEMBLER  PAGE 51

2321  2D48- BD 49 03           LDA FIBPTB,X    UPDATED?
2322  2D4B- F0 05              BEQ CLOSRA2     NO, SKIP
2323                   *
2324  2D4D- 20 AC 2C           JSR PUTTREC
2325  2D50- D0 0B              BNE CLOSRA3
2326                   *
2327  2D52- AE 35 03   CLOSRA2 LDX CURSEQ
2328  2D55- A9 00              LDA =0
2329  2D57- 9D 39 03           STA FIDRTB,X    CLOSE IT
2330  2D5A- A8                 TAY
2331  2D5B- 84 DB              STY FILERR
2332  2D5D- 60         CLOSRA3 RTS
2333                   *
2334                   ENDCODE EQU *
2335                   *
2336                           TIT R65 PASCAL: LABELS
2337                   *
2338  2D5E-                    END
LABELS=0157
ERRORS=00
RECORDS=73
