----------------------------------------------------------------------

GRAPHIC BASIC - GRAPHPACK          30/03/18   R65 ASSEMBLER  PAGE 01

0001                   * BASIC1:A ORIGINAL 7/1/1982, RECOVERED 3/2018
0002                   *
0003                   ******************************************
0004                   * R65 EXTENDED GRAPHIC BASIC VERSION 6.2 *
0005                   ******************************************
0006                   *
0007                   * VERSION 6.2 OPTIMIZED FOR R65 EMULATOR 2018
0008                   *
0009                           TIT GRAPHIC BASIC - VARIABLES
0010                   *
0011                   * PAGE ZERO VARIABLES
0012                   *
0013                           ORG 0
0014                   *
0015  0000-            OUTDEV  BSS 1   OUTPUT DEVICE NO (CRT=0)
0016  0001-            NUMPAD  BSS 1   NO OF PAD CHAR,CURR.DEV
0017  0002-            POS     BSS 1   POSITION IN LN, CURR.DEV.
0018                   *
0019  0003-            INBNUM  BSS 2   INPUT BUFFER NUMBER
0020  0005-            INTEG   BSS 2   INTEGER
0021  0007-            INBUFF  BSS 58  INPUT BUFFER
0022  0041-            CHRSAV  BSS 2   CHAR SAVE AND COMPARE
0023  0043-            INPNT   BSS 1   INPUT BUFFER POINTER
0024                   *
0025  0044-                    BSS 1
0026  0045-            RESTYP  BSS 2   CURRENT RESULT TYPE
0027  0047-            TEMP2   BSS 1   TEMPORARY
0028  0048-            FLAG1   BSS 1   ARRAY FLAG
0029  0049-            READFL  BSS 1   READ FLAG
0030  004A-                    BSS 1
0031  004B-                    BSS 1
0032  004C-            STRSTP  BSS 2   STRING STACK POINTER
0033  004E-                    BSS 1
0034  004F-            STRST   BSS 9   STRING STACK (3 LEVELS)
0035  0058-            TEMP1   BSS 2
0036  005A-            TEMP8   BSS 2
0037  005C-            TEMP9   BSS 5
0038                   *
0039  0061-            STPROG  BSS 2   START OF USER PROG
0040  0063-            STVAR   BSS 2   START OF VARIABLE TABLE
0041  0065-            EOVAR   BSS 2   END OF VARIABLE TABLE
0042  0067-            STSPAC  BSS 2   START OF AVAILABLE SPACE
0043  0069-            BTSTRG  BSS 2   BOTTOM OF STRINGS
0044  006B-            TPSTRG  BSS 2   TOP OF STRINGS
0045  006D-            TPMEM   BSS 2   TOP OF BASIC MEMORY
0046  006F-            LINE    BSS 2   CURRENT BASIC LINE
0047  0071-            LINSAV  BSS 2   SAVED LINE
0048  0073-            PNTSAV  BSS 2   SAVED BASIC POINTER
0049  0075-            TEMP7   BSS 2
0050  0077-            DATPNT  BSS 2   DATA POINTER

----------------------------------------------------------------------

GRAPHIC BASIC - VARIABLES          30/03/18   R65 ASSEMBLER  PAGE 02

0051  0079-            DTSPNT  BSS 2   DATA STATEMENT PONTER
0052  007B-            VARSYM  BSS 2   CURRENT VARIABLE SYMBOL
0053  007D-            VARSTP  BSS 2   CURRENT VAR STRING P
0054  007F-            TEMP3   BSS 2
0055                   *
0056  0081-                    BSS 1
0057  0082-                    BSS 1
0058  0083-            LOGIC   BSS 1   LOGIC OPERATOR
0059  0084-            TEMP6   BSS 2
0060  0086-            TEMP5   BSS 2
0061  0088-                    BSS 1
0062  0089-            SIZE    BSS 1   VARIABLE SIZE
0063  008A-                    BSS 1   SET TO 4C FOR BFUNC
0064  008B-            PNT1    BSS 2   POINTER
0065  008D-                    BSS 1
0066                   *
0067                   * BLLOCK AREA
0068                   *
0069  008E-            ENDB    BSS 2   END OF BLOCK
0070  0090-            BEGINB  BSS 2   BEGIN OF BLOCK
0071  0092-                    BSS 1
0072  0093-            POINTC  BSS 1   CURRENT DIGITS AFTER DEC.P.
0073  0094-            CURREX  BSS 1   CURRENT EXP IN NUMBER
0074  0095-            TRANSP  BSS 2   TRANSFER POINTER
0075                   *
0076                   * FLP ACCU
0077                   *
0078  0097-            EXP     BSS 1   EXPONENT
0079  0098-            MANT    BSS 4   MANTISSA
0080  009C-            SIGN    BSS 1   SIGN OF MANTISSA
0081                   *
0082  009D-            CURRSG  BSS 1   CURRENT SIGN IN NUMBER
0083  009E-                    BSS 1
0084  009F-            DYADIC  BSS 10  DYADIC HOLDING AREA
0085                   *
0086  00A9-            PC      BSS 2   PROGRAM COUNTER
0087  00AB-            PLMODE  BSS 1   PLOT MODE FLAG
0088  00AC-            GRPNT   BSS 2   GRAPHIC POINTER
0089  00AE-            XCURS   BSS 1   CRAPHICS CUSROR
0090  00AF-            YCURS   BSS 1
0091  00B0-            XINCR   BSS 2   LINE DRAWING INCR
0092  00B2-            YINCR   BSS 2
0093  00B4-            XLOW    BSS 1   LINE DRAWING ROUND REG
0094  00B5-            YLOW    BSS 1
0095  00B6-            GRCNT   BSS 1   GRAPHIC COUNTER
0096  00B7-            LENGHT  BSS 1   LINE LENGTH ESTIMATE
0097  00B8-            GRPAGE  BSS 1   GRAPHICS PAGE HIGH PNT
0098  00B9-            PVECT   BSS 2   PRINT VECTOR
0099  00BB-            POSTB   BSS 4   POSITION REGISTER SAVE
0100  00BF-            SAVEXY  BSS 2   REGISTER SAVE

----------------------------------------------------------------------

GRAPHIC BASIC - VARIABLES          30/03/18   R65 ASSEMBLER  PAGE 03

0101  00C1-            INPDEV  BSS 1   INPUT DEVICE
0102  00C2-            AUTOIN  BSS 1   AUTO INCREMENT
0103  00C3-            AFILNO  BSS 1   CODE OF ACTIVE FILE
0104  00C4-            IVECT   BSS 2   INPUT VECTOR
0105  00C6-            ISAVXY  BSS 2   SAVE X,Y FOR INCHR
0106  00C8-            FORMCS  BSS 1   SAVED FORMATTING CODE
0107  00C9-            FORMCD  BSS 1   FORMATTYIONG CODE
0108  00CA-            FORMNO  BSS 1   FORMATTING NUMBER
0109  00CB-            FORMFL  BSS 1   FORMATTING FIELD LENGTH
0110  00CC-            FORMCT  BSS 1   FORMATTING COUNTER
0111  00CD-            OUTSAV  BSS 1   FILE NO FOR OUT
0112  00CE-            TEMP4   BSS 3
0113  00D1-            RNDVAL  BSS 5   RANDOM VARIABLE
0114                   *
0115                           PAG

----------------------------------------------------------------------

GRAPHIC BASIC - VARIABLES          30/03/18   R65 ASSEMBLER  PAGE 04

0116                   *
0117                   * R65 MONITOR VARIABLES
0118                   *
0119                   FILFLG  EQU $DA
0120                   FILDRV  EQU $DC
0121                   VIDPNT  EQU $E9
0122                   CURPOS  EQU $EE
0123                   FILNAM  EQU $0301
0124                   FILCYC  EQU $0311
0125                   FILSTP  EQU $0312
0126                   FILLOC  EQU $0313
0127                   FILSA   EQU $031A
0128                   FILEA   EQU $031C
0129                   FILNM1  EQU $0320
0130                   FILCY1  EQU $0330
0131                   FILSA1  EQU $0331
0132                   CURSEQ  EQU $0335
0133                   MAXSEQ  EQU $0336
0134                   FILBU1  EQU $0338
0135                   FIDRTB  EQU $0339
0136                   FIDVTB  EQU $0341
0137                   FIRCTB  EQU $0351
0138                   GRX     EQU $03AE
0139                   GRY     EQU $03AF
0140                   GRC     EQU $03B0
0141                   GRN     EQU $03B1
0142                   VFLAG   EQU $1780
0143                   SFLAG   EQU $1781
0144                   CHARREG EQU $1785
0145                   NUMLIN  EQU $1789
0146                   NUMCHR  EQU $178A
0147                   VAUTOP  EQU $178C
0148                   CNTL30  EQU $17F2
0149                   *
0150  00D6-                    ORG $0380
0151                   *
0152  0380-            FISYTB  BSS 8           SYMBOLIC FLE NAMES
0153                   BUFFER  EQU $C000       BUFFER FOR RENUMBERING
0154                   *
0155                   * INTERFACE CONTROL
0156                   *
0157                   PORTB1  EQU $1400
0158                   EMUCOM  EQU $1430
0159                   LED16   EQU $1432
0160                   MULTA   EQU $14E0       HARDWARE MULTIPLY
0161                   MULTB   EQU $14E1
0162                   MULTR   EQU $14E2
0163                   TAPAOF  EQU $14E5
0164                   TAPBOF  EQU $14E7
0165                   USPAD   EQU $1700

----------------------------------------------------------------------

GRAPHIC BASIC - VARIABLES          30/03/18   R65 ASSEMBLER  PAGE 05

0166                   *
0167                           TIT GRAPHIC BASIC- CONFIGURATION
0168                           PAG

----------------------------------------------------------------------

GRAPHIC BASIC- CONFIGURATION       30/03/18   R65 ASSEMBLER  PAGE 06

0169                   * START OF PROGRAM
0170                   *
0171  0388-                    ORG $2000
0172                   *
0173                   * ENTRY VECTORS:
0174                   *
0175  2000- 4C 5D 29           JMP COLDST
0176  2003- 4C 7B 23           JMP WARMST
0177                   *
0178                   * BASIC USER RAM MEMORY
0179                   *
0180  2006- FF 4F      STRRAM  WRD $4FFF       START OF USER RAM
0181  2008- FF BF      ENDRAM  WRD $BFFF       END OF USER AREA
0182                   *
0183                   *
0184                   * MONITOR SUBROUTINE VECTORS
0185                   ****************************
0186                   * PART 1: MAIN EPROM ROUTINES (NO JMP)
0187                   *
0188                   GETKEY  EQU $E000
0189                   GETCHR  EQU $E003
0190                   GETLIN  EQU $E006
0191                   PRTCHR  EQU $E009
0192                   LOCRM   EQU $E00F
0193                   ICRTAL  EQU $E015
0194                   ICRTGR  EQU $E018
0195                   IGRAPH  EQU $E01E
0196                   PRTRSA  EQU $E836
0197                   *
0198                   PRTTTY  EQU $1EA0
0199                   GETTTY  EQU $1E5A
0200                   RDFILE  EQU $E815
0201                   WRFILE  EQU $E81B
0202                   DELETE  EQU $F00C
0203                   OPEN    EQU $F00F
0204                   CLOSE   EQU $F012
0205                   CLOSAL  EQU $F015
0206                   READCH  EQU $F018
0207                   WRITCH  EQU $F01B
0208                   *
0209                   EPLOT   EQU $C815
0210                   EPLOTCH EQU $C818
0211                   EBITMAP EQU $C81B
0212                   EDRAWX  EQU $C81E
0213                   EDRAWY  EQU $C821
0214                   EDRAWXY EQU $C824
0215                   *
0216                   * PART 2: OTHER EPROM SUBROUTINES
0217                   *
0218  200A- 4C 31 E2   CLRGRA  JMP $E231

----------------------------------------------------------------------

GRAPHIC BASIC- CONFIGURATION       30/03/18   R65 ASSEMBLER  PAGE 07

0219  200D- 4C 2E E5   GETLIN0 JMP $E52E
0220  2010- 4C BE ED   TDIR    JMP $EDBE
0221  2013- 4C 09 F0   DDIR    JMP $F009
0222  2016- 4C A1 F9   ADAPT   JMP $F9A1
0223  2019- 4C 28 FD   DIRECT  JMP $FD28
0224                   *
0225                   * ALPHAD: GO TO ALPHA DISPLAY, X SAVED
0226                   *
0227  201C- AD 80 17   ALPHAD  LDA VFLAG
0228  201F- 29 40              AND =$40
0229  2021- F0 0A              BEQ *+12
0230  2023- 8A                 TXA
0231  2024- 48                 PHA
0232  2025- 20 15 E0           JSR ICRTAL
0233  2028- 20 0F E0           JSR LOCRM
0234  202B- 68                 PLA
0235  202C- AA                 TAX
0236  202D- 60                 RTS
0237                   *
0238                   *
0239                   * BREAK TEST
0240                   *
0241  202E- AD 81 17   BREAKT  LDA SFLAG
0242  2031- 30 01              BMI *+3
0243  2033- 60                 RTS
0244  2034- 29 7F              AND =$7F
0245  2036- 8D 81 17           STA SFLAG
0246  2039- 38                 SEC
0247  203A- 4C 37 27           JMP END+3
0248                   *
0249                           TIT GRAPHIC BASIC - STRING TABLES
0250                           PAG

----------------------------------------------------------------------

GRAPHIC BASIC - STRING TABLES      30/03/18   R65 ASSEMBLER  PAGE 08

0251                   *
0252                   * TABLE OF COMMAND STRINGS
0253                   *
0254  203D- 46 4F 52   COMSTB  BYT 'FORMAT'+128
0254  2040- 4D 41 D4 
0255  2043- 46 4F D2           BYT 'FOR'+128
0256  2046- 4E 45 58           BYT 'NEXT'+128
0256  2049- D4 
0257  204A- 44 41 54           BYT 'DATA'+128
0257  204D- C1 
0258  204E- 45 4E C4           BYT 'END'+128
0259  2051- 49 4E 50           BYT 'INPUT'+128
0259  2054- 55 D4 
0260  2056- 44 49 CD           BYT 'DIM'+128
0261  2059- 52 45 41           BYT 'READ'+128
0261  205C- C4 
0262  205D- 4C 45 D4           BYT 'LET'+128
0263  2060- 47 4F 54           BYT 'GOTO'+128
0263  2063- CF 
0264  2064- 52 55 CE           BYT 'RUN'+128
0265  2067- 49 C6              BYT 'IF'+128
0266  2069- 52 45 53           BYT 'RESTORE'+128
0266  206C- 54 4F 52 
0266  206F- C5 
0267  2070- 47 4F 53           BYT 'GOSUB'+128
0267  2073- 55 C2 
0268  2075- 52 45 54           BYT 'RETURN'+128
0268  2078- 55 52 CE 
0269  207B- 52 45 CD           BYT 'REM'+128
0270  207E- 53 54 4F           BYT 'STOP'+128
0270  2081- D0 
0271  2082- 4F CE              BYT 'ON'+128
0272  2084- 57 41 49           BYT 'WAIT'+128
0272  2087- D4 
0273  2088- 4C 4F 41           BYT 'LOAD'+128
0273  208B- C4 
0274  208C- 53 54 4F           BYT 'STORE'+128
0274  208F- 52 C5 
0275  2091- 52 45 CE           BYT 'REN'+128
0276  2094- 44 45 C6           BYT 'DEF'+128
0277  2097- 50 4F 4B           BYT 'POKE'+128
0277  209A- C5 
0278  209B- 4F 55 D4           BYT 'OUT'+128
0279  209E- 50 52 49           BYT 'PRINT'+128
0279  20A1- 4E D4 
0280  20A3- 43 4F 4E           BYT 'CONT'+128
0280  20A6- D4 
0281  20A7- 4C 49 53           BYT 'LIST'+128
0281  20AA- D4 
0282  20AB- 43 4C D2           BYT 'CLR'+128

----------------------------------------------------------------------

GRAPHIC BASIC - STRING TABLES      30/03/18   R65 ASSEMBLER  PAGE 09

0283  20AE- 4D 45 52           BYT 'MERGE'+128
0283  20B1- 47 C5 
0284  20B3- 53 59 D3           BYT 'SYS'+128
0285  20B6- 4F 50 45           BYT 'OPEN'+128
0285  20B9- CE 
0286  20BA- 43 4C 4F           BYT 'CLOSE'+128
0286  20BD- 53 C5 
0287  20BF- 47 45 D4           BYT 'GET'+128
0288  20C2- 4E 45 D7           BYT 'NEW'+128
0289  20C5- 43 4F 50           BYT 'COPY'+128
0289  20C8- D9 
0290  20C9- 46 49 4C           BYT 'FILES'+128
0290  20CC- 45 D3 
0291  20CE- 50 4C 4F           BYT 'PLOT'+128
0291  20D1- D4 
0292  20D2- 4D 4F 56           BYT 'MOVE'+128
0292  20D5- C5 
0293  20D6- 44 52 41           BYT 'DRAW'+128
0293  20D9- D7 
0294  20DA- 41 55 54           BYT 'AUTO'+128
0294  20DD- CF 
0295  20DE- 44 49 D2           BYT 'DIR'+128
0296  20E1- 53 43 41           BYT 'SCALE'+128
0296  20E4- 4C C5 
0297  20E6- 44 45 4C           BYT 'DELETE'+128
0297  20E9- 45 54 C5 
0298  20EC- 50 41 43           BYT 'PACK'+128
0298  20EF- CB 
0299  20F0- 4D 41 D4           BYT 'MAT'+128
0300  20F3- FF                 BYT $FF
0301  20F4- FF                 BYT $FF
0302                   *
0303                   * TABLE OF OTHER TOKENS
0304                   *
0305  20F5- 54 41 42           BYT 'TAB('+128
0305  20F8- A8 
0306  20F9- 54 CF              BYT 'TO'+128
0307  20FB- 46 CE              BYT 'FN'+128
0308  20FD- 53 50 43          BYT 'SPC('+128
0308  2100- A8 
0309  2101- 54 48 45           BYT 'THEN'+128
0309  2104- CE 
0310  2105- 4E 4F D4           BYT 'NOT'+128
0311  2108- 53 54 45           BYT 'STEP'+128
0311  210B- D0 
0312  210C- AB                 BYT '+'+128
0313  210D- AD                 BYT '-'+128
0314  210E- AA                 BYT '*'+128
0315  210F- AF                 BYT '/'+128
0316  2110- DE                 BYT '^'+128

----------------------------------------------------------------------

GRAPHIC BASIC - STRING TABLES      30/03/18   R65 ASSEMBLER  PAGE 10

0317  2111- 41 4E C4           BYT 'AND'+128
0318  2114- 4F D2              BYT 'OR'+128
0319  2116- BE                 BYT '>'+128
0320  2117- BD                 BYT '='+128
0321  2118- BC                 BYT '<'+128
0322  2119- 53 47 CE           BYT 'SGN'+128
0323  211C- 49 4E D4           BYT 'INT'+128
0324  211F- 41 42 D3           BYT 'ABS'+128
0325  2122- 55 53 D2           BYT 'USR'+128
0326  2125- 53 54 C1           BYT 'STA'+128
0327  2128- 50 4F D3           BYT 'POS'+128
0328  212B- 53 51 D2           BYT 'SQR'+128
0329  212E- 52 4E C4           BYT 'RND'+128
0330  2131- 4C 4F C7           BYT 'LOG'+128
0331  2134- 45 58 D0           BYT 'EXP'+128
0332  2137- 43 4F D3           BYT 'COS'+128
0333  213A- 53 49 CE           BYT 'SIN'+128
0334  213D- 54 41 CE           BYT 'TAN'+128
0335  2140- 41 54 CE           BYT 'ATN'+128
0336  2143- 50 45 45           BYT 'PEEK'+128
0336  2146- CB 
0337  2147- 4C 45 CE           BYT 'LEN'+128
0338  214A- 53 54 52           BYT 'STR$'+128
0338  214D- A4 
0339  214E- 56 41 CC           BYT 'VAL'+128
0340  2151- 41 53 C3           BYT 'ASC'+128
0341  2154- 43 48 52           BYT 'CHR$'+128
0341  2157- A4 
0342  2158- 4C 45 46           BYT 'LEFT$'+128
0342  215B- 54 A4 
0343  215D- 52 49 47           BYT 'RIGHT$'+128
0343  2160- 48 54 A4 
0344  2163- 4D 49 44           BYT 'MID$'+128
0344  2166- A4 
0345  2167- 50 C9              BYT 'PI'+128
0346  2169- 00                 BYT 0
0347                   *
0348                   *
0349                   * COMMAND VECTORS
0350                   *
0351  216A- C0 49      STVECT  WRD FORMAT-1
0352  216C- 0F 30              WRD FOR-1
0353  216E- 88 32              WRD NEXT-1
0354  2170- F7 27              WRD DATA-1
0355  2172- 33 27              WRD END-1
0356  2174- CD 30              WRD INPUT-1
0357  2176- F8 39              WRD DIM-1
0358  2178- 46 31              WRD READ-1
0359  217A- 54 2A              WRD LET-1
0360  217C- A5 27              WRD GOTO-1

----------------------------------------------------------------------

GRAPHIC BASIC - STRING TABLES      30/03/18   R65 ASSEMBLER  PAGE 11

0361  217E- 80 27              WRD RUN-1
0362  2180- 30 2A              WRD IF-1
0363  2182- 59 27              WRD RESTOR-1
0364  2184- 88 27              WRD GOSUB-1
0365  2186- D7 27              WRD RETURN-1
0366  2188- 43 2A              WRD REMARK-1
0367  218A- 31 27              WRD STOP-1
0368  218C- 89 30              WRD ON-1
0369  218E- 9B 43              WRD WAIT-1
0370  2190- 23 4E              WRD NLOAD-1
0371  2192- 64 41              WRD STORE-1
0372  2194- 3C 4B              WRD RENUMB-1
0373  2196- 38 3C              WRD DEF-1
0374  2198- 1C 3E              WRD POKE-1
0375  219A- F0 4A              WRD OUT-1
0376  219C- E1 2A              WRD PRINT-1
0377  219E- 16 2A              WRD CONT-1
0378  21A0- E8 25              WRD LIST-1
0379  21A2- 7B 27              WRD CLR-1
0380  21A4- 48 4A              WRD MERGE-1
0381  21A6- 56 3E              WRD SYS-1
0382  21A8- 0B 44              WRD OPENBS-1
0383  21AA- 42 45              WRD CLOSEBS-1
0384  21AC- AC 30              WRD GET-1
0385  21AE- 91 25              WRD NEW-1
0386  21B0- 37 46              WRD COPY-1
0387  21B2- BF 46              WRD FILES-1
0388  21B4- D9 42              WRD PLOT-1
0389  21B6- 2B 43              WRD MOVE-1
0390  21B8- 34 43              WRD DRAW-1
0391  21BA- C0 43              WRD AUTO-1
0392  21BC- 58 4A              WRD DIR-1
0393  21BE- C5 27              WRD UNDEFS-1    SCALE
0394  21C0- 70 4A              WRD DELBAS-1
0395  21C2- C5 27              WRD UNDEFS-1    PACK
0396  21C4- C5 27              WRD UNDEFS-1    MAT
0397                   *
0398                   *
0399                   * ERROR STRINGS:
0400                   *
0401  21C6- 4E 4F 20   ERRSTR   BYT 'NO MATCHING FOR'+128
0401  21C9- 4D 41 54 
0401  21CC- 43 48 49 
0401  21CF- 4E 47 20 
0401  21D2- 46 4F D2 
0402  21D5- 53 59 4E           BYT 'SYNTAX'+128
0402  21D8- 54 41 D8 
0403  21DB- 4E 4F 20           BYT 'NO MATCHING GOSUB'+128
0403  21DE- 4D 41 54 
0403  21E1- 43 48 49 

----------------------------------------------------------------------

GRAPHIC BASIC - STRING TABLES      30/03/18   R65 ASSEMBLER  PAGE 12

0403  21E4- 4E 47 20 
0403  21E7- 47 4F 53 
0403  21EA- 55 C2 
0404  21EC- 44 41 54           BYT 'DATA'+128
0404  21EF- C1 
0405  21F0- 51 55 41           BYT 'QUANTITY'+128
0405  21F3- 4E 54 49 
0405  21F6- 54 D9 
0406  21F8- 4F 56 45          BYT 'OVERFLOW'+128
0406  21FB- 52 46 4C 
0406  21FE- 4F D7 
0407  2200- 4F 55 54           BYT 'OUT OF MEMORY'+128
0407  2203- 20 4F 46 
0407  2206- 20 4D 45 
0407  2209- 4D 4F 52 
0407  220C- D9 
0408  220D- 55 4E 44           BYT 'UNDEF STATEMENT'+128
0408  2210- 45 46 20 
0408  2213- 53 54 41 
0408  2216- 54 45 4D 
0408  2219- 45 4E D4 
0409  221C- 55 4E 44           BYT 'UNDEF VARIABLE'+128
0409  221F- 45 46 20 
0409  2222- 56 41 52 
0409  2225- 49 41 42 
0409  2228- 4C C5 
0410  222A- 52 45 44           BYT 'REDIMENSION'+128
0410  222D- 49 4D 45 
0410  2230- 4E 53 49 
0410  2233- 4F CE 
0411  2235- 53 55 42           BYT 'SUBSCRIPT'+128
0411  2238- 53 43 52 
0411  223B- 49 50 D4 
0412  223E- 44 49 56           BYT 'DIVISION BY ZERO'+128
0412  2241- 49 53 49 
0412  2244- 4F 4E 20 
0412  2247- 42 59 20 
0412  224A- 5A 45 52 
0412  224D- CF 
0413  224E- 49 4C 4C           BYT 'ILLEGAL DIRECT'+128
0413  2251- 45 47 41 
0413  2254- 4C 20 44 
0413  2257- 49 52 45 
0413  225A- 43 D4 
0414  225C- 54 59 50           BYT 'TYPE MISSMATCH'+128
0414  225F- 45 20 4D 
0414  2262- 49 53 53 
0414  2265- 4D 41 54 
0414  2268- 43 C8 
0415  226A- 53 54 52           BYT 'STRING TOO LONG'+128

----------------------------------------------------------------------

GRAPHIC BASIC - STRING TABLES      30/03/18   R65 ASSEMBLER  PAGE 13

0415  226D- 49 4E 47 
0415  2270- 20 54 4F 
0415  2273- 4F 20 4C 
0415  2276- 4F 4E C7 
0416  2279- 46 4F 52           BYT 'FORMULA TOO COMPLEX'+128
0416  227C- 4D 55 4C 
0416  227F- 41 20 54 
0416  2282- 4F 4F 20 
0416  2285- 43 4F 4D 
0416  2288- 50 4C 45 
0416  228B- D8 
0417  228C- 43 4F 4E           BYT 'CONTINUE'+128
0417  228F- 54 49 4E 
0417  2292- 55 C5 
0418  2294- 55 4E 44           BYT 'UNDEF FUNCTION'+128
0418  2297- 45 46 20 
0418  229A- 46 55 4E 
0418  229D- 43 54 49 
0418  22A0- 4F CE 
0419                   *
0420                   * MESSAGE STRINGS:
0421                   *
0422  22A2- 20 45 52   ERRORM  BYT ' ERROR',0
0422  22A5- 52 4F 52 
0422  22A8- 00 
0423  22A9- 0D 0A 52           BYT $D,$A,'READY',$D,$A,0
0423  22AC- 45 41 44 
0423  22AF- 59 0D 0A 
0423  22B2- 00 
0424  22B3- 0D 0A 42           BYT $D,$A,'BREAK',0
0424  22B6- 52 45 41 
0424  22B9- 4B 00 
0425  22BB- 20 49 4E           BYT ' IN LINE',0
0425  22BE- 20 4C 49 
0425  22C1- 4E 45 00 
0426                   *
0427                           TIT GRAPHIC BASIC - EDITOR
0428                           PAG

----------------------------------------------------------------------

GRAPHIC BASIC - EDITOR             30/03/18   R65 ASSEMBLER  PAGE 14

0429                   *
0430                   * MKROOM: MAKE ROOM IN MEMORY
0431                   *****************************
0432                   * BEGINB AND ENDB DEFINE THE BLOCK. A MOVE IS
0433                   * DONE BETWEEN ENDB AND BTSTRG, IF ENOUGH
0434                   * FREE SPACE, INSERTION IS NOT DONE IN THIS
0435                   * SUBROUTINE. TEMP1 IS USED, ENDB MUST ALSO
0436                   * BE IN A,Y.
0437                   *
0438  22C4- 20 07 23   MKROOM  JSR TSROOM      ENOUGH EMPTY?
0439  22C7- 85 67              STA STSPAC
0440  22C9- 84 68              STY STSPAC+1
0441  22CB- 38                 SEC             COMPUTE SIZE TO TRANSF
0442  22CC- A5 90              LDA BEGINB
0443  22CE- E5 95              SBC TRANSP
0444  22D0- 85 58              STA TEMP1       SAVE IN Y AND TEMP1
0445  22D2- A8                 TAY
0446  22D3- A5 91              LDA BEGINB+1
0447  22D5- E5 96              SBC TRANSP+1
0448  22D7- AA                 TAX             SAVE IN X
0449  22D8- E8                 INX
0450  22D9- 98                 TYA
0451  22DA- F0 23              BEQ MKRM2       BRANCH IF SIZE LOW = 0
0452  22DC- A5 90              LDA BEGINB      SUBTRACT SIZE LOW FROM
0453  22DE- 38                 SEC             BEGINB AND RESTORE
0454  22DF- E5 58              SBC TEMP1
0455  22E1- 85 90              STA BEGINB
0456  22E3- B0 03              BCS *+5
0457  22E5- C6 91              DEC BEGINB+1
0458  22E7- 38                 SEC
0459  22E8- A5 8E              LDA ENDB        SAME FOR ENDB
0460  22EA- E5 58              SBC TEMP1
0461  22EC- 85 8E              STA ENDB
0462  22EE- B0 08              BCS MKRM1+4
0463  22F0- C6 8F              DEC ENDB+1
0464  22F2- 90 04              BCC MKRM1+4
0465                   *
0466  22F4- B1 90      MKRM1   LDA (BEGINB),Y  TRANSFER PARTIAL PAGE
0467  22F6- 91 8E              STA (ENDB),Y
0468  22F8- 88                 DEY
0469  22F9- D0 F9              BNE MKRM1
0470                   *
0471  22FB- B1 90              LDA (BEGINB),Y  TRANSFER FULL PAGES
0472  22FD- 91 8E              STA (ENDB),Y
0473  22FF- C6 91     MKRM2   DEC BEGINB+1
0474  2301- C6 8F              DEC ENDB+1
0475  2303- CA                 DEX             COUNT FULL PAGES
0476  2304- D0 F2              BNE MKRM1+4
0477  2306- 60                 RTS
0478                   *

----------------------------------------------------------------------

GRAPHIC BASIC - EDITOR             30/03/18   R65 ASSEMBLER  PAGE 15

0479                   *
0480                   * TSROOM: TEST FREE ROOM IN MEMORY
0481                   **********************************
0482                   * INPUT IA A,Y. STRINGS ARE PACKED ONLY IF NOT
0483                   * ENOUGH FREE SPACE. ERROR IF STRINGS PACKED
0484                   * AND STILL A,Y >= BTSTRG. 12 BYTES ON STACK
0485                   * AND SUBROUTINE PKSTRG USED
0486                   *
0487  2307- C4 6A      TSROOM  CPY BTSTRG+1    IF A,Y < BTSTRG
0488  2309- 90 FB              BCC TSROOM-1    THEN RETURN
0489  230B- D0 02              BNE *+4
0490  230D- C5 69              CMP BTSTRG
0491  230F- 90 F5              BCC TSROOM-1
0492                   *
0493  2311- 48                 PHA             ELSE PACK STRINGS
0494  2312- A2 09              LDX =9          SAVE A AND BLOCK AREA
0495  2314- 98                 TYA             AND Y
0496  2315- 48                 PHA
0497  2316- B5 8D              LDA ENDB-1,X
0498  2318- CA                 DEX
0499  2319- 10 FA              BPL *-4
0500                   *
0501  231B- 20 A2 2C           JSR PKSTRG      PACK STRINGS
0502                   *
0503  231E- A0 F7              LDY =$F7        RESTORE BLOCK AREA
0504  2320- 68                 PLA             AND Y
0505  2321- 95 97              STA TRANSP+2,X
0506  2323- E8                 INX
0507  2324- 30 FA              BMI *-4
0508  2326- 68                 PLA
0509  2327- A8                 TAY
0510  2328- 68                 PLA
0511                   *
0512  2329- C4 6A              CPY BTSTRG+1    ERROR,IF STILL A,Y
0513  232B- 90 06              BCC *+8         >= BTSTRG
0514  232D- D0 12              BNE OUTMEM
0515  232F- C5 69              CMP BTSTRG
0516  2331- B0 0E              BCS OUTMEM
0517  2333- 60                 RTS
0518                   *
0519                   *
0520                   * TSSTK: TEST STACK ROOM
0521                   ************************
0522                   * ERROR, IF NOT 2*A+$40 FREE BYTES ON STACK
0523                   *
0524  2334- 0A         TSSTK   ASL A
0525  2335- 69 40              ADC =$40
0526  2337- B0 08              BCS OUTMEM
0527  2339- 85 58              STA TEMP1
0528  233B- BA                 TSX

----------------------------------------------------------------------

GRAPHIC BASIC - EDITOR             30/03/18   R65 ASSEMBLER  PAGE 16

0529  233C- E4 58              CPX TEMP1
0530  233E- 90 01              BCC OUTMEM
0531  2340- 60                 RTS
0532                   *
0533                   *
0534  2341- A2 3A      OUTMEM  LDX =$3A        OUT OF MEMORY ERROR
0535                   *
0536                   *
0537                   * ERROR: PRINT ERROR MESSAGE
0538                   ****************************
0539                   * SAVES LINE FOR CONT, GOES INTO COMMAND MODE
0540                   *
0541  2343- AD 80 17   ERROR   LDA VFLAG       RESET INVERSE VIDEO
0542  2346- 29 67              AND =$67        AND CLEAR DISPLAY FLAG
0543  2348- 8D 80 17           STA VFLAG
0544  234B- A5 00              LDA OUTDEV      CHECK OUTPUT DEVICE
0545  234D- F0 07              BEQ *+9         MUST BE VIDEO
0546  234F- 20 B8 42           JSR RSTDEV
0547  2352- A9 00              LDA =0
0548  2354- 85 00              STA OUTDEV
0549                   *
0550  2356- 20 9D 24           JSR CRLF
0551  2359- 20 95 45           JSR RSTO1
0552                   *
0553  235C- BD C6 21           LDA ERRSTR,X    PRINT ERROR MESSAGE
0554  235F- 48                 PHA
0555  2360- 29 7F              AND =$7F        MASK OFF BIT 7
0556  2362- 20 C4 2F           JSR OUTCHR
0557  2365- E8                 INX
0558  2366- 68                 PLA
0559  2367- 10 F3              BPL *-11
0560  2369- 20 C5 25           JSR SAVE        SAVE PC AND BASIC LINE
0561  236C- A9 A2              LDA =<ERRORM
0562  236E- A0 22              LDY =>ERRORM
0563  2370- 20 93 28   STOP2   JSR OUTSTR
0564  2373- A4 70              LDY LINE+1      FF MEANS NOT RUNNING
0565  2375- C8                 INY
0566  2376- F0 03              BEQ WARMST
0567  2378- 20 07 33           JSR OUTLIN      PRINT LINE NO
0568                   *
0569                   *
0570                   * WARMST: WARM START AND COMMAND ENTRY
0571                   **************************************
0572                   *
0573  237B- A9 A9      WARMST  LDA =<(ERRORM+7)
0574  237D- A0 22              LDY =>(ERRORM+7)
0575  237F- 20 93 28           JSR OUTSTR
0576  2382- 20 78 24   WARM1   JSR INLIN       INPUT LINE
0577  2385- 86 A9              STX PC
0578  2387- 84 AA              STY PC+1

----------------------------------------------------------------------

GRAPHIC BASIC - EDITOR             30/03/18   R65 ASSEMBLER  PAGE 17

0579  2389- 20 15 27           JSR FETCH
0580  238C- F0 ED              BEQ WARMST      NEXT LINE IF EMPTY
0581  238E- A2 00              LDX =0
0582  2390- 8E 32 14           STX LED16
0583  2393- 8E 33 14           STX LED16+1
0584  2396- A2 FF              LDX =$FF        CLEAR RUN FLAG
0585  2398- 86 70              STX LINE+1
0586  239A- 90 0A              BCC INSLIN      NUMBER >> INSERT LINE
0587  239C- 20 BC 24           JSR ANALYZ
0588  239F- A9 00              LDA =0
0589  23A1- 85 C2              STA AUTOIN      CLEAR AUTO NUMBERING
0590  23A3- 4C F4 26           JMP EXCODE      NO NUMBER >> EXECUTE
0591                   *
0592                   *
0593                   * INSLIN: INSERT LINE
0594                   *********************
0595                   *
0596  23A6- 20 AC 23   INSLIN  JSR INSL0
0597  23A9- 4C 31 24           JMP ADLNPN
0598                   *
0599  23AC- 20 57 28   INSL0   JSR FETCHI      FETCH LINE NUMBER
0600  23AF- 20 BC 24           JSR ANALYZ
0601  23B2- 84 43              STY INPNT       INPUT BUFFER PNT SAVE
0602  23B4- 20 63 25           JSR SEARLN
0603  23B7- 90 44              BCC INSL1+14    SKIP, IF LINE NOT FOUND
0604                   *
0605  23B9- A0 01              LDY =1          CLEAR EXISTING LINE
0606  23BB- B1 95              LDA (TRANSP),Y
0607  23BD- 85 8F              STA ENDB+1
0608  23BF- A5 63              LDA STVAR
0609  23C1- 85 8E              STA ENDB
0610  23C3- A5 96              LDA TRANSP+1
0611  23C5- 85 91              STA BEGINB+1
0612  23C7- A5 95              LDA TRANSP
0613  23C9- 88                 DEY
0614  23CA- F1 95              SBC (TRANSP),Y
0615  23CC- 18                 CLC
0616  23CD- 65 63              ADC STVAR
0617  23CF- 85 63              STA STVAR
0618  23D1- 85 90              STA BEGINB
0619  23D3- A5 64              LDA STVAR+1
0620  23D5- 69 FF              ADC =$FF
0621  23D7- 85 64              STA STVAR+1
0622  23D9- E5 96              SBC TRANSP+1
0623  23DB- AA                 TAX
0624  23DC- 38                 SEC
0625  23DD- A5 95              LDA TRANSP
0626  23DF- E5 63              SBC STVAR
0627  23E1- A8                 TAY
0628  23E2- B0 03              BCS *+5

----------------------------------------------------------------------

GRAPHIC BASIC - EDITOR             30/03/18   R65 ASSEMBLER  PAGE 18

0629  23E4- E8                 INX
0630  23E5- C6 91              DEC BEGINB+1
0631  23E7- 18                 CLC
0632  23E8- 65 8E              ADC ENDB
0633  23EA- 90 03              BCC *+5
0634  23EC- C6 8F              DEC ENDB+1
0635  23EE- 18                 CLC
0636  23EF- B1 8E      INSL1   LDA (ENDB),Y
0637  23F1- 91 90              STA (BEGINB),Y
0638  23F3- C8                 INY
0639  23F4- D0 F9              BNE INSL1
0640  23F6- E6 91              INC BEGINB+1
0641  23F8- E6 8F              INC ENDB+1
0642  23FA- CA                 DEX             COUNT FULL PAGES
0643  23FB- D0 F2              BNE INSL1
0644                   *
0645  23FD- A5 07              LDA INBUFF
0646  23FF- F0 2F             BEQ INSLE       SKIP, IF LINE EMPTY
0647  2401- A5 6D              LDA TPMEM
0648  2403- A4 6E              LDY TPMEM+1
0649  2405- 85 69              STA BTSTRG      CLEAR EXISTING STRINGS
0650  2407- 84 6A              STY BTSTRG+1
0651  2409- A5 63              LDA STVAR
0652  240B- 85 90              STA BEGINB
0653  240D- 65 43              ADC INPNT
0654  240F- 85 8E              STA ENDB
0655  2411- A4 64              LDY STVAR+1
0656  2413- 84 91              STY BEGINB+1
0657  2415- 90 01              BCC *+3
0658  2417- C8                 INY
0659  2418- 84 8F              STY ENDB+1
0660  241A- 20 C4 22           JSR MKROOM      MAKE ROOM FOR LINE
0661  241D- A5 67              LDA STSPAC
0662  241F- A4 68              LDY STSPAC+1
0663  2421- 85 63              STA STVAR       CLEAR VARIABLES
0664  2423- 84 64              STY STVAR+1
0665  2425- A4 43              LDY INPNT
0666  2427- 88                 DEY
0667  2428- B9 03 00           LDA INBNUM,Y    INSERT CODE
0668  242B- 91 95              STA (TRANSP),Y
0669  242D- 88                 DEY
0670  242E- 10 F8              BPL *-6
0671  2430- 60         INSLE   RTS
0672                   *
0673  2431- 20 A8 25   ADLNPN  JSR CLR1-3      CLEAR VAR ETC
0674  2434- 20 4B 24           JSR ADLNP0      ADJUST LINE ADDRESSES
0675  2437- A5 C2              LDA AUTOIN
0676  2439- D0 03              BNE *+5
0677  243B- 4C 82 23           JMP WARM1
0678  243E- 18                 CLC

----------------------------------------------------------------------

GRAPHIC BASIC - EDITOR             30/03/18   R65 ASSEMBLER  PAGE 19

0679  243F- 65 05              ADC INTEG
0680  2441- A4 06              LDY INTEG+1
0681  2443- 90 01              BCC *+3
0682  2445- C8                 INY
0683  2446- AA                 TAX
0684  2447- 98                 TYA
0685  2448- 4C DF 43           JMP AUTOIN2
0686                   *
0687                   *
0688                   * ADLNP0: ADJUST LINE ADDRESSES
0689                   *******************************
0690                   *
0691  244B- A5 61      ADLNP0  LDA STPROG
0692  244D- A4 62              LDY STPROG+1
0693  244F- 85 58              STA TEMP1
0694  2451- 84 59              STY TEMP1+1
0695  2453- 18                 CLC
0696  2454- A0 01              LDY =1
0697  2456- B1 58              LDA (TEMP1),Y
0698  2458- D0 01              BNE *+3         END OF PROGRAM?
0699  245A- 60                 RTS
0700  245B- A0 04              LDY =4
0701  245D- C8                 INY
0702  245E- B1 58              LDA (TEMP1),Y   SEARCH EOL
0703  2460- D0 FB              BNE *-3
0704  2462- C8                 INY
0705  2463- 98                 TYA
0706  2464- 65 58              ADC TEMP1
0707  2466- AA                 TAX
0708  2467- A0 00              LDY =0
0709  2469- 91 58              STA (TEMP1),Y
0710  246B- A5 59              LDA TEMP1+1
0711  246D- 69 00              ADC =0
0712  246F- C8                 INY
0713  2470- 91 58              STA (TEMP1),Y
0714  2472- 86 58              STX TEMP1
0715  2474- 85 59              STA TEMP1+1
0716  2476- D0 DC              BNE ADLNP0+9    ALLWAYS TAKEN
0717                   *
0718                   *
0719                   * INLIN: INPUT LINE FROM KEYBOARD
0720                   *********************************
0721                   * INPUT MUST BE FROM DEVICE 0, R65 LINE EDITOR
0722                   * IS USED, GETLIN AND NUMCHR ARE MONITOR LABELS
0723                   * IF ENTERED WITH CURPOS#0, FIRST PART SAVED
0724                   *
0725  2478- A6 EE      INLIN   LDX CURPOS
0726  247A- 20 0D 20           JSR GETLIN0
0727  247D- A2 00              LDX =0
0728  247F- B1 E9              LDA (VIDPNT),Y

----------------------------------------------------------------------

GRAPHIC BASIC - EDITOR             30/03/18   R65 ASSEMBLER  PAGE 20

0729  2481- 29 7F              AND =$7F
0730  2483- 95 07              STA INBUFF,X
0731  2485- E8                 INX
0732  2486- C8                 INY
0733  2487- CC 8A 17           CPY NUMCHR
0734  248A- 90 F3              BCC *-11
0735  248C- F0 F1              BEQ *-13
0736                   *
0737  248E- CA                 DEX
0738  248F- 30 06              BMI *+8         EMPTY LINE
0739  2491- B5 07              LDA INBUFF,X
0740  2493- C9 20              CMP =$20        INGNORE ENDING BLANKS
0741  2495- F0 F7              BEQ *-7
0742  2497- A0 00              LDY =0
0743  2499- 94 08              STY INBUFF+1,X
0744  249B- A2 06              LDX =<(INBUFF-1)
0745                   *
0746                   *
0747                   * CRLF: EXECUTE A CRLF (X,Y SAVED)
0748                   **********************************
0749                   *
0750  249D- A9 0D      CRLF    LDA =$D
0751  249F- 20 C4 2F           JSR OUTCHR
0752  24A2- A9 0A              LDA =$A
0753  24A4- 20 C4 2F           JSR OUTCHR
0754  24A7- A5 00      PADOUT  LDA OUTDEV
0755  24A9- F0 10              BEQ *+18
0756  24AB- 8A                 TXA
0757  24AC- 48                 PHA
0758  24AD- A6 01              LDX NUMPAD
0759  24AF- F0 08              BEQ *+10
0760  24B1- A9 00              LDA =0
0761  24B3- 20 C4 2F           JSR OUTCHR
0762  24B6- CA                 DEX
0763  24B7- D0 FA              BNE *-4
0764  24B9- 68                 PLA
0765  24BA- AA                 TAX
0766  24BB- 60                 RTS
0767                   *
0768                   *
0769                   *
0770                   * ANALYZ: ANALYZE INPUT
0771                   ***********************
0772                   *
0773  24BC- A6 A9      ANALYZ  LDX PC
0774  24BE- A0 04              LDY =4
0775  24C0- 84 47              STY TEMP2       FLAG FOR ",DATA,REM
0776  24C2- B5 00              LDA 0,X         GET CHAR FROM INBUFF
0777  24C4- 20 16 20           JSR ADAPT
0778                   *

----------------------------------------------------------------------

GRAPHIC BASIC - EDITOR             30/03/18   R65 ASSEMBLER  PAGE 21

0779  24C7- C9 20              CMP =$20
0780  24C9- F0 40              BEQ ANA20       INSERT BLANK AS IT IS
0781  24CB- 85 41              STA CHRSAV
0782  24CD- C9 22              CMP ='"'
0783  24CF- F0 5E              BEQ ANA25+8     STRING
0784  24D1- 24 47              BIT TEMP2
0785  24D3- 70 36              BVS ANA20       IF ",DATA,REM
0786  24D5- C9 3F              CMP ='?'
0787  24D7- D0 04              BNE *+6
0788  24D9- A9 99              LDA =$99        CODE FOR PRINT
0789  24DB- D0 2E              BNE ANA20
0790  24DD- C9 30              CMP =$30        NUMBER?
0791  24DF- 90 04              BCC *+6
0792  24E1- C9 3C              CMP =$3C
0793  24E3- 90 26              BCC ANA20
0794                   *
0795  24E5- 84 A7              STY DYADIC+8
0796  24E7- A0 3D              LDY =<COMSTB
0797  24E9- 84 CE              STY TEMP4
0798  24EB- A0 20              LDY =>COMSTB
0799  24ED- 84 CF              STY TEMP4+1
0800  24EF- A0 00              LDY =0
0801  24F1- 84 43              STY INPNT
0802  24F3- 88                 DEY
0803  24F4- 86 A9              STX PC
0804  24F6- CA                 DEX
0805  24F7- C8         ANA10   INY
0806  24F8- E8                 INX
0807  24F9- B5 00              LDA 0,X
0808  24FB- 20 16 20           JSR ADAPT
0809  24FE- 38                 SEC
0810  24FF- F1 CE             SBC (TEMP4),Y   COMPARE WITH TOKEN
0811  2501- F0 F4              BEQ ANA10
0812  2503- C9 80              CMP =$80
0813  2505- D0 2F              BNE ANA30       END MATCH
0814  2507- 05 43              ORA INPNT
0815  2509- A4 A7              LDY DYADIC+8
0816                   *
0817  250B- E8         ANA20   INX
0818  250C- C8                 INY
0819  250D- 99 02 00           STA INBUFF-5,Y
0820  2510- B9 02 00           LDA INBUFF-5,Y
0821  2513- F0 38              BEQ ANA35       END MARK
0822  2515- 38                 SEC
0823  2516- E9 3A              SBC =':'
0824  2518- F0 04              BEQ *+6
0825  251A- C9 49              CMP =$49        A=$83: DATA
0826  251C- D0 02              BNE *+4
0827  251E- 85 47              STA TEMP2
0828  2520- 38                 SEC

----------------------------------------------------------------------

GRAPHIC BASIC - EDITOR             30/03/18   R65 ASSEMBLER  PAGE 22

0829  2521- E9 55              SBC =$55        A=$8F: REM
0830  2523- D0 9D              BNE ANALYZ+6
0831  2525- 85 41              STA CHRSAV
0832  2527- B5 00      ANA25   LDA 0,X         GET WITHOUT ADAPT
0833  2529- F0 E0              BEQ ANA20
0834  252B- C5 41              CMP CHRSAV
0835  252D- F0 DC              BEQ ANA20
0836  252F- C8                 INY
0837  2530- 99 02 00           STA INBUFF-5,Y
0838  2533- E8                 INX
0839  2534- D0 F1              BNE ANA25       ALLWAYS TAKEN
0840                   *
0841  2536- A6 A9      ANA30   LDX PC
0842  2538- E6 43              INC INPNT
0843  253A- 88                 DEY
0844  253B- C8                 INY
0845  253C- B1 CE              LDA (TEMP4),Y
0846  253E- 10 FB              BPL *-3
0847  2540- C8                 INY
0848  2541- B1 CE              LDA (TEMP4),Y
0849  2543- D0 10              BNE ANA35+8
0850  2545- B5 00              LDA 0,X
0851  2547- 20 16 20           JSR ADAPT
0852  254A- 4C 09 25           JMP ANA20-2     NOT FOUND IN TABLE
0853                   *
0854  254D- 99 04 00   ANA35   STA INBUFF-3,Y
0855  2550- A9 06              LDA =<INBUFF-1
0856  2552- 85 A9              STA PC
0857  2554- 60                 RTS
0858                   *
0859  2555- 18                 CLC
0860  2556- 98                 TYA
0861  2557- 65 CE              ADC TEMP4
0862  2559- 85 CE              STA TEMP4
0863  255B- 90 02              BCC *+4
0864  255D- E6 CF              INC TEMP4+1
0865  255F- A0 00              LDY =0
0866  2561- F0 96              BEQ ANA10+2     ALLWAYS TAKEN
0867                   *
0868                   *
0869                   * SEARCH LINE: SEARCH BASIC LINE
0870                   ********************************
0871                   * INPUT IS LINE NO IN INTGER, OUTPUT IS ADDRESS
0872                   * IN TRANSP, C=1IFLINE FOUND
0873                   *
0874  2563- A5 61      SEARLN  LDA STPROG
0875  2565- A6 62              LDX STPROG+1
0876                   *
0877  2567- A0 01              LDY =1
0878  2569- 85 95              STA TRANSP

----------------------------------------------------------------------

GRAPHIC BASIC - EDITOR             30/03/18   R65 ASSEMBLER  PAGE 23

0879  256B- 86 96              STX TRANSP+1
0880  256D- B1 95              LDA (TRANSP),Y
0881  256F- F0 1F              BEQ SEARL9-1    END OF PROGRAM
0882  2571- C8                 INY
0883  2572- C8                 INY
0884  2573- A5 06              LDA INTEG+1
0885  2575- D1 95              CMP (TRANSP),Y
0886  2577- 90 18              BCC SEARL9
0887  2579- F0 03              BEQ *+5
0888  257B- 88                 DEY
0889  257C- D0 09              BNE SEARL5
0890  257E- A5 05              LDA INTEG
0891  2580- 88                 DEY
0892  2581- D1 95              CMP (TRANSP),Y
0893  2583- 90 0C              BCC SEARL9
0894  2585- F0 0A              BEQ SEARL9
0895  2587- 88         SEARL5  DEY
0896  2588- B1 95              LDA (TRANSP),Y  GET ADDRESS OF NEXT LINE
0897  258A- AA                 TAX
0898  258B- 88                 DEY
0899  258C- B1 95              LDA (TRANSP),Y
0900  258E- B0 D7              BCS SEARLN+4
0901  2590- 18                 CLC
0902  2591- 60         SEARL9  RTS
0903                   *
0904                           TIT GRAPHIC BASIC - MAIN COMMANDS
0905                           PAG

----------------------------------------------------------------------

GRAPHIC BASIC - MAIN COMMANDS      30/03/18   R65 ASSEMBLER  PAGE 24

0906                   *
0907                   * NEW: COMMAND ROUTINE
0908                   **********************
0909                   *
0910  2592- D0 FB      NEW     BNE *-3         RTS, IF NOT EOLD
0911  2594- A9 00              LDA =0
0912  2596- A8                 TAY
0913  2597- 91 61              STA (STPROG),Y  END OF PROGRAM MARK
0914  2599- C8                 INY
0915  259A- 91 61              STA (STPROG),Y
0916  259C- A5 61              LDA STPROG
0917  259E- 69 02              ADC =2
0918  25A0- 85 63              STA STVAR       SET START OF VARIABLES
0919  25A2- A5 62              LDA STPROG+1
0920  25A4- 69 00              ADC =0
0921  25A6- 85 64              STA STVAR+1
0922                   *
0923  25A8- 20 DB 25           JSR SETPC
0924                   *
0925  25AB- A5 6D      CLR1    LDA TPMEM       CLEAR STRINGS
0926  25AD- A4 6E              LDY TPMEM+1
0927  25AF- 85 69              STA BTSTRG
0928  25B1- 84 6A              STY BTSTRG+1
0929                   *
0930  25B3- 20 EF 43           JSR RESGP       RESETGP
0931                   *
0932  25B6- A5 63              LDA STVAR       CLEAR VARIABLES
0933  25B8- A4 64              LDY STVAR+1
0934  25BA- 85 65              STA EOVAR
0935  25BC- 84 66              STY EOVAR+1
0936  25BE- 85 67              STA STSPAC
0937  25C0- 84 68              STY STSPAC+1
0938  25C2- 20 6D 27           JSR RESTOR+19   SET DATA POINTER
0939                   *
0940  25C5- A2 4F      SAVE    LDX =<STRST     RESET STRING STACK
0941  25C7- 86 4C              STX STRSTP
0942  25C9- 68                 PLA             RESET MAIN STACK
0943  25CA- 8D FD 01           STA $1FD
0944  25CD- 68                 PLA
0945  25CE- 8D FE 01           STA $1FE
0946  25D1- A2 FC              LDX =$FC
0947  25D3- 9A                 TXS
0948  25D4- A9 00              LDA =0          CONTINUE NOT LEGAL
0949  25D6- 85 74              STA PNTSAV+1
0950  25D8- 85 48              STA FLAG1
0951  25DA- 60                 RTS
0952                   *
0953                   *
0954                   * SETPC: SET PC TO STPROG-1
0955                   ***************************

----------------------------------------------------------------------

GRAPHIC BASIC - MAIN COMMANDS      30/03/18   R65 ASSEMBLER  PAGE 25

0956                   *
0957  25DB- 18         SETPC   CLC
0958  25DC- A5 61              LDA STPROG
0959  25DE- 69 FF              ADC =$FF
0960  25E0- 85 A9              STA PC
0961  25E2- A5 62              LDA STPROG+1
0962  25E4- 69 FF              ADC =$FF
0963  25E6- 85 AA              STA PC+1
0964  25E8- 60                 RTS
0965                   *
0966                   *
0967                   * LIST: COMMAND ROUTINE
0968                   ***********************
0969                   *
0970  25E9- C9 23      LIST    CMP ='#'
0971  25EB- D0 03              BNE *+5
0972  25ED- 20 6E 42           JSR SETDEV
0973  25F0- 20 1B 27           JSR FETCH1
0974  25F3- 90 06              BCC *+8         BRANCH, IF NUMBER
0975  25F5- F0 04              BEQ *+6         BRANCH, IF EOL
0976  25F7- C9 B8              CMP =$B8        CODE FOR -
0977  25F9- D0 EB              BNE *-19        RTS, IF NOT
0978                   *
0979  25FB- 20 57 28           JSR FETCHI      GET LINE NO
0980  25FE- 20 63 25          JSR SEARLN
0981  2601- 20 1B 27           JSR FETCH1
0982  2604- F0 0C              BEQ *+14
0983  2606- C9 B8              CMP =$B8        CODE FOR -
0984  2608- D0 DE              BNE LIST-1
0985  260A- 20 15 27           JSR FETCH
0986  260D- 20 57 28           JSR FETCHI      GETS SECOND LINE NO
0987  2610- D0 D6              BNE LIST-1      RTS, IF NOT
0988                   *
0989  2612- 68                 PLA
0990  2613- 68                 PLA
0991  2614- A5 05              LDA INTEG
0992  2616- 05 06              ORA INTEG+1
0993  2618- D0 06              BNE LIST2
0994  261A- A9 FF              LDA =$FF
0995  261C- 85 05              STA INTEG       SET LAST LINE TO FFFF
0996  261E- 85 06              STA INTEG+1
0997                   *
0998  2620- A0 01      LIST2   LDY =1
0999  2622- 84 47              STY TEMP2
1000  2624- B1 95              LDA (TRANSP),Y
1001  2626- F0 41              BEQ LIST4       END OF PROGRAM
1002  2628- 20 2E 20           JSR BREAKT      BREAK TEST
1003  262B- 20 9D 24           JSR CRLF
1004  262E- C8                 INY
1005  262F- B1 95              LDA (TRANSP),Y

----------------------------------------------------------------------

GRAPHIC BASIC - MAIN COMMANDS      30/03/18   R65 ASSEMBLER  PAGE 26

1006  2631- AA                 TAX
1007  2632- C8                 INY
1008  2633- B1 95              LDA (TRANSP),Y
1009  2635- C5 06              CMP INTEG+1
1010  2637- D0 04              BNE *+6
1011  2639- E4 05              CPX INTEG
1012  263B- F0 02              BEQ *+4
1013  263D- B0 2A              BCS LIST4
1014  263F- 84 7F              STY TEMP3
1015  2641- 20 12 33           JSR OUTINT
1016                   *
1017  2644- A9 20              LDA =' '
1018  2646- A4 7F      LIST3   LDY TEMP3
1019  2648- 29 7F              AND =$7F
1020  264A- 20 C4 2F           JSR OUTCHR
1021                    * BASIC2:A ORIGINAL 7/1/1982, RECOVERED 3/2018
1022  264D- C9 22              CMP ='"'
1023  264F- D0 06              BNE *+8
1024  2651- A5 47              LDA TEMP2       SET " FLAG
1025  2653- 49 FF              EOR =$FF
1026  2655- 85 47              STA TEMP2
1027  2657- C8                 INY
1028  2658- B1 95              LDA (TRANSP),Y
1029  265A- D0 1E              BNE LIST7       0 MEANS EOL
1030  265C- A8                 TAY
1031  265D- B1 95              LDA (TRANSP),Y  GET ADDRESS OF NEXT
1032  265F- AA                 TAX             LINE
1033  2660- C8                 INY
1034  2661- B1 95              LDA (TRANSP),Y
1035  2663- 86 95              STX TRANSP
1036  2665- 85 96              STA TRANSP+1
1037  2667- D0 B7              BNE LIST2       ALLWAYS TAKEN
1038  2669- A5 00      LIST4   LDA OUTDEV
1039  266B- F0 03              BEQ *+5
1040  266D- 20 B8 42           JSR RSTDEV
1041  2670- 20 9D 24           JSR CRLF
1042  2673- A9 00              LDA =0
1043  2675- 85 00              STA OUTDEV
1044  2677- 4C 7B 23           JMP WARMST
1045                   *
1046  267A- 10 CE      LIST7   BPL LIST3+4
1047  267C- 24 47              BIT TEMP2
1048  267E- 30 CA              BMI LIST3+4
1049  2680- 38                 SEC
1050  2681- E9 7F              SBC =$7F
1051  2683- AA                 TAX             X=CODE-$7F
1052  2684- 84 7F              STY TEMP3
1053  2686- A9 3D              LDA =<COMSTB
1054  2688- A0 20              LDY =>COMSTB
1055  268A- 85 CE              STA TEMP4

----------------------------------------------------------------------

GRAPHIC BASIC - MAIN COMMANDS      30/03/18   R65 ASSEMBLER  PAGE 27

1056  268C- 84 CF              STY TEMP4+1
1057  268E- A0 FF              LDY =$FF
1058  2690- CA         LIST5   DEX
1059  2691- F0 13              BEQ LIST6
1060  2693- C8                 INY             FIND TOKEN STRING
1061  2694- B1 CE              LDA (TEMP4),Y
1062  2696- 10 FB              BPL *-3
1063  2698- 18                 CLC
1064  2699- 98                 TYA
1065  269A- 65 CE              ADC TEMP4
1066  269C- 85 CE              STA TEMP4
1067  269E- A0 00              LDY =0
1068  26A0- 90 EE              BCC LIST5
1069  26A2- E6 CF              INC TEMP4+1
1070  26A4- D0 EA              BNE LIST5       ALLWAYS TAKEN
1071  26A6- C8         LIST6   INY
1072  26A7- B1 CE              LDA (TEMP4),Y   PRINT CODE STRING
1073  26A9- 30 9B              BMI LIST3
1074  26AB- 20 C4 2F           JSR OUTCHR
1075  26AE- 4C A6 26           JMP LIST6
1076                   *
1077                   *
1078                   * EXRUN: EXECUTE RUNNING, MAIN LOOP
1079                   ***********************************
1080                   *
1081  26B1- 20 2E 20   EXRUN   JSR BREAKT
1082  26B4- A5 A9              LDA PC
1083  26B6- A4 AA              LDY PC+1
1084  26B8- F0 06              BEQ *+8         SKIP IF DIRECT MODE
1085  26BA- 85 73              STA PNTSAV
1086  26BC- 84 74              STY PNTSAV+1
1087  26BE- A0 00              LDY =0
1088                   *
1089  26C0- B1 A9              LDA (PC),Y
1090  26C2- F0 10              BEQ *+18        SKIP, IF EOL
1091  26C4- C9 3A              CMP =':         MUST BE :
1092  26C6- F0 2C              BEQ EXCODE
1093  26C8- C9 21              CMP ='!
1094  26CA- F0 05              BEQ *+7
1095  26CC- A2 0F      SYNERR  LDX =$F         SYNTAX ERROR
1096  26CE- 4C 43 23           JMP ERROR
1097                   *
1098  26D1- 20 44 2A           JSR REMARK
1099  26D4- A0 02              LDY =2
1100  26D6- B1 A9              LDA (PC),Y
1101  26D8- 18                 CLC
1102  26D9- F0 73              BEQ STOP1       BRANCH, IF END OF PRO-
1103  26DB- C8                 INY             GRAM OR DIRECT MODE
1104  26DC- B1 A9              LDA (PC),Y
1105  26DE- 8D 32 14           STA LED16

----------------------------------------------------------------------

GRAPHIC BASIC - MAIN COMMANDS      30/03/18   R65 ASSEMBLER  PAGE 28

1106  26E1- 85 6F              STA LINE
1107  26E3- C8                 INY
1108  26E4- B1 A9              LDA (PC),Y
1109  26E6- 8D 33 14           STA LED16+1
1110  26E9- 85 70              STA LINE+1
1111  26EB- 98                 TYA
1112  26EC- 65 A9              ADC PC
1113  26EE- 85 A9              STA PC          ADJUST PC
1114  26F0- 90 02              BCC *+4
1115  26F2- E6 AA              INC PC+1
1116                   *
1117                   *
1118  26F4- 20 15 27   EXCODE  JSR FETCH
1119  26F7- 20 FD 26           JSR EXCOD1
1120  26FA- 4C B1 26           JMP EXRUN
1121                   *
1122                   *
1123                   * EXCODE: GET STATEMENT VECTOR AND EXECUTE
1124                   *
1125  26FD- F0 32      EXCOD1  BEQ FETCHE      RTS, IF EOL
1126  26FF- 38                SEC
1127  2700- E9 80              SBC =128
1128  2702- B0 03              BCS *+5
1129  2704- 4C 55 2A           JMP LET         MUST BE LET
1130  2707- C9 30              CMP =$30
1131  2709- B0 C1              BCS SYNERR      NOT LEGAL STATEMENT
1132  270B- 0A                 ASL A
1133  270C- A8                 TAY
1134  270D- B9 6B 21           LDA STVECT+1,Y  GET VECTOR
1135  2710- 48                 PHA
1136  2711- B9 6A 21           LDA STVECT,Y
1137  2714- 48                 PHA             FETCH, THEN EXECUTE CODE
1138                   *
1139                   *
1140                   * FETCH: FETCH NEXT BASIC CHAR
1141                   ******************************
1142                   * INCREMENT PC, FETCH (PC), BLANKS ARE SKIPPED
1143                   * C=0 IF NUMBER
1144                   *
1145  2715- E6 A9      FETCH   INC PC
1146  2717- D0 02              BNE FETCH1
1147  2719- E6 AA              INC PC+1
1148                   *
1149  271B- 84 CE      FETCH1  STY TEMP4       ENTRY WITHOUT INCR PC
1150  271D- A0 00              LDY =0
1151  271F- B1 A9              LDA (PC),Y
1152  2721- A4 CE              LDY TEMP4
1153  2723- C9 3A              CMP =$3A        NUMBER TEST
1154  2725- B0 0A              BCS FETCHE
1155  2727- C9 20              CMP =' '        SKIP BLANKS

----------------------------------------------------------------------

GRAPHIC BASIC - MAIN COMMANDS      30/03/18   R65 ASSEMBLER  PAGE 29

1156  2729- F0 EA              BEQ FETCH
1157  272B- 38                 SEC
1158  272C- E9 30              SBC =$30
1159  272E- 38                 SEC
1160  272F- E9 D0              SBC =$D0
1161  2731- 60         FETCHE  RTS
1162                   *
1163                   *
1164                   * STOP: STATEMENT ROUTINE
1165                   *************************
1166                   *
1167  2732- B0 01      STOP    BCS *+3
1168                   *
1169                   *
1170                   * END: STATEMENT ROUTINE
1171                   ************************
1172                   *
1173  2734- 18         END     CLC
1174  2735- D0 FA              BNE FETCHE      RST, IF NOT EOLD
1175  2737- 20 9F 45           JSR RSTALL
1176  273A- A5 A9              LDA PC
1177  273C- A4 AA              LDY PC+1
1178  273E- F0 0C              BEQ STOP1-2     SKIP IN DIRECT MODE
1179  2740- 85 73              STA PNTSAV
1180  2742- 84 74              STY PNTSAV+1
1181  2744- A5 6F              LDA LINE
1182  2746- A4 70              LDY LINE+1
1183  2748- 85 71              STA LINSAV
1184  274A- 84 72              STY LINSAV+1
1185  274C- 68                 PLA             RETURN ONE LEVEL
1186  274D- 68                 PLA
1187  274E- A9 B3      STOP1   LDA =<(ERRORM+17)       BREAK MESSAGE
1188  2750- A0 22              LDY =>(ERRORM+17)
1189  2752- 90 03              BCC *+5
1190  2754- 4C 70 23           JMP STOP2
1191  2757- 4C 7B 23           JMP WARMST
1192                   *
1193                   *
1194                   * RESTORE: STATEMENT ROUTINE
1195                   ****************************
1196                   *
1197  275A- F0 11      RESTOR  BEQ *+19
1198  275C- 20 57 28           JSR FETCHI      GET LINE NO
1199  275F- 20 63 25           JSR SEARLN
1200  2762- B0 03              BCS *+5
1201  2764- 4C C6 27           JMP UNDEFS
1202  2767- A5 95              LDA TRANSP
1203  2769- A4 96              LDY TRANSP+1
1204  276B- B0 05              BCS *+7         ALLWAYS TAKEN
1205                   *

----------------------------------------------------------------------

GRAPHIC BASIC - MAIN COMMANDS      30/03/18   R65 ASSEMBLER  PAGE 30

1206  276D- A5 61              LDA STPROG
1207  276F- A4 62              LDY STPROG+1
1208                   *
1209  2771- 38                 SEC
1210  2772- E9 01              SBC =1
1211  2774- B0 01              BCS *+3
1212  2776- 88                 DEY
1213  2777- 85 77              STA DATPNT
1214  2779- 84 78              STY DATPNT+1
1215  277B- 60                 RTS
1216                   *
1217                   *
1218                   * CLR: STATEMENT ROUTINE
1219                   ************************
1220                   *
1221  277C- D0 FB      CLR     BNE *-3         RTS, IF NOT EOLD
1222  277E- 4C AB 25           JMP CLR1
1223                   *
1224                   *
1225                   * RUN: STATEMENT ROUTINE
1226                   ************************
1227                   *
1228  2781- D0 03      RUN     BNE *+5
1229  2783- 4C A8 25           JMP CLR1-3      SET PC, CLR AND RUN
1230                   *
1231  2786- 4C 01 42           JMP LOAD9       LOAD NEW USER PROGRAM
1232                   *
1233                   *
1234                   * GOSUB: STATEMENT ROUTINE
1235                   **************************
1236                   *
1237  2789- A9 03      GOSUB   LDA =3
1238  278B- 20 34 23           JSR TSSTK
1239  278E- A5 AA              LDA PC+1
1240  2790- 48                 PHA             SAVE PC ON STACK
1241  2791- A5 A9              LDA PC
1242  2793- 48                 PHA
1243  2794- A5 70              LDA LINE+1      SAVE LINE
1244  2796- 48                 PHA
1245  2797- A5 6F              LDA LINE
1246  2799- 48                 PHA
1247  279A- A9 8D              LDA =$8D        CODE FOR GOSUB
1248  279C- 48                 PHA
1249  279D- 20 1B 27           JSR FETCH1
1250  27A0- 20 A6 27           JSR GOTO
1251  27A3- 4C B1 26           JMP EXRUN
1252                   *
1253                   *
1254                   * GOTO: STATEMENT ROUTINE
1255                   *************************

----------------------------------------------------------------------

GRAPHIC BASIC - MAIN COMMANDS      30/03/18   R65 ASSEMBLER  PAGE 31

1256                   *
1257  27A6- 20 57 28   GOTO    JSR FETCHI
1258  27A9- 20 0A 28           JSR SEEOL
1259  27AC- A5 70              LDA LINE+1
1260  27AE- C5 06              CMP INTEG+1
1261  27B0- B0 0B              BCS GOTO1       SEARCH FROM START
1262                   *
1263  27B2- 98                 TYA             SEARCH FOR NEXT LIN
1264  27B3- 38                 SEC
1265  27B4- 65 A9              ADC PC
1266  27B6- A6 AA              LDX PC+1        COMPUTE NEXT LINE
1267  27B8- 90 07              BCC GOTO1+4
1268  27BA- E8                 INX
1269  27BB- B0 04              BCS GOTO1+4
1270                   *
1271  27BD- A5 61      GOTO1   LDA STPROG
1272  27BF- A6 62              LDX STPROG+1
1273  27C1- 20 67 25           JSR SEARLN+4
1274  27C4- B0 05              BCS *+7
1275  27C6- A2 47      UNDEFS  LDX =$47
1276  27C8- 4C 43 23           JMP ERROR       UNDEFINED STATEMENT
1277  27CB- A5 95              LDA TRANSP
1278  27CD- E9 01              SBC =1
1279  27CF- 85 A9              STA PC          SET NEW PC
1280  27D1- A5 96              LDA TRANSP+1
1281  27D3- E9 00              SBC =0
1282  27D5- 85 AA              STA PC+1
1283  27D7- 60                 RTS
1284                   *
1285                   *
1286                   * RETURN: STATEMENT ROUTINE
1287                   ***************************
1288                   *
1289  27D8- D0 FD      RETURN  BNE *-1         RTS, IF NOT EOLL
1290  27DA- A9 FF              LDA =$FF
1291  27DC- 85 7F              STA TEMP3
1292  27DE- 20 29 28           JSR STACK
1293  27E1- 9A                 TXS
1294  27E2- C9 8D              CMP =$8D        CODE FOR GOSUB
1295  27E4- F0 05              BEQ *+7
1296  27E6- A2 15              LDX =$15
1297  27E8- 4C 43 23           JMP ERROR       NO MATCHING GOSUB
1298                   *
1299  27EB- 68                 PLA             GET CODE FOR GOSUB
1300  27EC- 68                 PLA             GET LINE
1301  27ED- 85 6F              STA LINE
1302  27EF- 68                 PLA
1303  27F0- 85 70              STA LINE+1
1304  27F2- 68                 PLA             GET PC FROM STACK
1305  27F3- 85 A9              STA PC

----------------------------------------------------------------------

GRAPHIC BASIC - MAIN COMMANDS      30/03/18   R65 ASSEMBLER  PAGE 32

1306  27F5- 68                 PLA
1307  27F6- 85 AA              STA PC+1        CONTINUE WITH DATA
1308                   *
1309                   *
1310                   * DATA: STATEMENT ROUTINE
1311                   *************************
1312                   * SKIPS RESTOF LINE, OR UP TO NEXT ":"
1313                   *
1314  27F8- 20 06 28   DATA    JSR SEDPN
1315  27FB- 98                 TYA
1316  27FC- 18                 CLC
1317  27FD- 65 A9              ADC PC
1318  27FF- 85 A9             STA PC
1319  2801- 90 02              BCC *+4
1320  2803- E6 AA              INC PC+1
1321  2805- 60         DATAE   RTS
1322                   *
1323                   *
1324                   * SUBROUTINE TO SEARCH IN LINE
1325                   ******************************
1326                   * SEDPN SEARCHES ":" OR EOLD
1327                   * SEEOL SEARCHES EOL
1328                   * OUTPUT IS Y
1329                   *
1330  2806- A2 3A      SEDPN   LDX =$3A
1331  2808- D0 02              BNE *+4
1332  280A- A2 00      SEEOL   LDX =0
1333  280C- 86 41              STX CHRSAV
1334  280E- A0 00              LDY =0
1335  2810- 84 42              STY CHRSAV+1
1336  2812- A5 42      SEEOL1  LDA CHRSAV+1
1337  2814- A6 41              LDX CHRSAV
1338  2816- 85 41              STA CHRSAV
1339  2818- 86 42              STX CHRSAV+1
1340  281A- B1 A9              LDA (PC),Y      RTS, IF EOL
1341  281C- F0 E7              BEQ DATAE
1342  281E- C5 42              CMP CHRSAV+1
1343  2820- F0 E3              BEQ DATAE       RTS, IF MATCHING
1344  2822- C8                 INY
1345  2823- C9 22              CMP ='"'        DO NOT SEARCH ":"
1346  2825- F0 EB              BEQ SEEOL1      IN STRING
1347  2827- D0 F1              BNE SEEOL1+8    ALLWAYS TAKEN
1348                   *
1349                   *
1350                   * STACK: PREPARE STACK
1351                   **********************
1352                   * USED IN NEXT AND RETURN
1353                   *
1354  2829- BA         STACK   TSX
1355  282A- E8                 INX

----------------------------------------------------------------------

GRAPHIC BASIC - MAIN COMMANDS      30/03/18   R65 ASSEMBLER  PAGE 33

1356  282B- E8                 INX
1357  282C- E8                 INX
1358  282D- E8                 INX
1359  282E- BD 01 01           LDA $101,X      STACK PAGE
1360  2831- C9 81              CMP =$81
1361  2833- D0 21              BNE STACK4
1362  2835- A5 80              LDA TEMP3+1
1363  2837- D0 0A              BNE *+12
1364  2839- BD 02 01           LDA $102,X
1365  283C- 85 7F              STA TEMP3
1366  283E- BD 03 01           LDA $103,X
1367  2841- 85 80              STA TEMP3+1
1368  2843- DD 03 01           CMP $103,X
1369  2846- D0 07              BNE *+9
1370  2848- A5 7F              LDA TEMP3
1371  284A- DD 02 01           CMP $102,X
1372  284D- F0 07              BEQ STACK4
1373  284F- 8A                 TXA
1374  2850- 18                 CLC
1375  2851- 69 12              ADC =18
1376  2853- AA                 TAX
1377  2854- D0 D8              BNE STACK+5
1378  2856- 60         STACK4  RTS
1379                   *
1380                   *
1381                   * FETCHI: FETCH INTEGER
1382                   ***********************
1383                   *
1384  2857- A2 00      FETCHI  LDX =0
1385  2859- 86 05              STX INTEG
1386  285B- 86 06              STX INTEG+1
1387  285D- B0 F7              BCS STACK4      RTS, IF NOT DIGIT
1388  285F- E9 2F              SBC =$2F        CONVERT TO DIGIT(C=0)
1389  2861- 85 42              STA CHRSAV+1
1390  2863- A5 06              LDA INTEG+1
1391  2865- 85 58              STA TEMP1
1392  2867- C9 19              CMP =$19
1393  2869- 90 03              BCC *+5
1394  286B- 4C CC 26           JMP SYNERR
1395                   *
1396  286E- A5 05              LDA INTEG       INTEG=10*INTEG+DIGIT
1397  2870- 0A                 ASL A
1398  2871- 26 58              ROL TEMP1
1399  2873- 0A                 ASL A
1400  2874- 26 58              ROL TEMP1
1401  2876- 65 05              ADC INTEG
1402  2878- 85 05              STA INTEG
1403  287A- A5 58              LDA TEMP1
1404  287C- 65 06              ADC INTEG+1
1405  287E- 06 05              ASL INTEG

----------------------------------------------------------------------

GRAPHIC BASIC - MAIN COMMANDS      30/03/18   R65 ASSEMBLER  PAGE 34

1406  2880- 2A                 ROL A
1407  2881- 85 06              STA INTEG+1
1408  2883- A5 05              LDA INTEG
1409  2885- 65 42              ADC CHRSAV+1
1410  2887- 85 05              STA INTEG
1411  2889- 90 02              BCC *+4
1412  288B- E6 06              INC INTEG+1
1413  288D- 20 15 27           JSR FETCH
1414  2890- 4C 5D 28           JMP FETCHI+6
1415                   *
1416                   *
1417                   * OUTSTR: PRINT STRING AT A,Y
1418                   *****************************
1419                   * END MARK IS 0
1420                   *
1421  2893- 20 B0 28   OUTSTR  JSR STRSIZ
1422  2896- 20 17 29           JSR PREPST
1423                   *
1424                   * A=NO OF CHARS, TEMP1=START
1425                   *
1426  2899- AA                 TAX
1427  289A- A0 00              LDY =0
1428  289C- E8                 INX
1429  289D- CA                 DEX
1430  289E- F0 B6              BEQ STACK4      RTS, IF X=0
1431  28A0- B1 58              LDA (TEMP1),Y
1432  28A2- 20 C4 2F           JSR OUTCHR
1433  28A5- C8                 INY
1434  28A6- C9 0D              CMP =$D         IF CR,PADOUT
1435  28A8- D0 F3              BNE *-11
1436  28AA- 20 A7 24           JSR PADOUT
1437  28AD- 4C 9D 28           JMP *-16
1438                   *
1439                   *
1440                   * STRSIZ: STRING SIZE IN A,Y
1441                   ****************************
1442                   *
1443  28B0- A2 22      STRSIZ  LDX ='"'
1444  28B2- 86 41              STX CHRSAV
1445  28B4- 86 42              STX CHRSAV+1
1446  28B6- 85 A5              STA DYADIC+6
1447  28B8- 84 A6              STY DYADIC+7    SAVE START
1448  28BA- 85 98              STA MANT
1449  28BC- 84 99              STY MANT+1
1450                   *
1451  28BE- A0 FF              LDY =$FF
1452  28C0- C8         STRSI1  INY
1453  28C1- B1 A5              LDA (DYADIC+6),Y
1454  28C3- F0 0C              BEQ STRSI2+4    END MARK
1455  28C5- C5 41              CMP CHRSAV

----------------------------------------------------------------------

GRAPHIC BASIC - MAIN COMMANDS      30/03/18   R65 ASSEMBLER  PAGE 35

1456  28C7- F0 04              BEQ STRSI2
1457  28C9- C5 42              CMP CHRSAV+1
1458  28CB- D0 F3              BNE STRSI1
1459  28CD- C9 22      STRSI2  CMP ='"'
1460  28CF- F0 01              BEQ *+3
1461  28D1- 18                 CLC
1462  28D2- 84 97              STY EXP         SAVE SIZE IN EXP
1463  28D4- 98                 TYA
1464  28D5- 65 A5              ADC DYADIC+6    DYADIC+6=START
1465  28D7- 85 A7              STA DYADIC+8    DYADIC+8=END
1466  28D9- A6 A6              LDX DYADIC+7
1467  28DB- 90 01              BCC *+3
1468  28DD- E8                 INX
1469  28DE- 86 A8              STX DYADIC+9
1470  28E0- A5 A6              LDA DYADIC+7
1471  28E2- D0 0B              BNE STRSI3      SKIP, IF STRING NOT
1472                   *                       IN PAGE 0
1473  28E4- 98                 TYA
1474  28E5- 20 B5 2D           JSR TSTRRM      TEST STRING ROOM
1475  28E8- A6 A5              LDX DYADIC+6
1476  28EA- A4 A6              LDY DYADIC+7
1477  28EC- 20 D5 2D           JSR INSST0      INSERT STRING
1478                   *
1479  28EF- A6 4C      STRSI3  LDX STRSTP
1480  28F1- E0 58              CPX =STRST+9
1481  28F3- D0 05              BNE *+7
1482  28F5- A2 B3              LDX =$B3        FORMULA TOO LONG
1483  28F7- 4C 43 23           JMP ERROR
1484                   *
1485  28FA- A5 97              LDA EXP
1486  28FC- 95 00              STA 0,X         SAVE SIZE
1487  28FE- A5 98             LDA MANT        SAVE START
1488  2900- 95 01              STA 1,X
1489  2902- A5 99              LDA MANT+1
1490  2904- 95 02              STA 2,X
1491  2906- A0 00              LDY =0
1492  2908- 86 9A              STX MANT+2      POINTER TO SAVED
1493  290A- 84 9B              STY MANT+3
1494  290C- 88                 DEY
1495  290D- 84 45              STY RESTYP
1496  290F- 86 4D              STX STRSTP+1
1497  2911- E8                 INX
1498  2912- E8                 INX
1499  2913- E8                 INX
1500  2914- 86 4C              STX STRSTP
1501  2916- 60                 RTS
1502                   *
1503                   *
1504                   * PREPST: PREPARE STRING FOR OUTPUT
1505                   ***********************************

----------------------------------------------------------------------

GRAPHIC BASIC - MAIN COMMANDS      30/03/18   R65 ASSEMBLER  PAGE 36

1506                   *
1507  2917- A5 9A      PREPST  LDA MANT+2
1508  2919- A4 9B              LDY MANT+3
1509  291B- 85 58              STA TEMP1
1510  291D- 84 59              STY TEMP1+1
1511  291F- 20 4C 29           JSR PREPS1
1512  2922- 08                 PHP
1513  2923- A0 00              LDY =0
1514  2925- B1 58              LDA (TEMP1),Y
1515  2927- 48                 PHA             SIZE TO A
1516  2928- C8                 INY
1517  2929- B1 58              LDA (TEMP1),Y
1518  292B- AA                 TAX             ADDRESS LOW TO X
1519  292C- C8                 INY
1520  292D- B1 58              LDA (TEMP1),Y
1521  292F- A8                 TAY             ADDRESS HIGH TO Y
1522  2930- 68                 PLA
1523  2931- 28                 PLP
1524  2932- D0 13              BNE PREPS0
1525  2934- C4 6A              CPY BTSTRG+1
1526  2936- D0 0F              BNE PREPS0      BRANCH, IF NOT STORED
1527  2938- E4 69              CPX BTSTRG      STRING IN STRING AREA
1528  293A- D0 0B              BNE PREPS0
1529  293C- 48                 PHA
1530  293D- 18                 CLC
1531  293E- 65 69              ADC BTSTRG
1532  2940- 85 69              STA BTSTRG
1533  2942- 90 02              BCC *+4
1534  2944- E6 6A              INC BTSTRG+1
1535  2946- 68                 PLA
1536  2947- 86 58      PREPS0  STX TEMP1
1537  2949- 84 59              STY TEMP1+1
1538  294B- 60                 RTS
1539                   *
1540  294C- C4 4E      PREPS1  CPY STRSTP+2
1541  294E- D0 0C              BNE PREPS2
1542  2950- C5 4D              CMP STRSTP+1
1543  2952- D0 08              BNE PREPS2
1544  2954- 85 4C              STA STRSTP
1545  2956- E9 03              SBC =3
1546  2958- 85 4D              STA STRSTP+1
1547  295A- A0 00              LDY =0
1548  295C- 60         PREPS2  RTS
1549                   *
1550                   *
1551                   * COLDST: COLD START
1552                   ********************
1553                   *
1554  295D- A2 FF      COLDST  LDX =$FF
1555  295F- 86 70              STX LINE+1

----------------------------------------------------------------------

GRAPHIC BASIC - MAIN COMMANDS      30/03/18   R65 ASSEMBLER  PAGE 37

1556  2961- 86 04              STX INBNUM+1
1557  2963- 9A                 TXS
1558  2964- 58                 CLI
1559  2965- D8                 CLD
1560  2966- 20 15 F0           JSR CLOSAL
1561  2969- A9 4C              LDA =$4C
1562  296B- 85 8A              STA PNT1-1      VECTOR FOR BFUNC
1563  296D- AD 00 14           LDA PORTB1      WRITE DISABLE BASIC
1564  2970- 29 FF              AND =$FF        DUMMY
1565  2972- AD 00 14           LDA PORTB1      DUMMY, WAS STA
1566  2975- A9 00              LDA =0
1567  2977- 85 9E              STA CURRSG+1
1568  2979- 85 00              STA OUTDEV
1569  297B- 85 C1              STA INPDEV
1570  297D- 85 C2              STA AUTOIN
1571  297F- 85 4E              STA STRSTP+2
1572  2981- 85 01              STA NUMPAD
1573  2983- 85 02              STA POS
1574  2985- 85 BB              STA POSTB
1575  2987- 85 BC              STA POSTB+1
1576  2989- 85 BD              STA POSTB+2
1577  298B- 85 BE              STA POSTB+3
1578  298D- 48                 PHA
1579  298E- 85 4B              STA STRSTP-1
1580  2990- A9 03              LDA =3
1581  2992- 85 89              STA SIZE
1582  2994- A9 2C              LDA =$2C
1583  2996- 85 06              STA INTEG+1
1584  2998- 20 B8 42           JSR RSTDEV
1585  299B- A2 4F              LDX =STRST      SET STRING STACK POINTER
1586  299D- 86 4C              STX STRSTP
1587                   *
1588  299F- AD 06 20           LDA STRRAM      START OF USER AREA
1589  29A2- AE 07 20           LDX STRRAM+1
1590  29A5- 85 61              STA STPROG
1591  29A7- 86 62              STX STPROG+1
1592  29A9- AD 08 20           LDA ENDRAM      END OF USER AREA
1593  29AC- AE 09 20           LDX ENDRAM+1
1594  29AF- 85 6D              STA TPMEM
1595  29B1- 86 6E              STX TPMEM+1
1596  29B3- 85 69              STA BTSTRG
1597  29B5- 86 6A              STX BTSTRG+1
1598  29B7- A0 00              LDY =0
1599  29B9- 98                 TYA
1600  29BA- 91 61              STA (STPROG),Y
1601  29BC- E6 61              INC STPROG
1602  29BE- D0 02              BNE *+4
1603  29C0- E6 62              INC STPROG+1
1604  29C2- A5 61              LDA STPROG
1605  29C4- A4 62              LDY STPROG+1

----------------------------------------------------------------------

GRAPHIC BASIC - MAIN COMMANDS      30/03/18   R65 ASSEMBLER  PAGE 38

1606  29C6- 20 07 23           JSR TSROOM
1607  29C9- 20 9D 24           JSR CRLF
1608  29CC- A9 E6              LDA =<HEADM
1609  29CE- A0 29              LDY =>HEADM
1610  29D0- 20 93 28           JSR OUTSTR
1611  29D3- A5 6D              LDA TPMEM
1612  29D5- 38                 SEC
1613  29D6- E5 61              SBC STPROG
1614  29D8- AA                 TAX
1615  29D9- A5 6E              LDA TPMEM+1
1616  29DB- E5 62              SBC STPROG+1
1617  29DD- 20 12 33           JSR OUTINT
1618  29E0- 20 94 25           JSR NEW+2
1619  29E3- 4C 7B 23           JMP WARMST
1620                   *
1621  29E6- 0D 0A 0A   HEADM   BYT $D,$A,$A
1622  29E9- 09 2D 2D          BYT 9,'-- R65 GRAPHIC BASIC V 6.1 --'
1622  29EC- 20 52 36 
1622  29EF- 35 20 47 
1622  29F2- 52 41 50 
1622  29F5- 48 49 43 
1622  29F8- 20 42 41 
1622  29FB- 53 49 43 
1622  29FE- 20 56 20 
1622  2A01- 36 2E 31 
1622  2A04- 20 2D 2D 
1623  2A07- 0D 0A 0A           BYT $D,$A,$A,'BYTES FREE: ',0
1623  2A0A- 42 59 54 
1623  2A0D- 45 53 20 
1623  2A10- 46 52 45 
1623  2A13- 45 3A 20 
1623  2A16- 00 
1624                   *
1625                   *
1626                   * CONT: COMMAND ROUTINE
1627                   ***********************
1628                   *
1629  2A17- D0 17      CONT    BNE CONTE       RTS, IF NOT EOL
1630  2A19- A2 C6              LDX =$C6        CONT ERROR?
1631  2A1B- A4 74              LDY PNTSAV+1    =0 IF CONT ILL
1632  2A1D- D0 03              BNE *+5
1633  2A1F- 4C 43 23           JMP ERROR
1634  2A22- A5 73              LDA PNTSAV
1635  2A24- 85 A9              STA PC
1636  2A26- 84 AA              STY PC+1
1637  2A28- A5 71              LDA LINSAV
1638  2A2A- A4 72              LDY LINSAV+1
1639  2A2C- 85 6F              STA LINE
1640  2A2E- 84 70              STY LINE+1
1641  2A30- 60         CONTE   RTS

----------------------------------------------------------------------

GRAPHIC BASIC - MAIN COMMANDS      30/03/18   R65 ASSEMBLER  PAGE 39

1642                   *
1643                   *
1644                   * IF: STATEMENT ROUTINE
1645                   ***********************
1646                   *
1647  2A31- 20 FF 2D   IF      JSR EXPRES
1648  2A34- 20 1B 27           JSR FETCH1
1649  2A37- C9 89              CMP =$89        CODE FOR GOTO
1650  2A39- F0 05              BEQ *+7
1651  2A3B- A9 B4              LDA =$B4        CODE FOR THEN
1652  2A3D- 20 7B 2B           JSR FOLLOW      MUST FOLLOW
1653  2A40- A5 97              LDA EXP         EXP=0:SKIP REST OF LINE
1654  2A42- D0 06              BNE *+8
1655                   *
1656                   *
1657                   * REMARK: STATEMENT ROUTINE
1658                   ***************************
1659                   *
1660  2A44- 20 0A 28   REMARK  JSR SEEOL
1661  2A47- 4C FB 27           JMP DATA+3
1662                   *
1663                   * CONTINUE IF
1664                   *
1665  2A4A- 20 1B 27           JSR FETCH1
1666  2A4D- B0 03              BCS *+5
1667  2A4F- 4C A6 27           JMP GOTO
1668  2A52- 4C FD 26           JMP EXCOD1
1669                   *
1670                   *
1671                   * LET: STATEMENT ROUTINE
1672                   ************************
1673                   *
1674  2A55- A2 00      LET     LDX =0          VARIABLE CAN BE DEFINED
1675  2A57- 86 CF              STX TEMP4+1
1676  2A59- 20 87 2B           JSR GETVAR
1677  2A5C- 85 7F              STA TEMP3       SAVE START
1678  2A5E- 84 80              STY TEMP3+1
1679  2A60- A9 BF              LDA =$BF        CODE FOR =
1680  2A62- 20 7B 2B           JSR FOLLOW      MUST FOLLOW
1681  2A65- A5 46              LDA RESTYP+1
1682  2A67- 48                 PHA
1683  2A68- A5 45              LDA RESTYP
1684  2A6A- 48                 PHA
1685  2A6B- 20 FF 2D           JSR EXPRES
1686  2A6E- 68                 PLA
1687  2A6F- 2A                 ROL A           TEST RESULT TYPE
1688  2A70- 20 F1 2D           JSR TESTTP+1
1689  2A73- D0 18              BNE LET1+3
1690  2A75- 68                 PLA
1691  2A76- 10 12      LET0    BPL LET1

----------------------------------------------------------------------

GRAPHIC BASIC - MAIN COMMANDS      30/03/18   R65 ASSEMBLER  PAGE 40

1692                   *
1693                   * SAVE INTEGER
1694                   *
1695  2A78- 20 08 35           JSR ROUND
1696  2A7B- 20 24 37           JSR FLPINT
1697  2A7E- A0 00              LDY =0
1698  2A80- A5 9A              LDA MANT+2
1699  2A82- 91 7F              STA (TEMP3),Y
1700  2A84- C8                 INY
1701  2A85- A5 9B              LDA MANT+3
1702  2A87- 91 7F              STA (TEMP3),Y
1703  2A89- 60                 RTS
1704                   *
1705                   * SAVE FLP
1706                   *
1707  2A8A- 4C DC 34   LET1    JMP SAVFLP
1708                   *
1709                   * SAVE STRING
1710                   *
1711  2A8D- 68                 PLA
1712  2A8E- A0 02              LDY =2
1713  2A90- B1 9A              LDA (MANT+2),Y
1714  2A92- C5 6A              CMP BTSTRG+1
1715  2A94- 90 17              BCC LET2        SKIP, IF NOT SAVED S
1716  2A96- D0 07              BNE *+9
1717  2A98- 88                 DEY
1718  2A99- B1 9A              LDA (MANT+2),Y
1719  2A9B- C5 69              CMP BTSTRG
1720  2A9D- 90 0E              BCC LET2
1721  2A9F- A4 9B              LDY MANT+3
1722  2AA1- C4 64              CPY STVAR+1
1723  2AA3- 90 08              BCC LET2
1724  2AA5- D0 0D              BNE LET2+7
1725  2AA7- A5 9A              LDA MANT+2
1726  2AA9- C5 63              CMP STVAR
1727  2AAB- B0 07              BCS LET2+7
1728                   *
1729  2AAD- A5 9A      LET2    LDA MANT+2
1730  2AAF- A4 9B              LDY MANT+3
1731  2AB1- 4C CA 2A           JMP LET3
1732                   *
1733  2AB4- A0 00              LDY =0
1734  2AB6- B1 9A              LDA (MANT+2),Y
1735  2AB8- 20 B5 2D           JSR TSTRRM
1736  2ABB- A5 86              LDA TEMP5
1737  2ABD- A4 87              LDY TEMP5+1
1738  2ABF- 85 A5              STA DYADIC+6
1739  2AC1- 84 A6              STY DYADIC+7
1740  2AC3- 20 C7 2D           JSR INSSTR
1741  2AC6- A9 97              LDA =<EXP

----------------------------------------------------------------------

GRAPHIC BASIC - MAIN COMMANDS      30/03/18   R65 ASSEMBLER  PAGE 41

1742  2AC8- A0 00              LDY =0
1743  2ACA- 85 86      LET3    STA TEMP5
1744  2ACC- 84 87              STY TEMP5+1
1745  2ACE- 20 4C 29           JSR PREPS1
1746  2AD1- A0 00              LDY =0
1747  2AD3- B1 86              LDA (TEMP5),Y
1748  2AD5- 91 7F              STA (TEMP3),Y
1749  2AD7- C8                 INY
1750  2AD8- B1 86              LDA (TEMP5),Y
1751  2ADA- 91 7F              STA (TEMP3),Y
1752  2ADC- C8                 INY
1753  2ADD- B1 86              LDA (TEMP5),Y
1754  2ADF- 91 7F              STA (TEMP3),Y
1755  2AE1- 60                 RTS
1756                   *
1757                   *
1758                   * PRINT: STATEMENT ROUTINE
1759                   **************************
1760                   *
1761  2AE2- C9 23      PRINT   CMP ='#'        DEVICE
1762  2AE4- D0 11              BNE PRINT1-3
1763  2AE6- 20 6E 42           JSR SETDEV
1764  2AE9- 20 F7 2A           JSR PRINT1-3
1765  2AEC- 20 B8 42           JSR RSTDEV
1766  2AEF- A2 00              LDX =0
1767  2AF1- 86 00              STX OUTDEV
1768  2AF3- 60                 RTS
1769                   *
1770  2AF4- 20 96 28           JSR OUTSTR+3
1771  2AF7- 20 1B 27           JSR FETCH1
1772  2AFA- D0 03      PRINT1  BNE *+5
1773  2AFC- 4C 9D 24           JMP CRLF        CRLF, IF EOL
1774  2AFF- C9 21             CMP ='!'        COMMENT?
1775  2B01- F0 F9              BEQ PRINT1+2    YES, SAME AS EOL
1776  2B03- C9 B0              CMP =$B0
1777  2B05- F0 36              BEQ TAB         CODE FOR TAB(
1778  2B07- C9 B3              CMP =$B3        CODE FOR SPC(
1779  2B09- F0 32              BEQ TAB
1780  2B0B- C9 2C              CMP =','
1781  2B0D- F0 21              BEQ AUTOTB
1782  2B0F- C9 3B              CMP =';'
1783  2B11- F0 4A              BEQ TAB1+8
1784  2B13- C9 5B              CMP ='['
1785  2B15- F0 50              BEQ PRINT2
1786  2B17- 20 FF 2D           JSR EXPRES
1787  2B1A- 24 45              BIT RESTYP
1788  2B1C- 30 D6              BMI PRINT1-6    IF STRING
1789  2B1E- 20 81 49           JSR FORMOUT
1790  2B21- 20 93 28           JSR OUTSTR
1791  2B24- A5 CB              LDA FORMFL

----------------------------------------------------------------------

GRAPHIC BASIC - MAIN COMMANDS      30/03/18   R65 ASSEMBLER  PAGE 42

1792  2B26- D0 05              BNE *+7
1793  2B28- A9 20              LDA =' '
1794  2B2A- 20 C4 2F           JSR OUTCHR
1795  2B2D- 4C F7 2A           JMP PRINT1-3
1796                   *
1797  2B30- A5 02      AUTOTB  LDA POS
1798  2B32- 38                 SEC
1799  2B33- E9 0C              SBC =12
1800  2B35- B0 FC              BCS *-2
1801  2B37- 49 FF              EOR =$FF
1802  2B39- 69 01              ADC =1
1803  2B3B- D0 17              BNE TAB1-1      ALLWAYS TAKEN
1804                   *
1805  2B3D- 48         TAB     PHA             SAVE CODE
1806  2B3E- 20 02 37           JSR NUMEXP
1807  2B41- C9 29              CMP =')'
1808  2B43- F0 03              BEQ *+5
1809  2B45- 4C CC 26           JMP SYNERR
1810  2B48- 68                 PLA
1811  2B49- C9 B0              CMP =$B0        TAB(
1812  2B4B- D0 16              BNE TAB1+14
1813  2B4D- 8A                 TXA
1814  2B4E- E5 02              SBC POS
1815  2B50- 90 0B              BCC TAB1+8
1816  2B52- F0 09              BEQ TAB1+8
1817  2B54- AA                 TAX
1818  2B55- A9 20      TAB1    LDA =' '
1819  2B57- 20 C4 2F           JSR OUTCHR
1820  2B5A- CA                 DEX
1821  2B5B- D0 F8              BNE TAB1
1822  2B5D- 20 15 27           JSR FETCH
1823  2B60- D0 9D              BNE PRINT1+5
1824  2B62- 60                 RTS
1825                   *
1826  2B63- E8                 INX
1827  2B64- 4C 5A 2B           JMP TAB1+5
1828                   *
1829  2B67- 20 15 27   PRINT2  JSR FETCH       GET FORMAT CODE
1830  2B6A- 20 C1 49           JSR FORMAT
1831  2B6D- A9 5D              LDA =']'
1832  2B6F- 20 7B 2B           JSR FOLLOW
1833  2B72- 4C FA 2A           JMP PRINT1
1834                   *
1835                   * FOLLOW: CHAR IN A MUST FOLLOW
1836                   *******************************
1837                   *
1838  2B75- A9 28              LDA ='('        FOLLOW-6: "(" MUST FOLLO
1839  2B77- D0 02              BNE *+4
1840  2B79- A9 29              LDA =')'        FOLLOW-1: ")" MUST FOLLO
1841  2B7B- A0 00      FOLLOW  LDY =0

----------------------------------------------------------------------

GRAPHIC BASIC - MAIN COMMANDS      30/03/18   R65 ASSEMBLER  PAGE 43

1842  2B7D- D1 A9              CMP (PC),Y
1843  2B7F- D0 03              BNE *+5
1844  2B81- 4C 15 27           JMP FETCH
1845  2B84- 4C CC 26           JMP SYNERR
1846                   *
1847                           TIT GRAPHIC BASIC - EXPRESSIONS
1848                           PAG

----------------------------------------------------------------------

GRAPHIC BASIC - EXPRESSIONS        30/03/18   R65 ASSEMBLER  PAGE 44

1849                   *
1850                   * GETVAR: GET VARIABLE
1851                   **********************
1852                   *
1853  2B87- A2 00      GETVAR  LDX =0
1854  2B89- 20 1B 27           JSR FETCH1
1855  2B8C- 86 44              STX RESTYP-1
1856  2B8E- 85 7B              STA VARSYM
1857  2B90- 20 1B 27           JSR FETCH1      FETCH SAME AGAIN
1858  2B93- 20 63 2C           JSR TLETT
1859  2B96- B0 03              BCS *+5
1860  2B98- 4C CC 26   SYNER1  JMP SYNERR
1861                   *
1862  2B9B- A2 00              LDX =0
1863  2B9D- 86 45              STX RESTYP
1864  2B9F- 86 46              STX RESTYP+1
1865  2BA1- 20 15 27           JSR FETCH
1866  2BA4- 90 05              BCC *+7         SKIP, IF NUMBER
1867  2BA6- 20 63 2C           JSR TLETT
1868  2BA9- 90 0B              BCC *+13
1869  2BAB- AA                 TAX             SAVE SECOND CHAR IN X
1870  2BAC- 20 15 27           JSR FETCH
1871  2BAF- 90 FB              BCC *-3         SKIP NUMBERS
1872  2BB1- 20 63 2C           JSR TLETT       SKIP LETTERS
1873  2BB4- B0 F6              BCS *-8
1874                   *
1875  2BB6- C9 24              CMP ='$'        STRING?
1876  2BB8- D0 06              BNE *+8
1877  2BBA- A9 FF              LDA =$FF
1878  2BBC- 85 45              STA RESTYP
1879  2BBE- D0 10              BNE GETV1       ALLWAYS TAKEN
1880                   *
1881  2BC0- C9 25              CMP ='%'        INTEGER?
1882  2BC2- D0 13              BNE GETV1+7
1883  2BC4- A5 48              LDA FLAG1
1884  2BC6- D0 D0              BNE SYNER1
1885  2BC8- A9 80              LDA =$80
1886  2BCA- 85 46              STA RESTYP+1
1887  2BCC- 05 7B              ORA VARSYM
1888  2BCE- 85 7B              STA VARSYM
1889  2BD0- 8A         GETV1   TXA             GET BACK SECOND CHAR
1890  2BD1- 09 80              ORA =$80
1891  2BD3- AA                 TAX
1892  2BD4- 20 15 27           JSR FETCH
1893                   *
1894  2BD7- 86 7C              STX VARSYM+1
1895  2BD9- 38                 SEC             NEXT CHAR IN A
1896  2BDA- 05 48              ORA FLAG1
1897  2BDC- E9 28              SBC ='('
1898  2BDE- D0 03              BNE *+5

----------------------------------------------------------------------

GRAPHIC BASIC - EXPRESSIONS        30/03/18   R65 ASSEMBLER  PAGE 45

1899  2BE0- 4C 07 3A           JMP GETARR      GET ARRAY
1900                   *
1901  2BE3- A9 00              LDA =0
1902  2BE5- 85 48              STA FLAG1
1903  2BE7- A5 63              LDA STVAR
1904  2BE9- A6 64              LDX STVAR+1
1905  2BEB- A0 00              LDY =0
1906  2BED- 86 96              STX TRANSP+1
1907  2BEF- 85 95      GETV2   STA TRANSP      SEARCH IN VAR TB
1908  2BF1- E4 66              CPX EOVAR+1
1909  2BF3- D0 04              BNE *+6
1910  2BF5- C5 65              CMP EOVAR
1911  2BF7- F0 18              BEQ GETV3       BRANCH, IF END OF TABLE
1912  2BF9- A5 7B              LDA VARSYM
1913  2BFB- D1 95              CMP (TRANSP),Y
1914  2BFD- D0 08              BNE *+10
1915  2BFF- A5 7C             LDA VARSYM+1
1916  2C01- C8                 INY
1917  2C02- D1 95              CMP (TRANSP),Y
1918  2C04- F0 4E              BEQ GETV9       BRANCH, IF FOUND
1919  2C06- 88                 DEY
1920  2C07- 18                 CLC
1921  2C08- A5 95              LDA TRANSP
1922  2C0A- 69 07              ADC =7
1923  2C0C- 90 E1              BCC GETV2
1924  2C0E- E8                 INX
1925  2C0F- D0 DC              BNE GETV2-2
1926                   *
1927  2C11- A5 CF      GETV3   LDA TEMP4+1
1928  2C13- F0 05              BEQ *+7
1929  2C15- A2 56              LDX =$56
1930  2C17- 4C 43 23           JMP ERROR       UNDEFINED VARIABLE
1931  2C1A- A5 65              LDA EOVAR
1932  2C1C- A4 66              LDY EOVAR+1
1933  2C1E- 85 95              STA TRANSP
1934  2C20- 84 96              STY TRANSP+1
1935  2C22- A5 67              LDA STSPAC
1936  2C24- A4 68              LDY STSPAC+1
1937  2C26- 85 90              STA BEGINB
1938  2C28- 84 91              STY BEGINB+1
1939  2C2A- 18                 CLC
1940  2C2B- 69 07              ADC =7
1941  2C2D- 90 01              BCC *+3
1942  2C2F- C8                 INY
1943  2C30- 85 8E              STA ENDB
1944  2C32- 84 8F              STY ENDB+1
1945  2C34- 20 C4 22           JSR MKROOM
1946  2C37- A5 8E              LDA ENDB        SET END OF VAR TB
1947  2C39- A4 8F              LDY ENDB+1
1948  2C3B- C8                 INY

----------------------------------------------------------------------

GRAPHIC BASIC - EXPRESSIONS        30/03/18   R65 ASSEMBLER  PAGE 46

1949  2C3C- 85 65              STA EOVAR
1950  2C3E- 84 66              STY EOVAR+1     1+END OF TABLE
1951  2C40- A0 00              LDY =0
1952  2C42- A5 7B              LDA VARSYM      SAVE SYMBOL
1953  2C44- 91 95              STA (TRANSP),Y
1954  2C46- C8                 INY
1955  2C47- A5 7C              LDA VARSYM+1
1956  2C49- 91 95              STA (TRANSP),Y
1957  2C4B- A9 00              LDA =0
1958  2C4D- C8                 INY
1959  2C4E- 91 95              STA (TRANSP),Y  CLEAR VALUE
1960  2C50- C0 06              CPY =6
1961  2C52- D0 F9              BNE *-5
1962                   *
1963  2C54- A5 95      GETV9   LDA TRANSP
1964  2C56- 18                 CLC
1965  2C57- 69 02              ADC =2
1966  2C59- A4 96              LDY TRANSP+1
1967  2C5B- 90 01              BCC *+3
1968  2C5D- C8                 INY
1969  2C5E- 85 7D              STA VARSTP
1970  2C60- 84 7E              STY VARSTP+1
1971  2C62- 60                 RTS
1972                   *
1973                   * TLETT: TEST LETTER (C=1 IF LETTER)
1974                   ************************************
1975                   *
1976  2C63- C9 41      TLETT   CMP =$41
1977  2C65- 90 05              BCC *+7
1978  2C67- E9 5B              SBC =$5B
1979  2C69- 38                 SEC
1980  2C6A- E9 A5              SBC =$A5
1981  2C6C- 60                 RTS
1982                   *
1983                   * TSTRR1
1984                   *
1985  2C6D- 46 47      TSTRR1  LSR TEMP2
1986  2C6F- 48                 PHA
1987  2C70- 49 FF              EOR =$FF
1988  2C72- 38                 SEC
1989  2C73- 65 69              ADC BTSTRG
1990  2C75- A4 6A              LDY BTSTRG+1
1991  2C77- B0 01              BCS *+3
1992  2C79- 88                 DEY
1993  2C7A- C4 68              CPY STSPAC+1
1994  2C7C- 90 11              BCC TSTRR2
1995  2C7E- D0 04              BNE *+6
1996  2C80- C5 67              CMP STSPAC
1997  2C82- 90 0B              BCC TSTRR2
1998  2C84- 85 69              STA BTSTRG

----------------------------------------------------------------------

GRAPHIC BASIC - EXPRESSIONS        30/03/18   R65 ASSEMBLER  PAGE 47

1999  2C86- 84 6A              STY BTSTRG+1
2000  2C88- 85 6B              STA TPSTRG
2001  2C8A- 84 6C              STY TPSTRG+1
2002  2C8C- AA                 TAX
2003  2C8D- 68                 PLA
2004  2C8E- 60                 RTS
2005                   *
2006  2C8F- A2 3A      TSTRR2  LDX =$3A
2007  2C91- A5 47              LDA TEMP2
2008  2C93- 10 03              BPL *+5
2009  2C95- 4C 43 23           JMP ERROR       OUT OF MEMORY
2010  2C98- 20 A2 2C           JSR PKSTRG
2011  2C9B- A9 80              LDA =$80
2012  2C9D- 85 47              STA TEMP2
2013  2C9F- 68                 PLA
2014  2CA0- D0 CD              BNE TSTRR1+2
2015                   *
2016                   * PKSTRG: PACK STRINGS
2017                   **********************
2018                   *
2019  2CA2- A6 6D      PKSTRG  LDX TPMEM
2020  2CA4- A5 6E              LDA TPMEM+1
2021  2CA6- 86 69              STX BTSTRG
2022                    * BASIC3:A ORIGINAL 7/1/1982, RECOVERED 3/2018
2023  2CA8- 85 6A              STA BTSTRG+1
2024  2CAA- A0 00              LDY =0
2025  2CAC- 84 85              STY TEMP6+1
2026  2CAE- A5 67              LDA STSPAC
2027  2CB0- A6 68              LDX STSPAC+1
2028  2CB2- 85 95              STA TRANSP
2029  2CB4- 86 96              STX TRANSP+1
2030  2CB6- A9 4F              LDA =STRST      START OF STRING STACK
2031  2CB8- A2 00              LDX =0
2032  2CBA- 85 58              STA TEMP1
2033  2CBC- 86 59              STX TEMP1+1
2034  2CBE- C5 4C              CMP STRSTP
2035  2CC0- F0 05              BEQ *+7
2036  2CC2- 20 41 2D           JSR PKSTR3
2037  2CC5- F0 F7              BEQ *-7         DO UNTIL STACK EMPTY
2038  2CC7- A9 07              LDA =7
2039  2CC9- 85 89              STA SIZE
2040  2CCB- A5 63              LDA STVAR
2041  2CCD- A6 64              LDX STVAR+1
2042  2CCF- 85 58              STA TEMP1
2043  2CD1- 86 59              STX TEMP1+1
2044  2CD3- E4 66              CPX EOVAR+1
2045  2CD5- D0 04              BNE *+6
2046  2CD7- C5 65              CMP EOVAR
2047  2CD9- F0 05              BEQ *+7
2048  2CDB- 20 37 2D           JSR PKSTR2

----------------------------------------------------------------------

GRAPHIC BASIC - EXPRESSIONS        30/03/18   R65 ASSEMBLER  PAGE 48

2049  2CDE- F0 F3              BEQ *-11
2050                   *
2051  2CE0- 85 8E              STA ENDB
2052  2CE2- 86 8F              STX ENDB+1
2053  2CE4- A9 03              LDA =3
2054  2CE6- 85 89              STA SIZE
2055  2CE8- A5 8E      PKSTR1  LDA ENDB
2056  2CEA- A6 8F              LDX ENDB+1
2057  2CEC- E4 68              CPX STSPAC+1
2058  2CEE- D0 07              BNE *+9
2059  2CF0- C5 67              CMP STSPAC
2060  2CF2- D0 03              BNE *+5
2061  2CF4- 4C 80 2D           JMP PKSTR5      DO UNTIL THROUGH ARRAYS
2062                   *
2063  2CF7- 85 58              STA TEMP1
2064  2CF9- 86 59              STX TEMP1+1
2065  2CFB- A0 00              LDY =0
2066  2CFD- B1 58              LDA (TEMP1),Y
2067  2CFF- AA                TAX             SAVE IN X
2068  2D00- C8                 INY
2069  2D01- B1 58              LDA (TEMP1),Y
2070  2D03- 08                 PHP
2071  2D04- C8                 INY
2072  2D05- B1 58              LDA (TEMP1),Y
2073  2D07- 65 8E              ADC ENDB
2074  2D09- 85 8E              STA ENDB
2075  2D0B- C8                 INY
2076  2D0C- B1 58              LDA (TEMP1),Y
2077  2D0E- 65 8F              ADC ENDB+1
2078  2D10- 85 8F              STA ENDB+1
2079  2D12- 28                 PLP
2080  2D13- 10 D3              BPL PKSTR1
2081  2D15- 8A                 TXA
2082  2D16- 30 D0              BMI PKSTR1
2083  2D18- C8                 INY
2084  2D19- B1 58              LDA (TEMP1),Y
2085  2D1B- 0A                 ASL A
2086  2D1C- 69 05              ADC =5
2087  2D1E- A0 00              LDY =0
2088  2D20- 65 58              ADC TEMP1
2089  2D22- 85 58              STA TEMP1
2090  2D24- 90 02              BCC *+4
2091  2D26- E6 59              INC TEMP1+1
2092  2D28- A6 59              LDX TEMP1+1
2093  2D2A- E4 8F              CPX ENDB+1
2094  2D2C- D0 04              BNE *+6
2095  2D2E- C5 8E              CMP ENDB
2096  2D30- F0 BA              BEQ PKSTR1+4
2097  2D32- 20 41 2D           JSR PKSTR3
2098  2D35- F0 F3              BEQ *-11

----------------------------------------------------------------------

GRAPHIC BASIC - EXPRESSIONS        30/03/18   R65 ASSEMBLER  PAGE 49

2099  2D37- B1 58      PKSTR2  LDA (TEMP1),Y
2100  2D39- 30 35              BMI PKSTR4
2101  2D3B- C8                 INY
2102  2D3C- B1 58              LDA (TEMP1),Y
2103  2D3E- 10 30              BPL PKSTR4
2104  2D40- C8                 INY
2105                   *
2106  2D41- B1 58      PKSTR3  LDA (TEMP1),Y
2107  2D43- F0 2B              BEQ PKSTR4
2108  2D45- C8                 INY
2109  2D46- B1 58              LDA (TEMP1),Y
2110  2D48- AA                 TAX
2111  2D49- C8                 INY
2112  2D4A- B1 58              LDA (TEMP1),Y
2113  2D4C- C5 6A              CMP BTSTRG+1
2114  2D4E- 90 06              BCC *+8
2115  2D50- D0 1E              BNE PKSTR4
2116  2D52- E4 69              CPX BTSTRG
2117  2D54- B0 1A              BCS PKSTR4
2118  2D56- C5 96              CMP TRANSP+1
2119  2D58- 90 16              BCC PKSTR4
2120  2D5A- D0 04              BNE *+6
2121  2D5C- E4 95              CPX TRANSP
2122  2D5E- 90 10              BCC PKSTR4
2123  2D60- 86 95              STX TRANSP
2124  2D62- 85 96              STA TRANSP+1
2125  2D64- A5 58              LDA TEMP1
2126  2D66- A6 59              LDX TEMP1+1
2127  2D68- 85 84              STA TEMP6
2128  2D6A- 86 85              STX TEMP6+1
2129  2D6C- A5 89              LDA SIZE
2130  2D6E- 85 8B              STA PNT1
2131                   *
2132  2D70- A5 89      PKSTR4  LDA SIZE
2133  2D72- 18                 CLC
2134  2D73- 65 58              ADC TEMP1
2135  2D75- 85 58              STA TEMP1
2136  2D77- 90 02              BCC *+4
2137  2D79- E6 59              INC TEMP1+1
2138  2D7B- A6 59              LDX TEMP1+1
2139  2D7D- A0 00              LDY =0
2140  2D7F- 60                 RTS
2141                   *
2142  2D80- A6 85      PKSTR5  LDX TEMP6+1
2143  2D82- F0 F7              BEQ *-7
2144  2D84- A5 8B              LDA PNT1
2145  2D86- E9 03              SBC =3
2146  2D88- 4A                 LSR A
2147  2D89- A8                 TAY
2148  2D8A- 85 8B              STA PNT1

----------------------------------------------------------------------

GRAPHIC BASIC - EXPRESSIONS        30/03/18   R65 ASSEMBLER  PAGE 50

2149  2D8C- B1 84              LDA (TEMP6),Y
2150  2D8E- 65 95              ADC TRANSP
2151  2D90- 85 90              STA BEGINB
2152  2D92- A5 96              LDA TRANSP+1
2153  2D94- 69 00              ADC =0
2154  2D96- 85 91              STA BEGINB+1
2155  2D98- A5 69              LDA BTSTRG
2156  2D9A- A6 6A              LDX BTSTRG+1
2157  2D9C- 85 8E              STA ENDB
2158  2D9E- 86 8F              STX ENDB+1
2159  2DA0- 20 CB 22           JSR MKROOM+7
2160  2DA3- A4 8B              LDY PNT1
2161  2DA5- C8                 INY
2162  2DA6- A5 8E              LDA ENDB
2163  2DA8- 91 84              STA (TEMP6),Y
2164  2DAA- AA                 TAX
2165  2DAB- E6 8F              INC ENDB+1
2166  2DAD- A5 8F              LDA ENDB+1
2167  2DAF- C8                 INY
2168  2DB0- 91 84              STA (TEMP6),Y
2169  2DB2- 4C A6 2C           JMP PKSTRG+4
2170                   *
2171                   * TSTTTM: TEST STRING ROOM
2172                   **************************
2173                   *
2174  2DB5- A6 9A      TSTRRM  LDX MANT+2
2175  2DB7- A4 9B              LDY MANT+3
2176  2DB9- 86 86              STX TEMP5
2177  2DBB- 84 87              STY TEMP5+1
2178  2DBD- 20 6D 2C           JSR TSTRR1
2179  2DC0- 86 98              STX MANT
2180  2DC2- 84 99              STY MANT+1
2181  2DC4- 85 97              STA EXP
2182  2DC6- 60                 RTS
2183                   *
2184                   * INSSTR: INSERT STRING
2185                   ***********************
2186                   *
2187  2DC7- A0 00      INSSTR  LDY =0
2188  2DC9- B1 A5              LDA (DYADIC+6),Y
2189  2DCB- 48                 PHA             A
2190  2DCC- C8                 INY
2191  2DCD- B1 A5              LDA (DYADIC+6),Y
2192  2DCF- AA                 TAX             X
2193  2DD0- C8                 INY
2194  2DD1- B1 A5              LDA (DYADIC+6),Y
2195  2DD3- A8                 TAY             Y
2196  2DD4- 68                 PLA
2197                   *
2198  2DD5- 86 58      INSST0  STX TEMP1       X,Y=START

----------------------------------------------------------------------

GRAPHIC BASIC - EXPRESSIONS        30/03/18   R65 ASSEMBLER  PAGE 51

2199  2DD7- 84 59              STY TEMP1+1
2200  2DD9- A8                 TAY             A=SIZE
2201  2DDA- F0 0A              BEQ *+12
2202  2DDC- 48                 PHA
2203  2DDD- 88                 DEY
2204  2DDE- B1 58              LDA (TEMP1),Y
2205  2DE0- 91 6B              STA (TPSTRG),Y
2206  2DE2- 98                 TYA
2207  2DE3- D0 F8              BNE *-6
2208  2DE5- 68                 PLA
2209  2DE6- 18                 CLC
2210  2DE7- 65 6B              ADC TPSTRG
2211  2DE9- 85 6B              STA TPSTRG
2212  2DEB- 90 02              BCC *+4
2213  2DED- E6 6C              INC TPSTRG+1
2214  2DEF- 60                 RTS
2215                   *
2216                   * TESTTP: REST RESULT TYPE
2217                   **************************
2218                   * C=0: MUST BE NUMERIC, C=1 MUST BE STRING
2219                   *
2220  2DF0- 18         TESTTP  CLC
2221  2DF1- 24 45              BIT RESTYP
2222  2DF3- 30 03              BMI *+5
2223  2DF5- B0 03              BCS *+5
2224  2DF7- 60                 RTS
2225  2DF8- B0 FD              BCS *-1
2226  2DFA- A2 96              LDX =$96        TYPE MISSMATCH
2227  2DFC- 4C 43 23           JMP ERROR
2228                   *
2229                   * EXPRESSION
2230                   ************
2231                   *
2232  2DFF- A6 A9     EXPRES  LDX PC          DEC PC BY 1
2233  2E01- D0 02              BNE *+4
2234  2E03- C6 AA              DEC PC+1
2235  2E05- C6 A9              DEC PC
2236  2E07- A2 00              LDX =0
2237  2E09- 8A                 TXA
2238  2E0A- 48                 PHA             CURRENT ORDER
2239  2E0B- A9 01              LDA =1
2240  2E0D- 20 34 23           JSR TSSTK
2241  2E10- 20 25 2F           JSR SIMEXP
2242  2E13- A9 00              LDA =0
2243  2E15- 85 83              STA LOGIC
2244  2E17- 20 1B 27           JSR FETCH1
2245  2E1A- 38         EXPR1   SEC
2246  2E1B- E9 BE              SBC =$BE        CODE FOR >
2247  2E1D- 90 1A              BCC EXPR2       SKIP, IF NOT LOGIC OP
2248  2E1F- C9 03              CMP =$03

----------------------------------------------------------------------

GRAPHIC BASIC - EXPRESSIONS        30/03/18   R65 ASSEMBLER  PAGE 52

2249  2E21- B0 16              BCS EXPR2
2250                   *
2251  2E23- C9 01              CMP =1
2252  2E25- 2A                 ROL A
2253  2E26- 49 01              EOR =1          >=BIT1. ==BIT2, <=BIT3
2254  2E28- 45 83              EOR LOGIC
2255  2E2A- C5 83              CMP LOGIC
2256  2E2C- B0 03              BCS *+5
2257  2E2E- 4C CC 26           JMP SYNERR
2258  2E31- 85 83              STA LOGIC
2259  2E33- 20 15 27           JSR FETCH
2260  2E36- 4C 1A 2E           JMP EXPR1
2261                   *
2262  2E39- A6 83      EXPR2   LDX LOGIC
2263  2E3B- D0 2C              BNE EXPR3       SKIP, IF LOGIC OP
2264  2E3D- B0 7D              BCS EXPR6
2265  2E3F- 69 07              ADC =7
2266  2E41- 90 79              BCC EXPR6
2267  2E43- 65 45              ADC RESTYP      C+1
2268  2E45- D0 03              BNE *+5
2269  2E47- 4C E7 2E           JMP STRADD      STRING ADDITION
2270  2E4A- 69 FF              ADC =$FF
2271  2E4C- 85 58              STA TEMP1
2272  2E4E- 0A                 ASL A
2273  2E4F- 65 58              ADC TEMP1
2274  2E51- A8                 TAY             Y=3*A
2275  2E52- 68         EXPR2A  PLA             CURRENT ORDER
2276  2E53- D9 F2 2F           CMP MATHTB,Y    COMPARE WITH NEW ONE
2277  2E56- B0 69              BCS EXPR6+5
2278  2E58- 20 F0 2D           JSR TESTTP      MUST BE NUMERIC
2279  2E5B- 48                 PHA
2280  2E5C- 20 82 2E           JSR EXPR4+7
2281  2E5F- 68                 PLA
2282  2E60- A4 81              LDY TEMP3+2
2283  2E62- 10 17              BPL EXPR4
2284  2E64- AA                 TAX
2285  2E65- F0 58              BEQ EXPR6+3
2286  2E67- D0 61              BNE EXPR7
2287                   *
2288  2E69- 46 45      EXPR3   LSR RESTYP
2289  2E6B- 8A                 TXA
2290  2E6C- 2A                 ROL A
2291  2E6D- A6 A9              LDX PC          DECR PC
2292  2E6F- D0 02              BNE *+4
2293  2E71- C6 AA              DEC PC+1
2294  2E73- C6 A9              DEC PC
2295  2E75- A0 1B              LDY =$1B        MATHOP =
2296  2E77- 85 83              STA LOGIC
2297  2E79- D0 D7              BNE EXPR2A      ALLWAYS TAKEN
2298  2E7B- D9 F2 2F   EXPR4   CMP MATHTB,Y

----------------------------------------------------------------------

GRAPHIC BASIC - EXPRESSIONS        30/03/18   R65 ASSEMBLER  PAGE 53

2299  2E7E- B0 4A              BCS EXPR7
2300  2E80- 90 D9              BCC EXPR2A+9    ALLWAYS TAKEN
2301                   *
2302  2E82- B9 F4 2F           LDA MATHTB+2,Y
2303  2E85- 48                 PHA
2304  2E86- B9 F3 2F           LDA MATHTB+1,Y
2305  2E89- 48                 PHA
2306  2E8A- 20 93 2E           JSR EXPR5
2307  2E8D- A5 83              LDA LOGIC
2308  2E8F- 48                 PHA
2309  2E90- 4C 09 2E           JMP EXPRES+10
2310                   *
2311  2E93- A5 9C      EXPR5   LDA SIGN
2312  2E95- BE F2 2F           LDX MATHTB,Y
2313  2E98- A8                 TAY
2314  2E99- 68                 PLA
2315  2E9A- 85 58              STA TEMP1
2316  2E9C- 68                 PLA
2317  2E9D- 85 59              STA TEMP1+1     GET MATHOPT ADDRESS
2318  2E9F- E6 58              INC TEMP1
2319  2EA1- D0 02              BNE *+4
2320  2EA3- E6 59              INC TEMP1+1
2321  2EA5- 98                 TYA
2322  2EA6- 48                 PHA
2323  2EA7- 20 08 35   MATHOP  JSR ROUND
2324  2EAA- A5 9B              LDA MANT+3
2325  2EAC- 48                 PHA
2326  2EAD- A5 9A              LDA MANT+2
2327  2EAF- 48                 PHA
2328  2EB0- A5 99              LDA MANT+1
2329  2EB2- 48                 PHA
2330  2EB3- A5 98              LDA MANT
2331  2EB5- 48                 PHA
2332  2EB6- A5 97              LDA EXP
2333  2EB8- 48                 PHA
2334  2EB9- 6C 58 00           JMP (TEMP1)     EXECUTE MATHOP
2335                   *
2336  2EBC- A0 FF      EXPR6   LDY =$FF
2337  2EBE- 68                 PLA
2338  2EBF- F0 23              BEQ EXPR8
2339  2EC1- C9 64              CMP =$64        PRIORITY CODE COMPARE
2340  2EC3- F0 03              BEQ *+5
2341  2EC5- 20 F0 2D           JSR TESTTP
2342  2EC8- 84 81              STY TEMP3+2
2343  2ECA- 68         EXPR7   PLA
2344  2ECB- 4A                 LSR A
2345  2ECC- 85 4A              STA READFL+1
2346  2ECE- 68                 PLA
2347  2ECF- 85 9F              STA DYADIC
2348  2ED1- 68                 PLA

----------------------------------------------------------------------

GRAPHIC BASIC - EXPRESSIONS        30/03/18   R65 ASSEMBLER  PAGE 54

2349  2ED2- 85 A0              STA DYADIC+1
2350  2ED4- 68                 PLA
2351  2ED5- 85 A1              STA DYADIC+2
2352  2ED7- 68                 PLA
2353  2ED8- 85 A2              STA DYADIC+3
2354  2EDA- 68                 PLA
2355  2EDB- 85 A3              STA DYADIC+4
2356  2EDD- 68                 PLA
2357  2EDE- 85 A4              STA DYADIC+5
2358  2EE0- 45 9C              EOR SIGN
2359  2EE2- 85 A5              STA DYADIC+6
2360  2EE4- A5 97      EXPR8   LDA EXP
2361  2EE6- 60                 RTS
2362                   *
2363                   * STRADD: STRING ADDITION
2364                   *************************
2365                   *
2366  2EE7- A5 9B      STRADD  LDA MANT+3
2367  2EE9- 48                 PHA
2368  2EEA- A5 9A              LDA MANT+2
2369  2EEC- 48                 PHA
2370  2EED- 20 25 2F           JSR SIMEXP      GET SECOND STRING
2371  2EF0- 38                 SEC
2372  2EF1- 20 F1 2D           JSR TESTTP+1     MUST BE STRING
2373  2EF4- 68                 PLA
2374  2EF5- 85 A5              STA DYADIC+6
2375  2EF7- 68                 PLA
2376  2EF8- 85 A6              STA DYADIC+7
2377  2EFA- A0 00              LDY =0
2378  2EFC- B1 A5              LDA (DYADIC+6),Y        SIZE OF S1
2379  2EFE- 18                 CLC
2380  2EFF- 71 9A             ADC (MANT+2),Y          SIZE OF S2
2381  2F01- 90 05              BCC *+7
2382  2F03- A2 A4              LDX =$A4
2383  2F05- 4C 43 23           JMP ERROR       STRING TOO LONG
2384  2F08- 20 B5 2D           JSR TSTRRM
2385  2F0B- 20 C7 2D           JSR INSSTR
2386  2F0E- A5 86              LDA TEMP5
2387  2F10- A4 87              LDY TEMP5+1
2388  2F12- 20 1B 29           JSR PREPST+4
2389  2F15- 20 D9 2D           JSR INSST0+4
2390  2F18- A5 A5              LDA DYADIC+6
2391  2F1A- A4 A6              LDY DYADIC+7
2392  2F1C- 20 1B 29           JSR PREPST+4
2393  2F1F- 20 EF 28           JSR STRSI3
2394  2F22- 4C 17 2E           JMP EXPR1-3
2395                   *
2396                   * SIMEXP: SIMPLE EXPRESSION
2397                   ***************************
2398                   *

----------------------------------------------------------------------

GRAPHIC BASIC - EXPRESSIONS        30/03/18   R65 ASSEMBLER  PAGE 55

2399  2F25- A9 00      SIMEXP  LDA =0
2400  2F27- 85 45              STA RESTYP
2401  2F29- 20 15 27           JSR FETCH
2402  2F2C- B0 03              BCS *+5         SKIP, IF NOT NUMBER
2403  2F2E- 4C A5 35   SIMEX1  JMP NUMBER
2404                   *
2405  2F31- 20 63 2C           JSR TLETT
2406  2F34- B0 62              BCS VARIAB      SKIP, IF VARIABLE
2407  2F36- C9 D8              CMP =$D8        CODE FOR PI
2408  2F38- D0 0F              BNE SIMEX0
2409                   *
2410  2F3A- A9 44              LDA =<PI
2411  2F3C- A0 2F              LDY =>PI
2412  2F3E- 20 B7 34           JSR GETFLP
2413  2F41- 4C 15 27           JMP FETCH
2414  2F44- 82 49 0F   PI      BYT $82,$49,$0F,$DA,$A1
2414  2F47- DA A1 
2415                   *
2416  2F49- C9 24      SIMEX0  CMP ='$'        HEX INPUT
2417  2F4B- F0 E1              BEQ SIMEX1
2418                   *
2419  2F4D- C9 2E              CMP ='.'
2420  2F4F- F0 DD              BEQ SIMEX1
2421  2F51- C9 B8              CMP =$B8        CODE FOR -VALUE OF PI
2422  2F53- F0 3C              BEQ SIMEX5
2423  2F55- C9 B7              CMP =$B7        CODE FOR +
2424  2F57- F0 D0              BEQ SIMEXP+4
2425  2F59- C9 22              CMP ='"'
2426  2F5B- D0 15              BNE SIMEX2      SKIP, IF NOT STRING
2427                   *
2428  2F5D- A5 A9      EXPSTR  LDA PC          STRING EXPRESSION
2429  2F5F- A4 AA              LDY PC+1
2430  2F61- 69 00              ADC =0          INCREMENT BY 1 (C=1)
2431  2F63- 90 01              BCC *+3
2432  2F65- C8                 INY
2433  2F66- 20 B0 28           JSR STRSIZ
2434  2F69- A6 A7      UPDPC   LDX DYADIC+8
2435  2F6B- A4 A8              LDY DYADIC+9
2436  2F6D- 86 A9              STX PC
2437  2F6F- 84 AA              STY PC+1
2438  2F71- 60                 RTS
2439                   *
2440  2F72- C9 B5      SIMEX2  CMP =$B5        CODE FOR NOT
2441  2F74- D0 04              BNE *+6
2442  2F76- A0 18              LDY =$18
2443  2F78- D0 19              BNE SIMEX5+2
2444                   *
2445  2F7A- C9 B2              CMP =$B2        CODE FOR FN
2446  2F7C- D0 03              BNE *+5
2447  2F7E- 4C 7E 3C           JMP FUNC        EXECUTE FUNCTION

----------------------------------------------------------------------

GRAPHIC BASIC - EXPRESSIONS        30/03/18   R65 ASSEMBLER  PAGE 56

2448                   *
2449  2F81- C9 C1              CMP =$C1        CODE FOR SIGN
2450  2F83- 90 03              BCC *+5
2451  2F85- 4C 60 39           JMP BFUNC       EX BASIC FUNCTION
2452                   *
2453  2F88- 20 75 2B   ARGUM   JSR FOLLOW-6    MUST BE (
2454  2F8B- 20 FF 2D           JSR EXPRES
2455  2F8E- 4C 79 2B           JMP FOLLOW-2    MUST BE )
2456                   *
2457  2F91- A0 15      SIMEX5  LDY =$15        EXECUTE NEGATE
2458  2F93- 68                 PLA
2459  2F94- 68                 PLA
2460  2F95- 4C 5C 2E           JMP EXPR2A+10
2461                   *
2462                   * VARIAB: GET VALUE OF VARIABLE
2463                   *******************************
2464                   *
2465  2F98- A2 FF      VARIAB  LDX =$FF        MUST BE DEFINED
2466  2F9A- 86 CF              STX TEMP4+1
2467  2F9C- 20 87 2B           JSR GETVAR
2468  2F9F- 85 9A              STA MANT+2
2469  2FA1- 84 9B              STY MANT+3
2470  2FA3- A5 7B              LDA VARSYM
2471  2FA5- A4 7C              LDY VARSYM+1
2472  2FA7- A6 45              LDX RESTYP
2473  2FA9- F0 01              BEQ *+3
2474  2FAB- 60                 RTS             RTS, IF STRING
2475                   *
2476  2FAC- A5 46              LDA RESTYP+1
2477  2FAE- 10 0D              BPL *+15        SKIP, IF FLP
2478  2FB0- A0 00              LDY =0
2479  2FB2- B1 9A              LDA (MANT+2),Y
2480  2FB4- AA                 TAX
2481  2FB5- C8                 INY
2482  2FB6- B1 9A              LDA (MANT+2),Y
2483  2FB8- A8                 TAY
2484  2FB9- 8A                 TXA
2485  2FBA- 4C E5 2F           JMP INTFLP
2486                   *
2487  2FBD- A5 9A              LDA MANT+2      GET FLP
2488  2FBF- A4 9B              LDY MANT+3
2489  2FC1- 4C B7 34           JMP GETFLP
2490                   *
2491                   *
2492                   * OUTCHR: OUTPUT CHAR
2493                   *********************
2494                   *
2495  2FC4- C9 20      OUTCHR  CMP =$20
2496  2FC6- 90 02              BCC *+4
2497  2FC8- E6 02              INC POS

----------------------------------------------------------------------

GRAPHIC BASIC - EXPRESSIONS        30/03/18   R65 ASSEMBLER  PAGE 57

2498  2FCA- C9 0D              CMP =$D
2499  2FCC- D0 06              BNE *+8
2500  2FCE- 48                 PHA
2501  2FCF- A9 00              LDA =0
2502  2FD1- 85 02              STA POS
2503  2FD3- 68                 PLA
2504                   *
2505  2FD4- 48                 PHA
2506  2FD5- 86 BF              STX SAVEXY
2507  2FD7- 84 C0              STY SAVEXY+1
2508  2FD9- 20 E2 2F           JSR PRC1
2509  2FDC- A6 BF              LDX SAVEXY
2510  2FDE- A4 C0              LDY SAVEXY+1
2511  2FE0- 68                 PLA
2512  2FE1- 60                 RTS
2513                   *
2514  2FE2- 6C B9 00   PRC1    JMP (PVECT)
2515                   *
2516                   * INTFLP: INTEGER TO FLP CONVERSION
2517                   ***********************************
2518                   *
2519  2FE5- A2 00      INTFLP  LDX =0
2520  2FE7- 86 45              STX RESTYP
2521  2FE9- 85 98              STA MANT
2522  2FEB- 84 99              STY MANT+1
2523  2FED- A2 90              LDX =$90
2524  2FEF- 4C 50 35           JMP FLOAT2
2525                   *
2526                   *
2527                   * MATH OPERATION TABLE
2528                   **********************
2529                   * FORMAT: PRIORITY CODE, ADDRESS-1
2530                   *
2531  2FF2- 79         MATHTB  BYT $79
2532  2FF3- 42 33              WRD ADD-1
2533  2FF5- 79                 BYT $79
2534  2FF6- 24 33              WRD SUBTR-1
2535  2FF8- 7B                 BYT $7B
2536  2FF9- 93 38              WRD MULT-1
2537  2FFB- 7B                 BYT $7B
2538  2FFC- D8 37              WRD DIVIDE-1
2539  2FFE- 7F                 BYT $7F
2540  2FFF- DB 3E             WRD POWER-1
2541  3001- 50                 BYT $50
2542  3002- C6 39              WRD AND-1
2543  3004- 46                 BYT $46
2544  3005- C2 39              WRD OR-1
2545  3007- 7D                 BYT $7D
2546  3008- C6 36              WRD NEGATE-1
2547  300A- 5A                 BYT $5A

----------------------------------------------------------------------

GRAPHIC BASIC - EXPRESSIONS        30/03/18   R65 ASSEMBLER  PAGE 58

2548  300B- 50 39              WRD NOT-1
2549  300D- 64                 BYT $64
2550  300E- 68 37              WRD TESTEQ-1
2551                   *
2552                   *
2553                           TIT GRAPHIC BASIC - STATEMENTS
2554                           PAG

----------------------------------------------------------------------

GRAPHIC BASIC - STATEMENTS         30/03/18   R65 ASSEMBLER  PAGE 59

2555                   *
2556                   * FOR: STATEMENT ROUTINE
2557                   ************************
2558                   *
2559  3010- A9 80      FOR     LDA =128
2560  3012- 85 48              STA FLAG1
2561  3014- 20 55 2A           JSR LET
2562  3017- 20 29 28           JSR STACK
2563  301A- D0 05              BNE *+7         SKIP, IF NOT FOR ON ST
2564  301C- 8A                 TXA
2565  301D- 69 0F              ADC =15
2566  301F- AA                 TAX
2567  3020- 9A                 TXS
2568  3021- 68                 PLA             GET RETURN ADDRESS
2569  3022- 68                 PLA
2570  3023- A9 09              LDA =9
2571  3025- 20 34 23           JSR TSSTK       18 BYTES ON STACK?
2572  3028- 20 06 28           JSR SEDPN       SEARCH EOLL OR ":"
2573  302B- 18                 CLC
2574  302C- 98                 TYA
2575  302D- 65 A9              ADC PC          SAVE ADDRESS OF NEXT
2576  302F- 48                 PHA
2577  3030- A5 AA              LDA PC+1
2578  3032- 69 00              ADC =0
2579  3034- 48                 PHA
2580  3035- A5 70              LDA LINE+1      SAVE CURRENT LINE
2581  3037- 48                 PHA
2582  3038- A5 6F              LDA LINE
2583  303A- 48                 PHA
2584  303B- A9 B1              LDA =$B1        CODE FOR "TO"
2585  303D- 20 7B 2B           JSR FOLLOW
2586  3040- 20 F0 2D           JSR TESTTP      MUST BE NUMERIC
2587  3043- 20 FF 2D           JSR EXPRES
2588  3046- 20 F0 2D           JSR TESTTP      MUST BE NUMERIC
2589  3049- A5 9C              LDA SIGN
2590  304B- 09 7F              ORA =$7F
2591  304D- 25 98              AND MANT
2592  304F- 85 98              STA MANT
2593  3051- A9 5C              LDA =<FOR1
2594  3053- A0 30              LDY =>FOR1
2595  3055- 85 58              STA TEMP1
2596  3057- 84 59              STY TEMP1+1
2597  3059- 4C A7 2E           JMP MATHOP
2598                   *
2599  305C- A9 85      FOR1    LDA =<VAL1      LOAD 1.0E0
2600  305E- A0 30              LDY =>VAL1
2601  3060- 20 B7 34           JSR GETFLP
2602  3063- 20 1B 27           JSR FETCH1
2603  3066- C9 B6              CMP =$B6        STEP?
2604  3068- D0 09              BNE *+11

----------------------------------------------------------------------

GRAPHIC BASIC - STATEMENTS         30/03/18   R65 ASSEMBLER  PAGE 60

2605  306A- 20 15 27           JSR FETCH
2606  306D- 20 FF 2D           JSR EXPRES
2607  3070- 20 F0 2D           JSR TESTTP      MUST BE NUMERIC
2608  3073- 20 37 35           JSR SGN1
2609  3076- 20 98 2E           JSR EXPR5+5
2610  3079- A5 80              LDA TEMP3+1     STEP TO STACK
2611  307B- 48                 PHA
2612  307C- A5 7F              LDA TEMP3
2613  307E- 48                 PHA
2614  307F- A9 81              LDA =$81        CODE FOR FOR
2615  3081- 48                 PHA
2616  3082- 4C B1 26           JMP EXRUN
2617                   *
2618  3085- 81 00 00   VAL1    BYT $81,0,0,0,0    1.0E0
2618  3088- 00 00 
2619                   *
2620                   *
2621                   * ON: STATEMENT ROUTINE
2622                   ***********************
2623                   *
2624  308A- 20 05 37   ON      JSR NUMEXP+3
2625  308D- 48                 PHA
2626  308E- C9 8D              CMP =$8D        CODE FOR GOSUB
2627  3090- F0 07              BEQ ON1
2628  3092- C9 89              CMP =$89        CODE FOR GOTO
2629  3094- F0 03              BEQ ON1
2630  3096- 4C CC 26           JMP SYNERR
2631                   *
2632  3099- C6 9B      ON1     DEC MANT+3
2633  309B- D0 04              BNE *+6
2634  309D- 68                 PLA
2635  309E- 4C 00 27           JMP EXCOD1+3
2636                   *
2637  30A1- 20 15 27           JSR FETCH
2638  30A4- 20 57 28           JSR FETCHI
2639  30A7- C9 2C              CMP =','
2640  30A9- F0 EE              BEQ ON1
2641  30AB- 68                 PLA
2642  30AC- 60                 RTS
2643                   *
2644                   *
2645                   * GET: STATEMENT ROUTINE
2646                   ************************
2647                   *
2648  30AD- 20 FC 32   GET     JSR ILLDIR      ILLEGAL IN DIRECT MODE
2649  30B0- C9 23              CMP ='#'
2650  30B2- D0 03              BNE *+5
2651  30B4- 20 B3 45           JSR SETINP      SET INPUT DEVICE
2652                   *
2653  30B7- A2 08              LDX =<(INBUFF+1)

----------------------------------------------------------------------

GRAPHIC BASIC - STATEMENTS         30/03/18   R65 ASSEMBLER  PAGE 61

2654  30B9- A0 00              LDY =0
2655  30BB- 84 08              STY INBUFF+1
2656  30BD- A9 40              LDA =$40
2657  30BF- 20 4D 31           JSR READ+6
2658  30C2- A6 C1      GETEND  LDX INPDEV
2659  30C4- F0 07              BEQ *+9
2660  30C6- 20 DB 45           JSR RSTIDV
2661  30C9- A2 00              LDX =0
2662  30CB- 86 C1              STX INPDEV
2663  30CD- 60                 RTS
2664                   *
2665                   *
2666                   * INPUT: STATEMENT ROUTINE
2667                   **************************
2668                   *
2669  30CE- C9 23      INPUT   CMP ='#'
2670  30D0- D0 06              BNE *+8
2671  30D2- 20 B3 45           JSR SETINP      SET INPUT DEVICE
2672  30D5- 4C E7 30           JMP INPUT1
2673                   *
2674  30D8- C9 22              CMP ='"'
2675  30DA- D0 0B              BNE INPUT1
2676  30DC- 20 5D 2F           JSR EXPSTR
2677  30DF- A9 3B              LDA =';'
2678  30E1- 20 7B 2B           JSR FOLLOW
2679  30E4- 20 96 28           JSR OUTSTR+3
2680                   *
2681  30E7- 20 FC 32   INPUT1  JSR ILLDIR      ILLEGAL IN DIRECT MODE
2682  30EA- A9 2C              LDA =$2C
2683  30EC- 85 06              STA INTEG+1
2684  30EE- 20 05 31           JSR INPUT2
2685  30F1- A5 07              LDA INBUFF
2686  30F3- F0 08              BEQ *+10        SKIP, IF EMPTY
2687  30F5- A9 00              LDA =0
2688  30F7- 20 4D 31           JSR READ+6
2689  30FA- 4C C2 30           JMP GETEND
2690                   *
2691  30FD- A5 C1              LDA INPDEV      IF EMPTY
2692  30FF- D0 ED             BNE INPUT1+7
2693  3101- 18                 CLC
2694  3102- 4C 44 27           JMP END+16
2695                   *
2696  3105- A5 C1      INPUT2  LDA INPDEV
2697  3107- D0 0D              BNE INPUT3      SKIP, IF NOT DEV 0
2698  3109- A9 3F              LDA ='?'
2699  310B- 20 C4 2F           JSR OUTCHR
2700  310E- A9 20              LDA =' '
2701  3110- 20 C4 2F           JSR OUTCHR
2702  3113- 4C 78 24           JMP INLIN       GET LINE
2703                   *

----------------------------------------------------------------------

GRAPHIC BASIC - STATEMENTS         30/03/18   R65 ASSEMBLER  PAGE 62

2704  3116- A2 00      INPUT3  LDX =0          GET FROM OTHER DEVICE
2705  3118- 20 DF 45           JSR INCHR
2706  311B- F0 FB              BEQ *-3         IGNORE 0
2707  311D- E8                 INX             SET ANY EOF TO NEXT BYTE
2708  311E- C9 1F              CMP =$1F        EOF?
2709  3120- F0 1E              BEQ INPUT5
2710  3122- CA                 DEX
2711  3123- C9 7F              CMP =$7F        RUBOUT?
2712  3125- F0 02              BEQ *+4
2713  3127- C9 5F              CMP =$5F        OR DELETE
2714  3129- D0 07              BNE INPUT4
2715                   *
2716  312B- 8A                 TXA             YES,TEST X
2717  312C- F0 EA              BEQ INPUT3+2
2718  312E- CA                 DEX
2719  312F- 4C 18 31           JMP INPUT3+2
2720                   *
2721  3132- 29 7F      INPUT4  AND =$7F
2722  3134- 95 07              STA INBUFF,X
2723  3136- E8                 INX
2724  3137- E0 38              CPX =56         END OF BUFFER?
2725  3139- F0 05              BEQ *+7
2726  313B- C9 0D              CMP =$D         CARRIAGE RETURN
2727  313D- D0 D9              BNE INPUT3+2
2728                   *
2729  313F- CA                 DEX
2730  3140- A0 00      INPUT5  LDY =0
2731  3142- 94 07              STY INBUFF,X    SET EOL MARK
2732  3144- A2 06              LDX =<(INBUFF-1)
2733  3146- 60                 RTS
2734                   *
2735                   *
2736                   * READ: STATEMENT ROUTINE
2737                   *************************
2738                   *
2739  3147- A6 77      READ    LDX DATPNT
2740  3149- A4 78              LDY DATPNT+1
2741  314B- A9 98              LDA =$98
2742  314D- 85 49              STA READFL
2743  314F- 86 79              STX DTSPNT
2744  3151- 84 7A              STY DTSPNT+1
2745  3153- A2 00              LDX =0
2746  3155- 86 CF              STX TEMP4+1     VARIABLE MUST NOT BE DEF
2747  3157- 20 87 2B           JSR GETVAR
2748  315A- 85 7F              STA TEMP3
2749  315C- 84 80              STY TEMP3+1
2750  315E- A5 A9              LDA PC          SAVE PC
2751  3160- A4 AA              LDY PC+1
2752  3162- 85 05              STA INTEG
2753  3164- 84 06              STY INTEG+1

----------------------------------------------------------------------

GRAPHIC BASIC - STATEMENTS         30/03/18   R65 ASSEMBLER  PAGE 63

2754  3166- A6 79              LDX DTSPNT
2755  3168- A4 7A              LDY DTSPNT+1
2756  316A- 86 A9              STX PC
2757  316C- 84 AA              STY PC+1
2758  316E- 20 1B 27           JSR FETCH1
2759  3171- D0 18              BNE READ2       SKIP, IF NOT EOL
2760                   *
2761  3173- 24 49              BIT READFL      IF EOL
2762  3175- 50 0B              BVC *+13
2763  3177- 20 DF 45           JSR INCHR
2764  317A- 85 07              STA INBUFF
2765  317C- A0 00              LDY =0
2766  317E- A2 06              LDX =<(INBUFF-1)
2767  3180- D0 05              BNE READ2-4     ALLWAYS TAKEN
2768                   *
2769  3182- 30 72              BMI READ5
2770  3184- 20 05 31           JSR INPUT2
2771                   *
2772  3187- 86 A9              STX PC
2773  3189- 84 AA              STY PC+1
2774  318B- 20 15 27   READ2   JSR FETCH
2775  318E- 24 45              BIT RESTYP
2776  3190- 10 33              BPL READ3       SKIP, IF NOT STRING
2777  3192- 24 49              BIT READFL
2778  3194- 50 0B              BVC *+13
2779  3196- A9 00              LDA =0
2780  3198- 85 41              STA CHRSAV
2781  319A- E8                 INX
2782  319B- 86 A9              STX PC
2783  319D- 98                 TYA
2784  319E- 4C AD 31           JMP READ2A
2785                   *
2786  31A1- 85 41              STA CHRSAV
2787  31A3- C9 22              CMP ='"'
2788  31A5- F0 07              BEQ READ2A+1
2789  31A7- A9 3A              LDA =':'
2790  31A9- 85 41              STA CHRSAV
2791  31AB- A9 2C              LDA =','
2792  31AD- 18         READ2A  CLC
2793  31AE- 85 42              STA CHRSAV+1
2794  31B0- A5 A9              LDA PC
2795  31B2- A4 AA              LDY PC+1
2796  31B4- 69 00              ADC =0
2797  31B6- 90 01              BCC *+3
2798  31B8- C8                 INY
2799  31B9- 20 B6 28           JSR STRSIZ+6
2800  31BC- 20 69 2F           JSR UPDPC
2801  31BF- 20 8E 2A           JSR LET1+4      SAVE STRING
2802  31C2- 4C CD 31           JMP READ3+8
2803                   *

----------------------------------------------------------------------

GRAPHIC BASIC - STATEMENTS         30/03/18   R65 ASSEMBLER  PAGE 64

2804  31C5- 20 A5 35   READ3   JSR NUMBER
2805  31C8- A5 46              LDA RESTYP+1
2806  31CA- 20 76 2A           JSR LET0
2807  31CD- 20 1B 27           JSR FETCH1
2808  31D0- F0 07              BEQ *+9         SKIP IF NOT END OF STMNT
2809  31D2- C9 2C              CMP =','
2810  31D4- F0 03              BEQ *+5
2811  31D6- 4C 5B 32           JMP READ7
2812                   *
2813  31D9- A5 A9              LDA PC
2814  31DB- A4 AA              LDY PC+1
2815  31DD- 85 79              STA DTSPNT
2816  31DF- 84 7A              STY DTSPNT+1
2817  31E1- A5 05              LDA INTEG
2818  31E3- A4 06              LDY INTEG+1
2819  31E5- 85 A9              STA PC
2820  31E7- 84 AA              STY PC+1
2821  31E9- 20 1B 27           JSR FETCH1
2822  31EC- F0 2C              BEQ READ6       SKIP, IF EOL
2823  31EE- A9 2C              LDA =','
2824  31F0- 20 7B 2B           JSR FOLLOW
2825  31F3- 4C 53 31           JMP READ+12     NEXT VARIABLE
2826                   *
2827  31F6- 20 06 28   READ5   JSR SEDPN       SEARCH EOL OR ":"
2828  31F9- C8                 INY
2829  31FA- AA                 TAX
2830  31FB- D0 10              BNE *+18
2831  31FD- C8                 INY
2832  31FE- B1 A9             LDA (PC),Y
2833  3200- F0 72              BEQ DATAER      IF END OF PROGRAM
2834  3202- C8                 INY
2835  3203- B1 A9              LDA (PC),Y
2836  3205- 85 75              STA TEMP7
2837  3207- C8                 INY
2838  3208- B1 A9              LDA (PC),Y
2839  320A- 85 76              STA TEMP7+1
2840  320C- C8                 INY
2841  320D- B1 A9              LDA (PC),Y      GET COMMAND CODE
2842  320F- AA                 TAX
2843  3210- 20 FB 27           JSR DATA+3
2844  3213- E0 83              CPX =$83        CODE FOR DATA
2845  3215- D0 DF              BNE READ5
2846  3217- 4C 8B 31           JMP READ2
2847                   *
2848  321A- A5 79      READ6   LDA DTSPNT
2849  321C- A4 7A              LDY DTSPNT+1
2850  321E- A6 49              LDX READFL
2851  3220- 10 03              BPL *+5
2852  3222- 4C 77 27           JMP RESTOR+29
2853                   *

----------------------------------------------------------------------

GRAPHIC BASIC - STATEMENTS         30/03/18   R65 ASSEMBLER  PAGE 65

2854  3225- A0 00              LDY =0
2855  3227- B1 79              LDA (DTSPNT),Y
2856  3229- F0 0B              BEQ *+13        RTS, IF EOL
2857  322B- A5 C1              LDA INPDEV
2858  322D- D0 07              BNE *+9
2859  322F- A9 37              LDA =<(*+8)
2860  3231- A0 32              LDY =>(*+6)
2861  3233- 4C 93 28           JMP OUTSTR
2862  3236- 60                 RTS
2863                   *
2864  3237- 3F 45 58           BYT '?EXTRA IGNORED',$D,$A,0
2864  323A- 54 52 41 
2864  323D- 20 49 47 
2864  3240- 4E 4F 52 
2864  3243- 45 44 0D 
2864  3246- 0A 00 
2865  3248- 3F 52 45   REDO    BYT '?REDO FROM START',$D,$A,0
2865  324B- 44 4F 20 
2865  324E- 46 52 4F 
2865  3251- 4D 20 53 
2865  3254- 54 41 52 
2865  3257- 54 0D 0A 
2865  325A- 00 
2866                   *
2867  325B- A5 49      READ7   LDA READFL
2868  325D- F0 11              BEQ *+19
2869  325F- 30 04              BMI *+6
2870  3261- A0 FF              LDY =$FF
2871  3263- D0 04              BNE *+6         ALLWAYS TAKEN
2872  3265- A5 75              LDA TEMP7
2873  3267- A4 76              LDY TEMP7+1
2874  3269- 85 6F              STA LINE
2875  326B- 84 70              STY LINE+1
2876  326D- 4C CC 26           JMP SYNERR
2877                   *
2878  3270- A5 C1              LDA INPDEV
2879  3272- F0 05              BEQ *+7
2880  3274- A2 26      DATAER  LDX =$26         DATA ERROR
2881  3276- 4C 43 23           JMP ERROR
2882  3279- A9 48              LDA =<REDO
2883  327B- A0 32              LDY =>REDO
2884  327D- 20 93 28           JSR OUTSTR
2885  3280- A5 73              LDA PNTSAV
2886  3282- A4 74              LDY PNTSAV+1
2887  3284- 85 A9              STA PC
2888  3286- 84 AA              STY PC+1
2889  3288- 60                 RTS
2890                   *
2891                   *
2892                   * NEXT: STATEMENT ROUTINE

----------------------------------------------------------------------

GRAPHIC BASIC - STATEMENTS         30/03/18   R65 ASSEMBLER  PAGE 66

2893                   *************************
2894                   *
2895  3289- D0 04      NEXT    BNE *+6         SKIP, IF NOT EOL
2896  328B- A0 00              LDY =0
2897  328D- F0 07              BEQ *+9         ELSE SET Y=0
2898  328F- A9 FF              LDA =$FF        VARIABLE MUST BE DEF
2899  3291- 86 CF              STX TEMP4+1
2900  3293- 20 87 2B           JSR GETVAR
2901  3296- 85 7F              STA TEMP3       SAVE ADDRESS
2902  3298- 84 80              STY TEMP3+1
2903  329A- 20 29 28           JSR STACK
2904  329D- F0 05              BEQ *+7
2905  329F- A2 00              LDX =0
2906  32A1- 4C 43 23           JMP ERROR       NO MATCHING FOR
2907                   *
2908  32A4- 9A                 TXS
2909  32A5- E8                 INX
2910  32A6- E8                 INX
2911  32A7- E8                 INX
2912  32A8- E8                 INX
2913  32A9- 8A                 TXA             FLP ADDRESS LOW
2914  32AA- E8                 INX
2915  32AB- E8                 INX
2916  32AC- E8                 INX
2917  32AD- E8                 INX
2918  32AE- E8                 INX
2919  32AF- E8                 INX
2920  32B0- 86 5A              STX TEMP1+2
2921  32B2- A0 01              LDY =1          FLP ADDRESS HIGH
2922  32B4- 20 B7 34           JSR GETFLP
2923  32B7- BA                 TSX
2924  32B8- BD 09 01           LDA 265,X
2925  32BB- 85 9C              STA SIGN
2926  32BD- A5 7F              LDA TEMP3
2927  32BF- A4 80              LDY TEMP3+1
2928  32C1- 20 40 33           JSR ADD-3
2929  32C4- 20 DC 34           JSR SAVFLP
2930  32C7- A0 01              LDY =1
2931  32C9- 20 66 35           JSR COMPAR+2
2932  32CC- BA                 TSX
2933  32CD- 38                 SEC
2934  32CE- FD 09 01           SBC 265,X
2935  32D1- F0 17              BEQ *+25
2936  32D3- BD 0F 01           LDA 271,X
2937  32D6- 85 6F              STA LINE
2938  32D8- BD 10 01           LDA 272,X
2939  32DB- 85 70              STA LINE+1
2940  32DD- BD 12 01           LDA 274,X
2941  32E0- 85 A9              STA PC
2942  32E2- BD 11 01           LDA 273,X

----------------------------------------------------------------------

GRAPHIC BASIC - STATEMENTS         30/03/18   R65 ASSEMBLER  PAGE 67

2943  32E5- 85 AA              STA PC+1
2944  32E7- 4C B1 26           JMP EXRUN
2945                   *
2946  32EA- 8A                 TXA
2947  32EB- 69 11              ADC =17         CLEAR STACK
2948  32ED- AA                 TAX
2949  32EE- 9A                 TXS
2950  32EF- 20 1B 27           JSR FETCH1
2951  32F2- C9 2C              CMP =','
2952  32F4- D0 F1              BNE *-13
2953  32F6- 20 15 27           JSR FETCH
2954  32F9- 20 8F 32           JSR NEXT+6      NO RTS FROM THIS SUBR.
2955                   *
2956                   *
2957                   * ILLDIR: ILLEGAL IN DIRECT MODE
2958                   ********************************
2959                   *
2960  32FC- A6 70      ILLDIR  LDX LINE+1
2961  32FE- E8                 INX
2962  32FF- D0 05             BNE *+7         RTS, IF NOT DIRECT
2963  3301- A2 88              LDX =$88
2964  3303- 4C 43 23           JMP ERROR
2965  3306- 60                 RTS
2966                   *
2967                   *
2968                   * OUTLIN: PRINT LINE NO
2969                   ***********************
2970                   *
2971  3307- A9 BB      OUTLIN  LDA =<(ERRORM+25)
2972  3309- A0 22              LDY =>(ERRORM+25)
2973  330B- 20 93 28           JSR OUTSTR
2974  330E- A5 70              LDA LINE+1
2975  3310- A6 6F              LDX LINE
2976                   *
2977                   *
2978                   * OUTINT: PRINT INTEGER IN A,X
2979                   ******************************
2980                   *
2981  3312- 85 98      OUTINT  STA MANT
2982  3314- 86 99              STX MANT+1
2983  3316- A2 90              LDX =$90        EXP FOR FLOAT
2984  3318- 38                 SEC
2985  3319- 20 55 35           JSR FLOAT
2986  331C- 20 61 47           JSR OUTCON
2987  331F- 4C 93 28           JMP OUTSTR
2988                   *
2989                           TIT GRAPHIC BASIC - MATH OPERATIONS
2990                           PAG

----------------------------------------------------------------------

GRAPHIC BASIC - MATH OPERATIONS    30/03/18   R65 ASSEMBLER  PAGE 68

2991                   *
2992                   * SUBTR: SUBTRACT FLOATING POINT
2993                   ********************************
2994                   *
2995  3322- 20 96 34           JSR PREPMO
2996  3325- A5 9C      SUBTR   LDA SIGN
2997  3327- 49 FF              EOR =$FF
2998  3329- 85 9C              STA SIGN
2999  332B- 45 A4              EOR DYADIC+5
3000  332D- 85 A5              STA DYADIC+6
3001  332F- A5 97              LDA EXP
3002  3331- 4C 43 33           JMP ADD
3003                   *
3004  3334- A9 86      ADD9    LDA =<OUTCT2
3005  3336- A0 36              LDY =>OUTCT2
3006  3338- 4C 40 33           JMP ADD-3
3007                   *
3008                   *
3009                   * ADD: ADD FLOATING POINT
3010                   *************************
3011                   *
3012  333B- 20 73 34           JSR ROR2A
3013  333E- 90 3D              BCC ADD2
3014  3340- 20 96 34           JSR PREPMO
3015  3343- D0 03      ADD     BNE *+5
3016  3345- 4C 18 35           JMP TRANS1      IF ZERO, RES=OTHER ARG
3017  3348- A6 A6              LDX DYADIC+7
3018  334A- 86 8C              STX PNT1+1
3019  334C- A2 9F              LDX =<DYADIC
3020  334E- A5 9F              LDA DYADIC
3021  3350- A8                 TAY
3022  3351- D0 01              BNE *+3
3023  3353- 60                 RTS             RTS, IF OTHER ARG=0
3024                   *
3025  3354- 38                 SEC
3026                    * BASIC4:A ORIGINAL 7/1/1982, RECOVERED 3/2018
3027  3355- E5 97              SBC EXP
3028  3357- F0 24              BEQ ADD2
3029  3359- 90 12              BCC ADD1
3030  335B- 84 97              STY EXP
3031  335D- A4 A4              LDY DYADIC+5
3032  335F- 84 9C              STY SIGN
3033  3361- 49 FF              EOR =$FF
3034  3363- 69 00              ADC =0
3035  3365- A0 00              LDY =0
3036  3367- 84 8C              STY PNT1+1
3037  3369- A2 97              LDX =<EXP
3038  336B- D0 04              BNE *+6
3039  336D- A0 00      ADD1    LDY =0
3040  336F- 84 A6              STY DYADIC+7

----------------------------------------------------------------------

GRAPHIC BASIC - MATH OPERATIONS    30/03/18   R65 ASSEMBLER  PAGE 69

3041  3371- C9 F9              CMP =$F9
3042  3373- 30 C6              BMI ADD-8
3043  3375- A8                 TAY
3044  3376- A5 A6              LDA DYADIC+7
3045  3378- 56 01              LSR 1,X
3046  337A- 20 8A 34           JSR ROR4
3047                   *
3048  337D- 24 A5      ADD2    BIT DYADIC+6
3049  337F- 10 57              BPL ADD3        SKIP, IF ADD
3050  3381- A0 97              LDY =<EXP
3051  3383- E0 9F              CPX =<DYADIC
3052  3385- F0 02              BEQ *+4
3053  3387- A0 9F              LDY =<DYADIC
3054  3389- 38                 SEC
3055  338A- 49 FF              EOR =$FF
3056  338C- 65 8C              ADC PNT1+1
3057  338E- 85 A6              STA DYADIC+7
3058  3390- B9 04 00           LDA 4,Y
3059  3393- F5 04              SBC 4,X
3060  3395- 85 9B              STA MANT+3
3061  3397- B9 03 00           LDA 3,Y
3062  339A- F5 03              SBC 3,X
3063  339C- 85 9A              STA MANT+2
3064  339E- B9 02 00           LDA 2,Y
3065  33A1- F5 02              SBC 2,X
3066  33A3- 85 99              STA MANT+1
3067  33A5- B9 01 00           LDA 1,Y
3068  33A8- F5 01              SBC 1,X
3069  33AA- 85 98              STA MANT
3070                   *
3071  33AC- B0 03      NORMAL  BCS *+5
3072  33AE- 20 21 34           JSR COMPL
3073  33B1- A0 00              LDY =0
3074  33B3- 98                 TYA
3075  33B4- 18                 CLC
3076  33B5- A6 98      NORM1   LDX MANT
3077  33B7- D0 4A              BNE ADD4
3078  33B9- A6 99              LDX MANT+1
3079  33BB- 86 98              STX MANT
3080  33BD- A6 9A              LDX MANT+2
3081  33BF- 86 99              STX MANT+1
3082  33C1- A6 9B              LDX MANT+3
3083  33C3- 86 9A              STX MANT+2
3084  33C5- A6 A6              LDX DYADIC+7
3085  33C7- 86 9B              STX MANT+3
3086  33C9- 84 A6              STY DYADIC+7
3087  33CB- 69 08              ADC =8
3088  33CD- C9 20              CMP =32
3089  33CF- D0 E4              BNE NORM1
3090                   *

----------------------------------------------------------------------

GRAPHIC BASIC - MATH OPERATIONS    30/03/18   R65 ASSEMBLER  PAGE 70

3091  33D1- A9 00      UNDERF  LDA =0          UNDERFLOW, SET TO 0
3092  33D3- 85 97              STA EXP
3093  33D5- 85 9C              STA SIGN
3094  33D7- 60                 RTS
3095                   *
3096  33D8- 65 8C      ADD3    ADC PNT1+1
3097  33DA- 85 A6              STA DYADIC+7
3098  33DC- A5 9B              LDA MANT+3
3099  33DE- 65 A3              ADC DYADIC+4
3100  33E0- 85 9B              STA MANT+3
3101  33E2- A5 9A              LDA MANT+2
3102  33E4- 65 A2              ADC DYADIC+3
3103  33E6- 85 9A              STA MANT+2
3104  33E8- A5 99              LDA MANT+1
3105  33EA- 65 A1              ADC DYADIC+2
3106  33EC- 85 99              STA MANT+1
3107  33EE- A5 98              LDA MANT
3108  33F0- 65 A0              ADC DYADIC+1
3109  33F2- 85 98              STA MANT
3110  33F4- 4C 10 34           JMP ADD5
3111                   *
3112  33F7- 69 01              ADC =1          SHIFT MANTISSA
3113  33F9- 06 A6              ASL DYADIC+7
3114  33FB- 26 9B              ROL MANT+3
3115  33FD- 26 9A              ROL MANT+2
3116  33FF- 26 99             ROL MANT+1
3117  3401- 26 98              ROL MANT
3118  3403- 10 F2      ADD4    BPL *-12
3119  3405- 38                 SEC
3120  3406- E5 97              SBC EXP
3121  3408- B0 C7              BCS UNDERF
3122  340A- 49 FF              EOR =$FF
3123  340C- 69 01              ADC =1
3124  340E- 85 97              STA EXP
3125  3410- 90 0E      ADD5    BCC ADDEND
3126  3412- E6 97              INC EXP
3127  3414- F0 42              BEQ OVERFL
3128                   *
3129  3416- 66 98      ROR1    ROR MANT
3130  3418- 66 99              ROR MANT+1
3131  341A- 66 9A              ROR MANT+2
3132  341C- 66 9B              ROR MANT+3
3133  341E- 66 A6              ROR DYADIC+7
3134  3420- 60         ADDEND  RTS
3135                   *
3136                   * COMPL: COMPLEMENT MANTISSA
3137                   ****************************
3138                   *
3139  3421- A5 9C      COMPL   LDA SIGN
3140  3423- 49 FF              EOR =$FF

----------------------------------------------------------------------

GRAPHIC BASIC - MATH OPERATIONS    30/03/18   R65 ASSEMBLER  PAGE 71

3141  3425- 85 9C              STA SIGN
3142  3427- A5 98              LDA MANT
3143  3429- 49 FF              EOR =$FF
3144  342B- 85 98              STA MANT
3145  342D- A5 99              LDA MANT+1
3146  342F- 49 FF              EOR =$FF
3147  3431- 85 99              STA MANT+1
3148  3433- A5 9A              LDA MANT+2
3149  3435- 49 FF              EOR =$FF
3150  3437- 85 9A              STA MANT+2
3151  3439- A5 9B              LDA MANT+3
3152  343B- 49 FF              EOR =$FF
3153  343D- 85 9B              STA MANT+3
3154  343F- A5 A6              LDA DYADIC+7
3155  3441- 49 FF              EOR =$FF
3156  3443- 85 A6              STA DYADIC+7
3157  3445- E6 A6              INC DYADIC+7
3158  3447- D0 0E              BNE *+16
3159  3449- E6 9B      INCM    INC MANT+3
3160  344B- D0 0A              BNE *+12
3161  344D- E6 9A              INC MANT+2
3162  344F- D0 06              BNE *+8
3163  3451- E6 99              INC MANT+1
3164  3453- D0 02              BNE *+4
3165  3455- E6 98              INC MANT
3166  3457- 60                 RTS
3167                   *
3168                   *
3169  3458- A2 32      OVERFL  LDX =$32        NUM OVERFLOW
3170  345A- 4C 43 23           JMP ERROR
3171                   *
3172                   *
3173                   * ROTATE RIGHT
3174                   **************
3175                   *
3176  345D- A2 5B      ROR2    LDX =<TEMP9-1
3177  345F- B4 04              LDY 4,X
3178  3461- 84 A6              STY DYADIC+7
3179  3463- B4 03              LDY 3,X
3180  3465- 94 04              STY 4,X
3181  3467- B4 02              LDY 2,X
3182  3469- 94 03              STY 3,X
3183  346B- B4 01              LDY 1,X
3184  346D- 94 02              STY 2,X
3185  346F- A4 9E              LDY DYADIC-1
3186  3471- 94 01              STY 1,X
3187  3473- 69 08      ROR2A   ADC =8
3188  3475- 30 E8              BMI ROR2+2
3189  3477- F0 E6              BEQ ROR2+2
3190  3479- E9 08              SBC =8

----------------------------------------------------------------------

GRAPHIC BASIC - MATH OPERATIONS    30/03/18   R65 ASSEMBLER  PAGE 72

3191  347B- A8                 TAY
3192  347C- A5 A6              LDA DYADIC+7
3193  347E- B0 14              BCS ROR5
3194  3480- 16 01      ROR3    ASL 1,X
3195  3482- 90 02              BCC *+4
3196  3484- F6 01              INC 1,X
3197  3486- 76 01              ROR 1,X
3198  3488- 76 01              ROR 1,X
3199  348A- 76 02      ROR4    ROR 2,X
3200  348C- 76 03              ROR 3,X
3201  348E- 76 04              ROR 4,X
3202  3490- 6A                 ROR A
3203  3491- C8                 INY
3204  3492- D0 EC              BNE ROR3
3205  3494- 18         ROR5    CLC
3206  3495- 60                 RTS
3207                   *
3208                   *
3209                   * PREPMO: PREPARE MATH OPERATION
3210                   ********************************
3211                   *
3212  3496- 85 58      PREPMO  STA TEMP1
3213  3498- 84 59              STY TEMP1+1
3214  349A- A0 04              LDY =4
3215  349C- B1 58              LDA (TEMP1),Y
3216  349E- 99 9F 00           STA DYADIC,Y
3217  34A1- 88                 DEY
3218  34A2- D0 F8              BNE *-6         LOOP UNTIL DONE
3219  34A4- 45 9C              EOR SIGN
3220  34A6- 85 A5              STA DYADIC+6
3221  34A8- A5 A0              LDA DYADIC+1
3222  34AA- 85 A4              STA DYADIC+5
3223  34AC- 09 80              ORA =$80
3224  34AE- 85 A0              STA DYADIC+1
3225  34B0- B1 58              LDA (TEMP1),Y
3226  34B2- 85 9F              STA DYADIC
3227  34B4- A5 97              LDA EXP
3228  34B6- 60                 RTS
3229                   *
3230                   *
3231                   * GETFLP: GET FLP FROM A,Y
3232                   **************************
3233                   *
3234  34B7- 85 58      GETFLP  STA TEMP1
3235  34B9- 84 59              STY TEMP1+1
3236  34BB- A0 04              LDY =4
3237  34BD- B1 58              LDA (TEMP1),Y
3238  34BF- 85 9B              STA MANT+3
3239  34C1- 88                 DEY
3240  34C2- B1 58              LDA (TEMP1),Y

----------------------------------------------------------------------

GRAPHIC BASIC - MATH OPERATIONS    30/03/18   R65 ASSEMBLER  PAGE 73

3241  34C4- 85 9A              STA MANT+2
3242  34C6- 88                 DEY
3243  34C7- B1 58              LDA (TEMP1),Y
3244  34C9- 85 99              STA MANT+1
3245  34CB- 88                 DEY
3246  34CC- B1 58              LDA (TEMP1),Y
3247  34CE- 85 9C              STA SIGN
3248  34D0- 09 80              ORA =$80
3249  34D2- 85 98              STA MANT
3250  34D4- 88                 DEY
3251  34D5- B1 58              LDA (TEMP1),Y
3252  34D7- 85 97              STA EXP
3253  34D9- 84 A6              STY DYADIC+7
3254  34DB- 60                 RTS
3255                   *
3256                   *
3257                   * SAVFLP: SAVE FLP NUMBER
3258                   *************************
3259                   *
3260  34DC- A6 7F      SAVFLP  LDX TEMP3
3261  34DE- A4 80              LDY TEMP3+1
3262  34E0- 20 08 35           JSR ROUND
3263  34E3- 86 58              STX TEMP1
3264  34E5- 84 59              STY TEMP1+1
3265  34E7- A0 04              LDY =4
3266  34E9- A5 9B              LDA MANT+3
3267  34EB- 91 58              STA (TEMP1),Y
3268  34ED- 88                 DEY
3269  34EE- A5 9A              LDA MANT+2
3270  34F0- 91 58              STA (TEMP1),Y
3271  34F2- 88                 DEY
3272  34F3- A5 99              LDA MANT+1
3273  34F5- 91 58              STA (TEMP1),Y
3274  34F7- 88                 DEY
3275  34F8- A5 9C              LDA SIGN
3276  34FA- 09 7F              ORA =$7F
3277  34FC- 25 98              AND MANT
3278  34FE- 91 58             STA (TEMP1),Y
3279  3500- 88                 DEY
3280  3501- A5 97              LDA EXP
3281  3503- 91 58              STA (TEMP1),Y
3282  3505- 84 A6              STY DYADIC+7
3283  3507- 60                 RTS
3284                   *
3285                   * ROUND: ROUND MANTISSA TO 32 BITS
3286                   **********************************
3287                   *
3288  3508- A5 97      ROUND   LDA EXP
3289  350A- F0 FB              BEQ *-3         RTS, IF ZERO
3290  350C- 06 A6              ASL DYADIC+7

----------------------------------------------------------------------

GRAPHIC BASIC - MATH OPERATIONS    30/03/18   R65 ASSEMBLER  PAGE 74

3291  350E- 90 F7              BCC *-7
3292  3510- 20 49 34           JSR INCM
3293  3513- D0 F2              BNE *-12
3294  3515- 4C 12 34           JMP ROR1-4
3295                   *
3296                   * TRANS1: DYADIC TO FLP ACCU
3297                   ****************************
3298                   *
3299  3518- A5 A4      TRANS1  LDA DYADIC+5
3300  351A- 85 9C              STA SIGN
3301  351C- A2 05              LDX =5
3302  351E- B5 9E              LDA DYADIC-1,X
3303  3520- 95 96              STA EXP-1,X
3304  3522- CA                 DEX
3305  3523- D0 F9              BNE *-5
3306  3525- 86 A6              STX DYADIC+7
3307  3527- 60                 RTS
3308                   *
3309                   * TRANS2: FLP ACCU TO DYADIC
3310                   ****************************
3311                   *
3312  3528- 20 08 35   TRANS2  JSR ROUND
3313  352B- A2 06              LDX =6
3314  352D- B5 96              LDA EXP-1,X
3315  352F- 95 9E              STA DYADIC-1,X
3316  3531- CA                 DEX
3317  3532- D0 F9              BNE *-5
3318  3534- 86 A6              STX DYADIC+7
3319  3536- 60                 RTS
3320                   *
3321                   * SGN1: SET ACCU FROM SIGN
3322                   **************************
3323                   * A=1 IF SIGN+, A=FF IF SIGN-, A=0 IF EXP=0
3324                   *
3325  3537- A5 97      SGN1    LDA EXP
3326  3539- F0 09              BEQ *+11        RTS, IF EXP=0
3327  353B- A5 9C              LDA SIGN
3328  353D- 2A                 ROL A
3329  353E- A9 FF              LDA =$FF
3330  3540- B0 02              BCS *+4
3331  3542- A9 01              LDA =1
3332  3544- 60                 RTS
3333                   *
3334                   * SGN: BASIC FUNCTION
3335                   *********************
3336                   *
3337  3545- 20 37 35   SGN     JSR SGN1
3338  3548- 85 98      FLOAT1  STA MANT        FLOAT 1 BYTE
3339  354A- A9 00              LDA =0
3340  354C- 85 99              STA MANT+1

----------------------------------------------------------------------

GRAPHIC BASIC - MATH OPERATIONS    30/03/18   R65 ASSEMBLER  PAGE 75

3341  354E- A2 88              LDX =$88        EXP FOR FLOAT
3342  3550- A5 98      FLOAT2  LDA MANT        FLOAT 2 BYTES
3343  3552- 49 FF              EOR =$FF
3344  3554- 2A                 ROL A           SIGN INTO C
3345  3555- A9 00      FLOAT   LDA =0
3346  3557- 85 9B              STA MANT+3
3347  3559- 85 9A              STA MANT+2
3348  355B- 86 97              STX EXP
3349  355D- 85 A6              STA DYADIC+7
3350  355F- 85 9C              STA SIGN
3351  3561- 4C AC 33           JMP NORMAL
3352                   *
3353                   *
3354                   * COMPAR: COMPARE FLP NUMBERS
3355                   *****************************
3356                   *
3357  3564- 85 5A      COMPAR  STA TEMP8
3358  3566- 84 5B              STY TEMP8+1
3359  3568- A0 00              LDY =0
3360  356A- B1 5A              LDA (TEMP8),Y
3361  356C- C8                 INY
3362  356D- AA                 TAX
3363  356E- F0 C7              BEQ SGN1
3364  3570- B1 5A              LDA (TEMP8),Y
3365  3572- 45 9C              EOR SIGN
3366  3574- 30 C5              BMI SGN1+4
3367  3576- E4 97              CPX EXP
3368  3578- D0 22              BNE COMPR1
3369  357A- B1 5A              LDA (TEMP8),Y
3370  357C- 09 80              ORA =$80
3371  357E- C5 98              CMP MANT
3372  3580- D0 1A              BNE COMPR1
3373  3582- C8                 INY
3374  3583- B1 5A              LDA (TEMP8),Y
3375  3585- C5 99              CMP MANT+1
3376  3587- D0 13              BNE COMPR1
3377  3589- C8                 INY
3378  358A- B1 5A              LDA (TEMP8),Y
3379  358C- C5 9A              CMP MANT+2
3380  358E- D0 0C              BNE COMPR1
3381  3590- C8                 INY
3382  3591- A9 7F              LDA =$7F
3383  3593- C5 A6              CMP DYADIC+7    TO C
3384  3595- B1 5A              LDA (TEMP8),Y
3385  3597- E5 9B              SBC MANT+3
3386  3599- D0 01              BNE COMPR1
3387  359B- 60                 RTS
3388                   *
3389  359C- A5 9C      COMPR1  LDA SIGN
3390  359E- 90 02              BCC *+4

----------------------------------------------------------------------

GRAPHIC BASIC - MATH OPERATIONS    30/03/18   R65 ASSEMBLER  PAGE 76

3391  35A0- 49 FF              EOR =$FF
3392  35A2- 4C 3D 35           JMP SGN1+6
3393                   *
3394                   *
3395                   * NUMBER: FLP CONSTANT INPUT IN EXPRES
3396                   **************************************
3397                   *
3398  35A5- 90 08      NUMBER  BCC *+10
3399  35A7- C9 24              CMP ='$'        HEX?
3400  35A9- D0 03              BNE *+5
3401  35AB- 4C FF 49           JMP NUMBHEX
3402  35AE- 38                 SEC
3403                   *
3404  35AF- A0 00              LDY =0          CLEAR WORK AREA
3405  35B1- A2 0A              LDX =10
3406  35B3- 94 93              STY EXP-4,X
3407  35B5- CA                 DEX
3408  35B6- 10 FB              BPL *-3
3409  35B8- 90 0F              BCC NUMB0+3     IF FIST DIGIT=NUMBER
3410                   *
3411  35BA- C9 2D              CMP ='-'
3412  35BC- D0 04              BNE *+6
3413  35BE- 86 9D              STX CURRSG      SET CURRENT SIGN TO FF
3414  35C0- F0 04              BEQ NUMB0       ALLWAYS TAKEN
3415  35C2- C9 2B              CMP ='+'
3416  35C4- D0 05              BNE *+7
3417  35C6- 20 15 27   NUMB0   JSR FETCH
3418  35C9- 90 63              BCC NUMB5
3419  35CB- C9 2E              CMP ='.'
3420  35CD- F0 30              BEQ NUMB3
3421  35CF- C9 45              CMP ='E'
3422  35D1- D0 38              BNE NUMB4
3423                   *
3424  35D3- 20 15 27           JSR FETCH       EXPONTENT
3425  35D6- 90 19              BCC NUMB2+3
3426  35D8- C9 B8              CMP =$B8        CODE FOR -
3427  35DA- F0 0E              BEQ NUMB1
3428  35DC- C9 2D              CMP ='-'
3429  35DE- F0 0A              BEQ NUMB1
3430  35E0- C9 B7              CMP =$B7        CODE FOR +
3431  35E2- F0 0A              BEQ NUMB2
3432  35E4- C9 2B              CMP ='+'
3433  35E6- F0 06              BEQ NUMB2
3434  35E8- D0 07              BNE NUMB2+3     IF NOT DIGIT OR SIGN
3435                   *
3436  35EA- A9 80      NUMB1   LDA =$80        IF EXP -
3437  35EC- 85 96              STA EXP-1
3438                   *
3439  35EE- 20 15 27   NUMB2   JSR FETCH       IF EXP +
3440  35F1- 90 62              BCC NUMB7       BRANCH, IF NUMBER

----------------------------------------------------------------------

GRAPHIC BASIC - MATH OPERATIONS    30/03/18   R65 ASSEMBLER  PAGE 77

3441  35F3- 24 96              BIT EXP-1
3442  35F5- 10 14              BPL NUMB4       BRANCH, IF POS
3443  35F7- A9 00              LDA =0
3444  35F9- 38                 SEC
3445  35FA- E5 94              SBC CURREX      ELSE COMPLEMENT CURREX
3446  35FC- 4C 0D 36           JMP NUMB4+2
3447                   *
3448  35FF- A9 80     NUMB3   LDA =$80        DECIMAL POINT
3449  3601- 46 95              LSR TRANSP
3450  3603- 05 95              ORA TRANSP
3451  3605- 85 95              STA TRANSP
3452  3607- 24 95              BIT TRANSP
3453  3609- 50 BB              BVC NUMB0       CONTINUE, IF FIRST POINT
3454                   *
3455  360B- A5 94      NUMB4   LDA CURREX      END OF NUMBER
3456  360D- 38                 SEC
3457  360E- E5 93              SBC POINTC
3458  3610- 85 94              STA CURREX
3459  3612- F0 12              BEQ *+20        SKIP, IF RESULTING
3460  3614- 10 09              BPL *+11        EXP=0 OR POSITIVE
3461  3616- 20 F1 36           JSR DIVTEN      ELSE DIVIDE BY TEN
3462  3619- E6 94              INC CURREX
3463  361B- D0 F9              BNE *-5
3464  361D- F0 07              BEQ *+9         ALLWAYS TAKEN
3465                   *
3466  361F- 20 D2 36           JSR MULTEN
3467  3622- C6 94              DEC CURREX
3468  3624- D0 F9              BNE *-5
3469                   *
3470  3626- A5 9D              LDA CURRSG
3471  3628- 30 01              BMI *+3
3472  362A- 60                 RTS
3473                   *
3474  362B- 4C C7 36           JMP NEGATE
3475                   *
3476  362E- 48         NUMB5   PHA             DIGIT ENTRY, SAVE IT
3477  362F- 24 95              BIT TRANSP      AFTER DECIMAL POINT?
3478  3631- 10 02              BPL *+4
3479  3633- E6 93              INC POINTC
3480  3635- 20 D2 36           JSR MULTEN
3481  3638- 68                 PLA
3482  3639- 38                 SEC
3483  363A- E9 30              SBC =$30        CONVERT ASCII TO NUMBER
3484  363C- 20 42 36           JSR NUMB6
3485  363F- 4C C6 35           JMP NUMB0
3486                   *
3487  3642- 48         NUMB6   PHA             SAVE CONVERTED TOGIT
3488  3643- 20 28 35           JSR TRANS2      CURRENT RES TO DYADIC
3489  3646- 68                 PLA
3490  3647- 20 48 35           JSR FLOAT1      FLOAT DIGIT

----------------------------------------------------------------------

GRAPHIC BASIC - MATH OPERATIONS    30/03/18   R65 ASSEMBLER  PAGE 78

3491  364A- A5 A4              LDA DYADIC+5
3492  364C- 45 9C              EOR SIGN
3493  364E- 85 A5              STA DYADIC+6
3494  3650- A6 97              LDX EXP
3495  3652- 4C 43 33           JMP ADD         AND ADD TO CURRENT RESUL
3496                   *
3497  3655- A5 94      NUMB7   LDA CURREX      EXPONENT DIGIT
3498  3657- C9 0C              CMP =12
3499  3659- 90 09              BCC *+11
3500  365B- 24 96              BIT TRANSP+1
3501  365D- 30 03              BMI *+5
3502  365F- 4C 58 34           JMP OVERFL
3503                   *
3504  3662- A9 0B              LDA =11
3505  3664- 0A                 ASL A           MULTIPLY BY TEN
3506  3665- 0A                 ASL A
3507  3666- 18                 CLC
3508  3667- 65 94              ADC CURREX
3509  3669- 0A                 ASL A
3510  366A- 18                 CLC
3511  366B- A0 00              LDY =0
3512  366D- 71 A9              ADC (PC),Y
3513  366F- 38                 SEC
3514  3670- E9 30              SBC =$30        CONVERT ASCII TO NUMBER
3515  3672- 85 94              STA CURREX
3516  3674- 4C EE 35           JMP NUMB2
3517                   *
3518                   *
3519  3677- 9B 3E BC   OUTCT1  BYT $9B,$3E,$BC,$1F,$FD
3519  367A- 1F FD 
3520  367C- 9E 6E 6B           BYT $9E,$6E,$6B,$27,$FE
3520  367F- 27 FE 
3521  3681- 9E 6E 6B           BYT $9E,$6E,$6B,$28,$00
3521  3684- 28 00 
3522                   *
3523  3686- 80 00 00   OUTCT2  BYT $80,$00,$00,$00,$00
3523  3689- 00 00 
3524  368B- FA 0A 1F           BYT $FA,$0A,$1F,$00,$00
3524  368E- 00 00 
3525  3690- 98 96 80           BYT $98,$96,$80,$FF,$F0
3525  3693- FF F0 
3526  3695- BD C0 00           BYT $BD,$C0,$00,$01,$86
3526  3698- 01 86 
3527  369A- A0 FF FF           BYT $A0,$FF,$FF,$D8,$F0
3527  369D- D8 F0 
3528  369F- 00 00 03           BYT $00,$00,$03,$E8,$FF
3528  36A2- E8 FF 
3529  36A4- FF FF 9C           BYT $FF,$FF,$9C,$00,$00
3529  36A7- 00 00 
3530  36A9- 00 0A FF           BYT $00,$0A,$FF,$FF,$FF

----------------------------------------------------------------------

GRAPHIC BASIC - MATH OPERATIONS    30/03/18   R65 ASSEMBLER  PAGE 79

3530  36AC- FF FF 
3531  36AE- FF FF DF           BYT $FF,$FF,$DF,$0A,$80
3531  36B1- 0A 80 
3532  36B3- 00 03 4B           BYT $00,$03,$4B,$C0,$FF
3532  36B6- C0 FF 
3533  36B8- FF 73 60           BYT $FF,$73,$60,$00,$00
3533  36BB- 00 00 
3534  36BD- 0E 10 FF           BYT $0E,$10,$FF,$FF,$FD
3534  36C0- FF FD 
3535  36C2- A8 00 00           BYT $A8,$00,$00,$00,$3C
3535  36C5- 00 3C 
3536                   *
3537                   * NEGATE: NEGATE FLP ACCU
3538                   *************************
3539                   *
3540  36C7- A5 97      NEGATE  LDA EXP
3541  36C9- F0 06              BEQ *+8         RTS, IF ZERO
3542  36CB- A5 9C              LDA SIGN
3543  36CD- 49 FF              EOR =$FF
3544  36CF- 85 9C              STA SIGN
3545  36D1- 60                 RTS
3546                   *
3547                   * MULTEN: MULTIPLY BY TEN
3548                   *************************
3549                   *
3550  36D2- 20 28 35   MULTEN  JSR TRANS2
3551  36D5- AA                 TAX
3552  36D6- F0 10              BEQ *+18        RTS
3553  36D8- 18                 CLC
3554  36D9- 69 02              ADC =2          *4
3555  36DB- B0 0C              BCS *+14        OVERFLOW
3556  36DD- A2 00              LDX =0
3557  36DF- 86 A5              STX DYADIC+6
3558  36E1- 20 50 33           JSR ADD+13      4+1=5
3559  36E4- E6 97              INC EXP         2*5=10
3560  36E6- F0 01              BEQ *+3         OVERFLOW
3561  36E8- 60                 RTS
3562  36E9- 4C 58 34           JMP OVERFL
3563                   *
3564                   * DIVTEN: DIVIDE BY TEN
3565                   ***********************
3566                   *
3567  36EC- 84 20 00           BYT $84,$20,0,0,0       10.0
3567  36EF- 00 00 
3568  36F1- 20 28 35   DIVTEN  JSR TRANS2
3569  36F4- A9 EC              LDA =<(DIVTEN-5)
3570  36F6- A0 36              LDY =>(DIVTEN-5)
3571  36F8- A2 00              LDX =0
3572  36FA- 86 A5              STX DYADIC+6
3573  36FC- 20 B7 34           JSR GETFLP

----------------------------------------------------------------------

GRAPHIC BASIC - MATH OPERATIONS    30/03/18   R65 ASSEMBLER  PAGE 80

3574  36FF- 4C D9 37          JMP DIVIDE
3575                   *
3576                   * NUMEXP: NUMERIC EXPRESSION
3577                   ****************************
3578                   *
3579  3702- 20 15 27   NUMEXP  JSR FETCH
3580  3705- 20 FF 2D           JSR EXPRES
3581  3708- 20 F0 2D           JSR TESTTP      MUST BE NUMERIC
3582  370B- 20 20 37           JSR FLPINT-4
3583  370E- A6 9A              LDX MANT+2
3584  3710- D0 05              BNE *+7
3585  3712- A6 9B              LDX MANT+3
3586  3714- 4C 1B 27           JMP FETCH1
3587  3717- A2 2A      QERR    LDX =$2A        QUANTITY ERROR
3588  3719- 4C 43 23           JMP ERROR
3589                   *
3590                   * FLPINT: FLP TO INTEGER CONVERSION
3591                   ***********************************
3592                   *
3593  371C- 90 80 00   FLPINF  BYT $90,$80,0,0
3593  371F- 00 
3594                   *
3595  3720- A5 9C              LDA SIGN
3596  3722- 30 0D              BMI *+15
3597  3724- A5 97      FLPINT  LDA EXP
3598  3726- C9 90              CMP =$90
3599  3728- 90 09              BCC *+11
3600  372A- A9 1C              LDA =<FLPINF
3601  372C- A0 37              LDY =>FLPINF
3602  372E- 20 64 35           JSR COMPAR
3603  3731- D0 E4              BNE QERR        QUANT ERROR, TOO LARGE
3604                   *
3605  3733- A5 97      FLPIN1  LDA EXP
3606  3735- F0 28              BEQ FLPIN2
3607  3737- 38                 SEC
3608  3738- E9 A0              SBC =$A0
3609  373A- 24 9C              BIT SIGN
3610  373C- 10 09              BPL *+11
3611  373E- AA                 TAX
3612  373F- A9 FF              LDA =$FF
3613  3741- 85 9E              STA DYADIC-1
3614  3743- 20 27 34           JSR COMPL+6
3615  3746- 8A                 TXA
3616  3747- A2 97              LDX =<EXP
3617  3749- C9 F9              CMP =$F9
3618  374B- 10 06              BPL *+8
3619  374D- 20 73 34           JSR ROR2A
3620  3750- 84 9E              STY DYADIC-1
3621  3752- 60                 RTS
3622                   *

----------------------------------------------------------------------

GRAPHIC BASIC - MATH OPERATIONS    30/03/18   R65 ASSEMBLER  PAGE 81

3623  3753- A8                 TAY
3624  3754- A5 9C              LDA SIGN
3625  3756- 2A                 ROL A
3626  3757- 66 98              ROR MANT
3627  3759- 20 8A 34           JSR ROR4
3628  375C- 84 9E              STY DYADIC-1
3629  375E- 60                 RTS
3630                   *
3631  375F- 85 98      FLPIN2  STA MANT
3632  3761- 85 99              STA MANT+1
3633  3763- 85 9A              STA MANT+2
3634  3765- 85 9B              STA MANT+3
3635  3767- A8                 TAY
3636  3768- 60                 RTS
3637                   *
3638                   * TESTEQ: EQUAL, LESS AND GREATER TEST
3639                   **************************************
3640                   *
3641  3769- 20 F1 2D   TESTEQ  JSR TESTTP+1
3642  376C- B0 13              BCS TESTE1
3643  376E- A5 A4              LDA DYADIC+5    NUMERIC COMPARE
3644  3770- 09 7F              ORA =$7F
3645  3772- 25 A0              AND DYADIC+1
3646  3774- 85 A0              STA DYADIC+1
3647  3776- A9 9F              LDA =<DYADIC
3648  3778- A0 00              LDY =>DYADIC
3649  377A- 20 64 35           JSR COMPAR
3650  377D- AA                 TAX
3651  377E- 4C B4 37           JMP TESTE2+6
3652                   *
3653  3781- A9 00      TESTE1  LDA =0          STRING COMPAR
3654  3783- 85 45              STA RESTYP
3655  3785- C6 83              DEC LOGIC
3656  3787- 20 17 29           JSR PREPST
3657  378A- 85 97              STA EXP
3658  378C- 86 98              STX MANT
3659  378E- 84 99              STY MANT+1
3660  3790- A5 A2              LDA DYADIC+3
3661  3792- A4 A3              LDY DYADIC+4
3662  3794- 20 1B 29           JSR PREPST+4
3663  3797- 86 A2              STX DYADIC+3
3664  3799- 84 A3              STY DYADIC+4
3665  379B- AA                 TAX
3666  379C- 38                 SEC
3667  379D- E5 97              SBC EXP
3668  379F- F0 08              BEQ *+10
3669  37A1- A9 01              LDA =1
3670  37A3- 90 04              BCC *+6
3671  37A5- A6 97              LDX EXP
3672  37A7- A9 FF              LDA =$FF

----------------------------------------------------------------------

GRAPHIC BASIC - MATH OPERATIONS    30/03/18   R65 ASSEMBLER  PAGE 82

3673  37A9- 85 9C              STA SIGN
3674  37AB- A0 FF              LDY =$FF
3675  37AD- E8                 INX
3676  37AE- C8         TESTE2  INY
3677  37AF- CA                 DEX
3678  37B0- D0 07              BNE *+9
3679  37B2- A6 9C              LDX SIGN
3680  37B4- 30 0F              BMI TESTE3
3681  37B6- 18                 CLC
3682  37B7- 90 0C              BCC TESTE3      ALLWAYS TAKEN
3683  37B9- B1 A2              LDA (DYADIC+3),Y
3684  37BB- D1 98              CMP (MANT),Y
3685  37BD- F0 EF              BEQ TESTE2
3686  37BF- A2 FF              LDX =$FF
3687  37C1- B0 02              BCS TESTE3
3688  37C3- A2 01              LDX =1
3689  37C5- E8         TESTE3  INX
3690  37C6- 8A                 TXA
3691  37C7- 2A                 ROL A
3692  37C8- 25 4A              AND READFL+1
3693  37CA- F0 02              BEQ *+4
3694  37CC- A9 FF              LDA =$FF
3695  37CE- 4C 48 35           JMP FLOAT1
3696                   *
3697                   * DIVIDE: FLOATING POINT DIVIDE
3698                   *******************************
3699                   *
3700  37D1- A2 78      DIVZ    LDX =$78        DIVISION BY ZERO
3701  37D3- 4C 43 23           JMP ERROR
3702                   *
3703  37D6- 20 96 34           JSR PREPMO
3704  37D9- F0 F6      DIVIDE  BEQ DIVZ
3705  37DB- 20 08 35           JSR ROUND
3706  37DE- A9 00              LDA =0          COMPL EXPONENT
3707  37E0- 38                 SEC
3708  37E1- E5 97              SBC EXP
3709  37E3- 85 97              STA EXP
3710  37E5- 20 64 38           JSR MULEXP      COMPUTE RESULTING EXP
3711  37E8- E6 97              INC EXP
3712  37EA- F0 75              BEQ OVERF1      OVERFLOW
3713  37EC- A2 FC              LDX =$FC
3714  37EE- A9 01              LDA =1
3715  37F0- A4 A0      DIVID0  LDY DYADIC+1
3716  37F2- C4 98              CPY MANT
3717  37F4- D0 10              BNE DIVID1
3718  37F6- A4 A1              LDY DYADIC+2
3719  37F8- C4 99              CPY MANT+1
3720  37FA- D0 0A              BNE DIVID1
3721  37FC- A4 A2              LDY DYADIC+3
3722  37FE- C4 9A             CPY MANT+2

----------------------------------------------------------------------

GRAPHIC BASIC - MATH OPERATIONS    30/03/18   R65 ASSEMBLER  PAGE 83

3723  3800- D0 04              BNE DIVID1
3724  3802- A4 A3              LDY DYADIC+4
3725  3804- C4 9B              CPY MANT+3
3726  3806- 08         DIVID1  PHP
3727  3807- 2A                 ROL A
3728  3808- 90 09              BCC *+11
3729  380A- E8                 INX
3730  380B- 95 5F              STA TEMP9+3,X
3731  380D- F0 32              BEQ DIVID3
3732  380F- 10 34              BPL DIVID3+4
3733  3811- A9 01              LDA =1
3734  3813- 28                 PLP
3735  3814- B0 0E              BCS *+16
3736  3816- 06 A3      DIVID2  ASL DYADIC+4
3737  3818- 26 A2              ROL DYADIC+3
3738  381A- 26 A1              ROL DYADIC+2
3739  381C- 26 A0              ROL DYADIC+1
3740  381E- B0 E6              BCS DIVID1
3741  3820- 30 CE              BMI DIVID0
3742  3822- 10 E2              BPL DIVID1
3743  3824- A8                 TAY
3744  3825- A5 A3              LDA DYADIC+4
3745  3827- E5 9B              SBC MANT+3
3746  3829- 85 A3              STA DYADIC+4
3747  382B- A5 A2              LDA DYADIC+3
3748  382D- E5 9A              SBC MANT+2
3749  382F- 85 A2              STA DYADIC+3
3750  3831- A5 A1              LDA DYADIC+2
3751  3833- E5 99              SBC MANT+1
3752  3835- 85 A1              STA DYADIC+2
3753  3837- A5 A0              LDA DYADIC+1
3754  3839- E5 98              SBC MANT
3755  383B- 85 A0              STA DYADIC+1
3756  383D- 98                 TYA
3757  383E- 4C 16 38           JMP DIVID2
3758  3841- A9 40      DIVID3  LDA =$40
3759  3843- D0 CE              BNE DIVID2-3    ALLWAYS TAKEN
3760                   *
3761  3845- 0A                 ASL A
3762  3846- 0A                 ASL A
3763  3847- 0A                 ASL A
3764  3848- 0A                 ASL A
3765  3849- 0A                 ASL A
3766  384A- 0A                 ASL A
3767  384B- 85 A6              STA DYADIC+7
3768  384D- 28                 PLP
3769  384E- A5 5C      MULEND  LDA TEMP9
3770  3850- 85 98              STA MANT
3771  3852- A5 5D              LDA TEMP9+1
3772  3854- 85 99              STA MANT+1

----------------------------------------------------------------------

GRAPHIC BASIC - MATH OPERATIONS    30/03/18   R65 ASSEMBLER  PAGE 84

3773  3856- A5 5E              LDA TEMP9+2
3774  3858- 85 9A              STA MANT+2
3775  385A- A5 5F              LDA TEMP9+3
3776  385C- 85 9B              STA MANT+3
3777  385E- 4C B1 33           JMP NORMAL+5
3778                   *
3779  3861- 4C 58 34   OVERF1  JMP OVERFL
3780                   *
3781  3864- A5 9F      MULEXP  LDA DYADIC
3782  3866- F0 20              BEQ MULEX1
3783  3868- 18                 CLC
3784  3869- 65 97              ADC EXP
3785  386B- 90 05              BCC *+7
3786  386D- 30 F2              BMI OVERF1
3787  386F- 18                 CLC
3788  3870- 90 02              BCC *+4         ALLWAYS TAKEN
3789                   *
3790  3872- 10 14              BPL MULEX1
3791  3874- 69 80              ADC =128
3792  3876- 85 97              STA EXP
3793  3878- D0 03              BNE *+5
3794  387A- 85 9C              STA SIGN
3795  387C- 60                 RTS
3796                   *
3797  387D- A5 A5              LDA DYADIC+6
3798  387F- 85 9C              STA SIGN
3799  3881- 60                 RTS
3800                   *
3801  3882- A5 9C              LDA SIGN
3802  3884- 49 FF              EOR =$FF
3803  3886- 30 D9              BMI OVERF1
3804  3888- 68         MULEX1  PLA
3805  3889- 68                 PLA
3806  388A- A9 00              LDA =0
3807  388C- 85 97              STA EXP
3808  388E- 85 9C              STA SIGN
3809  3890- 60                 RTS
3810                   *
3811                   * MULT: FLOATING POINT MULTIPLICATION
3812                   *************************************
3813                   *
3814  3891- 20 96 34           JSR PREPMO
3815  3894- F0 FA      MULT    BEQ *-4         RTS, IF ZERO
3816  3896- 20 64 38           JSR MULEXP
3817  3899- A9 00              LDA =0          CLEAR WORK AREA
3818  389B- 85 5C              STA TEMP9
3819  389D- 85 5D              STA TEMP9+1
3820  389F- 85 5E              STA TEMP9+2
3821  38A1- 85 5F              STA TEMP9+3
3822  38A3- A5 A6              LDA DYADIC+7

----------------------------------------------------------------------

GRAPHIC BASIC - MATH OPERATIONS    30/03/18   R65 ASSEMBLER  PAGE 85

3823  38A5- 20 BF 38           JSR MULBYT
3824  38A8- A5 9B              LDA MANT+3
3825  38AA- 20 BF 38           JSR MULBYT
3826  38AD- A5 9A              LDA MANT+2
3827  38AF- 20 BF 38           JSR MULBYT
3828  38B2- A5 99              LDA MANT+1
3829  38B4- 20 BF 38           JSR MULBYT
3830  38B7- A5 98              LDA MANT
3831  38B9- 20 BF 38           JSR MULBYT
3832  38BC- 4C 4E 38           JMP MULEND
3833                   *
3834                   * MULBYT: MULTIPLY 1*5 BYTES
3835                   ****************************
3836                   * HARDWARE 8*8 MULTIPLY USED
3837                   *
3838  38BF- A4 5F      MULBYT  LDY TEMP9+3
3839  38C1- 84 A6              STY DYADIC+7
3840  38C3- A4 5E              LDY TEMP9+2
3841  38C5- 84 5F              STY TEMP9+3
3842  38C7- A4 5D              LDY TEMP9+1
3843  38C9- 84 5E              STY TEMP9+2
3844  38CB- A4 5C              LDY TEMP9
3845  38CD- 84 5D              STY TEMP9+1
3846  38CF- A0 00              LDY =0
3847  38D1- 84 5C              STY TEMP9
3848                   *
3849  38D3- C9 00              CMP =0          TEST ACCU
3850  38D5- D0 02              BNE *+4
3851  38D7- 58         MULBT9  CLI
3852  38D8- 60                 RTS
3853                   *
3854  38D9- 78                 SEI
3855  38DA- A0 04              LDY =4
3856  38DC- 8D E0 14           STA MULTA
3857  38DF- A5 A3              LDA DYADIC+4
3858  38E1- 8D E1 14           STA MULTB
3859  38E4- A5 A6              LDA DYADIC+7
3860  38E6- 18                 CLC
3861  38E7- 6D E2 14           ADC MULTR
3862  38EA- 85 A6              STA DYADIC+7
3863  38EC- A5 5F              LDA TEMP9+3
3864  38EE- 6D E3 14           ADC MULTR+1
3865  38F1- 85 5F              STA TEMP9+3
3866  38F3- 90 09              BCC MULBT2      SKIP, IF NO CARRY
3867                   *
3868  38F5- 98         MULBT1  TYA
3869  38F6- AA                 TAX
3870  38F7- CA                 DEX
3871  38F8- F0 04              BEQ *+6
3872  38FA- F6 5B              INC TEMP9-1,X

----------------------------------------------------------------------

GRAPHIC BASIC - MATH OPERATIONS    30/03/18   R65 ASSEMBLER  PAGE 86

3873  38FC- F0 F9              BEQ *-5
3874                   *
3875  38FE- 88         MULBT2  DEY
3876  38FF- F0 D6             BEQ MULBT9
3877  3901- B9 9F 00           LDA DYADIC,Y
3878  3904- 8D E1 14           STA MULTB
3879  3907- B9 5C 00           LDA TEMP9,Y
3880  390A- 18                 CLC
3881  390B- 6D E2 14           ADC MULTR
3882  390E- 99 5C 00           STA TEMP9,Y
3883  3911- B9 5B 00           LDA TEMP9-1,Y
3884  3914- 6D E3 14           ADC MULTR+1
3885  3917- 99 5B 00           STA TEMP9-1,Y
3886  391A- B0 D9              BCS MULBT1
3887  391C- 90 E0              BCC MULBT2      ALLWAYS TAKEN
3888                   *
3889                   * UNDEFINED FUNCTION ERROR
3890                   *
3891  391E- A2 CE      UNDFN   LDX =$CE
3892  3920- 4C 43 23           JMP ERROR
3893                   *
3894                   *
3895                   *
3896                   * BASIC FUNCTION TABLE
3897                   **********************
3898                   *
3899  3923- 45 35      FUNCTB  WRD SGN
3900  3925- 3A 3E              WRD INT
3901  3927- 37 3E              WRD ABS
3902  3929- 62 41              WRD USR
3903  392B- 7D 4A              WRD STA
3904  392D- 1E 3C              WRD POSF
3905  392F- D2 3E              WRD SQR
3906  3931- EC 3F              WRD RND
3907  3933- 63 3E              WRD LOG
3908  3935- 19 3F              WRD EXPF
3909  3937- 43 40              WRD COS
3910  3939- 4A 40              WRD SIN
3911  393B- C5 40              WRD TAN
3912  393D- F5 40              WRD ATN
3913  393F- FA 3D              WRD PEEK
3914  3941- 9F 3D              WRD LEN
3915  3943- F5 3C              WRD STR
3916  3945- C1 3D              WRD VAL
3917  3947- B4 3D              WRD ASC
3918  3949- 06 3D              WRD CHR
3919  394B- 1A 3D              WRD LEFT
3920  394D- 46 3D              WRD RIGHT
3921  394F- 51 3D              WRD MID
3922                   *

----------------------------------------------------------------------

GRAPHIC BASIC - MATH OPERATIONS    30/03/18   R65 ASSEMBLER  PAGE 87

3923                   * NOT: MATH OPERATION
3924                   *********************
3925                   *
3926  3951- 20 24 37   NOT     JSR FLPINT
3927  3954- A5 9B              LDA MANT+3
3928  3956- 49 FF              EOR =$FF
3929  3958- A8                 TAY
3930  3959- A5 9A              LDA MANT+2
3931  395B- 49 FF              EOR =$FF
3932  395D- 4C E5 2F           JMP INTFLP
3933                   *
3934                   * BFUNC: BASIC FUNCTION
3935                   ***********************
3936                   *
3937  3960- 0A         BFUNC   ASL A
3938  3961- 48                 PHA             SAVE 2*CODE
3939  3962- AA                 TAX
3940  3963- 20 15 27           JSR FETCH
3941  3966- E0 A9              CPX =$A9
3942  3968- 90 23              BCC BFUNC0      SKIP, IF NOT STR
3943                   *
3944  396A- 20 75 2B           JSR FOLLOW-6    "(" MUST FOLLOW
3945  396D- 20 FF 2D           JSR EXPRES
3946  3970- A9 2C              LDA =','
3947  3972- 20 7B 2B           JSR FOLLOW
3948  3975- 38                 SEC
3949  3976- 20 F1 2D           JSR TESTTP+1    MUST BE STRING
3950  3979- 68                 PLA
3951  397A- AA                 TAX
3952  397B- A5 9B              LDA MANT+3
3953  397D- 48                 PHA
3954  397E- A5 9A              LDA MANT+2
3955  3980- 48                 PHA
3956  3981- 8A                 TXA
3957  3982- 48                 PHA             SAVE 2*CODE AGAIN
3958  3983- 20 05 37           JSR NUMEXP+3    GET SECOND ARG
3959  3986- 68                 PLA
3960  3987- A8                 TAY
3961  3988- 8A                 TXA
3962  3989- 48                 PHA
3963  398A- 4C B3 39           JMP BFUNC1+5
3964                   *
3965  398D- E0 88      BFUNC0  CPX =$88        IF USR
3966  398F- D0 1D              BNE BFUNC1
3967  3991- 20 75 2B           JSR FOLLOW-6    GET 2 ARGS
3968  3994- 20 FF 2D           JSR EXPRES      ADDRESS
3969  3997- 20 F0 2D           JSR TESTTP
3970  399A- 20 07 3E           JSR PEEK1       CONVERT TO INTEGER
3971  399D- A9 2C              LDA =','
3972  399F- 20 7B 2B           JSR FOLLOW

----------------------------------------------------------------------

GRAPHIC BASIC - MATH OPERATIONS    30/03/18   R65 ASSEMBLER  PAGE 88

3973  39A2- 20 FF 2D           JSR EXPRES      GET SECOND ARG
3974  39A5- 20 F0 2D           JSR TESTTP      MUST BE NUMERIC
3975  39A8- 20 79 2B           JSR FOLLOW-2
3976  39AB- 4C B1 39           JMP BFUNC1+3
3977                   *
3978  39AE- 20 88 2F   BFUNC1  JSR ARGUM
3979  39B1- 68                 PLA
3980  39B2- A8                 TAY
3981  39B3- B9 A1 38           LDA FUNCTB-$82,Y
3982  39B6- 85 8B              STA PNT1
3983  39B8- B9 A2 38           LDA FUNCTB-$81,Y
3984  39BB- 85 8C              STA PNT1+1
3985  39BD- 20 8A 00           JSR PNT1-1      EXECUTE
3986  39C0- 4C F0 2D           JMP TESTTP      MUST BE NUMERIC
3987                   *
3988                   * OR: MATH OPERATION
3989                   ********************
3990                   *
3991  39C3- A0 FF      OR      LDY =$FF
3992  39C5- D0 02              BNE *+4         ALLWAYS TAKEN
3993                   *
3994                   * AND: MATH OPERATION
3995                   *********************
3996                   *
3997  39C7- A0 00      AND     LDY =0
3998  39C9- 84 43              STY INPNT
3999  39CB- 20 24 37           JSR FLPINT
4000  39CE- A5 9A              LDA MANT+2
4001  39D0- 45 43              EOR INPNT
4002  39D2- 85 41              STA CHRSAV
4003  39D4- A5 9B              LDA MANT+3
4004  39D6- 45 43              EOR INPNT
4005  39D8- 85 42              STA CHRSAV+1
4006  39DA- 20 18 35           JSR TRANS1
4007  39DD- 20 24 37           JSR FLPINT
4008  39E0- A5 9B              LDA MANT+3
4009  39E2- 45 43              EOR INPNT
4010  39E4- 25 42              AND CHRSAV+1
4011  39E6- 45 43              EOR INPNT
4012  39E8- A8                 TAY
4013  39E9- A5 9A              LDA MANT+2
4014  39EB- 45 43              EOR INPNT
4015  39ED- 25 41              AND CHRSAV
4016  39EF- 45 43              EOR INPNT
4017  39F1- 4C E5 2F           JMP INTFLP
4018                   *
4019                           TIT GRAPHIC BASIC - ARRAYS
4020                           PAG

----------------------------------------------------------------------

GRAPHIC BASIC - ARRAYS             30/03/18   R65 ASSEMBLER  PAGE 89

4021                   *
4022                   * DIM: STATEMENT ROUTINE
4023                   ************************
4024                   *
4025  39F4- A9 2C              LDA =','
4026                    * BASIC5:A ORIGINAL 7/1/1982, RECOVERED 3/2018
4027  39F6- 20 7B 2B           JSR FOLLOW
4028  39F9- A2 00      DIM     LDX =0
4029  39FB- 86 CF              STX TEMP4+1     VARIABLE CAN BE UNDEF
4030  39FD- AA                 TAX
4031  39FE- 20 8C 2B          JSR GETVAR+5
4032  3A01- 20 1B 27           JSR FETCH1
4033  3A04- D0 EE              BNE DIM-5
4034  3A06- 60                 RTS
4035                   *
4036                   * GETARR: GET ARRAY
4037                   *******************
4038                   *
4039  3A07- A5 CF      GETARR  LDA TEMP4+1
4040  3A09- 48                 PHA
4041  3A0A- A5 44              LDA RESTYP-1
4042  3A0C- 05 46              ORA RESTYP+1
4043  3A0E- 48                 PHA
4044  3A0F- A5 45              LDA RESTYP
4045  3A11- 48                 PHA
4046  3A12- A0 00              LDY =0
4047  3A14- 98         GETAR1  TYA
4048  3A15- 48                 PHA
4049  3A16- A5 7C              LDA VARSYM+1
4050  3A18- 48                 PHA
4051  3A19- A5 7B              LDA VARSYM
4052  3A1B- 48                 PHA
4053  3A1C- 20 E3 3B           JSR GETSU       GET SUBSCRIPT
4054  3A1F- 68                 PLA
4055  3A20- 85 7B              STA VARSYM
4056  3A22- 68                 PLA
4057  3A23- 85 7C              STA VARSYM+1
4058  3A25- 68                 PLA
4059  3A26- A8                 TAY
4060                   *
4061  3A27- BA                 TSX
4062  3A28- BD 02 01           LDA 258,X       RESTYP TO STACK BOT
4063  3A2B- 48                 PHA
4064  3A2C- BD 01 01           LDA 257,X
4065  3A2F- 48                 PHA
4066  3A30- BD 03 01           LDA 259,X
4067  3A33- 9D 01 01           STA 257,X
4068  3A36- A5 9A              LDA MANT+2
4069  3A38- 9D 03 01           STA 259,X       SUBSCRIPT TO TOP
4070  3A3B- A5 9B              LDA MANT+3

----------------------------------------------------------------------

GRAPHIC BASIC - ARRAYS             30/03/18   R65 ASSEMBLER  PAGE 90

4071  3A3D- 9D 02 01           STA 258,X
4072                   *
4073  3A40- C8                 INY             COUNT SUBSCRIPT
4074  3A41- 20 1B 27           JSR FETCH1      MORE SUBSCRIPTS?
4075  3A44- C9 2C              CMP =','
4076  3A46- F0 CC              BEQ GETAR1      IF YES, GET THEM
4077                   *
4078  3A48- 84 43              STY INPNT       SAVE NO OF SUBSCRIPTS
4079  3A4A- 20 79 2B           JSR FOLLOW-2    ) MUST FOLLOW
4080  3A4D- 68                 PLA
4081  3A4E- 85 45              STA RESTYP
4082  3A50- 68                 PLA
4083  3A51- 85 46              STA RESTYP+1
4084  3A53- 29 7F              AND =$7F
4085  3A55- 85 44              STA RESTYP-1
4086  3A57- 68                 PLA
4087  3A58- 85 CF              STA TEMP4+1
4088                   *
4089  3A5A- A6 65              LDX EOVAR
4090  3A5C- A5 66              LDA EOVAR+1
4091  3A5E- 86 95      GETAR2  STX TRANSP      SEARCH SYMBOL
4092  3A60- 85 96              STA TRANSP+1    STARTING FROM EOVAR
4093  3A62- C5 68              CMP STSPAC+1    ENDING WITH STSPAC
4094  3A64- D0 04              BNE *+6
4095  3A66- E4 67              CPX STSPAC
4096  3A68- F0 36              BEQ GETAR4      BRANCH, IF NOT FOUND
4097  3A6A- A0 00              LDY =0
4098  3A6C- B1 95              LDA (TRANSP),Y
4099  3A6E- C8                 INY
4100  3A6F- C5 7B              CMP VARSYM
4101  3A71- D0 06              BNE *+8
4102  3A73- A5 7C              LDA VARSYM+1
4103  3A75- D1 95              CMP (TRANSP),Y
4104  3A77- F0 13              BEQ GETAR3      BRANCH, IF FOUND
4105  3A79- C8                 INY
4106  3A7A- B1 95              LDA (TRANSP),Y  GET SIZE LOW
4107  3A7C- 18                 CLC
4108  3A7D- 65 95              ADC TRANSP
4109  3A7F- AA                 TAX
4110  3A80- C8                 INY
4111  3A81- B1 95              LDA (TRANSP),Y
4112  3A83- 65 96              ADC TRANSP+1
4113  3A85- 90 D7              BCC GETAR2      ALLWAYS TAKEN
4114                   *
4115  3A87- A2 6F      SUBERR  LDX =$6F        SUBSCRIPT ERROR
4116  3A89- 4C 43 23           JMP ERROR
4117                   *
4118  3A8C- A2 64      GETAR3  LDX =$64        IF FOUND
4119  3A8E- A5 44              LDA RESTYP-1    REDIMENSION ERROR
4120  3A90- D0 F7              BNE GETAR3-3    YES

----------------------------------------------------------------------

GRAPHIC BASIC - ARRAYS             30/03/18   R65 ASSEMBLER  PAGE 91

4121  3A92- 20 F6 3B           JSR COMPEB
4122  3A95- A5 43              LDA INPNT
4123  3A97- A0 04              LDY =4
4124  3A99- D1 95              CMP (TRANSP),Y
4125  3A9B- D0 EA              BNE SUBERR      SUBSCRIPT ERROR
4126  3A9D- 4C 31 3B           JMP GETAR6
4127                   *
4128  3AA0- A5 CF      GETAR4  LDA TEMP4+1     IF NOT FOUND
4129  3AA2- F0 03              BEQ *+5
4130  3AA4- 4C 15 2C           JMP GETV3+4     UNDEF VAR ERR
4131                   *
4132  3AA7- 20 F6 3B           JSR COMPEB
4133  3AAA- 20 07 23           JSR TSROOM
4134  3AAD- A9 00              LDA =0
4135  3AAF- A8                 TAY
4136  3AB0- 85 A8              STA DYADIC+9
4137  3AB2- A2 05              LDX =5
4138  3AB4- A5 7B              LDA VARSYM
4139  3AB6- 91 95              STA (TRANSP),Y
4140  3AB8- 10 01              BPL *+3
4141  3ABA- CA                 DEX
4142  3ABB- C8                 INY
4143  3ABC- A5 7C              LDA VARSYM+1
4144  3ABE- 91 95              STA (TRANSP),Y
4145  3AC0- 10 02              BPL *+4
4146  3AC2- CA                 DEX
4147  3AC3- CA                 DEX
4148  3AC4- 86 A7              STX DYADIC+8    ELEMENT SIZE
4149  3AC6- A5 43              LDA INPNT
4150  3AC8- C8                 INY
4151  3AC9- C8                 INY
4152  3ACA- C8                 INY
4153  3ACB- 91 95              STA (TRANSP),Y
4154  3ACD- A2 0B      GETAR5  LDX =11         DEFAULT DIMENSION
4155  3ACF- A9 00              LDA =0
4156  3AD1- 24 44              BIT RESTYP-1
4157  3AD3- 50 08              BVC *+10        SKIP, IF NOT DIM
4158  3AD5- 68                 PLA
4159  3AD6- 18                 CLC
4160  3AD7- 69 01              ADC =1
4161  3AD9- AA                 TAX
4162  3ADA- 68                 PLA
4163  3ADB- 69 00              ADC =0
4164                   *
4165  3ADD- C8                 INY
4166  3ADE- 91 95              STA (TRANSP),Y
4167  3AE0- C8                 INY
4168  3AE1- 8A                 TXA
4169  3AE2- 91 95              STA (TRANSP),Y
4170  3AE4- 20 94 3B           JSR GETAR8

----------------------------------------------------------------------

GRAPHIC BASIC - ARRAYS             30/03/18   R65 ASSEMBLER  PAGE 92

4171  3AE7- 86 A7              STX DYADIC+8
4172  3AE9- 84 A8              STY DYADIC+9
4173  3AEB- A4 58              LDY TEMP1
4174  3AED- C6 43              DEC INPNT
4175  3AEF- D0 DC              BNE GETAR5
4176  3AF1- 65 8F              ADC ENDB+1
4177  3AF3- B0 5D              BCS GETAR7      OUT OF MEMORY
4178  3AF5- 85 8F              STA ENDB+1
4179  3AF7- A8                 TAY
4180  3AF8- 8A                 TXA
4181  3AF9- 65 8E              ADC ENDB
4182  3AFB- 90 03              BCC *+5
4183  3AFD- C8                 INY
4184  3AFE- F0 52             BEQ GETAR7      OUT OF MEMORY
4185  3B00- 20 07 23           JSR TSROOM
4186  3B03- 85 67              STA STSPAC
4187  3B05- 84 68              STY STSPAC+1
4188  3B07- A9 00              LDA =0
4189  3B09- E6 A8              INC DYADIC+9
4190  3B0B- A4 A7              LDY DYADIC+8
4191  3B0D- F0 05              BEQ *+7
4192  3B0F- 88                 DEY
4193  3B10- 91 8E              STA (ENDB),Y
4194  3B12- D0 FB              BNE *-3
4195  3B14- C6 8F              DEC ENDB+1
4196  3B16- C6 A8              DEC DYADIC+9
4197  3B18- D0 F5              BNE *-9
4198  3B1A- E6 8F              INC ENDB+1
4199  3B1C- 38                 SEC
4200  3B1D- A5 67              LDA STSPAC
4201  3B1F- E5 95              SBC TRANSP
4202  3B21- A0 02              LDY =2
4203  3B23- 91 95              STA (TRANSP),Y
4204  3B25- A5 68              LDA STSPAC+1
4205  3B27- C8                 INY
4206  3B28- E5 96              SBC TRANSP+1
4207  3B2A- 91 95              STA (TRANSP),Y
4208  3B2C- A5 44              LDA RESTYP-1
4209  3B2E- D0 63              BNE GETAR8-1
4210  3B30- C8                 INY
4211  3B31- B1 95      GETAR6  LDA (TRANSP),Y
4212  3B33- 85 43              STA INPNT
4213  3B35- A9 00              LDA =0
4214  3B37- 85 A7              STA DYADIC+8
4215  3B39- 85 A8              STA DYADIC+9
4216  3B3B- C8                 INY
4217  3B3C- 68                 PLA
4218  3B3D- AA                 TAX
4219  3B3E- 85 9A              STA MANT+2
4220  3B40- 68                 PLA

----------------------------------------------------------------------

GRAPHIC BASIC - ARRAYS             30/03/18   R65 ASSEMBLER  PAGE 93

4221  3B41- 85 9B              STA MANT+3
4222  3B43- D1 95              CMP (TRANSP),Y
4223  3B45- 90 0F              BCC GETAR7+4
4224  3B47- D0 06              BNE GETAR7-3
4225  3B49- C8                 INY
4226  3B4A- 8A                 TXA
4227  3B4B- D1 95              CMP (TRANSP),Y
4228  3B4D- 90 08              BCC GETAR7+5
4229  3B4F- 4C 87 3A           JMP SUBERR      SUBSCRIPT ERROR
4230                   *
4231  3B52- 58         GETAR7  CLI
4232  3B53- 4C 41 23           JMP OUTMEM      OUT OF MEMORY
4233                   *
4234  3B56- C8                 INY
4235  3B57- A5 A8              LDA DYADIC+9
4236  3B59- 05 A7              ORA DYADIC+8
4237  3B5B- 18                 CLC
4238  3B5C- F0 0A              BEQ *+12
4239  3B5E- 20 94 3B           JSR GETAR8
4240  3B61- 8A                 TXA
4241  3B62- 65 9A              ADC MANT+2
4242  3B64- AA                 TAX
4243  3B65- 98                 TYA
4244  3B66- A4 58              LDY TEMP1
4245  3B68- 65 9B              ADC MANT+3
4246  3B6A- 86 A7              STX DYADIC+8
4247  3B6C- C6 43              DEC INPNT
4248  3B6E- D0 C9              BNE GETAR6+8
4249  3B70- 85 A8              STA DYADIC+9
4250  3B72- A2 05              LDX =5
4251  3B74- A5 7B              LDA VARSYM
4252  3B76- 10 01              BPL *+3
4253  3B78- CA                 DEX
4254  3B79- A5 7C              LDA VARSYM+1
4255  3B7B- 10 02              BPL *+4
4256  3B7D- CA                 DEX
4257  3B7E- CA                 DEX
4258  3B7F- 86 5E              STX TEMP9+2
4259  3B81- A9 00              LDA =0
4260  3B83- 20 9D 3B           JSR GETAR8+9
4261  3B86- 8A                 TXA
4262  3B87- 65 8E              ADC ENDB
4263  3B89- 85 7D              STA VARSTP
4264  3B8B- 98                 TYA
4265  3B8C- 65 8F              ADC ENDB+1
4266  3B8E- 85 7E              STA VARSTP+1
4267  3B90- A8                 TAY
4268  3B91- A5 7D              LDA VARSTP
4269  3B93- 60                 RTS
4270                   *

----------------------------------------------------------------------

GRAPHIC BASIC - ARRAYS             30/03/18   R65 ASSEMBLER  PAGE 94

4271                   *
4272  3B94- 84 58      GETAR8  STY TEMP1       SAVE POINTER
4273  3B96- B1 95              LDA (TRANSP),Y
4274  3B98- 85 5E              STA TEMP9+2
4275  3B9A- 88                 DEY
4276  3B9B- B1 95              LDA (TRANSP),Y
4277  3B9D- 85 5F              STA TEMP9+3
4278  3B9F- A5 A7              LDA DYADIC+8
4279  3BA1- 78                 SEI
4280  3BA2- 8D E0 14           STA MULTA
4281  3BA5- A5 5E              LDA TEMP9+2
4282  3BA7- 8D E1 14           STA MULTB
4283  3BAA- AE E2 14           LDX MULTR
4284  3BAD- AD E3 14           LDA MULTR+1
4285  3BB0- A4 5F              LDY TEMP9+3
4286  3BB2- 8C E1 14           STY MULTB
4287  3BB5- 18                 CLC
4288  3BB6- 6D E2 14           ADC MULTR
4289  3BB9- B0 97              BCS GETAR7      OUT OF MEMORY
4290  3BBB- A8                 TAY
4291  3BBC- AD E3 14           LDA MULTR+1
4292  3BBF- D0 91              BNE GETAR7      OUT OF MEMORY
4293  3BC1- 58                 CLI
4294  3BC2- A5 A8              LDA DYADIC+9
4295  3BC4- F0 1A              BEQ GETSU-3     RTS, IF ZERO
4296  3BC6- 78                 SEI
4297  3BC7- 8D E0 14           STA MULTA
4298  3BCA- A5 5F              LDA TEMP9+3
4299  3BCC- D0 84              BNE GETAR7      OUT OF MEMORY
4300  3BCE- A5 5E              LDA TEMP9+2
4301  3BD0- 8D E1 14           STA MULTB
4302  3BD3- 98                 TYA
4303  3BD4- 18                 CLC
4304  3BD5- 6D E2 14           ADC MULTR
4305  3BD8- B0 DF              BCS *-31        OUT OF MEMORY
4306  3BDA- A8                 TAY
4307  3BDB- AD E3 14           LDA MULTR+1
4308  3BDE- D0 EC              BNE *-18        OUT OF MEMORY
4309  3BE0- 98                 TYA
4310  3BE1- 58                 CLI
4311  3BE2- 60                 RTS
4312                   *
4313                   * GETSU: GET ONE SUBSCRIPT
4314                   **************************
4315                   *
4316  3BE3- 20 15 27   GETSU   JSR FETCH
4317  3BE6- 20 FF 2D           JSR EXPRES
4318  3BE9- 20 F0 2D           JSR TESTTP
4319  3BEC- A5 9C              LDA MANT+4
4320  3BEE- 30 03              BMI *+5

----------------------------------------------------------------------

GRAPHIC BASIC - ARRAYS             30/03/18   R65 ASSEMBLER  PAGE 95

4321  3BF0- 4C 24 37           JMP FLPINT
4322  3BF3- 4C 17 37           JMP QERR
4323                   *
4324                   * COMPEB: COMPUTE ENDB
4325                   **********************
4326                   *
4327  3BF6- A5 43      COMPEB  LDA INPNT       NO OF SUBSCRIPTS
4328  3BF8- 0A                 ASL A
4329  3BF9- 69 05              ADC =5          *2, + 5
4330  3BFB- 65 95              ADC TRANSP
4331  3BFD- A4 96              LDY TRANSP+1
4332  3BFF- 90 01             BCC *+3
4333  3C01- C8                 INY
4334  3C02- 85 8E              STA ENDB
4335  3C04- 84 8F              STY ENDB+1
4336  3C06- 60                 RTS
4337                   *
4338                           TIT GRAPHIC BASIC - FUNCTIONS
4339                           PAG

----------------------------------------------------------------------

GRAPHIC BASIC - FUNCTIONS          30/03/18   R65 ASSEMBLER  PAGE 96

4340                   *
4341                   * FRE: COMPUTE FREE SPACE IN MEMORY
4342                   ***********************************
4343                   *
4344  3C07- A5 45      FRE     LDA RESTYP
4345  3C09- F0 03              BEQ *+5
4346  3C0B- 20 17 29           JSR PREPST
4347  3C0E- 20 A2 2C           JSR PKSTRG
4348  3C11- 38                 SEC
4349  3C12- A5 69              LDA BTSTRG
4350  3C14- E5 67              SBC STSPAC
4351  3C16- A8                 TAY
4352  3C17- A5 6A              LDA BTSTRG+1
4353  3C19- E5 68              SBC STSPAC+1
4354  3C1B- 4C E5 2F           JMP INTFLP
4355                   *
4356                   * POS: BASIC FUNCTION
4357                   *********************
4358                   *
4359  3C1E- 20 08 37   POSF    JSR NUMEXP+6
4360  3C21- E0 04              CPX =4
4361  3C23- 90 03              BCC *+5
4362  3C25- 4C 93 3D           JMP QERR1
4363  3C28- E4 00              CPX OUTDEV
4364  3C2A- D0 07              BNE POSF2
4365  3C2C- A4 02      POSF1   LDY POS
4366  3C2E- A9 00              LDA =0
4367  3C30- 4C E5 2F           JMP INTFLP
4368  3C33- B5 BB      POSF2   LDA POSTB,X
4369  3C35- A8                 TAY
4370  3C36- 4C 2E 3C           JMP POSF1+2
4371                   *
4372                   * DEF: STATEMENT ROUTINE
4373                   ************************
4374                   *
4375  3C39- 20 67 3C   DEF     JSR DEF1
4376  3C3C- 20 FC 32           JSR ILLDIR
4377  3C3F- 20 75 2B           JSR FOLLOW-6    ( MUST FOLLOW
4378  3C42- A9 80              LDA =128
4379  3C44- 85 48              STA FLAG1
4380  3C46- 20 87 2B           JSR GETVAR
4381  3C49- 20 F0 2D           JSR TESTTP      MUST BE NUMERIC
4382  3C4C- 20 79 2B           JSR FOLLOW-2    ) MUST FOLLOW
4383  3C4F- A9 BF              LDA =$BF        CODE FOR =
4384  3C51- 20 7B 2B           JSR FOLLOW
4385  3C54- 48                 PHA
4386  3C55- A5 7E              LDA VARSTP+1
4387  3C57- 48                 PHA
4388  3C58- A5 7D              LDA VARSTP
4389  3C5A- 48                 PHA

----------------------------------------------------------------------

GRAPHIC BASIC - FUNCTIONS          30/03/18   R65 ASSEMBLER  PAGE 97

4390  3C5B- A5 AA              LDA PC+1
4391  3C5D- 48                 PHA
4392  3C5E- A5 A9              LDA PC
4393  3C60- 48                 PHA
4394  3C61- 20 F8 27           JSR DATA        ADVANCE IN LINE
4395  3C64- 4C DF 3C           JMP DEF2
4396                   *
4397  3C67- A9 00      DEF1    LDA =0  MUST NOT BE DEFINED
4398  3C69- 85 CF              STA TEMP4+1
4399  3C6B- A9 B2              LDA =$B2        CODE FOR FN
4400  3C6D- 20 7B 2B           JSR FOLLOW
4401  3C70- 09 80              ORA =$80
4402  3C72- 85 48              STA FLAG1
4403  3C74- 20 8E 2B           JSR GETVAR+7
4404  3C77- 85 84              STA TEMP6
4405  3C79- 84 85              STY TEMP6+1
4406  3C7B- 4C F0 2D           JMP TESTTP      MUST BE NUMERIC
4407                   *
4408                   *
4409                   * FUNC: BASIC USER DEFINED FUNCTION
4410                   ***********************************
4411                   *
4412  3C7E- 20 67 3C   FUNC    JSR DEF1
4413  3C81- A5 85              LDA TEMP6+1     SAVE FUNCTION
4414  3C83- 48                 PHA             VARIABLE NAME ON STACK
4415  3C84- A5 84              LDA TEMP6
4416  3C86- 48                 PHA
4417  3C87- 20 88 2F           JSR ARGUM
4418  3C8A- 20 F0 2D           JSR TESTTP      MUST BE NUMERIC
4419  3C8D- 68                 PLA
4420  3C8E- 85 84              STA TEMP6
4421  3C90- 68                 PLA
4422  3C91- 85 85              STA TEMP6+1
4423  3C93- A0 02              LDY =2
4424  3C95- B1 84              LDA (TEMP6),Y
4425  3C97- D0 03              BNE *+5
4426  3C99- 4C 1E 39           JMP UNDFN       UNDEFINED FUNCTION
4427  3C9C- 85 7D              STA VARSTP
4428  3C9E- AA                 TAX
4429  3C9F- C8                 INY
4430  3CA0- B1 84              LDA (TEMP6),Y
4431  3CA2- 85 7E              STA VARSTP+1
4432  3CA4- C8                 INY
4433  3CA5- B1 7D              LDA (VARSTP),Y
4434  3CA7- 48                 PHA
4435  3CA8- 88                 DEY
4436  3CA9- 10 FA              BPL *-4
4437  3CAB- A4 7E              LDY VARSTP+1
4438  3CAD- 20 E0 34           JSR SAVFLP+4
4439  3CB0- A5 AA              LDA PC+1

----------------------------------------------------------------------

GRAPHIC BASIC - FUNCTIONS          30/03/18   R65 ASSEMBLER  PAGE 98

4440  3CB2- 48                 PHA
4441  3CB3- A5 A9              LDA PC
4442  3CB5- 48                 PHA
4443  3CB6- B1 84              LDA (TEMP6),Y
4444  3CB8- 85 A9              STA PC
4445  3CBA- C8                 INY
4446  3CBB- B1 84              LDA (TEMP6),Y
4447  3CBD- 85 AA              STA PC+1
4448  3CBF- A5 7E              LDA VARSTP+1
4449  3CC1- 48                 PHA
4450  3CC2- A5 7D              LDA VARSTP
4451  3CC4- 48                 PHA
4452  3CC5- 20 FF 2D           JSR EXPRES
4453  3CC8- 20 F0 2D           JSR TESTTP
4454  3CCB- 68                 PLA
4455  3CCC- 85 84              STA TEMP6
4456  3CCE- 68                 PLA
4457  3CCF- 85 85              STA TEMP6+1
4458  3CD1- 20 1B 27           JSR FETCH1
4459  3CD4- F0 03              BEQ *+5
4460  3CD6- 4C CC 26           JMP SYNERR
4461  3CD9- 68                 PLA
4462  3CDA- 85 A9              STA PC
4463  3CDC- 68                 PLA
4464  3CDD- 85 AA              STA PC+1
4465                   *
4466  3CDF- A0 00      DEF2    LDY =0
4467  3CE1- 68                 PLA
4468  3CE2- 91 84              STA (TEMP6),Y
4469  3CE4- 68                 PLA
4470  3CE5- C8                 INY
4471  3CE6- 91 84              STA (TEMP6),Y
4472  3CE8- 68                 PLA
4473  3CE9- C8                 INY
4474  3CEA- 91 84              STA (TEMP6),Y
4475  3CEC- 68                 PLA
4476  3CED- C8                 INY
4477  3CEE- 91 84              STA (TEMP6),Y
4478  3CF0- 68                 PLA
4479  3CF1- C8                 INY
4480  3CF2- 91 84              STA (TEMP6),Y
4481  3CF4- 60                 RTS
4482                   *
4483                   * STR$: BASIC FUNCTION
4484                   **********************
4485                   *
4486  3CF5- 20 F0 2D   STR     JSR TESTTP      ARGUMENT NUMERIC
4487  3CF8- A0 00              LDY =0
4488  3CFA- 20 83 49           JSR FORMOUT+2
4489  3CFD- 68                 PLA

----------------------------------------------------------------------

GRAPHIC BASIC - FUNCTIONS          30/03/18   R65 ASSEMBLER  PAGE 99

4490  3CFE- 68                 PLA
4491  3CFF- A9 FF             LDA =255
4492  3D01- A0 00              LDY =0
4493  3D03- 4C B0 28           JMP STRSIZ
4494                   *
4495                   * CHR$: BASIC FUNCTION
4496                   **********************
4497                   *
4498  3D06- 20 0B 37   CHR     JSR NUMEXP+9
4499  3D09- 8A                 TXA
4500  3D0A- 48                 PHA
4501  3D0B- A9 01              LDA =1
4502  3D0D- 20 BD 2D           JSR TSTRRM+8
4503  3D10- 68                 PLA
4504  3D11- A0 00              LDY =0
4505  3D13- 91 98              STA (MANT),Y
4506  3D15- 68                 PLA
4507  3D16- 68                 PLA
4508  3D17- 4C EF 28           JMP STRSI3
4509                   *
4510                   * LEFT$: BASIC FUNCTION
4511                   ***********************
4512                   *
4513  3D1A- 20 7B 3D   LEFT    JSR MID1
4514  3D1D- D1 86              CMP (TEMP5),Y
4515  3D1F- 98                 TYA
4516  3D20- 90 04              BCC *+6
4517  3D22- B1 86              LDA (TEMP5),Y
4518  3D24- AA                 TAX
4519  3D25- 98                 TYA
4520  3D26- 48                 PHA
4521  3D27- 8A         LEFT1   TXA
4522  3D28- 48                 PHA
4523  3D29- 20 BD 2D           JSR TSTRRM+8
4524  3D2C- A5 86              LDA TEMP5
4525  3D2E- A4 87              LDY TEMP5+1
4526  3D30- 20 1B 29           JSR PREPST+4
4527  3D33- 68                 PLA
4528  3D34- A8                 TAY
4529  3D35- 68                 PLA
4530  3D36- 18                 CLC
4531  3D37- 65 58              ADC TEMP1
4532  3D39- 85 58              STA TEMP1
4533  3D3B- 90 02              BCC *+4
4534  3D3D- E6 59              INC TEMP1+1
4535  3D3F- 98                 TYA
4536  3D40- 20 D9 2D           JSR INSST0+4
4537  3D43- 4C EF 28           JMP STRSI3
4538                   *
4539                   * RIGHT$: BASIC FUNCTION

----------------------------------------------------------------------

GRAPHIC BASIC - FUNCTIONS          30/03/18   R65 ASSEMBLER  PAGE 00

4540                   ************************
4541                   *
4542  3D46- 20 7B 3D   RIGHT   JSR MID1
4543  3D49- 18                 CLC
4544  3D4A- F1 86              SBC (TEMP5),Y
4545  3D4C- 49 FF              EOR =$FF
4546  3D4E- 4C 20 3D           JMP LEFT+6
4547                   *
4548                   * MID$ BASIC FUNCTION
4549                   *********************
4550                   *
4551  3D51- A9 FF      MID     LDA =$FF
4552  3D53- 85 9B              STA MANT+3
4553  3D55- 20 1B 27           JSR FETCH1
4554  3D58- C9 29              CMP =')'
4555  3D5A- F0 08              BEQ *+10
4556  3D5C- A9 2C              LDA =','
4557  3D5E- 20 7B 2B           JSR FOLLOW
4558  3D61- 20 05 37           JSR NUMEXP+3
4559                   *
4560  3D64- 20 7B 3D           JSR MID1
4561  3D67- CA                 DEX
4562  3D68- 8A                 TXA
4563  3D69- 48                 PHA
4564  3D6A- 18                 CLC
4565  3D6B- A2 00              LDX =0
4566  3D6D- F1 86              SBC (TEMP5),Y
4567  3D6F- B0 B6              BCS LEFT1
4568  3D71- 49 FF              EOR =$FF
4569  3D73- C5 9B              CMP MANT+3
4570  3D75- 90 B1              BCC LEFT1+1
4571  3D77- A5 9B              LDA MANT+3
4572  3D79- B0 AD              BCS LEFT1+1     ALLWAYS TAKEN
4573                   *
4574  3D7B- 20 79 2B   MID1    JSR FOLLOW-2    ) MUST FOLLOW
4575  3D7E- 68                 PLA
4576  3D7F- 85 8B              STA PNT1
4577  3D81- 68                 PLA
4578  3D82- 85 8C              STA PNT1+1
4579  3D84- 68                 PLA
4580  3D85- 68                 PLA
4581  3D86- 68                 PLA
4582  3D87- AA                 TAX
4583  3D88- 68                 PLA
4584  3D89- 85 86              STA TEMP5
4585  3D8B- 68                 PLA
4586  3D8C- 85 87              STA TEMP5+1
4587  3D8E- A0 00              LDY =0
4588  3D90- 8A                 TXA
4589  3D91- D0 03              BNE *+5

----------------------------------------------------------------------

GRAPHIC BASIC - FUNCTIONS          30/03/18   R65 ASSEMBLER  PAGE 01

4590  3D93- 4C 17 37   QERR1   JMP QERR
4591  3D96- E6 8B              INC PNT1        PREPARE RETURN
4592  3D98- D0 02              BNE *+4
4593  3D9A- E6 8C              INC PNT1+1
4594  3D9C- 6C 8B 00           JMP (PNT1)      SIMULATE RTS
4595                   *
4596                   * LEN:  BASIC FUNCTION
4597                   **********************
4598                   *
4599  3D9F- 20 A7 3D   LEN     JSR LEN1
4600  3DA2- A9 00              LDA =0
4601  3DA4- 4C E5 2F           JMP INTFLP
4602                   *
4603  3DA7- 38         LEN1    SEC
4604  3DA8- 20 F1 2D           JSR TESTTP+1    ARGUMENT STRING
4605  3DAB- 20 17 29           JSR PREPST
4606  3DAE- A2 00              LDX =0
4607  3DB0- 86 45              STX RESTYP
4608  3DB2- A8                 TAY
4609  3DB3- 60                 RTS
4610                   *
4611                   * ASC: BASIC FUNCTION
4612                   *********************
4613                   *
4614  3DB4- 20 A7 3D   ASC     JSR LEN1
4615  3DB7- F0 DA              BEQ QERR1       QUANTITY ERROR, IF 0
4616  3DB9- A0 00              LDY =0
4617  3DBB- B1 58              LDA (TEMP1),Y
4618  3DBD- A8                 TAY
4619  3DBE- 4C A2 3D           JMP LEN+3
4620                   *
4621                   * VAL: BASIC FUNCTION
4622                   *********************
4623                   *
4624  3DC1- 20 A7 3D   VAL     JSR LEN1
4625  3DC4- D0 03              BNE *+5
4626  3DC6- 4C D1 33           JMP ADD3-7      SET RESULT TO 0
4627  3DC9- A6 A9              LDX PC
4628  3DCB- A4 AA              LDY PC+1
4629  3DCD- 86 A7              STX DYADIC+8
4630  3DCF- 84 A8              STY DYADIC+9
4631  3DD1- A6 58              LDX TEMP1
4632  3DD3- 86 A9              STX PC
4633  3DD5- 18                 CLC
4634  3DD6- 65 58              ADC TEMP1
4635  3DD8- 85 5A              STA TEMP8
4636  3DDA- A6 59              LDX TEMP1+1
4637  3DDC- 86 AA              STX PC+1
4638  3DDE- 90 01              BCC *+3
4639  3DE0- E8                 INX

----------------------------------------------------------------------

GRAPHIC BASIC - FUNCTIONS          30/03/18   R65 ASSEMBLER  PAGE 02

4640  3DE1- 86 5B              STX TEMP8+1
4641  3DE3- A0 00              LDY =0
4642  3DE5- B1 5A              LDA (TEMP8),Y
4643  3DE7- 48                 PHA
4644  3DE8- A9 00              LDA =0
4645  3DEA- 91 5A              STA (TEMP8),Y
4646  3DEC- 20 1B 27           JSR FETCH1
4647  3DEF- 20 A5 35           JSR NUMBER
4648  3DF2- 68                 PLA
4649  3DF3- A0 00              LDY =0
4650  3DF5- 91 5A              STA (TEMP8),Y   RESTORE END MARK
4651  3DF7- 4C 69 2F           JMP UPDPC
4652                   *
4653                   * PEEK: BASIC FUNCTION
4654                   **********************
4655                   *
4656  3DFA- 20 07 3E   PEEK    JSR PEEK1
4657  3DFD- A0 00              LDY =0
4658  3DFF- B1 05             LDA (INTEG),Y
4659  3E01- A8                 TAY
4660  3E02- A9 00              LDA =0
4661  3E04- 4C E5 2F           JMP INTFLP
4662                   *
4663  3E07- A5 9C      PEEK1   LDA SIGN
4664  3E09- 30 88              BMI QERR1
4665  3E0B- A5 97              LDA EXP
4666  3E0D- C9 91              CMP =$91
4667  3E0F- B0 82              BCS QERR1
4668  3E11- 20 33 37           JSR FLPIN1
4669  3E14- A5 9B              LDA MANT+3
4670  3E16- A4 9A              LDY MANT+2
4671  3E18- 84 06              STY INTEG+1
4672  3E1A- 85 05              STA INTEG
4673  3E1C- 60                 RTS
4674                   *
4675                   * POKE: STATEMENT ROUTINE
4676                   *************************
4677                   *
4678  3E1D- 20 26 3E   POKE    JSR POKE1
4679  3E20- 8A                 TXA
4680  3E21- A0 00              LDY =0
4681  3E23- 91 05              STA (INTEG),Y
4682  3E25- 60                 RTS
4683                   *
4684  3E26- 20 FF 2D   POKE1   JSR EXPRES
4685  3E29- 20 F0 2D           JSR TESTTP
4686  3E2C- 20 07 3E           JSR PEEK1
4687  3E2F- A9 2C              LDA =','
4688  3E31- 20 7B 2B           JSR FOLLOW
4689  3E34- 4C 05 37           JMP NUMEXP+3

----------------------------------------------------------------------

GRAPHIC BASIC - FUNCTIONS          30/03/18   R65 ASSEMBLER  PAGE 03

4690                   *
4691                   * ABS: BASIC FUNCTION
4692                   *********************
4693                   *
4694  3E37- 46 9C      ABS     LSR SIGN
4695  3E39- 60                 RTS
4696                   *
4697                   * INT: BASIC FUNCTION
4698                   *********************
4699                   *
4700  3E3A- A5 97      INT     LDA EXP
4701  3E3C- C9 A0              CMP =$A0
4702  3E3E- B0 F9              BCS *-5         RTS, IF >1E9
4703  3E40- 20 33 37           JSR FLPIN1
4704  3E43- 84 A6              STY DYADIC+7
4705  3E45- A5 9C              LDA SIGN
4706  3E47- 84 9C              STY SIGN
4707  3E49- 49 80              EOR =$80
4708  3E4B- 2A                 ROL A
4709  3E4C- A9 A0              LDA =$A0
4710  3E4E- 85 97              STA EXP
4711  3E50- A5 9B              LDA MANT+3
4712  3E52- 85 41              STA CHRSAV
4713  3E54- 4C AC 33           JMP NORMAL
4714                   *
4715                   * SYS: STATEMENT ROUTINE
4716                   ************************
4717                   *
4718  3E57- 20 FF 2D   SYS     JSR EXPRES
4719  3E5A- 20 F0 2D           JSR TESTTP
4720  3E5D- 20 07 3E           JSR PEEK1
4721  3E60- 6C 05 00           JMP (INTEG)
4722                   *
4723                   * LOG: BASIC FUNCTION
4724                   *********************
4725                   *
4726  3E63- 20 37 35   LOG     JSR SGN1
4727  3E66- F0 02              BEQ *+4
4728  3E68- 10 03              BPL *+5
4729  3E6A- 4C 17 37           JMP QERR        QUANTITY ERROR
4730  3E6D- A5 97              LDA EXP
4731  3E6F- E9 7F              SBC =127
4732  3E71- 48                 PHA
4733  3E72- A9 80              LDA =128
4734  3E74- 85 97              STA EXP
4735  3E76- A9 BE              LDA =<LOG2
4736  3E78- A0 3E              LDY =>LOG2
4737  3E7A- 20 40 33           JSR ADD-3
4738  3E7D- A9 C3              LDA =<(LOG2+5)
4739  3E7F- A0 3E              LDY =>(LOG2+5)

----------------------------------------------------------------------

GRAPHIC BASIC - FUNCTIONS          30/03/18   R65 ASSEMBLER  PAGE 04

4740  3E81- 20 D6 37           JSR DIVIDE-3
4741  3E84- A9 A4              LDA =<LOG1
4742  3E86- A0 3E              LDY =>LOG1
4743  3E88- 20 22 33           JSR SUBTR-3
4744  3E8B- A9 A9              LDA =<(LOG1+5)
4745  3E8D- A0 3E              LDY =>(LOG1+5)
4746  3E8F- 20 6C 3F           JSR ITERAT
4747  3E92- A9 C8              LDA =<(LOG2+10)
4748  3E94- A0 3E              LDY =>(LOG2+10)
4749  3E96- 20 40 33           JSR ADD-3
4750  3E99- 68                 PLA
4751  3E9A- 20 42 36           JSR NUMB6
4752  3E9D- A9 CD              LDA =<(LOG2+15)
4753  3E9F- A0 3E              LDY =>(LOG2+15)
4754  3EA1- 4C 91 38           JMP MULT-3
4755                   *
4756  3EA4- 81 00 00   LOG1    BYT $81,0,0,0,0
4756  3EA7- 00 00 
4757  3EA9- 03                 BYT 3
4758  3EAA- 7F 5E 56           BYT $7F,$5E,$56,$CB,$79
4758  3EAD- CB 79 
4759  3EAF- 80 13 9B           BYT $80,$13,$9B,$0B,$64
4759  3EB2- 0B 64 
4760  3EB4- 80 76 38           BYT $80,$76,$38,$93,$16
4760  3EB7- 93 16 
4761  3EB9- 82 38 AA           BYT $82,$38,$AA,$3B,$20
4761  3EBC- 3B 20 
4762  3EBE- 80 35 04   LOG2    BYT $80,$35,$04,$F3,$34
4762  3EC1- F3 34 
4763  3EC3- 81 35 04           BYT $81,$35,$04,$F3,$34
4763  3EC6- F3 34 
4764  3EC8- 80 80 00           BYT $80,$80,$00,$00,$00
4764  3ECB- 00 00 
4765  3ECD- 80 31 72           BYT $80,$31,$72,$17,$F8
4765  3ED0- 17 F8 
4766                   *
4767                   * SQR: BASIC FUNCTION
4768                   *********************
4769                   *
4770  3ED2- 20 28 35   SQR     JSR TRANS2
4771  3ED5- A9 86              LDA =<OUTCT2    0.5
4772  3ED7- A0 36              LDY =>OUTCT2
4773  3ED9- 20 B7 34           JSR GETFLP
4774                   *
4775                   * POWER: MATH OPERATION
4776                   ***********************
4777                   *
4778  3EDC- F0 3B      POWER   BEQ EXPF
4779  3EDE- A5 9F              LDA DYADIC
4780  3EE0- D0 03              BNE *+5

----------------------------------------------------------------------

GRAPHIC BASIC - FUNCTIONS          30/03/18   R65 ASSEMBLER  PAGE 05

4781  3EE2- 4C D3 33           JMP ADD3-5
4782  3EE5- A2 84              LDX =<TEMP6
4783  3EE7- A0 00              LDY =>TEMP6
4784  3EE9- 20 E0 34           JSR SAVFLP+4
4785  3EEC- A5 A4              LDA DYADIC+5
4786  3EEE- 10 0F              BPL *+17
4787  3EF0- 20 3A 3E           JSR INT
4788  3EF3- A9 84              LDA =<TEMP6
4789  3EF5- A0 00              LDY =>TEMP6
4790  3EF7- 20 64 35           JSR COMPAR
4791  3EFA- D0 03              BNE *+5
4792  3EFC- 98                 TYA
4793  3EFD- A4 41              LDY CHRSAV
4794  3EFF- 20 1A 35          JSR TRANS1+2
4795  3F02- 98                 TYA
4796  3F03- 48                 PHA
4797  3F04- 20 63 3E           JSR LOG
4798  3F07- A9 84              LDA =<TEMP6
4799  3F09- A0 00              LDY =>TEMP6
4800  3F0B- 20 91 38           JSR MULT-3
4801  3F0E- 20 19 3F           JSR EXPF
4802  3F11- 68                 PLA
4803  3F12- 4A                 LSR A
4804  3F13- B0 01              BCS *+3
4805  3F15- 60                 RTS
4806  3F16- 4C C7 36           JMP NEGATE
4807                   *
4808                   * EXP: BASIC FUNCTION
4809                   *********************
4810                   *
4811  3F19- A9 BE      EXPF    LDA =<EXP1
4812  3F1B- A0 3F              LDY =>EXP1
4813  3F1D- 20 91 38           JSR MULT-3
4814  3F20- A5 A6              LDA DYADIC+7
4815  3F22- 69 50              ADC =80
4816  3F24- 90 03              BCC *+5
4817  3F26- 20 10 35           JSR ROUND+8
4818  3F29- 85 8C              STA PNT1+1
4819  3F2B- 20 2B 35           JSR TRANS2+3
4820  3F2E- A5 97              LDA EXP
4821  3F30- C9 88              CMP =136
4822  3F32- 90 03              BCC *+5
4823  3F34- 20 82 38           JSR MULEX1-6
4824  3F37- 20 3A 3E           JSR INT
4825  3F3A- A5 41              LDA CHRSAV
4826  3F3C- 18                 CLC
4827  3F3D- 69 81              ADC =129
4828  3F3F- F0 F3              BEQ *-11
4829  3F41- 38                 SEC
4830  3F42- E9 01              SBC =1

----------------------------------------------------------------------

GRAPHIC BASIC - FUNCTIONS          30/03/18   R65 ASSEMBLER  PAGE 06

4831  3F44- 48                 PHA
4832  3F45- A2 05              LDX =5
4833  3F47- B5 9F              LDA DYADIC,X
4834  3F49- B4 97              LDY EXP,X
4835  3F4B- 95 97              STA EXP,X
4836  3F4D- 94 9F              STY DYADIC,X
4837  3F4F- CA                 DEX
4838  3F50- 10 F5              BPL *-9
4839  3F52- A5 8C              LDA PNT1+1
4840  3F54- 85 A6              STA DYADIC+7
4841  3F56- 20 25 33           JSR SUBTR
4842  3F59- 20 C7 36           JSR NEGATE
4843  3F5C- A9 C3              LDA =<(EXP1+5)
4844  3F5E- A0 3F              LDY =>(EXP1+5)
4845  3F60- 20 86 3F           JSR ITERA1
4846  3F63- A9 00              LDA =0
4847  3F65- 85 A5              STA DYADIC+6
4848  3F67- 68                 PLA
4849  3F68- 20 66 38           JSR MULEXP+2
4850  3F6B- 60                 RTS
4851                   *
4852                   * ITERAT: FUNCTION ITERATION
4853                   ****************************
4854                   *
4855  3F6C- 85 A7      ITERAT  STA DYADIC+8
4856  3F6E- 84 A8              STY DYADIC+9
4857  3F70- A2 8D              LDX =<(ENDB-1)
4858  3F72- A0 00              LDY =0
4859  3F74- 20 E0 34           JSR SAVFLP+4
4860  3F77- A9 8D              LDA =<(ENDB-1)
4861  3F79- 20 91 38           JSR MULT-3
4862  3F7C- 20 8A 3F           JSR ITERA1+4
4863  3F7F- A9 8D              LDA =<(ENDB-1)
4864  3F81- A0 00              LDY =0
4865  3F83- 4C 91 38           JMP MULT-3
4866                   *
4867  3F86- 85 A7      ITERA1  STA DYADIC+8
4868  3F88- 84 A8              STY DYADIC+9
4869  3F8A- A2 92              LDX =<(POINTC-1)
4870  3F8C- A0 00              LDY =0
4871  3F8E- 20 E0 34           JSR SAVFLP+4
4872  3F91- B1 A7              LDA (DYADIC+8),Y
4873  3F93- 85 9D              STA CURRSG
4874  3F95- A4 A7              LDY DYADIC+8
4875  3F97- C8                 INY
4876  3F98- 98                 TYA
4877  3F99- D0 02              BNE *+4
4878  3F9B- E6 A8              INC DYADIC+9
4879  3F9D- 85 A7              STA DYADIC+8
4880  3F9F- A4 A8              LDY DYADIC+9

----------------------------------------------------------------------

GRAPHIC BASIC - FUNCTIONS          30/03/18   R65 ASSEMBLER  PAGE 07

4881  3FA1- 20 91 38   ITERA2  JSR MULT-3
4882  3FA4- A5 A7              LDA DYADIC+8
4883  3FA6- A4 A8              LDY DYADIC+9
4884  3FA8- 18                 CLC
4885  3FA9- 69 05              ADC =5
4886  3FAB- 90 01              BCC *+3
4887  3FAD- C8                 INY
4888  3FAE- 85 A7              STA DYADIC+8
4889  3FB0- 84 A8              STY DYADIC+9
4890  3FB2- 20 40 33           JSR ADD-3
4891  3FB5- A9 92              LDA =(POINTC-1)
4892  3FB7- A0 00              LDY =0
4893  3FB9- C6 9D              DEC CURRSG
4894  3FBB- D0 E4              BNE ITERA2
4895  3FBD- 60                 RTS
4896                   *
4897  3FBE- 81 38 AA   EXP1    BYT $81,$38,$AA,$3B,$29
4897  3FC1- 3B 29 
4898  3FC3- 07                 BYT $07
4899  3FC4- 71 34 58           BYT $71,$34,$58,$3F,$56
4899  3FC7- 3F 56 
4900  3FC9- 74 16 7E           BYT $74,$16,$7E,$B3,$1B
4900  3FCC- B3 1B 
4901  3FCE- 77 2F EE           BYT $77,$2F,$EE,$E3,$85
4901  3FD1- E3 85 
4902  3FD3- 7A 1D 84           BYT $7A,$1D,$84,$1C,$2A
4902  3FD6- 1C 2A 
4903  3FD8- 7C 63 59           BYT $7C,$63,$59,$58,$0A
4903  3FDB- 58 0A 
4904  3FDD- 7E 75 FD           BYT $7E,$75,$FD,$E7,$C6
4904  3FE0- E7 C6 
4905  3FE2- 80 31 72           BYT $80,$31,$72,$18,$10
4905  3FE5- 18 10 
4906  3FE7- 81 00 00           BYT $81,$00,$00,$00,$00
4906  3FEA- 00 00 
4907                   *
4908                   * RND: BASIC FUNCTION
4909                   *********************
4910                   *
4911  3FEC- 20 37 35   RND     JSR SGN1
4912  3FEF- 30 17              BMI RND2
4913  3FF1- F0 41              BEQ RND1
4914                   *
4915  3FF3- A9 D1              LDA =<RNDVAL
4916  3FF5- A0 00              LDY =>RNDVAL
4917  3FF7- 20 91 38           JSR MULT-3
4918  3FFA- A9 3B              LDA =<RND3
4919  3FFC- A0 40              LDY =>RND3
4920  3FFE- 20 91 38          JSR MULT-3
4921  4001- A9 3F              LDA =<(RND3+4)

----------------------------------------------------------------------

GRAPHIC BASIC - FUNCTIONS          30/03/18   R65 ASSEMBLER  PAGE 08

4922  4003- A0 40              LDY =>(RND3+4)
4923  4005- 20 40 33           JSR ADD-3
4924  4008- A5 9B      RND2    LDA MANT+3
4925  400A- A6 98              LDX MANT
4926  400C- 6D 06 17           ADC $1706       ADD REAL RANDOM
4927  400F- 86 9B              STX MANT+3
4928  4011- 85 98              STA MANT
4929  4013- A6 99              LDX MANT+1
4930  4015- A5 9A              LDA MANT+2
4931  4017- 6D 06 17           ADC $1706       ADD REAL RANDOOM
4932  401A- 85 99              STA MANT+1
4933  401C- 86 9A              STX MANT+2
4934  401E- A9 00              LDA =0
4935  4020- 85 9C              STA SIGN
4936  4022- A5 97              LDA EXP
4937  4024- 85 A6              STA DYADIC+7
4938  4026- A9 80              LDA =128
4939  4028- 85 97              STA EXP
4940  402A- 20 B1 33           JSR NORMAL+5
4941  402D- A2 D1              LDX =<RNDVAL
4942  402F- A0 00              LDY =>RNDVAL
4943  4031- 4C E0 34           JMP SAVFLP+4
4944                   *
4945  4034- A9 D1      RND1    LDA =<RNDVAL
4946  4036- A0 00              LDY =>RNDVAL
4947  4038- 4C B7 34           JMP GETFLP
4948                   *
4949  403B- 98 35 44   RND3    BYT $98,$35,$44,$7A
4949  403E- 7A 
4950  403F- 68 28 B1           BYT $68,$28,$B1,$46
4950  4042- 46 
4951                   *
4952                   * COS: BASIC FUNCTION
4953                   *********************
4954                   *
4955  4043- A9 97      COS     LDA =<SIN1
4956  4045- A0 40              LDY =>SIN1
4957  4047- 20 40 33           JSR ADD-3
4958                   *
4959                   * SIN: BASIC FUNCTION
4960                   *********************
4961                   *
4962  404A- 20 28 35   SIN     JSR TRANS2
4963  404D- A9 9C              LDA =<(SIN1+5)
4964  404F- A0 40              LDY =>(SIN1+5)
4965  4051- A6 A4              LDX DYADIC+5
4966  4053- 20 FA 36           JSR DIVTEN+9
4967  4056- 20 28 35           JSR TRANS2
4968  4059- 20 3A 3E           JSR INT
4969  405C- A9 00              LDA =0

----------------------------------------------------------------------

GRAPHIC BASIC - FUNCTIONS          30/03/18   R65 ASSEMBLER  PAGE 09

4970  405E- 85 A5              STA DYADIC+6
4971  4060- 20 25 33           JSR SUBTR
4972  4063- A9 A1              LDA =<(SIN1+10)
4973  4065- A0 40              LDY =>(SIN1+10)
4974  4067- 20 22 33           JSR SUBTR-3
4975  406A- A5 9C              LDA SIGN
4976  406C- 48                 PHA
4977  406D- 10 11              BPL SIN0
4978  406F- A9 86              LDA =<OUTCT2
4979  4071- A0 36              LDY =>OUTCT2
4980  4073- 20 40 33           JSR ADD-3
4981  4076- A5 9C              LDA SIGN
4982  4078- 30 09              BMI SIN0+3
4983  407A- A5 4A              LDA READFL+1
4984  407C- 49 FF              EOR =$FF
4985  407E- 85 4A              STA READFL+1
4986  4080- 20 C7 36   SIN0    JSR NEGATE
4987  4083- A9 A1              LDA =<(SIN1+10)
4988  4085- A0 40              LDY =>(SIN1+10)
4989  4087- 20 40 33           JSR ADD-3
4990  408A- 68                 PLA
4991  408B- 10 03              BPL *+5
4992  408D- 20 C7 36           JSR NEGATE
4993  4090- A9 A6              LDA =<(SIN1+15)
4994  4092- A0 40              LDY =>(SIN1+15)
4995  4094- 4C 6C 3F           JMP ITERAT
4996                   *
4997  4097- 81 49 0F   SIN1    BYT $81,$49,$0F,$DA,$A2
4997  409A- DA A2 
4998  409C- 83 49 0F           BYT $83,$49,$0F,$DA,$A2
4998  409F- DA A2 
4999  40A1- 7F 00 00           BYT $7F,$00,$00,$00,$00
4999  40A4- 00 00 
5000  40A6- 05                 BYT 05
5001  40A7- 84 E6 1A           BYT $84,$E6,$1A,$2D,$1B
5001  40AA- 2D 1B 
5002  40AC- 86 28 07           BYT $86,$28,$07,$FB,$F8
5002  40AF- FB F8 
5003  40B1- 87 99 68           BYT $87,$99,$68,$89,$01
5003  40B4- 89 01 
5004  40B6- 87 23 35           BYT $87,$23,$35,$DF,$E1
5004  40B9- DF E1 
5005  40BB- 86 A5 5D           BYT $86,$A5,$5D,$E7,$28
5005  40BE- E7 28 
5006  40C0- 83 49 0F           BYT $83,$49,$0F,$DA,$A2
5006  40C3- DA A2 
5007                   *
5008                   * TAN: BASIC FUNCTION
5009                   *********************
5010                   *

----------------------------------------------------------------------

GRAPHIC BASIC - FUNCTIONS          30/03/18   R65 ASSEMBLER  PAGE 10

5011  40C5- A2 8D      TAN     LDX =<(ENDB-1)
5012  40C7- A0 00              LDY =0
5013  40C9- 20 E0 34           JSR SAVFLP+4
5014  40CC- A9 00              LDA =0
5015  40CE- 85 4A              STA READFL+1
5016  40D0- 20 4A 40           JSR SIN
5017  40D3- A2 84              LDX =<TEMP6
5018  40D5- A0 00              LDY =0
5019  40D7- 20 E0 34           JSR SAVFLP+4
5020  40DA- A9 8D              LDA =<(ENDB-1)
5021  40DC- A0 00              LDY =0
5022  40DE- 20 B7 34           JSR GETFLP
5023  40E1- A9 00              LDA =0
5024  40E3- 85 9C              STA SIGN
5025  40E5- A5 4A              LDA READFL+1
5026                    * BASIC6:A ORIGINAL 7/1/1982, RECOVERED 3/2018
5027  40E7- 20 F1 40           JSR TAN1
5028  40EA- A9 84              LDA =<TEMP6
5029  40EC- A0 00              LDY =0
5030  40EE- 4C D6 37           JMP DIVIDE-3
5031  40F1- 48         TAN1    PHA
5032  40F2- 4C 80 40           JMP SIN0
5033                   *
5034                   * ATN: BASIC FUNCTION
5035                   *********************
5036                   *
5037  40F5- A5 9C      ATN     LDA SIGN
5038  40F7- 48                 PHA
5039  40F8- 10 03              BPL *+5
5040  40FA- 20 C7 36           JSR NEGATE
5041  40FD- A5 97              LDA EXP
5042  40FF- 48                PHA
5043  4100- C9 81              CMP =$81
5044  4102- 90 07              BCC *+9
5045  4104- A9 A4              LDA =<LOG1
5046  4106- A0 3E              LDY =>LOG1
5047  4108- 20 D6 37           JSR DIVIDE-3
5048  410B- A9 25              LDA =<ATN1
5049  410D- A0 41              LDY =>ATN1
5050  410F- 20 6C 3F           JSR ITERAT
5051  4112- 68                 PLA
5052  4113- C9 81              CMP =129
5053  4115- 90 07              BCC *+9
5054  4117- A9 97              LDA =<SIN1
5055  4119- A0 40              LDY =>SIN1
5056  411B- 20 22 33           JSR SUBTR-3
5057  411E- 68                 PLA
5058  411F- 10 03              BPL *+5
5059  4121- 4C C7 36           JMP NEGATE
5060  4124- 60                 RTS

----------------------------------------------------------------------

GRAPHIC BASIC - FUNCTIONS          30/03/18   R65 ASSEMBLER  PAGE 11

5061                   *
5062  4125- 0B         ATN1    BYT $0B
5063  4126- 76 B3 83           BYT $76,$B3,$83,$BD,$D3
5063  4129- BD D3 
5064  412B- 79 E1 F4           BYT $79,$E1,$F4,$A6,$F5
5064  412E- A6 F5 
5065  4130- 7B 83 FC           BYT $7B,$83,$FC,$B0,$10
5065  4133- B0 10 
5066  4135- 7C 0C 1F           BYT $7C,$0C,$1F,$67,$CA
5066  4138- 67 CA 
5067  413A- 7C DE 53           BYT $7C,$DE,$53,$CB,$C1
5067  413D- CB C1 
5068  413F- 7D 14 64           BYT $7D,$14,$64,$70,$4C
5068  4142- 70 4C 
5069  4144- 7D B7 EA           BYT $7D,$B7,$EA,$51,$7A
5069  4147- 51 7A 
5070  4149- 7D 63 30           BYT $7D,$63,$30,$88,$7E
5070  414C- 88 7E 
5071  414E- 7E 92 44           BYT $7E,$92,$44,$99,$3A
5071  4151- 99 3A 
5072  4153- 7E 4C CC           BYT $7E,$4C,$CC,$91,$C7
5072  4156- 91 C7 
5073  4158- 7F AA AA           BYT $7F,$AA,$AA,$AA,$13
5073  415B- AA 13 
5074  415D- 81 00 00           BYT $81,$00,$00,$00,$00
5074  4160- 00 00 
5075                   *
5076                   * USR: BASIC FUNCTION
5077                   *********************
5078                   *
5079  4162- 6C 05 00   USR     JMP (INTEG)
5080                   *
5081                           TIT GRAPHIC BASIC - STATEMENTS
5082                   *
5083                   * STORE: STATEMENT ROUTINE
5084                   **************************
5085                   *
5086  4165- 20 9C 41   STORE   JSR GETBFN      GET FILE NAME, DRIVE
5087  4168- A5 61              LDA STPROG
5088  416A- A6 62              LDX STPROG+1
5089  416C- 8D 1A 03           STA FILSA
5090  416F- 8E 1B 03           STX FILSA+1
5091  4172- A5 63              LDA STVAR
5092  4174- A6 64              LDX STVAR+1
5093  4176- 8D 1C 03           STA FILEA
5094  4179- 8E 1D 03           STX FILEA+1
5095  417C- 20 18 47           JSR GETBCD
5096  417F- 8D 13 03           STA FILLOC
5097  4182- 8C 14 03           STY FILLOC+1
5098  4185- A9 42              LDA ='B'

----------------------------------------------------------------------

GRAPHIC BASIC - STATEMENTS         30/03/18   R65 ASSEMBLER  PAGE 12

5099  4187- 8D 12 03           STA FILSTP
5100  418A- A9 00              LDA =0
5101  418C- 85 DA              STA FILFLG
5102  418E- 20 1B 27           JSR FETCH1
5103  4191- D0 4E              BNE SYNER2      NOT END OF LINE
5104  4193- 20 1B E8           JSR WRFILE
5105  4196- F0 03              BEQ *+5
5106  4198- 4C 07 45   FILERR1 JMP FILERR
5107  419B- 60                 RTS
5108                   *
5109  419C- 20 1B 27   GETBFN  JSR FETCH1
5110  419F- F0 40              BEQ SYNER2      END OF LINE
5111  41A1- 20 FF 2D   GETBF1  JSR EXPRES
5112  41A4- 38                 SEC
5113  41A5- 20 F1 2D           JSR TESTTP+1    MUST BE STRING
5114  41A8- 20 17 29           JSR PREPST      A=SIZE, TEMP1=START
5115                   *
5116  41AB- 85 7F              STA TEMP3
5117  41AD- A8                 TAY
5118  41AE- F0 40              BEQ GETBF5
5119  41B0- A0 00              LDY =0
5120  41B2- 8C 11 03           STY FILCYC
5121  41B5- 8C 30 03           STY FILCY1
5122  41B8- B1 58      GETBF2  LDA (TEMP1),Y
5123  41BA- C4 7F              CPY TEMP3
5124  41BC- 90 02              BCC *+4         IF STRING TOO SHORT
5125  41BE- A9 20              LDA =$20
5126  41C0- 99 01 03           STA FILNAM,Y
5127  41C3- 99 20 03           STA FILNM1,Y
5128  41C6- C8                 INY
5129  41C7- C0 10              CPY =$10
5130  41C9- 90 ED              BCC GETBF2
5131  41CB- 20 1B 27           JSR FETCH1
5132  41CE- C9 2E              CMP ='.'
5133  41D0- D0 09              BNE GETBF3
5134  41D2- 20 02 37           JSR NUMEXP      GET EXTENSION
5135  41D5- 8E 11 03           STX FILCYC
5136  41D8- 8E 30 03           STX FILCY1
5137  41DB- 20 63 42   GETBF3  JSR DEFARG2
5138  41DE- 85 DC              STA FILDRV
5139  41E0- 60                 RTS
5140                   *
5141  41E1- 4C CC 26   SYNER2  JMP SYNERR      SYNTAX ERROR
5142                   *
5143  41E4- 20 1B 27   GETBF4  JSR FETCH1      DEFAULT NO NAME
5144  41E7- F0 07              BEQ GETBF5
5145  41E9- C9 2C              CMP =','
5146  41EB- F0 03              BEQ GETBF5
5147  41ED- 4C A1 41           JMP GETBF1
5148                   *

----------------------------------------------------------------------

GRAPHIC BASIC - STATEMENTS         30/03/18   R65 ASSEMBLER  PAGE 13

5149  41F0- A9 00      GETBF5  LDA =0
5150  41F2- 8D 01 03           STA FILNAM
5151  41F5- 8D 20 03           STA FILNM1
5152  41F8- 4C DB 41           JMP GETBF3
5153                   *
5154                   * LOAD: STATEMENT ROUTINE
5155                   *************************
5156                   *
5157  41FB- 20 01 42   LOAD    JSR LOAD9
5158  41FE- 4C 7B 23          JMP WARMST
5159                   *
5160  4201- 20 E4 41   LOAD9   JSR GETBF4
5161                   *
5162  4204- A5 61      LOAD1   LDA STPROG
5163  4206- A6 62              LDX STPROG+1
5164  4208- 8D 31 03           STA FILSA1
5165  420B- 8E 32 03           STX FILSA1+1
5166  420E- A9 00              LDA =0
5167  4210- 85 DA              STA FILFLG
5168  4212- 20 15 E8           JSR RDFILE
5169  4215- D0 81              BNE FILERR1
5170  4217- AD 12 03           LDA FILSTP
5171  421A- C9 42              CMP ='B'
5172  421C- F0 05              BEQ *+7
5173  421E- A2 1D              LDX =29
5174  4220- 4C 16 45           JMP FERROR
5175  4223- AD 1C 03           LDA FILEA
5176  4226- AE 1D 03           LDX FILEA+1
5177  4229- 85 63              STA STVAR
5178  422B- 86 64              STX STVAR+1
5179  422D- 20 9D 24           JSR CRLF
5180  4230- 20 4B 24           JSR ADLNP0
5181  4233- A5 58              LDA TEMP1
5182  4235- A6 59              LDX TEMP1+1
5183  4237- 18                 CLC
5184  4238- 69 03              ADC =3
5185  423A- 90 01              BCC *+3
5186  423C- E8                 INX
5187  423D- 85 63              STA STVAR
5188  423F- 86 64              STX STVAR+1
5189  4241- 4C A8 25           JMP CLR1-3
5190                   *
5191                   * DEFARG: GET ARGUMENT OR DEFAULT=0
5192                   ***********************************
5193                   * OUTPUT IS IN A,Y AND INTEG
5194                   * DEFARG GETS 16 BIT INTEGER
5195                   * DEFARG2 GETS 8 BIT INTEGER
5196                   *
5197  4244- 20 1B 27   DEFARG  JSR FETCH1
5198  4247- C9 2C              CMP =','

----------------------------------------------------------------------

GRAPHIC BASIC - STATEMENTS         30/03/18   R65 ASSEMBLER  PAGE 14

5199  4249- D0 10              BNE DEFARG1
5200  424B- 20 15 27           JSR FETCH
5201  424E- C9 2C              CMP =','
5202  4250- F0 09              BEQ DEFARG1
5203  4252- 20 FF 2D           JSR EXPRES
5204  4255- 20 F0 2D           JSR TESTTP
5205  4258- 4C 07 3E           JMP PEEK1
5206                   *
5207  425B- A9 00      DEFARG1 LDA =0
5208  425D- A8                 TAY
5209  425E- 85 05              STA INTEG
5210  4260- 84 06              STY INTEG+1
5211  4262- 60                 RTS
5212                   *
5213  4263- 20 44 42   DEFARG2 JSR DEFARG
5214  4266- C0 00              CPY =0
5215  4268- F0 03              BEQ *+5
5216  426A- 4C 17 37           JMP QERR
5217  426D- 60                 RTS
5218                   *
5219                   *
5220                   * SETDEV: SET OUTPUT DEVICE
5221                   ***************************
5222                   *
5223  426E- 20 02 37   SETDEV  JSR NUMEXP
5224  4271- E0 03              CPX =3
5225  4273- D0 06              BNE SETDV0
5226  4275- 20 6E 43           JSR PLMD
5227  4278- A2 03              LDX =3
5228  427A- 18                 CLC
5229  427B- B0 1F      SETDV0  BCS SETDV2
5230  427D- A9 3B              LDA =';'
5231  427F- 20 7B 2B           JSR FOLLOW
5232  4282- A5 02              LDA POS
5233  4284- 85 BB              STA POSTB
5234  4286- BD CE 42   SETDV1  LDA DEVTB,X
5235  4289- 85 B9              STA PVECT
5236  428B- BD D2 42           LDA DEVTB+4,X
5237  428E- 85 BA              STA PVECT+1
5238  4290- 86 00              STX OUTDEV
5239  4292- BD D6 42           LDA DEVTB+8,X
5240  4295- 85 01              STA NUMPAD
5241  4297- B5 BB              LDA POSTB,X
5242  4299- 85 02              STA POS
5243  429B- 60                 RTS
5244                   *
5245                   * SET FILE OUTPUT
5246                   *****************
5247                   *
5248  429C- 86 00      SETDV2  STX OUTDEV

----------------------------------------------------------------------

GRAPHIC BASIC - STATEMENTS         30/03/18   R65 ASSEMBLER  PAGE 15

5249  429E- A9 3B              LDA =';'
5250  42A0- 20 7B 2B           JSR FOLLOW
5251  42A3- A5 02              LDA POS
5252  42A5- 85 BB              STA POSTB
5253  42A7- A9 87              LDA =<OUTFIL
5254  42A9- 85 B9              STA PVECT
5255  42AB- A9 45              LDA =>OUTFIL
5256  42AD- 85 BA              STA PVECT+1
5257  42AF- A9 00              LDA =0
5258  42B1- 85 01              STA NUMPAD
5259  42B3- 85 02              STA POS
5260  42B5- 4C 7E 45           JMP SETDV3
5261                   *
5262                   * RSTDEV: RESET OUTPUT DEVICE
5263                   *****************************
5264                   *
5265  42B8- 8A         RSTDEV  TXA
5266  42B9- 48                 PHA
5267  42BA- A6 00              LDX OUTDEV
5268  42BC- E0 04              CPX =4          SKIP, IF FILE
5269  42BE- B0 04              BCS *+6
5270  42C0- A5 02              LDA POS
5271  42C2- 95 BB              STA POSTB,X
5272  42C4- A2 00              LDX =0
5273  42C6- 86 AB              STX PLMODE
5274  42C8- 20 86 42           JSR SETDV1
5275  42CB- 68                 PLA
5276  42CC- AA                 TAX
5277  42CD- 60                 RTS
5278                   *
5279                   *
5280  42CE- 09 36 A0   DEVTB   BYT <PRTCHR,<PRTRSA,<PRTTTY,<CHAR
5280  42D1- 82 
5281  42D2- E0 E8 1E           BYT >PRTCHR,>PRTRSA,>PRTTTY,>CHAR
5281  42D5- 43 
5282  42D6- 00 00 02           BYT 0,0,2,0
5282  42D9- 00 
5283                   *
5284                   * PLOT
5285                   ******
5286                   *
5287  42DA- C9 A2      PLOT    CMP =$A2        PLOT NEW
5288  42DC- D0 0A              BNE PLOT0
5289  42DE- A9 00              LDA =0
5290  42E0- 85 AB              STA PLMODE
5291  42E2- 20 DB 4C           JSR INITP
5292  42E5- 4C 19 43           JMP PLOT3+4
5293                   *
5294  42E8- C9 9C      PLOT0   CMP =$9C        PLOT CLEAR
5295  42EA- D0 06              BNE PLOT1

----------------------------------------------------------------------

GRAPHIC BASIC - STATEMENTS         30/03/18   R65 ASSEMBLER  PAGE 16

5296  42EC- 20 E6 4C           JSR CLEARP
5297  42EF- 4C 15 27           JMP FETCH
5298                   *
5299  42F2- C9 84      PLOT1   CMP =$84        PLOT END
5300  42F4- D0 18              BNE PLOT2
5301  42F6- AD 80 17           LDA VFLAG
5302  42F9- 29 DF              AND =$DF
5303  42FB- 8D 80 17           STA VFLAG
5304  42FE- A9 29             LDA =$29
5305  4300- 8D 89 17           STA NUMLIN
5306  4303- 20 15 E0           JSR ICRTAL
5307  4306- A9 11              LDA =$11        CLEAR DISPLAY
5308  4308- 20 09 E0           JSR PRTCHR
5309  430B- 4C 15 27           JMP FETCH
5310                   *
5311  430E- C9 90      PLOT2   CMP =$90        PLOT STOP
5312  4310- D0 03              BNE PLOT3
5313  4312- 4C 03 43           JMP PLOT2-11
5314                   *
5315  4315- C9 9A      PLOT3   CMP =$9A        PLOT CONT
5316  4317- D0 06              BNE PLOT4
5317  4319- 20 18 E0           JSR ICRTGR
5318  431C- 4C 15 27           JMP FETCH
5319                   *
5320  431F- 20 3E 43   PLOT4   JSR PLOTAR      PLOT X,Y
5321  4322- 20 1E 4D           JSR PLOTP
5322  4325- A9 00      PLOTE   LDA =0
5323  4327- 85 AB              STA PLMODE
5324  4329- 4C 1B 27           JMP FETCH1
5325                   *
5326                   * MOVE:
5327                   *******
5328                   *
5329  432C- 20 3E 43   MOVE    JSR PLOTAR
5330  432F- 20 09 4D           JSR MOVEP
5331  4332- 4C 25 43           JMP PLOTE
5332                   *
5333                   * DRAW:
5334                   *******
5335                   *
5336  4335- 20 3E 43   DRAW    JSR PLOTAR
5337  4338- 20 2F 4D           JSR DRAWP
5338  433B- 4C 25 43           JMP PLOTE
5339                   *
5340                   * PLOTAR: PLOT ARGUMENTS
5341                   ************************
5342                   *
5343  433E- 20 53 43   PLOTAR  JSR PLOTA1
5344  4341- 48                 PHA
5345  4342- A9 2C              LDA =','

----------------------------------------------------------------------

GRAPHIC BASIC - STATEMENTS         30/03/18   R65 ASSEMBLER  PAGE 17

5346  4344- 20 7B 2B           JSR FOLLOW
5347  4347- 20 53 43           JSR PLOTA1
5348  434A- 48                 PHA
5349  434B- 20 6E 43           JSR PLMD
5350  434E- 68                 PLA
5351  434F- A8                 TAY
5352  4350- 68                 PLA
5353  4351- AA                 TAX
5354  4352- 60                 RTS
5355                   *
5356  4353- 20 FF 2D   PLOTA1  JSR EXPRES
5357  4356- 20 F0 2D           JSR TESTTP
5358  4359- A5 9C              LDA SIGN
5359  435B- 10 03              BPL *+5
5360  435D- A9 00              LDA =0
5361  435F- 60                 RTS
5362                   *
5363  4360- A5 97              LDA EXP
5364  4362- C9 89              CMP =$89
5365  4364- 90 03              BCC *+5
5366  4366- A9 FF              LDA =$FF
5367  4368- 60                 RTS
5368                   *
5369  4369- 20 0B 37           JSR NUMEXP+9
5370  436C- 8A                 TXA
5371  436D- 60                 RTS
5372                   *
5373                   * PLMD: GET PLOT MODE
5374                   *********************
5375                   *
5376  436E- 20 1B 27   PLMD    JSR FETCH1
5377  4371- C9 2C              CMP =','
5378  4373- D0 0C              BNE PLMD1
5379  4375- 20 02 37           JSR NUMEXP
5380  4378- 8A                 TXA
5381  4379- 0A                 ASL A
5382  437A- 0A                 ASL A
5383  437B- 0A                 ASL A
5384  437C- 0A                 ASL A
5385  437D- 0A                 ASL A
5386  437E- 0A                 ASL A
5387  437F- 85 AB              STA PLMODE
5388  4381- 60         PLMD1   RTS
5389                   *
5390                   * CHAR: PRINT ON GRAPHICS DISPLAY
5391                   *********************************
5392                   *
5393  4382- 29 7F      CHAR    AND =$7F
5394  4384- C9 0D              CMP =$D         CARRIAGE RETURN
5395  4386- D0 05              BNE CHARA

----------------------------------------------------------------------

GRAPHIC BASIC - STATEMENTS         30/03/18   R65 ASSEMBLER  PAGE 18

5396  4388- A2 00              LDX =0
5397  438A- 86 AE              STX XCURS
5398  438C- 60                 RTS
5399                   *
5400  438D- C9 0A      CHARA   CMP =$A         LINE FEED
5401  438F- D0 08              BNE CHARB
5402  4391- A5 AF              LDA YCURS
5403  4393- 18                 CLC
5404  4394- 69 09              ADC =9
5405  4396- 85 AF              STA YCURS
5406  4398- 60                 RTS
5407                   *
5408  4399- 4C FC 4D   CHARB   JMP CHAR0
5409                   *
5410                   *
5411                   * WAIT: STATEMENT ROUTINE
5412                   *************************
5413                   *
5414  439C- 20 FF 2D   WAIT    JSR EXPRES
5415  439F- 20 F0 2D           JSR TESTTP
5416  43A2- 20 20 37           JSR FLPINT-4
5417  43A5- A6 9B              LDX MANT+3
5418  43A7- A4 9A              LDY MANT+2
5419  43A9- E8                 INX
5420  43AA- C8                 INY
5421  43AB- 4C B0 43           JMP WAIT1+2
5422                   *
5423  43AE- A2 FF      WAIT1   LDX =$FF
5424  43B0- 20 2E 20           JSR BREAKT
5425  43B3- A9 06              LDA =6
5426  43B5- 8D 30 14           STA EMUCOM      WAIT 10 MSEC
5427  43B8- CA                 DEX
5428  43B9- D0 F5              BNE WAIT1+2
5429  43BB- 88                 DEY
5430  43BC- D0 F0              BNE WAIT1
5431  43BE- 4C 1B 27           JMP FETCH1
5432                   *
5433                   *
5434                   *
5435                   * AUTO: SET AUTO LINE MODE
5436                   **************************
5437                   *
5438  43C1- A2 00      AUTO    LDX =0          DEFAULT LINE NO
5439  43C3- 86 06              STX INTEG+1
5440  43C5- A2 0A              LDX =10
5441  43C7- 86 05              STX INTEG
5442  43C9- B0 03              BCS *+5         SKIP, IF NO NUMBER
5443  43CB- 20 57 28           JSR FETCHI
5444                   *
5445  43CE- A2 0A              LDX =10         DEFAULT INCREMENT

----------------------------------------------------------------------

GRAPHIC BASIC - STATEMENTS         30/03/18   R65 ASSEMBLER  PAGE 19

5446  43D0- C9 2C              CMP =','
5447  43D2- D0 03              BNE *+5
5448  43D4- 20 02 37           JSR NUMEXP      GET INCREMENT
5449                   *
5450  43D7- 86 C2              STX AUTOIN
5451  43D9- 68                 PLA
5452  43DA- 68                 PLA
5453  43DB- A5 06              LDA INTEG+1
5454  43DD- A6 05              LDX INTEG
5455  43DF- 20 12 33   AUTOIN2 JSR OUTINT
5456  43E2- A9 20              LDA =' '
5457  43E4- 20 C4 2F           JSR OUTCHR
5458  43E7- A2 00              LDX =0
5459  43E9- 20 7A 24           JSR INLIN+2
5460  43EC- 4C 85 23           JMP WARM1+3
5461                   *
5462                           TIT GRAPHIC BASIC - FILE HANDLING
5463                           PAG

----------------------------------------------------------------------

GRAPHIC BASIC - FILE HANDLING      30/03/18   R65 ASSEMBLER  PAGE 20

5464                   *
5465                   * RESGP: RESET OPEN FILES, AUTOIN AND TAPES
5466                   *******************************************
5467                   * CALLED IN COLDSTART, NEW AND CLR
5468                   *
5469  43EF- AD E5 14   RESGP   LDA TAPAOF      STOP TAPE A
5470  43F2- AD E7 14           LDA TAPBOF      STOP TAPE 2
5471  43F5- 20 DB 45           JSR RSTIDV
5472  43F8- A9 00              LDA =0
5473  43FA- 85 C8              STA FORMCS      CLEAR FORMATTING
5474  43FC- 85 CB              STA FORMFL
5475  43FE- 85 C3             STA AFILNO      NO ACTIVE FILE
5476  4400- A0 07              LDY =7
5477  4402- 99 39 03           STA FIDRTB,Y    NO OPEN FILE
5478  4405- 99 80 03           STA FISYTB,Y
5479  4408- 88                 DEY
5480  4409- 10 F7              BPL *-7
5481  440B- 60                 RTS
5482                   *
5483                   * OPEN: OPEN A FILE
5484                   *******************
5485                   *
5486  440C- 20 05 37   OPENBS  JSR NUMEXP+3    GET FILE NUMBER
5487  440F- 8A                 TXA
5488  4410- C9 04              CMP =4          MUST BE >=4
5489  4412- B0 05              BCS *+7
5490  4414- A2 07      FNERR   LDX =7          FILE NUMBER ERROR
5491  4416- 4C 16 45   FERR1   JMP FERROR
5492                   *
5493  4419- 85 C3              STA AFILNO
5494  441B- 20 64 44           JSR SRFILN      SHOULD NOT BE IN TABLE
5495  441E- D0 04              BNE *+6
5496  4420- A2 00              LDX =0          DOUBLE FILE NO ERROR
5497  4422- F0 F2              BEQ FERR1
5498                   *
5499  4424- A9 2C              LDA =','
5500  4426- 20 7B 2B           JSR FOLLOW
5501  4429- 20 E4 41           JSR GETBF4      GET FILE NAME
5502                   *
5503  442C- A6 DC              LDX FILDRV      GETD DRIVE CODE
5504  442E- E0 04              CPX =4          DEFAULT =0
5505  4430- 90 04              BCC *+6         MUST BE <4
5506  4432- A2 15              LDX =21         DRIVE NO ERROR
5507  4434- D0 E0              BNE FERR1
5508                   *
5509  4436- 20 63 42   OPEN1   JSR DEFARG2     GET DIRECTION CODE
5510  4439- C9 02              CMP =2          DEFAULT 0
5511  443B- 90 04              BCC *+6
5512  443D- A9 33              LDA =51         FILE DIRECTION ERROR
5513  443F- D0 D5              BNE FERR1

----------------------------------------------------------------------

GRAPHIC BASIC - FILE HANDLING      30/03/18   R65 ASSEMBLER  PAGE 21

5514                   *
5515  4441- 0A                 ASL A
5516  4442- 0A                 ASL A
5517  4443- 0A                 ASL A
5518  4444- 0A                 ASL A
5519  4445- 0A                 ASL A
5520  4446- 85 DA              STA FILFLG
5521                   *
5522  4448- 20 18 47           JSR GETBCD      GET LOCATION, IF THERE
5523  444B- 8D 13 03           STA FILLOC
5524  444E- 8C 14 03           STY FILLOC+1
5525  4451- A9 44              LDA ='D'
5526  4453- 8D 12 03           STA FILSTP
5527  4456- 20 0F F0           JSR OPEN        OPEN FILE
5528  4459- F0 03              BEQ *+5
5529  445B- 4C 07 45           JMP FILERR
5530  445E- A5 C3              LDA AFILNO
5531  4460- 99 80 03           STA FISYTB,Y    STORE SYMBOLIC NAME
5532  4463- 60                 RTS
5533                   *
5534                   * SRFILN: SEARCH FILE NUMBER
5535                   ****************************
5536                   * Z=1 IF FOUND, Y GIVES ENTRY NUMBER, FILE
5537                   * NO TO SEARCH MUST BE IN A, A AND X SAVED
5538                   *
5539  4464- A0 07      SRFILN  LDY =7
5540  4466- D9 80 03           CMP FISYTB,Y
5541  4469- F0 03              BEQ *+5
5542  446B- 88                 DEY
5543  446C- 10 F8              BPL *-6
5544  446E- 60                 RTS
5545                   *
5546                   *
5547                   * ERROR STRINGS FOR FILE ERRORS
5548                   *******************************
5549                   *
5550  446F- 44 4F 55   FERSTR  BYT 'DOUBLE '
5550  4472- 42 4C 45 
5550  4475- 20 
5551  4476- 46 49 4C           BYT 'FILE NO'+128
5551  4479- 45 20 4E 
5551  447C- CF 
5552  447D- 44 4F 55           BYT 'DOUBLE '
5552  4480- 42 4C 45 
5552  4483- 20 
5553  4484- 44 52 49           BYT 'DRIVE NO'+128
5553  4487- 56 45 20 
5553  448A- 4E CF 
5554  448C- 46 49 4C           BYT 'FILETYPE'+128
5554  448F- 45 54 59 

----------------------------------------------------------------------

GRAPHIC BASIC - FILE HANDLING      30/03/18   R65 ASSEMBLER  PAGE 22

5554  4492- 50 C5 
5555  4494- 54 4F 4F           BYT 'TOO MANY FILES'+128
5555  4497- 20 4D 41 
5555  449A- 4E 59 20 
5555  449D- 46 49 4C 
5555  44A0- 45 D3 
5556  44A2- 46 49 4C           BYT 'FILE DIRECTION'+128
5556  44A5- 45 20 44 
5556  44A8- 49 52 45 
5556  44AB- 43 54 49 
5556  44AE- 4F CE 
5557  44B0- 46 49 4C           BYT 'FILE NOT FOUND'+128
5557  44B3- 45 20 4E 
5557  44B6- 4F 54 20 
5557  44B9- 46 4F 55 
5557  44BC- 4E C4 
5558  44BE- 46 49 4C           BYT 'FILE READ'+128
5558  44C1- 45 20 52 
5558  44C4- 45 41 C4 
5559  44C7- 44 49 53           BYT 'DISK NOT READY'+128
5559  44CA- 4B 20 4E 
5559  44CD- 4F 54 20 
5559  44D0- 52 45 41 
5559  44D3- 44 D9 
5560  44D5- 44 49 52           BYT 'DIRECTORY FULL'+128
5560  44D8- 45 43 54 
5560  44DB- 4F 52 59 
5560  44DE- 20 46 55 
5560  44E1- 4C CC 
5561  44E3- 44 49 53           BYT 'DISK FULL OR TAPE BUSY'+128
5561  44E6- 4B 20 46 
5561  44E9- 55 4C 4C 
5561  44EC- 20 4F 52 
5561  44EF- 20 54 41 
5561  44F2- 50 45 20 
5561  44F5- 42 55 53 
5561  44F8- D9 
5562                   *
5563                   * CONVERSION TABLE FOR SYSTEM FILE ERRORS
5564                   *
5565  44F9- 4F 4F 4F  FERTB   BYT 79,79,79,79,29,65,88,102
5565  44FC- 4F 1D 41 
5565  44FF- 58 66 
5566  4501- 25 33 07           BYT 37,51,07,116,116
5566  4504- 74 74 
5567                   *
5568                   * SYSTEM FILE ERROR
5569                   *******************
5570                   *
5571  4506- 98                 TYA

----------------------------------------------------------------------

GRAPHIC BASIC - FILE HANDLING      30/03/18   R65 ASSEMBLER  PAGE 23

5572  4507- C9 09      FILERR  CMP =9
5573  4509- 90 02              BCC *+4
5574  450B- E9 1A              SBC =$1A
5575  450D- C9 0E              CMP =14
5576  450F- B0 2E              BCS FILERR2
5577  4511- A8                 TAY
5578  4512- B9 F8 44           LDA FERTB-1,Y
5579  4515- AA                 TAX
5580                   *
5581                   * FILE ERROR HANDLING
5582                   *********************
5583                   *
5584  4516- AD 80 17   FERROR  LDA VFLAG
5585  4519- 29 67              AND =$67
5586  451B- 8D 80 17           STA VFLAG
5587  451E- A5 00              LDA OUTDEV
5588  4520- F0 07              BEQ *+9
5589  4522- 20 B8 42           JSR RSTDEV
5590  4525- A9 00              LDA =0
5591  4527- 85 00              STA OUTDEV
5592                   *
5593  4529- 20 9D 24           JSR CRLF
5594  452C- 20 95 45           JSR RSTO1
5595                   *
5596  452F- BD 6F 44           LDA FERSTR,X
5597  4532- 48                 PHA
5598  4533- 29 7F              AND =$7F
5599  4535- 20 C4 2F           JSR OUTCHR
5600  4538- E8                 INX
5601  4539- 68                 PLA
5602  453A- 10 F3              BPL *-11
5603  453C- 4C 69 23           JMP STOP2-7
5604                   *
5605  453F- A2 58      FILERR2 LDX =88
5606  4541- D0 D3              BNE FERROR
5607                   *
5608                   * CLOSE: CLOSE OPEN FILE
5609                   ************************
5610                   * IF NO ARGUMENTS GIVEN: CLOSE ALL FILES
5611                   *
5612  4543- D0 0E      CLOSEBS BNE CLOSE1
5613  4545- A0 07              LDY =7
5614  4547- B9 80 03           LDA FISYTB,Y
5615  454A- F0 03              BEQ *+5
5616  454C- 20 6B 45           JSR CLOSE2
5617  454F- 88                 DEY
5618  4550- 10 F5              BPL CLOSEBS+4
5619  4552- 60                 RTS
5620                   *
5621  4553- 20 1B 27   CLOSE1  JSR FETCH1

----------------------------------------------------------------------

GRAPHIC BASIC - FILE HANDLING      30/03/18   R65 ASSEMBLER  PAGE 24

5622  4556- 20 05 37           JSR NUMEXP+3
5623  4559- 8A                 TXA
5624  455A- C9 04              CMP =4
5625  455C- B0 03              BCS *+5
5626  455E- 4C 14 44           JMP FNERR       FILE NUMBER ERROR
5627                   *
5628  4561- 20 64 44           JSR SRFILN
5629  4564- F0 05              BEQ CLOSE2
5630  4566- A2 41      NFERR   LDX =65
5631  4568- 4C 16 45           JMP FERROR
5632                   *
5633  456B- 84 C3      CLOSE2  STY AFILNO
5634  456D- 98                 TYA
5635  456E- AA                 TAX
5636  456F- 20 12 F0           JSR CLOSE
5637  4572- D0 92              BNE FILERR-1
5638  4574- A9 00              LDA =0
5639  4576- A4 C3              LDY AFILNO
5640  4578- 99 80 03           STA FISYTB,Y
5641  457B- 85 C3              STA AFILNO
5642  457D- 60                 RTS
5643                   *
5644                   * SET FILE OUTPUT
5645                   *****************
5646                   *
5647  457E- 8A         SETDV3  TXA
5648  457F- 20 64 44           JSR SRFILN
5649  4582- D0 E2              BNE NFERR
5650  4584- 84 C3              STY AFILNO
5651  4586- 60                 RTS
5652                   *
5653                   * OUTFIL: PRINT TO A FILE
5654                   *************************
5655                   *
5656  4587- A6 C3      OUTFIL  LDX AFILNO
5657  4589- A0 00              LDY =0
5658  458B- 84 DA              STY FILFLG
5659  458D- 20 1B F0           JSR WRITCH
5660  4590- F0 F4              BEQ OUTFIL-1    RTS, IF OK
5661  4592- 4C 06 45           JMP FILERR-1
5662                   *
5663                   *
5664                   * RSTO1: RESET INPUT DEVICE AND GRAPHICS
5665                   ****************************************
5666                   * X SAVED
5667                   *
5668  4595- 8A         RSTO1   TXA
5669  4596- 48                 PHA
5670  4597- 20 C2 30           JSR GETEND      RESET INPUT DEVICE
5671  459A- 68                 PLA

----------------------------------------------------------------------

GRAPHIC BASIC - FILE HANDLING      30/03/18   R65 ASSEMBLER  PAGE 25

5672  459B- AA                 TAX
5673  459C- 4C 1C 20           JMP ALPHAD
5674                   *
5675                   * RSTALL: RESTET INPUT,OUTPUT AND GRAPHICS
5676                   ******************************************
5677                   *
5678  459F- 08         RSTALL  PHP             SAVE STATUS
5679  45A0- A5 00              LDA OUTDEV
5680  45A2- F0 07              BEQ *+9
5681  45A4- 20 B8 42           JSR RSTDEV
5682  45A7- A9 00              LDA =0
5683  45A9- 85 00              STA OUTDEV
5684  45AB- 20 C2 30           JSR GETEND
5685  45AE- 20 1C 20           JSR ALPHAD
5686  45B1- 28                 PLP
5687  45B2- 60                 RTS
5688                   *
5689                   * SETINP: SETINPUT DEVICE
5690                   *************************
5691                   *
5692  45B3- 20 02 37   SETINP  JSR NUMEXP
5693  45B6- 86 C1              STX INPDEV
5694  45B8- E0 04              CPX =4
5695  45BA- 90 05              BCC *+7
5696  45BC- 20 7E 45           JSR SETDV3
5697  45BF- A2 04              LDX =4
5698  45C1- A9 3B              LDA =';'
5699  45C3- 20 7B 2B           JSR FOLLOW
5700  45C6- BD D1 45   SETIN1  LDA INVTB,X     SET VECTOR FOR INCHR
5701  45C9- 85 C4              STA IVECT
5702  45CB- BD D6 45           LDA INVTB+5,X
5703  45CE- 85 C5              STA IVECT+1
5704  45D0- 60                 RTS
5705                   *
5706  45D1- 00 F0 5A   INVTB   BYT <GETKEY,<TSTKEY,<GETTTY
5707  45D4- FB 2A              BYT <GETGRA,<INFIL
5708  45D6- E0 45 1E           BYT >GETKEY,>TSTKEY,>GETTTY
5709  45D9- 45 46              BYT >GETGRA,>INFIL
5710                   *
5711                   * RSTIDV: RESET INPUT DEVICE
5712                   ****************************
5713                   *
5714  45DB- A2 00      RSTIDV  LDX =0
5715  45DD- F0 E7              BEQ SETIN1
5716                   *
5717                   * INCHR INPUT A CHAR
5718                   ********************
5719                   *
5720  45DF- 86 C6      INCHR   STX ISAVXY
5721  45E1- 84 C7              STY ISAVXY+1

----------------------------------------------------------------------

GRAPHIC BASIC - FILE HANDLING      30/03/18   R65 ASSEMBLER  PAGE 26

5722  45E3- 20 ED 45           JSR INCH1
5723  45E6- A6 C6              LDX ISAVXY
5724  45E8- A4 C7              LDY ISAVXY+1
5725  45EA- 29 7F              AND =$7F
5726  45EC- 60                 RTS
5727                   *
5728  45ED- 6C C4 00   INCH1   JMP (IVECT)
5729                   *
5730                   * TSTKEY: TEST KEY
5731                   ******************
5732                   * RESTURN A=0 IF NO KEY PRESSES, ELSE KEY
5733                   *
5734  45F0- AD 85 17   TSTKEY  LDA CHARREG
5735  45F3- F0 05              BEQ *+7
5736  45F5- A2 00              LDX =0
5737  45F7- 8E 85 17           STX CHARREG
5738  45FA- 60                 RTS
5739                   *
5740                   *
5741                   * GETGRA: GET KEY AND PRINT TO GRAPHICS
5742                   ***************************************
5743                   *
5744  45FB- 20 00 E0   GETGRA  JSR GETKEY
5745  45FE- 48                 PHA
5746  45FF- C9 7F             CMP =$7F
5747  4601- F0 09              BEQ *+11
5748  4603- C9 5F              CMP =$5F
5749  4605- F0 05              BEQ *+7
5750  4607- 20 82 43           JSR CHAR
5751  460A- 68                 PLA
5752  460B- 60                 RTS
5753                   *
5754  460C- A5 AE              LDA XCURS
5755  460E- 38                 SEC
5756  460F- E9 06              SBC =6
5757  4611- B0 02              BCS *+4
5758  4613- A9 00              LDA =0
5759  4615- 85 AE              STA XCURS
5760  4617- 48                 PHA             SAVE XCURS
5761  4618- A9 80              LDA =$80
5762  461A- 85 AB              STA PLMODE
5763  461C- A9 5C              LDA =$5C
5764  461E- 20 82 43           JSR CHAR
5765  4621- A9 00              LDA =0
5766  4623- 85 AB              STA PLMODE
5767  4625- 68                 PLA
5768  4626- 85 AE              STA XCURS
5769  4628- 68                 PLA
5770  4629- 60                 RTS
5771                   *

----------------------------------------------------------------------

GRAPHIC BASIC - FILE HANDLING      30/03/18   R65 ASSEMBLER  PAGE 27

5772                   * INFIL: INPUT FROM FILE
5773                   ************************
5774                   *
5775  462A- A6 C3      INFIL   LDX AFILNO
5776  462C- A9 00              LDA =0
5777  462E- 85 DA              STA FILFLG
5778  4630- 20 18 F0           JSR READCH
5779  4633- F0 F4              BEQ INFIL-1     RTS, IF OK
5780  4635- 4C 06 45           JMP FILERR-1
5781                   *
5782                   *
5783                   * COPY: COPY FROM ANY DEVICE TO ANY DEVICE
5784                   ******************************************
5785                   * DEVICE CAN BE SYMBOLIC FILE OR PHYSICAL
5786                   * DEVICE (I/O CODES 0-3)
5787                   *
5788  4638- 20 05 37   COPY    JSR NUMEXP+3    GET INPUT DEVICE
5789  463B- 86 C1              STX INPDEV
5790  463D- E0 04              CPX =4
5791  463F- 90 05              BCC *+7
5792  4641- 20 7E 45           JSR SETDV3
5793  4644- A2 04              LDX =4
5794  4646- A9 2C              LDA =','
5795  4648- 20 C3 45           JSR SETIN1-3    SET DEVICE
5796  464B- 20 1B 27           JSR FETCH1
5797  464E- 20 05 37           JSR NUMEXP+3
5798  4651- E0 03              CPX =3
5799  4653- B0 06              BCS *+8
5800  4655- 20 82 42           JSR SETDV1-4
5801  4658- 4C 60 46           JMP COPY1
5802                   *
5803  465B- 86 00              STX OUTDEV
5804  465D- 20 A3 42           JSR SETDV2+7
5805                   *
5806  4660- A5 C1      COPY1   LDA INPDEV
5807  4662- C5 00              CMP OUTDEV
5808  4664- D0 03              BNE *+5
5809  4666- 4C 14 44           JMP FNERR
5810                   *
5811  4669- 20 63 42           JSR DEFARG2
5812  466C- C9 00              CMP =0           TERMINATOR
5813  466E- D0 02              BNE *+4
5814  4670- A9 1F              LDA =$1F
5815  4672- 85 B7              STA LENGHT
5816                   *
5817  4674- A5 C1      COPY2   LDA INPDEV
5818  4676- C9 04              CMP =4
5819  4678- 90 07              BCC COPY3
5820  467A- 20 64 44           JSR SRFILN
5821  467D- D0 3E              BNE COPY6

----------------------------------------------------------------------

GRAPHIC BASIC - FILE HANDLING      30/03/18   R65 ASSEMBLER  PAGE 28

5822  467F- 84 C3              STY AFILNO
5823                   *
5824  4681- 20 DF 45   COPY3   JSR INCHR
5825  4684- C9 1F              CMP =$1F
5826  4686- F0 26              BEQ COPY5
5827  4688- C5 B7              CMP LENGHT
5828  468A- F0 22              BEQ COPY5
5829                   *
5830  468C- A6 00              LDX OUTDEV
5831  468E- E0 04              CPX =4
5832  4690- 90 0A              BCC COPY4
5833  4692- 48                 PHA
5834  4693- 8A                 TXA
5835  4694- 20 64 44           JSR SRFILN
5836  4697- D0 23              BNE COPY6-1
5837  4699- 84 C3              STY AFILNO
5838  469B- 68                 PLA
5839                   *
5840  469C- 20 C4 2F   COPY4   JSR OUTCHR
5841  469F- C9 0D              CMP =$D
5842  46A1- D0 05              BNE *+7
5843  46A3- A9 0A              LDA =$A
5844  46A5- 20 C4 2F           JSR OUTCHR
5845  46A8- 20 2E 20           JSR BREAKT
5846  46AB- 4C 74 46           JMP COPY2
5847                   *
5848  46AE- A5 00      COPY5   LDA OUTDEV
5849  46B0- F0 07              BEQ *+9
5850  46B2- 20 B8 42           JSR RSTDEV
5851  46B5- A9 00              LDA =0
5852  46B7- 85 00              STA OUTDEV
5853  46B9- 4C C2 30           JMP GETEND
5854                   *
5855  46BC- 68                 PLA
5856  46BD- 4C 14 44   COPY6   JMP FNERR
5857                   *
5858                   * FILES: PRINT OPEN FILES TO DISPLAY
5859                   ************************************
5860                   *
5861  46C0- A9 00      FILES   LDA =<FILEM
5862  46C2- A0 47              LDY =>FILEM
5863  46C4- 20 93 28           JSR OUTSTR
5864                   *
5865  46C7- A0 07      FILE1   LDY =7
5866  46C9- B9 80 03           LDA FISYTB,Y
5867  46CC- F0 03              BEQ *+5
5868  46CE- 20 D5 46           JSR FILE2
5869  46D1- 88                 DEY
5870  46D2- 10 F5              BPL FILE1+2
5871  46D4- 60                 RTS

----------------------------------------------------------------------

GRAPHIC BASIC - FILE HANDLING      30/03/18   R65 ASSEMBLER  PAGE 29

5872                   *
5873  46D5- 20 F1 46   FILE2   JSR FILE3       PRINT SYMBOLIC NAME
5874  46D8- B9 41 03           LDA FIDVTB,Y
5875  46DB- 20 F1 46           JSR FILE3       PRINT DEVICE
5876  46DE- B9 39 03           LDA FIDRTB,Y
5877  46E1- 0A                 ASL A
5878  46E2- A9 00              LDA =0
5879  46E4- 2A                 ROL A
5880  46E5- 20 F1 46           JSR FILE3       PRINT R/W DIRECTION
5881  46E8- B9 51 03           LDA FIRCTB,Y
5882  46EB- 20 F1 46           JSR FILE3
5883  46EE- 4C 9D 24           JMP CRLF
5884                   *
5885  46F1- AA         FILE3   TAX
5886  46F2- 98                 TYA
5887  46F3- 48                 PHA
5888  46F4- A9 00              LDA =0
5889  46F6- 20 12 33           JSR OUTINT
5890  46F9- 68                 PLA
5891  46FA- A8                 TAY
5892  46FB- A9 09              LDA =9
5893  46FD- 4C C4 2F          JMP OUTCHR
5894                   *
5895  4700- 0D 0A 4D   FILEM   BYT $D,$A,'MO',9,'DRIVE'
5895  4703- 4F 09 44 
5895  4706- 52 49 56 
5895  4709- 45 
5896  470A- 09 44 49           BYT 9,'DIR',9,'RECORD'
5896  470D- 52 09 52 
5896  4710- 45 43 4F 
5896  4713- 52 44 
5897  4715- 0D 0A 00           BYT $D,$A,0
5898                   *
5899                   *
5900                   * GETBCD: GET BASIC ARGUMENT, CONVERT TO
5901                   ****************************************
5902                   * 4 DIGIT BCD NUMBER IN A,Y
5903                   *
5904  4718- 20 44 42   GETBCD  JSR DEFARG
5905  471B- A9 00              LDA =0
5906  471D- 85 98              STA MANT
5907  471F- 85 99              STA MANT+1
5908  4721- A2 0F              LDX =15
5909  4723- 06 05      GETBCD1 ASL INTEG
5910  4725- 26 06              ROL INTEG+1
5911  4727- 90 10              BCC GETBCD2
5912  4729- F8                 SED
5913  472A- A5 98              LDA MANT
5914  472C- 7D 41 47           ADC GETBCD3,X
5915  472F- 85 98              STA MANT

----------------------------------------------------------------------

GRAPHIC BASIC - FILE HANDLING      30/03/18   R65 ASSEMBLER  PAGE 30

5916  4731- A5 99              LDA MANT+1
5917  4733- 7D 51 47           ADC GETBCD3+16,X
5918  4736- 85 99              STA MANT+1
5919  4738- D8                 CLD
5920  4739- CA         GETBCD2 DEX
5921  473A- 10 E7              BPL GETBCD1
5922  473C- A5 98              LDA MANT
5923  473E- A4 99              LDY MANT+1
5924  4740- 60                 RTS
5925                   *
5926  4741- 00 01 03   GETBCD3 BYT 0,1,3
5927  4744- 07 15 31           BYT 7,$15,$31
5928  4747- 63 27 55           BYT $63,$27,$55
5929  474A- 11 23 47           BYT $11,$23,$47
5930  474D- 95 91 83           BYT $95,$91,$83
5931  4750- 67                 BYT $67
5932                   *
5933  4751- 00 00 00           BYT 0,0,0
5934  4754- 00 00 00           BYT 0,0,0
5935  4757- 00 01 02           BYT 0,1,2
5936  475A- 05 10 20           BYT 5,$10,$20
5937  475D- 40 81 63           BYT $40,$81,$63
5938  4760- 32                 BYT $32
5939                   *
5940                   *
5941                   *
5942                   * OUTCON: OUTPUT CONVERSION (WITH FORMATTING)
5943                   *********************************************
5944                   *
5945  4761- A0 01      OUTCON  LDY =1          START OF STRING
5946  4763- A9 00              LDA =0
5947  4765- 85 C9              STA FORMCD      TEST FORMATTING CODE
5948  4767- C9 03              CMP =3          HEX FORMATTING
5949  4769- D0 57              BNE FORM4       SKIP, IF NOT
5950                   *
5951  476B- A9 24              LDA ='$'
5952  476D- 99 FF 00           STA 255,Y
5953  4770- 84 A7              STY DYADIC+8
5954  4772- A9 BD              LDA =<HEXMAX
5955  4774- A0 47              LDY =>HEXMAX
5956  4776- 20 64 35           JSR COMPAR      TEST MAX VALUE
5957  4779- 30 03              BMI *+5
5958  477B- 4C 17 37           JMP QERR
5959                   *
5960  477E- 20 33 37           JSR FLPIN1
5961  4781- A2 07              LDX =7
5962  4783- 86 84              STX TEMP6
5963  4785- A0 03      FORM1   LDY =3
5964  4787- 06 9B              ASL MANT+3
5965  4789- 26 9A              ROL MANT+2

----------------------------------------------------------------------

GRAPHIC BASIC - FILE HANDLING      30/03/18   R65 ASSEMBLER  PAGE 31

5966  478B- 26 99              ROL MANT+1
5967  478D- 26 98              ROL MANT
5968  478F- 2A                 ROL A
5969  4790- 88                 DEY
5970  4791- 10 F4              BPL FORM1+2
5971  4793- 29 0F              AND =$F
5972  4795- D0 0A              BNE FORM2
5973  4797- 24 84              BIT TEMP6
5974  4799- 30 06              BMI FORM2
5975  479B- E4 CA              CPX FORMNO
5976  479D- 90 02              BCC FORM2
5977  479F- B0 14              BCS FORM3
5978                   *
5979  47A1- C9 0A      FORM2   CMP =$A         CONVERT TO HEX DIGIT
5980  47A3- 18                 CLC
5981  47A4- 30 02              BMI *+4
5982  47A6- 69 07              ADC =7
5983  47A8- 69 30              ADC =$30
5984  47AA- E6 A7              INC DYADIC+8
5985  47AC- A4 A7              LDY DYADIC+8
5986  47AE- 99 FF 00           STA 255,Y
5987                    * BASIC7:A ORIGINAL 7/1/1982, RECOVERED 3/2018
5988  47B1- A9 80              LDA =$80
5989  47B3- 85 84              STA TEMP6
5990  47B5- CA         FORM3   DEX
5991  47B6- 10 CD              BPL FORM1
5992  47B8- A4 A7              LDY DYADIC+8
5993  47BA- 4C 75 49           JMP OUTZER+3
5994                   *
5995  47BD- 9F 7F FF   HEXMAX  BYT $9F,$7F,$FF,$FF,$FF
5995  47C0- FF FF 
5996                   *
5997                   * OUTPUT, IF NOT HEX
5998                   *
5999  47C2- A9 20      FORM4   LDA =' '
6000  47C4- 24 9C              BIT SIGN
6001  47C6- 10 02              BPL *+4
6002  47C8- A9 2D              LDA ='-'
6003  47CA- 99 FF 00           STA 255,Y
6004  47CD- 85 9C              STA SIGN
6005  47CF- 84 A7              STY DYADIC+8
6006  47D1- C8                 INY
6007  47D2- A9 F8              LDA =$F8
6008  47D4- 85 93              STA POINTC
6009  47D6- A6 97              LDX EXP
6010  47D8- F0 3A              BEQ OUTCN3
6011                   *
6012  47DA- A9 00              LDA =0
6013  47DC- E0 80              CPX =$80
6014  47DE- F0 02              BEQ *+4

----------------------------------------------------------------------

GRAPHIC BASIC - FILE HANDLING      30/03/18   R65 ASSEMBLER  PAGE 32

6015  47E0- B0 09              BCS *+11
6016                   *
6017  47E2- A9 81              LDA =<(OUTCT1+10)
6018  47E4- A0 36              LDY =>(OUTCT1+10)
6019  47E6- 20 91 38           JSR MULT-3      MULTIPLY BY 1.0E9
6020  47E9- A9 F7              LDA =$F7
6021                   *
6022  47EB- 85 93              STA POINTC
6023  47ED- A9 7C      OUTCN0  LDA =<(OUTCT1+5)
6024  47EF- A0 36              LDY =>(OUTCT1+5)
6025  47F1- 20 64 35           JSR COMPAR
6026  47F4- F0 1E              BEQ OUTCN3
6027  47F6- 10 12              BPL OUTCN1      TOO BIG FOR INT
6028  47F8- A9 77              LDA =<OUTCT1
6029  47FA- A0 36              LDY =>OUTCT1
6030  47FC- 20 64 35           JSR COMPAR
6031  47FF- F0 02             BEQ *+4
6032  4801- 10 0E              BPL OUTCN1+7
6033  4803- 20 D2 36           JSR MULTEN      TOO SMALL FOR INT
6034  4806- C6 93              DEC POINTC
6035  4808- D0 EE              BNE *-16
6036                   *
6037  480A- 20 F1 36   OUTCN1  JSR DIVTEN
6038  480D- E6 93              INC POINTC
6039  480F- D0 DC              BNE OUTCN0      ALLWAYS TAKEN
6040                   *
6041  4811- 20 34 33           JSR ADD9
6042  4814- A6 C9      OUTCN3  LDX FORMCD      TEST FORMATTING CODE
6043  4816- F0 46              BEQ FORM8       SKIP, IF AUTO FORMAT
6044  4818- A9 08              LDA =8
6045  481A- CA                 DEX
6046  481B- F0 05              BEQ FORM5       SKIP, IF E-FORMAT
6047  481D- A9 00              LDA =0
6048  481F- 38                 SEC
6049  4820- E5 93              SBC POINTC
6050  4822- 38         FORM5   SEC
6051  4823- E5 CA              SBC FORMNO      COMPUTE NEW ROUNDING
6052  4825- 30 37              BMI FORM8
6053  4827- F0 35              BEQ FORM8
6054  4829- C9 0A              CMP =$A
6055  482B- B0 31              BCS FORM8
6056  482D- 85 CC              STA FORMCT      ROUNDING IS .5*10^FORMCT
6057  482F- A2 84              LDX =<TEMP6
6058  4831- A0 00              LDY =>TEMP6
6059  4833- 20 E0 34           JSR SAVFLP+4
6060  4836- A9 86              LDA =<OUTCT2
6061  4838- A0 36              LDY =>OUTCT2
6062  483A- 20 B7 34           JSR GETFLP
6063  483D- 20 D2 36   FORM6   JSR MULTEN
6064  4840- C6 CC              DEC FORMCT

----------------------------------------------------------------------

GRAPHIC BASIC - FILE HANDLING      30/03/18   R65 ASSEMBLER  PAGE 33

6065  4842- D0 F9              BNE FORM6
6066                   *
6067  4844- A9 84              LDA =<TEMP6
6068  4846- A0 00              LDY =>TEMP6
6069  4848- 20 40 33           JSR ADD-3       ADD ROUNDING
6070  484B- A9 7C              LDA =<(OUTCT1+5)
6071  484D- A0 36              LDY =>(OUTCT1+5)
6072  484F- 20 64 35           JSR COMPAR
6073  4852- F0 0A              BEQ FORM8
6074  4854- 30 08              BMI FORM8
6075  4856- 20 F1 36           JSR DIVTEN
6076  4859- E6 93              INC POINTC
6077  485B- 20 34 33           JSR ADD9
6078                   *
6079  485E- 20 33 37   FORM8   JSR FLPIN1
6080  4861- A2 01              LDX =1
6081  4863- A5 93              LDA POINTC
6082  4865- 18                 CLC
6083  4866- 69 0A              ADC =10
6084  4868- A4 C9              LDY FORMCD
6085  486A- F0 05              BEQ FORM7
6086  486C- 88                 DEY
6087  486D- F0 15              BEQ EXPOUT      EXPOUT, IF E-FORMAT
6088  486F- D0 03              BNE FORM7+3
6089                   *
6090  4871- A8         FORM7   TAY             IN AUTO FORMAT
6091  4872- 30 10              BMI EXPOUT      EXPOUT, IF <0.01
6092                   *
6093  4874- C9 0B              CMP =11         IN AUTO AND F=FORMAT
6094  4876- 10 0D              BPL EXPOUT+1    EXPOUT, IF TOO BIG
6095                   *
6096  4878- 18         FIXOUT  CLC
6097  4879- 69 FF              ADC =255
6098  487B- C9 F5              CMP =$F5        CORRECTION FOR UNDER-
6099  487D- 10 02              BPL *+4         FLOW IN FIXOUT
6100  487F- A2 F5              LDX =$F5
6101  4881- AA                 TAX             DECIMAL POINT TO X
6102  4882- A9 02              LDA =2          DUMMY EXPONTENT
6103                   *
6104  4884- 38         EXPOUT  SEC
6105  4885- E9 02              SBC =2
6106  4887- 85 94              STA CURREX      PRINTED EXPONENT
6107  4889- 86 93              STX POINTC      DECIMAL POINT OFFSET
6108  488B- 8A                 TXA
6109  488C- F0 02              BEQ *+4
6110  488E- 10 1C              BPL OUTCN2
6111                   *
6112  4890- A4 A7              LDY DYADIC+8
6113  4892- A9 30              LDA ='0'
6114  4894- C8                 INY

----------------------------------------------------------------------

GRAPHIC BASIC - FILE HANDLING      30/03/18   R65 ASSEMBLER  PAGE 34

6115  4895- 99 FF 00           STA 255,Y
6116  4898- A9 2E              LDA ='.'
6117  489A- C8                 INY
6118  489B- 99 FF 00           STA 255,Y
6119  489E- 8A                 TXA
6120  489F- F0 09              BEQ OUTCN2-2
6121  48A1- A9 30              LDA ='0'
6122  48A3- C8                 INY
6123  48A4- 99 FF 00           STA 255,Y
6124  48A7- E8                 INX
6125  48A8- D0 F9              BNE *-5
6126                   *
6127  48AA- 84 A7              STY DYADIC+8
6128  48AC- A0 00      OUTCN2  LDY =0
6129  48AE- A2 80              LDX =128
6130  48B0- A5 9B              LDA MANT+3
6131  48B2- 18                 CLC
6132  48B3- 79 8E 36           ADC OUTCT2+8,Y
6133  48B6- 85 9B              STA MANT+3
6134  48B8- A5 9A              LDA MANT+2
6135  48BA- 79 8D 36           ADC OUTCT2+7,Y
6136  48BD- 85 9A              STA MANT+2
6137  48BF- A5 99              LDA MANT+1
6138  48C1- 79 8C 36           ADC OUTCT2+6,Y
6139  48C4- 85 99              STA MANT+1
6140  48C6- A5 98              LDA MANT
6141  48C8- 79 8B 36           ADC OUTCT2+5,Y
6142  48CB- 85 98              STA MANT
6143  48CD- E8                 INX
6144  48CE- B0 04              BCS *+6
6145  48D0- 10 DE              BPL OUTCN2+4
6146  48D2- 30 02              BMI *+4
6147  48D4- 30 DA              BMI OUTCN2+4
6148  48D6- 8A                 TXA
6149  48D7- 90 04              BCC *+6
6150  48D9- 49 FF              EOR =$FF
6151  48DB- 69 0A              ADC =$0A
6152  48DD- 69 2F              ADC =$2F
6153  48DF- C8                 INY
6154  48E0- C8                 INY
6155  48E1- C8                 INY
6156  48E2- C8                 INY
6157  48E3- 84 7D              STY VARSTP
6158  48E5- A4 A7              LDY DYADIC+8
6159  48E7- C8                 INY
6160  48E8- AA                 TAX
6161  48E9- 29 7F              AND =$7F
6162  48EB- 99 FF 00           STA 255,Y
6163  48EE- C6 93              DEC POINTC
6164  48F0- D0 06              BNE *+8

----------------------------------------------------------------------

GRAPHIC BASIC - FILE HANDLING      30/03/18   R65 ASSEMBLER  PAGE 35

6165  48F2- A9 2E              LDA ='.'
6166  48F4- C8                 INY
6167  48F5- 99 FF 00           STA 255,Y
6168  48F8- 84 A7              STY DYADIC+8
6169                   *
6170  48FA- A4 7D              LDY VARSTP
6171  48FC- 8A                 TXA
6172  48FD- 49 FF              EOR =$FF
6173  48FF- 29 80             AND =$80
6174  4901- AA                 TAX
6175  4902- C0 24              CPY =$24
6176  4904- F0 0A              BEQ OUTCN4
6177  4906- A5 93              LDA POINTC
6178  4908- C9 F6              CMP =$F6
6179  490A- 30 04              BMI OUTCN4
6180  490C- C0 3C              CPY =$3C
6181  490E- D0 A0              BNE OUTCN2+4
6182                   *
6183  4910- A4 A7      OUTCN4  LDY DYADIC+8    GET END OF STRING
6184  4912- A6 C9              LDX FORMCD
6185  4914- F0 1E              BEQ FORM10
6186  4916- 98                 TYA
6187  4917- 18                 CLC
6188  4918- 65 93              ADC POINTC
6189  491A- 18                 CLC
6190  491B- 65 CA              ADC FORMNO
6191  491D- C5 A7              CMP DYADIC+8
6192  491F- B0 01              BCS *+3
6193  4921- A8                 TAY
6194  4922- B9 FF 00           LDA 255,Y       DO NOT PRINT
6195  4925- C9 2E              CMP ='.'        ENDING POINT
6196  4927- D0 01              BNE *+3
6197  4929- 88                 DEY
6198  492A- CA                 DEX
6199  492B- D0 14              BNE FORM11
6200                   *
6201  492D- A9 2B              LDA ='+'
6202  492F- A6 94              LDX CURREX
6203  4931- 4C 47 49           JMP FORM12
6204                   *
6205  4934- B9 FF 00   FORM10  LDA 255,Y
6206  4937- 88                 DEY
6207  4938- C9 30              CMP ='0'
6208  493A- F0 F8              BEQ *-6
6209  493C- C9 2E              CMP ='.'
6210  493E- F0 01              BEQ *+3
6211  4940- C8                 INY
6212  4941- A9 2B      FORM11  LDA ='+'
6213  4943- A6 94              LDX CURREX
6214  4945- F0 2E              BEQ OUTZER+3

----------------------------------------------------------------------

GRAPHIC BASIC - FILE HANDLING      30/03/18   R65 ASSEMBLER  PAGE 36

6215                   *
6216  4947- 10 08      FORM12  BPL *+10
6217  4949- A9 00              LDA =0
6218  494B- 38                 SEC
6219  494C- E5 94              SBC CURREX
6220  494E- AA                 TAX
6221  494F- A9 2D              LDA ='-'
6222  4951- 99 01 01           STA 257,Y
6223  4954- A9 45              LDA ='E'
6224  4956- 99 00 01           STA 256,Y
6225  4959- 8A                 TXA
6226  495A- A2 2F              LDX =$2F
6227  495C- 38                 SEC
6228  495D- E8                 INX
6229  495E- E9 0A              SBC =10
6230  4960- B0 FB              BCS *-3
6231  4962- 69 3A              ADC =$3A
6232  4964- 99 03 01           STA 259,Y
6233  4967- 8A                 TXA
6234  4968- 99 02 01           STA 258,Y
6235  496B- C8                 INY
6236  496C- C8                 INY
6237  496D- C8                 INY
6238  496E- C8                 INY
6239  496F- 4C 75 49           JMP OUTZER+3
6240                   *
6241  4972- 99 FF 00   OUTZER  STA 255,Y
6242  4975- A9 00              LDA =0
6243  4977- 99 00 01           STA 256,Y
6244  497A- 98                 TYA
6245  497B- AA                 TAX
6246  497C- A9 00              LDA =0
6247  497E- A0 01              LDY =1
6248  4980- 60                 RTS
6249                   *
6250                   *
6251                   * FORMOUT: FORMATTED OUTPUT
6252                   ***************************
6253                   *
6254  4981- A0 01      FORMOUT LDY =1
6255  4983- 98                 TYA
6256  4984- 48                 PHA
6257  4985- A5 C8              LDA FORMCS
6258  4987- 20 65 47           JSR OUTCON+4
6259  498A- 68                 PLA
6260  498B- D0 02              BNE *+4
6261  498D- E8                 INX
6262  498E- 88                 DEY
6263  498F- 84 85              STY TEMP6+1
6264  4991- A8                 TAY

----------------------------------------------------------------------

GRAPHIC BASIC - FILE HANDLING      30/03/18   R65 ASSEMBLER  PAGE 37

6265  4992- 88                 DEY
6266  4993- 84 84              STY TEMP6
6267  4995- 8A                 TXA
6268  4996- 38                 SEC
6269  4997- E5 CB              SBC FORMFL
6270  4999- B0 21              BCS OUTEND
6271                   *
6272  499B- 49 FF              EOR =$FF
6273  499D- 85 A7              STA DYADIC+8
6274  499F- 38                 SEC
6275  49A0- 65 84              ADC TEMP6
6276  49A2- 85 86              STA TEMP6+2
6277  49A4- A5 85              LDA TEMP6+1
6278  49A6- 69 00              ADC =0
6279  49A8- 85 87              STA TEMP6+3
6280  49AA- 8A                 TXA
6281  49AB- A8                 TAY
6282  49AC- B1 84              LDA (TEMP6),Y
6283  49AE- 91 86              STA (TEMP6+2),Y
6284  49B0- 88                 DEY
6285  49B1- 10 F9              BPL *-5
6286                   *
6287  49B3- A4 A7              LDY DYADIC+8
6288  49B5- A9 20              LDA =$20
6289  49B7- 91 84              STA (TEMP6),Y
6290  49B9- 88                 DEY
6291  49BA- 10 FB              BPL *-3
6292  49BC- A9 00      OUTEND  LDA =0
6293  49BE- A0 01              LDY =1
6294  49C0- 60                 RTS
6295                   *
6296                   *
6297                   * FORMAT: SET FORMATTING
6298                   ************************
6299                   *
6300  49C1- 20 63 2C   FORMAT  JSR TLETT
6301  49C4- B0 03              BCS *+5
6302  49C6- 4C CC 26           JMP SYNERR      MUST BE LETTER
6303                   *
6304  49C9- C9 41              CMP ='A'        AUTO FORMAT
6305  49CB- D0 04              BNE FORMAT1
6306                   *
6307  49CD- A9 00              LDA =0
6308  49CF- F0 06              BEQ FORMAT2
6309                   *
6310  49D1- C9 46      FORMAT1 CMP ='F'        F-FORMAT
6311  49D3- D0 1A              BNE FORMAT3
6312  49D5- A9 02              LDA =2
6313  49D7- 85 C8      FORMAT2 STA FORMCS
6314  49D9- 20 02 37           JSR NUMEXP

----------------------------------------------------------------------

GRAPHIC BASIC - FILE HANDLING      30/03/18   R65 ASSEMBLER  PAGE 38

6315  49DC- E0 10              CPX =16
6316  49DE- B0 09              BCS QERR2
6317  49E0- 86 CB              STX FORMFL
6318  49E2- 20 63 42           JSR DEFARG2
6319  49E5- C9 09              CMP =9
6320  49E7- 90 03              BCC *+5
6321  49E9- 4C 17 37   QERR2   JMP QERR
6322  49EC- 85 CA              STA FORMNO
6323  49EE- 60                 RTS
6324                   *
6325  49EF- C9 45      FORMAT3 CMP ='E'        E-FORMAT
6326  49F1- D0 04              BNE FORMAT4
6327  49F3- A9 01              LDA =1
6328  49F5- D0 E0              BNE FORMAT2
6329                   *
6330  49F7- C9 48      FORMAT4 CMP ='H'        HEX-FORMAT
6331  49F9- D0 CB              BNE FORMAT+5    SYNTAX ERROR
6332  49FB- A9 03              LDA =3
6333  49FD- D0 D8              BNE FORMAT2
6334                   *
6335                   *
6336                   * HEX INPUT
6337                   ***********
6338                   *
6339  49FF- A9 00     NUMBHEX LDA =0
6340  4A01- 85 98              STA MANT
6341  4A03- 85 99              STA MANT+1
6342  4A05- 85 9A              STA MANT+2
6343  4A07- 85 9B              STA MANT+3
6344  4A09- 20 15 27   NUMBH0  JSR FETCH
6345  4A0C- 90 0B              BCC NUMBH1      SKIP, IF NUMBER
6346  4A0E- C9 41              CMP ='A'
6347  4A10- 90 23              BCC NUMBH3
6348  4A12- C9 47              CMP ='G'
6349  4A14- B0 1F              BCS NUMBH3
6350  4A16- 18                 CLC
6351  4A17- 69 09              ADC =9
6352  4A19- 29 0F      NUMBH1  AND =$F
6353  4A1B- 0A                 ASL A
6354  4A1C- 0A                 ASL A
6355  4A1D- 0A                 ASL A
6356  4A1E- 0A                 ASL A
6357  4A1F- A0 03              LDY =3
6358  4A21- 0A         NUMBH2  ASL A
6359  4A22- 26 9B              ROL MANT+3
6360  4A24- 26 9A              ROL MANT+2
6361  4A26- 26 99              ROL MANT+1
6362  4A28- 26 98              ROL MANT
6363  4A2A- 10 03              BPL *+5
6364  4A2C- 4C 17 37           JMP QERR        INPUT TOO LARGE

----------------------------------------------------------------------

GRAPHIC BASIC - FILE HANDLING      30/03/18   R65 ASSEMBLER  PAGE 39

6365  4A2F- 88                 DEY
6366  4A30- 10 EF              BPL NUMBH2
6367  4A32- 4C 09 4A           JMP NUMBH0
6368                   *
6369  4A35- A2 00      NUMBH3  LDX =0
6370  4A37- 86 45              STX RESTYP
6371  4A39- 86 A6              STX DYADIC+7
6372  4A3B- 86 9C              STX SIGN
6373  4A3D- A2 A0              LDX =$A0
6374  4A3F- A5 98              LDA MANT
6375  4A41- 49 FF              EOR =$FF
6376  4A43- 2A                 ROL A
6377  4A44- 86 97              STX EXP
6378  4A46- 4C AC 33           JMP NORMAL
6379                   *
6380                   *
6381                   * MERGE: MERGE PROGRAM TO OLD ONE
6382                   *********************************
6383                   *
6384  4A49- 20 E4 41   MERGE   JSR GETBF4      GET NAME ETC.
6385  4A4C- A5 63              LDA STVAR
6386  4A4E- A6 64              LDX STVAR+1
6387  4A50- 38                 SEC
6388  4A51- E9 03              SBC =3
6389  4A53- B0 01              BCS *+3
6390  4A55- CA                 DEX
6391  4A56- 4C 08 42           JMP LOAD1+4
6392                   *
6393                   * DIR: PRINT DIRECTORY
6394                   **********************
6395                   *
6396  4A59- A2 00      DIR     LDX =0
6397  4A5B- B0 03              BCS *+5
6398  4A5D- 20 05 37           JSR NUMEXP+3
6399  4A60- 86 DC              STX FILDRV
6400  4A62- A9 00              LDA =0
6401  4A64- 85 DA              STA FILFLG
6402  4A66- 8A                 TXA
6403  4A67- 29 02              AND =2
6404  4A69- D0 03              BNE *+5
6405  4A6B- 4C 13 20           JMP DDIR
6406  4A6E- 4C 10 20           JMP TDIR
6407                   *
6408                   *
6409                   * DELETE: DELETE DISK FILE
6410                   **************************
6411                   *
6412  4A71- 20 E4 41   DELBAS  JSR GETBF4
6413  4A74- 20 0C F0           JSR DELETE
6414  4A77- F0 03              BEQ *+5

----------------------------------------------------------------------

GRAPHIC BASIC - FILE HANDLING      30/03/18   R65 ASSEMBLER  PAGE 40

6415  4A79- 4C 07 45           JMP FILERR
6416  4A7C- 60                 RTS
6417                   *
6418                   * STA: STATUS FUNCTION
6419                   **********************
6420                   *
6421  4A7D- 20 08 37   STA     JSR NUMEXP+6    CONVERT TO BYTE
6422  4A80- E0 03              CPX =3
6423  4A82- D0 34              BNE STA1
6424                   *
6425  4A84- A6 AE              LDX XCURS
6426  4A86- A4 AF              LDY YCURS
6427  4A88- A9 1C              LDA =28
6428  4A8A- 78                 SEI
6429  4A8B- 8D E0 14           STA MULTA
6430  4A8E- 8C E1 14           STY MULTB
6431  4A91- 8A                 TXA
6432  4A92- 4A                 LSR A
6433  4A93- 4A                 LSR A
6434  4A94- 4A                 LSR A
6435  4A95- 18                 CLC
6436  4A96- 6D E2 14           ADC MULTR
6437  4A99- 85 AC              STA GRPNT
6438  4A9B- AD E3 14           LDA MULTR+1
6439  4A9E- 58                 CLI
6440  4A9F- 69 07              ADC =$07
6441  4AA1- 85 AD              STA GRPNT+1
6442  4AA3- 8A                 TXA
6443  4AA4- 29 07              AND =7
6444  4AA6- AA                 TAX
6445  4AA7- BD E9 4A           LDA GRMASK,X
6446  4AAA- A2 00              LDX =0
6447  4AAC- 21 AC              AND (GRPNT,X)
6448  4AAE- F0 02              BEQ *+4
6449  4AB0- A9 01              LDA =1
6450  4AB2- A8                 TAY
6451  4AB3- A9 00      STA6    LDA =0
6452  4AB5- 4C E5 2F           JMP INTFLP
6453                   *
6454  4AB8- B0 1B      STA1    BCS STA5
6455  4ABA- CA                 DEX
6456  4ABB- 10 03              BPL STA2
6457  4ABD- 4C 07 3C           JMP FRE
6458                   *
6459  4AC0- D0 0D      STA2    BNE STA3
6460  4AC2- 38                 SEC
6461  4AC3- A5 63              LDA STVAR
6462  4AC5- E5 61              SBC STPROG
6463  4AC7- A8                 TAY
6464  4AC8- A5 64              LDA STVAR+1

----------------------------------------------------------------------

GRAPHIC BASIC - FILE HANDLING      30/03/18   R65 ASSEMBLER  PAGE 41

6465  4ACA- E5 62              SBC STPROG+1
6466  4ACC- 4C E5 2F           JMP INTFLP
6467                   *
6468  4ACF- AC 80 17   STA3    LDY VFLAG
6469  4AD2- 4C B3 4A           JMP STA6
6470                   *
6471  4AD5- 8A         STA5    TXA
6472  4AD6- 20 64 44           JSR SRFILN
6473  4AD9- F0 04              BEQ *+6
6474  4ADB- A0 00              LDY =0
6475  4ADD- F0 D4              BEQ STA6
6476                   *
6477  4ADF- B9 39 03           LDA FIDRTB,Y
6478  4AE2- 0A                 ASL A
6479  4AE3- 2A                 ROL A
6480  4AE4- A8                 TAY
6481  4AE5- C8                 INY
6482  4AE6- 4C B3 4A           JMP STA6
6483                   *
6484  4AE9- 80 40 20   GRMASK  BYT $80,$40,$20
6485  4AEC- 10 08 04           BYT $10,$08,$04
6486  4AEF- 02 01              BYT $02,$01
6487                   *
6488                   * OUT: SET OUTPUT DEVICE
6489                   ************************
6490                   *
6491  4AF1- C9 00      OUT     CMP =0
6492  4AF3- D0 17              BNE OUT2
6493  4AF5- AD 80 17           LDA VFLAG
6494  4AF8- 29 7F              AND =$7F
6495  4AFA- 8D 80 17           STA VFLAG
6496  4AFD- A2 01              LDX =1
6497  4AFF- BD CE 42  OUT1    LDA DEVTB,X
6498  4B02- 8D 8C 17           STA VAUTOP
6499  4B05- BD D2 42           LDA DEVTB+4,X
6500  4B08- 8D 8D 17           STA VAUTOP+1
6501  4B0B- 60                 RTS
6502                   *
6503  4B0C- 20 05 37   OUT2    JSR NUMEXP+3
6504  4B0F- E0 00              CPX =0
6505  4B11- F0 E2              BEQ OUT+4
6506  4B13- AD 80 17           LDA VFLAG
6507  4B16- 09 08              ORA =8
6508  4B18- 8D 80 17           STA VFLAG
6509  4B1B- E0 04              CPX =4
6510  4B1D- 90 E0              BCC OUT1
6511                   *
6512  4B1F- A9 38              LDA =<OUT4
6513  4B21- 8D 8C 17           STA VAUTOP
6514  4B24- A9 4B              LDA =>OUT4

----------------------------------------------------------------------

GRAPHIC BASIC - FILE HANDLING      30/03/18   R65 ASSEMBLER  PAGE 42

6515  4B26- 8D 8D 17           STA VAUTOP+1
6516  4B29- 8A                 TXA
6517  4B2A- 20 64 44           JSR SRFILN
6518  4B2D- F0 06              BEQ *+8
6519  4B2F- 20 F5 4A           JSR OUT+4
6520  4B32- 4C 66 45           JMP NFERR
6521                   *
6522  4B35- 84 CD              STY OUTSAV
6523  4B37- 60                 RTS
6524                   *
6525  4B38- A6 CD      OUT4    LDX OUTSAV
6526  4B3A- 4C 89 45           JMP OUTFIL+2
6527                   *
6528                   *
6529                   * RENUMBERING
6530                   *************
6531                   *
6532                   LINBUF  EQU BUFFER-2
6533                   SAVPC   EQU XLOW
6534                   BEGIN   EQU XINCR
6535                   STEP    EQU YINCR
6536                   *
6537                   * START OF PROGRAM
6538                   *
6539  4B3D- A2 0A      RENUMB  LDX =10         SET DEFAULT LINE #
6540  4B3F- 86 05              STX INTEG
6541  4B41- A2 00              LDX =0
6542  4B43- 86 06              STX INTEG+1
6543  4B45- B0 03              BCS *+5
6544  4B47- 20 57 28           JSR FETCHI
6545  4B4A- A6 05              LDX INTEG
6546  4B4C- 86 B0              STX BEGIN
6547  4B4E- A6 06              LDX INTEG+1
6548  4B50- 86 B1              STX BEGIN+1
6549  4B52- A2 0A              LDX =10         DEFAULT STEP SIZE
6550  4B54- C9 2C              CMP =','
6551  4B56- D0 03              BNE *+5
6552  4B58- 20 02 37           JSR NUMEXP
6553  4B5B- 86 B2              STX STEP
6554  4B5D- 20 A8 25           JSR CLR1-3
6555                   *
6556                   *
6557                   * FILL BUFFER WITH OLD LINE #'S AND
6558                   * RENUMBER THE BEGINNING ONLY
6559                   *
6560  4B60- A9 FE      COPNUM  LDA =<LINBUF
6561  4B62- 85 5A              STA TEMP8
6562  4B64- A9 BF              LDA =>LINBUF
6563  4B66- 85 5B              STA TEMP8+1
6564  4B68- A5 61              LDA STPROG      BEGIN OF TEXT

----------------------------------------------------------------------

GRAPHIC BASIC - FILE HANDLING      30/03/18   R65 ASSEMBLER  PAGE 43

6565  4B6A- 85 58              STA TEMP1
6566  4B6C- A5 62              LDA STPROG+1
6567  4B6E- 85 59              STA TEMP1+1
6568  4B70- 20 9F 4C           JSR SETFAC      SET NEW LINE # CNTR
6569                   *
6570  4B73- A0 03      COP10   LDY =3
6571  4B75- B1 58      COP20   LDA (TEMP1),Y
6572  4B77- 91 5A              STA (TEMP8),Y
6573  4B79- B9 95 00           LDA MANT-3,Y
6574  4B7C- 91 58              STA (TEMP1),Y
6575  4B7E- 88                 DEY
6576  4B7F- C0 01              CPY =1
6577  4B81- D0 F2              BNE COP20
6578  4B83- B1 58              LDA (TEMP1),Y
6579  4B85- F0 10              BEQ COP80
6580  4B87- 20 BF 4C           JSR BUPX2
6581  4B8A- AA                 TAX
6582  4B8B- 88                 DEY
6583  4B8C- B1 58              LDA (TEMP1),Y
6584  4B8E- 85 58              STA TEMP1
6585  4B90- 86 59              STX TEMP1+1
6586  4B92- 20 A8 4C           JSR ADDSTP
6587  4B95- D0 DC              BNE COP10
6588                   *
6589  4B97- A9 FF      COP80   LDA =$FF
6590  4B99- C8                 INY
6591  4B9A- 91 5A              STA (TEMP8),Y
6592  4B9C- C8                 INY
6593  4B9D- 91 5B              STA (TEMP8+1),Y
6594                   *
6595  4B9F- A5 61      RENN    LDA STPROG
6596  4BA1- 85 A9              STA PC
6597  4BA3- A5 62              LDA STPROG+1
6598  4BA5- 85 AA              STA PC+1
6599  4BA7- D0 03              BNE RN15
6600  4BA9- 20 C9 4C   RN10    JSR GRAB
6601  4BAC- 20 C9 4C   RN15    JSR GRAB
6602  4BAF- D0 09              BNE RN20
6603  4BB1- 20 A8 25           JSR CLR1-3
6604  4BB4- 20 4B 24           JSR ADLNP0
6605  4BB7- 4C 7B 23           JMP WARMST
6606  4BBA- 20 C9 4C   RN20    JSR GRAB
6607  4BBD- 20 C9 4C           JSR GRAB
6608  4BC0- 20 C9 4C   RN30    JSR GRAB
6609  4BC3- AA         RN35    TAX
6610  4BC4- F0 E3              BEQ RN10        EOL?
6611                   *
6612  4BC6- A2 04      RN40    LDX =4
6613  4BC8- DD D3 4C   RN45    CMP TOKEN-1,X
6614  4BCB- F0 05              BEQ RN50

----------------------------------------------------------------------

GRAPHIC BASIC - FILE HANDLING      30/03/18   R65 ASSEMBLER  PAGE 44

6615  4BCD- CA                 DEX
6616  4BCE- D0 F8              BNE RN45
6617  4BD0- F0 EE              BEQ RN30        ALL TRIED, FORGET IT
6618  4BD2- A5 A9      RN50    LDA PC
6619  4BD4- 85 B4              STA SAVPC
6620  4BD6- A5 AA              LDA PC+1
6621  4BD8- 85 B5              STA SAVPC+1
6622  4BDA- 20 15 27           JSR FETCH
6623  4BDD- B0 E4              BCS RN35
6624  4BDF- 20 57 28           JSR FETCHI
6625  4BE2- 20 18 4C           JSR FINUM
6626  4BE5- A5 B4              LDA SAVPC
6627  4BE7- 85 A9              STA PC
6628  4BE9- A5 B5              LDA SAVPC+1
6629  4BEB- 85 AA              STA PC+1
6630  4BED- A0 00              LDY =0
6631  4BEF- A2 00              LDX =0
6632                   *
6633  4BF1- BD 01 01   RN60    LDA $101,X
6634  4BF4- F0 0F              BEQ RN70
6635  4BF6- 48                 PHA
6636  4BF7- 20 15 27           JSR FETCH
6637  4BFA- 90 03              BCC RN65
6638  4BFC- 20 4F 4C           JSR MOVUP
6639  4BFF- 68        RN65    PLA
6640  4C00- 91 A9              STA (PC),Y
6641  4C02- E8                 INX
6642  4C03- D0 EC              BNE RN60
6643                   *
6644  4C05- 20 15 27   RN70    JSR FETCH
6645  4C08- B0 08      RN75    BCS RN80
6646  4C0A- 20 71 4C   RN78    JSR MOVDWN
6647  4C0D- 20 1B 27           JSR FETCH1
6648  4C10- 90 F8              BCC RN78
6649  4C12- C9 2C      RN80    CMP =','
6650  4C14- F0 BC              BEQ RN50
6651  4C16- D0 AB              BNE RN35
6652                   *
6653                   *
6654                   * FIND OLD # IN BUFFER, GENERATE A NEW
6655                   * LINE #
6656                   *
6657  4C18- 20 9F 4C   FINUM   JSR SETFAC
6658  4C1B- A9 00              LDA =<BUFFER
6659  4C1D- 85 5A              STA TEMP8
6660  4C1F- A9 C0              LDA =>BUFFER
6661  4C21- 85 5B              STA TEMP8+1
6662  4C23- A0 01      FN10    LDY =1
6663  4C25- B1 5A              LDA (TEMP8),Y
6664  4C27- C5 06              CMP INTEG+1

----------------------------------------------------------------------

GRAPHIC BASIC - FILE HANDLING      30/03/18   R65 ASSEMBLER  PAGE 45

6665  4C29- F0 15              BEQ FN50
6666  4C2B- C9 FF              CMP =$FF
6667  4C2D- D0 18              BNE FN60
6668  4C2F- 85 98              STA MANT
6669  4C31- 85 97              STA MANT-1
6670  4C33- A5 97      FN20    LDA MANT-1
6671  4C35- 85 99              STA MANT+1
6672  4C37- A2 90              LDX =$90
6673  4C39- 38                 SEC
6674  4C3A- 20 55 35           JSR FLOAT
6675  4C3D- 4C 61 47           JMP OUTCON
6676                   *
6677  4C40- 88         FN50    DEY
6678  4C41- B1 5A              LDA (TEMP8),Y
6679  4C43- C5 05              CMP INTEG
6680  4C45- F0 EC              BEQ FN20
6681  4C47- 20 A8 4C   FN60    JSR ADDSTP
6682  4C4A- 20 BF 4C           JSR BUPX2
6683  4C4D- D0 D4              BNE FN10
6684                   *
6685                   *
6686                   * MOVE TEXT UP ONE CHAR
6687                   *
6688  4C4F- 20 8E 4C   MOVUP   JSR SETPTR
6689  4C52- A0 00      MU10    LDY =0
6690  4C54- B1 58              LDA (TEMP1),Y
6691  4C56- C8                 INY
6692  4C57- 91 58              STA (TEMP1),Y
6693  4C59- 20 B4 4C           JSR CMPX
6694  4C5C- D0 08              BNE MU40
6695  4C5E- E6 63              INC STVAR
6696  4C60- D0 02              BNE MU20
6697  4C62- E6 64              INC STVAR+1
6698                   *
6699  4C64- 88         MU20    DEY
6700  4C65- 60                 RTS
6701  4C66- A4 58      MU40    LDY TEMP1
6702  4C68- D0 02              BNE MU60
6703  4C6A- C6 59              DEC TEMP1+1
6704  4C6C- C6 58      MU60    DEC TEMP1
6705  4C6E- 4C 52 4C           JMP MU10
6706                   *
6707                   *
6708                   * MOVE TEXT DOWN ONE CHAR
6709                   *
6710  4C71- 20 8E 4C   MOVDWN  JSR SETPTR
6711  4C74- A0 01      MD10    LDY =1
6712  4C76- B1 5A              LDA (TEMP8),Y
6713  4C78- 88                 DEY
6714  4C79- 91 5A              STA (TEMP8),Y

----------------------------------------------------------------------

GRAPHIC BASIC - FILE HANDLING      30/03/18   R65 ASSEMBLER  PAGE 46

6715  4C7B- 20 B4 4C           JSR CMPX
6716  4C7E- F0 05              BEQ MD30
6717  4C80- 20 C2 4C   MD20    JSR BUPX1
6718  4C83- D0 EF              BNE MD10
6719  4C85- A4 63      MD30    LDY STVAR
6720  4C87- D0 02              BNE MD35
6721  4C89- C6 64              DEC STVAR+1
6722  4C8B- C6 63      MD35    DEC STVAR
6723  4C8D- 60         MD40    RTS
6724                   *
6725                   *
6726                   * SET POINTER FOR MOVE
6727                   *
6728  4C8E- A5 63      SETPTR  LDA STVAR
6729  4C90- 85 58              STA TEMP1
6730  4C92- A5 64              LDA STVAR+1
6731  4C94- 85 59              STA TEMP1+1
6732  4C96- A5 A9              LDA PC
6733  4C98- 85 5A              STA TEMP8
6734  4C9A- A5 AA              LDA PC+1
6735  4C9C- 85 5B              STA TEMP8+1
6736  4C9E- 60                 RTS
6737                   *
6738                   *
6739                   * SETUP MANT TO GENERATE NEW LINE #'S
6740                   *
6741  4C9F- A5 B0      SETFAC  LDA BEGIN
6742  4CA1- 85 97              STA MANT-1
6743  4CA3- A5 B1              LDA BEGIN+1
6744  4CA5- 85 98              STA MANT
6745  4CA7- 60                 RTS
6746                   *
6747                   *
6748                   * ADD STEP TO MANT
6749                   *
6750  4CA8- A5 97      ADDSTP  LDA MANT-1
6751  4CAA- 18                 CLC
6752  4CAB- 65 B2              ADC STEP
6753  4CAD- 85 97              STA MANT-1
6754  4CAF- 90 02              BCC ARTS
6755  4CB1- E6 98              INC MANT
6756  4CB3- 60         ARTS    RTS
6757                   *
6758                   *
6759                   * COMPARE THE TWO INDICES
6760                   * Z-FLAG SET OF EQUAL
6761                   *
6762  4CB4- A5 58      CMPX    LDA TEMP1
6763  4CB6- C5 5A              CMP TEMP8
6764  4CB8- D0 04              BNE CRTS

----------------------------------------------------------------------

GRAPHIC BASIC - FILE HANDLING      30/03/18   R65 ASSEMBLER  PAGE 47

6765  4CBA- A5 59              LDA TEMP1+1
6766  4CBC- C5 5B              CMP TEMP8+1
6767  4CBE- 60         CRTS    RTS
6768                   *
6769                   *
6770                   * INCREMENT TEMP8 1 OR 2
6771                   *
6772  4CBF- 20 C2 4C   BUPX2   JSR BUPX1
6773  4CC2- E6 5A      BUPX1   INC TEMP8
6774  4CC4- D0 02              BNE BRTS
6775  4CC6- E6 5B              INC TEMP8+1
6776  4CC8- 60         BRTS    RTS
6777                   *
6778                   *
6779                   * GET A CHAR, SET Z FLAG
6780                   *
6781  4CC9- A0 00      GRAB    LDY =0
6782  4CCB- E6 A9              INC PC
6783  4CCD- D0 02              BNE GR10
6784  4CCF- E6 AA              INC PC+1
6785  4CD1- B1 A9      GR10    LDA (PC),Y
6786  4CD3- 60                 RTS
6787                   *
6788                   *
6789                   * TABLE OF TOKENS
6790                   *
6791  4CD4- B4         TOKEN   BYT $B4         THEN
6792  4CD5- 89                 BYT $89         GOTO
6793  4CD6- 8D                 BYT $8D         GOSUB
6794  4CD7- 8C                 BYT $8C         RESTORE
6795                   *
6796                           TIT GRAPHIC BASIC - GRAPHPACK
6797                           PAG

----------------------------------------------------------------------

GRAPHIC BASIC - GRAPHPACK          30/03/18   R65 ASSEMBLER  PAGE 48

6798                   *
6799                   **************************
6800                   * R65 SYSTEM GRAPHPACK 2 *
6801                   **************************
6802                   *
6803                   * VERSION FOR R65 GRAPHIC BASIC V6.2
6804                   *
6805                   * SUBROUTINES FOR GRAPHIC DISPLAY ON THE R65
6806                   * VIDEO INTERFACE
6807                   *
6808                   * INIT          INITIALIZE GRAPHIC DISPLAY AND
6809                   *               CRT MEMORY
6810                   * CLEAR         CLEAR GRAPHIC DISPLAY AND SET
6811                   *               GRAPHIC CURSOR TO (0/0)
6812                   * MOVE (X,Y)    MOVE GRAPHIC CURSOR TP (X,Y)
6813                   * PLOT (X,Y)    PLOT A DOT AT (X,Y) AND MOVE
6814                   *               GRAPHICS CURSOR
6815                   * DRAW (X,Y)    DRAW A STRAIGHT LINE FROM THE
6816                   *               CURRENT POSITION OF THE GRAPHIC
6817                   *               CURSOR TO (X,Y) AND MOVE THE
6818                   *               GRAPHIC CURSOR
6819                   * CHAR (A)      SET STANDARD UPPER CASE ASCII
6820                   *               CHAR IN A TO CURRENT POSITION
6821                   *               OF THE GRAPHIC CURSOR, INCRE-
6822                   *               MENT THE X-POSITION BY 8
6823                   *               8*8 MATRIX IS USED
6824                   *
6825                   * COORDINATES:
6826                   *
6827                   * THE (0/0) IS IN THE UPPER LEFT, INCREMENTING
6828                   * X TO THE RIGHT, INCREMENTING Y DOWN. IN GRAPHI
6829                   * BASIC, INCREMENTING Y GOES UP
6830                   *
6831                   * 0 <= X <= 223         0 <= Y <= 117
6832                   *
6833                   * COORDINATES, WHICH EXCEED THE LIMITS, ARE
6834                   * TRUNCATED TO THE MAXIMAL VALUE
6835                   *
6836                   *
6837                   * PLOT MODE FLAG: (PRESET TO 0 BY INIT)
6838                   * BIT 7:        0 PLOT WHITE
6839                   *               1 PLOT BLACK
6840                   * BIT 6:        0 NORMAL DRAWING MODE
6841                   *                1 EXCLUSIVE OR DRAWING
6842                   *
6843                   *
6844                   *
6845                   *
6846                   *
6847                   VIPNT2  EQU $EB         SECOND VIDEO POINTER

----------------------------------------------------------------------

GRAPHIC BASIC - GRAPHPACK          30/03/18   R65 ASSEMBLER  PAGE 49

6848                   *
6849                   *
6850                   * CALLS TO SYSTEM SUBROUTINES
6851                   *****************************
6852                   *
6853  4CD8- 4C 45 E2   FILL    JMP $E245
6854                   *
6855                   *
6856                   * INIT
6857                   ******
6858                   * CONFIGURE VIDEO MEMORY FOR SWAPPED ALPHA
6859                   * AND GRAPHICS DISPLAY, SET THE GRAPHIC
6860                   * CURSOR TP (0/0)AND CLEAR THE GRAPHIC MEMORY
6861                   *
6862                   *
6863  4CDB- 20 1E E0   INITP   JSR IGRAPH
6864                   *
6865  4CDE- A9 07              LDA =$07
6866  4CE0- 85 B8              STA GRPAGE
6867  4CE2- A9 00              LDA =0
6868  4CE4- 85 AB              STA PLMODE      CLEAR MODE FLAGS
6869                   *
6870                   *
6871                   * CLEAR
6872                   *******
6873                   * CLEAR GRAPHIC DISPLAY AND MOVE GRAPHIC
6874                   * CURSOR TO (0/0)
6875                   *
6876  4CE6- AD 80 17   CLEARP  LDA VFLAG
6877  4CE9- 29 20              AND =$20
6878  4CEB- D0 01              BNE *+3
6879  4CED- 60                 RTS
6880  4CEE- A5 B8              LDA GRPAGE
6881  4CF0- A8                 TAY
6882  4CF1- 18                 CLC
6883  4CF2- 69 0C              ADC =$C         12 PAGES GRAPHIC
6884  4CF4- A2 E8              LDX =$E8
6885  4CF6- 86 EB              STX VIPNT2
6886  4CF8- 85 EC              STA VIPNT2+1
6887  4CFA- A9 00              LDA =0
6888  4CFC- AA                 TAX
6889  4CFD- 20 D8 4C          JSR FILL
6890  4D00- A0 75              LDY =117
6891  4D02- A2 00              LDX =0
6892  4D04- 84 AF              STY YCURS
6893  4D06- 86 AE              STX XCURS
6894  4D08- 60                 RTS
6895                   *
6896                   *
6897                   * MOVE (X,Y)

----------------------------------------------------------------------

GRAPHIC BASIC - GRAPHPACK          30/03/18   R65 ASSEMBLER  PAGE 50

6898                   ************
6899                   * MOVE GRAPHIC CURSOR TO X,Y. TEST DISPLAY
6900                   * LIMITS
6901                   *
6902  4D09- 20 11 4D   MOVEP   JSR LIMIT
6903  4D0C- 86 AE              STX XCURS
6904  4D0E- 84 AF              STY YCURS
6905  4D10- 60                 RTS
6906                   *
6907                   *
6908  4D11- E0 E0      LIMIT   CPX =224
6909  4D13- 90 02              BCC *+4
6910  4D15- A2 DF              LDX =223
6911  4D17- C0 76              CPY =118
6912  4D19- 90 02              BCC *+4
6913  4D1B- A0 75              LDY =117
6914  4D1D- 60                 RTS
6915                   *
6916                   *
6917                   * PLOT (X,Y)
6918                   ************
6919                   * MOVE GRAPHIC CURSOR TO (X,Y), TEST DISPLAY
6920                   * LIMITS AND SET THE DOT AT (X,Y)
6921                   *
6922  4D1E- 20 09 4D   PLOTP   JSR MOVEP
6923  4D21- 8E AE 03           STX GRX
6924  4D24- 8C AF 03           STY GRY
6925  4D27- A5 AB              LDA PLMODE
6926  4D29- 8D B0 03           STA GRC
6927  4D2C- 4C 15 C8           JMP EPLOT
6928                   *
6929                   *
6930                   * DRAW (X,Y)
6931                   ************
6932                   * DRAW A LINE FROM CURRENT POSITION OF THE
6933                   * GRAPHIC CURSOR TO (X,Y). SET GRAPHIC
6934                   * CURSOR TO X,Y.
6935                   *
6936  4D2F- A5 AE      DRAWP   LDA XCURS       OLD CURSOR TO GRX,GRY
6937  4D31- 8D AE 03           STA GRX
6938  4D34- A5 AF              LDA YCURS
6939  4D36- 8D AF 03           STA GRY
6940                   *
6941  4D39- 20 09 4D           JSR MOVEP
6942  4D3C- A5 AB              LDA PLMODE
6943  4D3E- 8D B0 03           STA GRC
6944  4D41- 8A                 TXA
6945  4D42- CD AE 03           CMP GRX         SAME X?
6946  4D45- D0 1E              BNE DRAW2
6947                   *

----------------------------------------------------------------------

GRAPHIC BASIC - GRAPHPACK          30/03/18   R65 ASSEMBLER  PAGE 51

6948  4D47- 98                 TYA
6949  4D48- 38                 SEC
6950  4D49- ED AF 03           SBC GRY
6951  4D4C- 90 09              BCC DRAW1       SKIP IF NEW Y LOWER
6952                   *
6953  4D4E- 8D B1 03           STA GRN         NUMBER OF POINTS
6954  4D51- EE B1 03           INC GRN
6955  4D54- 4C 21 C8           JMP EDRAWY
6956                   *
6957  4D57- 49 FF      DRAW1   EOR =$FF
6958  4D59- 18                 CLC
6959  4D5A- 69 02              ADC =2
6960  4D5C- 8D B1 03           STA GRN
6961  4D5F- 8C AF 03           STY GRY
6962  4D62- 4C 21 C8           JMP EDRAWY
6963                   *
6964  4D65- 98         DRAW2   TYA
6965  4D66- CD AF 03           CMP GRY         SAME Y
6966  4D69- D0 1E              BNE DRAW4
6967  4D6B- 8A                 TXA
6968  4D6C- 38                 SEC
6969  4D6D- ED AE 03           SBC GRX
6970  4D70- 90 09              BCC DRAW3       SKIP,IF NEW X LOWER
6971                   *
6972  4D72- EE B1 03           INC GRN
6973  4D75- 8D B1 03           STA GRN
6974  4D78- 4C 1E C8           JMP EDRAWX
6975                   *
6976  4D7B- 49 FF      DRAW3   EOR =$FF
6977  4D7D- 18                 CLC
6978  4D7E- 69 02              ADC =2
6979  4D80- 8D B1 03           STA GRN
6980  4D83- 8E AE 03           STX GRX
6981  4D86- 4C 1E C8           JMP EDRAWX
6982                   *
6983  4D89- A9 00      DRAW4   LDA =0
6984  4D8B- 85 B1              STA XINCR+1
6985  4D8D- 85 B3              STA YINCR+1
6986  4D8F- 8A                 TXA             BOTH X AND Y DIFF
6987  4D90- 38                 SEC
6988  4D91- ED AE 03           SBC GRX
6989  4D94- 85 B0              STA XINCR
6990  4D96- B0 02              BCS DRAW5
6991  4D98- C6 B1              DEC XINCR+1
6992  4D9A- 98         DRAW5   TYA
6993  4D9B- 38                 SEC
6994  4D9C- ED AF 03           SBC GRY
6995  4D9F- 85 B2              STA YINCR
6996  4DA1- B0 02              BCS DRAW6
6997  4DA3- C6 B3              DEC YINCR+1

----------------------------------------------------------------------

GRAPHIC BASIC - GRAPHPACK          30/03/18   R65 ASSEMBLER  PAGE 52

6998  4DA5- A9 80      DRAW6   LDA =$80        ROUNDING POSITIONS
6999  4DA7- 85 B4              STA XLOW
7000  4DA9- 85 B5              STA YLOW
7001  4DAB- A9 00              LDA =0
7002  4DAD- 8D B1 03           STA GRN
7003  4DB0- AD AE 03           LDA GRX
7004  4DB3- 85 84              STA TEMP6
7005  4DB5- AD AF 03           LDA GRY
7006  4DB8- 85 85              STA TEMP6+1
7007  4DBA- 20 15 C8           JSR EPLOT       PLOT FIRST DOT
7008  4DBD- 18         DRAW7   CLC
7009  4DBE- A5 B4              LDA XLOW
7010  4DC0- 65 B0              ADC XINCR
7011  4DC2- 85 B4              STA XLOW
7012  4DC4- AD AE 03           LDA GRX
7013  4DC7- 65 B1              ADC XINCR+1
7014  4DC9- 8D AE 03           STA GRX
7015  4DCC- 18                 CLC
7016  4DCD- A5 B5              LDA YLOW
7017  4DCF- 65 B2              ADC YINCR
7018  4DD1- 85 B5              STA YLOW
7019  4DD3- AD AF 03           LDA GRY
7020  4DD6- 65 B3              ADC YINCR+1
7021  4DD8- 8D AF 03           STA GRY
7022                   *
7023  4DDB- AD AE 03           LDA GRX         PLOT ONLY IF CHANGE
7024  4DDE- C5 84              CMP TEMP6
7025  4DE0- D0 07              BNE DRAW8
7026  4DE2- AD AF 03           LDA GRY
7027  4DE5- C5 85              CMP TEMP6+1
7028  4DE7- F0 0D              BEQ DRAW9       BOTH EQUAL, DON'T PLOT
7029                   *
7030  4DE9- AD AE 03   DRAW8   LDA GRX
7031  4DEC- 85 84              STA TEMP6
7032  4DEE- AD AF 03           LDA GRY
7033  4DF1- 85 85              STA TEMP6+1
7034  4DF3- 20 15 C8           JSR EPLOT       PLOT NEXT 256 DOTS
7035                   *
7036  4DF6- CE B1 03   DRAW9   DEC GRN
7037  4DF9- D0 C2              BNE DRAW7
7038                   *
7039  4DFB- 60                 RTS
7040                   *
7041                   *
7042                   * CHAR0 (A)
7043                   ***********
7044                   * SET STANDARD UPPER CASE ASCII CHAR I A
7045                   * TO THE CURRENT POSITION OF THE GRAPHIC
7046                   * CURSOR, THEN MOVE 8 POSITIONS RIGHT
7047                   *

----------------------------------------------------------------------

GRAPHIC BASIC - GRAPHPACK          30/03/18   R65 ASSEMBLER  PAGE 53

7048  4DFC- A6 AE      CHAR0   LDX XCURS
7049  4DFE- E0 D8             CPX =216
7050  4E00- 90 02              BCC *+4
7051  4E02- A2 D7              LDX =215
7052  4E04- A4 AF              LDY YCURS
7053  4E06- C0 6E              CPY =110
7054  4E08- 90 02              BCC *+4
7055  4E0A- A0 6D              LDY =109
7056                   *
7057  4E0C- 8E AE 03           STX GRX
7058  4E0F- 8C AF 03           STY GRY
7059  4E12- 8D B0 03           STA GRC
7060  4E15- 8A                 TXA
7061  4E16- 18                 CLC
7062  4E17- 69 08              ADC =8
7063  4E19- C9 D8              CMP =216
7064  4E1B- 90 02              BCC *+4
7065  4E1D- A9 D7              LDA =215
7066  4E1F- 85 AE              STA XCURS
7067  4E21- 4C 18 C8           JMP EPLOTCH
7068                   *
7069                   *
7070                   * NLOAD
7071                   *******
7072                   * NEW LOAD - ALSO LOADS PROGRAM FROM OPEN
7073                   * SEQUENTIAL FILE, IF CALLED LOAD #D1;
7074                   * WHERE D1 IS A FILE OPEN FOR READ
7075                   *
7076  4E24- C9 23      NLOAD   CMP ='#'        IS IT A OPEN DEVICE?
7077  4E26- F0 03              BEQ *+5
7078  4E28- 4C FB 41           JMP LOAD        NO, LOAD BINARY FILE
7079                   *
7080  4E2B- 20 1B 27           JSR FETCH1
7081  4E2E- 20 B3 45           JSR SETINP      SET INPUT DEVICE
7082  4E31- A9 2C      NLOAD1  LDA =$2C
7083  4E33- 85 06              STA INTEG+1
7084  4E35- 20 05 31           JSR INPUT2
7085  4E38- A5 07              LDA INBUFF      LOAD FIRST CHARACTER
7086  4E3A- F0 19              BEQ NLOADE      SKIP, IF EMPTY
7087  4E3C- A2 07              LDX =<INBUFF
7088  4E3E- A0 00              LDY =>INBUFF
7089  4E40- 86 A9              STX PC
7090  4E42- 84 AA              STY PC+1
7091  4E44- 20 1B 27           JSR FETCH1
7092  4E47- 20 AC 23           JSR INSL0
7093  4E4A- A9 2E              LDA ='.'        HEART BEAT
7094  4E4C- 20 C4 2F           JSR OUTCHR
7095  4E4F- 20 4B 24           JSR ADLNP0
7096  4E52- 4C 31 4E           JMP NLOAD1      NEXT LINE
7097                   *

----------------------------------------------------------------------

GRAPHIC BASIC - GRAPHPACK          30/03/18   R65 ASSEMBLER  PAGE 54

7098                   *
7099  4E55- 20 C2 30   NLOADE  JSR GETEND      RESET INPUT DEVICE
7100  4E58- A9 00              LDA =0          CLOSE ALL OPEN FILES
7101  4E5A- 20 43 45           JSR CLOSEBS     AND RETURN
7102  4E5D- 4C 7B 23           JMP WARMST
7103                   *
7104                   *
7105  4E60-                    END
LABELS=029D
ERRORS=00
RECORDS=35
