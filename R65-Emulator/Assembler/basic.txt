----------------------------------------------------------------------

GRAPHIC BASIC - GRAPHPACK          19/11/19   R65 ASSEMBLER  PAGE 01

0001                   * BASIC1:A ORIGINAL 7/1/1982, RECOVERED 3/2018
0002                   *
0003                   ******************************************
0004                   * R65 EXTENDED GRAPHIC BASIC VERSION 6.2 *
0005                   ******************************************
0006                   *
0007                   * VERSION 6.2 OPTIMIZED FOR R65 EMULATOR 2018
0008                   *
0009                           TIT GRAPHIC BASIC - VARIABLES
0010                   *
0011                   * PAGE ZERO VARIABLES
0012                   *
0013                           ORG 0
0014                   *
0015  0000-            OUTDEV  BSS 1   OUTPUT DEVICE NO (CRT=0)
0016  0001-            NUMPAD  BSS 1   NO OF PAD CHAR,CURR.DEV
0017  0002-            POS     BSS 1   POSITION IN LN, CURR.DEV.
0018                   *
0019  0003-            INBNUM  BSS 2   INPUT BUFFER NUMBER
0020  0005-            INTEG   BSS 2   INTEGER
0021  0007-            INBUFF  BSS 58  INPUT BUFFER
0022  0041-            CHRSAV  BSS 2   CHAR SAVE AND COMPARE
0023  0043-            INPNT   BSS 1   INPUT BUFFER POINTER
0024                   *
0025  0044-                    BSS 1
0026  0045-            RESTYP  BSS 2   CURRENT RESULT TYPE
0027  0047-            TEMP2   BSS 1   TEMPORARY
0028  0048-            FLAG1   BSS 1   ARRAY FLAG
0029  0049-            READFL  BSS 1   READ FLAG
0030  004A-                    BSS 1
0031  004B-                    BSS 1
0032  004C-            STRSTP  BSS 2   STRING STACK POINTER
0033  004E-                    BSS 1
0034  004F-            STRST   BSS 9   STRING STACK (3 LEVELS)
0035  0058-            TEMP1   BSS 2
0036  005A-            TEMP8   BSS 2
0037  005C-            TEMP9   BSS 5
0038                   *
0039  0061-            STPROG  BSS 2   START OF USER PROG
0040  0063-            STVAR   BSS 2   START OF VARIABLE TABLE
0041  0065-            EOVAR   BSS 2   END OF VARIABLE TABLE
0042  0067-            STSPAC  BSS 2   START OF AVAILABLE SPACE
0043  0069-            BTSTRG  BSS 2   BOTTOM OF STRINGS
0044  006B-            TPSTRG  BSS 2   TOP OF STRINGS
0045  006D-            TPMEM   BSS 2   TOP OF BASIC MEMORY
0046  006F-            LINE    BSS 2   CURRENT BASIC LINE
0047  0071-            LINSAV  BSS 2   SAVED LINE
0048  0073-            PNTSAV  BSS 2   SAVED BASIC POINTER
0049  0075-            TEMP7   BSS 2
0050  0077-            DATPNT  BSS 2   DATA POINTER

----------------------------------------------------------------------

GRAPHIC BASIC - VARIABLES          19/11/19   R65 ASSEMBLER  PAGE 02

0051  0079-            DTSPNT  BSS 2   DATA STATEMENT PONTER
0052  007B-            VARSYM  BSS 2   CURRENT VARIABLE SYMBOL
0053  007D-            VARSTP  BSS 2   CURRENT VAR STRING P
0054  007F-            TEMP3   BSS 2
0055                   *
0056  0081-                    BSS 1
0057  0082-                    BSS 1
0058  0083-            LOGIC   BSS 1   LOGIC OPERATOR
0059  0084-            TEMP6   BSS 2
0060  0086-            TEMP5   BSS 2
0061  0088-                    BSS 1
0062  0089-            SIZE    BSS 1   VARIABLE SIZE
0063  008A-                    BSS 1   SET TO 4C FOR BFUNC
0064  008B-            PNT1    BSS 2   POINTER
0065  008D-                    BSS 1
0066                   *
0067                   * BLLOCK AREA
0068                   *
0069  008E-            ENDB    BSS 2   END OF BLOCK
0070  0090-            BEGINB  BSS 2   BEGIN OF BLOCK
0071  0092-                    BSS 1
0072  0093-            POINTC  BSS 1   CURRENT DIGITS AFTER DEC.P.
0073  0094-            CURREX  BSS 1   CURRENT EXP IN NUMBER
0074  0095-            TRANSP  BSS 2   TRANSFER POINTER
0075                   *
0076                   * FLP ACCU
0077                   *
0078  0097-            EXP     BSS 1   EXPONENT
0079  0098-            MANT    BSS 4   MANTISSA
0080  009C-            SIGN    BSS 1   SIGN OF MANTISSA
0081                   *
0082  009D-            CURRSG  BSS 1   CURRENT SIGN IN NUMBER
0083  009E-                    BSS 1
0084  009F-            DYADIC  BSS 10  DYADIC HOLDING AREA
0085                   *
0086  00A9-            PC      BSS 2   PROGRAM COUNTER
0087  00AB-            PLMODE  BSS 1   PLOT MODE FLAG
0088  00AC-            GRPNT   BSS 2   GRAPHIC POINTER
0089  00AE-            XCURS   BSS 1   CRAPHICS CUSROR
0090  00AF-            YCURS   BSS 1
0091  00B0-            XINCR   BSS 2   LINE DRAWING INCR
0092  00B2-            YINCR   BSS 2
0093  00B4-            XLOW    BSS 1   LINE DRAWING ROUND REG
0094  00B5-            YLOW    BSS 1
0095  00B6-            GRCNT   BSS 1   GRAPHIC COUNTER
0096  00B7-            LENGHT  BSS 1   LINE LENGTH ESTIMATE
0097  00B8-            GRPAGE  BSS 1   GRAPHICS PAGE HIGH PNT
0098  00B9-            PVECT   BSS 2   PRINT VECTOR
0099  00BB-            POSTB   BSS 4   POSITION REGISTER SAVE
0100  00BF-            SAVEXY  BSS 2   REGISTER SAVE

----------------------------------------------------------------------

GRAPHIC BASIC - VARIABLES          19/11/19   R65 ASSEMBLER  PAGE 03

0101  00C1-            INPDEV  BSS 1   INPUT DEVICE
0102  00C2-            AUTOIN  BSS 1   AUTO INCREMENT
0103  00C3-            AFILNO  BSS 1   CODE OF ACTIVE FILE
0104  00C4-            IVECT   BSS 2   INPUT VECTOR
0105  00C6-            ISAVXY  BSS 2   SAVE X,Y FOR INCHR
0106  00C8-            FORMCS  BSS 1   SAVED FORMATTING CODE
0107  00C9-            FORMCD  BSS 1   FORMATTYIONG CODE
0108  00CA-            FORMNO  BSS 1   FORMATTING NUMBER
0109  00CB-            FORMFL  BSS 1   FORMATTING FIELD LENGTH
0110  00CC-            FORMCT  BSS 1   FORMATTING COUNTER
0111  00CD-            OUTSAV  BSS 1   FILE NO FOR OUT
0112  00CE-            TEMP4   BSS 3
0113  00D1-            RNDVAL  BSS 5   RANDOM VARIABLE
0114                   *
0115                           PAG

----------------------------------------------------------------------

GRAPHIC BASIC - VARIABLES          19/11/19   R65 ASSEMBLER  PAGE 04

0116                   *
0117                   * R65 MONITOR VARIABLES
0118                   *
0119                   FILFLG  EQU $DA
0120                   FILDRV  EQU $DC
0121                   VIDPNT  EQU $E9
0122                   CURPOS  EQU $EE
0123                   FILNAM  EQU $0301
0124                   FILCYC  EQU $0311
0125                   FILSTP  EQU $0312
0126                   FILLOC  EQU $0313
0127                   FILSA   EQU $031A
0128                   FILEA   EQU $031C
0129                   FILNM1  EQU $0320
0130                   FILCY1  EQU $0330
0131                   FILSA1  EQU $0331
0132                   CURSEQ  EQU $0335
0133                   MAXSEQ  EQU $0336
0134                   FILBU1  EQU $0338
0135                   FIDRTB  EQU $0339
0136                   FIDVTB  EQU $0341
0137                   FIRCTB  EQU $0351
0138                   GRX     EQU $03AE
0139                   GRY     EQU $03AF
0140                   GRC     EQU $03B0
0141                   GRN     EQU $03B1
0142                   VFLAG   EQU $1780
0143                   SFLAG   EQU $1781
0144                   CHARREG EQU $1785
0145                   NUMLIN  EQU $1789
0146                   NUMCHR  EQU $178A
0147                   VAUTOP  EQU $178C
0148                   CNTL30  EQU $17F2
0149                   *
0150  00D6-                    ORG $0380
0151                   *
0152  0380-            FISYTB  BSS 8           SYMBOLIC FLE NAMES
0153                   BUFFER  EQU $C000       BUFFER FOR RENUMBERING
0154                   *
0155                   * INTERFACE CONTROL
0156                   *
0157                   PORTB1  EQU $1400
0158                   EMUCOM  EQU $1430
0159                   MULTA   EQU $14E0       HARDWARE MULTIPLY
0160                   MULTB   EQU $14E1
0161                   MULTR   EQU $14E2
0162                   TAPAOF  EQU $14E5
0163                   TAPBOF  EQU $14E7
0164                   USPAD   EQU $1700
0165                   *

----------------------------------------------------------------------

GRAPHIC BASIC - VARIABLES          19/11/19   R65 ASSEMBLER  PAGE 05

0166                           TIT GRAPHIC BASIC- CONFIGURATION
0167                           PAG

----------------------------------------------------------------------

GRAPHIC BASIC- CONFIGURATION       19/11/19   R65 ASSEMBLER  PAGE 06

0168                   * START OF PROGRAM
0169                   *
0170  0388-                    ORG $2000
0171                   *
0172                   * ENTRY VECTORS:
0173                   *
0174  2000- 4C 55 29           JMP COLDST
0175  2003- 4C 7B 23           JMP WARMST
0176                   *
0177                   * BASIC USER RAM MEMORY
0178                   *
0179  2006- FF 4F      STRRAM  WRD $4FFF       START OF USER RAM
0180  2008- FF BF      ENDRAM  WRD $BFFF       END OF USER AREA
0181                   *
0182                   *
0183                   * MONITOR SUBROUTINE VECTORS
0184                   ****************************
0185                   * PART 1: MAIN EPROM ROUTINES (NO JMP)
0186                   *
0187                   GETKEY  EQU $E000
0188                   GETCHR  EQU $E003
0189                   GETLIN  EQU $E006
0190                   PRTCHR  EQU $E009
0191                   LOCRM   EQU $E00F
0192                   ICRTAL  EQU $E015
0193                   ICRTGR  EQU $E018
0194                   IGRAPH  EQU $E01E
0195                   PRTRSA  EQU $E836
0196                   *
0197                   PRTTTY  EQU $1EA0
0198                   GETTTY  EQU $1E5A
0199                   RDFILE  EQU $E815
0200                   WRFILE  EQU $E81B
0201                   DELETE  EQU $F00C
0202                   OPEN    EQU $F00F
0203                   CLOSE   EQU $F012
0204                   CLOSAL  EQU $F015
0205                   READCH  EQU $F018
0206                   WRITCH  EQU $F01B
0207                   *
0208                   EPLOT   EQU $C815
0209                   EPLOTCH EQU $C818
0210                   EBITMAP EQU $C81B
0211                   EDRAWX  EQU $C81E
0212                   EDRAWY  EQU $C821
0213                   EDRAWXY EQU $C824
0214                   *
0215                   * PART 2: OTHER EPROM SUBROUTINES
0216                   *
0217  200A- 4C 31 E2   CLRGRA  JMP $E231

----------------------------------------------------------------------

GRAPHIC BASIC- CONFIGURATION       19/11/19   R65 ASSEMBLER  PAGE 07

0218  200D- 4C 2E E5   GETLIN0 JMP $E52E
0219  2010- 4C BE ED   TDIR    JMP $EDBE
0220  2013- 4C 09 F0   DDIR    JMP $F009
0221  2016- 4C A1 F9   ADAPT   JMP $F9A1
0222  2019- 4C 28 FD   DIRECT  JMP $FD28
0223                   *
0224                   * ALPHAD: GO TO ALPHA DISPLAY, X SAVED
0225                   *
0226  201C- AD 80 17   ALPHAD  LDA VFLAG
0227  201F- 29 40              AND =$40
0228  2021- F0 0A              BEQ *+12
0229  2023- 8A                 TXA
0230  2024- 48                 PHA
0231  2025- 20 15 E0           JSR ICRTAL
0232  2028- 20 0F E0           JSR LOCRM
0233  202B- 68                 PLA
0234  202C- AA                 TAX
0235  202D- 60                 RTS
0236                   *
0237                   *
0238                   * BREAK TEST
0239                   *
0240  202E- AD 81 17   BREAKT  LDA SFLAG
0241  2031- 30 01              BMI *+3
0242  2033- 60                 RTS
0243  2034- 29 7F              AND =$7F
0244  2036- 8D 81 17           STA SFLAG
0245  2039- 38                 SEC
0246  203A- 4C 2F 27           JMP END+3
0247                   *
0248                           TIT GRAPHIC BASIC - STRING TABLES
0249                           PAG

----------------------------------------------------------------------

GRAPHIC BASIC - STRING TABLES      19/11/19   R65 ASSEMBLER  PAGE 08

0250                   *
0251                   * TABLE OF COMMAND STRINGS
0252                   *
0253  203D- 46 4F 52   COMSTB  BYT 'FORMAT'+128
0253  2040- 4D 41 D4 
0254  2043- 46 4F D2           BYT 'FOR'+128
0255  2046- 4E 45 58           BYT 'NEXT'+128
0255  2049- D4 
0256  204A- 44 41 54           BYT 'DATA'+128
0256  204D- C1 
0257  204E- 45 4E C4           BYT 'END'+128
0258  2051- 49 4E 50           BYT 'INPUT'+128
0258  2054- 55 D4 
0259  2056- 44 49 CD           BYT 'DIM'+128
0260  2059- 52 45 41           BYT 'READ'+128
0260  205C- C4 
0261  205D- 4C 45 D4           BYT 'LET'+128
0262  2060- 47 4F 54           BYT 'GOTO'+128
0262  2063- CF 
0263  2064- 52 55 CE           BYT 'RUN'+128
0264  2067- 49 C6              BYT 'IF'+128
0265  2069- 52 45 53           BYT 'RESTORE'+128
0265  206C- 54 4F 52 
0265  206F- C5 
0266  2070- 47 4F 53           BYT 'GOSUB'+128
0266  2073- 55 C2 
0267  2075- 52 45 54           BYT 'RETURN'+128
0267  2078- 55 52 CE 
0268  207B- 52 45 CD           BYT 'REM'+128
0269  207E- 53 54 4F           BYT 'STOP'+128
0269  2081- D0 
0270  2082- 4F CE              BYT 'ON'+128
0271  2084- 57 41 49           BYT 'WAIT'+128
0271  2087- D4 
0272  2088- 4C 4F 41           BYT 'LOAD'+128
0272  208B- C4 
0273  208C- 53 54 4F           BYT 'STORE'+128
0273  208F- 52 C5 
0274  2091- 52 45 CE           BYT 'REN'+128
0275  2094- 44 45 C6           BYT 'DEF'+128
0276  2097- 50 4F 4B           BYT 'POKE'+128
0276  209A- C5 
0277  209B- 4F 55 D4           BYT 'OUT'+128
0278  209E- 50 52 49           BYT 'PRINT'+128
0278  20A1- 4E D4 
0279  20A3- 43 4F 4E           BYT 'CONT'+128
0279  20A6- D4 
0280  20A7- 4C 49 53           BYT 'LIST'+128
0280  20AA- D4 
0281  20AB- 43 4C D2           BYT 'CLR'+128

----------------------------------------------------------------------

GRAPHIC BASIC - STRING TABLES      19/11/19   R65 ASSEMBLER  PAGE 09

0282  20AE- 4D 45 52           BYT 'MERGE'+128
0282  20B1- 47 C5 
0283  20B3- 53 59 D3           BYT 'SYS'+128
0284  20B6- 4F 50 45           BYT 'OPEN'+128
0284  20B9- CE 
0285  20BA- 43 4C 4F           BYT 'CLOSE'+128
0285  20BD- 53 C5 
0286  20BF- 47 45 D4           BYT 'GET'+128
0287  20C2- 4E 45 D7           BYT 'NEW'+128
0288  20C5- 43 4F 50           BYT 'COPY'+128
0288  20C8- D9 
0289  20C9- 46 49 4C           BYT 'FILES'+128
0289  20CC- 45 D3 
0290  20CE- 50 4C 4F           BYT 'PLOT'+128
0290  20D1- D4 
0291  20D2- 4D 4F 56           BYT 'MOVE'+128
0291  20D5- C5 
0292  20D6- 44 52 41           BYT 'DRAW'+128
0292  20D9- D7 
0293  20DA- 41 55 54           BYT 'AUTO'+128
0293  20DD- CF 
0294  20DE- 44 49 D2           BYT 'DIR'+128
0295  20E1- 53 43 41           BYT 'SCALE'+128
0295  20E4- 4C C5 
0296  20E6- 44 45 4C           BYT 'DELETE'+128
0296  20E9- 45 54 C5 
0297  20EC- 50 41 43           BYT 'PACK'+128
0297  20EF- CB 
0298  20F0- 4D 41 D4           BYT 'MAT'+128
0299  20F3- FF                 BYT $FF
0300  20F4- FF                 BYT $FF
0301                   *
0302                   * TABLE OF OTHER TOKENS
0303                   *
0304  20F5- 54 41 42           BYT 'TAB('+128
0304  20F8- A8 
0305  20F9- 54 CF              BYT 'TO'+128
0306  20FB- 46 CE              BYT 'FN'+128
0307  20FD- 53 50 43          BYT 'SPC('+128
0307  2100- A8 
0308  2101- 54 48 45           BYT 'THEN'+128
0308  2104- CE 
0309  2105- 4E 4F D4           BYT 'NOT'+128
0310  2108- 53 54 45           BYT 'STEP'+128
0310  210B- D0 
0311  210C- AB                 BYT '+'+128
0312  210D- AD                 BYT '-'+128
0313  210E- AA                 BYT '*'+128
0314  210F- AF                 BYT '/'+128
0315  2110- DE                 BYT '^'+128

----------------------------------------------------------------------

GRAPHIC BASIC - STRING TABLES      19/11/19   R65 ASSEMBLER  PAGE 10

0316  2111- 41 4E C4           BYT 'AND'+128
0317  2114- 4F D2              BYT 'OR'+128
0318  2116- BE                 BYT '>'+128
0319  2117- BD                 BYT '='+128
0320  2118- BC                 BYT '<'+128
0321  2119- 53 47 CE           BYT 'SGN'+128
0322  211C- 49 4E D4           BYT 'INT'+128
0323  211F- 41 42 D3           BYT 'ABS'+128
0324  2122- 55 53 D2           BYT 'USR'+128
0325  2125- 53 54 C1           BYT 'STA'+128
0326  2128- 50 4F D3           BYT 'POS'+128
0327  212B- 53 51 D2           BYT 'SQR'+128
0328  212E- 52 4E C4           BYT 'RND'+128
0329  2131- 4C 4F C7           BYT 'LOG'+128
0330  2134- 45 58 D0           BYT 'EXP'+128
0331  2137- 43 4F D3           BYT 'COS'+128
0332  213A- 53 49 CE           BYT 'SIN'+128
0333  213D- 54 41 CE           BYT 'TAN'+128
0334  2140- 41 54 CE           BYT 'ATN'+128
0335  2143- 50 45 45           BYT 'PEEK'+128
0335  2146- CB 
0336  2147- 4C 45 CE           BYT 'LEN'+128
0337  214A- 53 54 52           BYT 'STR$'+128
0337  214D- A4 
0338  214E- 56 41 CC           BYT 'VAL'+128
0339  2151- 41 53 C3           BYT 'ASC'+128
0340  2154- 43 48 52           BYT 'CHR$'+128
0340  2157- A4 
0341  2158- 4C 45 46           BYT 'LEFT$'+128
0341  215B- 54 A4 
0342  215D- 52 49 47           BYT 'RIGHT$'+128
0342  2160- 48 54 A4 
0343  2163- 4D 49 44           BYT 'MID$'+128
0343  2166- A4 
0344  2167- 50 C9              BYT 'PI'+128
0345  2169- 00                 BYT 0
0346                   *
0347                   *
0348                   * COMMAND VECTORS
0349                   *
0350  216A- B8 49      STVECT  WRD FORMAT-1
0351  216C- 07 30              WRD FOR-1
0352  216E- 80 32              WRD NEXT-1
0353  2170- EF 27              WRD DATA-1
0354  2172- 2B 27              WRD END-1
0355  2174- C5 30              WRD INPUT-1
0356  2176- F0 39              WRD DIM-1
0357  2178- 3E 31              WRD READ-1
0358  217A- 4C 2A              WRD LET-1
0359  217C- 9D 27              WRD GOTO-1

----------------------------------------------------------------------

GRAPHIC BASIC - STRING TABLES      19/11/19   R65 ASSEMBLER  PAGE 11

0360  217E- 78 27              WRD RUN-1
0361  2180- 28 2A              WRD IF-1
0362  2182- 51 27              WRD RESTOR-1
0363  2184- 80 27              WRD GOSUB-1
0364  2186- CF 27              WRD RETURN-1
0365  2188- 3B 2A              WRD REMARK-1
0366  218A- 29 27              WRD STOP-1
0367  218C- 81 30              WRD ON-1
0368  218E- 93 43              WRD WAIT-1
0369  2190- 1B 4E              WRD NLOAD-1
0370  2192- 5C 41              WRD STORE-1
0371  2194- 34 4B              WRD RENUMB-1
0372  2196- 30 3C              WRD DEF-1
0373  2198- 14 3E              WRD POKE-1
0374  219A- E8 4A              WRD OUT-1
0375  219C- D9 2A              WRD PRINT-1
0376  219E- 0E 2A              WRD CONT-1
0377  21A0- E0 25              WRD LIST-1
0378  21A2- 73 27              WRD CLR-1
0379  21A4- 40 4A              WRD MERGE-1
0380  21A6- 4E 3E              WRD SYS-1
0381  21A8- 03 44              WRD OPENBS-1
0382  21AA- 3A 45              WRD CLOSEBS-1
0383  21AC- A4 30              WRD GET-1
0384  21AE- 89 25              WRD NEW-1
0385  21B0- 2F 46              WRD COPY-1
0386  21B2- B7 46              WRD FILES-1
0387  21B4- D1 42              WRD PLOT-1
0388  21B6- 23 43              WRD MOVE-1
0389  21B8- 2C 43              WRD DRAW-1
0390  21BA- B8 43              WRD AUTO-1
0391  21BC- 50 4A              WRD DIR-1
0392  21BE- BD 27              WRD UNDEFS-1    SCALE
0393  21C0- 68 4A              WRD DELBAS-1
0394  21C2- BD 27              WRD UNDEFS-1    PACK
0395  21C4- BD 27              WRD UNDEFS-1    MAT
0396                   *
0397                   *
0398                   * ERROR STRINGS:
0399                   *
0400  21C6- 4E 4F 20   ERRSTR   BYT 'NO MATCHING FOR'+128
0400  21C9- 4D 41 54 
0400  21CC- 43 48 49 
0400  21CF- 4E 47 20 
0400  21D2- 46 4F D2 
0401  21D5- 53 59 4E           BYT 'SYNTAX'+128
0401  21D8- 54 41 D8 
0402  21DB- 4E 4F 20           BYT 'NO MATCHING GOSUB'+128
0402  21DE- 4D 41 54 
0402  21E1- 43 48 49 

----------------------------------------------------------------------

GRAPHIC BASIC - STRING TABLES      19/11/19   R65 ASSEMBLER  PAGE 12

0402  21E4- 4E 47 20 
0402  21E7- 47 4F 53 
0402  21EA- 55 C2 
0403  21EC- 44 41 54           BYT 'DATA'+128
0403  21EF- C1 
0404  21F0- 51 55 41           BYT 'QUANTITY'+128
0404  21F3- 4E 54 49 
0404  21F6- 54 D9 
0405  21F8- 4F 56 45          BYT 'OVERFLOW'+128
0405  21FB- 52 46 4C 
0405  21FE- 4F D7 
0406  2200- 4F 55 54           BYT 'OUT OF MEMORY'+128
0406  2203- 20 4F 46 
0406  2206- 20 4D 45 
0406  2209- 4D 4F 52 
0406  220C- D9 
0407  220D- 55 4E 44           BYT 'UNDEF STATEMENT'+128
0407  2210- 45 46 20 
0407  2213- 53 54 41 
0407  2216- 54 45 4D 
0407  2219- 45 4E D4 
0408  221C- 55 4E 44           BYT 'UNDEF VARIABLE'+128
0408  221F- 45 46 20 
0408  2222- 56 41 52 
0408  2225- 49 41 42 
0408  2228- 4C C5 
0409  222A- 52 45 44           BYT 'REDIMENSION'+128
0409  222D- 49 4D 45 
0409  2230- 4E 53 49 
0409  2233- 4F CE 
0410  2235- 53 55 42           BYT 'SUBSCRIPT'+128
0410  2238- 53 43 52 
0410  223B- 49 50 D4 
0411  223E- 44 49 56           BYT 'DIVISION BY ZERO'+128
0411  2241- 49 53 49 
0411  2244- 4F 4E 20 
0411  2247- 42 59 20 
0411  224A- 5A 45 52 
0411  224D- CF 
0412  224E- 49 4C 4C           BYT 'ILLEGAL DIRECT'+128
0412  2251- 45 47 41 
0412  2254- 4C 20 44 
0412  2257- 49 52 45 
0412  225A- 43 D4 
0413  225C- 54 59 50           BYT 'TYPE MISSMATCH'+128
0413  225F- 45 20 4D 
0413  2262- 49 53 53 
0413  2265- 4D 41 54 
0413  2268- 43 C8 
0414  226A- 53 54 52           BYT 'STRING TOO LONG'+128

----------------------------------------------------------------------

GRAPHIC BASIC - STRING TABLES      19/11/19   R65 ASSEMBLER  PAGE 13

0414  226D- 49 4E 47 
0414  2270- 20 54 4F 
0414  2273- 4F 20 4C 
0414  2276- 4F 4E C7 
0415  2279- 46 4F 52           BYT 'FORMULA TOO COMPLEX'+128
0415  227C- 4D 55 4C 
0415  227F- 41 20 54 
0415  2282- 4F 4F 20 
0415  2285- 43 4F 4D 
0415  2288- 50 4C 45 
0415  228B- D8 
0416  228C- 43 4F 4E           BYT 'CONTINUE'+128
0416  228F- 54 49 4E 
0416  2292- 55 C5 
0417  2294- 55 4E 44           BYT 'UNDEF FUNCTION'+128
0417  2297- 45 46 20 
0417  229A- 46 55 4E 
0417  229D- 43 54 49 
0417  22A0- 4F CE 
0418                   *
0419                   * MESSAGE STRINGS:
0420                   *
0421  22A2- 20 45 52   ERRORM  BYT ' ERROR',0
0421  22A5- 52 4F 52 
0421  22A8- 00 
0422  22A9- 0D 0A 52           BYT $D,$A,'READY',$D,$A,0
0422  22AC- 45 41 44 
0422  22AF- 59 0D 0A 
0422  22B2- 00 
0423  22B3- 0D 0A 42           BYT $D,$A,'BREAK',0
0423  22B6- 52 45 41 
0423  22B9- 4B 00 
0424  22BB- 20 49 4E           BYT ' IN LINE',0
0424  22BE- 20 4C 49 
0424  22C1- 4E 45 00 
0425                   *
0426                           TIT GRAPHIC BASIC - EDITOR
0427                           PAG

----------------------------------------------------------------------

GRAPHIC BASIC - EDITOR             19/11/19   R65 ASSEMBLER  PAGE 14

0428                   *
0429                   * MKROOM: MAKE ROOM IN MEMORY
0430                   *****************************
0431                   * BEGINB AND ENDB DEFINE THE BLOCK. A MOVE IS
0432                   * DONE BETWEEN ENDB AND BTSTRG, IF ENOUGH
0433                   * FREE SPACE, INSERTION IS NOT DONE IN THIS
0434                   * SUBROUTINE. TEMP1 IS USED, ENDB MUST ALSO
0435                   * BE IN A,Y.
0436                   *
0437  22C4- 20 07 23   MKROOM  JSR TSROOM      ENOUGH EMPTY?
0438  22C7- 85 67              STA STSPAC
0439  22C9- 84 68              STY STSPAC+1
0440  22CB- 38                 SEC             COMPUTE SIZE TO TRANSF
0441  22CC- A5 90              LDA BEGINB
0442  22CE- E5 95              SBC TRANSP
0443  22D0- 85 58              STA TEMP1       SAVE IN Y AND TEMP1
0444  22D2- A8                 TAY
0445  22D3- A5 91              LDA BEGINB+1
0446  22D5- E5 96              SBC TRANSP+1
0447  22D7- AA                 TAX             SAVE IN X
0448  22D8- E8                 INX
0449  22D9- 98                 TYA
0450  22DA- F0 23              BEQ MKRM2       BRANCH IF SIZE LOW = 0
0451  22DC- A5 90              LDA BEGINB      SUBTRACT SIZE LOW FROM
0452  22DE- 38                 SEC             BEGINB AND RESTORE
0453  22DF- E5 58              SBC TEMP1
0454  22E1- 85 90              STA BEGINB
0455  22E3- B0 03              BCS *+5
0456  22E5- C6 91              DEC BEGINB+1
0457  22E7- 38                 SEC
0458  22E8- A5 8E              LDA ENDB        SAME FOR ENDB
0459  22EA- E5 58              SBC TEMP1
0460  22EC- 85 8E              STA ENDB
0461  22EE- B0 08              BCS MKRM1+4
0462  22F0- C6 8F              DEC ENDB+1
0463  22F2- 90 04              BCC MKRM1+4
0464                   *
0465  22F4- B1 90      MKRM1   LDA (BEGINB),Y  TRANSFER PARTIAL PAGE
0466  22F6- 91 8E              STA (ENDB),Y
0467  22F8- 88                 DEY
0468  22F9- D0 F9              BNE MKRM1
0469                   *
0470  22FB- B1 90              LDA (BEGINB),Y  TRANSFER FULL PAGES
0471  22FD- 91 8E              STA (ENDB),Y
0472  22FF- C6 91     MKRM2   DEC BEGINB+1
0473  2301- C6 8F              DEC ENDB+1
0474  2303- CA                 DEX             COUNT FULL PAGES
0475  2304- D0 F2              BNE MKRM1+4
0476  2306- 60                 RTS
0477                   *

----------------------------------------------------------------------

GRAPHIC BASIC - EDITOR             19/11/19   R65 ASSEMBLER  PAGE 15

0478                   *
0479                   * TSROOM: TEST FREE ROOM IN MEMORY
0480                   **********************************
0481                   * INPUT IA A,Y. STRINGS ARE PACKED ONLY IF NOT
0482                   * ENOUGH FREE SPACE. ERROR IF STRINGS PACKED
0483                   * AND STILL A,Y >= BTSTRG. 12 BYTES ON STACK
0484                   * AND SUBROUTINE PKSTRG USED
0485                   *
0486  2307- C4 6A      TSROOM  CPY BTSTRG+1    IF A,Y < BTSTRG
0487  2309- 90 FB              BCC TSROOM-1    THEN RETURN
0488  230B- D0 02              BNE *+4
0489  230D- C5 69              CMP BTSTRG
0490  230F- 90 F5              BCC TSROOM-1
0491                   *
0492  2311- 48                 PHA             ELSE PACK STRINGS
0493  2312- A2 09              LDX =9          SAVE A AND BLOCK AREA
0494  2314- 98                 TYA             AND Y
0495  2315- 48                 PHA
0496  2316- B5 8D              LDA ENDB-1,X
0497  2318- CA                 DEX
0498  2319- 10 FA              BPL *-4
0499                   *
0500  231B- 20 9A 2C           JSR PKSTRG      PACK STRINGS
0501                   *
0502  231E- A0 F7              LDY =$F7        RESTORE BLOCK AREA
0503  2320- 68                 PLA             AND Y
0504  2321- 95 97              STA TRANSP+2,X
0505  2323- E8                 INX
0506  2324- 30 FA              BMI *-4
0507  2326- 68                 PLA
0508  2327- A8                 TAY
0509  2328- 68                 PLA
0510                   *
0511  2329- C4 6A              CPY BTSTRG+1    ERROR,IF STILL A,Y
0512  232B- 90 06              BCC *+8         >= BTSTRG
0513  232D- D0 12              BNE OUTMEM
0514  232F- C5 69              CMP BTSTRG
0515  2331- B0 0E              BCS OUTMEM
0516  2333- 60                 RTS
0517                   *
0518                   *
0519                   * TSSTK: TEST STACK ROOM
0520                   ************************
0521                   * ERROR, IF NOT 2*A+$40 FREE BYTES ON STACK
0522                   *
0523  2334- 0A         TSSTK   ASL A
0524  2335- 69 40              ADC =$40
0525  2337- B0 08              BCS OUTMEM
0526  2339- 85 58              STA TEMP1
0527  233B- BA                 TSX

----------------------------------------------------------------------

GRAPHIC BASIC - EDITOR             19/11/19   R65 ASSEMBLER  PAGE 16

0528  233C- E4 58              CPX TEMP1
0529  233E- 90 01              BCC OUTMEM
0530  2340- 60                 RTS
0531                   *
0532                   *
0533  2341- A2 3A      OUTMEM  LDX =$3A        OUT OF MEMORY ERROR
0534                   *
0535                   *
0536                   * ERROR: PRINT ERROR MESSAGE
0537                   ****************************
0538                   * SAVES LINE FOR CONT, GOES INTO COMMAND MODE
0539                   *
0540  2343- AD 80 17   ERROR   LDA VFLAG       RESET INVERSE VIDEO
0541  2346- 29 67              AND =$67        AND CLEAR DISPLAY FLAG
0542  2348- 8D 80 17           STA VFLAG
0543  234B- A5 00              LDA OUTDEV      CHECK OUTPUT DEVICE
0544  234D- F0 07              BEQ *+9         MUST BE VIDEO
0545  234F- 20 B0 42           JSR RSTDEV
0546  2352- A9 00              LDA =0
0547  2354- 85 00              STA OUTDEV
0548                   *
0549  2356- 20 95 24           JSR CRLF
0550  2359- 20 8D 45           JSR RSTO1
0551                   *
0552  235C- BD C6 21           LDA ERRSTR,X    PRINT ERROR MESSAGE
0553  235F- 48                 PHA
0554  2360- 29 7F              AND =$7F        MASK OFF BIT 7
0555  2362- 20 BC 2F           JSR OUTCHR
0556  2365- E8                 INX
0557  2366- 68                 PLA
0558  2367- 10 F3              BPL *-11
0559  2369- 20 BD 25           JSR SAVE        SAVE PC AND BASIC LINE
0560  236C- A9 A2              LDA =<ERRORM
0561  236E- A0 22              LDY =>ERRORM
0562  2370- 20 8B 28   STOP2   JSR OUTSTR
0563  2373- A4 70              LDY LINE+1      FF MEANS NOT RUNNING
0564  2375- C8                 INY
0565  2376- F0 03              BEQ WARMST
0566  2378- 20 FF 32           JSR OUTLIN      PRINT LINE NO
0567                   *
0568                   *
0569                   * WARMST: WARM START AND COMMAND ENTRY
0570                   **************************************
0571                   *
0572  237B- A9 A9      WARMST  LDA =<(ERRORM+7)
0573  237D- A0 22              LDY =>(ERRORM+7)
0574  237F- 20 8B 28           JSR OUTSTR
0575  2382- 20 70 24   WARM1   JSR INLIN       INPUT LINE
0576  2385- 86 A9              STX PC
0577  2387- 84 AA              STY PC+1

----------------------------------------------------------------------

GRAPHIC BASIC - EDITOR             19/11/19   R65 ASSEMBLER  PAGE 17

0578  2389- 20 0D 27           JSR FETCH
0579  238C- F0 ED              BEQ WARMST      NEXT LINE IF EMPTY
0580  238E- A2 FF              LDX =$FF        CLEAR RUN FLAG
0581  2390- 86 70              STX LINE+1
0582  2392- 90 0A              BCC INSLIN      NUMBER >> INSERT LINE
0583  2394- 20 B4 24           JSR ANALYZ
0584  2397- A9 00              LDA =0
0585  2399- 85 C2              STA AUTOIN      CLEAR AUTO NUMBERING
0586  239B- 4C EC 26           JMP EXCODE      NO NUMBER >> EXECUTE
0587                   *
0588                   *
0589                   * INSLIN: INSERT LINE
0590                   *********************
0591                   *
0592  239E- 20 A4 23   INSLIN  JSR INSL0
0593  23A1- 4C 29 24           JMP ADLNPN
0594                   *
0595  23A4- 20 4F 28   INSL0   JSR FETCHI      FETCH LINE NUMBER
0596  23A7- 20 B4 24           JSR ANALYZ
0597  23AA- 84 43              STY INPNT       INPUT BUFFER PNT SAVE
0598  23AC- 20 5B 25           JSR SEARLN
0599  23AF- 90 44              BCC INSL1+14    SKIP, IF LINE NOT FOUND
0600                   *
0601  23B1- A0 01              LDY =1          CLEAR EXISTING LINE
0602  23B3- B1 95              LDA (TRANSP),Y
0603  23B5- 85 8F              STA ENDB+1
0604  23B7- A5 63              LDA STVAR
0605  23B9- 85 8E              STA ENDB
0606  23BB- A5 96              LDA TRANSP+1
0607  23BD- 85 91              STA BEGINB+1
0608  23BF- A5 95              LDA TRANSP
0609  23C1- 88                 DEY
0610  23C2- F1 95              SBC (TRANSP),Y
0611  23C4- 18                 CLC
0612  23C5- 65 63              ADC STVAR
0613  23C7- 85 63              STA STVAR
0614  23C9- 85 90              STA BEGINB
0615  23CB- A5 64              LDA STVAR+1
0616  23CD- 69 FF              ADC =$FF
0617  23CF- 85 64              STA STVAR+1
0618  23D1- E5 96              SBC TRANSP+1
0619  23D3- AA                 TAX
0620  23D4- 38                 SEC
0621  23D5- A5 95              LDA TRANSP
0622  23D7- E5 63              SBC STVAR
0623  23D9- A8                 TAY
0624  23DA- B0 03              BCS *+5
0625  23DC- E8                 INX
0626  23DD- C6 91              DEC BEGINB+1
0627  23DF- 18                 CLC

----------------------------------------------------------------------

GRAPHIC BASIC - EDITOR             19/11/19   R65 ASSEMBLER  PAGE 18

0628  23E0- 65 8E              ADC ENDB
0629  23E2- 90 03              BCC *+5
0630  23E4- C6 8F              DEC ENDB+1
0631  23E6- 18                 CLC
0632  23E7- B1 8E      INSL1   LDA (ENDB),Y
0633  23E9- 91 90              STA (BEGINB),Y
0634  23EB- C8                 INY
0635  23EC- D0 F9              BNE INSL1
0636  23EE- E6 91              INC BEGINB+1
0637  23F0- E6 8F              INC ENDB+1
0638  23F2- CA                 DEX             COUNT FULL PAGES
0639  23F3- D0 F2              BNE INSL1
0640                   *
0641  23F5- A5 07              LDA INBUFF
0642  23F7- F0 2F              BEQ INSLE       SKIP, IF LINE EMPTY
0643  23F9- A5 6D              LDA TPMEM
0644  23FB- A4 6E              LDY TPMEM+1
0645  23FD- 85 69              STA BTSTRG      CLEAR EXISTING STRINGS
0646  23FF- 84 6A             STY BTSTRG+1
0647  2401- A5 63              LDA STVAR
0648  2403- 85 90              STA BEGINB
0649  2405- 65 43              ADC INPNT
0650  2407- 85 8E              STA ENDB
0651  2409- A4 64              LDY STVAR+1
0652  240B- 84 91              STY BEGINB+1
0653  240D- 90 01              BCC *+3
0654  240F- C8                 INY
0655  2410- 84 8F              STY ENDB+1
0656  2412- 20 C4 22           JSR MKROOM      MAKE ROOM FOR LINE
0657  2415- A5 67              LDA STSPAC
0658  2417- A4 68              LDY STSPAC+1
0659  2419- 85 63              STA STVAR       CLEAR VARIABLES
0660  241B- 84 64              STY STVAR+1
0661  241D- A4 43              LDY INPNT
0662  241F- 88                 DEY
0663  2420- B9 03 00           LDA INBNUM,Y    INSERT CODE
0664  2423- 91 95              STA (TRANSP),Y
0665  2425- 88                 DEY
0666  2426- 10 F8              BPL *-6
0667  2428- 60         INSLE   RTS
0668                   *
0669  2429- 20 A0 25   ADLNPN  JSR CLR1-3      CLEAR VAR ETC
0670  242C- 20 43 24           JSR ADLNP0      ADJUST LINE ADDRESSES
0671  242F- A5 C2              LDA AUTOIN
0672  2431- D0 03              BNE *+5
0673  2433- 4C 82 23           JMP WARM1
0674  2436- 18                 CLC
0675  2437- 65 05              ADC INTEG
0676  2439- A4 06              LDY INTEG+1
0677  243B- 90 01              BCC *+3

----------------------------------------------------------------------

GRAPHIC BASIC - EDITOR             19/11/19   R65 ASSEMBLER  PAGE 19

0678  243D- C8                 INY
0679  243E- AA                 TAX
0680  243F- 98                 TYA
0681  2440- 4C D7 43           JMP AUTOIN2
0682                   *
0683                   *
0684                   * ADLNP0: ADJUST LINE ADDRESSES
0685                   *******************************
0686                   *
0687  2443- A5 61      ADLNP0  LDA STPROG
0688  2445- A4 62              LDY STPROG+1
0689  2447- 85 58              STA TEMP1
0690  2449- 84 59              STY TEMP1+1
0691  244B- 18                 CLC
0692  244C- A0 01              LDY =1
0693  244E- B1 58              LDA (TEMP1),Y
0694  2450- D0 01              BNE *+3         END OF PROGRAM?
0695  2452- 60                 RTS
0696  2453- A0 04              LDY =4
0697  2455- C8                 INY
0698  2456- B1 58              LDA (TEMP1),Y   SEARCH EOL
0699  2458- D0 FB              BNE *-3
0700  245A- C8                 INY
0701  245B- 98                 TYA
0702  245C- 65 58              ADC TEMP1
0703  245E- AA                 TAX
0704  245F- A0 00              LDY =0
0705  2461- 91 58              STA (TEMP1),Y
0706  2463- A5 59              LDA TEMP1+1
0707  2465- 69 00              ADC =0
0708  2467- C8                 INY
0709  2468- 91 58              STA (TEMP1),Y
0710  246A- 86 58              STX TEMP1
0711  246C- 85 59              STA TEMP1+1
0712  246E- D0 DC              BNE ADLNP0+9    ALLWAYS TAKEN
0713                   *
0714                   *
0715                   * INLIN: INPUT LINE FROM KEYBOARD
0716                   *********************************
0717                   * INPUT MUST BE FROM DEVICE 0, R65 LINE EDITOR
0718                   * IS USED, GETLIN AND NUMCHR ARE MONITOR LABELS
0719                   * IF ENTERED WITH CURPOS#0, FIRST PART SAVED
0720                   *
0721  2470- A6 EE      INLIN   LDX CURPOS
0722  2472- 20 0D 20           JSR GETLIN0
0723  2475- A2 00              LDX =0
0724  2477- B1 E9              LDA (VIDPNT),Y
0725  2479- 29 7F              AND =$7F
0726  247B- 95 07              STA INBUFF,X
0727  247D- E8                 INX

----------------------------------------------------------------------

GRAPHIC BASIC - EDITOR             19/11/19   R65 ASSEMBLER  PAGE 20

0728  247E- C8                 INY
0729  247F- CC 8A 17           CPY NUMCHR
0730  2482- 90 F3              BCC *-11
0731  2484- F0 F1              BEQ *-13
0732                   *
0733  2486- CA                 DEX
0734  2487- 30 06              BMI *+8         EMPTY LINE
0735  2489- B5 07              LDA INBUFF,X
0736  248B- C9 20              CMP =$20        INGNORE ENDING BLANKS
0737  248D- F0 F7              BEQ *-7
0738  248F- A0 00              LDY =0
0739  2491- 94 08              STY INBUFF+1,X
0740  2493- A2 06              LDX =<(INBUFF-1)
0741                   *
0742                   *
0743                   * CRLF: EXECUTE A CRLF (X,Y SAVED)
0744                   **********************************
0745                   *
0746  2495- A9 0D      CRLF    LDA =$D
0747  2497- 20 BC 2F           JSR OUTCHR
0748  249A- A9 0A              LDA =$A
0749  249C- 20 BC 2F           JSR OUTCHR
0750  249F- A5 00      PADOUT  LDA OUTDEV
0751  24A1- F0 10              BEQ *+18
0752  24A3- 8A                 TXA
0753  24A4- 48                 PHA
0754  24A5- A6 01              LDX NUMPAD
0755  24A7- F0 08              BEQ *+10
0756  24A9- A9 00              LDA =0
0757  24AB- 20 BC 2F           JSR OUTCHR
0758  24AE- CA                 DEX
0759  24AF- D0 FA              BNE *-4
0760  24B1- 68                 PLA
0761  24B2- AA                 TAX
0762  24B3- 60                 RTS
0763                   *
0764                   *
0765                   *
0766                   * ANALYZ: ANALYZE INPUT
0767                   ***********************
0768                   *
0769  24B4- A6 A9      ANALYZ  LDX PC
0770  24B6- A0 04              LDY =4
0771  24B8- 84 47              STY TEMP2       FLAG FOR ",DATA,REM
0772  24BA- B5 00              LDA 0,X         GET CHAR FROM INBUFF
0773  24BC- 20 16 20           JSR ADAPT
0774                   *
0775  24BF- C9 20              CMP =$20
0776  24C1- F0 40              BEQ ANA20       INSERT BLANK AS IT IS
0777  24C3- 85 41              STA CHRSAV

----------------------------------------------------------------------

GRAPHIC BASIC - EDITOR             19/11/19   R65 ASSEMBLER  PAGE 21

0778  24C5- C9 22              CMP ='"'
0779  24C7- F0 5E              BEQ ANA25+8     STRING
0780  24C9- 24 47              BIT TEMP2
0781  24CB- 70 36              BVS ANA20       IF ",DATA,REM
0782  24CD- C9 3F              CMP ='?'
0783  24CF- D0 04              BNE *+6
0784  24D1- A9 99              LDA =$99        CODE FOR PRINT
0785  24D3- D0 2E              BNE ANA20
0786  24D5- C9 30              CMP =$30        NUMBER?
0787  24D7- 90 04              BCC *+6
0788  24D9- C9 3C              CMP =$3C
0789  24DB- 90 26              BCC ANA20
0790                   *
0791  24DD- 84 A7              STY DYADIC+8
0792  24DF- A0 3D              LDY =<COMSTB
0793  24E1- 84 CE              STY TEMP4
0794  24E3- A0 20              LDY =>COMSTB
0795  24E5- 84 CF              STY TEMP4+1
0796  24E7- A0 00              LDY =0
0797  24E9- 84 43              STY INPNT
0798  24EB- 88                 DEY
0799  24EC- 86 A9              STX PC
0800  24EE- CA                 DEX
0801  24EF- C8         ANA10   INY
0802  24F0- E8                 INX
0803  24F1- B5 00              LDA 0,X
0804  24F3- 20 16 20           JSR ADAPT
0805  24F6- 38                 SEC
0806  24F7- F1 CE              SBC (TEMP4),Y   COMPARE WITH TOKEN
0807  24F9- F0 F4              BEQ ANA10
0808  24FB- C9 80              CMP =$80
0809  24FD- D0 2F              BNE ANA30       END MATCH
0810  24FF- 05 43             ORA INPNT
0811  2501- A4 A7              LDY DYADIC+8
0812                   *
0813  2503- E8         ANA20   INX
0814  2504- C8                 INY
0815  2505- 99 02 00           STA INBUFF-5,Y
0816  2508- B9 02 00           LDA INBUFF-5,Y
0817  250B- F0 38              BEQ ANA35       END MARK
0818  250D- 38                 SEC
0819  250E- E9 3A              SBC =':'
0820  2510- F0 04              BEQ *+6
0821  2512- C9 49              CMP =$49        A=$83: DATA
0822  2514- D0 02              BNE *+4
0823  2516- 85 47              STA TEMP2
0824  2518- 38                 SEC
0825  2519- E9 55              SBC =$55        A=$8F: REM
0826  251B- D0 9D              BNE ANALYZ+6
0827  251D- 85 41              STA CHRSAV

----------------------------------------------------------------------

GRAPHIC BASIC - EDITOR             19/11/19   R65 ASSEMBLER  PAGE 22

0828  251F- B5 00      ANA25   LDA 0,X         GET WITHOUT ADAPT
0829  2521- F0 E0              BEQ ANA20
0830  2523- C5 41              CMP CHRSAV
0831  2525- F0 DC              BEQ ANA20
0832  2527- C8                 INY
0833  2528- 99 02 00           STA INBUFF-5,Y
0834  252B- E8                 INX
0835  252C- D0 F1              BNE ANA25       ALLWAYS TAKEN
0836                   *
0837  252E- A6 A9      ANA30   LDX PC
0838  2530- E6 43              INC INPNT
0839  2532- 88                 DEY
0840  2533- C8                 INY
0841  2534- B1 CE              LDA (TEMP4),Y
0842  2536- 10 FB              BPL *-3
0843  2538- C8                 INY
0844  2539- B1 CE              LDA (TEMP4),Y
0845  253B- D0 10              BNE ANA35+8
0846  253D- B5 00              LDA 0,X
0847  253F- 20 16 20           JSR ADAPT
0848  2542- 4C 01 25           JMP ANA20-2     NOT FOUND IN TABLE
0849                   *
0850  2545- 99 04 00   ANA35   STA INBUFF-3,Y
0851  2548- A9 06              LDA =<INBUFF-1
0852  254A- 85 A9              STA PC
0853  254C- 60                 RTS
0854                   *
0855  254D- 18                 CLC
0856  254E- 98                 TYA
0857  254F- 65 CE              ADC TEMP4
0858  2551- 85 CE              STA TEMP4
0859  2553- 90 02              BCC *+4
0860  2555- E6 CF              INC TEMP4+1
0861  2557- A0 00              LDY =0
0862  2559- F0 96              BEQ ANA10+2     ALLWAYS TAKEN
0863                   *
0864                   *
0865                   * SEARCH LINE: SEARCH BASIC LINE
0866                   ********************************
0867                   * INPUT IS LINE NO IN INTGER, OUTPUT IS ADDRESS
0868                   * IN TRANSP, C=1IFLINE FOUND
0869                   *
0870  255B- A5 61      SEARLN  LDA STPROG
0871  255D- A6 62              LDX STPROG+1
0872                   *
0873  255F- A0 01              LDY =1
0874  2561- 85 95              STA TRANSP
0875  2563- 86 96              STX TRANSP+1
0876  2565- B1 95              LDA (TRANSP),Y
0877  2567- F0 1F              BEQ SEARL9-1    END OF PROGRAM

----------------------------------------------------------------------

GRAPHIC BASIC - EDITOR             19/11/19   R65 ASSEMBLER  PAGE 23

0878  2569- C8                 INY
0879  256A- C8                 INY
0880  256B- A5 06              LDA INTEG+1
0881  256D- D1 95              CMP (TRANSP),Y
0882  256F- 90 18              BCC SEARL9
0883  2571- F0 03              BEQ *+5
0884  2573- 88                 DEY
0885  2574- D0 09              BNE SEARL5
0886  2576- A5 05              LDA INTEG
0887  2578- 88                 DEY
0888  2579- D1 95              CMP (TRANSP),Y
0889  257B- 90 0C              BCC SEARL9
0890  257D- F0 0A              BEQ SEARL9
0891  257F- 88         SEARL5  DEY
0892  2580- B1 95              LDA (TRANSP),Y  GET ADDRESS OF NEXT LINE
0893  2582- AA                 TAX
0894  2583- 88                 DEY
0895  2584- B1 95              LDA (TRANSP),Y
0896  2586- B0 D7              BCS SEARLN+4
0897  2588- 18                 CLC
0898  2589- 60         SEARL9  RTS
0899                   *
0900                           TIT GRAPHIC BASIC - MAIN COMMANDS
0901                           PAG

----------------------------------------------------------------------

GRAPHIC BASIC - MAIN COMMANDS      19/11/19   R65 ASSEMBLER  PAGE 24

0902                   *
0903                   * NEW: COMMAND ROUTINE
0904                   **********************
0905                   *
0906  258A- D0 FB      NEW     BNE *-3         RTS, IF NOT EOLD
0907  258C- A9 00              LDA =0
0908  258E- A8                 TAY
0909  258F- 91 61              STA (STPROG),Y  END OF PROGRAM MARK
0910  2591- C8                 INY
0911  2592- 91 61              STA (STPROG),Y
0912  2594- A5 61              LDA STPROG
0913  2596- 69 02              ADC =2
0914  2598- 85 63              STA STVAR       SET START OF VARIABLES
0915  259A- A5 62              LDA STPROG+1
0916  259C- 69 00              ADC =0
0917  259E- 85 64              STA STVAR+1
0918                   *
0919  25A0- 20 D3 25           JSR SETPC
0920                   *
0921  25A3- A5 6D      CLR1    LDA TPMEM       CLEAR STRINGS
0922  25A5- A4 6E              LDY TPMEM+1
0923  25A7- 85 69              STA BTSTRG
0924  25A9- 84 6A              STY BTSTRG+1
0925                   *
0926  25AB- 20 E7 43           JSR RESGP       RESETGP
0927                   *
0928  25AE- A5 63              LDA STVAR       CLEAR VARIABLES
0929  25B0- A4 64              LDY STVAR+1
0930  25B2- 85 65              STA EOVAR
0931  25B4- 84 66              STY EOVAR+1
0932  25B6- 85 67              STA STSPAC
0933  25B8- 84 68              STY STSPAC+1
0934  25BA- 20 65 27           JSR RESTOR+19   SET DATA POINTER
0935                   *
0936  25BD- A2 4F      SAVE    LDX =<STRST     RESET STRING STACK
0937  25BF- 86 4C              STX STRSTP
0938  25C1- 68                 PLA             RESET MAIN STACK
0939  25C2- 8D FD 01           STA $1FD
0940  25C5- 68                 PLA
0941  25C6- 8D FE 01           STA $1FE
0942  25C9- A2 FC              LDX =$FC
0943  25CB- 9A                 TXS
0944  25CC- A9 00              LDA =0          CONTINUE NOT LEGAL
0945  25CE- 85 74              STA PNTSAV+1
0946  25D0- 85 48              STA FLAG1
0947  25D2- 60                 RTS
0948                   *
0949                   *
0950                   * SETPC: SET PC TO STPROG-1
0951                   ***************************

----------------------------------------------------------------------

GRAPHIC BASIC - MAIN COMMANDS      19/11/19   R65 ASSEMBLER  PAGE 25

0952                   *
0953  25D3- 18         SETPC   CLC
0954  25D4- A5 61              LDA STPROG
0955  25D6- 69 FF              ADC =$FF
0956  25D8- 85 A9              STA PC
0957  25DA- A5 62              LDA STPROG+1
0958  25DC- 69 FF              ADC =$FF
0959  25DE- 85 AA              STA PC+1
0960  25E0- 60                 RTS
0961                   *
0962                   *
0963                   * LIST: COMMAND ROUTINE
0964                   ***********************
0965                   *
0966  25E1- C9 23      LIST    CMP ='#'
0967  25E3- D0 03              BNE *+5
0968  25E5- 20 66 42           JSR SETDEV
0969  25E8- 20 13 27           JSR FETCH1
0970  25EB- 90 06              BCC *+8         BRANCH, IF NUMBER
0971  25ED- F0 04              BEQ *+6         BRANCH, IF EOL
0972  25EF- C9 B8              CMP =$B8        CODE FOR -
0973  25F1- D0 EB              BNE *-19        RTS, IF NOT
0974                   *
0975  25F3- 20 4F 28           JSR FETCHI      GET LINE NO
0976  25F6- 20 5B 25           JSR SEARLN
0977  25F9- 20 13 27           JSR FETCH1
0978  25FC- F0 0C              BEQ *+14
0979  25FE- C9 B8             CMP =$B8        CODE FOR -
0980  2600- D0 DE              BNE LIST-1
0981  2602- 20 0D 27           JSR FETCH
0982  2605- 20 4F 28           JSR FETCHI      GETS SECOND LINE NO
0983  2608- D0 D6              BNE LIST-1      RTS, IF NOT
0984                   *
0985  260A- 68                 PLA
0986  260B- 68                 PLA
0987  260C- A5 05              LDA INTEG
0988  260E- 05 06              ORA INTEG+1
0989  2610- D0 06              BNE LIST2
0990  2612- A9 FF              LDA =$FF
0991  2614- 85 05              STA INTEG       SET LAST LINE TO FFFF
0992  2616- 85 06              STA INTEG+1
0993                   *
0994  2618- A0 01      LIST2   LDY =1
0995  261A- 84 47              STY TEMP2
0996  261C- B1 95              LDA (TRANSP),Y
0997  261E- F0 41              BEQ LIST4       END OF PROGRAM
0998  2620- 20 2E 20           JSR BREAKT      BREAK TEST
0999  2623- 20 95 24           JSR CRLF
1000  2626- C8                 INY
1001  2627- B1 95              LDA (TRANSP),Y

----------------------------------------------------------------------

GRAPHIC BASIC - MAIN COMMANDS      19/11/19   R65 ASSEMBLER  PAGE 26

1002  2629- AA                 TAX
1003  262A- C8                 INY
1004  262B- B1 95              LDA (TRANSP),Y
1005  262D- C5 06              CMP INTEG+1
1006  262F- D0 04              BNE *+6
1007  2631- E4 05              CPX INTEG
1008  2633- F0 02              BEQ *+4
1009  2635- B0 2A              BCS LIST4
1010  2637- 84 7F              STY TEMP3
1011  2639- 20 0A 33           JSR OUTINT
1012                   *
1013  263C- A9 20              LDA =' '
1014  263E- A4 7F      LIST3   LDY TEMP3
1015  2640- 29 7F              AND =$7F
1016  2642- 20 BC 2F           JSR OUTCHR
1017                    * BASIC2:A ORIGINAL 7/1/1982, RECOVERED 3/2018
1018  2645- C9 22              CMP ='"'
1019  2647- D0 06              BNE *+8
1020  2649- A5 47              LDA TEMP2       SET " FLAG
1021  264B- 49 FF              EOR =$FF
1022  264D- 85 47              STA TEMP2
1023  264F- C8                 INY
1024  2650- B1 95              LDA (TRANSP),Y
1025  2652- D0 1E              BNE LIST7       0 MEANS EOL
1026  2654- A8                 TAY
1027  2655- B1 95              LDA (TRANSP),Y  GET ADDRESS OF NEXT
1028  2657- AA                 TAX             LINE
1029  2658- C8                 INY
1030  2659- B1 95              LDA (TRANSP),Y
1031  265B- 86 95              STX TRANSP
1032  265D- 85 96              STA TRANSP+1
1033  265F- D0 B7              BNE LIST2       ALLWAYS TAKEN
1034  2661- A5 00      LIST4   LDA OUTDEV
1035  2663- F0 03              BEQ *+5
1036  2665- 20 B0 42           JSR RSTDEV
1037  2668- 20 95 24           JSR CRLF
1038  266B- A9 00              LDA =0
1039  266D- 85 00              STA OUTDEV
1040  266F- 4C 7B 23           JMP WARMST
1041                   *
1042  2672- 10 CE      LIST7   BPL LIST3+4
1043  2674- 24 47              BIT TEMP2
1044  2676- 30 CA              BMI LIST3+4
1045  2678- 38                 SEC
1046  2679- E9 7F              SBC =$7F
1047  267B- AA                 TAX             X=CODE-$7F
1048  267C- 84 7F              STY TEMP3
1049  267E- A9 3D              LDA =<COMSTB
1050  2680- A0 20              LDY =>COMSTB
1051  2682- 85 CE              STA TEMP4

----------------------------------------------------------------------

GRAPHIC BASIC - MAIN COMMANDS      19/11/19   R65 ASSEMBLER  PAGE 27

1052  2684- 84 CF              STY TEMP4+1
1053  2686- A0 FF              LDY =$FF
1054  2688- CA         LIST5   DEX
1055  2689- F0 13              BEQ LIST6
1056  268B- C8                 INY             FIND TOKEN STRING
1057  268C- B1 CE              LDA (TEMP4),Y
1058  268E- 10 FB              BPL *-3
1059  2690- 18                 CLC
1060  2691- 98                 TYA
1061  2692- 65 CE              ADC TEMP4
1062  2694- 85 CE              STA TEMP4
1063  2696- A0 00              LDY =0
1064  2698- 90 EE              BCC LIST5
1065  269A- E6 CF              INC TEMP4+1
1066  269C- D0 EA              BNE LIST5       ALLWAYS TAKEN
1067  269E- C8         LIST6   INY
1068  269F- B1 CE              LDA (TEMP4),Y   PRINT CODE STRING
1069  26A1- 30 9B              BMI LIST3
1070  26A3- 20 BC 2F           JSR OUTCHR
1071  26A6- 4C 9E 26           JMP LIST6
1072                   *
1073                   *
1074                   * EXRUN: EXECUTE RUNNING, MAIN LOOP
1075                   ***********************************
1076                   *
1077  26A9- 20 2E 20   EXRUN   JSR BREAKT
1078  26AC- A5 A9              LDA PC
1079  26AE- A4 AA              LDY PC+1
1080  26B0- F0 06              BEQ *+8         SKIP IF DIRECT MODE
1081  26B2- 85 73              STA PNTSAV
1082  26B4- 84 74              STY PNTSAV+1
1083  26B6- A0 00              LDY =0
1084                   *
1085  26B8- B1 A9              LDA (PC),Y
1086  26BA- F0 10              BEQ *+18        SKIP, IF EOL
1087  26BC- C9 3A              CMP =':         MUST BE :
1088  26BE- F0 2C              BEQ EXCODE
1089  26C0- C9 21              CMP ='!
1090  26C2- F0 05              BEQ *+7
1091  26C4- A2 0F      SYNERR  LDX =$F         SYNTAX ERROR
1092  26C6- 4C 43 23           JMP ERROR
1093                   *
1094  26C9- 20 3C 2A           JSR REMARK
1095  26CC- A0 02              LDY =2
1096  26CE- B1 A9              LDA (PC),Y
1097  26D0- 18                 CLC
1098  26D1- F0 73              BEQ STOP1       BRANCH, IF END OF PRO-
1099  26D3- C8                 INY             GRAM OR DIRECT MODE
1100  26D4- B1 A9              LDA (PC),Y
*** ERROR 36
1101  26D6- 8D 00 00           STA LED16

----------------------------------------------------------------------

GRAPHIC BASIC - MAIN COMMANDS      19/11/19   R65 ASSEMBLER  PAGE 28

1102  26D9- 85 6F              STA LINE
1103  26DB- C8                 INY
1104  26DC- B1 A9              LDA (PC),Y
*** ERROR 36
1105  26DE- 8D 01 00           STA LED16+1
1106  26E1- 85 70              STA LINE+1
1107  26E3- 98                 TYA
1108  26E4- 65 A9              ADC PC
1109  26E6- 85 A9              STA PC          ADJUST PC
1110  26E8- 90 02              BCC *+4
1111  26EA- E6 AA              INC PC+1
1112                   *
1113                   *
1114  26EC- 20 0D 27   EXCODE  JSR FETCH
1115  26EF- 20 F5 26           JSR EXCOD1
1116  26F2- 4C A9 26           JMP EXRUN
1117                   *
1118                   *
1119                   * EXCODE: GET STATEMENT VECTOR AND EXECUTE
1120                   *
1121  26F5- F0 32      EXCOD1  BEQ FETCHE      RTS, IF EOL
1122  26F7- 38                 SEC
1123  26F8- E9 80              SBC =128
1124  26FA- B0 03              BCS *+5
1125  26FC- 4C 4D 2A           JMP LET         MUST BE LET
1126  26FF- C9 30             CMP =$30
1127  2701- B0 C1              BCS SYNERR      NOT LEGAL STATEMENT
1128  2703- 0A                 ASL A
1129  2704- A8                 TAY
1130  2705- B9 6B 21           LDA STVECT+1,Y  GET VECTOR
1131  2708- 48                 PHA
1132  2709- B9 6A 21           LDA STVECT,Y
1133  270C- 48                 PHA             FETCH, THEN EXECUTE CODE
1134                   *
1135                   *
1136                   * FETCH: FETCH NEXT BASIC CHAR
1137                   ******************************
1138                   * INCREMENT PC, FETCH (PC), BLANKS ARE SKIPPED
1139                   * C=0 IF NUMBER
1140                   *
1141  270D- E6 A9      FETCH   INC PC
1142  270F- D0 02              BNE FETCH1
1143  2711- E6 AA              INC PC+1
1144                   *
1145  2713- 84 CE      FETCH1  STY TEMP4       ENTRY WITHOUT INCR PC
1146  2715- A0 00              LDY =0
1147  2717- B1 A9              LDA (PC),Y
1148  2719- A4 CE              LDY TEMP4
1149  271B- C9 3A              CMP =$3A        NUMBER TEST
1150  271D- B0 0A              BCS FETCHE
1151  271F- C9 20              CMP =' '        SKIP BLANKS

----------------------------------------------------------------------

GRAPHIC BASIC - MAIN COMMANDS      19/11/19   R65 ASSEMBLER  PAGE 29

1152  2721- F0 EA              BEQ FETCH
1153  2723- 38                 SEC
1154  2724- E9 30              SBC =$30
1155  2726- 38                 SEC
1156  2727- E9 D0              SBC =$D0
1157  2729- 60         FETCHE  RTS
1158                   *
1159                   *
1160                   * STOP: STATEMENT ROUTINE
1161                   *************************
1162                   *
1163  272A- B0 01      STOP    BCS *+3
1164                   *
1165                   *
1166                   * END: STATEMENT ROUTINE
1167                   ************************
1168                   *
1169  272C- 18         END     CLC
1170  272D- D0 FA              BNE FETCHE      RST, IF NOT EOLD
1171  272F- 20 97 45           JSR RSTALL
1172  2732- A5 A9              LDA PC
1173  2734- A4 AA              LDY PC+1
1174  2736- F0 0C              BEQ STOP1-2     SKIP IN DIRECT MODE
1175  2738- 85 73              STA PNTSAV
1176  273A- 84 74              STY PNTSAV+1
1177  273C- A5 6F              LDA LINE
1178  273E- A4 70              LDY LINE+1
1179  2740- 85 71              STA LINSAV
1180  2742- 84 72              STY LINSAV+1
1181  2744- 68                 PLA             RETURN ONE LEVEL
1182  2745- 68                 PLA
1183  2746- A9 B3      STOP1   LDA =<(ERRORM+17)       BREAK MESSAGE
1184  2748- A0 22              LDY =>(ERRORM+17)
1185  274A- 90 03              BCC *+5
1186  274C- 4C 70 23           JMP STOP2
1187  274F- 4C 7B 23           JMP WARMST
1188                   *
1189                   *
1190                   * RESTORE: STATEMENT ROUTINE
1191                   ****************************
1192                   *
1193  2752- F0 11      RESTOR  BEQ *+19
1194  2754- 20 4F 28           JSR FETCHI      GET LINE NO
1195  2757- 20 5B 25           JSR SEARLN
1196  275A- B0 03              BCS *+5
1197  275C- 4C BE 27           JMP UNDEFS
1198  275F- A5 95              LDA TRANSP
1199  2761- A4 96              LDY TRANSP+1
1200  2763- B0 05              BCS *+7         ALLWAYS TAKEN
1201                   *

----------------------------------------------------------------------

GRAPHIC BASIC - MAIN COMMANDS      19/11/19   R65 ASSEMBLER  PAGE 30

1202  2765- A5 61              LDA STPROG
1203  2767- A4 62              LDY STPROG+1
1204                   *
1205  2769- 38                 SEC
1206  276A- E9 01              SBC =1
1207  276C- B0 01              BCS *+3
1208  276E- 88                 DEY
1209  276F- 85 77              STA DATPNT
1210  2771- 84 78              STY DATPNT+1
1211  2773- 60                 RTS
1212                   *
1213                   *
1214                   * CLR: STATEMENT ROUTINE
1215                   ************************
1216                   *
1217  2774- D0 FB      CLR     BNE *-3         RTS, IF NOT EOLD
1218  2776- 4C A3 25           JMP CLR1
1219                   *
1220                   *
1221                   * RUN: STATEMENT ROUTINE
1222                   ************************
1223                   *
1224  2779- D0 03      RUN     BNE *+5
1225  277B- 4C A0 25           JMP CLR1-3      SET PC, CLR AND RUN
1226                   *
1227  277E- 4C F9 41           JMP LOAD9       LOAD NEW USER PROGRAM
1228                   *
1229                   *
1230                   * GOSUB: STATEMENT ROUTINE
1231                   **************************
1232                   *
1233  2781- A9 03      GOSUB   LDA =3
1234  2783- 20 34 23           JSR TSSTK
1235  2786- A5 AA              LDA PC+1
1236  2788- 48                 PHA             SAVE PC ON STACK
1237  2789- A5 A9              LDA PC
1238  278B- 48                 PHA
1239  278C- A5 70              LDA LINE+1      SAVE LINE
1240  278E- 48                 PHA
1241  278F- A5 6F              LDA LINE
1242  2791- 48                 PHA
1243  2792- A9 8D              LDA =$8D        CODE FOR GOSUB
1244  2794- 48                 PHA
1245  2795- 20 13 27           JSR FETCH1
1246  2798- 20 9E 27           JSR GOTO
1247  279B- 4C A9 26           JMP EXRUN
1248                   *
1249                   *
1250                   * GOTO: STATEMENT ROUTINE
1251                   *************************

----------------------------------------------------------------------

GRAPHIC BASIC - MAIN COMMANDS      19/11/19   R65 ASSEMBLER  PAGE 31

1252                   *
1253  279E- 20 4F 28   GOTO    JSR FETCHI
1254  27A1- 20 02 28           JSR SEEOL
1255  27A4- A5 70              LDA LINE+1
1256  27A6- C5 06              CMP INTEG+1
1257  27A8- B0 0B              BCS GOTO1       SEARCH FROM START
1258                   *
1259  27AA- 98                 TYA             SEARCH FOR NEXT LIN
1260  27AB- 38                 SEC
1261  27AC- 65 A9              ADC PC
1262  27AE- A6 AA              LDX PC+1        COMPUTE NEXT LINE
1263  27B0- 90 07              BCC GOTO1+4
1264  27B2- E8                 INX
1265  27B3- B0 04              BCS GOTO1+4
1266                   *
1267  27B5- A5 61      GOTO1   LDA STPROG
1268  27B7- A6 62              LDX STPROG+1
1269  27B9- 20 5F 25           JSR SEARLN+4
1270  27BC- B0 05              BCS *+7
1271  27BE- A2 47      UNDEFS  LDX =$47
1272  27C0- 4C 43 23           JMP ERROR       UNDEFINED STATEMENT
1273  27C3- A5 95              LDA TRANSP
1274  27C5- E9 01              SBC =1
1275  27C7- 85 A9              STA PC          SET NEW PC
1276  27C9- A5 96              LDA TRANSP+1
1277  27CB- E9 00              SBC =0
1278  27CD- 85 AA              STA PC+1
1279  27CF- 60                 RTS
1280                   *
1281                   *
1282                   * RETURN: STATEMENT ROUTINE
1283                   ***************************
1284                   *
1285  27D0- D0 FD      RETURN  BNE *-1         RTS, IF NOT EOLL
1286  27D2- A9 FF              LDA =$FF
1287  27D4- 85 7F              STA TEMP3
1288  27D6- 20 21 28           JSR STACK
1289  27D9- 9A                 TXS
1290  27DA- C9 8D              CMP =$8D        CODE FOR GOSUB
1291  27DC- F0 05              BEQ *+7
1292  27DE- A2 15              LDX =$15
1293  27E0- 4C 43 23           JMP ERROR       NO MATCHING GOSUB
1294                   *
1295  27E3- 68                 PLA             GET CODE FOR GOSUB
1296  27E4- 68                 PLA             GET LINE
1297  27E5- 85 6F              STA LINE
1298  27E7- 68                 PLA
1299  27E8- 85 70              STA LINE+1
1300  27EA- 68                 PLA             GET PC FROM STACK
1301  27EB- 85 A9              STA PC

----------------------------------------------------------------------

GRAPHIC BASIC - MAIN COMMANDS      19/11/19   R65 ASSEMBLER  PAGE 32

1302  27ED- 68                 PLA
1303  27EE- 85 AA              STA PC+1        CONTINUE WITH DATA
1304                   *
1305                   *
1306                   * DATA: STATEMENT ROUTINE
1307                   *************************
1308                   * SKIPS RESTOF LINE, OR UP TO NEXT ":"
1309                   *
1310  27F0- 20 FE 27   DATA    JSR SEDPN
1311  27F3- 98                 TYA
1312  27F4- 18                 CLC
1313  27F5- 65 A9              ADC PC
1314  27F7- 85 A9              STA PC
1315  27F9- 90 02              BCC *+4
1316  27FB- E6 AA              INC PC+1
1317  27FD- 60         DATAE   RTS
1318                   *
1319                   *
1320                   * SUBROUTINE TO SEARCH IN LINE
1321                   ******************************
1322                   * SEDPN SEARCHES ":" OR EOLD
1323                   * SEEOL SEARCHES EOL
1324                   * OUTPUT IS Y
1325                   *
1326  27FE- A2 3A     SEDPN   LDX =$3A
1327  2800- D0 02              BNE *+4
1328  2802- A2 00      SEEOL   LDX =0
1329  2804- 86 41              STX CHRSAV
1330  2806- A0 00              LDY =0
1331  2808- 84 42              STY CHRSAV+1
1332  280A- A5 42      SEEOL1  LDA CHRSAV+1
1333  280C- A6 41              LDX CHRSAV
1334  280E- 85 41              STA CHRSAV
1335  2810- 86 42              STX CHRSAV+1
1336  2812- B1 A9              LDA (PC),Y      RTS, IF EOL
1337  2814- F0 E7              BEQ DATAE
1338  2816- C5 42              CMP CHRSAV+1
1339  2818- F0 E3              BEQ DATAE       RTS, IF MATCHING
1340  281A- C8                 INY
1341  281B- C9 22              CMP ='"'        DO NOT SEARCH ":"
1342  281D- F0 EB              BEQ SEEOL1      IN STRING
1343  281F- D0 F1              BNE SEEOL1+8    ALLWAYS TAKEN
1344                   *
1345                   *
1346                   * STACK: PREPARE STACK
1347                   **********************
1348                   * USED IN NEXT AND RETURN
1349                   *
1350  2821- BA         STACK   TSX
1351  2822- E8                 INX

----------------------------------------------------------------------

GRAPHIC BASIC - MAIN COMMANDS      19/11/19   R65 ASSEMBLER  PAGE 33

1352  2823- E8                 INX
1353  2824- E8                 INX
1354  2825- E8                 INX
1355  2826- BD 01 01           LDA $101,X      STACK PAGE
1356  2829- C9 81              CMP =$81
1357  282B- D0 21              BNE STACK4
1358  282D- A5 80              LDA TEMP3+1
1359  282F- D0 0A              BNE *+12
1360  2831- BD 02 01           LDA $102,X
1361  2834- 85 7F              STA TEMP3
1362  2836- BD 03 01           LDA $103,X
1363  2839- 85 80              STA TEMP3+1
1364  283B- DD 03 01           CMP $103,X
1365  283E- D0 07              BNE *+9
1366  2840- A5 7F              LDA TEMP3
1367  2842- DD 02 01           CMP $102,X
1368  2845- F0 07              BEQ STACK4
1369  2847- 8A                 TXA
1370  2848- 18                 CLC
1371  2849- 69 12              ADC =18
1372  284B- AA                 TAX
1373  284C- D0 D8              BNE STACK+5
1374  284E- 60         STACK4  RTS
1375                   *
1376                   *
1377                   * FETCHI: FETCH INTEGER
1378                   ***********************
1379                   *
1380  284F- A2 00      FETCHI  LDX =0
1381  2851- 86 05              STX INTEG
1382  2853- 86 06              STX INTEG+1
1383  2855- B0 F7              BCS STACK4      RTS, IF NOT DIGIT
1384  2857- E9 2F              SBC =$2F        CONVERT TO DIGIT(C=0)
1385  2859- 85 42              STA CHRSAV+1
1386  285B- A5 06              LDA INTEG+1
1387  285D- 85 58              STA TEMP1
1388  285F- C9 19              CMP =$19
1389  2861- 90 03              BCC *+5
1390  2863- 4C C4 26           JMP SYNERR
1391                   *
1392  2866- A5 05              LDA INTEG       INTEG=10*INTEG+DIGIT
1393  2868- 0A                 ASL A
1394  2869- 26 58              ROL TEMP1
1395  286B- 0A                 ASL A
1396  286C- 26 58              ROL TEMP1
1397  286E- 65 05              ADC INTEG
1398  2870- 85 05              STA INTEG
1399  2872- A5 58              LDA TEMP1
1400  2874- 65 06              ADC INTEG+1
1401  2876- 06 05              ASL INTEG

----------------------------------------------------------------------

GRAPHIC BASIC - MAIN COMMANDS      19/11/19   R65 ASSEMBLER  PAGE 34

1402  2878- 2A                 ROL A
1403  2879- 85 06              STA INTEG+1
1404  287B- A5 05              LDA INTEG
1405  287D- 65 42              ADC CHRSAV+1
1406  287F- 85 05              STA INTEG
1407  2881- 90 02              BCC *+4
1408  2883- E6 06              INC INTEG+1
1409  2885- 20 0D 27           JSR FETCH
1410  2888- 4C 55 28           JMP FETCHI+6
1411                   *
1412                   *
1413                   * OUTSTR: PRINT STRING AT A,Y
1414                   *****************************
1415                   * END MARK IS 0
1416                   *
1417  288B- 20 A8 28   OUTSTR  JSR STRSIZ
1418  288E- 20 0F 29           JSR PREPST
1419                   *
1420                   * A=NO OF CHARS, TEMP1=START
1421                   *
1422  2891- AA                 TAX
1423  2892- A0 00              LDY =0
1424  2894- E8                 INX
1425  2895- CA                 DEX
1426  2896- F0 B6              BEQ STACK4      RTS, IF X=0
1427  2898- B1 58              LDA (TEMP1),Y
1428  289A- 20 BC 2F           JSR OUTCHR
1429  289D- C8                 INY
1430  289E- C9 0D              CMP =$D         IF CR,PADOUT
1431  28A0- D0 F3              BNE *-11
1432  28A2- 20 9F 24           JSR PADOUT
1433  28A5- 4C 95 28           JMP *-16
1434                   *
1435                   *
1436                   * STRSIZ: STRING SIZE IN A,Y
1437                   ****************************
1438                   *
1439  28A8- A2 22      STRSIZ  LDX ='"'
1440  28AA- 86 41              STX CHRSAV
1441  28AC- 86 42              STX CHRSAV+1
1442  28AE- 85 A5              STA DYADIC+6
1443  28B0- 84 A6              STY DYADIC+7    SAVE START
1444  28B2- 85 98              STA MANT
1445  28B4- 84 99              STY MANT+1
1446                   *
1447  28B6- A0 FF              LDY =$FF
1448  28B8- C8         STRSI1  INY
1449  28B9- B1 A5              LDA (DYADIC+6),Y
1450  28BB- F0 0C              BEQ STRSI2+4    END MARK
1451  28BD- C5 41              CMP CHRSAV

----------------------------------------------------------------------

GRAPHIC BASIC - MAIN COMMANDS      19/11/19   R65 ASSEMBLER  PAGE 35

1452  28BF- F0 04              BEQ STRSI2
1453  28C1- C5 42              CMP CHRSAV+1
1454  28C3- D0 F3              BNE STRSI1
1455  28C5- C9 22      STRSI2  CMP ='"'
1456  28C7- F0 01              BEQ *+3
1457  28C9- 18                 CLC
1458  28CA- 84 97              STY EXP         SAVE SIZE IN EXP
1459  28CC- 98                 TYA
1460  28CD- 65 A5              ADC DYADIC+6    DYADIC+6=START
1461  28CF- 85 A7              STA DYADIC+8    DYADIC+8=END
1462  28D1- A6 A6              LDX DYADIC+7
1463  28D3- 90 01              BCC *+3
1464  28D5- E8                 INX
1465  28D6- 86 A8              STX DYADIC+9
1466  28D8- A5 A6              LDA DYADIC+7
1467  28DA- D0 0B              BNE STRSI3      SKIP, IF STRING NOT
1468                   *                       IN PAGE 0
1469  28DC- 98                 TYA
1470  28DD- 20 AD 2D           JSR TSTRRM      TEST STRING ROOM
1471  28E0- A6 A5              LDX DYADIC+6
1472  28E2- A4 A6              LDY DYADIC+7
1473  28E4- 20 CD 2D           JSR INSST0      INSERT STRING
1474                   *
1475  28E7- A6 4C      STRSI3  LDX STRSTP
1476  28E9- E0 58              CPX =STRST+9
1477  28EB- D0 05              BNE *+7
1478  28ED- A2 B3              LDX =$B3        FORMULA TOO LONG
1479  28EF- 4C 43 23           JMP ERROR
1480                   *
1481  28F2- A5 97              LDA EXP
1482  28F4- 95 00              STA 0,X         SAVE SIZE
1483  28F6- A5 98              LDA MANT        SAVE START
1484  28F8- 95 01              STA 1,X
1485  28FA- A5 99              LDA MANT+1
1486  28FC- 95 02              STA 2,X
1487  28FE- A0 00             LDY =0
1488  2900- 86 9A              STX MANT+2      POINTER TO SAVED
1489  2902- 84 9B              STY MANT+3
1490  2904- 88                 DEY
1491  2905- 84 45              STY RESTYP
1492  2907- 86 4D              STX STRSTP+1
1493  2909- E8                 INX
1494  290A- E8                 INX
1495  290B- E8                 INX
1496  290C- 86 4C              STX STRSTP
1497  290E- 60                 RTS
1498                   *
1499                   *
1500                   * PREPST: PREPARE STRING FOR OUTPUT
1501                   ***********************************

----------------------------------------------------------------------

GRAPHIC BASIC - MAIN COMMANDS      19/11/19   R65 ASSEMBLER  PAGE 36

1502                   *
1503  290F- A5 9A      PREPST  LDA MANT+2
1504  2911- A4 9B              LDY MANT+3
1505  2913- 85 58              STA TEMP1
1506  2915- 84 59              STY TEMP1+1
1507  2917- 20 44 29           JSR PREPS1
1508  291A- 08                 PHP
1509  291B- A0 00              LDY =0
1510  291D- B1 58              LDA (TEMP1),Y
1511  291F- 48                 PHA             SIZE TO A
1512  2920- C8                 INY
1513  2921- B1 58              LDA (TEMP1),Y
1514  2923- AA                 TAX             ADDRESS LOW TO X
1515  2924- C8                 INY
1516  2925- B1 58              LDA (TEMP1),Y
1517  2927- A8                 TAY             ADDRESS HIGH TO Y
1518  2928- 68                 PLA
1519  2929- 28                 PLP
1520  292A- D0 13              BNE PREPS0
1521  292C- C4 6A              CPY BTSTRG+1
1522  292E- D0 0F              BNE PREPS0      BRANCH, IF NOT STORED
1523  2930- E4 69              CPX BTSTRG      STRING IN STRING AREA
1524  2932- D0 0B              BNE PREPS0
1525  2934- 48                 PHA
1526  2935- 18                 CLC
1527  2936- 65 69              ADC BTSTRG
1528  2938- 85 69              STA BTSTRG
1529  293A- 90 02              BCC *+4
1530  293C- E6 6A              INC BTSTRG+1
1531  293E- 68                 PLA
1532  293F- 86 58      PREPS0  STX TEMP1
1533  2941- 84 59              STY TEMP1+1
1534  2943- 60                 RTS
1535                   *
1536  2944- C4 4E      PREPS1  CPY STRSTP+2
1537  2946- D0 0C              BNE PREPS2
1538  2948- C5 4D              CMP STRSTP+1
1539  294A- D0 08              BNE PREPS2
1540  294C- 85 4C              STA STRSTP
1541  294E- E9 03              SBC =3
1542  2950- 85 4D              STA STRSTP+1
1543  2952- A0 00              LDY =0
1544  2954- 60         PREPS2  RTS
1545                   *
1546                   *
1547                   * COLDST: COLD START
1548                   ********************
1549                   *
1550  2955- A2 FF      COLDST  LDX =$FF
1551  2957- 86 70              STX LINE+1

----------------------------------------------------------------------

GRAPHIC BASIC - MAIN COMMANDS      19/11/19   R65 ASSEMBLER  PAGE 37

1552  2959- 86 04              STX INBNUM+1
1553  295B- 9A                 TXS
1554  295C- 58                 CLI
1555  295D- D8                 CLD
1556  295E- 20 15 F0           JSR CLOSAL
1557  2961- A9 4C              LDA =$4C
1558  2963- 85 8A              STA PNT1-1      VECTOR FOR BFUNC
1559  2965- AD 00 14           LDA PORTB1      WRITE DISABLE BASIC
1560  2968- 29 FF              AND =$FF        DUMMY
1561  296A- AD 00 14           LDA PORTB1      DUMMY, WAS STA
1562  296D- A9 00              LDA =0
1563  296F- 85 9E              STA CURRSG+1
1564  2971- 85 00              STA OUTDEV
1565  2973- 85 C1              STA INPDEV
1566  2975- 85 C2              STA AUTOIN
1567  2977- 85 4E              STA STRSTP+2
1568  2979- 85 01              STA NUMPAD
1569  297B- 85 02              STA POS
1570  297D- 85 BB              STA POSTB
1571  297F- 85 BC              STA POSTB+1
1572  2981- 85 BD              STA POSTB+2
1573  2983- 85 BE              STA POSTB+3
1574  2985- 48                 PHA
1575  2986- 85 4B              STA STRSTP-1
1576  2988- A9 03              LDA =3
1577  298A- 85 89              STA SIZE
1578  298C- A9 2C              LDA =$2C
1579  298E- 85 06              STA INTEG+1
1580  2990- 20 B0 42           JSR RSTDEV
1581  2993- A2 4F              LDX =STRST      SET STRING STACK POINTER
1582  2995- 86 4C              STX STRSTP
1583                   *
1584  2997- AD 06 20           LDA STRRAM      START OF USER AREA
1585  299A- AE 07 20           LDX STRRAM+1
1586  299D- 85 61              STA STPROG
1587  299F- 86 62              STX STPROG+1
1588  29A1- AD 08 20           LDA ENDRAM      END OF USER AREA
1589  29A4- AE 09 20           LDX ENDRAM+1
1590  29A7- 85 6D              STA TPMEM
1591  29A9- 86 6E              STX TPMEM+1
1592  29AB- 85 69              STA BTSTRG
1593  29AD- 86 6A              STX BTSTRG+1
1594  29AF- A0 00              LDY =0
1595  29B1- 98                 TYA
1596  29B2- 91 61              STA (STPROG),Y
1597  29B4- E6 61              INC STPROG
1598  29B6- D0 02              BNE *+4
1599  29B8- E6 62              INC STPROG+1
1600  29BA- A5 61              LDA STPROG
1601  29BC- A4 62              LDY STPROG+1

----------------------------------------------------------------------

GRAPHIC BASIC - MAIN COMMANDS      19/11/19   R65 ASSEMBLER  PAGE 38

1602  29BE- 20 07 23           JSR TSROOM
1603  29C1- 20 95 24           JSR CRLF
1604  29C4- A9 DE              LDA =<HEADM
1605  29C6- A0 29              LDY =>HEADM
1606  29C8- 20 8B 28           JSR OUTSTR
1607  29CB- A5 6D              LDA TPMEM
1608  29CD- 38                 SEC
1609  29CE- E5 61              SBC STPROG
1610  29D0- AA                 TAX
1611  29D1- A5 6E              LDA TPMEM+1
1612  29D3- E5 62              SBC STPROG+1
1613  29D5- 20 0A 33           JSR OUTINT
1614  29D8- 20 8C 25           JSR NEW+2
1615  29DB- 4C 7B 23           JMP WARMST
1616                   *
1617  29DE- 0D 0A 0A   HEADM   BYT $D,$A,$A
1618  29E1- 09 2D 2D           BYT 9,'-- R65 GRAPHIC BASIC V 6.1 --'
1618  29E4- 20 52 36 
1618  29E7- 35 20 47 
1618  29EA- 52 41 50 
1618  29ED- 48 49 43 
1618  29F0- 20 42 41 
1618  29F3- 53 49 43 
1618  29F6- 20 56 20 
1618  29F9- 36 2E 31 
1618  29FC- 20 2D 2D 
1619  29FF- 0D 0A 0A          BYT $D,$A,$A,'BYTES FREE: ',0
1619  2A02- 42 59 54 
1619  2A05- 45 53 20 
1619  2A08- 46 52 45 
1619  2A0B- 45 3A 20 
1619  2A0E- 00 
1620                   *
1621                   *
1622                   * CONT: COMMAND ROUTINE
1623                   ***********************
1624                   *
1625  2A0F- D0 17      CONT    BNE CONTE       RTS, IF NOT EOL
1626  2A11- A2 C6              LDX =$C6        CONT ERROR?
1627  2A13- A4 74              LDY PNTSAV+1    =0 IF CONT ILL
1628  2A15- D0 03              BNE *+5
1629  2A17- 4C 43 23           JMP ERROR
1630  2A1A- A5 73              LDA PNTSAV
1631  2A1C- 85 A9              STA PC
1632  2A1E- 84 AA              STY PC+1
1633  2A20- A5 71              LDA LINSAV
1634  2A22- A4 72              LDY LINSAV+1
1635  2A24- 85 6F              STA LINE
1636  2A26- 84 70              STY LINE+1
1637  2A28- 60         CONTE   RTS

----------------------------------------------------------------------

GRAPHIC BASIC - MAIN COMMANDS      19/11/19   R65 ASSEMBLER  PAGE 39

1638                   *
1639                   *
1640                   * IF: STATEMENT ROUTINE
1641                   ***********************
1642                   *
1643  2A29- 20 F7 2D   IF      JSR EXPRES
1644  2A2C- 20 13 27           JSR FETCH1
1645  2A2F- C9 89              CMP =$89        CODE FOR GOTO
1646  2A31- F0 05              BEQ *+7
1647  2A33- A9 B4              LDA =$B4        CODE FOR THEN
1648  2A35- 20 73 2B           JSR FOLLOW      MUST FOLLOW
1649  2A38- A5 97              LDA EXP         EXP=0:SKIP REST OF LINE
1650  2A3A- D0 06              BNE *+8
1651                   *
1652                   *
1653                   * REMARK: STATEMENT ROUTINE
1654                   ***************************
1655                   *
1656  2A3C- 20 02 28   REMARK  JSR SEEOL
1657  2A3F- 4C F3 27           JMP DATA+3
1658                   *
1659                   * CONTINUE IF
1660                   *
1661  2A42- 20 13 27           JSR FETCH1
1662  2A45- B0 03              BCS *+5
1663  2A47- 4C 9E 27           JMP GOTO
1664  2A4A- 4C F5 26           JMP EXCOD1
1665                   *
1666                   *
1667                   * LET: STATEMENT ROUTINE
1668                   ************************
1669                   *
1670  2A4D- A2 00      LET     LDX =0          VARIABLE CAN BE DEFINED
1671  2A4F- 86 CF              STX TEMP4+1
1672  2A51- 20 7F 2B           JSR GETVAR
1673  2A54- 85 7F              STA TEMP3       SAVE START
1674  2A56- 84 80              STY TEMP3+1
1675  2A58- A9 BF              LDA =$BF        CODE FOR =
1676  2A5A- 20 73 2B           JSR FOLLOW      MUST FOLLOW
1677  2A5D- A5 46              LDA RESTYP+1
1678  2A5F- 48                 PHA
1679  2A60- A5 45              LDA RESTYP
1680  2A62- 48                 PHA
1681  2A63- 20 F7 2D           JSR EXPRES
1682  2A66- 68                 PLA
1683  2A67- 2A                 ROL A           TEST RESULT TYPE
1684  2A68- 20 E9 2D           JSR TESTTP+1
1685  2A6B- D0 18              BNE LET1+3
1686  2A6D- 68                 PLA
1687  2A6E- 10 12      LET0    BPL LET1

----------------------------------------------------------------------

GRAPHIC BASIC - MAIN COMMANDS      19/11/19   R65 ASSEMBLER  PAGE 40

1688                   *
1689                   * SAVE INTEGER
1690                   *
1691  2A70- 20 00 35           JSR ROUND
1692  2A73- 20 1C 37           JSR FLPINT
1693  2A76- A0 00              LDY =0
1694  2A78- A5 9A              LDA MANT+2
1695  2A7A- 91 7F              STA (TEMP3),Y
1696  2A7C- C8                 INY
1697  2A7D- A5 9B              LDA MANT+3
1698  2A7F- 91 7F              STA (TEMP3),Y
1699  2A81- 60                 RTS
1700                   *
1701                   * SAVE FLP
1702                   *
1703  2A82- 4C D4 34   LET1    JMP SAVFLP
1704                   *
1705                   * SAVE STRING
1706                   *
1707  2A85- 68                 PLA
1708  2A86- A0 02              LDY =2
1709  2A88- B1 9A              LDA (MANT+2),Y
1710  2A8A- C5 6A              CMP BTSTRG+1
1711  2A8C- 90 17              BCC LET2        SKIP, IF NOT SAVED S
1712  2A8E- D0 07              BNE *+9
1713  2A90- 88                 DEY
1714  2A91- B1 9A              LDA (MANT+2),Y
1715  2A93- C5 69              CMP BTSTRG
1716  2A95- 90 0E              BCC LET2
1717  2A97- A4 9B              LDY MANT+3
1718  2A99- C4 64              CPY STVAR+1
1719  2A9B- 90 08              BCC LET2
1720  2A9D- D0 0D              BNE LET2+7
1721  2A9F- A5 9A              LDA MANT+2
1722  2AA1- C5 63              CMP STVAR
1723  2AA3- B0 07              BCS LET2+7
1724                   *
1725  2AA5- A5 9A      LET2    LDA MANT+2
1726  2AA7- A4 9B              LDY MANT+3
1727  2AA9- 4C C2 2A           JMP LET3
1728                   *
1729  2AAC- A0 00              LDY =0
1730  2AAE- B1 9A              LDA (MANT+2),Y
1731  2AB0- 20 AD 2D           JSR TSTRRM
1732  2AB3- A5 86              LDA TEMP5
1733  2AB5- A4 87              LDY TEMP5+1
1734  2AB7- 85 A5              STA DYADIC+6
1735  2AB9- 84 A6              STY DYADIC+7
1736  2ABB- 20 BF 2D           JSR INSSTR
1737  2ABE- A9 97              LDA =<EXP

----------------------------------------------------------------------

GRAPHIC BASIC - MAIN COMMANDS      19/11/19   R65 ASSEMBLER  PAGE 41

1738  2AC0- A0 00              LDY =0
1739  2AC2- 85 86      LET3    STA TEMP5
1740  2AC4- 84 87              STY TEMP5+1
1741  2AC6- 20 44 29           JSR PREPS1
1742  2AC9- A0 00              LDY =0
1743  2ACB- B1 86              LDA (TEMP5),Y
1744  2ACD- 91 7F              STA (TEMP3),Y
1745  2ACF- C8                 INY
1746  2AD0- B1 86              LDA (TEMP5),Y
1747  2AD2- 91 7F              STA (TEMP3),Y
1748  2AD4- C8                 INY
1749  2AD5- B1 86              LDA (TEMP5),Y
1750  2AD7- 91 7F              STA (TEMP3),Y
1751  2AD9- 60                 RTS
1752                   *
1753                   *
1754                   * PRINT: STATEMENT ROUTINE
1755                   **************************
1756                   *
1757  2ADA- C9 23      PRINT   CMP ='#'        DEVICE
1758  2ADC- D0 11              BNE PRINT1-3
1759  2ADE- 20 66 42           JSR SETDEV
1760  2AE1- 20 EF 2A           JSR PRINT1-3
1761  2AE4- 20 B0 42           JSR RSTDEV
1762  2AE7- A2 00              LDX =0
1763  2AE9- 86 00              STX OUTDEV
1764  2AEB- 60                 RTS
1765                   *
1766  2AEC- 20 8E 28           JSR OUTSTR+3
1767  2AEF- 20 13 27           JSR FETCH1
1768  2AF2- D0 03      PRINT1  BNE *+5
1769  2AF4- 4C 95 24           JMP CRLF        CRLF, IF EOL
1770  2AF7- C9 21              CMP ='!'        COMMENT?
1771  2AF9- F0 F9              BEQ PRINT1+2    YES, SAME AS EOL
1772  2AFB- C9 B0              CMP =$B0
1773  2AFD- F0 36              BEQ TAB         CODE FOR TAB(
1774  2AFF- C9 B3             CMP =$B3        CODE FOR SPC(
1775  2B01- F0 32              BEQ TAB
1776  2B03- C9 2C              CMP =','
1777  2B05- F0 21              BEQ AUTOTB
1778  2B07- C9 3B              CMP =';'
1779  2B09- F0 4A              BEQ TAB1+8
1780  2B0B- C9 5B              CMP ='['
1781  2B0D- F0 50              BEQ PRINT2
1782  2B0F- 20 F7 2D           JSR EXPRES
1783  2B12- 24 45              BIT RESTYP
1784  2B14- 30 D6              BMI PRINT1-6    IF STRING
1785  2B16- 20 79 49           JSR FORMOUT
1786  2B19- 20 8B 28           JSR OUTSTR
1787  2B1C- A5 CB              LDA FORMFL

----------------------------------------------------------------------

GRAPHIC BASIC - MAIN COMMANDS      19/11/19   R65 ASSEMBLER  PAGE 42

1788  2B1E- D0 05              BNE *+7
1789  2B20- A9 20              LDA =' '
1790  2B22- 20 BC 2F           JSR OUTCHR
1791  2B25- 4C EF 2A           JMP PRINT1-3
1792                   *
1793  2B28- A5 02      AUTOTB  LDA POS
1794  2B2A- 38                 SEC
1795  2B2B- E9 0C              SBC =12
1796  2B2D- B0 FC              BCS *-2
1797  2B2F- 49 FF              EOR =$FF
1798  2B31- 69 01              ADC =1
1799  2B33- D0 17              BNE TAB1-1      ALLWAYS TAKEN
1800                   *
1801  2B35- 48         TAB     PHA             SAVE CODE
1802  2B36- 20 FA 36           JSR NUMEXP
1803  2B39- C9 29              CMP =')'
1804  2B3B- F0 03              BEQ *+5
1805  2B3D- 4C C4 26           JMP SYNERR
1806  2B40- 68                 PLA
1807  2B41- C9 B0              CMP =$B0        TAB(
1808  2B43- D0 16              BNE TAB1+14
1809  2B45- 8A                 TXA
1810  2B46- E5 02              SBC POS
1811  2B48- 90 0B              BCC TAB1+8
1812  2B4A- F0 09              BEQ TAB1+8
1813  2B4C- AA                 TAX
1814  2B4D- A9 20      TAB1    LDA =' '
1815  2B4F- 20 BC 2F           JSR OUTCHR
1816  2B52- CA                 DEX
1817  2B53- D0 F8              BNE TAB1
1818  2B55- 20 0D 27           JSR FETCH
1819  2B58- D0 9D              BNE PRINT1+5
1820  2B5A- 60                 RTS
1821                   *
1822  2B5B- E8                 INX
1823  2B5C- 4C 52 2B           JMP TAB1+5
1824                   *
1825  2B5F- 20 0D 27   PRINT2  JSR FETCH       GET FORMAT CODE
1826  2B62- 20 B9 49           JSR FORMAT
1827  2B65- A9 5D              LDA =']'
1828  2B67- 20 73 2B           JSR FOLLOW
1829  2B6A- 4C F2 2A           JMP PRINT1
1830                   *
1831                   * FOLLOW: CHAR IN A MUST FOLLOW
1832                   *******************************
1833                   *
1834  2B6D- A9 28              LDA ='('        FOLLOW-6: "(" MUST FOLLO
1835  2B6F- D0 02              BNE *+4
1836  2B71- A9 29              LDA =')'        FOLLOW-1: ")" MUST FOLLO
1837  2B73- A0 00      FOLLOW  LDY =0

----------------------------------------------------------------------

GRAPHIC BASIC - MAIN COMMANDS      19/11/19   R65 ASSEMBLER  PAGE 43

1838  2B75- D1 A9              CMP (PC),Y
1839  2B77- D0 03              BNE *+5
1840  2B79- 4C 0D 27           JMP FETCH
1841  2B7C- 4C C4 26           JMP SYNERR
1842                   *
1843                           TIT GRAPHIC BASIC - EXPRESSIONS
1844                           PAG

----------------------------------------------------------------------

GRAPHIC BASIC - EXPRESSIONS        19/11/19   R65 ASSEMBLER  PAGE 44

1845                   *
1846                   * GETVAR: GET VARIABLE
1847                   **********************
1848                   *
1849  2B7F- A2 00      GETVAR  LDX =0
1850  2B81- 20 13 27           JSR FETCH1
1851  2B84- 86 44              STX RESTYP-1
1852  2B86- 85 7B              STA VARSYM
1853  2B88- 20 13 27           JSR FETCH1      FETCH SAME AGAIN
1854  2B8B- 20 5B 2C           JSR TLETT
1855  2B8E- B0 03              BCS *+5
1856  2B90- 4C C4 26   SYNER1  JMP SYNERR
1857                   *
1858  2B93- A2 00              LDX =0
1859  2B95- 86 45              STX RESTYP
1860  2B97- 86 46              STX RESTYP+1
1861  2B99- 20 0D 27           JSR FETCH
1862  2B9C- 90 05              BCC *+7         SKIP, IF NUMBER
1863  2B9E- 20 5B 2C           JSR TLETT
1864  2BA1- 90 0B              BCC *+13
1865  2BA3- AA                 TAX             SAVE SECOND CHAR IN X
1866  2BA4- 20 0D 27           JSR FETCH
1867  2BA7- 90 FB              BCC *-3         SKIP NUMBERS
1868  2BA9- 20 5B 2C           JSR TLETT       SKIP LETTERS
1869  2BAC- B0 F6              BCS *-8
1870                   *
1871  2BAE- C9 24              CMP ='$'        STRING?
1872  2BB0- D0 06              BNE *+8
1873  2BB2- A9 FF              LDA =$FF
1874  2BB4- 85 45              STA RESTYP
1875  2BB6- D0 10              BNE GETV1       ALLWAYS TAKEN
1876                   *
1877  2BB8- C9 25              CMP ='%'        INTEGER?
1878  2BBA- D0 13              BNE GETV1+7
1879  2BBC- A5 48              LDA FLAG1
1880  2BBE- D0 D0              BNE SYNER1
1881  2BC0- A9 80              LDA =$80
1882  2BC2- 85 46              STA RESTYP+1
1883  2BC4- 05 7B              ORA VARSYM
1884  2BC6- 85 7B              STA VARSYM
1885  2BC8- 8A         GETV1   TXA             GET BACK SECOND CHAR
1886  2BC9- 09 80              ORA =$80
1887  2BCB- AA                 TAX
1888  2BCC- 20 0D 27           JSR FETCH
1889                   *
1890  2BCF- 86 7C              STX VARSYM+1
1891  2BD1- 38                 SEC             NEXT CHAR IN A
1892  2BD2- 05 48              ORA FLAG1
1893  2BD4- E9 28              SBC ='('
1894  2BD6- D0 03              BNE *+5

----------------------------------------------------------------------

GRAPHIC BASIC - EXPRESSIONS        19/11/19   R65 ASSEMBLER  PAGE 45

1895  2BD8- 4C FF 39           JMP GETARR      GET ARRAY
1896                   *
1897  2BDB- A9 00              LDA =0
1898  2BDD- 85 48              STA FLAG1
1899  2BDF- A5 63              LDA STVAR
1900  2BE1- A6 64              LDX STVAR+1
1901  2BE3- A0 00              LDY =0
1902  2BE5- 86 96              STX TRANSP+1
1903  2BE7- 85 95      GETV2   STA TRANSP      SEARCH IN VAR TB
1904  2BE9- E4 66              CPX EOVAR+1
1905  2BEB- D0 04              BNE *+6
1906  2BED- C5 65              CMP EOVAR
1907  2BEF- F0 18              BEQ GETV3       BRANCH, IF END OF TABLE
1908  2BF1- A5 7B              LDA VARSYM
1909  2BF3- D1 95              CMP (TRANSP),Y
1910  2BF5- D0 08              BNE *+10
1911  2BF7- A5 7C              LDA VARSYM+1
1912  2BF9- C8                 INY
1913  2BFA- D1 95              CMP (TRANSP),Y
1914  2BFC- F0 4E              BEQ GETV9       BRANCH, IF FOUND
1915  2BFE- 88                 DEY
1916  2BFF- 18                CLC
1917  2C00- A5 95              LDA TRANSP
1918  2C02- 69 07              ADC =7
1919  2C04- 90 E1              BCC GETV2
1920  2C06- E8                 INX
1921  2C07- D0 DC              BNE GETV2-2
1922                   *
1923  2C09- A5 CF      GETV3   LDA TEMP4+1
1924  2C0B- F0 05              BEQ *+7
1925  2C0D- A2 56              LDX =$56
1926  2C0F- 4C 43 23           JMP ERROR       UNDEFINED VARIABLE
1927  2C12- A5 65              LDA EOVAR
1928  2C14- A4 66              LDY EOVAR+1
1929  2C16- 85 95              STA TRANSP
1930  2C18- 84 96              STY TRANSP+1
1931  2C1A- A5 67              LDA STSPAC
1932  2C1C- A4 68              LDY STSPAC+1
1933  2C1E- 85 90              STA BEGINB
1934  2C20- 84 91              STY BEGINB+1
1935  2C22- 18                 CLC
1936  2C23- 69 07              ADC =7
1937  2C25- 90 01              BCC *+3
1938  2C27- C8                 INY
1939  2C28- 85 8E              STA ENDB
1940  2C2A- 84 8F              STY ENDB+1
1941  2C2C- 20 C4 22           JSR MKROOM
1942  2C2F- A5 8E              LDA ENDB        SET END OF VAR TB
1943  2C31- A4 8F              LDY ENDB+1
1944  2C33- C8                 INY

----------------------------------------------------------------------

GRAPHIC BASIC - EXPRESSIONS        19/11/19   R65 ASSEMBLER  PAGE 46

1945  2C34- 85 65              STA EOVAR
1946  2C36- 84 66              STY EOVAR+1     1+END OF TABLE
1947  2C38- A0 00              LDY =0
1948  2C3A- A5 7B              LDA VARSYM      SAVE SYMBOL
1949  2C3C- 91 95              STA (TRANSP),Y
1950  2C3E- C8                 INY
1951  2C3F- A5 7C              LDA VARSYM+1
1952  2C41- 91 95              STA (TRANSP),Y
1953  2C43- A9 00              LDA =0
1954  2C45- C8                 INY
1955  2C46- 91 95              STA (TRANSP),Y  CLEAR VALUE
1956  2C48- C0 06              CPY =6
1957  2C4A- D0 F9              BNE *-5
1958                   *
1959  2C4C- A5 95      GETV9   LDA TRANSP
1960  2C4E- 18                 CLC
1961  2C4F- 69 02              ADC =2
1962  2C51- A4 96              LDY TRANSP+1
1963  2C53- 90 01              BCC *+3
1964  2C55- C8                 INY
1965  2C56- 85 7D              STA VARSTP
1966  2C58- 84 7E              STY VARSTP+1
1967  2C5A- 60                 RTS
1968                   *
1969                   * TLETT: TEST LETTER (C=1 IF LETTER)
1970                   ************************************
1971                   *
1972  2C5B- C9 41      TLETT   CMP =$41
1973  2C5D- 90 05              BCC *+7
1974  2C5F- E9 5B              SBC =$5B
1975  2C61- 38                 SEC
1976  2C62- E9 A5              SBC =$A5
1977  2C64- 60                 RTS
1978                   *
1979                   * TSTRR1
1980                   *
1981  2C65- 46 47      TSTRR1  LSR TEMP2
1982  2C67- 48                 PHA
1983  2C68- 49 FF              EOR =$FF
1984  2C6A- 38                 SEC
1985  2C6B- 65 69              ADC BTSTRG
1986  2C6D- A4 6A              LDY BTSTRG+1
1987  2C6F- B0 01              BCS *+3
1988  2C71- 88                 DEY
1989  2C72- C4 68              CPY STSPAC+1
1990  2C74- 90 11              BCC TSTRR2
1991  2C76- D0 04              BNE *+6
1992  2C78- C5 67              CMP STSPAC
1993  2C7A- 90 0B              BCC TSTRR2
1994  2C7C- 85 69              STA BTSTRG

----------------------------------------------------------------------

GRAPHIC BASIC - EXPRESSIONS        19/11/19   R65 ASSEMBLER  PAGE 47

1995  2C7E- 84 6A              STY BTSTRG+1
1996  2C80- 85 6B              STA TPSTRG
1997  2C82- 84 6C              STY TPSTRG+1
1998  2C84- AA                 TAX
1999  2C85- 68                 PLA
2000  2C86- 60                 RTS
2001                   *
2002  2C87- A2 3A      TSTRR2  LDX =$3A
2003  2C89- A5 47              LDA TEMP2
2004  2C8B- 10 03              BPL *+5
2005  2C8D- 4C 43 23           JMP ERROR       OUT OF MEMORY
2006  2C90- 20 9A 2C           JSR PKSTRG
2007  2C93- A9 80              LDA =$80
2008  2C95- 85 47              STA TEMP2
2009  2C97- 68                 PLA
2010  2C98- D0 CD              BNE TSTRR1+2
2011                   *
2012                   * PKSTRG: PACK STRINGS
2013                   **********************
2014                   *
2015  2C9A- A6 6D      PKSTRG  LDX TPMEM
2016  2C9C- A5 6E              LDA TPMEM+1
2017  2C9E- 86 69              STX BTSTRG
2018                    * BASIC3:A ORIGINAL 7/1/1982, RECOVERED 3/2018
2019  2CA0- 85 6A              STA BTSTRG+1
2020  2CA2- A0 00              LDY =0
2021  2CA4- 84 85              STY TEMP6+1
2022  2CA6- A5 67              LDA STSPAC
2023  2CA8- A6 68              LDX STSPAC+1
2024  2CAA- 85 95              STA TRANSP
2025  2CAC- 86 96              STX TRANSP+1
2026  2CAE- A9 4F              LDA =STRST      START OF STRING STACK
2027  2CB0- A2 00              LDX =0
2028  2CB2- 85 58              STA TEMP1
2029  2CB4- 86 59              STX TEMP1+1
2030  2CB6- C5 4C              CMP STRSTP
2031  2CB8- F0 05              BEQ *+7
2032  2CBA- 20 39 2D           JSR PKSTR3
2033  2CBD- F0 F7              BEQ *-7         DO UNTIL STACK EMPTY
2034  2CBF- A9 07              LDA =7
2035  2CC1- 85 89              STA SIZE
2036  2CC3- A5 63              LDA STVAR
2037  2CC5- A6 64              LDX STVAR+1
2038  2CC7- 85 58              STA TEMP1
2039  2CC9- 86 59              STX TEMP1+1
2040  2CCB- E4 66              CPX EOVAR+1
2041  2CCD- D0 04              BNE *+6
2042  2CCF- C5 65              CMP EOVAR
2043  2CD1- F0 05              BEQ *+7
2044  2CD3- 20 2F 2D           JSR PKSTR2

----------------------------------------------------------------------

GRAPHIC BASIC - EXPRESSIONS        19/11/19   R65 ASSEMBLER  PAGE 48

2045  2CD6- F0 F3              BEQ *-11
2046                   *
2047  2CD8- 85 8E              STA ENDB
2048  2CDA- 86 8F              STX ENDB+1
2049  2CDC- A9 03              LDA =3
2050  2CDE- 85 89              STA SIZE
2051  2CE0- A5 8E      PKSTR1  LDA ENDB
2052  2CE2- A6 8F              LDX ENDB+1
2053  2CE4- E4 68              CPX STSPAC+1
2054  2CE6- D0 07              BNE *+9
2055  2CE8- C5 67              CMP STSPAC
2056  2CEA- D0 03              BNE *+5
2057  2CEC- 4C 78 2D           JMP PKSTR5      DO UNTIL THROUGH ARRAYS
2058                   *
2059  2CEF- 85 58              STA TEMP1
2060  2CF1- 86 59              STX TEMP1+1
2061  2CF3- A0 00              LDY =0
2062  2CF5- B1 58              LDA (TEMP1),Y
2063  2CF7- AA                 TAX             SAVE IN X
2064  2CF8- C8                 INY
2065  2CF9- B1 58              LDA (TEMP1),Y
2066  2CFB- 08                 PHP
2067  2CFC- C8                 INY
2068  2CFD- B1 58              LDA (TEMP1),Y
2069  2CFF- 65 8E             ADC ENDB
2070  2D01- 85 8E              STA ENDB
2071  2D03- C8                 INY
2072  2D04- B1 58              LDA (TEMP1),Y
2073  2D06- 65 8F              ADC ENDB+1
2074  2D08- 85 8F              STA ENDB+1
2075  2D0A- 28                 PLP
2076  2D0B- 10 D3              BPL PKSTR1
2077  2D0D- 8A                 TXA
2078  2D0E- 30 D0              BMI PKSTR1
2079  2D10- C8                 INY
2080  2D11- B1 58              LDA (TEMP1),Y
2081  2D13- 0A                 ASL A
2082  2D14- 69 05              ADC =5
2083  2D16- A0 00              LDY =0
2084  2D18- 65 58              ADC TEMP1
2085  2D1A- 85 58              STA TEMP1
2086  2D1C- 90 02              BCC *+4
2087  2D1E- E6 59              INC TEMP1+1
2088  2D20- A6 59              LDX TEMP1+1
2089  2D22- E4 8F              CPX ENDB+1
2090  2D24- D0 04              BNE *+6
2091  2D26- C5 8E              CMP ENDB
2092  2D28- F0 BA              BEQ PKSTR1+4
2093  2D2A- 20 39 2D           JSR PKSTR3
2094  2D2D- F0 F3              BEQ *-11

----------------------------------------------------------------------

GRAPHIC BASIC - EXPRESSIONS        19/11/19   R65 ASSEMBLER  PAGE 49

2095  2D2F- B1 58      PKSTR2  LDA (TEMP1),Y
2096  2D31- 30 35              BMI PKSTR4
2097  2D33- C8                 INY
2098  2D34- B1 58              LDA (TEMP1),Y
2099  2D36- 10 30              BPL PKSTR4
2100  2D38- C8                 INY
2101                   *
2102  2D39- B1 58      PKSTR3  LDA (TEMP1),Y
2103  2D3B- F0 2B              BEQ PKSTR4
2104  2D3D- C8                 INY
2105  2D3E- B1 58              LDA (TEMP1),Y
2106  2D40- AA                 TAX
2107  2D41- C8                 INY
2108  2D42- B1 58              LDA (TEMP1),Y
2109  2D44- C5 6A              CMP BTSTRG+1
2110  2D46- 90 06              BCC *+8
2111  2D48- D0 1E              BNE PKSTR4
2112  2D4A- E4 69              CPX BTSTRG
2113  2D4C- B0 1A              BCS PKSTR4
2114  2D4E- C5 96              CMP TRANSP+1
2115  2D50- 90 16              BCC PKSTR4
2116  2D52- D0 04              BNE *+6
2117  2D54- E4 95              CPX TRANSP
2118  2D56- 90 10              BCC PKSTR4
2119  2D58- 86 95              STX TRANSP
2120  2D5A- 85 96              STA TRANSP+1
2121  2D5C- A5 58              LDA TEMP1
2122  2D5E- A6 59              LDX TEMP1+1
2123  2D60- 85 84              STA TEMP6
2124  2D62- 86 85              STX TEMP6+1
2125  2D64- A5 89              LDA SIZE
2126  2D66- 85 8B              STA PNT1
2127                   *
2128  2D68- A5 89      PKSTR4  LDA SIZE
2129  2D6A- 18                 CLC
2130  2D6B- 65 58              ADC TEMP1
2131  2D6D- 85 58              STA TEMP1
2132  2D6F- 90 02              BCC *+4
2133  2D71- E6 59              INC TEMP1+1
2134  2D73- A6 59              LDX TEMP1+1
2135  2D75- A0 00              LDY =0
2136  2D77- 60                 RTS
2137                   *
2138  2D78- A6 85      PKSTR5  LDX TEMP6+1
2139  2D7A- F0 F7              BEQ *-7
2140  2D7C- A5 8B              LDA PNT1
2141  2D7E- E9 03              SBC =3
2142  2D80- 4A                 LSR A
2143  2D81- A8                 TAY
2144  2D82- 85 8B              STA PNT1

----------------------------------------------------------------------

GRAPHIC BASIC - EXPRESSIONS        19/11/19   R65 ASSEMBLER  PAGE 50

2145  2D84- B1 84              LDA (TEMP6),Y
2146  2D86- 65 95              ADC TRANSP
2147  2D88- 85 90              STA BEGINB
2148  2D8A- A5 96              LDA TRANSP+1
2149  2D8C- 69 00              ADC =0
2150  2D8E- 85 91              STA BEGINB+1
2151  2D90- A5 69              LDA BTSTRG
2152  2D92- A6 6A              LDX BTSTRG+1
2153  2D94- 85 8E              STA ENDB
2154  2D96- 86 8F              STX ENDB+1
2155  2D98- 20 CB 22           JSR MKROOM+7
2156  2D9B- A4 8B              LDY PNT1
2157  2D9D- C8                 INY
2158  2D9E- A5 8E              LDA ENDB
2159  2DA0- 91 84              STA (TEMP6),Y
2160  2DA2- AA                 TAX
2161  2DA3- E6 8F              INC ENDB+1
2162  2DA5- A5 8F              LDA ENDB+1
2163  2DA7- C8                 INY
2164  2DA8- 91 84              STA (TEMP6),Y
2165  2DAA- 4C 9E 2C           JMP PKSTRG+4
2166                   *
2167                   * TSTTTM: TEST STRING ROOM
2168                   **************************
2169                   *
2170  2DAD- A6 9A      TSTRRM  LDX MANT+2
2171  2DAF- A4 9B              LDY MANT+3
2172  2DB1- 86 86              STX TEMP5
2173  2DB3- 84 87              STY TEMP5+1
2174  2DB5- 20 65 2C           JSR TSTRR1
2175  2DB8- 86 98              STX MANT
2176  2DBA- 84 99              STY MANT+1
2177  2DBC- 85 97              STA EXP
2178  2DBE- 60                 RTS
2179                   *
2180                   * INSSTR: INSERT STRING
2181                   ***********************
2182                   *
2183  2DBF- A0 00      INSSTR  LDY =0
2184  2DC1- B1 A5              LDA (DYADIC+6),Y
2185  2DC3- 48                 PHA             A
2186  2DC4- C8                 INY
2187  2DC5- B1 A5              LDA (DYADIC+6),Y
2188  2DC7- AA                 TAX             X
2189  2DC8- C8                 INY
2190  2DC9- B1 A5              LDA (DYADIC+6),Y
2191  2DCB- A8                 TAY             Y
2192  2DCC- 68                 PLA
2193                   *
2194  2DCD- 86 58      INSST0  STX TEMP1       X,Y=START

----------------------------------------------------------------------

GRAPHIC BASIC - EXPRESSIONS        19/11/19   R65 ASSEMBLER  PAGE 51

2195  2DCF- 84 59              STY TEMP1+1
2196  2DD1- A8                 TAY             A=SIZE
2197  2DD2- F0 0A              BEQ *+12
2198  2DD4- 48                 PHA
2199  2DD5- 88                 DEY
2200  2DD6- B1 58              LDA (TEMP1),Y
2201  2DD8- 91 6B              STA (TPSTRG),Y
2202  2DDA- 98                 TYA
2203  2DDB- D0 F8              BNE *-6
2204  2DDD- 68                 PLA
2205  2DDE- 18                 CLC
2206  2DDF- 65 6B              ADC TPSTRG
2207  2DE1- 85 6B              STA TPSTRG
2208  2DE3- 90 02              BCC *+4
2209  2DE5- E6 6C              INC TPSTRG+1
2210  2DE7- 60                 RTS
2211                   *
2212                   * TESTTP: REST RESULT TYPE
2213                   **************************
2214                   * C=0: MUST BE NUMERIC, C=1 MUST BE STRING
2215                   *
2216  2DE8- 18         TESTTP  CLC
2217  2DE9- 24 45              BIT RESTYP
2218  2DEB- 30 03              BMI *+5
2219  2DED- B0 03              BCS *+5
2220  2DEF- 60                 RTS
2221  2DF0- B0 FD              BCS *-1
2222  2DF2- A2 96              LDX =$96        TYPE MISSMATCH
2223  2DF4- 4C 43 23           JMP ERROR
2224                   *
2225                   * EXPRESSION
2226                   ************
2227                   *
2228  2DF7- A6 A9      EXPRES  LDX PC          DEC PC BY 1
2229  2DF9- D0 02              BNE *+4
2230  2DFB- C6 AA              DEC PC+1
2231  2DFD- C6 A9              DEC PC
2232  2DFF- A2 00             LDX =0
2233  2E01- 8A                 TXA
2234  2E02- 48                 PHA             CURRENT ORDER
2235  2E03- A9 01              LDA =1
2236  2E05- 20 34 23           JSR TSSTK
2237  2E08- 20 1D 2F           JSR SIMEXP
2238  2E0B- A9 00              LDA =0
2239  2E0D- 85 83              STA LOGIC
2240  2E0F- 20 13 27           JSR FETCH1
2241  2E12- 38         EXPR1   SEC
2242  2E13- E9 BE              SBC =$BE        CODE FOR >
2243  2E15- 90 1A              BCC EXPR2       SKIP, IF NOT LOGIC OP
2244  2E17- C9 03              CMP =$03

----------------------------------------------------------------------

GRAPHIC BASIC - EXPRESSIONS        19/11/19   R65 ASSEMBLER  PAGE 52

2245  2E19- B0 16              BCS EXPR2
2246                   *
2247  2E1B- C9 01              CMP =1
2248  2E1D- 2A                 ROL A
2249  2E1E- 49 01              EOR =1          >=BIT1. ==BIT2, <=BIT3
2250  2E20- 45 83              EOR LOGIC
2251  2E22- C5 83              CMP LOGIC
2252  2E24- B0 03              BCS *+5
2253  2E26- 4C C4 26           JMP SYNERR
2254  2E29- 85 83              STA LOGIC
2255  2E2B- 20 0D 27           JSR FETCH
2256  2E2E- 4C 12 2E           JMP EXPR1
2257                   *
2258  2E31- A6 83      EXPR2   LDX LOGIC
2259  2E33- D0 2C              BNE EXPR3       SKIP, IF LOGIC OP
2260  2E35- B0 7D              BCS EXPR6
2261  2E37- 69 07              ADC =7
2262  2E39- 90 79              BCC EXPR6
2263  2E3B- 65 45              ADC RESTYP      C+1
2264  2E3D- D0 03              BNE *+5
2265  2E3F- 4C DF 2E           JMP STRADD      STRING ADDITION
2266  2E42- 69 FF              ADC =$FF
2267  2E44- 85 58              STA TEMP1
2268  2E46- 0A                 ASL A
2269  2E47- 65 58              ADC TEMP1
2270  2E49- A8                 TAY             Y=3*A
2271  2E4A- 68         EXPR2A  PLA             CURRENT ORDER
2272  2E4B- D9 EA 2F           CMP MATHTB,Y    COMPARE WITH NEW ONE
2273  2E4E- B0 69              BCS EXPR6+5
2274  2E50- 20 E8 2D           JSR TESTTP      MUST BE NUMERIC
2275  2E53- 48                 PHA
2276  2E54- 20 7A 2E           JSR EXPR4+7
2277  2E57- 68                 PLA
2278  2E58- A4 81              LDY TEMP3+2
2279  2E5A- 10 17              BPL EXPR4
2280  2E5C- AA                 TAX
2281  2E5D- F0 58              BEQ EXPR6+3
2282  2E5F- D0 61              BNE EXPR7
2283                   *
2284  2E61- 46 45      EXPR3   LSR RESTYP
2285  2E63- 8A                 TXA
2286  2E64- 2A                 ROL A
2287  2E65- A6 A9              LDX PC          DECR PC
2288  2E67- D0 02              BNE *+4
2289  2E69- C6 AA              DEC PC+1
2290  2E6B- C6 A9              DEC PC
2291  2E6D- A0 1B              LDY =$1B        MATHOP =
2292  2E6F- 85 83              STA LOGIC
2293  2E71- D0 D7              BNE EXPR2A      ALLWAYS TAKEN
2294  2E73- D9 EA 2F   EXPR4   CMP MATHTB,Y

----------------------------------------------------------------------

GRAPHIC BASIC - EXPRESSIONS        19/11/19   R65 ASSEMBLER  PAGE 53

2295  2E76- B0 4A              BCS EXPR7
2296  2E78- 90 D9              BCC EXPR2A+9    ALLWAYS TAKEN
2297                   *
2298  2E7A- B9 EC 2F           LDA MATHTB+2,Y
2299  2E7D- 48                 PHA
2300  2E7E- B9 EB 2F           LDA MATHTB+1,Y
2301  2E81- 48                 PHA
2302  2E82- 20 8B 2E           JSR EXPR5
2303  2E85- A5 83              LDA LOGIC
2304  2E87- 48                 PHA
2305  2E88- 4C 01 2E           JMP EXPRES+10
2306                   *
2307  2E8B- A5 9C      EXPR5   LDA SIGN
2308  2E8D- BE EA 2F           LDX MATHTB,Y
2309  2E90- A8                 TAY
2310  2E91- 68                 PLA
2311  2E92- 85 58              STA TEMP1
2312  2E94- 68                 PLA
2313  2E95- 85 59              STA TEMP1+1     GET MATHOPT ADDRESS
2314  2E97- E6 58              INC TEMP1
2315  2E99- D0 02              BNE *+4
2316  2E9B- E6 59              INC TEMP1+1
2317  2E9D- 98                 TYA
2318  2E9E- 48                 PHA
2319  2E9F- 20 00 35   MATHOP  JSR ROUND
2320  2EA2- A5 9B              LDA MANT+3
2321  2EA4- 48                 PHA
2322  2EA5- A5 9A              LDA MANT+2
2323  2EA7- 48                 PHA
2324  2EA8- A5 99              LDA MANT+1
2325  2EAA- 48                 PHA
2326  2EAB- A5 98              LDA MANT
2327  2EAD- 48                 PHA
2328  2EAE- A5 97              LDA EXP
2329  2EB0- 48                 PHA
2330  2EB1- 6C 58 00           JMP (TEMP1)     EXECUTE MATHOP
2331                   *
2332  2EB4- A0 FF      EXPR6   LDY =$FF
2333  2EB6- 68                 PLA
2334  2EB7- F0 23              BEQ EXPR8
2335  2EB9- C9 64              CMP =$64        PRIORITY CODE COMPARE
2336  2EBB- F0 03              BEQ *+5
2337  2EBD- 20 E8 2D           JSR TESTTP
2338  2EC0- 84 81              STY TEMP3+2
2339  2EC2- 68         EXPR7   PLA
2340  2EC3- 4A                 LSR A
2341  2EC4- 85 4A              STA READFL+1
2342  2EC6- 68                 PLA
2343  2EC7- 85 9F              STA DYADIC
2344  2EC9- 68                 PLA

----------------------------------------------------------------------

GRAPHIC BASIC - EXPRESSIONS        19/11/19   R65 ASSEMBLER  PAGE 54

2345  2ECA- 85 A0              STA DYADIC+1
2346  2ECC- 68                 PLA
2347  2ECD- 85 A1              STA DYADIC+2
2348  2ECF- 68                 PLA
2349  2ED0- 85 A2              STA DYADIC+3
2350  2ED2- 68                 PLA
2351  2ED3- 85 A3              STA DYADIC+4
2352  2ED5- 68                 PLA
2353  2ED6- 85 A4              STA DYADIC+5
2354  2ED8- 45 9C              EOR SIGN
2355  2EDA- 85 A5              STA DYADIC+6
2356  2EDC- A5 97      EXPR8   LDA EXP
2357  2EDE- 60                 RTS
2358                   *
2359                   * STRADD: STRING ADDITION
2360                   *************************
2361                   *
2362  2EDF- A5 9B      STRADD  LDA MANT+3
2363  2EE1- 48                 PHA
2364  2EE2- A5 9A              LDA MANT+2
2365  2EE4- 48                 PHA
2366  2EE5- 20 1D 2F           JSR SIMEXP      GET SECOND STRING
2367  2EE8- 38                 SEC
2368  2EE9- 20 E9 2D           JSR TESTTP+1     MUST BE STRING
2369  2EEC- 68                 PLA
2370  2EED- 85 A5              STA DYADIC+6
2371  2EEF- 68                 PLA
2372  2EF0- 85 A6              STA DYADIC+7
2373  2EF2- A0 00              LDY =0
2374  2EF4- B1 A5              LDA (DYADIC+6),Y        SIZE OF S1
2375  2EF6- 18                 CLC
2376  2EF7- 71 9A              ADC (MANT+2),Y          SIZE OF S2
2377  2EF9- 90 05              BCC *+7
2378  2EFB- A2 A4              LDX =$A4
2379  2EFD- 4C 43 23          JMP ERROR       STRING TOO LONG
2380  2F00- 20 AD 2D           JSR TSTRRM
2381  2F03- 20 BF 2D           JSR INSSTR
2382  2F06- A5 86              LDA TEMP5
2383  2F08- A4 87              LDY TEMP5+1
2384  2F0A- 20 13 29           JSR PREPST+4
2385  2F0D- 20 D1 2D           JSR INSST0+4
2386  2F10- A5 A5              LDA DYADIC+6
2387  2F12- A4 A6              LDY DYADIC+7
2388  2F14- 20 13 29           JSR PREPST+4
2389  2F17- 20 E7 28           JSR STRSI3
2390  2F1A- 4C 0F 2E           JMP EXPR1-3
2391                   *
2392                   * SIMEXP: SIMPLE EXPRESSION
2393                   ***************************
2394                   *

----------------------------------------------------------------------

GRAPHIC BASIC - EXPRESSIONS        19/11/19   R65 ASSEMBLER  PAGE 55

2395  2F1D- A9 00      SIMEXP  LDA =0
2396  2F1F- 85 45              STA RESTYP
2397  2F21- 20 0D 27           JSR FETCH
2398  2F24- B0 03              BCS *+5         SKIP, IF NOT NUMBER
2399  2F26- 4C 9D 35   SIMEX1  JMP NUMBER
2400                   *
2401  2F29- 20 5B 2C           JSR TLETT
2402  2F2C- B0 62              BCS VARIAB      SKIP, IF VARIABLE
2403  2F2E- C9 D8              CMP =$D8        CODE FOR PI
2404  2F30- D0 0F              BNE SIMEX0
2405                   *
2406  2F32- A9 3C              LDA =<PI
2407  2F34- A0 2F              LDY =>PI
2408  2F36- 20 AF 34           JSR GETFLP
2409  2F39- 4C 0D 27           JMP FETCH
2410  2F3C- 82 49 0F   PI      BYT $82,$49,$0F,$DA,$A1
2410  2F3F- DA A1 
2411                   *
2412  2F41- C9 24      SIMEX0  CMP ='$'        HEX INPUT
2413  2F43- F0 E1              BEQ SIMEX1
2414                   *
2415  2F45- C9 2E              CMP ='.'
2416  2F47- F0 DD              BEQ SIMEX1
2417  2F49- C9 B8              CMP =$B8        CODE FOR -VALUE OF PI
2418  2F4B- F0 3C              BEQ SIMEX5
2419  2F4D- C9 B7              CMP =$B7        CODE FOR +
2420  2F4F- F0 D0              BEQ SIMEXP+4
2421  2F51- C9 22              CMP ='"'
2422  2F53- D0 15              BNE SIMEX2      SKIP, IF NOT STRING
2423                   *
2424  2F55- A5 A9      EXPSTR  LDA PC          STRING EXPRESSION
2425  2F57- A4 AA              LDY PC+1
2426  2F59- 69 00              ADC =0          INCREMENT BY 1 (C=1)
2427  2F5B- 90 01              BCC *+3
2428  2F5D- C8                 INY
2429  2F5E- 20 A8 28           JSR STRSIZ
2430  2F61- A6 A7      UPDPC   LDX DYADIC+8
2431  2F63- A4 A8              LDY DYADIC+9
2432  2F65- 86 A9              STX PC
2433  2F67- 84 AA              STY PC+1
2434  2F69- 60                 RTS
2435                   *
2436  2F6A- C9 B5      SIMEX2  CMP =$B5        CODE FOR NOT
2437  2F6C- D0 04              BNE *+6
2438  2F6E- A0 18              LDY =$18
2439  2F70- D0 19              BNE SIMEX5+2
2440                   *
2441  2F72- C9 B2              CMP =$B2        CODE FOR FN
2442  2F74- D0 03              BNE *+5
2443  2F76- 4C 76 3C           JMP FUNC        EXECUTE FUNCTION

----------------------------------------------------------------------

GRAPHIC BASIC - EXPRESSIONS        19/11/19   R65 ASSEMBLER  PAGE 56

2444                   *
2445  2F79- C9 C1              CMP =$C1        CODE FOR SIGN
2446  2F7B- 90 03              BCC *+5
2447  2F7D- 4C 58 39           JMP BFUNC       EX BASIC FUNCTION
2448                   *
2449  2F80- 20 6D 2B   ARGUM   JSR FOLLOW-6    MUST BE (
2450  2F83- 20 F7 2D           JSR EXPRES
2451  2F86- 4C 71 2B           JMP FOLLOW-2    MUST BE )
2452                   *
2453  2F89- A0 15      SIMEX5  LDY =$15        EXECUTE NEGATE
2454  2F8B- 68                 PLA
2455  2F8C- 68                 PLA
2456  2F8D- 4C 54 2E           JMP EXPR2A+10
2457                   *
2458                   * VARIAB: GET VALUE OF VARIABLE
2459                   *******************************
2460                   *
2461  2F90- A2 FF      VARIAB  LDX =$FF        MUST BE DEFINED
2462  2F92- 86 CF              STX TEMP4+1
2463  2F94- 20 7F 2B           JSR GETVAR
2464  2F97- 85 9A              STA MANT+2
2465  2F99- 84 9B              STY MANT+3
2466  2F9B- A5 7B              LDA VARSYM
2467  2F9D- A4 7C              LDY VARSYM+1
2468  2F9F- A6 45              LDX RESTYP
2469  2FA1- F0 01              BEQ *+3
2470  2FA3- 60                 RTS             RTS, IF STRING
2471                   *
2472  2FA4- A5 46              LDA RESTYP+1
2473  2FA6- 10 0D              BPL *+15        SKIP, IF FLP
2474  2FA8- A0 00              LDY =0
2475  2FAA- B1 9A              LDA (MANT+2),Y
2476  2FAC- AA                 TAX
2477  2FAD- C8                 INY
2478  2FAE- B1 9A              LDA (MANT+2),Y
2479  2FB0- A8                 TAY
2480  2FB1- 8A                 TXA
2481  2FB2- 4C DD 2F           JMP INTFLP
2482                   *
2483  2FB5- A5 9A              LDA MANT+2      GET FLP
2484  2FB7- A4 9B              LDY MANT+3
2485  2FB9- 4C AF 34           JMP GETFLP
2486                   *
2487                   *
2488                   * OUTCHR: OUTPUT CHAR
2489                   *********************
2490                   *
2491  2FBC- C9 20      OUTCHR  CMP =$20
2492  2FBE- 90 02              BCC *+4
2493  2FC0- E6 02              INC POS

----------------------------------------------------------------------

GRAPHIC BASIC - EXPRESSIONS        19/11/19   R65 ASSEMBLER  PAGE 57

2494  2FC2- C9 0D              CMP =$D
2495  2FC4- D0 06              BNE *+8
2496  2FC6- 48                 PHA
2497  2FC7- A9 00              LDA =0
2498  2FC9- 85 02              STA POS
2499  2FCB- 68                 PLA
2500                   *
2501  2FCC- 48                 PHA
2502  2FCD- 86 BF              STX SAVEXY
2503  2FCF- 84 C0              STY SAVEXY+1
2504  2FD1- 20 DA 2F           JSR PRC1
2505  2FD4- A6 BF              LDX SAVEXY
2506  2FD6- A4 C0              LDY SAVEXY+1
2507  2FD8- 68                 PLA
2508  2FD9- 60                 RTS
2509                   *
2510  2FDA- 6C B9 00   PRC1    JMP (PVECT)
2511                   *
2512                   * INTFLP: INTEGER TO FLP CONVERSION
2513                   ***********************************
2514                   *
2515  2FDD- A2 00      INTFLP  LDX =0
2516  2FDF- 86 45              STX RESTYP
2517  2FE1- 85 98              STA MANT
2518  2FE3- 84 99              STY MANT+1
2519  2FE5- A2 90              LDX =$90
2520  2FE7- 4C 48 35           JMP FLOAT2
2521                   *
2522                   *
2523                   * MATH OPERATION TABLE
2524                   **********************
2525                   * FORMAT: PRIORITY CODE, ADDRESS-1
2526                   *
2527  2FEA- 79         MATHTB  BYT $79
2528  2FEB- 3A 33              WRD ADD-1
2529  2FED- 79                 BYT $79
2530  2FEE- 1C 33              WRD SUBTR-1
2531  2FF0- 7B                 BYT $7B
2532  2FF1- 8B 38              WRD MULT-1
2533  2FF3- 7B                 BYT $7B
2534  2FF4- D0 37              WRD DIVIDE-1
2535  2FF6- 7F                 BYT $7F
2536  2FF7- D3 3E              WRD POWER-1
2537  2FF9- 50                 BYT $50
2538  2FFA- BE 39              WRD AND-1
2539  2FFC- 46                 BYT $46
2540  2FFD- BA 39              WRD OR-1
2541  2FFF- 7D                BYT $7D
2542  3000- BE 36              WRD NEGATE-1
2543  3002- 5A                 BYT $5A

----------------------------------------------------------------------

GRAPHIC BASIC - EXPRESSIONS        19/11/19   R65 ASSEMBLER  PAGE 58

2544  3003- 48 39              WRD NOT-1
2545  3005- 64                 BYT $64
2546  3006- 60 37              WRD TESTEQ-1
2547                   *
2548                   *
2549                           TIT GRAPHIC BASIC - STATEMENTS
2550                           PAG

----------------------------------------------------------------------

GRAPHIC BASIC - STATEMENTS         19/11/19   R65 ASSEMBLER  PAGE 59

2551                   *
2552                   * FOR: STATEMENT ROUTINE
2553                   ************************
2554                   *
2555  3008- A9 80      FOR     LDA =128
2556  300A- 85 48              STA FLAG1
2557  300C- 20 4D 2A           JSR LET
2558  300F- 20 21 28           JSR STACK
2559  3012- D0 05              BNE *+7         SKIP, IF NOT FOR ON ST
2560  3014- 8A                 TXA
2561  3015- 69 0F              ADC =15
2562  3017- AA                 TAX
2563  3018- 9A                 TXS
2564  3019- 68                 PLA             GET RETURN ADDRESS
2565  301A- 68                 PLA
2566  301B- A9 09              LDA =9
2567  301D- 20 34 23           JSR TSSTK       18 BYTES ON STACK?
2568  3020- 20 FE 27           JSR SEDPN       SEARCH EOLL OR ":"
2569  3023- 18                 CLC
2570  3024- 98                 TYA
2571  3025- 65 A9              ADC PC          SAVE ADDRESS OF NEXT
2572  3027- 48                 PHA
2573  3028- A5 AA              LDA PC+1
2574  302A- 69 00              ADC =0
2575  302C- 48                 PHA
2576  302D- A5 70              LDA LINE+1      SAVE CURRENT LINE
2577  302F- 48                 PHA
2578  3030- A5 6F              LDA LINE
2579  3032- 48                 PHA
2580  3033- A9 B1              LDA =$B1        CODE FOR "TO"
2581  3035- 20 73 2B           JSR FOLLOW
2582  3038- 20 E8 2D           JSR TESTTP      MUST BE NUMERIC
2583  303B- 20 F7 2D           JSR EXPRES
2584  303E- 20 E8 2D           JSR TESTTP      MUST BE NUMERIC
2585  3041- A5 9C              LDA SIGN
2586  3043- 09 7F              ORA =$7F
2587  3045- 25 98              AND MANT
2588  3047- 85 98              STA MANT
2589  3049- A9 54              LDA =<FOR1
2590  304B- A0 30              LDY =>FOR1
2591  304D- 85 58              STA TEMP1
2592  304F- 84 59              STY TEMP1+1
2593  3051- 4C 9F 2E           JMP MATHOP
2594                   *
2595  3054- A9 7D      FOR1    LDA =<VAL1      LOAD 1.0E0
2596  3056- A0 30              LDY =>VAL1
2597  3058- 20 AF 34           JSR GETFLP
2598  305B- 20 13 27           JSR FETCH1
2599  305E- C9 B6              CMP =$B6        STEP?
2600  3060- D0 09              BNE *+11

----------------------------------------------------------------------

GRAPHIC BASIC - STATEMENTS         19/11/19   R65 ASSEMBLER  PAGE 60

2601  3062- 20 0D 27           JSR FETCH
2602  3065- 20 F7 2D           JSR EXPRES
2603  3068- 20 E8 2D           JSR TESTTP      MUST BE NUMERIC
2604  306B- 20 2F 35           JSR SGN1
2605  306E- 20 90 2E           JSR EXPR5+5
2606  3071- A5 80              LDA TEMP3+1     STEP TO STACK
2607  3073- 48                 PHA
2608  3074- A5 7F              LDA TEMP3
2609  3076- 48                 PHA
2610  3077- A9 81              LDA =$81        CODE FOR FOR
2611  3079- 48                 PHA
2612  307A- 4C A9 26           JMP EXRUN
2613                   *
2614  307D- 81 00 00   VAL1    BYT $81,0,0,0,0    1.0E0
2614  3080- 00 00 
2615                   *
2616                   *
2617                   * ON: STATEMENT ROUTINE
2618                   ***********************
2619                   *
2620  3082- 20 FD 36   ON      JSR NUMEXP+3
2621  3085- 48                 PHA
2622  3086- C9 8D              CMP =$8D        CODE FOR GOSUB
2623  3088- F0 07              BEQ ON1
2624  308A- C9 89              CMP =$89        CODE FOR GOTO
2625  308C- F0 03              BEQ ON1
2626  308E- 4C C4 26           JMP SYNERR
2627                   *
2628  3091- C6 9B      ON1     DEC MANT+3
2629  3093- D0 04              BNE *+6
2630  3095- 68                 PLA
2631  3096- 4C F8 26           JMP EXCOD1+3
2632                   *
2633  3099- 20 0D 27           JSR FETCH
2634  309C- 20 4F 28           JSR FETCHI
2635  309F- C9 2C              CMP =','
2636  30A1- F0 EE              BEQ ON1
2637  30A3- 68                 PLA
2638  30A4- 60                 RTS
2639                   *
2640                   *
2641                   * GET: STATEMENT ROUTINE
2642                   ************************
2643                   *
2644  30A5- 20 F4 32   GET     JSR ILLDIR      ILLEGAL IN DIRECT MODE
2645  30A8- C9 23              CMP ='#'
2646  30AA- D0 03              BNE *+5
2647  30AC- 20 AB 45           JSR SETINP      SET INPUT DEVICE
2648                   *
2649  30AF- A2 08              LDX =<(INBUFF+1)

----------------------------------------------------------------------

GRAPHIC BASIC - STATEMENTS         19/11/19   R65 ASSEMBLER  PAGE 61

2650  30B1- A0 00              LDY =0
2651  30B3- 84 08              STY INBUFF+1
2652  30B5- A9 40              LDA =$40
2653  30B7- 20 45 31           JSR READ+6
2654  30BA- A6 C1      GETEND  LDX INPDEV
2655  30BC- F0 07              BEQ *+9
2656  30BE- 20 D3 45           JSR RSTIDV
2657  30C1- A2 00              LDX =0
2658  30C3- 86 C1              STX INPDEV
2659  30C5- 60                 RTS
2660                   *
2661                   *
2662                   * INPUT: STATEMENT ROUTINE
2663                   **************************
2664                   *
2665  30C6- C9 23      INPUT   CMP ='#'
2666  30C8- D0 06              BNE *+8
2667  30CA- 20 AB 45           JSR SETINP      SET INPUT DEVICE
2668  30CD- 4C DF 30           JMP INPUT1
2669                   *
2670  30D0- C9 22              CMP ='"'
2671  30D2- D0 0B              BNE INPUT1
2672  30D4- 20 55 2F           JSR EXPSTR
2673  30D7- A9 3B              LDA =';'
2674  30D9- 20 73 2B           JSR FOLLOW
2675  30DC- 20 8E 28           JSR OUTSTR+3
2676                   *
2677  30DF- 20 F4 32   INPUT1  JSR ILLDIR      ILLEGAL IN DIRECT MODE
2678  30E2- A9 2C              LDA =$2C
2679  30E4- 85 06              STA INTEG+1
2680  30E6- 20 FD 30           JSR INPUT2
2681  30E9- A5 07              LDA INBUFF
2682  30EB- F0 08              BEQ *+10        SKIP, IF EMPTY
2683  30ED- A9 00              LDA =0
2684  30EF- 20 45 31           JSR READ+6
2685  30F2- 4C BA 30           JMP GETEND
2686                   *
2687  30F5- A5 C1              LDA INPDEV      IF EMPTY
2688  30F7- D0 ED              BNE INPUT1+7
2689  30F9- 18                 CLC
2690  30FA- 4C 3C 27           JMP END+16
2691                   *
2692  30FD- A5 C1      INPUT2  LDA INPDEV
2693  30FF- D0 0D             BNE INPUT3      SKIP, IF NOT DEV 0
2694  3101- A9 3F              LDA ='?'
2695  3103- 20 BC 2F           JSR OUTCHR
2696  3106- A9 20              LDA =' '
2697  3108- 20 BC 2F           JSR OUTCHR
2698  310B- 4C 70 24           JMP INLIN       GET LINE
2699                   *

----------------------------------------------------------------------

GRAPHIC BASIC - STATEMENTS         19/11/19   R65 ASSEMBLER  PAGE 62

2700  310E- A2 00      INPUT3  LDX =0          GET FROM OTHER DEVICE
2701  3110- 20 D7 45           JSR INCHR
2702  3113- F0 FB              BEQ *-3         IGNORE 0
2703  3115- E8                 INX             SET ANY EOF TO NEXT BYTE
2704  3116- C9 1F              CMP =$1F        EOF?
2705  3118- F0 1E              BEQ INPUT5
2706  311A- CA                 DEX
2707  311B- C9 7F              CMP =$7F        RUBOUT?
2708  311D- F0 02              BEQ *+4
2709  311F- C9 5F              CMP =$5F        OR DELETE
2710  3121- D0 07              BNE INPUT4
2711                   *
2712  3123- 8A                 TXA             YES,TEST X
2713  3124- F0 EA              BEQ INPUT3+2
2714  3126- CA                 DEX
2715  3127- 4C 10 31           JMP INPUT3+2
2716                   *
2717  312A- 29 7F      INPUT4  AND =$7F
2718  312C- 95 07              STA INBUFF,X
2719  312E- E8                 INX
2720  312F- E0 38              CPX =56         END OF BUFFER?
2721  3131- F0 05              BEQ *+7
2722  3133- C9 0D              CMP =$D         CARRIAGE RETURN
2723  3135- D0 D9              BNE INPUT3+2
2724                   *
2725  3137- CA                 DEX
2726  3138- A0 00      INPUT5  LDY =0
2727  313A- 94 07              STY INBUFF,X    SET EOL MARK
2728  313C- A2 06              LDX =<(INBUFF-1)
2729  313E- 60                 RTS
2730                   *
2731                   *
2732                   * READ: STATEMENT ROUTINE
2733                   *************************
2734                   *
2735  313F- A6 77      READ    LDX DATPNT
2736  3141- A4 78              LDY DATPNT+1
2737  3143- A9 98              LDA =$98
2738  3145- 85 49              STA READFL
2739  3147- 86 79              STX DTSPNT
2740  3149- 84 7A              STY DTSPNT+1
2741  314B- A2 00              LDX =0
2742  314D- 86 CF              STX TEMP4+1     VARIABLE MUST NOT BE DEF
2743  314F- 20 7F 2B           JSR GETVAR
2744  3152- 85 7F              STA TEMP3
2745  3154- 84 80              STY TEMP3+1
2746  3156- A5 A9              LDA PC          SAVE PC
2747  3158- A4 AA              LDY PC+1
2748  315A- 85 05              STA INTEG
2749  315C- 84 06              STY INTEG+1

----------------------------------------------------------------------

GRAPHIC BASIC - STATEMENTS         19/11/19   R65 ASSEMBLER  PAGE 63

2750  315E- A6 79              LDX DTSPNT
2751  3160- A4 7A              LDY DTSPNT+1
2752  3162- 86 A9              STX PC
2753  3164- 84 AA              STY PC+1
2754  3166- 20 13 27           JSR FETCH1
2755  3169- D0 18              BNE READ2       SKIP, IF NOT EOL
2756                   *
2757  316B- 24 49              BIT READFL      IF EOL
2758  316D- 50 0B              BVC *+13
2759  316F- 20 D7 45           JSR INCHR
2760  3172- 85 07              STA INBUFF
2761  3174- A0 00              LDY =0
2762  3176- A2 06              LDX =<(INBUFF-1)
2763  3178- D0 05              BNE READ2-4     ALLWAYS TAKEN
2764                   *
2765  317A- 30 72              BMI READ5
2766  317C- 20 FD 30           JSR INPUT2
2767                   *
2768  317F- 86 A9              STX PC
2769  3181- 84 AA              STY PC+1
2770  3183- 20 0D 27   READ2   JSR FETCH
2771  3186- 24 45              BIT RESTYP
2772  3188- 10 33              BPL READ3       SKIP, IF NOT STRING
2773  318A- 24 49              BIT READFL
2774  318C- 50 0B              BVC *+13
2775  318E- A9 00              LDA =0
2776  3190- 85 41              STA CHRSAV
2777  3192- E8                 INX
2778  3193- 86 A9              STX PC
2779  3195- 98                 TYA
2780  3196- 4C A5 31           JMP READ2A
2781                   *
2782  3199- 85 41              STA CHRSAV
2783  319B- C9 22              CMP ='"'
2784  319D- F0 07              BEQ READ2A+1
2785  319F- A9 3A              LDA =':'
2786  31A1- 85 41              STA CHRSAV
2787  31A3- A9 2C              LDA =','
2788  31A5- 18         READ2A  CLC
2789  31A6- 85 42              STA CHRSAV+1
2790  31A8- A5 A9              LDA PC
2791  31AA- A4 AA              LDY PC+1
2792  31AC- 69 00              ADC =0
2793  31AE- 90 01              BCC *+3
2794  31B0- C8                 INY
2795  31B1- 20 AE 28           JSR STRSIZ+6
2796  31B4- 20 61 2F           JSR UPDPC
2797  31B7- 20 86 2A           JSR LET1+4      SAVE STRING
2798  31BA- 4C C5 31           JMP READ3+8
2799                   *

----------------------------------------------------------------------

GRAPHIC BASIC - STATEMENTS         19/11/19   R65 ASSEMBLER  PAGE 64

2800  31BD- 20 9D 35   READ3   JSR NUMBER
2801  31C0- A5 46              LDA RESTYP+1
2802  31C2- 20 6E 2A           JSR LET0
2803  31C5- 20 13 27           JSR FETCH1
2804  31C8- F0 07              BEQ *+9         SKIP IF NOT END OF STMNT
2805  31CA- C9 2C              CMP =','
2806  31CC- F0 03              BEQ *+5
2807  31CE- 4C 53 32           JMP READ7
2808                   *
2809  31D1- A5 A9              LDA PC
2810  31D3- A4 AA              LDY PC+1
2811  31D5- 85 79              STA DTSPNT
2812  31D7- 84 7A              STY DTSPNT+1
2813  31D9- A5 05              LDA INTEG
2814  31DB- A4 06              LDY INTEG+1
2815  31DD- 85 A9              STA PC
2816  31DF- 84 AA              STY PC+1
2817  31E1- 20 13 27           JSR FETCH1
2818  31E4- F0 2C              BEQ READ6       SKIP, IF EOL
2819  31E6- A9 2C              LDA =','
2820  31E8- 20 73 2B           JSR FOLLOW
2821  31EB- 4C 4B 31           JMP READ+12     NEXT VARIABLE
2822                   *
2823  31EE- 20 FE 27   READ5   JSR SEDPN       SEARCH EOL OR ":"
2824  31F1- C8                 INY
2825  31F2- AA                 TAX
2826  31F3- D0 10              BNE *+18
2827  31F5- C8                 INY
2828  31F6- B1 A9              LDA (PC),Y
2829  31F8- F0 72              BEQ DATAER      IF END OF PROGRAM
2830  31FA- C8                 INY
2831  31FB- B1 A9              LDA (PC),Y
2832  31FD- 85 75              STA TEMP7
2833  31FF- C8                INY
2834  3200- B1 A9              LDA (PC),Y
2835  3202- 85 76              STA TEMP7+1
2836  3204- C8                 INY
2837  3205- B1 A9              LDA (PC),Y      GET COMMAND CODE
2838  3207- AA                 TAX
2839  3208- 20 F3 27           JSR DATA+3
2840  320B- E0 83              CPX =$83        CODE FOR DATA
2841  320D- D0 DF              BNE READ5
2842  320F- 4C 83 31           JMP READ2
2843                   *
2844  3212- A5 79      READ6   LDA DTSPNT
2845  3214- A4 7A              LDY DTSPNT+1
2846  3216- A6 49              LDX READFL
2847  3218- 10 03              BPL *+5
2848  321A- 4C 6F 27           JMP RESTOR+29
2849                   *

----------------------------------------------------------------------

GRAPHIC BASIC - STATEMENTS         19/11/19   R65 ASSEMBLER  PAGE 65

2850  321D- A0 00              LDY =0
2851  321F- B1 79              LDA (DTSPNT),Y
2852  3221- F0 0B              BEQ *+13        RTS, IF EOL
2853  3223- A5 C1              LDA INPDEV
2854  3225- D0 07              BNE *+9
2855  3227- A9 2F              LDA =<(*+8)
2856  3229- A0 32              LDY =>(*+6)
2857  322B- 4C 8B 28           JMP OUTSTR
2858  322E- 60                 RTS
2859                   *
2860  322F- 3F 45 58           BYT '?EXTRA IGNORED',$D,$A,0
2860  3232- 54 52 41 
2860  3235- 20 49 47 
2860  3238- 4E 4F 52 
2860  323B- 45 44 0D 
2860  323E- 0A 00 
2861  3240- 3F 52 45   REDO    BYT '?REDO FROM START',$D,$A,0
2861  3243- 44 4F 20 
2861  3246- 46 52 4F 
2861  3249- 4D 20 53 
2861  324C- 54 41 52 
2861  324F- 54 0D 0A 
2861  3252- 00 
2862                   *
2863  3253- A5 49      READ7   LDA READFL
2864  3255- F0 11              BEQ *+19
2865  3257- 30 04              BMI *+6
2866  3259- A0 FF              LDY =$FF
2867  325B- D0 04              BNE *+6         ALLWAYS TAKEN
2868  325D- A5 75              LDA TEMP7
2869  325F- A4 76              LDY TEMP7+1
2870  3261- 85 6F              STA LINE
2871  3263- 84 70              STY LINE+1
2872  3265- 4C C4 26           JMP SYNERR
2873                   *
2874  3268- A5 C1              LDA INPDEV
2875  326A- F0 05              BEQ *+7
2876  326C- A2 26      DATAER  LDX =$26         DATA ERROR
2877  326E- 4C 43 23           JMP ERROR
2878  3271- A9 40              LDA =<REDO
2879  3273- A0 32              LDY =>REDO
2880  3275- 20 8B 28           JSR OUTSTR
2881  3278- A5 73              LDA PNTSAV
2882  327A- A4 74              LDY PNTSAV+1
2883  327C- 85 A9              STA PC
2884  327E- 84 AA              STY PC+1
2885  3280- 60                 RTS
2886                   *
2887                   *
2888                   * NEXT: STATEMENT ROUTINE

----------------------------------------------------------------------

GRAPHIC BASIC - STATEMENTS         19/11/19   R65 ASSEMBLER  PAGE 66

2889                   *************************
2890                   *
2891  3281- D0 04      NEXT    BNE *+6         SKIP, IF NOT EOL
2892  3283- A0 00              LDY =0
2893  3285- F0 07              BEQ *+9         ELSE SET Y=0
2894  3287- A9 FF              LDA =$FF        VARIABLE MUST BE DEF
2895  3289- 86 CF              STX TEMP4+1
2896  328B- 20 7F 2B           JSR GETVAR
2897  328E- 85 7F              STA TEMP3       SAVE ADDRESS
2898  3290- 84 80              STY TEMP3+1
2899  3292- 20 21 28           JSR STACK
2900  3295- F0 05              BEQ *+7
2901  3297- A2 00              LDX =0
2902  3299- 4C 43 23           JMP ERROR       NO MATCHING FOR
2903                   *
2904  329C- 9A                 TXS
2905  329D- E8                 INX
2906  329E- E8                 INX
2907  329F- E8                 INX
2908  32A0- E8                 INX
2909  32A1- 8A                 TXA             FLP ADDRESS LOW
2910  32A2- E8                 INX
2911  32A3- E8                 INX
2912  32A4- E8                 INX
2913  32A5- E8                 INX
2914  32A6- E8                 INX
2915  32A7- E8                 INX
2916  32A8- 86 5A              STX TEMP1+2
2917  32AA- A0 01              LDY =1          FLP ADDRESS HIGH
2918  32AC- 20 AF 34           JSR GETFLP
2919  32AF- BA                 TSX
2920  32B0- BD 09 01           LDA 265,X
2921  32B3- 85 9C              STA SIGN
2922  32B5- A5 7F              LDA TEMP3
2923  32B7- A4 80              LDY TEMP3+1
2924  32B9- 20 38 33           JSR ADD-3
2925  32BC- 20 D4 34           JSR SAVFLP
2926  32BF- A0 01              LDY =1
2927  32C1- 20 5E 35           JSR COMPAR+2
2928  32C4- BA                 TSX
2929  32C5- 38                 SEC
2930  32C6- FD 09 01           SBC 265,X
2931  32C9- F0 17              BEQ *+25
2932  32CB- BD 0F 01           LDA 271,X
2933  32CE- 85 6F              STA LINE
2934  32D0- BD 10 01           LDA 272,X
2935  32D3- 85 70              STA LINE+1
2936  32D5- BD 12 01           LDA 274,X
2937  32D8- 85 A9              STA PC
2938  32DA- BD 11 01           LDA 273,X

----------------------------------------------------------------------

GRAPHIC BASIC - STATEMENTS         19/11/19   R65 ASSEMBLER  PAGE 67

2939  32DD- 85 AA              STA PC+1
2940  32DF- 4C A9 26           JMP EXRUN
2941                   *
2942  32E2- 8A                 TXA
2943  32E3- 69 11              ADC =17         CLEAR STACK
2944  32E5- AA                 TAX
2945  32E6- 9A                 TXS
2946  32E7- 20 13 27           JSR FETCH1
2947  32EA- C9 2C              CMP =','
2948  32EC- D0 F1              BNE *-13
2949  32EE- 20 0D 27           JSR FETCH
2950  32F1- 20 87 32           JSR NEXT+6      NO RTS FROM THIS SUBR.
2951                   *
2952                   *
2953                   * ILLDIR: ILLEGAL IN DIRECT MODE
2954                   ********************************
2955                   *
2956  32F4- A6 70      ILLDIR  LDX LINE+1
2957  32F6- E8                 INX
2958  32F7- D0 05              BNE *+7         RTS, IF NOT DIRECT
2959  32F9- A2 88              LDX =$88
2960  32FB- 4C 43 23           JMP ERROR
2961  32FE- 60                 RTS
2962                   *
2963                   *
2964                   * OUTLIN: PRINT LINE NO
2965                   ***********************
2966                   *
2967  32FF- A9 BB     OUTLIN  LDA =<(ERRORM+25)
2968  3301- A0 22              LDY =>(ERRORM+25)
2969  3303- 20 8B 28           JSR OUTSTR
2970  3306- A5 70              LDA LINE+1
2971  3308- A6 6F              LDX LINE
2972                   *
2973                   *
2974                   * OUTINT: PRINT INTEGER IN A,X
2975                   ******************************
2976                   *
2977  330A- 85 98      OUTINT  STA MANT
2978  330C- 86 99              STX MANT+1
2979  330E- A2 90              LDX =$90        EXP FOR FLOAT
2980  3310- 38                 SEC
2981  3311- 20 4D 35           JSR FLOAT
2982  3314- 20 59 47           JSR OUTCON
2983  3317- 4C 8B 28           JMP OUTSTR
2984                   *
2985                           TIT GRAPHIC BASIC - MATH OPERATIONS
2986                           PAG

----------------------------------------------------------------------

GRAPHIC BASIC - MATH OPERATIONS    19/11/19   R65 ASSEMBLER  PAGE 68

2987                   *
2988                   * SUBTR: SUBTRACT FLOATING POINT
2989                   ********************************
2990                   *
2991  331A- 20 8E 34           JSR PREPMO
2992  331D- A5 9C      SUBTR   LDA SIGN
2993  331F- 49 FF              EOR =$FF
2994  3321- 85 9C              STA SIGN
2995  3323- 45 A4              EOR DYADIC+5
2996  3325- 85 A5              STA DYADIC+6
2997  3327- A5 97              LDA EXP
2998  3329- 4C 3B 33           JMP ADD
2999                   *
3000  332C- A9 7E      ADD9    LDA =<OUTCT2
3001  332E- A0 36              LDY =>OUTCT2
3002  3330- 4C 38 33           JMP ADD-3
3003                   *
3004                   *
3005                   * ADD: ADD FLOATING POINT
3006                   *************************
3007                   *
3008  3333- 20 6B 34           JSR ROR2A
3009  3336- 90 3D              BCC ADD2
3010  3338- 20 8E 34           JSR PREPMO
3011  333B- D0 03      ADD     BNE *+5
3012  333D- 4C 10 35           JMP TRANS1      IF ZERO, RES=OTHER ARG
3013  3340- A6 A6              LDX DYADIC+7
3014  3342- 86 8C              STX PNT1+1
3015  3344- A2 9F              LDX =<DYADIC
3016  3346- A5 9F              LDA DYADIC
3017  3348- A8                 TAY
3018  3349- D0 01              BNE *+3
3019  334B- 60                 RTS             RTS, IF OTHER ARG=0
3020                   *
3021  334C- 38                 SEC
3022                    * BASIC4:A ORIGINAL 7/1/1982, RECOVERED 3/2018
3023  334D- E5 97              SBC EXP
3024  334F- F0 24              BEQ ADD2
3025  3351- 90 12              BCC ADD1
3026  3353- 84 97              STY EXP
3027  3355- A4 A4              LDY DYADIC+5
3028  3357- 84 9C              STY SIGN
3029  3359- 49 FF              EOR =$FF
3030  335B- 69 00              ADC =0
3031  335D- A0 00              LDY =0
3032  335F- 84 8C              STY PNT1+1
3033  3361- A2 97              LDX =<EXP
3034  3363- D0 04              BNE *+6
3035  3365- A0 00      ADD1    LDY =0
3036  3367- 84 A6              STY DYADIC+7

----------------------------------------------------------------------

GRAPHIC BASIC - MATH OPERATIONS    19/11/19   R65 ASSEMBLER  PAGE 69

3037  3369- C9 F9              CMP =$F9
3038  336B- 30 C6              BMI ADD-8
3039  336D- A8                 TAY
3040  336E- A5 A6              LDA DYADIC+7
3041  3370- 56 01              LSR 1,X
3042  3372- 20 82 34           JSR ROR4
3043                   *
3044  3375- 24 A5      ADD2    BIT DYADIC+6
3045  3377- 10 57              BPL ADD3        SKIP, IF ADD
3046  3379- A0 97              LDY =<EXP
3047  337B- E0 9F              CPX =<DYADIC
3048  337D- F0 02              BEQ *+4
3049  337F- A0 9F              LDY =<DYADIC
3050  3381- 38                 SEC
3051  3382- 49 FF              EOR =$FF
3052  3384- 65 8C              ADC PNT1+1
3053  3386- 85 A6              STA DYADIC+7
3054  3388- B9 04 00           LDA 4,Y
3055  338B- F5 04              SBC 4,X
3056  338D- 85 9B              STA MANT+3
3057  338F- B9 03 00           LDA 3,Y
3058  3392- F5 03              SBC 3,X
3059  3394- 85 9A              STA MANT+2
3060  3396- B9 02 00           LDA 2,Y
3061  3399- F5 02              SBC 2,X
3062  339B- 85 99              STA MANT+1
3063  339D- B9 01 00           LDA 1,Y
3064  33A0- F5 01              SBC 1,X
3065  33A2- 85 98              STA MANT
3066                   *
3067  33A4- B0 03      NORMAL  BCS *+5
3068  33A6- 20 19 34           JSR COMPL
3069  33A9- A0 00              LDY =0
3070  33AB- 98                 TYA
3071  33AC- 18                 CLC
3072  33AD- A6 98      NORM1   LDX MANT
3073  33AF- D0 4A              BNE ADD4
3074  33B1- A6 99              LDX MANT+1
3075  33B3- 86 98              STX MANT
3076  33B5- A6 9A              LDX MANT+2
3077  33B7- 86 99              STX MANT+1
3078  33B9- A6 9B              LDX MANT+3
3079  33BB- 86 9A              STX MANT+2
3080  33BD- A6 A6              LDX DYADIC+7
3081  33BF- 86 9B              STX MANT+3
3082  33C1- 84 A6              STY DYADIC+7
3083  33C3- 69 08              ADC =8
3084  33C5- C9 20              CMP =32
3085  33C7- D0 E4              BNE NORM1
3086                   *

----------------------------------------------------------------------

GRAPHIC BASIC - MATH OPERATIONS    19/11/19   R65 ASSEMBLER  PAGE 70

3087  33C9- A9 00      UNDERF  LDA =0          UNDERFLOW, SET TO 0
3088  33CB- 85 97              STA EXP
3089  33CD- 85 9C              STA SIGN
3090  33CF- 60                 RTS
3091                   *
3092  33D0- 65 8C      ADD3    ADC PNT1+1
3093  33D2- 85 A6              STA DYADIC+7
3094  33D4- A5 9B              LDA MANT+3
3095  33D6- 65 A3              ADC DYADIC+4
3096  33D8- 85 9B              STA MANT+3
3097  33DA- A5 9A              LDA MANT+2
3098  33DC- 65 A2              ADC DYADIC+3
3099  33DE- 85 9A              STA MANT+2
3100  33E0- A5 99              LDA MANT+1
3101  33E2- 65 A1              ADC DYADIC+2
3102  33E4- 85 99              STA MANT+1
3103  33E6- A5 98              LDA MANT
3104  33E8- 65 A0              ADC DYADIC+1
3105  33EA- 85 98              STA MANT
3106  33EC- 4C 08 34           JMP ADD5
3107                   *
3108  33EF- 69 01              ADC =1          SHIFT MANTISSA
3109  33F1- 06 A6              ASL DYADIC+7
3110  33F3- 26 9B              ROL MANT+3
3111  33F5- 26 9A              ROL MANT+2
3112  33F7- 26 99              ROL MANT+1
3113  33F9- 26 98              ROL MANT
3114  33FB- 10 F2      ADD4    BPL *-12
3115  33FD- 38                 SEC
3116  33FE- E5 97             SBC EXP
3117  3400- B0 C7              BCS UNDERF
3118  3402- 49 FF              EOR =$FF
3119  3404- 69 01              ADC =1
3120  3406- 85 97              STA EXP
3121  3408- 90 0E      ADD5    BCC ADDEND
3122  340A- E6 97              INC EXP
3123  340C- F0 42              BEQ OVERFL
3124                   *
3125  340E- 66 98      ROR1    ROR MANT
3126  3410- 66 99              ROR MANT+1
3127  3412- 66 9A              ROR MANT+2
3128  3414- 66 9B              ROR MANT+3
3129  3416- 66 A6              ROR DYADIC+7
3130  3418- 60         ADDEND  RTS
3131                   *
3132                   * COMPL: COMPLEMENT MANTISSA
3133                   ****************************
3134                   *
3135  3419- A5 9C      COMPL   LDA SIGN
3136  341B- 49 FF              EOR =$FF

----------------------------------------------------------------------

GRAPHIC BASIC - MATH OPERATIONS    19/11/19   R65 ASSEMBLER  PAGE 71

3137  341D- 85 9C              STA SIGN
3138  341F- A5 98              LDA MANT
3139  3421- 49 FF              EOR =$FF
3140  3423- 85 98              STA MANT
3141  3425- A5 99              LDA MANT+1
3142  3427- 49 FF              EOR =$FF
3143  3429- 85 99              STA MANT+1
3144  342B- A5 9A              LDA MANT+2
3145  342D- 49 FF              EOR =$FF
3146  342F- 85 9A              STA MANT+2
3147  3431- A5 9B              LDA MANT+3
3148  3433- 49 FF              EOR =$FF
3149  3435- 85 9B              STA MANT+3
3150  3437- A5 A6              LDA DYADIC+7
3151  3439- 49 FF              EOR =$FF
3152  343B- 85 A6              STA DYADIC+7
3153  343D- E6 A6              INC DYADIC+7
3154  343F- D0 0E              BNE *+16
3155  3441- E6 9B      INCM    INC MANT+3
3156  3443- D0 0A              BNE *+12
3157  3445- E6 9A              INC MANT+2
3158  3447- D0 06              BNE *+8
3159  3449- E6 99              INC MANT+1
3160  344B- D0 02              BNE *+4
3161  344D- E6 98              INC MANT
3162  344F- 60                 RTS
3163                   *
3164                   *
3165  3450- A2 32      OVERFL  LDX =$32        NUM OVERFLOW
3166  3452- 4C 43 23           JMP ERROR
3167                   *
3168                   *
3169                   * ROTATE RIGHT
3170                   **************
3171                   *
3172  3455- A2 5B      ROR2    LDX =<TEMP9-1
3173  3457- B4 04              LDY 4,X
3174  3459- 84 A6              STY DYADIC+7
3175  345B- B4 03              LDY 3,X
3176  345D- 94 04              STY 4,X
3177  345F- B4 02              LDY 2,X
3178  3461- 94 03              STY 3,X
3179  3463- B4 01              LDY 1,X
3180  3465- 94 02              STY 2,X
3181  3467- A4 9E              LDY DYADIC-1
3182  3469- 94 01              STY 1,X
3183  346B- 69 08      ROR2A   ADC =8
3184  346D- 30 E8              BMI ROR2+2
3185  346F- F0 E6              BEQ ROR2+2
3186  3471- E9 08              SBC =8

----------------------------------------------------------------------

GRAPHIC BASIC - MATH OPERATIONS    19/11/19   R65 ASSEMBLER  PAGE 72

3187  3473- A8                 TAY
3188  3474- A5 A6              LDA DYADIC+7
3189  3476- B0 14              BCS ROR5
3190  3478- 16 01      ROR3    ASL 1,X
3191  347A- 90 02              BCC *+4
3192  347C- F6 01              INC 1,X
3193  347E- 76 01              ROR 1,X
3194  3480- 76 01              ROR 1,X
3195  3482- 76 02      ROR4    ROR 2,X
3196  3484- 76 03              ROR 3,X
3197  3486- 76 04              ROR 4,X
3198  3488- 6A                 ROR A
3199  3489- C8                 INY
3200  348A- D0 EC              BNE ROR3
3201  348C- 18         ROR5    CLC
3202  348D- 60                 RTS
3203                   *
3204                   *
3205                   * PREPMO: PREPARE MATH OPERATION
3206                   ********************************
3207                   *
3208  348E- 85 58      PREPMO  STA TEMP1
3209  3490- 84 59              STY TEMP1+1
3210  3492- A0 04              LDY =4
3211  3494- B1 58              LDA (TEMP1),Y
3212  3496- 99 9F 00           STA DYADIC,Y
3213  3499- 88                 DEY
3214  349A- D0 F8              BNE *-6         LOOP UNTIL DONE
3215  349C- 45 9C              EOR SIGN
3216  349E- 85 A5              STA DYADIC+6
3217  34A0- A5 A0              LDA DYADIC+1
3218  34A2- 85 A4              STA DYADIC+5
3219  34A4- 09 80              ORA =$80
3220  34A6- 85 A0              STA DYADIC+1
3221  34A8- B1 58              LDA (TEMP1),Y
3222  34AA- 85 9F              STA DYADIC
3223  34AC- A5 97              LDA EXP
3224  34AE- 60                 RTS
3225                   *
3226                   *
3227                   * GETFLP: GET FLP FROM A,Y
3228                   **************************
3229                   *
3230  34AF- 85 58      GETFLP  STA TEMP1
3231  34B1- 84 59              STY TEMP1+1
3232  34B3- A0 04              LDY =4
3233  34B5- B1 58              LDA (TEMP1),Y
3234  34B7- 85 9B              STA MANT+3
3235  34B9- 88                 DEY
3236  34BA- B1 58              LDA (TEMP1),Y

----------------------------------------------------------------------

GRAPHIC BASIC - MATH OPERATIONS    19/11/19   R65 ASSEMBLER  PAGE 73

3237  34BC- 85 9A              STA MANT+2
3238  34BE- 88                 DEY
3239  34BF- B1 58              LDA (TEMP1),Y
3240  34C1- 85 99              STA MANT+1
3241  34C3- 88                 DEY
3242  34C4- B1 58              LDA (TEMP1),Y
3243  34C6- 85 9C              STA SIGN
3244  34C8- 09 80              ORA =$80
3245  34CA- 85 98              STA MANT
3246  34CC- 88                 DEY
3247  34CD- B1 58              LDA (TEMP1),Y
3248  34CF- 85 97              STA EXP
3249  34D1- 84 A6              STY DYADIC+7
3250  34D3- 60                 RTS
3251                   *
3252                   *
3253                   * SAVFLP: SAVE FLP NUMBER
3254                   *************************
3255                   *
3256  34D4- A6 7F      SAVFLP  LDX TEMP3
3257  34D6- A4 80              LDY TEMP3+1
3258  34D8- 20 00 35           JSR ROUND
3259  34DB- 86 58              STX TEMP1
3260  34DD- 84 59              STY TEMP1+1
3261  34DF- A0 04              LDY =4
3262  34E1- A5 9B              LDA MANT+3
3263  34E3- 91 58              STA (TEMP1),Y
3264  34E5- 88                 DEY
3265  34E6- A5 9A              LDA MANT+2
3266  34E8- 91 58              STA (TEMP1),Y
3267  34EA- 88                 DEY
3268  34EB- A5 99              LDA MANT+1
3269  34ED- 91 58              STA (TEMP1),Y
3270  34EF- 88                 DEY
3271  34F0- A5 9C              LDA SIGN
3272  34F2- 09 7F              ORA =$7F
3273  34F4- 25 98              AND MANT
3274  34F6- 91 58              STA (TEMP1),Y
3275  34F8- 88                 DEY
3276  34F9- A5 97              LDA EXP
3277  34FB- 91 58              STA (TEMP1),Y
3278  34FD- 84 A6              STY DYADIC+7
3279  34FF- 60                RTS
3280                   *
3281                   * ROUND: ROUND MANTISSA TO 32 BITS
3282                   **********************************
3283                   *
3284  3500- A5 97      ROUND   LDA EXP
3285  3502- F0 FB              BEQ *-3         RTS, IF ZERO
3286  3504- 06 A6              ASL DYADIC+7

----------------------------------------------------------------------

GRAPHIC BASIC - MATH OPERATIONS    19/11/19   R65 ASSEMBLER  PAGE 74

3287  3506- 90 F7              BCC *-7
3288  3508- 20 41 34           JSR INCM
3289  350B- D0 F2              BNE *-12
3290  350D- 4C 0A 34           JMP ROR1-4
3291                   *
3292                   * TRANS1: DYADIC TO FLP ACCU
3293                   ****************************
3294                   *
3295  3510- A5 A4      TRANS1  LDA DYADIC+5
3296  3512- 85 9C              STA SIGN
3297  3514- A2 05              LDX =5
3298  3516- B5 9E              LDA DYADIC-1,X
3299  3518- 95 96              STA EXP-1,X
3300  351A- CA                 DEX
3301  351B- D0 F9              BNE *-5
3302  351D- 86 A6              STX DYADIC+7
3303  351F- 60                 RTS
3304                   *
3305                   * TRANS2: FLP ACCU TO DYADIC
3306                   ****************************
3307                   *
3308  3520- 20 00 35   TRANS2  JSR ROUND
3309  3523- A2 06              LDX =6
3310  3525- B5 96              LDA EXP-1,X
3311  3527- 95 9E              STA DYADIC-1,X
3312  3529- CA                 DEX
3313  352A- D0 F9              BNE *-5
3314  352C- 86 A6              STX DYADIC+7
3315  352E- 60                 RTS
3316                   *
3317                   * SGN1: SET ACCU FROM SIGN
3318                   **************************
3319                   * A=1 IF SIGN+, A=FF IF SIGN-, A=0 IF EXP=0
3320                   *
3321  352F- A5 97      SGN1    LDA EXP
3322  3531- F0 09              BEQ *+11        RTS, IF EXP=0
3323  3533- A5 9C              LDA SIGN
3324  3535- 2A                 ROL A
3325  3536- A9 FF              LDA =$FF
3326  3538- B0 02              BCS *+4
3327  353A- A9 01              LDA =1
3328  353C- 60                 RTS
3329                   *
3330                   * SGN: BASIC FUNCTION
3331                   *********************
3332                   *
3333  353D- 20 2F 35   SGN     JSR SGN1
3334  3540- 85 98      FLOAT1  STA MANT        FLOAT 1 BYTE
3335  3542- A9 00              LDA =0
3336  3544- 85 99              STA MANT+1

----------------------------------------------------------------------

GRAPHIC BASIC - MATH OPERATIONS    19/11/19   R65 ASSEMBLER  PAGE 75

3337  3546- A2 88              LDX =$88        EXP FOR FLOAT
3338  3548- A5 98      FLOAT2  LDA MANT        FLOAT 2 BYTES
3339  354A- 49 FF              EOR =$FF
3340  354C- 2A                 ROL A           SIGN INTO C
3341  354D- A9 00      FLOAT   LDA =0
3342  354F- 85 9B              STA MANT+3
3343  3551- 85 9A              STA MANT+2
3344  3553- 86 97              STX EXP
3345  3555- 85 A6              STA DYADIC+7
3346  3557- 85 9C              STA SIGN
3347  3559- 4C A4 33           JMP NORMAL
3348                   *
3349                   *
3350                   * COMPAR: COMPARE FLP NUMBERS
3351                   *****************************
3352                   *
3353  355C- 85 5A      COMPAR  STA TEMP8
3354  355E- 84 5B              STY TEMP8+1
3355  3560- A0 00              LDY =0
3356  3562- B1 5A              LDA (TEMP8),Y
3357  3564- C8                 INY
3358  3565- AA                 TAX
3359  3566- F0 C7              BEQ SGN1
3360  3568- B1 5A              LDA (TEMP8),Y
3361  356A- 45 9C              EOR SIGN
3362  356C- 30 C5              BMI SGN1+4
3363  356E- E4 97              CPX EXP
3364  3570- D0 22              BNE COMPR1
3365  3572- B1 5A              LDA (TEMP8),Y
3366  3574- 09 80              ORA =$80
3367  3576- C5 98              CMP MANT
3368  3578- D0 1A              BNE COMPR1
3369  357A- C8                 INY
3370  357B- B1 5A              LDA (TEMP8),Y
3371  357D- C5 99              CMP MANT+1
3372  357F- D0 13              BNE COMPR1
3373  3581- C8                 INY
3374  3582- B1 5A              LDA (TEMP8),Y
3375  3584- C5 9A              CMP MANT+2
3376  3586- D0 0C              BNE COMPR1
3377  3588- C8                 INY
3378  3589- A9 7F              LDA =$7F
3379  358B- C5 A6              CMP DYADIC+7    TO C
3380  358D- B1 5A              LDA (TEMP8),Y
3381  358F- E5 9B              SBC MANT+3
3382  3591- D0 01              BNE COMPR1
3383  3593- 60                 RTS
3384                   *
3385  3594- A5 9C      COMPR1  LDA SIGN
3386  3596- 90 02              BCC *+4

----------------------------------------------------------------------

GRAPHIC BASIC - MATH OPERATIONS    19/11/19   R65 ASSEMBLER  PAGE 76

3387  3598- 49 FF              EOR =$FF
3388  359A- 4C 35 35           JMP SGN1+6
3389                   *
3390                   *
3391                   * NUMBER: FLP CONSTANT INPUT IN EXPRES
3392                   **************************************
3393                   *
3394  359D- 90 08      NUMBER  BCC *+10
3395  359F- C9 24              CMP ='$'        HEX?
3396  35A1- D0 03              BNE *+5
3397  35A3- 4C F7 49           JMP NUMBHEX
3398  35A6- 38                 SEC
3399                   *
3400  35A7- A0 00              LDY =0          CLEAR WORK AREA
3401  35A9- A2 0A              LDX =10
3402  35AB- 94 93              STY EXP-4,X
3403  35AD- CA                 DEX
3404  35AE- 10 FB              BPL *-3
3405  35B0- 90 0F              BCC NUMB0+3     IF FIST DIGIT=NUMBER
3406                   *
3407  35B2- C9 2D              CMP ='-'
3408  35B4- D0 04              BNE *+6
3409  35B6- 86 9D              STX CURRSG      SET CURRENT SIGN TO FF
3410  35B8- F0 04              BEQ NUMB0       ALLWAYS TAKEN
3411  35BA- C9 2B              CMP ='+'
3412  35BC- D0 05              BNE *+7
3413  35BE- 20 0D 27   NUMB0   JSR FETCH
3414  35C1- 90 63              BCC NUMB5
3415  35C3- C9 2E              CMP ='.'
3416  35C5- F0 30              BEQ NUMB3
3417  35C7- C9 45              CMP ='E'
3418  35C9- D0 38              BNE NUMB4
3419                   *
3420  35CB- 20 0D 27           JSR FETCH       EXPONTENT
3421  35CE- 90 19              BCC NUMB2+3
3422  35D0- C9 B8              CMP =$B8        CODE FOR -
3423  35D2- F0 0E              BEQ NUMB1
3424  35D4- C9 2D              CMP ='-'
3425  35D6- F0 0A              BEQ NUMB1
3426  35D8- C9 B7              CMP =$B7        CODE FOR +
3427  35DA- F0 0A              BEQ NUMB2
3428  35DC- C9 2B              CMP ='+'
3429  35DE- F0 06              BEQ NUMB2
3430  35E0- D0 07              BNE NUMB2+3     IF NOT DIGIT OR SIGN
3431                   *
3432  35E2- A9 80      NUMB1   LDA =$80        IF EXP -
3433  35E4- 85 96              STA EXP-1
3434                   *
3435  35E6- 20 0D 27   NUMB2   JSR FETCH       IF EXP +
3436  35E9- 90 62              BCC NUMB7       BRANCH, IF NUMBER

----------------------------------------------------------------------

GRAPHIC BASIC - MATH OPERATIONS    19/11/19   R65 ASSEMBLER  PAGE 77

3437  35EB- 24 96              BIT EXP-1
3438  35ED- 10 14              BPL NUMB4       BRANCH, IF POS
3439  35EF- A9 00              LDA =0
3440  35F1- 38                 SEC
3441  35F2- E5 94              SBC CURREX      ELSE COMPLEMENT CURREX
3442  35F4- 4C 05 36           JMP NUMB4+2
3443                   *
3444  35F7- A9 80      NUMB3   LDA =$80        DECIMAL POINT
3445  35F9- 46 95              LSR TRANSP
3446  35FB- 05 95              ORA TRANSP
3447  35FD- 85 95              STA TRANSP
3448  35FF- 24 95             BIT TRANSP
3449  3601- 50 BB              BVC NUMB0       CONTINUE, IF FIRST POINT
3450                   *
3451  3603- A5 94      NUMB4   LDA CURREX      END OF NUMBER
3452  3605- 38                 SEC
3453  3606- E5 93              SBC POINTC
3454  3608- 85 94              STA CURREX
3455  360A- F0 12              BEQ *+20        SKIP, IF RESULTING
3456  360C- 10 09              BPL *+11        EXP=0 OR POSITIVE
3457  360E- 20 E9 36           JSR DIVTEN      ELSE DIVIDE BY TEN
3458  3611- E6 94              INC CURREX
3459  3613- D0 F9              BNE *-5
3460  3615- F0 07              BEQ *+9         ALLWAYS TAKEN
3461                   *
3462  3617- 20 CA 36           JSR MULTEN
3463  361A- C6 94              DEC CURREX
3464  361C- D0 F9              BNE *-5
3465                   *
3466  361E- A5 9D              LDA CURRSG
3467  3620- 30 01              BMI *+3
3468  3622- 60                 RTS
3469                   *
3470  3623- 4C BF 36           JMP NEGATE
3471                   *
3472  3626- 48         NUMB5   PHA             DIGIT ENTRY, SAVE IT
3473  3627- 24 95              BIT TRANSP      AFTER DECIMAL POINT?
3474  3629- 10 02              BPL *+4
3475  362B- E6 93              INC POINTC
3476  362D- 20 CA 36           JSR MULTEN
3477  3630- 68                 PLA
3478  3631- 38                 SEC
3479  3632- E9 30              SBC =$30        CONVERT ASCII TO NUMBER
3480  3634- 20 3A 36           JSR NUMB6
3481  3637- 4C BE 35           JMP NUMB0
3482                   *
3483  363A- 48         NUMB6   PHA             SAVE CONVERTED TOGIT
3484  363B- 20 20 35           JSR TRANS2      CURRENT RES TO DYADIC
3485  363E- 68                 PLA
3486  363F- 20 40 35           JSR FLOAT1      FLOAT DIGIT

----------------------------------------------------------------------

GRAPHIC BASIC - MATH OPERATIONS    19/11/19   R65 ASSEMBLER  PAGE 78

3487  3642- A5 A4              LDA DYADIC+5
3488  3644- 45 9C              EOR SIGN
3489  3646- 85 A5              STA DYADIC+6
3490  3648- A6 97              LDX EXP
3491  364A- 4C 3B 33           JMP ADD         AND ADD TO CURRENT RESUL
3492                   *
3493  364D- A5 94      NUMB7   LDA CURREX      EXPONENT DIGIT
3494  364F- C9 0C              CMP =12
3495  3651- 90 09              BCC *+11
3496  3653- 24 96              BIT TRANSP+1
3497  3655- 30 03              BMI *+5
3498  3657- 4C 50 34           JMP OVERFL
3499                   *
3500  365A- A9 0B              LDA =11
3501  365C- 0A                 ASL A           MULTIPLY BY TEN
3502  365D- 0A                 ASL A
3503  365E- 18                 CLC
3504  365F- 65 94              ADC CURREX
3505  3661- 0A                 ASL A
3506  3662- 18                 CLC
3507  3663- A0 00              LDY =0
3508  3665- 71 A9              ADC (PC),Y
3509  3667- 38                 SEC
3510  3668- E9 30              SBC =$30        CONVERT ASCII TO NUMBER
3511  366A- 85 94              STA CURREX
3512  366C- 4C E6 35           JMP NUMB2
3513                   *
3514                   *
3515  366F- 9B 3E BC   OUTCT1  BYT $9B,$3E,$BC,$1F,$FD
3515  3672- 1F FD 
3516  3674- 9E 6E 6B           BYT $9E,$6E,$6B,$27,$FE
3516  3677- 27 FE 
3517  3679- 9E 6E 6B           BYT $9E,$6E,$6B,$28,$00
3517  367C- 28 00 
3518                   *
3519  367E- 80 00 00   OUTCT2  BYT $80,$00,$00,$00,$00
3519  3681- 00 00 
3520  3683- FA 0A 1F           BYT $FA,$0A,$1F,$00,$00
3520  3686- 00 00 
3521  3688- 98 96 80           BYT $98,$96,$80,$FF,$F0
3521  368B- FF F0 
3522  368D- BD C0 00           BYT $BD,$C0,$00,$01,$86
3522  3690- 01 86 
3523  3692- A0 FF FF           BYT $A0,$FF,$FF,$D8,$F0
3523  3695- D8 F0 
3524  3697- 00 00 03           BYT $00,$00,$03,$E8,$FF
3524  369A- E8 FF 
3525  369C- FF FF 9C           BYT $FF,$FF,$9C,$00,$00
3525  369F- 00 00 
3526  36A1- 00 0A FF           BYT $00,$0A,$FF,$FF,$FF

----------------------------------------------------------------------

GRAPHIC BASIC - MATH OPERATIONS    19/11/19   R65 ASSEMBLER  PAGE 79

3526  36A4- FF FF 
3527  36A6- FF FF DF           BYT $FF,$FF,$DF,$0A,$80
3527  36A9- 0A 80 
3528  36AB- 00 03 4B           BYT $00,$03,$4B,$C0,$FF
3528  36AE- C0 FF 
3529  36B0- FF 73 60           BYT $FF,$73,$60,$00,$00
3529  36B3- 00 00 
3530  36B5- 0E 10 FF           BYT $0E,$10,$FF,$FF,$FD
3530  36B8- FF FD 
3531  36BA- A8 00 00           BYT $A8,$00,$00,$00,$3C
3531  36BD- 00 3C 
3532                   *
3533                   * NEGATE: NEGATE FLP ACCU
3534                   *************************
3535                   *
3536  36BF- A5 97      NEGATE  LDA EXP
3537  36C1- F0 06              BEQ *+8         RTS, IF ZERO
3538  36C3- A5 9C              LDA SIGN
3539  36C5- 49 FF              EOR =$FF
3540  36C7- 85 9C              STA SIGN
3541  36C9- 60                 RTS
3542                   *
3543                   * MULTEN: MULTIPLY BY TEN
3544                   *************************
3545                   *
3546  36CA- 20 20 35   MULTEN  JSR TRANS2
3547  36CD- AA                 TAX
3548  36CE- F0 10              BEQ *+18        RTS
3549  36D0- 18                 CLC
3550  36D1- 69 02              ADC =2          *4
3551  36D3- B0 0C              BCS *+14        OVERFLOW
3552  36D5- A2 00              LDX =0
3553  36D7- 86 A5              STX DYADIC+6
3554  36D9- 20 48 33           JSR ADD+13      4+1=5
3555  36DC- E6 97              INC EXP         2*5=10
3556  36DE- F0 01              BEQ *+3         OVERFLOW
3557  36E0- 60                 RTS
3558  36E1- 4C 50 34           JMP OVERFL
3559                   *
3560                   * DIVTEN: DIVIDE BY TEN
3561                   ***********************
3562                   *
3563  36E4- 84 20 00           BYT $84,$20,0,0,0       10.0
3563  36E7- 00 00 
3564  36E9- 20 20 35   DIVTEN  JSR TRANS2
3565  36EC- A9 E4              LDA =<(DIVTEN-5)
3566  36EE- A0 36              LDY =>(DIVTEN-5)
3567  36F0- A2 00              LDX =0
3568  36F2- 86 A5              STX DYADIC+6
3569  36F4- 20 AF 34           JSR GETFLP

----------------------------------------------------------------------

GRAPHIC BASIC - MATH OPERATIONS    19/11/19   R65 ASSEMBLER  PAGE 80

3570  36F7- 4C D1 37           JMP DIVIDE
3571                   *
3572                   * NUMEXP: NUMERIC EXPRESSION
3573                   ****************************
3574                   *
3575  36FA- 20 0D 27   NUMEXP  JSR FETCH
3576  36FD- 20 F7 2D          JSR EXPRES
3577  3700- 20 E8 2D           JSR TESTTP      MUST BE NUMERIC
3578  3703- 20 18 37           JSR FLPINT-4
3579  3706- A6 9A              LDX MANT+2
3580  3708- D0 05              BNE *+7
3581  370A- A6 9B              LDX MANT+3
3582  370C- 4C 13 27           JMP FETCH1
3583  370F- A2 2A      QERR    LDX =$2A        QUANTITY ERROR
3584  3711- 4C 43 23           JMP ERROR
3585                   *
3586                   * FLPINT: FLP TO INTEGER CONVERSION
3587                   ***********************************
3588                   *
3589  3714- 90 80 00   FLPINF  BYT $90,$80,0,0
3589  3717- 00 
3590                   *
3591  3718- A5 9C              LDA SIGN
3592  371A- 30 0D              BMI *+15
3593  371C- A5 97      FLPINT  LDA EXP
3594  371E- C9 90              CMP =$90
3595  3720- 90 09              BCC *+11
3596  3722- A9 14              LDA =<FLPINF
3597  3724- A0 37              LDY =>FLPINF
3598  3726- 20 5C 35           JSR COMPAR
3599  3729- D0 E4              BNE QERR        QUANT ERROR, TOO LARGE
3600                   *
3601  372B- A5 97      FLPIN1  LDA EXP
3602  372D- F0 28              BEQ FLPIN2
3603  372F- 38                 SEC
3604  3730- E9 A0              SBC =$A0
3605  3732- 24 9C              BIT SIGN
3606  3734- 10 09              BPL *+11
3607  3736- AA                 TAX
3608  3737- A9 FF              LDA =$FF
3609  3739- 85 9E              STA DYADIC-1
3610  373B- 20 1F 34           JSR COMPL+6
3611  373E- 8A                 TXA
3612  373F- A2 97              LDX =<EXP
3613  3741- C9 F9              CMP =$F9
3614  3743- 10 06              BPL *+8
3615  3745- 20 6B 34           JSR ROR2A
3616  3748- 84 9E              STY DYADIC-1
3617  374A- 60                 RTS
3618                   *

----------------------------------------------------------------------

GRAPHIC BASIC - MATH OPERATIONS    19/11/19   R65 ASSEMBLER  PAGE 81

3619  374B- A8                 TAY
3620  374C- A5 9C              LDA SIGN
3621  374E- 2A                 ROL A
3622  374F- 66 98              ROR MANT
3623  3751- 20 82 34           JSR ROR4
3624  3754- 84 9E              STY DYADIC-1
3625  3756- 60                 RTS
3626                   *
3627  3757- 85 98      FLPIN2  STA MANT
3628  3759- 85 99              STA MANT+1
3629  375B- 85 9A              STA MANT+2
3630  375D- 85 9B              STA MANT+3
3631  375F- A8                 TAY
3632  3760- 60                 RTS
3633                   *
3634                   * TESTEQ: EQUAL, LESS AND GREATER TEST
3635                   **************************************
3636                   *
3637  3761- 20 E9 2D   TESTEQ  JSR TESTTP+1
3638  3764- B0 13              BCS TESTE1
3639  3766- A5 A4              LDA DYADIC+5    NUMERIC COMPARE
3640  3768- 09 7F              ORA =$7F
3641  376A- 25 A0              AND DYADIC+1
3642  376C- 85 A0              STA DYADIC+1
3643  376E- A9 9F              LDA =<DYADIC
3644  3770- A0 00              LDY =>DYADIC
3645  3772- 20 5C 35           JSR COMPAR
3646  3775- AA                 TAX
3647  3776- 4C AC 37           JMP TESTE2+6
3648                   *
3649  3779- A9 00      TESTE1  LDA =0          STRING COMPAR
3650  377B- 85 45              STA RESTYP
3651  377D- C6 83              DEC LOGIC
3652  377F- 20 0F 29           JSR PREPST
3653  3782- 85 97              STA EXP
3654  3784- 86 98              STX MANT
3655  3786- 84 99              STY MANT+1
3656  3788- A5 A2              LDA DYADIC+3
3657  378A- A4 A3              LDY DYADIC+4
3658  378C- 20 13 29           JSR PREPST+4
3659  378F- 86 A2              STX DYADIC+3
3660  3791- 84 A3              STY DYADIC+4
3661  3793- AA                 TAX
3662  3794- 38                 SEC
3663  3795- E5 97              SBC EXP
3664  3797- F0 08              BEQ *+10
3665  3799- A9 01              LDA =1
3666  379B- 90 04              BCC *+6
3667  379D- A6 97              LDX EXP
3668  379F- A9 FF              LDA =$FF

----------------------------------------------------------------------

GRAPHIC BASIC - MATH OPERATIONS    19/11/19   R65 ASSEMBLER  PAGE 82

3669  37A1- 85 9C              STA SIGN
3670  37A3- A0 FF              LDY =$FF
3671  37A5- E8                 INX
3672  37A6- C8         TESTE2  INY
3673  37A7- CA                 DEX
3674  37A8- D0 07              BNE *+9
3675  37AA- A6 9C              LDX SIGN
3676  37AC- 30 0F              BMI TESTE3
3677  37AE- 18                 CLC
3678  37AF- 90 0C              BCC TESTE3      ALLWAYS TAKEN
3679  37B1- B1 A2              LDA (DYADIC+3),Y
3680  37B3- D1 98              CMP (MANT),Y
3681  37B5- F0 EF              BEQ TESTE2
3682  37B7- A2 FF              LDX =$FF
3683  37B9- B0 02              BCS TESTE3
3684  37BB- A2 01              LDX =1
3685  37BD- E8         TESTE3  INX
3686  37BE- 8A                 TXA
3687  37BF- 2A                 ROL A
3688  37C0- 25 4A              AND READFL+1
3689  37C2- F0 02              BEQ *+4
3690  37C4- A9 FF              LDA =$FF
3691  37C6- 4C 40 35           JMP FLOAT1
3692                   *
3693                   * DIVIDE: FLOATING POINT DIVIDE
3694                   *******************************
3695                   *
3696  37C9- A2 78      DIVZ    LDX =$78        DIVISION BY ZERO
3697  37CB- 4C 43 23           JMP ERROR
3698                   *
3699  37CE- 20 8E 34           JSR PREPMO
3700  37D1- F0 F6      DIVIDE  BEQ DIVZ
3701  37D3- 20 00 35           JSR ROUND
3702  37D6- A9 00              LDA =0          COMPL EXPONENT
3703  37D8- 38                 SEC
3704  37D9- E5 97              SBC EXP
3705  37DB- 85 97              STA EXP
3706  37DD- 20 5C 38           JSR MULEXP      COMPUTE RESULTING EXP
3707  37E0- E6 97              INC EXP
3708  37E2- F0 75              BEQ OVERF1      OVERFLOW
3709  37E4- A2 FC              LDX =$FC
3710  37E6- A9 01              LDA =1
3711  37E8- A4 A0      DIVID0  LDY DYADIC+1
3712  37EA- C4 98              CPY MANT
3713  37EC- D0 10              BNE DIVID1
3714  37EE- A4 A1              LDY DYADIC+2
3715  37F0- C4 99              CPY MANT+1
3716  37F2- D0 0A              BNE DIVID1
3717  37F4- A4 A2              LDY DYADIC+3
3718  37F6- C4 9A              CPY MANT+2

----------------------------------------------------------------------

GRAPHIC BASIC - MATH OPERATIONS    19/11/19   R65 ASSEMBLER  PAGE 83

3719  37F8- D0 04              BNE DIVID1
3720  37FA- A4 A3              LDY DYADIC+4
3721  37FC- C4 9B              CPY MANT+3
3722  37FE- 08         DIVID1  PHP
3723  37FF- 2A                ROL A
3724  3800- 90 09              BCC *+11
3725  3802- E8                 INX
3726  3803- 95 5F              STA TEMP9+3,X
3727  3805- F0 32              BEQ DIVID3
3728  3807- 10 34              BPL DIVID3+4
3729  3809- A9 01              LDA =1
3730  380B- 28                 PLP
3731  380C- B0 0E              BCS *+16
3732  380E- 06 A3      DIVID2  ASL DYADIC+4
3733  3810- 26 A2              ROL DYADIC+3
3734  3812- 26 A1              ROL DYADIC+2
3735  3814- 26 A0              ROL DYADIC+1
3736  3816- B0 E6              BCS DIVID1
3737  3818- 30 CE              BMI DIVID0
3738  381A- 10 E2              BPL DIVID1
3739  381C- A8                 TAY
3740  381D- A5 A3              LDA DYADIC+4
3741  381F- E5 9B              SBC MANT+3
3742  3821- 85 A3              STA DYADIC+4
3743  3823- A5 A2              LDA DYADIC+3
3744  3825- E5 9A              SBC MANT+2
3745  3827- 85 A2              STA DYADIC+3
3746  3829- A5 A1              LDA DYADIC+2
3747  382B- E5 99              SBC MANT+1
3748  382D- 85 A1              STA DYADIC+2
3749  382F- A5 A0              LDA DYADIC+1
3750  3831- E5 98              SBC MANT
3751  3833- 85 A0              STA DYADIC+1
3752  3835- 98                 TYA
3753  3836- 4C 0E 38           JMP DIVID2
3754  3839- A9 40      DIVID3  LDA =$40
3755  383B- D0 CE              BNE DIVID2-3    ALLWAYS TAKEN
3756                   *
3757  383D- 0A                 ASL A
3758  383E- 0A                 ASL A
3759  383F- 0A                 ASL A
3760  3840- 0A                 ASL A
3761  3841- 0A                 ASL A
3762  3842- 0A                 ASL A
3763  3843- 85 A6              STA DYADIC+7
3764  3845- 28                 PLP
3765  3846- A5 5C      MULEND  LDA TEMP9
3766  3848- 85 98              STA MANT
3767  384A- A5 5D              LDA TEMP9+1
3768  384C- 85 99              STA MANT+1

----------------------------------------------------------------------

GRAPHIC BASIC - MATH OPERATIONS    19/11/19   R65 ASSEMBLER  PAGE 84

3769  384E- A5 5E              LDA TEMP9+2
3770  3850- 85 9A              STA MANT+2
3771  3852- A5 5F              LDA TEMP9+3
3772  3854- 85 9B              STA MANT+3
3773  3856- 4C A9 33           JMP NORMAL+5
3774                   *
3775  3859- 4C 50 34   OVERF1  JMP OVERFL
3776                   *
3777  385C- A5 9F      MULEXP  LDA DYADIC
3778  385E- F0 20              BEQ MULEX1
3779  3860- 18                 CLC
3780  3861- 65 97              ADC EXP
3781  3863- 90 05              BCC *+7
3782  3865- 30 F2              BMI OVERF1
3783  3867- 18                 CLC
3784  3868- 90 02              BCC *+4         ALLWAYS TAKEN
3785                   *
3786  386A- 10 14              BPL MULEX1
3787  386C- 69 80              ADC =128
3788  386E- 85 97              STA EXP
3789  3870- D0 03              BNE *+5
3790  3872- 85 9C              STA SIGN
3791  3874- 60                 RTS
3792                   *
3793  3875- A5 A5              LDA DYADIC+6
3794  3877- 85 9C              STA SIGN
3795  3879- 60                 RTS
3796                   *
3797  387A- A5 9C              LDA SIGN
3798  387C- 49 FF              EOR =$FF
3799  387E- 30 D9              BMI OVERF1
3800  3880- 68         MULEX1  PLA
3801  3881- 68                 PLA
3802  3882- A9 00              LDA =0
3803  3884- 85 97              STA EXP
3804  3886- 85 9C              STA SIGN
3805  3888- 60                 RTS
3806                   *
3807                   * MULT: FLOATING POINT MULTIPLICATION
3808                   *************************************
3809                   *
3810  3889- 20 8E 34           JSR PREPMO
3811  388C- F0 FA      MULT    BEQ *-4         RTS, IF ZERO
3812  388E- 20 5C 38           JSR MULEXP
3813  3891- A9 00              LDA =0          CLEAR WORK AREA
3814  3893- 85 5C              STA TEMP9
3815  3895- 85 5D              STA TEMP9+1
3816  3897- 85 5E              STA TEMP9+2
3817  3899- 85 5F              STA TEMP9+3
3818  389B- A5 A6              LDA DYADIC+7

----------------------------------------------------------------------

GRAPHIC BASIC - MATH OPERATIONS    19/11/19   R65 ASSEMBLER  PAGE 85

3819  389D- 20 B7 38           JSR MULBYT
3820  38A0- A5 9B              LDA MANT+3
3821  38A2- 20 B7 38           JSR MULBYT
3822  38A5- A5 9A              LDA MANT+2
3823  38A7- 20 B7 38           JSR MULBYT
3824  38AA- A5 99              LDA MANT+1
3825  38AC- 20 B7 38           JSR MULBYT
3826  38AF- A5 98              LDA MANT
3827  38B1- 20 B7 38           JSR MULBYT
3828  38B4- 4C 46 38           JMP MULEND
3829                   *
3830                   * MULBYT: MULTIPLY 1*5 BYTES
3831                   ****************************
3832                   * HARDWARE 8*8 MULTIPLY USED
3833                   *
3834  38B7- A4 5F      MULBYT  LDY TEMP9+3
3835  38B9- 84 A6              STY DYADIC+7
3836  38BB- A4 5E              LDY TEMP9+2
3837  38BD- 84 5F              STY TEMP9+3
3838  38BF- A4 5D              LDY TEMP9+1
3839  38C1- 84 5E              STY TEMP9+2
3840  38C3- A4 5C              LDY TEMP9
3841  38C5- 84 5D              STY TEMP9+1
3842  38C7- A0 00              LDY =0
3843  38C9- 84 5C              STY TEMP9
3844                   *
3845  38CB- C9 00              CMP =0          TEST ACCU
3846  38CD- D0 02              BNE *+4
3847  38CF- 58         MULBT9  CLI
3848  38D0- 60                 RTS
3849                   *
3850  38D1- 78                 SEI
3851  38D2- A0 04              LDY =4
3852  38D4- 8D E0 14           STA MULTA
3853  38D7- A5 A3              LDA DYADIC+4
3854  38D9- 8D E1 14           STA MULTB
3855  38DC- A5 A6              LDA DYADIC+7
3856  38DE- 18                 CLC
3857  38DF- 6D E2 14           ADC MULTR
3858  38E2- 85 A6              STA DYADIC+7
3859  38E4- A5 5F              LDA TEMP9+3
3860  38E6- 6D E3 14           ADC MULTR+1
3861  38E9- 85 5F              STA TEMP9+3
3862  38EB- 90 09              BCC MULBT2      SKIP, IF NO CARRY
3863                   *
3864  38ED- 98         MULBT1  TYA
3865  38EE- AA                 TAX
3866  38EF- CA                 DEX
3867  38F0- F0 04              BEQ *+6
3868  38F2- F6 5B              INC TEMP9-1,X

----------------------------------------------------------------------

GRAPHIC BASIC - MATH OPERATIONS    19/11/19   R65 ASSEMBLER  PAGE 86

3869  38F4- F0 F9              BEQ *-5
3870                   *
3871  38F6- 88         MULBT2  DEY
3872  38F7- F0 D6              BEQ MULBT9
3873  38F9- B9 9F 00           LDA DYADIC,Y
3874  38FC- 8D E1 14           STA MULTB
3875  38FF- B9 5C 00          LDA TEMP9,Y
3876  3902- 18                 CLC
3877  3903- 6D E2 14           ADC MULTR
3878  3906- 99 5C 00           STA TEMP9,Y
3879  3909- B9 5B 00           LDA TEMP9-1,Y
3880  390C- 6D E3 14           ADC MULTR+1
3881  390F- 99 5B 00           STA TEMP9-1,Y
3882  3912- B0 D9              BCS MULBT1
3883  3914- 90 E0              BCC MULBT2      ALLWAYS TAKEN
3884                   *
3885                   * UNDEFINED FUNCTION ERROR
3886                   *
3887  3916- A2 CE      UNDFN   LDX =$CE
3888  3918- 4C 43 23           JMP ERROR
3889                   *
3890                   *
3891                   *
3892                   * BASIC FUNCTION TABLE
3893                   **********************
3894                   *
3895  391B- 3D 35      FUNCTB  WRD SGN
3896  391D- 32 3E              WRD INT
3897  391F- 2F 3E              WRD ABS
3898  3921- 5A 41              WRD USR
3899  3923- 75 4A              WRD STA
3900  3925- 16 3C              WRD POSF
3901  3927- CA 3E              WRD SQR
3902  3929- E4 3F              WRD RND
3903  392B- 5B 3E              WRD LOG
3904  392D- 11 3F              WRD EXPF
3905  392F- 3B 40              WRD COS
3906  3931- 42 40              WRD SIN
3907  3933- BD 40              WRD TAN
3908  3935- ED 40              WRD ATN
3909  3937- F2 3D              WRD PEEK
3910  3939- 97 3D              WRD LEN
3911  393B- ED 3C              WRD STR
3912  393D- B9 3D              WRD VAL
3913  393F- AC 3D              WRD ASC
3914  3941- FE 3C              WRD CHR
3915  3943- 12 3D              WRD LEFT
3916  3945- 3E 3D              WRD RIGHT
3917  3947- 49 3D              WRD MID
3918                   *

----------------------------------------------------------------------

GRAPHIC BASIC - MATH OPERATIONS    19/11/19   R65 ASSEMBLER  PAGE 87

3919                   * NOT: MATH OPERATION
3920                   *********************
3921                   *
3922  3949- 20 1C 37   NOT     JSR FLPINT
3923  394C- A5 9B              LDA MANT+3
3924  394E- 49 FF              EOR =$FF
3925  3950- A8                 TAY
3926  3951- A5 9A              LDA MANT+2
3927  3953- 49 FF              EOR =$FF
3928  3955- 4C DD 2F           JMP INTFLP
3929                   *
3930                   * BFUNC: BASIC FUNCTION
3931                   ***********************
3932                   *
3933  3958- 0A         BFUNC   ASL A
3934  3959- 48                 PHA             SAVE 2*CODE
3935  395A- AA                 TAX
3936  395B- 20 0D 27           JSR FETCH
3937  395E- E0 A9              CPX =$A9
3938  3960- 90 23              BCC BFUNC0      SKIP, IF NOT STR
3939                   *
3940  3962- 20 6D 2B           JSR FOLLOW-6    "(" MUST FOLLOW
3941  3965- 20 F7 2D           JSR EXPRES
3942  3968- A9 2C              LDA =','
3943  396A- 20 73 2B           JSR FOLLOW
3944  396D- 38                 SEC
3945  396E- 20 E9 2D           JSR TESTTP+1    MUST BE STRING
3946  3971- 68                 PLA
3947  3972- AA                 TAX
3948  3973- A5 9B              LDA MANT+3
3949  3975- 48                 PHA
3950  3976- A5 9A              LDA MANT+2
3951  3978- 48                 PHA
3952  3979- 8A                 TXA
3953  397A- 48                 PHA             SAVE 2*CODE AGAIN
3954  397B- 20 FD 36           JSR NUMEXP+3    GET SECOND ARG
3955  397E- 68                 PLA
3956  397F- A8                 TAY
3957  3980- 8A                 TXA
3958  3981- 48                 PHA
3959  3982- 4C AB 39           JMP BFUNC1+5
3960                   *
3961  3985- E0 88      BFUNC0  CPX =$88        IF USR
3962  3987- D0 1D              BNE BFUNC1
3963  3989- 20 6D 2B           JSR FOLLOW-6    GET 2 ARGS
3964  398C- 20 F7 2D           JSR EXPRES      ADDRESS
3965  398F- 20 E8 2D           JSR TESTTP
3966  3992- 20 FF 3D           JSR PEEK1       CONVERT TO INTEGER
3967  3995- A9 2C              LDA =','
3968  3997- 20 73 2B           JSR FOLLOW

----------------------------------------------------------------------

GRAPHIC BASIC - MATH OPERATIONS    19/11/19   R65 ASSEMBLER  PAGE 88

3969  399A- 20 F7 2D           JSR EXPRES      GET SECOND ARG
3970  399D- 20 E8 2D           JSR TESTTP      MUST BE NUMERIC
3971  39A0- 20 71 2B           JSR FOLLOW-2
3972  39A3- 4C A9 39           JMP BFUNC1+3
3973                   *
3974  39A6- 20 80 2F   BFUNC1  JSR ARGUM
3975  39A9- 68                 PLA
3976  39AA- A8                 TAY
3977  39AB- B9 99 38           LDA FUNCTB-$82,Y
3978  39AE- 85 8B              STA PNT1
3979  39B0- B9 9A 38           LDA FUNCTB-$81,Y
3980  39B3- 85 8C              STA PNT1+1
3981  39B5- 20 8A 00           JSR PNT1-1      EXECUTE
3982  39B8- 4C E8 2D           JMP TESTTP      MUST BE NUMERIC
3983                   *
3984                   * OR: MATH OPERATION
3985                   ********************
3986                   *
3987  39BB- A0 FF      OR      LDY =$FF
3988  39BD- D0 02              BNE *+4         ALLWAYS TAKEN
3989                   *
3990                   * AND: MATH OPERATION
3991                   *********************
3992                   *
3993  39BF- A0 00      AND     LDY =0
3994  39C1- 84 43              STY INPNT
3995  39C3- 20 1C 37           JSR FLPINT
3996  39C6- A5 9A              LDA MANT+2
3997  39C8- 45 43              EOR INPNT
3998  39CA- 85 41              STA CHRSAV
3999  39CC- A5 9B              LDA MANT+3
4000  39CE- 45 43              EOR INPNT
4001  39D0- 85 42              STA CHRSAV+1
4002  39D2- 20 10 35           JSR TRANS1
4003  39D5- 20 1C 37           JSR FLPINT
4004  39D8- A5 9B              LDA MANT+3
4005  39DA- 45 43              EOR INPNT
4006  39DC- 25 42              AND CHRSAV+1
4007  39DE- 45 43              EOR INPNT
4008  39E0- A8                 TAY
4009  39E1- A5 9A              LDA MANT+2
4010  39E3- 45 43              EOR INPNT
4011  39E5- 25 41              AND CHRSAV
4012  39E7- 45 43              EOR INPNT
4013  39E9- 4C DD 2F           JMP INTFLP
4014                   *
4015                           TIT GRAPHIC BASIC - ARRAYS
4016                           PAG

----------------------------------------------------------------------

GRAPHIC BASIC - ARRAYS             19/11/19   R65 ASSEMBLER  PAGE 89

4017                   *
4018                   * DIM: STATEMENT ROUTINE
4019                   ************************
4020                   *
4021  39EC- A9 2C              LDA =','
4022                    * BASIC5:A ORIGINAL 7/1/1982, RECOVERED 3/2018
4023  39EE- 20 73 2B           JSR FOLLOW
4024  39F1- A2 00      DIM     LDX =0
4025  39F3- 86 CF              STX TEMP4+1     VARIABLE CAN BE UNDEF
4026  39F5- AA                 TAX
4027  39F6- 20 84 2B           JSR GETVAR+5
4028  39F9- 20 13 27           JSR FETCH1
4029  39FC- D0 EE              BNE DIM-5
4030  39FE- 60                 RTS
4031                   *
4032                   * GETARR: GET ARRAY
4033                   *******************
4034                   *
4035  39FF- A5 CF     GETARR  LDA TEMP4+1
4036  3A01- 48                 PHA
4037  3A02- A5 44              LDA RESTYP-1
4038  3A04- 05 46              ORA RESTYP+1
4039  3A06- 48                 PHA
4040  3A07- A5 45              LDA RESTYP
4041  3A09- 48                 PHA
4042  3A0A- A0 00              LDY =0
4043  3A0C- 98         GETAR1  TYA
4044  3A0D- 48                 PHA
4045  3A0E- A5 7C              LDA VARSYM+1
4046  3A10- 48                 PHA
4047  3A11- A5 7B              LDA VARSYM
4048  3A13- 48                 PHA
4049  3A14- 20 DB 3B           JSR GETSU       GET SUBSCRIPT
4050  3A17- 68                 PLA
4051  3A18- 85 7B              STA VARSYM
4052  3A1A- 68                 PLA
4053  3A1B- 85 7C              STA VARSYM+1
4054  3A1D- 68                 PLA
4055  3A1E- A8                 TAY
4056                   *
4057  3A1F- BA                 TSX
4058  3A20- BD 02 01           LDA 258,X       RESTYP TO STACK BOT
4059  3A23- 48                 PHA
4060  3A24- BD 01 01           LDA 257,X
4061  3A27- 48                 PHA
4062  3A28- BD 03 01           LDA 259,X
4063  3A2B- 9D 01 01           STA 257,X
4064  3A2E- A5 9A              LDA MANT+2
4065  3A30- 9D 03 01           STA 259,X       SUBSCRIPT TO TOP
4066  3A33- A5 9B              LDA MANT+3

----------------------------------------------------------------------

GRAPHIC BASIC - ARRAYS             19/11/19   R65 ASSEMBLER  PAGE 90

4067  3A35- 9D 02 01           STA 258,X
4068                   *
4069  3A38- C8                 INY             COUNT SUBSCRIPT
4070  3A39- 20 13 27           JSR FETCH1      MORE SUBSCRIPTS?
4071  3A3C- C9 2C              CMP =','
4072  3A3E- F0 CC              BEQ GETAR1      IF YES, GET THEM
4073                   *
4074  3A40- 84 43              STY INPNT       SAVE NO OF SUBSCRIPTS
4075  3A42- 20 71 2B           JSR FOLLOW-2    ) MUST FOLLOW
4076  3A45- 68                 PLA
4077  3A46- 85 45              STA RESTYP
4078  3A48- 68                 PLA
4079  3A49- 85 46              STA RESTYP+1
4080  3A4B- 29 7F              AND =$7F
4081  3A4D- 85 44              STA RESTYP-1
4082  3A4F- 68                 PLA
4083  3A50- 85 CF              STA TEMP4+1
4084                   *
4085  3A52- A6 65              LDX EOVAR
4086  3A54- A5 66              LDA EOVAR+1
4087  3A56- 86 95      GETAR2  STX TRANSP      SEARCH SYMBOL
4088  3A58- 85 96              STA TRANSP+1    STARTING FROM EOVAR
4089  3A5A- C5 68              CMP STSPAC+1    ENDING WITH STSPAC
4090  3A5C- D0 04              BNE *+6
4091  3A5E- E4 67              CPX STSPAC
4092  3A60- F0 36              BEQ GETAR4      BRANCH, IF NOT FOUND
4093  3A62- A0 00              LDY =0
4094  3A64- B1 95              LDA (TRANSP),Y
4095  3A66- C8                 INY
4096  3A67- C5 7B              CMP VARSYM
4097  3A69- D0 06              BNE *+8
4098  3A6B- A5 7C              LDA VARSYM+1
4099  3A6D- D1 95              CMP (TRANSP),Y
4100  3A6F- F0 13              BEQ GETAR3      BRANCH, IF FOUND
4101  3A71- C8                 INY
4102  3A72- B1 95              LDA (TRANSP),Y  GET SIZE LOW
4103  3A74- 18                 CLC
4104  3A75- 65 95              ADC TRANSP
4105  3A77- AA                 TAX
4106  3A78- C8                 INY
4107  3A79- B1 95              LDA (TRANSP),Y
4108  3A7B- 65 96              ADC TRANSP+1
4109  3A7D- 90 D7              BCC GETAR2      ALLWAYS TAKEN
4110                   *
4111  3A7F- A2 6F      SUBERR  LDX =$6F        SUBSCRIPT ERROR
4112  3A81- 4C 43 23           JMP ERROR
4113                   *
4114  3A84- A2 64      GETAR3  LDX =$64        IF FOUND
4115  3A86- A5 44              LDA RESTYP-1    REDIMENSION ERROR
4116  3A88- D0 F7              BNE GETAR3-3    YES

----------------------------------------------------------------------

GRAPHIC BASIC - ARRAYS             19/11/19   R65 ASSEMBLER  PAGE 91

4117  3A8A- 20 EE 3B           JSR COMPEB
4118  3A8D- A5 43              LDA INPNT
4119  3A8F- A0 04              LDY =4
4120  3A91- D1 95              CMP (TRANSP),Y
4121  3A93- D0 EA              BNE SUBERR      SUBSCRIPT ERROR
4122  3A95- 4C 29 3B           JMP GETAR6
4123                   *
4124  3A98- A5 CF      GETAR4  LDA TEMP4+1     IF NOT FOUND
4125  3A9A- F0 03              BEQ *+5
4126  3A9C- 4C 0D 2C           JMP GETV3+4     UNDEF VAR ERR
4127                   *
4128  3A9F- 20 EE 3B           JSR COMPEB
4129  3AA2- 20 07 23           JSR TSROOM
4130  3AA5- A9 00              LDA =0
4131  3AA7- A8                 TAY
4132  3AA8- 85 A8              STA DYADIC+9
4133  3AAA- A2 05              LDX =5
4134  3AAC- A5 7B              LDA VARSYM
4135  3AAE- 91 95              STA (TRANSP),Y
4136  3AB0- 10 01              BPL *+3
4137  3AB2- CA                 DEX
4138  3AB3- C8                 INY
4139  3AB4- A5 7C              LDA VARSYM+1
4140  3AB6- 91 95              STA (TRANSP),Y
4141  3AB8- 10 02              BPL *+4
4142  3ABA- CA                 DEX
4143  3ABB- CA                 DEX
4144  3ABC- 86 A7              STX DYADIC+8    ELEMENT SIZE
4145  3ABE- A5 43              LDA INPNT
4146  3AC0- C8                 INY
4147  3AC1- C8                 INY
4148  3AC2- C8                 INY
4149  3AC3- 91 95              STA (TRANSP),Y
4150  3AC5- A2 0B      GETAR5  LDX =11         DEFAULT DIMENSION
4151  3AC7- A9 00              LDA =0
4152  3AC9- 24 44              BIT RESTYP-1
4153  3ACB- 50 08              BVC *+10        SKIP, IF NOT DIM
4154  3ACD- 68                 PLA
4155  3ACE- 18                 CLC
4156  3ACF- 69 01              ADC =1
4157  3AD1- AA                 TAX
4158  3AD2- 68                 PLA
4159  3AD3- 69 00              ADC =0
4160                   *
4161  3AD5- C8                 INY
4162  3AD6- 91 95              STA (TRANSP),Y
4163  3AD8- C8                 INY
4164  3AD9- 8A                 TXA
4165  3ADA- 91 95              STA (TRANSP),Y
4166  3ADC- 20 8C 3B           JSR GETAR8

----------------------------------------------------------------------

GRAPHIC BASIC - ARRAYS             19/11/19   R65 ASSEMBLER  PAGE 92

4167  3ADF- 86 A7              STX DYADIC+8
4168  3AE1- 84 A8              STY DYADIC+9
4169  3AE3- A4 58              LDY TEMP1
4170  3AE5- C6 43              DEC INPNT
4171  3AE7- D0 DC              BNE GETAR5
4172  3AE9- 65 8F              ADC ENDB+1
4173  3AEB- B0 5D              BCS GETAR7      OUT OF MEMORY
4174  3AED- 85 8F              STA ENDB+1
4175  3AEF- A8                 TAY
4176  3AF0- 8A                 TXA
4177  3AF1- 65 8E              ADC ENDB
4178  3AF3- 90 03              BCC *+5
4179  3AF5- C8                 INY
4180  3AF6- F0 52              BEQ GETAR7      OUT OF MEMORY
4181  3AF8- 20 07 23           JSR TSROOM
4182  3AFB- 85 67              STA STSPAC
4183  3AFD- 84 68              STY STSPAC+1
4184  3AFF- A9 00             LDA =0
4185  3B01- E6 A8              INC DYADIC+9
4186  3B03- A4 A7              LDY DYADIC+8
4187  3B05- F0 05              BEQ *+7
4188  3B07- 88                 DEY
4189  3B08- 91 8E              STA (ENDB),Y
4190  3B0A- D0 FB              BNE *-3
4191  3B0C- C6 8F              DEC ENDB+1
4192  3B0E- C6 A8              DEC DYADIC+9
4193  3B10- D0 F5              BNE *-9
4194  3B12- E6 8F              INC ENDB+1
4195  3B14- 38                 SEC
4196  3B15- A5 67              LDA STSPAC
4197  3B17- E5 95              SBC TRANSP
4198  3B19- A0 02              LDY =2
4199  3B1B- 91 95              STA (TRANSP),Y
4200  3B1D- A5 68              LDA STSPAC+1
4201  3B1F- C8                 INY
4202  3B20- E5 96              SBC TRANSP+1
4203  3B22- 91 95              STA (TRANSP),Y
4204  3B24- A5 44              LDA RESTYP-1
4205  3B26- D0 63              BNE GETAR8-1
4206  3B28- C8                 INY
4207  3B29- B1 95      GETAR6  LDA (TRANSP),Y
4208  3B2B- 85 43              STA INPNT
4209  3B2D- A9 00              LDA =0
4210  3B2F- 85 A7              STA DYADIC+8
4211  3B31- 85 A8              STA DYADIC+9
4212  3B33- C8                 INY
4213  3B34- 68                 PLA
4214  3B35- AA                 TAX
4215  3B36- 85 9A              STA MANT+2
4216  3B38- 68                 PLA

----------------------------------------------------------------------

GRAPHIC BASIC - ARRAYS             19/11/19   R65 ASSEMBLER  PAGE 93

4217  3B39- 85 9B              STA MANT+3
4218  3B3B- D1 95              CMP (TRANSP),Y
4219  3B3D- 90 0F              BCC GETAR7+4
4220  3B3F- D0 06              BNE GETAR7-3
4221  3B41- C8                 INY
4222  3B42- 8A                 TXA
4223  3B43- D1 95              CMP (TRANSP),Y
4224  3B45- 90 08              BCC GETAR7+5
4225  3B47- 4C 7F 3A           JMP SUBERR      SUBSCRIPT ERROR
4226                   *
4227  3B4A- 58         GETAR7  CLI
4228  3B4B- 4C 41 23           JMP OUTMEM      OUT OF MEMORY
4229                   *
4230  3B4E- C8                 INY
4231  3B4F- A5 A8              LDA DYADIC+9
4232  3B51- 05 A7              ORA DYADIC+8
4233  3B53- 18                 CLC
4234  3B54- F0 0A              BEQ *+12
4235  3B56- 20 8C 3B           JSR GETAR8
4236  3B59- 8A                 TXA
4237  3B5A- 65 9A              ADC MANT+2
4238  3B5C- AA                 TAX
4239  3B5D- 98                 TYA
4240  3B5E- A4 58              LDY TEMP1
4241  3B60- 65 9B              ADC MANT+3
4242  3B62- 86 A7              STX DYADIC+8
4243  3B64- C6 43              DEC INPNT
4244  3B66- D0 C9              BNE GETAR6+8
4245  3B68- 85 A8              STA DYADIC+9
4246  3B6A- A2 05              LDX =5
4247  3B6C- A5 7B              LDA VARSYM
4248  3B6E- 10 01              BPL *+3
4249  3B70- CA                 DEX
4250  3B71- A5 7C              LDA VARSYM+1
4251  3B73- 10 02              BPL *+4
4252  3B75- CA                 DEX
4253  3B76- CA                 DEX
4254  3B77- 86 5E              STX TEMP9+2
4255  3B79- A9 00              LDA =0
4256  3B7B- 20 95 3B           JSR GETAR8+9
4257  3B7E- 8A                 TXA
4258  3B7F- 65 8E              ADC ENDB
4259  3B81- 85 7D              STA VARSTP
4260  3B83- 98                 TYA
4261  3B84- 65 8F              ADC ENDB+1
4262  3B86- 85 7E              STA VARSTP+1
4263  3B88- A8                 TAY
4264  3B89- A5 7D              LDA VARSTP
4265  3B8B- 60                 RTS
4266                   *

----------------------------------------------------------------------

GRAPHIC BASIC - ARRAYS             19/11/19   R65 ASSEMBLER  PAGE 94

4267                   *
4268  3B8C- 84 58      GETAR8  STY TEMP1       SAVE POINTER
4269  3B8E- B1 95              LDA (TRANSP),Y
4270  3B90- 85 5E              STA TEMP9+2
4271  3B92- 88                 DEY
4272  3B93- B1 95              LDA (TRANSP),Y
4273  3B95- 85 5F              STA TEMP9+3
4274  3B97- A5 A7              LDA DYADIC+8
4275  3B99- 78                 SEI
4276  3B9A- 8D E0 14           STA MULTA
4277  3B9D- A5 5E              LDA TEMP9+2
4278  3B9F- 8D E1 14           STA MULTB
4279  3BA2- AE E2 14           LDX MULTR
4280  3BA5- AD E3 14           LDA MULTR+1
4281  3BA8- A4 5F              LDY TEMP9+3
4282  3BAA- 8C E1 14           STY MULTB
4283  3BAD- 18                 CLC
4284  3BAE- 6D E2 14           ADC MULTR
4285  3BB1- B0 97              BCS GETAR7      OUT OF MEMORY
4286  3BB3- A8                 TAY
4287  3BB4- AD E3 14           LDA MULTR+1
4288  3BB7- D0 91              BNE GETAR7      OUT OF MEMORY
4289  3BB9- 58                 CLI
4290  3BBA- A5 A8              LDA DYADIC+9
4291  3BBC- F0 1A              BEQ GETSU-3     RTS, IF ZERO
4292  3BBE- 78                 SEI
4293  3BBF- 8D E0 14           STA MULTA
4294  3BC2- A5 5F              LDA TEMP9+3
4295  3BC4- D0 84              BNE GETAR7      OUT OF MEMORY
4296  3BC6- A5 5E              LDA TEMP9+2
4297  3BC8- 8D E1 14           STA MULTB
4298  3BCB- 98                 TYA
4299  3BCC- 18                 CLC
4300  3BCD- 6D E2 14           ADC MULTR
4301  3BD0- B0 DF              BCS *-31        OUT OF MEMORY
4302  3BD2- A8                 TAY
4303  3BD3- AD E3 14           LDA MULTR+1
4304  3BD6- D0 EC              BNE *-18        OUT OF MEMORY
4305  3BD8- 98                 TYA
4306  3BD9- 58                 CLI
4307  3BDA- 60                 RTS
4308                   *
4309                   * GETSU: GET ONE SUBSCRIPT
4310                   **************************
4311                   *
4312  3BDB- 20 0D 27   GETSU   JSR FETCH
4313  3BDE- 20 F7 2D           JSR EXPRES
4314  3BE1- 20 E8 2D           JSR TESTTP
4315  3BE4- A5 9C              LDA MANT+4
4316  3BE6- 30 03              BMI *+5

----------------------------------------------------------------------

GRAPHIC BASIC - ARRAYS             19/11/19   R65 ASSEMBLER  PAGE 95

4317  3BE8- 4C 1C 37           JMP FLPINT
4318  3BEB- 4C 0F 37           JMP QERR
4319                   *
4320                   * COMPEB: COMPUTE ENDB
4321                   **********************
4322                   *
4323  3BEE- A5 43      COMPEB  LDA INPNT       NO OF SUBSCRIPTS
4324  3BF0- 0A                 ASL A
4325  3BF1- 69 05              ADC =5          *2, + 5
4326  3BF3- 65 95              ADC TRANSP
4327  3BF5- A4 96              LDY TRANSP+1
4328  3BF7- 90 01              BCC *+3
4329  3BF9- C8                 INY
4330  3BFA- 85 8E              STA ENDB
4331  3BFC- 84 8F              STY ENDB+1
4332  3BFE- 60                 RTS
4333                   *
4334                           TIT GRAPHIC BASIC - FUNCTIONS
4335                           PAG

----------------------------------------------------------------------

GRAPHIC BASIC - FUNCTIONS          19/11/19   R65 ASSEMBLER  PAGE 96

4336                   *
4337                   * FRE: COMPUTE FREE SPACE IN MEMORY
4338                   ***********************************
4339                   *
4340  3BFF- A5 45     FRE     LDA RESTYP
4341  3C01- F0 03              BEQ *+5
4342  3C03- 20 0F 29           JSR PREPST
4343  3C06- 20 9A 2C           JSR PKSTRG
4344  3C09- 38                 SEC
4345  3C0A- A5 69              LDA BTSTRG
4346  3C0C- E5 67              SBC STSPAC
4347  3C0E- A8                 TAY
4348  3C0F- A5 6A              LDA BTSTRG+1
4349  3C11- E5 68              SBC STSPAC+1
4350  3C13- 4C DD 2F           JMP INTFLP
4351                   *
4352                   * POS: BASIC FUNCTION
4353                   *********************
4354                   *
4355  3C16- 20 00 37   POSF    JSR NUMEXP+6
4356  3C19- E0 04              CPX =4
4357  3C1B- 90 03              BCC *+5
4358  3C1D- 4C 8B 3D           JMP QERR1
4359  3C20- E4 00              CPX OUTDEV
4360  3C22- D0 07              BNE POSF2
4361  3C24- A4 02      POSF1   LDY POS
4362  3C26- A9 00              LDA =0
4363  3C28- 4C DD 2F           JMP INTFLP
4364  3C2B- B5 BB      POSF2   LDA POSTB,X
4365  3C2D- A8                 TAY
4366  3C2E- 4C 26 3C           JMP POSF1+2
4367                   *
4368                   * DEF: STATEMENT ROUTINE
4369                   ************************
4370                   *
4371  3C31- 20 5F 3C   DEF     JSR DEF1
4372  3C34- 20 F4 32           JSR ILLDIR
4373  3C37- 20 6D 2B           JSR FOLLOW-6    ( MUST FOLLOW
4374  3C3A- A9 80              LDA =128
4375  3C3C- 85 48              STA FLAG1
4376  3C3E- 20 7F 2B           JSR GETVAR
4377  3C41- 20 E8 2D           JSR TESTTP      MUST BE NUMERIC
4378  3C44- 20 71 2B           JSR FOLLOW-2    ) MUST FOLLOW
4379  3C47- A9 BF              LDA =$BF        CODE FOR =
4380  3C49- 20 73 2B           JSR FOLLOW
4381  3C4C- 48                 PHA
4382  3C4D- A5 7E              LDA VARSTP+1
4383  3C4F- 48                 PHA
4384  3C50- A5 7D              LDA VARSTP
4385  3C52- 48                 PHA

----------------------------------------------------------------------

GRAPHIC BASIC - FUNCTIONS          19/11/19   R65 ASSEMBLER  PAGE 97

4386  3C53- A5 AA              LDA PC+1
4387  3C55- 48                 PHA
4388  3C56- A5 A9              LDA PC
4389  3C58- 48                 PHA
4390  3C59- 20 F0 27           JSR DATA        ADVANCE IN LINE
4391  3C5C- 4C D7 3C           JMP DEF2
4392                   *
4393  3C5F- A9 00      DEF1    LDA =0  MUST NOT BE DEFINED
4394  3C61- 85 CF              STA TEMP4+1
4395  3C63- A9 B2              LDA =$B2        CODE FOR FN
4396  3C65- 20 73 2B           JSR FOLLOW
4397  3C68- 09 80              ORA =$80
4398  3C6A- 85 48              STA FLAG1
4399  3C6C- 20 86 2B           JSR GETVAR+7
4400  3C6F- 85 84              STA TEMP6
4401  3C71- 84 85              STY TEMP6+1
4402  3C73- 4C E8 2D           JMP TESTTP      MUST BE NUMERIC
4403                   *
4404                   *
4405                   * FUNC: BASIC USER DEFINED FUNCTION
4406                   ***********************************
4407                   *
4408  3C76- 20 5F 3C   FUNC    JSR DEF1
4409  3C79- A5 85              LDA TEMP6+1     SAVE FUNCTION
4410  3C7B- 48                 PHA             VARIABLE NAME ON STACK
4411  3C7C- A5 84              LDA TEMP6
4412  3C7E- 48                 PHA
4413  3C7F- 20 80 2F           JSR ARGUM
4414  3C82- 20 E8 2D           JSR TESTTP      MUST BE NUMERIC
4415  3C85- 68                 PLA
4416  3C86- 85 84              STA TEMP6
4417  3C88- 68                 PLA
4418  3C89- 85 85              STA TEMP6+1
4419  3C8B- A0 02              LDY =2
4420  3C8D- B1 84              LDA (TEMP6),Y
4421  3C8F- D0 03              BNE *+5
4422  3C91- 4C 16 39           JMP UNDFN       UNDEFINED FUNCTION
4423  3C94- 85 7D              STA VARSTP
4424  3C96- AA                 TAX
4425  3C97- C8                 INY
4426  3C98- B1 84              LDA (TEMP6),Y
4427  3C9A- 85 7E              STA VARSTP+1
4428  3C9C- C8                 INY
4429  3C9D- B1 7D              LDA (VARSTP),Y
4430  3C9F- 48                 PHA
4431  3CA0- 88                 DEY
4432  3CA1- 10 FA              BPL *-4
4433  3CA3- A4 7E              LDY VARSTP+1
4434  3CA5- 20 D8 34           JSR SAVFLP+4
4435  3CA8- A5 AA              LDA PC+1

----------------------------------------------------------------------

GRAPHIC BASIC - FUNCTIONS          19/11/19   R65 ASSEMBLER  PAGE 98

4436  3CAA- 48                 PHA
4437  3CAB- A5 A9              LDA PC
4438  3CAD- 48                 PHA
4439  3CAE- B1 84              LDA (TEMP6),Y
4440  3CB0- 85 A9              STA PC
4441  3CB2- C8                 INY
4442  3CB3- B1 84              LDA (TEMP6),Y
4443  3CB5- 85 AA              STA PC+1
4444  3CB7- A5 7E              LDA VARSTP+1
4445  3CB9- 48                 PHA
4446  3CBA- A5 7D              LDA VARSTP
4447  3CBC- 48                 PHA
4448  3CBD- 20 F7 2D           JSR EXPRES
4449  3CC0- 20 E8 2D           JSR TESTTP
4450  3CC3- 68                 PLA
4451  3CC4- 85 84              STA TEMP6
4452  3CC6- 68                 PLA
4453  3CC7- 85 85              STA TEMP6+1
4454  3CC9- 20 13 27           JSR FETCH1
4455  3CCC- F0 03              BEQ *+5
4456  3CCE- 4C C4 26           JMP SYNERR
4457  3CD1- 68                 PLA
4458  3CD2- 85 A9              STA PC
4459  3CD4- 68                 PLA
4460  3CD5- 85 AA              STA PC+1
4461                   *
4462  3CD7- A0 00      DEF2    LDY =0
4463  3CD9- 68                 PLA
4464  3CDA- 91 84              STA (TEMP6),Y
4465  3CDC- 68                 PLA
4466  3CDD- C8                 INY
4467  3CDE- 91 84              STA (TEMP6),Y
4468  3CE0- 68                 PLA
4469  3CE1- C8                 INY
4470  3CE2- 91 84              STA (TEMP6),Y
4471  3CE4- 68                 PLA
4472  3CE5- C8                 INY
4473  3CE6- 91 84              STA (TEMP6),Y
4474  3CE8- 68                 PLA
4475  3CE9- C8                 INY
4476  3CEA- 91 84              STA (TEMP6),Y
4477  3CEC- 60                 RTS
4478                   *
4479                   * STR$: BASIC FUNCTION
4480                   **********************
4481                   *
4482  3CED- 20 E8 2D   STR     JSR TESTTP      ARGUMENT NUMERIC
4483  3CF0- A0 00              LDY =0
4484  3CF2- 20 7B 49           JSR FORMOUT+2
4485  3CF5- 68                 PLA

----------------------------------------------------------------------

GRAPHIC BASIC - FUNCTIONS          19/11/19   R65 ASSEMBLER  PAGE 99

4486  3CF6- 68                 PLA
4487  3CF7- A9 FF              LDA =255
4488  3CF9- A0 00              LDY =0
4489  3CFB- 4C A8 28           JMP STRSIZ
4490                   *
4491                   * CHR$: BASIC FUNCTION
4492                   **********************
4493                   *
4494  3CFE- 20 03 37  CHR     JSR NUMEXP+9
4495  3D01- 8A                 TXA
4496  3D02- 48                 PHA
4497  3D03- A9 01              LDA =1
4498  3D05- 20 B5 2D           JSR TSTRRM+8
4499  3D08- 68                 PLA
4500  3D09- A0 00              LDY =0
4501  3D0B- 91 98              STA (MANT),Y
4502  3D0D- 68                 PLA
4503  3D0E- 68                 PLA
4504  3D0F- 4C E7 28           JMP STRSI3
4505                   *
4506                   * LEFT$: BASIC FUNCTION
4507                   ***********************
4508                   *
4509  3D12- 20 73 3D   LEFT    JSR MID1
4510  3D15- D1 86              CMP (TEMP5),Y
4511  3D17- 98                 TYA
4512  3D18- 90 04              BCC *+6
4513  3D1A- B1 86              LDA (TEMP5),Y
4514  3D1C- AA                 TAX
4515  3D1D- 98                 TYA
4516  3D1E- 48                 PHA
4517  3D1F- 8A         LEFT1   TXA
4518  3D20- 48                 PHA
4519  3D21- 20 B5 2D           JSR TSTRRM+8
4520  3D24- A5 86              LDA TEMP5
4521  3D26- A4 87              LDY TEMP5+1
4522  3D28- 20 13 29           JSR PREPST+4
4523  3D2B- 68                 PLA
4524  3D2C- A8                 TAY
4525  3D2D- 68                 PLA
4526  3D2E- 18                 CLC
4527  3D2F- 65 58              ADC TEMP1
4528  3D31- 85 58              STA TEMP1
4529  3D33- 90 02              BCC *+4
4530  3D35- E6 59              INC TEMP1+1
4531  3D37- 98                 TYA
4532  3D38- 20 D1 2D           JSR INSST0+4
4533  3D3B- 4C E7 28           JMP STRSI3
4534                   *
4535                   * RIGHT$: BASIC FUNCTION

----------------------------------------------------------------------

GRAPHIC BASIC - FUNCTIONS          19/11/19   R65 ASSEMBLER  PAGE 00

4536                   ************************
4537                   *
4538  3D3E- 20 73 3D   RIGHT   JSR MID1
4539  3D41- 18                 CLC
4540  3D42- F1 86              SBC (TEMP5),Y
4541  3D44- 49 FF              EOR =$FF
4542  3D46- 4C 18 3D           JMP LEFT+6
4543                   *
4544                   * MID$ BASIC FUNCTION
4545                   *********************
4546                   *
4547  3D49- A9 FF      MID     LDA =$FF
4548  3D4B- 85 9B              STA MANT+3
4549  3D4D- 20 13 27           JSR FETCH1
4550  3D50- C9 29              CMP =')'
4551  3D52- F0 08              BEQ *+10
4552  3D54- A9 2C              LDA =','
4553  3D56- 20 73 2B           JSR FOLLOW
4554  3D59- 20 FD 36           JSR NUMEXP+3
4555                   *
4556  3D5C- 20 73 3D           JSR MID1
4557  3D5F- CA                 DEX
4558  3D60- 8A                 TXA
4559  3D61- 48                 PHA
4560  3D62- 18                 CLC
4561  3D63- A2 00              LDX =0
4562  3D65- F1 86              SBC (TEMP5),Y
4563  3D67- B0 B6              BCS LEFT1
4564  3D69- 49 FF              EOR =$FF
4565  3D6B- C5 9B              CMP MANT+3
4566  3D6D- 90 B1              BCC LEFT1+1
4567  3D6F- A5 9B              LDA MANT+3
4568  3D71- B0 AD              BCS LEFT1+1     ALLWAYS TAKEN
4569                   *
4570  3D73- 20 71 2B   MID1    JSR FOLLOW-2    ) MUST FOLLOW
4571  3D76- 68                 PLA
4572  3D77- 85 8B              STA PNT1
4573  3D79- 68                 PLA
4574  3D7A- 85 8C              STA PNT1+1
4575  3D7C- 68                 PLA
4576  3D7D- 68                 PLA
4577  3D7E- 68                 PLA
4578  3D7F- AA                 TAX
4579  3D80- 68                 PLA
4580  3D81- 85 86              STA TEMP5
4581  3D83- 68                 PLA
4582  3D84- 85 87              STA TEMP5+1
4583  3D86- A0 00              LDY =0
4584  3D88- 8A                 TXA
4585  3D89- D0 03              BNE *+5

----------------------------------------------------------------------

GRAPHIC BASIC - FUNCTIONS          19/11/19   R65 ASSEMBLER  PAGE 01

4586  3D8B- 4C 0F 37   QERR1   JMP QERR
4587  3D8E- E6 8B              INC PNT1        PREPARE RETURN
4588  3D90- D0 02              BNE *+4
4589  3D92- E6 8C              INC PNT1+1
4590  3D94- 6C 8B 00           JMP (PNT1)      SIMULATE RTS
4591                   *
4592                   * LEN:  BASIC FUNCTION
4593                   **********************
4594                   *
4595  3D97- 20 9F 3D   LEN     JSR LEN1
4596  3D9A- A9 00              LDA =0
4597  3D9C- 4C DD 2F           JMP INTFLP
4598                   *
4599  3D9F- 38         LEN1    SEC
4600  3DA0- 20 E9 2D           JSR TESTTP+1    ARGUMENT STRING
4601  3DA3- 20 0F 29           JSR PREPST
4602  3DA6- A2 00              LDX =0
4603  3DA8- 86 45              STX RESTYP
4604  3DAA- A8                 TAY
4605  3DAB- 60                 RTS
4606                   *
4607                   * ASC: BASIC FUNCTION
4608                   *********************
4609                   *
4610  3DAC- 20 9F 3D   ASC     JSR LEN1
4611  3DAF- F0 DA              BEQ QERR1       QUANTITY ERROR, IF 0
4612  3DB1- A0 00              LDY =0
4613  3DB3- B1 58              LDA (TEMP1),Y
4614  3DB5- A8                 TAY
4615  3DB6- 4C 9A 3D           JMP LEN+3
4616                   *
4617                   * VAL: BASIC FUNCTION
4618                   *********************
4619                   *
4620  3DB9- 20 9F 3D   VAL     JSR LEN1
4621  3DBC- D0 03              BNE *+5
4622  3DBE- 4C C9 33           JMP ADD3-7      SET RESULT TO 0
4623  3DC1- A6 A9              LDX PC
4624  3DC3- A4 AA              LDY PC+1
4625  3DC5- 86 A7              STX DYADIC+8
4626  3DC7- 84 A8              STY DYADIC+9
4627  3DC9- A6 58              LDX TEMP1
4628  3DCB- 86 A9              STX PC
4629  3DCD- 18                 CLC
4630  3DCE- 65 58              ADC TEMP1
4631  3DD0- 85 5A              STA TEMP8
4632  3DD2- A6 59              LDX TEMP1+1
4633  3DD4- 86 AA              STX PC+1
4634  3DD6- 90 01              BCC *+3
4635  3DD8- E8                 INX

----------------------------------------------------------------------

GRAPHIC BASIC - FUNCTIONS          19/11/19   R65 ASSEMBLER  PAGE 02

4636  3DD9- 86 5B              STX TEMP8+1
4637  3DDB- A0 00              LDY =0
4638  3DDD- B1 5A              LDA (TEMP8),Y
4639  3DDF- 48                 PHA
4640  3DE0- A9 00              LDA =0
4641  3DE2- 91 5A              STA (TEMP8),Y
4642  3DE4- 20 13 27           JSR FETCH1
4643  3DE7- 20 9D 35           JSR NUMBER
4644  3DEA- 68                 PLA
4645  3DEB- A0 00              LDY =0
4646  3DED- 91 5A              STA (TEMP8),Y   RESTORE END MARK
4647  3DEF- 4C 61 2F           JMP UPDPC
4648                   *
4649                   * PEEK: BASIC FUNCTION
4650                   **********************
4651                   *
4652  3DF2- 20 FF 3D   PEEK    JSR PEEK1
4653  3DF5- A0 00              LDY =0
4654  3DF7- B1 05              LDA (INTEG),Y
4655  3DF9- A8                 TAY
4656  3DFA- A9 00              LDA =0
4657  3DFC- 4C DD 2F           JMP INTFLP
4658                   *
4659  3DFF- A5 9C     PEEK1   LDA SIGN
4660  3E01- 30 88              BMI QERR1
4661  3E03- A5 97              LDA EXP
4662  3E05- C9 91              CMP =$91
4663  3E07- B0 82              BCS QERR1
4664  3E09- 20 2B 37           JSR FLPIN1
4665  3E0C- A5 9B              LDA MANT+3
4666  3E0E- A4 9A              LDY MANT+2
4667  3E10- 84 06              STY INTEG+1
4668  3E12- 85 05              STA INTEG
4669  3E14- 60                 RTS
4670                   *
4671                   * POKE: STATEMENT ROUTINE
4672                   *************************
4673                   *
4674  3E15- 20 1E 3E   POKE    JSR POKE1
4675  3E18- 8A                 TXA
4676  3E19- A0 00              LDY =0
4677  3E1B- 91 05              STA (INTEG),Y
4678  3E1D- 60                 RTS
4679                   *
4680  3E1E- 20 F7 2D   POKE1   JSR EXPRES
4681  3E21- 20 E8 2D           JSR TESTTP
4682  3E24- 20 FF 3D           JSR PEEK1
4683  3E27- A9 2C              LDA =','
4684  3E29- 20 73 2B           JSR FOLLOW
4685  3E2C- 4C FD 36           JMP NUMEXP+3

----------------------------------------------------------------------

GRAPHIC BASIC - FUNCTIONS          19/11/19   R65 ASSEMBLER  PAGE 03

4686                   *
4687                   * ABS: BASIC FUNCTION
4688                   *********************
4689                   *
4690  3E2F- 46 9C      ABS     LSR SIGN
4691  3E31- 60                 RTS
4692                   *
4693                   * INT: BASIC FUNCTION
4694                   *********************
4695                   *
4696  3E32- A5 97      INT     LDA EXP
4697  3E34- C9 A0              CMP =$A0
4698  3E36- B0 F9              BCS *-5         RTS, IF >1E9
4699  3E38- 20 2B 37           JSR FLPIN1
4700  3E3B- 84 A6              STY DYADIC+7
4701  3E3D- A5 9C              LDA SIGN
4702  3E3F- 84 9C              STY SIGN
4703  3E41- 49 80              EOR =$80
4704  3E43- 2A                 ROL A
4705  3E44- A9 A0              LDA =$A0
4706  3E46- 85 97              STA EXP
4707  3E48- A5 9B              LDA MANT+3
4708  3E4A- 85 41              STA CHRSAV
4709  3E4C- 4C A4 33           JMP NORMAL
4710                   *
4711                   * SYS: STATEMENT ROUTINE
4712                   ************************
4713                   *
4714  3E4F- 20 F7 2D   SYS     JSR EXPRES
4715  3E52- 20 E8 2D           JSR TESTTP
4716  3E55- 20 FF 3D           JSR PEEK1
4717  3E58- 6C 05 00           JMP (INTEG)
4718                   *
4719                   * LOG: BASIC FUNCTION
4720                   *********************
4721                   *
4722  3E5B- 20 2F 35   LOG     JSR SGN1
4723  3E5E- F0 02              BEQ *+4
4724  3E60- 10 03              BPL *+5
4725  3E62- 4C 0F 37           JMP QERR        QUANTITY ERROR
4726  3E65- A5 97              LDA EXP
4727  3E67- E9 7F              SBC =127
4728  3E69- 48                 PHA
4729  3E6A- A9 80              LDA =128
4730  3E6C- 85 97              STA EXP
4731  3E6E- A9 B6              LDA =<LOG2
4732  3E70- A0 3E              LDY =>LOG2
4733  3E72- 20 38 33           JSR ADD-3
4734  3E75- A9 BB              LDA =<(LOG2+5)
4735  3E77- A0 3E              LDY =>(LOG2+5)

----------------------------------------------------------------------

GRAPHIC BASIC - FUNCTIONS          19/11/19   R65 ASSEMBLER  PAGE 04

4736  3E79- 20 CE 37           JSR DIVIDE-3
4737  3E7C- A9 9C              LDA =<LOG1
4738  3E7E- A0 3E              LDY =>LOG1
4739  3E80- 20 1A 33           JSR SUBTR-3
4740  3E83- A9 A1              LDA =<(LOG1+5)
4741  3E85- A0 3E              LDY =>(LOG1+5)
4742  3E87- 20 64 3F           JSR ITERAT
4743  3E8A- A9 C0              LDA =<(LOG2+10)
4744  3E8C- A0 3E              LDY =>(LOG2+10)
4745  3E8E- 20 38 33           JSR ADD-3
4746  3E91- 68                 PLA
4747  3E92- 20 3A 36           JSR NUMB6
4748  3E95- A9 C5              LDA =<(LOG2+15)
4749  3E97- A0 3E              LDY =>(LOG2+15)
4750  3E99- 4C 89 38           JMP MULT-3
4751                   *
4752  3E9C- 81 00 00   LOG1    BYT $81,0,0,0,0
4752  3E9F- 00 00 
4753  3EA1- 03                 BYT 3
4754  3EA2- 7F 5E 56           BYT $7F,$5E,$56,$CB,$79
4754  3EA5- CB 79 
4755  3EA7- 80 13 9B           BYT $80,$13,$9B,$0B,$64
4755  3EAA- 0B 64 
4756  3EAC- 80 76 38           BYT $80,$76,$38,$93,$16
4756  3EAF- 93 16 
4757  3EB1- 82 38 AA           BYT $82,$38,$AA,$3B,$20
4757  3EB4- 3B 20 
4758  3EB6- 80 35 04   LOG2    BYT $80,$35,$04,$F3,$34
4758  3EB9- F3 34 
4759  3EBB- 81 35 04           BYT $81,$35,$04,$F3,$34
4759  3EBE- F3 34 
4760  3EC0- 80 80 00           BYT $80,$80,$00,$00,$00
4760  3EC3- 00 00 
4761  3EC5- 80 31 72           BYT $80,$31,$72,$17,$F8
4761  3EC8- 17 F8 
4762                   *
4763                   * SQR: BASIC FUNCTION
4764                   *********************
4765                   *
4766  3ECA- 20 20 35   SQR     JSR TRANS2
4767  3ECD- A9 7E              LDA =<OUTCT2    0.5
4768  3ECF- A0 36              LDY =>OUTCT2
4769  3ED1- 20 AF 34           JSR GETFLP
4770                   *
4771                   * POWER: MATH OPERATION
4772                   ***********************
4773                   *
4774  3ED4- F0 3B      POWER   BEQ EXPF
4775  3ED6- A5 9F              LDA DYADIC
4776  3ED8- D0 03              BNE *+5

----------------------------------------------------------------------

GRAPHIC BASIC - FUNCTIONS          19/11/19   R65 ASSEMBLER  PAGE 05

4777  3EDA- 4C CB 33           JMP ADD3-5
4778  3EDD- A2 84              LDX =<TEMP6
4779  3EDF- A0 00              LDY =>TEMP6
4780  3EE1- 20 D8 34           JSR SAVFLP+4
4781  3EE4- A5 A4              LDA DYADIC+5
4782  3EE6- 10 0F              BPL *+17
4783  3EE8- 20 32 3E           JSR INT
4784  3EEB- A9 84              LDA =<TEMP6
4785  3EED- A0 00              LDY =>TEMP6
4786  3EEF- 20 5C 35           JSR COMPAR
4787  3EF2- D0 03              BNE *+5
4788  3EF4- 98                 TYA
4789  3EF5- A4 41              LDY CHRSAV
4790  3EF7- 20 12 35           JSR TRANS1+2
4791  3EFA- 98                 TYA
4792  3EFB- 48                 PHA
4793  3EFC- 20 5B 3E           JSR LOG
4794  3EFF- A9 84             LDA =<TEMP6
4795  3F01- A0 00              LDY =>TEMP6
4796  3F03- 20 89 38           JSR MULT-3
4797  3F06- 20 11 3F           JSR EXPF
4798  3F09- 68                 PLA
4799  3F0A- 4A                 LSR A
4800  3F0B- B0 01              BCS *+3
4801  3F0D- 60                 RTS
4802  3F0E- 4C BF 36           JMP NEGATE
4803                   *
4804                   * EXP: BASIC FUNCTION
4805                   *********************
4806                   *
4807  3F11- A9 B6      EXPF    LDA =<EXP1
4808  3F13- A0 3F              LDY =>EXP1
4809  3F15- 20 89 38           JSR MULT-3
4810  3F18- A5 A6              LDA DYADIC+7
4811  3F1A- 69 50              ADC =80
4812  3F1C- 90 03              BCC *+5
4813  3F1E- 20 08 35           JSR ROUND+8
4814  3F21- 85 8C              STA PNT1+1
4815  3F23- 20 23 35           JSR TRANS2+3
4816  3F26- A5 97              LDA EXP
4817  3F28- C9 88              CMP =136
4818  3F2A- 90 03              BCC *+5
4819  3F2C- 20 7A 38           JSR MULEX1-6
4820  3F2F- 20 32 3E           JSR INT
4821  3F32- A5 41              LDA CHRSAV
4822  3F34- 18                 CLC
4823  3F35- 69 81              ADC =129
4824  3F37- F0 F3              BEQ *-11
4825  3F39- 38                 SEC
4826  3F3A- E9 01              SBC =1

----------------------------------------------------------------------

GRAPHIC BASIC - FUNCTIONS          19/11/19   R65 ASSEMBLER  PAGE 06

4827  3F3C- 48                 PHA
4828  3F3D- A2 05              LDX =5
4829  3F3F- B5 9F              LDA DYADIC,X
4830  3F41- B4 97              LDY EXP,X
4831  3F43- 95 97              STA EXP,X
4832  3F45- 94 9F              STY DYADIC,X
4833  3F47- CA                 DEX
4834  3F48- 10 F5              BPL *-9
4835  3F4A- A5 8C              LDA PNT1+1
4836  3F4C- 85 A6              STA DYADIC+7
4837  3F4E- 20 1D 33           JSR SUBTR
4838  3F51- 20 BF 36           JSR NEGATE
4839  3F54- A9 BB              LDA =<(EXP1+5)
4840  3F56- A0 3F              LDY =>(EXP1+5)
4841  3F58- 20 7E 3F           JSR ITERA1
4842  3F5B- A9 00              LDA =0
4843  3F5D- 85 A5              STA DYADIC+6
4844  3F5F- 68                 PLA
4845  3F60- 20 5E 38           JSR MULEXP+2
4846  3F63- 60                 RTS
4847                   *
4848                   * ITERAT: FUNCTION ITERATION
4849                   ****************************
4850                   *
4851  3F64- 85 A7      ITERAT  STA DYADIC+8
4852  3F66- 84 A8              STY DYADIC+9
4853  3F68- A2 8D              LDX =<(ENDB-1)
4854  3F6A- A0 00              LDY =0
4855  3F6C- 20 D8 34           JSR SAVFLP+4
4856  3F6F- A9 8D              LDA =<(ENDB-1)
4857  3F71- 20 89 38           JSR MULT-3
4858  3F74- 20 82 3F           JSR ITERA1+4
4859  3F77- A9 8D              LDA =<(ENDB-1)
4860  3F79- A0 00              LDY =0
4861  3F7B- 4C 89 38           JMP MULT-3
4862                   *
4863  3F7E- 85 A7      ITERA1  STA DYADIC+8
4864  3F80- 84 A8              STY DYADIC+9
4865  3F82- A2 92              LDX =<(POINTC-1)
4866  3F84- A0 00              LDY =0
4867  3F86- 20 D8 34           JSR SAVFLP+4
4868  3F89- B1 A7              LDA (DYADIC+8),Y
4869  3F8B- 85 9D              STA CURRSG
4870  3F8D- A4 A7              LDY DYADIC+8
4871  3F8F- C8                 INY
4872  3F90- 98                 TYA
4873  3F91- D0 02              BNE *+4
4874  3F93- E6 A8              INC DYADIC+9
4875  3F95- 85 A7              STA DYADIC+8
4876  3F97- A4 A8              LDY DYADIC+9

----------------------------------------------------------------------

GRAPHIC BASIC - FUNCTIONS          19/11/19   R65 ASSEMBLER  PAGE 07

4877  3F99- 20 89 38   ITERA2  JSR MULT-3
4878  3F9C- A5 A7              LDA DYADIC+8
4879  3F9E- A4 A8              LDY DYADIC+9
4880  3FA0- 18                 CLC
4881  3FA1- 69 05              ADC =5
4882  3FA3- 90 01              BCC *+3
4883  3FA5- C8                 INY
4884  3FA6- 85 A7              STA DYADIC+8
4885  3FA8- 84 A8              STY DYADIC+9
4886  3FAA- 20 38 33           JSR ADD-3
4887  3FAD- A9 92              LDA =(POINTC-1)
4888  3FAF- A0 00              LDY =0
4889  3FB1- C6 9D              DEC CURRSG
4890  3FB3- D0 E4              BNE ITERA2
4891  3FB5- 60                 RTS
4892                   *
4893  3FB6- 81 38 AA   EXP1    BYT $81,$38,$AA,$3B,$29
4893  3FB9- 3B 29 
4894  3FBB- 07                 BYT $07
4895  3FBC- 71 34 58           BYT $71,$34,$58,$3F,$56
4895  3FBF- 3F 56 
4896  3FC1- 74 16 7E           BYT $74,$16,$7E,$B3,$1B
4896  3FC4- B3 1B 
4897  3FC6- 77 2F EE           BYT $77,$2F,$EE,$E3,$85
4897  3FC9- E3 85 
4898  3FCB- 7A 1D 84           BYT $7A,$1D,$84,$1C,$2A
4898  3FCE- 1C 2A 
4899  3FD0- 7C 63 59           BYT $7C,$63,$59,$58,$0A
4899  3FD3- 58 0A 
4900  3FD5- 7E 75 FD           BYT $7E,$75,$FD,$E7,$C6
4900  3FD8- E7 C6 
4901  3FDA- 80 31 72           BYT $80,$31,$72,$18,$10
4901  3FDD- 18 10 
4902  3FDF- 81 00 00           BYT $81,$00,$00,$00,$00
4902  3FE2- 00 00 
4903                   *
4904                   * RND: BASIC FUNCTION
4905                   *********************
4906                   *
4907  3FE4- 20 2F 35   RND     JSR SGN1
4908  3FE7- 30 17              BMI RND2
4909  3FE9- F0 41              BEQ RND1
4910                   *
4911  3FEB- A9 D1              LDA =<RNDVAL
4912  3FED- A0 00              LDY =>RNDVAL
4913  3FEF- 20 89 38           JSR MULT-3
4914  3FF2- A9 33              LDA =<RND3
4915  3FF4- A0 40              LDY =>RND3
4916  3FF6- 20 89 38           JSR MULT-3
4917  3FF9- A9 37              LDA =<(RND3+4)

----------------------------------------------------------------------

GRAPHIC BASIC - FUNCTIONS          19/11/19   R65 ASSEMBLER  PAGE 08

4918  3FFB- A0 40              LDY =>(RND3+4)
4919  3FFD- 20 38 33          JSR ADD-3
4920  4000- A5 9B      RND2    LDA MANT+3
4921  4002- A6 98              LDX MANT
4922  4004- 6D 06 17           ADC $1706       ADD REAL RANDOM
4923  4007- 86 9B              STX MANT+3
4924  4009- 85 98              STA MANT
4925  400B- A6 99              LDX MANT+1
4926  400D- A5 9A              LDA MANT+2
4927  400F- 6D 06 17           ADC $1706       ADD REAL RANDOOM
4928  4012- 85 99              STA MANT+1
4929  4014- 86 9A              STX MANT+2
4930  4016- A9 00              LDA =0
4931  4018- 85 9C              STA SIGN
4932  401A- A5 97              LDA EXP
4933  401C- 85 A6              STA DYADIC+7
4934  401E- A9 80              LDA =128
4935  4020- 85 97              STA EXP
4936  4022- 20 A9 33           JSR NORMAL+5
4937  4025- A2 D1              LDX =<RNDVAL
4938  4027- A0 00              LDY =>RNDVAL
4939  4029- 4C D8 34           JMP SAVFLP+4
4940                   *
4941  402C- A9 D1      RND1    LDA =<RNDVAL
4942  402E- A0 00              LDY =>RNDVAL
4943  4030- 4C AF 34           JMP GETFLP
4944                   *
4945  4033- 98 35 44   RND3    BYT $98,$35,$44,$7A
4945  4036- 7A 
4946  4037- 68 28 B1           BYT $68,$28,$B1,$46
4946  403A- 46 
4947                   *
4948                   * COS: BASIC FUNCTION
4949                   *********************
4950                   *
4951  403B- A9 8F      COS     LDA =<SIN1
4952  403D- A0 40              LDY =>SIN1
4953  403F- 20 38 33           JSR ADD-3
4954                   *
4955                   * SIN: BASIC FUNCTION
4956                   *********************
4957                   *
4958  4042- 20 20 35   SIN     JSR TRANS2
4959  4045- A9 94              LDA =<(SIN1+5)
4960  4047- A0 40              LDY =>(SIN1+5)
4961  4049- A6 A4              LDX DYADIC+5
4962  404B- 20 F2 36           JSR DIVTEN+9
4963  404E- 20 20 35           JSR TRANS2
4964  4051- 20 32 3E           JSR INT
4965  4054- A9 00              LDA =0

----------------------------------------------------------------------

GRAPHIC BASIC - FUNCTIONS          19/11/19   R65 ASSEMBLER  PAGE 09

4966  4056- 85 A5              STA DYADIC+6
4967  4058- 20 1D 33           JSR SUBTR
4968  405B- A9 99              LDA =<(SIN1+10)
4969  405D- A0 40              LDY =>(SIN1+10)
4970  405F- 20 1A 33           JSR SUBTR-3
4971  4062- A5 9C              LDA SIGN
4972  4064- 48                 PHA
4973  4065- 10 11              BPL SIN0
4974  4067- A9 7E              LDA =<OUTCT2
4975  4069- A0 36              LDY =>OUTCT2
4976  406B- 20 38 33           JSR ADD-3
4977  406E- A5 9C              LDA SIGN
4978  4070- 30 09              BMI SIN0+3
4979  4072- A5 4A              LDA READFL+1
4980  4074- 49 FF              EOR =$FF
4981  4076- 85 4A              STA READFL+1
4982  4078- 20 BF 36   SIN0    JSR NEGATE
4983  407B- A9 99              LDA =<(SIN1+10)
4984  407D- A0 40              LDY =>(SIN1+10)
4985  407F- 20 38 33           JSR ADD-3
4986  4082- 68                 PLA
4987  4083- 10 03              BPL *+5
4988  4085- 20 BF 36           JSR NEGATE
4989  4088- A9 9E              LDA =<(SIN1+15)
4990  408A- A0 40              LDY =>(SIN1+15)
4991  408C- 4C 64 3F           JMP ITERAT
4992                   *
4993  408F- 81 49 0F   SIN1    BYT $81,$49,$0F,$DA,$A2
4993  4092- DA A2 
4994  4094- 83 49 0F           BYT $83,$49,$0F,$DA,$A2
4994  4097- DA A2 
4995  4099- 7F 00 00           BYT $7F,$00,$00,$00,$00
4995  409C- 00 00 
4996  409E- 05                 BYT 05
4997  409F- 84 E6 1A           BYT $84,$E6,$1A,$2D,$1B
4997  40A2- 2D 1B 
4998  40A4- 86 28 07           BYT $86,$28,$07,$FB,$F8
4998  40A7- FB F8 
4999  40A9- 87 99 68           BYT $87,$99,$68,$89,$01
4999  40AC- 89 01 
5000  40AE- 87 23 35           BYT $87,$23,$35,$DF,$E1
5000  40B1- DF E1 
5001  40B3- 86 A5 5D           BYT $86,$A5,$5D,$E7,$28
5001  40B6- E7 28 
5002  40B8- 83 49 0F           BYT $83,$49,$0F,$DA,$A2
5002  40BB- DA A2 
5003                   *
5004                   * TAN: BASIC FUNCTION
5005                   *********************
5006                   *

----------------------------------------------------------------------

GRAPHIC BASIC - FUNCTIONS          19/11/19   R65 ASSEMBLER  PAGE 10

5007  40BD- A2 8D      TAN     LDX =<(ENDB-1)
5008  40BF- A0 00              LDY =0
5009  40C1- 20 D8 34           JSR SAVFLP+4
5010  40C4- A9 00              LDA =0
5011  40C6- 85 4A              STA READFL+1
5012  40C8- 20 42 40           JSR SIN
5013  40CB- A2 84              LDX =<TEMP6
5014  40CD- A0 00              LDY =0
5015  40CF- 20 D8 34           JSR SAVFLP+4
5016  40D2- A9 8D              LDA =<(ENDB-1)
5017  40D4- A0 00              LDY =0
5018  40D6- 20 AF 34           JSR GETFLP
5019  40D9- A9 00              LDA =0
5020  40DB- 85 9C              STA SIGN
5021  40DD- A5 4A              LDA READFL+1
5022                    * BASIC6:A ORIGINAL 7/1/1982, RECOVERED 3/2018
5023  40DF- 20 E9 40           JSR TAN1
5024  40E2- A9 84              LDA =<TEMP6
5025  40E4- A0 00              LDY =0
5026  40E6- 4C CE 37           JMP DIVIDE-3
5027  40E9- 48         TAN1    PHA
5028  40EA- 4C 78 40           JMP SIN0
5029                   *
5030                   * ATN: BASIC FUNCTION
5031                   *********************
5032                   *
5033  40ED- A5 9C      ATN     LDA SIGN
5034  40EF- 48                 PHA
5035  40F0- 10 03              BPL *+5
5036  40F2- 20 BF 36           JSR NEGATE
5037  40F5- A5 97              LDA EXP
5038  40F7- 48                 PHA
5039  40F8- C9 81              CMP =$81
5040  40FA- 90 07              BCC *+9
5041  40FC- A9 9C              LDA =<LOG1
5042  40FE- A0 3E             LDY =>LOG1
5043  4100- 20 CE 37           JSR DIVIDE-3
5044  4103- A9 1D              LDA =<ATN1
5045  4105- A0 41              LDY =>ATN1
5046  4107- 20 64 3F           JSR ITERAT
5047  410A- 68                 PLA
5048  410B- C9 81              CMP =129
5049  410D- 90 07              BCC *+9
5050  410F- A9 8F              LDA =<SIN1
5051  4111- A0 40              LDY =>SIN1
5052  4113- 20 1A 33           JSR SUBTR-3
5053  4116- 68                 PLA
5054  4117- 10 03              BPL *+5
5055  4119- 4C BF 36           JMP NEGATE
5056  411C- 60                 RTS

----------------------------------------------------------------------

GRAPHIC BASIC - FUNCTIONS          19/11/19   R65 ASSEMBLER  PAGE 11

5057                   *
5058  411D- 0B         ATN1    BYT $0B
5059  411E- 76 B3 83           BYT $76,$B3,$83,$BD,$D3
5059  4121- BD D3 
5060  4123- 79 E1 F4           BYT $79,$E1,$F4,$A6,$F5
5060  4126- A6 F5 
5061  4128- 7B 83 FC           BYT $7B,$83,$FC,$B0,$10
5061  412B- B0 10 
5062  412D- 7C 0C 1F           BYT $7C,$0C,$1F,$67,$CA
5062  4130- 67 CA 
5063  4132- 7C DE 53           BYT $7C,$DE,$53,$CB,$C1
5063  4135- CB C1 
5064  4137- 7D 14 64           BYT $7D,$14,$64,$70,$4C
5064  413A- 70 4C 
5065  413C- 7D B7 EA           BYT $7D,$B7,$EA,$51,$7A
5065  413F- 51 7A 
5066  4141- 7D 63 30           BYT $7D,$63,$30,$88,$7E
5066  4144- 88 7E 
5067  4146- 7E 92 44           BYT $7E,$92,$44,$99,$3A
5067  4149- 99 3A 
5068  414B- 7E 4C CC           BYT $7E,$4C,$CC,$91,$C7
5068  414E- 91 C7 
5069  4150- 7F AA AA           BYT $7F,$AA,$AA,$AA,$13
5069  4153- AA 13 
5070  4155- 81 00 00           BYT $81,$00,$00,$00,$00
5070  4158- 00 00 
5071                   *
5072                   * USR: BASIC FUNCTION
5073                   *********************
5074                   *
5075  415A- 6C 05 00   USR     JMP (INTEG)
5076                   *
5077                           TIT GRAPHIC BASIC - STATEMENTS
5078                   *
5079                   * STORE: STATEMENT ROUTINE
5080                   **************************
5081                   *
5082  415D- 20 94 41   STORE   JSR GETBFN      GET FILE NAME, DRIVE
5083  4160- A5 61              LDA STPROG
5084  4162- A6 62              LDX STPROG+1
5085  4164- 8D 1A 03           STA FILSA
5086  4167- 8E 1B 03           STX FILSA+1
5087  416A- A5 63              LDA STVAR
5088  416C- A6 64              LDX STVAR+1
5089  416E- 8D 1C 03           STA FILEA
5090  4171- 8E 1D 03           STX FILEA+1
5091  4174- 20 10 47           JSR GETBCD
5092  4177- 8D 13 03           STA FILLOC
5093  417A- 8C 14 03           STY FILLOC+1
5094  417D- A9 42              LDA ='B'

----------------------------------------------------------------------

GRAPHIC BASIC - STATEMENTS         19/11/19   R65 ASSEMBLER  PAGE 12

5095  417F- 8D 12 03           STA FILSTP
5096  4182- A9 00              LDA =0
5097  4184- 85 DA              STA FILFLG
5098  4186- 20 13 27           JSR FETCH1
5099  4189- D0 4E              BNE SYNER2      NOT END OF LINE
5100  418B- 20 1B E8           JSR WRFILE
5101  418E- F0 03              BEQ *+5
5102  4190- 4C FF 44   FILERR1 JMP FILERR
5103  4193- 60                 RTS
5104                   *
5105  4194- 20 13 27   GETBFN  JSR FETCH1
5106  4197- F0 40              BEQ SYNER2      END OF LINE
5107  4199- 20 F7 2D   GETBF1  JSR EXPRES
5108  419C- 38                 SEC
5109  419D- 20 E9 2D           JSR TESTTP+1    MUST BE STRING
5110  41A0- 20 0F 29           JSR PREPST      A=SIZE, TEMP1=START
5111                   *
5112  41A3- 85 7F              STA TEMP3
5113  41A5- A8                 TAY
5114  41A6- F0 40              BEQ GETBF5
5115  41A8- A0 00              LDY =0
5116  41AA- 8C 11 03           STY FILCYC
5117  41AD- 8C 30 03           STY FILCY1
5118  41B0- B1 58      GETBF2  LDA (TEMP1),Y
5119  41B2- C4 7F              CPY TEMP3
5120  41B4- 90 02              BCC *+4         IF STRING TOO SHORT
5121  41B6- A9 20              LDA =$20
5122  41B8- 99 01 03           STA FILNAM,Y
5123  41BB- 99 20 03           STA FILNM1,Y
5124  41BE- C8                 INY
5125  41BF- C0 10              CPY =$10
5126  41C1- 90 ED              BCC GETBF2
5127  41C3- 20 13 27           JSR FETCH1
5128  41C6- C9 2E              CMP ='.'
5129  41C8- D0 09              BNE GETBF3
5130  41CA- 20 FA 36           JSR NUMEXP      GET EXTENSION
5131  41CD- 8E 11 03           STX FILCYC
5132  41D0- 8E 30 03           STX FILCY1
5133  41D3- 20 5B 42   GETBF3  JSR DEFARG2
5134  41D6- 85 DC              STA FILDRV
5135  41D8- 60                 RTS
5136                   *
5137  41D9- 4C C4 26   SYNER2  JMP SYNERR      SYNTAX ERROR
5138                   *
5139  41DC- 20 13 27   GETBF4  JSR FETCH1      DEFAULT NO NAME
5140  41DF- F0 07              BEQ GETBF5
5141  41E1- C9 2C              CMP =','
5142  41E3- F0 03              BEQ GETBF5
5143  41E5- 4C 99 41           JMP GETBF1
5144                   *

----------------------------------------------------------------------

GRAPHIC BASIC - STATEMENTS         19/11/19   R65 ASSEMBLER  PAGE 13

5145  41E8- A9 00      GETBF5  LDA =0
5146  41EA- 8D 01 03           STA FILNAM
5147  41ED- 8D 20 03           STA FILNM1
5148  41F0- 4C D3 41           JMP GETBF3
5149                   *
5150                   * LOAD: STATEMENT ROUTINE
5151                   *************************
5152                   *
5153  41F3- 20 F9 41   LOAD    JSR LOAD9
5154  41F6- 4C 7B 23           JMP WARMST
5155                   *
5156  41F9- 20 DC 41   LOAD9   JSR GETBF4
5157                   *
5158  41FC- A5 61      LOAD1   LDA STPROG
5159  41FE- A6 62             LDX STPROG+1
5160  4200- 8D 31 03           STA FILSA1
5161  4203- 8E 32 03           STX FILSA1+1
5162  4206- A9 00              LDA =0
5163  4208- 85 DA              STA FILFLG
5164  420A- 20 15 E8           JSR RDFILE
5165  420D- D0 81              BNE FILERR1
5166  420F- AD 12 03           LDA FILSTP
5167  4212- C9 42              CMP ='B'
5168  4214- F0 05              BEQ *+7
5169  4216- A2 1D              LDX =29
5170  4218- 4C 0E 45           JMP FERROR
5171  421B- AD 1C 03           LDA FILEA
5172  421E- AE 1D 03           LDX FILEA+1
5173  4221- 85 63              STA STVAR
5174  4223- 86 64              STX STVAR+1
5175  4225- 20 95 24           JSR CRLF
5176  4228- 20 43 24           JSR ADLNP0
5177  422B- A5 58              LDA TEMP1
5178  422D- A6 59              LDX TEMP1+1
5179  422F- 18                 CLC
5180  4230- 69 03              ADC =3
5181  4232- 90 01              BCC *+3
5182  4234- E8                 INX
5183  4235- 85 63              STA STVAR
5184  4237- 86 64              STX STVAR+1
5185  4239- 4C A0 25           JMP CLR1-3
5186                   *
5187                   * DEFARG: GET ARGUMENT OR DEFAULT=0
5188                   ***********************************
5189                   * OUTPUT IS IN A,Y AND INTEG
5190                   * DEFARG GETS 16 BIT INTEGER
5191                   * DEFARG2 GETS 8 BIT INTEGER
5192                   *
5193  423C- 20 13 27   DEFARG  JSR FETCH1
5194  423F- C9 2C              CMP =','

----------------------------------------------------------------------

GRAPHIC BASIC - STATEMENTS         19/11/19   R65 ASSEMBLER  PAGE 14

5195  4241- D0 10              BNE DEFARG1
5196  4243- 20 0D 27           JSR FETCH
5197  4246- C9 2C              CMP =','
5198  4248- F0 09              BEQ DEFARG1
5199  424A- 20 F7 2D           JSR EXPRES
5200  424D- 20 E8 2D           JSR TESTTP
5201  4250- 4C FF 3D           JMP PEEK1
5202                   *
5203  4253- A9 00      DEFARG1 LDA =0
5204  4255- A8                 TAY
5205  4256- 85 05              STA INTEG
5206  4258- 84 06              STY INTEG+1
5207  425A- 60                 RTS
5208                   *
5209  425B- 20 3C 42   DEFARG2 JSR DEFARG
5210  425E- C0 00              CPY =0
5211  4260- F0 03              BEQ *+5
5212  4262- 4C 0F 37           JMP QERR
5213  4265- 60                 RTS
5214                   *
5215                   *
5216                   * SETDEV: SET OUTPUT DEVICE
5217                   ***************************
5218                   *
5219  4266- 20 FA 36   SETDEV  JSR NUMEXP
5220  4269- E0 03              CPX =3
5221  426B- D0 06              BNE SETDV0
5222  426D- 20 66 43           JSR PLMD
5223  4270- A2 03              LDX =3
5224  4272- 18                 CLC
5225  4273- B0 1F      SETDV0  BCS SETDV2
5226  4275- A9 3B              LDA =';'
5227  4277- 20 73 2B           JSR FOLLOW
5228  427A- A5 02              LDA POS
5229  427C- 85 BB              STA POSTB
5230  427E- BD C6 42   SETDV1  LDA DEVTB,X
5231  4281- 85 B9              STA PVECT
5232  4283- BD CA 42           LDA DEVTB+4,X
5233  4286- 85 BA              STA PVECT+1
5234  4288- 86 00              STX OUTDEV
5235  428A- BD CE 42           LDA DEVTB+8,X
5236  428D- 85 01              STA NUMPAD
5237  428F- B5 BB              LDA POSTB,X
5238  4291- 85 02              STA POS
5239  4293- 60                 RTS
5240                   *
5241                   * SET FILE OUTPUT
5242                   *****************
5243                   *
5244  4294- 86 00      SETDV2  STX OUTDEV

----------------------------------------------------------------------

GRAPHIC BASIC - STATEMENTS         19/11/19   R65 ASSEMBLER  PAGE 15

5245  4296- A9 3B              LDA =';'
5246  4298- 20 73 2B           JSR FOLLOW
5247  429B- A5 02              LDA POS
5248  429D- 85 BB              STA POSTB
5249  429F- A9 7F              LDA =<OUTFIL
5250  42A1- 85 B9              STA PVECT
5251  42A3- A9 45              LDA =>OUTFIL
5252  42A5- 85 BA              STA PVECT+1
5253  42A7- A9 00              LDA =0
5254  42A9- 85 01              STA NUMPAD
5255  42AB- 85 02              STA POS
5256  42AD- 4C 76 45           JMP SETDV3
5257                   *
5258                   * RSTDEV: RESET OUTPUT DEVICE
5259                   *****************************
5260                   *
5261  42B0- 8A         RSTDEV  TXA
5262  42B1- 48                 PHA
5263  42B2- A6 00              LDX OUTDEV
5264  42B4- E0 04              CPX =4          SKIP, IF FILE
5265  42B6- B0 04              BCS *+6
5266  42B8- A5 02              LDA POS
5267  42BA- 95 BB              STA POSTB,X
5268  42BC- A2 00              LDX =0
5269  42BE- 86 AB              STX PLMODE
5270  42C0- 20 7E 42           JSR SETDV1
5271  42C3- 68                 PLA
5272  42C4- AA                 TAX
5273  42C5- 60                 RTS
5274                   *
5275                   *
5276  42C6- 09 36 A0   DEVTB   BYT <PRTCHR,<PRTRSA,<PRTTTY,<CHAR
5276  42C9- 7A 
5277  42CA- E0 E8 1E           BYT >PRTCHR,>PRTRSA,>PRTTTY,>CHAR
5277  42CD- 43 
5278  42CE- 00 00 02           BYT 0,0,2,0
5278  42D1- 00 
5279                   *
5280                   * PLOT
5281                   ******
5282                   *
5283  42D2- C9 A2      PLOT    CMP =$A2        PLOT NEW
5284  42D4- D0 0A              BNE PLOT0
5285  42D6- A9 00              LDA =0
5286  42D8- 85 AB              STA PLMODE
5287  42DA- 20 D3 4C           JSR INITP
5288  42DD- 4C 11 43           JMP PLOT3+4
5289                   *
5290  42E0- C9 9C      PLOT0   CMP =$9C        PLOT CLEAR
5291  42E2- D0 06              BNE PLOT1

----------------------------------------------------------------------

GRAPHIC BASIC - STATEMENTS         19/11/19   R65 ASSEMBLER  PAGE 16

5292  42E4- 20 DE 4C           JSR CLEARP
5293  42E7- 4C 0D 27           JMP FETCH
5294                   *
5295  42EA- C9 84      PLOT1   CMP =$84        PLOT END
5296  42EC- D0 18              BNE PLOT2
5297  42EE- AD 80 17           LDA VFLAG
5298  42F1- 29 DF              AND =$DF
5299  42F3- 8D 80 17           STA VFLAG
5300  42F6- A9 29              LDA =$29
5301  42F8- 8D 89 17           STA NUMLIN
5302  42FB- 20 15 E0           JSR ICRTAL
5303  42FE- A9 11             LDA =$11        CLEAR DISPLAY
5304  4300- 20 09 E0           JSR PRTCHR
5305  4303- 4C 0D 27           JMP FETCH
5306                   *
5307  4306- C9 90      PLOT2   CMP =$90        PLOT STOP
5308  4308- D0 03              BNE PLOT3
5309  430A- 4C FB 42           JMP PLOT2-11
5310                   *
5311  430D- C9 9A      PLOT3   CMP =$9A        PLOT CONT
5312  430F- D0 06              BNE PLOT4
5313  4311- 20 18 E0           JSR ICRTGR
5314  4314- 4C 0D 27           JMP FETCH
5315                   *
5316  4317- 20 36 43   PLOT4   JSR PLOTAR      PLOT X,Y
5317  431A- 20 16 4D           JSR PLOTP
5318  431D- A9 00      PLOTE   LDA =0
5319  431F- 85 AB              STA PLMODE
5320  4321- 4C 13 27           JMP FETCH1
5321                   *
5322                   * MOVE:
5323                   *******
5324                   *
5325  4324- 20 36 43   MOVE    JSR PLOTAR
5326  4327- 20 01 4D           JSR MOVEP
5327  432A- 4C 1D 43           JMP PLOTE
5328                   *
5329                   * DRAW:
5330                   *******
5331                   *
5332  432D- 20 36 43   DRAW    JSR PLOTAR
5333  4330- 20 27 4D           JSR DRAWP
5334  4333- 4C 1D 43           JMP PLOTE
5335                   *
5336                   * PLOTAR: PLOT ARGUMENTS
5337                   ************************
5338                   *
5339  4336- 20 4B 43   PLOTAR  JSR PLOTA1
5340  4339- 48                 PHA
5341  433A- A9 2C              LDA =','

----------------------------------------------------------------------

GRAPHIC BASIC - STATEMENTS         19/11/19   R65 ASSEMBLER  PAGE 17

5342  433C- 20 73 2B           JSR FOLLOW
5343  433F- 20 4B 43           JSR PLOTA1
5344  4342- 48                 PHA
5345  4343- 20 66 43           JSR PLMD
5346  4346- 68                 PLA
5347  4347- A8                 TAY
5348  4348- 68                 PLA
5349  4349- AA                 TAX
5350  434A- 60                 RTS
5351                   *
5352  434B- 20 F7 2D   PLOTA1  JSR EXPRES
5353  434E- 20 E8 2D           JSR TESTTP
5354  4351- A5 9C              LDA SIGN
5355  4353- 10 03              BPL *+5
5356  4355- A9 00              LDA =0
5357  4357- 60                 RTS
5358                   *
5359  4358- A5 97              LDA EXP
5360  435A- C9 89              CMP =$89
5361  435C- 90 03              BCC *+5
5362  435E- A9 FF              LDA =$FF
5363  4360- 60                 RTS
5364                   *
5365  4361- 20 03 37           JSR NUMEXP+9
5366  4364- 8A                 TXA
5367  4365- 60                 RTS
5368                   *
5369                   * PLMD: GET PLOT MODE
5370                   *********************
5371                   *
5372  4366- 20 13 27   PLMD    JSR FETCH1
5373  4369- C9 2C              CMP =','
5374  436B- D0 0C              BNE PLMD1
5375  436D- 20 FA 36           JSR NUMEXP
5376  4370- 8A                 TXA
5377  4371- 0A                 ASL A
5378  4372- 0A                 ASL A
5379  4373- 0A                 ASL A
5380  4374- 0A                 ASL A
5381  4375- 0A                 ASL A
5382  4376- 0A                 ASL A
5383  4377- 85 AB              STA PLMODE
5384  4379- 60         PLMD1   RTS
5385                   *
5386                   * CHAR: PRINT ON GRAPHICS DISPLAY
5387                   *********************************
5388                   *
5389  437A- 29 7F      CHAR    AND =$7F
5390  437C- C9 0D              CMP =$D         CARRIAGE RETURN
5391  437E- D0 05              BNE CHARA

----------------------------------------------------------------------

GRAPHIC BASIC - STATEMENTS         19/11/19   R65 ASSEMBLER  PAGE 18

5392  4380- A2 00              LDX =0
5393  4382- 86 AE              STX XCURS
5394  4384- 60                 RTS
5395                   *
5396  4385- C9 0A      CHARA   CMP =$A         LINE FEED
5397  4387- D0 08              BNE CHARB
5398  4389- A5 AF              LDA YCURS
5399  438B- 18                 CLC
5400  438C- 69 09              ADC =9
5401  438E- 85 AF              STA YCURS
5402  4390- 60                 RTS
5403                   *
5404  4391- 4C F4 4D   CHARB   JMP CHAR0
5405                   *
5406                   *
5407                   * WAIT: STATEMENT ROUTINE
5408                   *************************
5409                   *
5410  4394- 20 F7 2D   WAIT    JSR EXPRES
5411  4397- 20 E8 2D           JSR TESTTP
5412  439A- 20 18 37           JSR FLPINT-4
5413  439D- A6 9B              LDX MANT+3
5414  439F- A4 9A              LDY MANT+2
5415  43A1- E8                 INX
5416  43A2- C8                 INY
5417  43A3- 4C A8 43           JMP WAIT1+2
5418                   *
5419  43A6- A2 FF      WAIT1   LDX =$FF
5420  43A8- 20 2E 20           JSR BREAKT
5421  43AB- A9 06              LDA =6
5422  43AD- 8D 30 14           STA EMUCOM      WAIT 10 MSEC
5423  43B0- CA                 DEX
5424  43B1- D0 F5              BNE WAIT1+2
5425  43B3- 88                 DEY
5426  43B4- D0 F0              BNE WAIT1
5427  43B6- 4C 13 27           JMP FETCH1
5428                   *
5429                   *
5430                   *
5431                   * AUTO: SET AUTO LINE MODE
5432                   **************************
5433                   *
5434  43B9- A2 00      AUTO    LDX =0          DEFAULT LINE NO
5435  43BB- 86 06              STX INTEG+1
5436  43BD- A2 0A              LDX =10
5437  43BF- 86 05              STX INTEG
5438  43C1- B0 03              BCS *+5         SKIP, IF NO NUMBER
5439  43C3- 20 4F 28           JSR FETCHI
5440                   *
5441  43C6- A2 0A              LDX =10         DEFAULT INCREMENT

----------------------------------------------------------------------

GRAPHIC BASIC - STATEMENTS         19/11/19   R65 ASSEMBLER  PAGE 19

5442  43C8- C9 2C              CMP =','
5443  43CA- D0 03              BNE *+5
5444  43CC- 20 FA 36           JSR NUMEXP      GET INCREMENT
5445                   *
5446  43CF- 86 C2              STX AUTOIN
5447  43D1- 68                 PLA
5448  43D2- 68                 PLA
5449  43D3- A5 06              LDA INTEG+1
5450  43D5- A6 05              LDX INTEG
5451  43D7- 20 0A 33   AUTOIN2 JSR OUTINT
5452  43DA- A9 20              LDA =' '
5453  43DC- 20 BC 2F           JSR OUTCHR
5454  43DF- A2 00              LDX =0
5455  43E1- 20 72 24           JSR INLIN+2
5456  43E4- 4C 85 23           JMP WARM1+3
5457                   *
5458                           TIT GRAPHIC BASIC - FILE HANDLING
5459                           PAG

----------------------------------------------------------------------

GRAPHIC BASIC - FILE HANDLING      19/11/19   R65 ASSEMBLER  PAGE 20

5460                   *
5461                   * RESGP: RESET OPEN FILES, AUTOIN AND TAPES
5462                   *******************************************
5463                   * CALLED IN COLDSTART, NEW AND CLR
5464                   *
5465  43E7- AD E5 14   RESGP   LDA TAPAOF      STOP TAPE A
5466  43EA- AD E7 14           LDA TAPBOF      STOP TAPE 2
5467  43ED- 20 D3 45           JSR RSTIDV
5468  43F0- A9 00              LDA =0
5469  43F2- 85 C8              STA FORMCS      CLEAR FORMATTING
5470  43F4- 85 CB              STA FORMFL
5471  43F6- 85 C3              STA AFILNO      NO ACTIVE FILE
5472  43F8- A0 07              LDY =7
5473  43FA- 99 39 03           STA FIDRTB,Y    NO OPEN FILE
5474  43FD- 99 80 03          STA FISYTB,Y
5475  4400- 88                 DEY
5476  4401- 10 F7              BPL *-7
5477  4403- 60                 RTS
5478                   *
5479                   * OPEN: OPEN A FILE
5480                   *******************
5481                   *
5482  4404- 20 FD 36   OPENBS  JSR NUMEXP+3    GET FILE NUMBER
5483  4407- 8A                 TXA
5484  4408- C9 04              CMP =4          MUST BE >=4
5485  440A- B0 05              BCS *+7
5486  440C- A2 07      FNERR   LDX =7          FILE NUMBER ERROR
5487  440E- 4C 0E 45   FERR1   JMP FERROR
5488                   *
5489  4411- 85 C3              STA AFILNO
5490  4413- 20 5C 44           JSR SRFILN      SHOULD NOT BE IN TABLE
5491  4416- D0 04              BNE *+6
5492  4418- A2 00              LDX =0          DOUBLE FILE NO ERROR
5493  441A- F0 F2              BEQ FERR1
5494                   *
5495  441C- A9 2C              LDA =','
5496  441E- 20 73 2B           JSR FOLLOW
5497  4421- 20 DC 41           JSR GETBF4      GET FILE NAME
5498                   *
5499  4424- A6 DC              LDX FILDRV      GETD DRIVE CODE
5500  4426- E0 04              CPX =4          DEFAULT =0
5501  4428- 90 04              BCC *+6         MUST BE <4
5502  442A- A2 15              LDX =21         DRIVE NO ERROR
5503  442C- D0 E0              BNE FERR1
5504                   *
5505  442E- 20 5B 42   OPEN1   JSR DEFARG2     GET DIRECTION CODE
5506  4431- C9 02              CMP =2          DEFAULT 0
5507  4433- 90 04              BCC *+6
5508  4435- A9 33              LDA =51         FILE DIRECTION ERROR
5509  4437- D0 D5              BNE FERR1

----------------------------------------------------------------------

GRAPHIC BASIC - FILE HANDLING      19/11/19   R65 ASSEMBLER  PAGE 21

5510                   *
5511  4439- 0A                 ASL A
5512  443A- 0A                 ASL A
5513  443B- 0A                 ASL A
5514  443C- 0A                 ASL A
5515  443D- 0A                 ASL A
5516  443E- 85 DA              STA FILFLG
5517                   *
5518  4440- 20 10 47           JSR GETBCD      GET LOCATION, IF THERE
5519  4443- 8D 13 03           STA FILLOC
5520  4446- 8C 14 03           STY FILLOC+1
5521  4449- A9 44              LDA ='D'
5522  444B- 8D 12 03           STA FILSTP
5523  444E- 20 0F F0           JSR OPEN        OPEN FILE
5524  4451- F0 03              BEQ *+5
5525  4453- 4C FF 44           JMP FILERR
5526  4456- A5 C3              LDA AFILNO
5527  4458- 99 80 03           STA FISYTB,Y    STORE SYMBOLIC NAME
5528  445B- 60                 RTS
5529                   *
5530                   * SRFILN: SEARCH FILE NUMBER
5531                   ****************************
5532                   * Z=1 IF FOUND, Y GIVES ENTRY NUMBER, FILE
5533                   * NO TO SEARCH MUST BE IN A, A AND X SAVED
5534                   *
5535  445C- A0 07      SRFILN  LDY =7
5536  445E- D9 80 03           CMP FISYTB,Y
5537  4461- F0 03              BEQ *+5
5538  4463- 88                 DEY
5539  4464- 10 F8              BPL *-6
5540  4466- 60                 RTS
5541                   *
5542                   *
5543                   * ERROR STRINGS FOR FILE ERRORS
5544                   *******************************
5545                   *
5546  4467- 44 4F 55   FERSTR  BYT 'DOUBLE '
5546  446A- 42 4C 45 
5546  446D- 20 
5547  446E- 46 49 4C           BYT 'FILE NO'+128
5547  4471- 45 20 4E 
5547  4474- CF 
5548  4475- 44 4F 55           BYT 'DOUBLE '
5548  4478- 42 4C 45 
5548  447B- 20 
5549  447C- 44 52 49           BYT 'DRIVE NO'+128
5549  447F- 56 45 20 
5549  4482- 4E CF 
5550  4484- 46 49 4C           BYT 'FILETYPE'+128
5550  4487- 45 54 59 

----------------------------------------------------------------------

GRAPHIC BASIC - FILE HANDLING      19/11/19   R65 ASSEMBLER  PAGE 22

5550  448A- 50 C5 
5551  448C- 54 4F 4F           BYT 'TOO MANY FILES'+128
5551  448F- 20 4D 41 
5551  4492- 4E 59 20 
5551  4495- 46 49 4C 
5551  4498- 45 D3 
5552  449A- 46 49 4C           BYT 'FILE DIRECTION'+128
5552  449D- 45 20 44 
5552  44A0- 49 52 45 
5552  44A3- 43 54 49 
5552  44A6- 4F CE 
5553  44A8- 46 49 4C           BYT 'FILE NOT FOUND'+128
5553  44AB- 45 20 4E 
5553  44AE- 4F 54 20 
5553  44B1- 46 4F 55 
5553  44B4- 4E C4 
5554  44B6- 46 49 4C           BYT 'FILE READ'+128
5554  44B9- 45 20 52 
5554  44BC- 45 41 C4 
5555  44BF- 44 49 53           BYT 'DISK NOT READY'+128
5555  44C2- 4B 20 4E 
5555  44C5- 4F 54 20 
5555  44C8- 52 45 41 
5555  44CB- 44 D9 
5556  44CD- 44 49 52           BYT 'DIRECTORY FULL'+128
5556  44D0- 45 43 54 
5556  44D3- 4F 52 59 
5556  44D6- 20 46 55 
5556  44D9- 4C CC 
5557  44DB- 44 49 53           BYT 'DISK FULL OR TAPE BUSY'+128
5557  44DE- 4B 20 46 
5557  44E1- 55 4C 4C 
5557  44E4- 20 4F 52 
5557  44E7- 20 54 41 
5557  44EA- 50 45 20 
5557  44ED- 42 55 53 
5557  44F0- D9 
5558                   *
5559                   * CONVERSION TABLE FOR SYSTEM FILE ERRORS
5560                   *
5561  44F1- 4F 4F 4F   FERTB   BYT 79,79,79,79,29,65,88,102
5561  44F4- 4F 1D 41 
5561  44F7- 58 66 
5562  44F9- 25 33 07           BYT 37,51,07,116,116
5562  44FC- 74 74 
5563                   *
5564                   * SYSTEM FILE ERROR
5565                   *******************
5566                   *
5567  44FE- 98                 TYA

----------------------------------------------------------------------

GRAPHIC BASIC - FILE HANDLING      19/11/19   R65 ASSEMBLER  PAGE 23

5568  44FF- C9 09     FILERR  CMP =9
5569  4501- 90 02              BCC *+4
5570  4503- E9 1A              SBC =$1A
5571  4505- C9 0E              CMP =14
5572  4507- B0 2E              BCS FILERR2
5573  4509- A8                 TAY
5574  450A- B9 F0 44           LDA FERTB-1,Y
5575  450D- AA                 TAX
5576                   *
5577                   * FILE ERROR HANDLING
5578                   *********************
5579                   *
5580  450E- AD 80 17   FERROR  LDA VFLAG
5581  4511- 29 67              AND =$67
5582  4513- 8D 80 17           STA VFLAG
5583  4516- A5 00              LDA OUTDEV
5584  4518- F0 07              BEQ *+9
5585  451A- 20 B0 42           JSR RSTDEV
5586  451D- A9 00              LDA =0
5587  451F- 85 00              STA OUTDEV
5588                   *
5589  4521- 20 95 24           JSR CRLF
5590  4524- 20 8D 45           JSR RSTO1
5591                   *
5592  4527- BD 67 44           LDA FERSTR,X
5593  452A- 48                 PHA
5594  452B- 29 7F              AND =$7F
5595  452D- 20 BC 2F           JSR OUTCHR
5596  4530- E8                 INX
5597  4531- 68                 PLA
5598  4532- 10 F3              BPL *-11
5599  4534- 4C 69 23           JMP STOP2-7
5600                   *
5601  4537- A2 58      FILERR2 LDX =88
5602  4539- D0 D3              BNE FERROR
5603                   *
5604                   * CLOSE: CLOSE OPEN FILE
5605                   ************************
5606                   * IF NO ARGUMENTS GIVEN: CLOSE ALL FILES
5607                   *
5608  453B- D0 0E      CLOSEBS BNE CLOSE1
5609  453D- A0 07              LDY =7
5610  453F- B9 80 03           LDA FISYTB,Y
5611  4542- F0 03              BEQ *+5
5612  4544- 20 63 45           JSR CLOSE2
5613  4547- 88                 DEY
5614  4548- 10 F5              BPL CLOSEBS+4
5615  454A- 60                 RTS
5616                   *
5617  454B- 20 13 27   CLOSE1  JSR FETCH1

----------------------------------------------------------------------

GRAPHIC BASIC - FILE HANDLING      19/11/19   R65 ASSEMBLER  PAGE 24

5618  454E- 20 FD 36           JSR NUMEXP+3
5619  4551- 8A                 TXA
5620  4552- C9 04              CMP =4
5621  4554- B0 03              BCS *+5
5622  4556- 4C 0C 44           JMP FNERR       FILE NUMBER ERROR
5623                   *
5624  4559- 20 5C 44           JSR SRFILN
5625  455C- F0 05              BEQ CLOSE2
5626  455E- A2 41      NFERR   LDX =65
5627  4560- 4C 0E 45           JMP FERROR
5628                   *
5629  4563- 84 C3      CLOSE2  STY AFILNO
5630  4565- 98                 TYA
5631  4566- AA                 TAX
5632  4567- 20 12 F0           JSR CLOSE
5633  456A- D0 92              BNE FILERR-1
5634  456C- A9 00              LDA =0
5635  456E- A4 C3              LDY AFILNO
5636  4570- 99 80 03           STA FISYTB,Y
5637  4573- 85 C3              STA AFILNO
5638  4575- 60                 RTS
5639                   *
5640                   * SET FILE OUTPUT
5641                   *****************
5642                   *
5643  4576- 8A         SETDV3  TXA
5644  4577- 20 5C 44           JSR SRFILN
5645  457A- D0 E2              BNE NFERR
5646  457C- 84 C3              STY AFILNO
5647  457E- 60                 RTS
5648                   *
5649                   * OUTFIL: PRINT TO A FILE
5650                   *************************
5651                   *
5652  457F- A6 C3      OUTFIL  LDX AFILNO
5653  4581- A0 00              LDY =0
5654  4583- 84 DA              STY FILFLG
5655  4585- 20 1B F0           JSR WRITCH
5656  4588- F0 F4              BEQ OUTFIL-1    RTS, IF OK
5657  458A- 4C FE 44           JMP FILERR-1
5658                   *
5659                   *
5660                   * RSTO1: RESET INPUT DEVICE AND GRAPHICS
5661                   ****************************************
5662                   * X SAVED
5663                   *
5664  458D- 8A         RSTO1   TXA
5665  458E- 48                 PHA
5666  458F- 20 BA 30           JSR GETEND      RESET INPUT DEVICE
5667  4592- 68                 PLA

----------------------------------------------------------------------

GRAPHIC BASIC - FILE HANDLING      19/11/19   R65 ASSEMBLER  PAGE 25

5668  4593- AA                 TAX
5669  4594- 4C 1C 20           JMP ALPHAD
5670                   *
5671                   * RSTALL: RESTET INPUT,OUTPUT AND GRAPHICS
5672                   ******************************************
5673                   *
5674  4597- 08         RSTALL  PHP             SAVE STATUS
5675  4598- A5 00              LDA OUTDEV
5676  459A- F0 07              BEQ *+9
5677  459C- 20 B0 42           JSR RSTDEV
5678  459F- A9 00              LDA =0
5679  45A1- 85 00              STA OUTDEV
5680  45A3- 20 BA 30           JSR GETEND
5681  45A6- 20 1C 20           JSR ALPHAD
5682  45A9- 28                 PLP
5683  45AA- 60                 RTS
5684                   *
5685                   * SETINP: SETINPUT DEVICE
5686                   *************************
5687                   *
5688  45AB- 20 FA 36   SETINP  JSR NUMEXP
5689  45AE- 86 C1              STX INPDEV
5690  45B0- E0 04              CPX =4
5691  45B2- 90 05              BCC *+7
5692  45B4- 20 76 45           JSR SETDV3
5693  45B7- A2 04              LDX =4
5694  45B9- A9 3B              LDA =';'
5695  45BB- 20 73 2B           JSR FOLLOW
5696  45BE- BD C9 45   SETIN1  LDA INVTB,X     SET VECTOR FOR INCHR
5697  45C1- 85 C4              STA IVECT
5698  45C3- BD CE 45           LDA INVTB+5,X
5699  45C6- 85 C5              STA IVECT+1
5700  45C8- 60                 RTS
5701                   *
5702  45C9- 00 E8 5A   INVTB   BYT <GETKEY,<TSTKEY,<GETTTY
5703  45CC- F3 22              BYT <GETGRA,<INFIL
5704  45CE- E0 45 1E           BYT >GETKEY,>TSTKEY,>GETTTY
5705  45D1- 45 46              BYT >GETGRA,>INFIL
5706                   *
5707                   * RSTIDV: RESET INPUT DEVICE
5708                   ****************************
5709                   *
5710  45D3- A2 00      RSTIDV  LDX =0
5711  45D5- F0 E7              BEQ SETIN1
5712                   *
5713                   * INCHR INPUT A CHAR
5714                   ********************
5715                   *
5716  45D7- 86 C6      INCHR   STX ISAVXY
5717  45D9- 84 C7              STY ISAVXY+1

----------------------------------------------------------------------

GRAPHIC BASIC - FILE HANDLING      19/11/19   R65 ASSEMBLER  PAGE 26

5718  45DB- 20 E5 45           JSR INCH1
5719  45DE- A6 C6              LDX ISAVXY
5720  45E0- A4 C7              LDY ISAVXY+1
5721  45E2- 29 7F              AND =$7F
5722  45E4- 60                 RTS
5723                   *
5724  45E5- 6C C4 00   INCH1   JMP (IVECT)
5725                   *
5726                   * TSTKEY: TEST KEY
5727                   ******************
5728                   * RESTURN A=0 IF NO KEY PRESSES, ELSE KEY
5729                   *
5730  45E8- AD 85 17   TSTKEY  LDA CHARREG
5731  45EB- F0 05              BEQ *+7
5732  45ED- A2 00              LDX =0
5733  45EF- 8E 85 17           STX CHARREG
5734  45F2- 60                 RTS
5735                   *
5736                   *
5737                   * GETGRA: GET KEY AND PRINT TO GRAPHICS
5738                   ***************************************
5739                   *
5740  45F3- 20 00 E0   GETGRA  JSR GETKEY
5741  45F6- 48                 PHA
5742  45F7- C9 7F              CMP =$7F
5743  45F9- F0 09              BEQ *+11
5744  45FB- C9 5F              CMP =$5F
5745  45FD- F0 05              BEQ *+7
5746  45FF- 20 7A 43          JSR CHAR
5747  4602- 68                 PLA
5748  4603- 60                 RTS
5749                   *
5750  4604- A5 AE              LDA XCURS
5751  4606- 38                 SEC
5752  4607- E9 06              SBC =6
5753  4609- B0 02              BCS *+4
5754  460B- A9 00              LDA =0
5755  460D- 85 AE              STA XCURS
5756  460F- 48                 PHA             SAVE XCURS
5757  4610- A9 80              LDA =$80
5758  4612- 85 AB              STA PLMODE
5759  4614- A9 5C              LDA =$5C
5760  4616- 20 7A 43           JSR CHAR
5761  4619- A9 00              LDA =0
5762  461B- 85 AB              STA PLMODE
5763  461D- 68                 PLA
5764  461E- 85 AE              STA XCURS
5765  4620- 68                 PLA
5766  4621- 60                 RTS
5767                   *

----------------------------------------------------------------------

GRAPHIC BASIC - FILE HANDLING      19/11/19   R65 ASSEMBLER  PAGE 27

5768                   * INFIL: INPUT FROM FILE
5769                   ************************
5770                   *
5771  4622- A6 C3      INFIL   LDX AFILNO
5772  4624- A9 00              LDA =0
5773  4626- 85 DA              STA FILFLG
5774  4628- 20 18 F0           JSR READCH
5775  462B- F0 F4              BEQ INFIL-1     RTS, IF OK
5776  462D- 4C FE 44           JMP FILERR-1
5777                   *
5778                   *
5779                   * COPY: COPY FROM ANY DEVICE TO ANY DEVICE
5780                   ******************************************
5781                   * DEVICE CAN BE SYMBOLIC FILE OR PHYSICAL
5782                   * DEVICE (I/O CODES 0-3)
5783                   *
5784  4630- 20 FD 36   COPY    JSR NUMEXP+3    GET INPUT DEVICE
5785  4633- 86 C1              STX INPDEV
5786  4635- E0 04              CPX =4
5787  4637- 90 05              BCC *+7
5788  4639- 20 76 45           JSR SETDV3
5789  463C- A2 04              LDX =4
5790  463E- A9 2C              LDA =','
5791  4640- 20 BB 45           JSR SETIN1-3    SET DEVICE
5792  4643- 20 13 27           JSR FETCH1
5793  4646- 20 FD 36           JSR NUMEXP+3
5794  4649- E0 03              CPX =3
5795  464B- B0 06              BCS *+8
5796  464D- 20 7A 42           JSR SETDV1-4
5797  4650- 4C 58 46           JMP COPY1
5798                   *
5799  4653- 86 00              STX OUTDEV
5800  4655- 20 9B 42           JSR SETDV2+7
5801                   *
5802  4658- A5 C1      COPY1   LDA INPDEV
5803  465A- C5 00              CMP OUTDEV
5804  465C- D0 03              BNE *+5
5805  465E- 4C 0C 44           JMP FNERR
5806                   *
5807  4661- 20 5B 42           JSR DEFARG2
5808  4664- C9 00              CMP =0           TERMINATOR
5809  4666- D0 02              BNE *+4
5810  4668- A9 1F              LDA =$1F
5811  466A- 85 B7              STA LENGHT
5812                   *
5813  466C- A5 C1      COPY2   LDA INPDEV
5814  466E- C9 04              CMP =4
5815  4670- 90 07              BCC COPY3
5816  4672- 20 5C 44           JSR SRFILN
5817  4675- D0 3E              BNE COPY6

----------------------------------------------------------------------

GRAPHIC BASIC - FILE HANDLING      19/11/19   R65 ASSEMBLER  PAGE 28

5818  4677- 84 C3              STY AFILNO
5819                   *
5820  4679- 20 D7 45   COPY3   JSR INCHR
5821  467C- C9 1F              CMP =$1F
5822  467E- F0 26              BEQ COPY5
5823  4680- C5 B7              CMP LENGHT
5824  4682- F0 22              BEQ COPY5
5825                   *
5826  4684- A6 00              LDX OUTDEV
5827  4686- E0 04              CPX =4
5828  4688- 90 0A              BCC COPY4
5829  468A- 48                 PHA
5830  468B- 8A                 TXA
5831  468C- 20 5C 44           JSR SRFILN
5832  468F- D0 23              BNE COPY6-1
5833  4691- 84 C3              STY AFILNO
5834  4693- 68                 PLA
5835                   *
5836  4694- 20 BC 2F   COPY4   JSR OUTCHR
5837  4697- C9 0D              CMP =$D
5838  4699- D0 05              BNE *+7
5839  469B- A9 0A              LDA =$A
5840  469D- 20 BC 2F           JSR OUTCHR
5841  46A0- 20 2E 20           JSR BREAKT
5842  46A3- 4C 6C 46           JMP COPY2
5843                   *
5844  46A6- A5 00      COPY5   LDA OUTDEV
5845  46A8- F0 07              BEQ *+9
5846  46AA- 20 B0 42           JSR RSTDEV
5847  46AD- A9 00              LDA =0
5848  46AF- 85 00              STA OUTDEV
5849  46B1- 4C BA 30           JMP GETEND
5850                   *
5851  46B4- 68                 PLA
5852  46B5- 4C 0C 44   COPY6   JMP FNERR
5853                   *
5854                   * FILES: PRINT OPEN FILES TO DISPLAY
5855                   ************************************
5856                   *
5857  46B8- A9 F8      FILES   LDA =<FILEM
5858  46BA- A0 46              LDY =>FILEM
5859  46BC- 20 8B 28           JSR OUTSTR
5860                   *
5861  46BF- A0 07      FILE1   LDY =7
5862  46C1- B9 80 03           LDA FISYTB,Y
5863  46C4- F0 03              BEQ *+5
5864  46C6- 20 CD 46           JSR FILE2
5865  46C9- 88                 DEY
5866  46CA- 10 F5              BPL FILE1+2
5867  46CC- 60                 RTS

----------------------------------------------------------------------

GRAPHIC BASIC - FILE HANDLING      19/11/19   R65 ASSEMBLER  PAGE 29

5868                   *
5869  46CD- 20 E9 46   FILE2   JSR FILE3       PRINT SYMBOLIC NAME
5870  46D0- B9 41 03           LDA FIDVTB,Y
5871  46D3- 20 E9 46           JSR FILE3       PRINT DEVICE
5872  46D6- B9 39 03           LDA FIDRTB,Y
5873  46D9- 0A                 ASL A
5874  46DA- A9 00              LDA =0
5875  46DC- 2A                 ROL A
5876  46DD- 20 E9 46           JSR FILE3       PRINT R/W DIRECTION
5877  46E0- B9 51 03           LDA FIRCTB,Y
5878  46E3- 20 E9 46           JSR FILE3
5879  46E6- 4C 95 24           JMP CRLF
5880                   *
5881  46E9- AA         FILE3   TAX
5882  46EA- 98                 TYA
5883  46EB- 48                 PHA
5884  46EC- A9 00              LDA =0
5885  46EE- 20 0A 33           JSR OUTINT
5886  46F1- 68                 PLA
5887  46F2- A8                 TAY
5888  46F3- A9 09              LDA =9
5889  46F5- 4C BC 2F           JMP OUTCHR
5890                   *
5891  46F8- 0D 0A 4D  FILEM   BYT $D,$A,'MO',9,'DRIVE'
5891  46FB- 4F 09 44 
5891  46FE- 52 49 56 
5891  4701- 45 
5892  4702- 09 44 49           BYT 9,'DIR',9,'RECORD'
5892  4705- 52 09 52 
5892  4708- 45 43 4F 
5892  470B- 52 44 
5893  470D- 0D 0A 00           BYT $D,$A,0
5894                   *
5895                   *
5896                   * GETBCD: GET BASIC ARGUMENT, CONVERT TO
5897                   ****************************************
5898                   * 4 DIGIT BCD NUMBER IN A,Y
5899                   *
5900  4710- 20 3C 42   GETBCD  JSR DEFARG
5901  4713- A9 00              LDA =0
5902  4715- 85 98              STA MANT
5903  4717- 85 99              STA MANT+1
5904  4719- A2 0F              LDX =15
5905  471B- 06 05      GETBCD1 ASL INTEG
5906  471D- 26 06              ROL INTEG+1
5907  471F- 90 10              BCC GETBCD2
5908  4721- F8                 SED
5909  4722- A5 98              LDA MANT
5910  4724- 7D 39 47           ADC GETBCD3,X
5911  4727- 85 98              STA MANT

----------------------------------------------------------------------

GRAPHIC BASIC - FILE HANDLING      19/11/19   R65 ASSEMBLER  PAGE 30

5912  4729- A5 99              LDA MANT+1
5913  472B- 7D 49 47           ADC GETBCD3+16,X
5914  472E- 85 99              STA MANT+1
5915  4730- D8                 CLD
5916  4731- CA         GETBCD2 DEX
5917  4732- 10 E7              BPL GETBCD1
5918  4734- A5 98              LDA MANT
5919  4736- A4 99              LDY MANT+1
5920  4738- 60                 RTS
5921                   *
5922  4739- 00 01 03   GETBCD3 BYT 0,1,3
5923  473C- 07 15 31           BYT 7,$15,$31
5924  473F- 63 27 55           BYT $63,$27,$55
5925  4742- 11 23 47           BYT $11,$23,$47
5926  4745- 95 91 83           BYT $95,$91,$83
5927  4748- 67                 BYT $67
5928                   *
5929  4749- 00 00 00           BYT 0,0,0
5930  474C- 00 00 00           BYT 0,0,0
5931  474F- 00 01 02           BYT 0,1,2
5932  4752- 05 10 20           BYT 5,$10,$20
5933  4755- 40 81 63           BYT $40,$81,$63
5934  4758- 32                 BYT $32
5935                   *
5936                   *
5937                   *
5938                   * OUTCON: OUTPUT CONVERSION (WITH FORMATTING)
5939                   *********************************************
5940                   *
5941  4759- A0 01      OUTCON  LDY =1          START OF STRING
5942  475B- A9 00              LDA =0
5943  475D- 85 C9              STA FORMCD      TEST FORMATTING CODE
5944  475F- C9 03              CMP =3          HEX FORMATTING
5945  4761- D0 57              BNE FORM4       SKIP, IF NOT
5946                   *
5947  4763- A9 24              LDA ='$'
5948  4765- 99 FF 00           STA 255,Y
5949  4768- 84 A7              STY DYADIC+8
5950  476A- A9 B5              LDA =<HEXMAX
5951  476C- A0 47              LDY =>HEXMAX
5952  476E- 20 5C 35           JSR COMPAR      TEST MAX VALUE
5953  4771- 30 03              BMI *+5
5954  4773- 4C 0F 37           JMP QERR
5955                   *
5956  4776- 20 2B 37           JSR FLPIN1
5957  4779- A2 07              LDX =7
5958  477B- 86 84              STX TEMP6
5959  477D- A0 03      FORM1   LDY =3
5960  477F- 06 9B              ASL MANT+3
5961  4781- 26 9A              ROL MANT+2

----------------------------------------------------------------------

GRAPHIC BASIC - FILE HANDLING      19/11/19   R65 ASSEMBLER  PAGE 31

5962  4783- 26 99              ROL MANT+1
5963  4785- 26 98              ROL MANT
5964  4787- 2A                 ROL A
5965  4788- 88                 DEY
5966  4789- 10 F4              BPL FORM1+2
5967  478B- 29 0F              AND =$F
5968  478D- D0 0A              BNE FORM2
5969  478F- 24 84              BIT TEMP6
5970  4791- 30 06              BMI FORM2
5971  4793- E4 CA              CPX FORMNO
5972  4795- 90 02              BCC FORM2
5973  4797- B0 14              BCS FORM3
5974                   *
5975  4799- C9 0A      FORM2   CMP =$A         CONVERT TO HEX DIGIT
5976  479B- 18                 CLC
5977  479C- 30 02              BMI *+4
5978  479E- 69 07              ADC =7
5979  47A0- 69 30              ADC =$30
5980  47A2- E6 A7              INC DYADIC+8
5981  47A4- A4 A7              LDY DYADIC+8
5982  47A6- 99 FF 00           STA 255,Y
5983                    * BASIC7:A ORIGINAL 7/1/1982, RECOVERED 3/2018
5984  47A9- A9 80              LDA =$80
5985  47AB- 85 84              STA TEMP6
5986  47AD- CA         FORM3   DEX
5987  47AE- 10 CD              BPL FORM1
5988  47B0- A4 A7              LDY DYADIC+8
5989  47B2- 4C 6D 49           JMP OUTZER+3
5990                   *
5991  47B5- 9F 7F FF   HEXMAX  BYT $9F,$7F,$FF,$FF,$FF
5991  47B8- FF FF 
5992                   *
5993                   * OUTPUT, IF NOT HEX
5994                   *
5995  47BA- A9 20      FORM4   LDA =' '
5996  47BC- 24 9C              BIT SIGN
5997  47BE- 10 02              BPL *+4
5998  47C0- A9 2D              LDA ='-'
5999  47C2- 99 FF 00           STA 255,Y
6000  47C5- 85 9C              STA SIGN
6001  47C7- 84 A7              STY DYADIC+8
6002  47C9- C8                 INY
6003  47CA- A9 F8              LDA =$F8
6004  47CC- 85 93              STA POINTC
6005  47CE- A6 97              LDX EXP
6006  47D0- F0 3A              BEQ OUTCN3
6007                   *
6008  47D2- A9 00              LDA =0
6009  47D4- E0 80              CPX =$80
6010  47D6- F0 02              BEQ *+4

----------------------------------------------------------------------

GRAPHIC BASIC - FILE HANDLING      19/11/19   R65 ASSEMBLER  PAGE 32

6011  47D8- B0 09              BCS *+11
6012                   *
6013  47DA- A9 79              LDA =<(OUTCT1+10)
6014  47DC- A0 36              LDY =>(OUTCT1+10)
6015  47DE- 20 89 38           JSR MULT-3      MULTIPLY BY 1.0E9
6016  47E1- A9 F7              LDA =$F7
6017                   *
6018  47E3- 85 93              STA POINTC
6019  47E5- A9 74      OUTCN0  LDA =<(OUTCT1+5)
6020  47E7- A0 36              LDY =>(OUTCT1+5)
6021  47E9- 20 5C 35           JSR COMPAR
6022  47EC- F0 1E              BEQ OUTCN3
6023  47EE- 10 12              BPL OUTCN1      TOO BIG FOR INT
6024  47F0- A9 6F              LDA =<OUTCT1
6025  47F2- A0 36              LDY =>OUTCT1
6026  47F4- 20 5C 35           JSR COMPAR
6027  47F7- F0 02              BEQ *+4
6028  47F9- 10 0E              BPL OUTCN1+7
6029  47FB- 20 CA 36           JSR MULTEN      TOO SMALL FOR INT
6030  47FE- C6 93             DEC POINTC
6031  4800- D0 EE              BNE *-16
6032                   *
6033  4802- 20 E9 36   OUTCN1  JSR DIVTEN
6034  4805- E6 93              INC POINTC
6035  4807- D0 DC              BNE OUTCN0      ALLWAYS TAKEN
6036                   *
6037  4809- 20 2C 33           JSR ADD9
6038  480C- A6 C9      OUTCN3  LDX FORMCD      TEST FORMATTING CODE
6039  480E- F0 46              BEQ FORM8       SKIP, IF AUTO FORMAT
6040  4810- A9 08              LDA =8
6041  4812- CA                 DEX
6042  4813- F0 05              BEQ FORM5       SKIP, IF E-FORMAT
6043  4815- A9 00              LDA =0
6044  4817- 38                 SEC
6045  4818- E5 93              SBC POINTC
6046  481A- 38         FORM5   SEC
6047  481B- E5 CA              SBC FORMNO      COMPUTE NEW ROUNDING
6048  481D- 30 37              BMI FORM8
6049  481F- F0 35              BEQ FORM8
6050  4821- C9 0A              CMP =$A
6051  4823- B0 31              BCS FORM8
6052  4825- 85 CC              STA FORMCT      ROUNDING IS .5*10^FORMCT
6053  4827- A2 84              LDX =<TEMP6
6054  4829- A0 00              LDY =>TEMP6
6055  482B- 20 D8 34           JSR SAVFLP+4
6056  482E- A9 7E              LDA =<OUTCT2
6057  4830- A0 36              LDY =>OUTCT2
6058  4832- 20 AF 34           JSR GETFLP
6059  4835- 20 CA 36   FORM6   JSR MULTEN
6060  4838- C6 CC              DEC FORMCT

----------------------------------------------------------------------

GRAPHIC BASIC - FILE HANDLING      19/11/19   R65 ASSEMBLER  PAGE 33

6061  483A- D0 F9              BNE FORM6
6062                   *
6063  483C- A9 84              LDA =<TEMP6
6064  483E- A0 00              LDY =>TEMP6
6065  4840- 20 38 33           JSR ADD-3       ADD ROUNDING
6066  4843- A9 74              LDA =<(OUTCT1+5)
6067  4845- A0 36              LDY =>(OUTCT1+5)
6068  4847- 20 5C 35           JSR COMPAR
6069  484A- F0 0A              BEQ FORM8
6070  484C- 30 08              BMI FORM8
6071  484E- 20 E9 36           JSR DIVTEN
6072  4851- E6 93              INC POINTC
6073  4853- 20 2C 33           JSR ADD9
6074                   *
6075  4856- 20 2B 37   FORM8   JSR FLPIN1
6076  4859- A2 01              LDX =1
6077  485B- A5 93              LDA POINTC
6078  485D- 18                 CLC
6079  485E- 69 0A              ADC =10
6080  4860- A4 C9              LDY FORMCD
6081  4862- F0 05              BEQ FORM7
6082  4864- 88                 DEY
6083  4865- F0 15              BEQ EXPOUT      EXPOUT, IF E-FORMAT
6084  4867- D0 03              BNE FORM7+3
6085                   *
6086  4869- A8         FORM7   TAY             IN AUTO FORMAT
6087  486A- 30 10              BMI EXPOUT      EXPOUT, IF <0.01
6088                   *
6089  486C- C9 0B              CMP =11         IN AUTO AND F=FORMAT
6090  486E- 10 0D              BPL EXPOUT+1    EXPOUT, IF TOO BIG
6091                   *
6092  4870- 18         FIXOUT  CLC
6093  4871- 69 FF              ADC =255
6094  4873- C9 F5              CMP =$F5        CORRECTION FOR UNDER-
6095  4875- 10 02              BPL *+4         FLOW IN FIXOUT
6096  4877- A2 F5              LDX =$F5
6097  4879- AA                 TAX             DECIMAL POINT TO X
6098  487A- A9 02              LDA =2          DUMMY EXPONTENT
6099                   *
6100  487C- 38         EXPOUT  SEC
6101  487D- E9 02              SBC =2
6102  487F- 85 94              STA CURREX      PRINTED EXPONENT
6103  4881- 86 93              STX POINTC      DECIMAL POINT OFFSET
6104  4883- 8A                 TXA
6105  4884- F0 02              BEQ *+4
6106  4886- 10 1C              BPL OUTCN2
6107                   *
6108  4888- A4 A7              LDY DYADIC+8
6109  488A- A9 30              LDA ='0'
6110  488C- C8                 INY

----------------------------------------------------------------------

GRAPHIC BASIC - FILE HANDLING      19/11/19   R65 ASSEMBLER  PAGE 34

6111  488D- 99 FF 00           STA 255,Y
6112  4890- A9 2E              LDA ='.'
6113  4892- C8                 INY
6114  4893- 99 FF 00           STA 255,Y
6115  4896- 8A                 TXA
6116  4897- F0 09              BEQ OUTCN2-2
6117  4899- A9 30              LDA ='0'
6118  489B- C8                 INY
6119  489C- 99 FF 00           STA 255,Y
6120  489F- E8                 INX
6121  48A0- D0 F9              BNE *-5
6122                   *
6123  48A2- 84 A7              STY DYADIC+8
6124  48A4- A0 00      OUTCN2  LDY =0
6125  48A6- A2 80              LDX =128
6126  48A8- A5 9B              LDA MANT+3
6127  48AA- 18                 CLC
6128  48AB- 79 86 36           ADC OUTCT2+8,Y
6129  48AE- 85 9B              STA MANT+3
6130  48B0- A5 9A              LDA MANT+2
6131  48B2- 79 85 36           ADC OUTCT2+7,Y
6132  48B5- 85 9A              STA MANT+2
6133  48B7- A5 99              LDA MANT+1
6134  48B9- 79 84 36           ADC OUTCT2+6,Y
6135  48BC- 85 99              STA MANT+1
6136  48BE- A5 98              LDA MANT
6137  48C0- 79 83 36           ADC OUTCT2+5,Y
6138  48C3- 85 98              STA MANT
6139  48C5- E8                 INX
6140  48C6- B0 04              BCS *+6
6141  48C8- 10 DE              BPL OUTCN2+4
6142  48CA- 30 02              BMI *+4
6143  48CC- 30 DA              BMI OUTCN2+4
6144  48CE- 8A                 TXA
6145  48CF- 90 04              BCC *+6
6146  48D1- 49 FF              EOR =$FF
6147  48D3- 69 0A              ADC =$0A
6148  48D5- 69 2F              ADC =$2F
6149  48D7- C8                 INY
6150  48D8- C8                 INY
6151  48D9- C8                 INY
6152  48DA- C8                 INY
6153  48DB- 84 7D              STY VARSTP
6154  48DD- A4 A7              LDY DYADIC+8
6155  48DF- C8                 INY
6156  48E0- AA                 TAX
6157  48E1- 29 7F              AND =$7F
6158  48E3- 99 FF 00           STA 255,Y
6159  48E6- C6 93              DEC POINTC
6160  48E8- D0 06              BNE *+8

----------------------------------------------------------------------

GRAPHIC BASIC - FILE HANDLING      19/11/19   R65 ASSEMBLER  PAGE 35

6161  48EA- A9 2E              LDA ='.'
6162  48EC- C8                 INY
6163  48ED- 99 FF 00           STA 255,Y
6164  48F0- 84 A7              STY DYADIC+8
6165                   *
6166  48F2- A4 7D              LDY VARSTP
6167  48F4- 8A                 TXA
6168  48F5- 49 FF              EOR =$FF
6169  48F7- 29 80              AND =$80
6170  48F9- AA                 TAX
6171  48FA- C0 24              CPY =$24
6172  48FC- F0 0A              BEQ OUTCN4
6173  48FE- A5 93             LDA POINTC
6174  4900- C9 F6              CMP =$F6
6175  4902- 30 04              BMI OUTCN4
6176  4904- C0 3C              CPY =$3C
6177  4906- D0 A0              BNE OUTCN2+4
6178                   *
6179  4908- A4 A7      OUTCN4  LDY DYADIC+8    GET END OF STRING
6180  490A- A6 C9              LDX FORMCD
6181  490C- F0 1E              BEQ FORM10
6182  490E- 98                 TYA
6183  490F- 18                 CLC
6184  4910- 65 93              ADC POINTC
6185  4912- 18                 CLC
6186  4913- 65 CA              ADC FORMNO
6187  4915- C5 A7              CMP DYADIC+8
6188  4917- B0 01              BCS *+3
6189  4919- A8                 TAY
6190  491A- B9 FF 00           LDA 255,Y       DO NOT PRINT
6191  491D- C9 2E              CMP ='.'        ENDING POINT
6192  491F- D0 01              BNE *+3
6193  4921- 88                 DEY
6194  4922- CA                 DEX
6195  4923- D0 14              BNE FORM11
6196                   *
6197  4925- A9 2B              LDA ='+'
6198  4927- A6 94              LDX CURREX
6199  4929- 4C 3F 49           JMP FORM12
6200                   *
6201  492C- B9 FF 00   FORM10  LDA 255,Y
6202  492F- 88                 DEY
6203  4930- C9 30              CMP ='0'
6204  4932- F0 F8              BEQ *-6
6205  4934- C9 2E              CMP ='.'
6206  4936- F0 01              BEQ *+3
6207  4938- C8                 INY
6208  4939- A9 2B      FORM11  LDA ='+'
6209  493B- A6 94              LDX CURREX
6210  493D- F0 2E              BEQ OUTZER+3

----------------------------------------------------------------------

GRAPHIC BASIC - FILE HANDLING      19/11/19   R65 ASSEMBLER  PAGE 36

6211                   *
6212  493F- 10 08      FORM12  BPL *+10
6213  4941- A9 00              LDA =0
6214  4943- 38                 SEC
6215  4944- E5 94              SBC CURREX
6216  4946- AA                 TAX
6217  4947- A9 2D              LDA ='-'
6218  4949- 99 01 01           STA 257,Y
6219  494C- A9 45              LDA ='E'
6220  494E- 99 00 01           STA 256,Y
6221  4951- 8A                 TXA
6222  4952- A2 2F              LDX =$2F
6223  4954- 38                 SEC
6224  4955- E8                 INX
6225  4956- E9 0A              SBC =10
6226  4958- B0 FB              BCS *-3
6227  495A- 69 3A              ADC =$3A
6228  495C- 99 03 01           STA 259,Y
6229  495F- 8A                 TXA
6230  4960- 99 02 01           STA 258,Y
6231  4963- C8                 INY
6232  4964- C8                 INY
6233  4965- C8                 INY
6234  4966- C8                 INY
6235  4967- 4C 6D 49           JMP OUTZER+3
6236                   *
6237  496A- 99 FF 00   OUTZER  STA 255,Y
6238  496D- A9 00              LDA =0
6239  496F- 99 00 01           STA 256,Y
6240  4972- 98                 TYA
6241  4973- AA                 TAX
6242  4974- A9 00              LDA =0
6243  4976- A0 01              LDY =1
6244  4978- 60                 RTS
6245                   *
6246                   *
6247                   * FORMOUT: FORMATTED OUTPUT
6248                   ***************************
6249                   *
6250  4979- A0 01      FORMOUT LDY =1
6251  497B- 98                 TYA
6252  497C- 48                 PHA
6253  497D- A5 C8              LDA FORMCS
6254  497F- 20 5D 47           JSR OUTCON+4
6255  4982- 68                 PLA
6256  4983- D0 02              BNE *+4
6257  4985- E8                 INX
6258  4986- 88                 DEY
6259  4987- 84 85              STY TEMP6+1
6260  4989- A8                 TAY

----------------------------------------------------------------------

GRAPHIC BASIC - FILE HANDLING      19/11/19   R65 ASSEMBLER  PAGE 37

6261  498A- 88                 DEY
6262  498B- 84 84              STY TEMP6
6263  498D- 8A                 TXA
6264  498E- 38                 SEC
6265  498F- E5 CB              SBC FORMFL
6266  4991- B0 21              BCS OUTEND
6267                   *
6268  4993- 49 FF              EOR =$FF
6269  4995- 85 A7              STA DYADIC+8
6270  4997- 38                 SEC
6271  4998- 65 84              ADC TEMP6
6272  499A- 85 86              STA TEMP6+2
6273  499C- A5 85              LDA TEMP6+1
6274  499E- 69 00              ADC =0
6275  49A0- 85 87              STA TEMP6+3
6276  49A2- 8A                 TXA
6277  49A3- A8                 TAY
6278  49A4- B1 84              LDA (TEMP6),Y
6279  49A6- 91 86              STA (TEMP6+2),Y
6280  49A8- 88                 DEY
6281  49A9- 10 F9              BPL *-5
6282                   *
6283  49AB- A4 A7              LDY DYADIC+8
6284  49AD- A9 20              LDA =$20
6285  49AF- 91 84              STA (TEMP6),Y
6286  49B1- 88                 DEY
6287  49B2- 10 FB              BPL *-3
6288  49B4- A9 00      OUTEND  LDA =0
6289  49B6- A0 01              LDY =1
6290  49B8- 60                 RTS
6291                   *
6292                   *
6293                   * FORMAT: SET FORMATTING
6294                   ************************
6295                   *
6296  49B9- 20 5B 2C   FORMAT  JSR TLETT
6297  49BC- B0 03              BCS *+5
6298  49BE- 4C C4 26           JMP SYNERR      MUST BE LETTER
6299                   *
6300  49C1- C9 41              CMP ='A'        AUTO FORMAT
6301  49C3- D0 04              BNE FORMAT1
6302                   *
6303  49C5- A9 00              LDA =0
6304  49C7- F0 06              BEQ FORMAT2
6305                   *
6306  49C9- C9 46      FORMAT1 CMP ='F'        F-FORMAT
6307  49CB- D0 1A              BNE FORMAT3
6308  49CD- A9 02              LDA =2
6309  49CF- 85 C8      FORMAT2 STA FORMCS
6310  49D1- 20 FA 36           JSR NUMEXP

----------------------------------------------------------------------

GRAPHIC BASIC - FILE HANDLING      19/11/19   R65 ASSEMBLER  PAGE 38

6311  49D4- E0 10              CPX =16
6312  49D6- B0 09              BCS QERR2
6313  49D8- 86 CB              STX FORMFL
6314  49DA- 20 5B 42           JSR DEFARG2
6315  49DD- C9 09              CMP =9
6316  49DF- 90 03              BCC *+5
6317  49E1- 4C 0F 37   QERR2   JMP QERR
6318  49E4- 85 CA              STA FORMNO
6319  49E6- 60                 RTS
6320                   *
6321  49E7- C9 45      FORMAT3 CMP ='E'        E-FORMAT
6322  49E9- D0 04              BNE FORMAT4
6323  49EB- A9 01              LDA =1
6324  49ED- D0 E0              BNE FORMAT2
6325                   *
6326  49EF- C9 48      FORMAT4 CMP ='H'        HEX-FORMAT
6327  49F1- D0 CB              BNE FORMAT+5    SYNTAX ERROR
6328  49F3- A9 03              LDA =3
6329  49F5- D0 D8              BNE FORMAT2
6330                   *
6331                   *
6332                   * HEX INPUT
6333                   ***********
6334                   *
6335  49F7- A9 00      NUMBHEX LDA =0
6336  49F9- 85 98              STA MANT
6337  49FB- 85 99              STA MANT+1
6338  49FD- 85 9A              STA MANT+2
6339  49FF- 85 9B             STA MANT+3
6340  4A01- 20 0D 27   NUMBH0  JSR FETCH
6341  4A04- 90 0B              BCC NUMBH1      SKIP, IF NUMBER
6342  4A06- C9 41              CMP ='A'
6343  4A08- 90 23              BCC NUMBH3
6344  4A0A- C9 47              CMP ='G'
6345  4A0C- B0 1F              BCS NUMBH3
6346  4A0E- 18                 CLC
6347  4A0F- 69 09              ADC =9
6348  4A11- 29 0F      NUMBH1  AND =$F
6349  4A13- 0A                 ASL A
6350  4A14- 0A                 ASL A
6351  4A15- 0A                 ASL A
6352  4A16- 0A                 ASL A
6353  4A17- A0 03              LDY =3
6354  4A19- 0A         NUMBH2  ASL A
6355  4A1A- 26 9B              ROL MANT+3
6356  4A1C- 26 9A              ROL MANT+2
6357  4A1E- 26 99              ROL MANT+1
6358  4A20- 26 98              ROL MANT
6359  4A22- 10 03              BPL *+5
6360  4A24- 4C 0F 37           JMP QERR        INPUT TOO LARGE

----------------------------------------------------------------------

GRAPHIC BASIC - FILE HANDLING      19/11/19   R65 ASSEMBLER  PAGE 39

6361  4A27- 88                 DEY
6362  4A28- 10 EF              BPL NUMBH2
6363  4A2A- 4C 01 4A           JMP NUMBH0
6364                   *
6365  4A2D- A2 00      NUMBH3  LDX =0
6366  4A2F- 86 45              STX RESTYP
6367  4A31- 86 A6              STX DYADIC+7
6368  4A33- 86 9C              STX SIGN
6369  4A35- A2 A0              LDX =$A0
6370  4A37- A5 98              LDA MANT
6371  4A39- 49 FF              EOR =$FF
6372  4A3B- 2A                 ROL A
6373  4A3C- 86 97              STX EXP
6374  4A3E- 4C A4 33           JMP NORMAL
6375                   *
6376                   *
6377                   * MERGE: MERGE PROGRAM TO OLD ONE
6378                   *********************************
6379                   *
6380  4A41- 20 DC 41   MERGE   JSR GETBF4      GET NAME ETC.
6381  4A44- A5 63              LDA STVAR
6382  4A46- A6 64              LDX STVAR+1
6383  4A48- 38                 SEC
6384  4A49- E9 03              SBC =3
6385  4A4B- B0 01              BCS *+3
6386  4A4D- CA                 DEX
6387  4A4E- 4C 00 42           JMP LOAD1+4
6388                   *
6389                   * DIR: PRINT DIRECTORY
6390                   **********************
6391                   *
6392  4A51- A2 00      DIR     LDX =0
6393  4A53- B0 03              BCS *+5
6394  4A55- 20 FD 36           JSR NUMEXP+3
6395  4A58- 86 DC              STX FILDRV
6396  4A5A- A9 00              LDA =0
6397  4A5C- 85 DA              STA FILFLG
6398  4A5E- 8A                 TXA
6399  4A5F- 29 02              AND =2
6400  4A61- D0 03              BNE *+5
6401  4A63- 4C 13 20           JMP DDIR
6402  4A66- 4C 10 20           JMP TDIR
6403                   *
6404                   *
6405                   * DELETE: DELETE DISK FILE
6406                   **************************
6407                   *
6408  4A69- 20 DC 41   DELBAS  JSR GETBF4
6409  4A6C- 20 0C F0           JSR DELETE
6410  4A6F- F0 03              BEQ *+5

----------------------------------------------------------------------

GRAPHIC BASIC - FILE HANDLING      19/11/19   R65 ASSEMBLER  PAGE 40

6411  4A71- 4C FF 44           JMP FILERR
6412  4A74- 60                 RTS
6413                   *
6414                   * STA: STATUS FUNCTION
6415                   **********************
6416                   *
6417  4A75- 20 00 37   STA     JSR NUMEXP+6    CONVERT TO BYTE
6418  4A78- E0 03              CPX =3
6419  4A7A- D0 34              BNE STA1
6420                   *
6421  4A7C- A6 AE              LDX XCURS
6422  4A7E- A4 AF              LDY YCURS
6423  4A80- A9 1C              LDA =28
6424  4A82- 78                 SEI
6425  4A83- 8D E0 14           STA MULTA
6426  4A86- 8C E1 14           STY MULTB
6427  4A89- 8A                 TXA
6428  4A8A- 4A                 LSR A
6429  4A8B- 4A                 LSR A
6430  4A8C- 4A                 LSR A
6431  4A8D- 18                 CLC
6432  4A8E- 6D E2 14           ADC MULTR
6433  4A91- 85 AC              STA GRPNT
6434  4A93- AD E3 14           LDA MULTR+1
6435  4A96- 58                 CLI
6436  4A97- 69 07              ADC =$07
6437  4A99- 85 AD              STA GRPNT+1
6438  4A9B- 8A                 TXA
6439  4A9C- 29 07              AND =7
6440  4A9E- AA                 TAX
6441  4A9F- BD E1 4A           LDA GRMASK,X
6442  4AA2- A2 00              LDX =0
6443  4AA4- 21 AC              AND (GRPNT,X)
6444  4AA6- F0 02              BEQ *+4
6445  4AA8- A9 01              LDA =1
6446  4AAA- A8                 TAY
6447  4AAB- A9 00      STA6    LDA =0
6448  4AAD- 4C DD 2F           JMP INTFLP
6449                   *
6450  4AB0- B0 1B      STA1    BCS STA5
6451  4AB2- CA                 DEX
6452  4AB3- 10 03              BPL STA2
6453  4AB5- 4C FF 3B           JMP FRE
6454                   *
6455  4AB8- D0 0D      STA2    BNE STA3
6456  4ABA- 38                 SEC
6457  4ABB- A5 63              LDA STVAR
6458  4ABD- E5 61              SBC STPROG
6459  4ABF- A8                 TAY
6460  4AC0- A5 64              LDA STVAR+1

----------------------------------------------------------------------

GRAPHIC BASIC - FILE HANDLING      19/11/19   R65 ASSEMBLER  PAGE 41

6461  4AC2- E5 62              SBC STPROG+1
6462  4AC4- 4C DD 2F           JMP INTFLP
6463                   *
6464  4AC7- AC 80 17   STA3    LDY VFLAG
6465  4ACA- 4C AB 4A           JMP STA6
6466                   *
6467  4ACD- 8A         STA5    TXA
6468  4ACE- 20 5C 44           JSR SRFILN
6469  4AD1- F0 04              BEQ *+6
6470  4AD3- A0 00              LDY =0
6471  4AD5- F0 D4              BEQ STA6
6472                   *
6473  4AD7- B9 39 03           LDA FIDRTB,Y
6474  4ADA- 0A                 ASL A
6475  4ADB- 2A                 ROL A
6476  4ADC- A8                 TAY
6477  4ADD- C8                 INY
6478  4ADE- 4C AB 4A           JMP STA6
6479                   *
6480  4AE1- 80 40 20   GRMASK  BYT $80,$40,$20
6481  4AE4- 10 08 04           BYT $10,$08,$04
6482  4AE7- 02 01              BYT $02,$01
6483                   *
6484                   * OUT: SET OUTPUT DEVICE
6485                   ************************
6486                   *
6487  4AE9- C9 00      OUT     CMP =0
6488  4AEB- D0 17              BNE OUT2
6489  4AED- AD 80 17           LDA VFLAG
6490  4AF0- 29 7F              AND =$7F
6491  4AF2- 8D 80 17           STA VFLAG
6492  4AF5- A2 01              LDX =1
6493  4AF7- BD C6 42   OUT1    LDA DEVTB,X
6494  4AFA- 8D 8C 17           STA VAUTOP
6495  4AFD- BD CA 42          LDA DEVTB+4,X
6496  4B00- 8D 8D 17           STA VAUTOP+1
6497  4B03- 60                 RTS
6498                   *
6499  4B04- 20 FD 36   OUT2    JSR NUMEXP+3
6500  4B07- E0 00              CPX =0
6501  4B09- F0 E2              BEQ OUT+4
6502  4B0B- AD 80 17           LDA VFLAG
6503  4B0E- 09 08              ORA =8
6504  4B10- 8D 80 17           STA VFLAG
6505  4B13- E0 04              CPX =4
6506  4B15- 90 E0              BCC OUT1
6507                   *
6508  4B17- A9 30              LDA =<OUT4
6509  4B19- 8D 8C 17           STA VAUTOP
6510  4B1C- A9 4B              LDA =>OUT4

----------------------------------------------------------------------

GRAPHIC BASIC - FILE HANDLING      19/11/19   R65 ASSEMBLER  PAGE 42

6511  4B1E- 8D 8D 17           STA VAUTOP+1
6512  4B21- 8A                 TXA
6513  4B22- 20 5C 44           JSR SRFILN
6514  4B25- F0 06              BEQ *+8
6515  4B27- 20 ED 4A           JSR OUT+4
6516  4B2A- 4C 5E 45           JMP NFERR
6517                   *
6518  4B2D- 84 CD              STY OUTSAV
6519  4B2F- 60                 RTS
6520                   *
6521  4B30- A6 CD      OUT4    LDX OUTSAV
6522  4B32- 4C 81 45           JMP OUTFIL+2
6523                   *
6524                   *
6525                   * RENUMBERING
6526                   *************
6527                   *
6528                   LINBUF  EQU BUFFER-2
6529                   SAVPC   EQU XLOW
6530                   BEGIN   EQU XINCR
6531                   STEP    EQU YINCR
6532                   *
6533                   * START OF PROGRAM
6534                   *
6535  4B35- A2 0A      RENUMB  LDX =10         SET DEFAULT LINE #
6536  4B37- 86 05              STX INTEG
6537  4B39- A2 00              LDX =0
6538  4B3B- 86 06              STX INTEG+1
6539  4B3D- B0 03              BCS *+5
6540  4B3F- 20 4F 28           JSR FETCHI
6541  4B42- A6 05              LDX INTEG
6542  4B44- 86 B0              STX BEGIN
6543  4B46- A6 06              LDX INTEG+1
6544  4B48- 86 B1              STX BEGIN+1
6545  4B4A- A2 0A              LDX =10         DEFAULT STEP SIZE
6546  4B4C- C9 2C              CMP =','
6547  4B4E- D0 03              BNE *+5
6548  4B50- 20 FA 36           JSR NUMEXP
6549  4B53- 86 B2              STX STEP
6550  4B55- 20 A0 25           JSR CLR1-3
6551                   *
6552                   *
6553                   * FILL BUFFER WITH OLD LINE #'S AND
6554                   * RENUMBER THE BEGINNING ONLY
6555                   *
6556  4B58- A9 FE      COPNUM  LDA =<LINBUF
6557  4B5A- 85 5A              STA TEMP8
6558  4B5C- A9 BF              LDA =>LINBUF
6559  4B5E- 85 5B              STA TEMP8+1
6560  4B60- A5 61              LDA STPROG      BEGIN OF TEXT

----------------------------------------------------------------------

GRAPHIC BASIC - FILE HANDLING      19/11/19   R65 ASSEMBLER  PAGE 43

6561  4B62- 85 58              STA TEMP1
6562  4B64- A5 62              LDA STPROG+1
6563  4B66- 85 59              STA TEMP1+1
6564  4B68- 20 97 4C           JSR SETFAC      SET NEW LINE # CNTR
6565                   *
6566  4B6B- A0 03      COP10   LDY =3
6567  4B6D- B1 58      COP20   LDA (TEMP1),Y
6568  4B6F- 91 5A              STA (TEMP8),Y
6569  4B71- B9 95 00           LDA MANT-3,Y
6570  4B74- 91 58              STA (TEMP1),Y
6571  4B76- 88                 DEY
6572  4B77- C0 01              CPY =1
6573  4B79- D0 F2              BNE COP20
6574  4B7B- B1 58              LDA (TEMP1),Y
6575  4B7D- F0 10              BEQ COP80
6576  4B7F- 20 B7 4C           JSR BUPX2
6577  4B82- AA                 TAX
6578  4B83- 88                 DEY
6579  4B84- B1 58              LDA (TEMP1),Y
6580  4B86- 85 58              STA TEMP1
6581  4B88- 86 59              STX TEMP1+1
6582  4B8A- 20 A0 4C           JSR ADDSTP
6583  4B8D- D0 DC              BNE COP10
6584                   *
6585  4B8F- A9 FF      COP80   LDA =$FF
6586  4B91- C8                 INY
6587  4B92- 91 5A              STA (TEMP8),Y
6588  4B94- C8                 INY
6589  4B95- 91 5B              STA (TEMP8+1),Y
6590                   *
6591  4B97- A5 61      RENN    LDA STPROG
6592  4B99- 85 A9              STA PC
6593  4B9B- A5 62              LDA STPROG+1
6594  4B9D- 85 AA              STA PC+1
6595  4B9F- D0 03              BNE RN15
6596  4BA1- 20 C1 4C   RN10    JSR GRAB
6597  4BA4- 20 C1 4C   RN15    JSR GRAB
6598  4BA7- D0 09              BNE RN20
6599  4BA9- 20 A0 25           JSR CLR1-3
6600  4BAC- 20 43 24           JSR ADLNP0
6601  4BAF- 4C 7B 23           JMP WARMST
6602  4BB2- 20 C1 4C   RN20    JSR GRAB
6603  4BB5- 20 C1 4C           JSR GRAB
6604  4BB8- 20 C1 4C   RN30    JSR GRAB
6605  4BBB- AA         RN35    TAX
6606  4BBC- F0 E3              BEQ RN10        EOL?
6607                   *
6608  4BBE- A2 04      RN40    LDX =4
6609  4BC0- DD CB 4C   RN45    CMP TOKEN-1,X
6610  4BC3- F0 05              BEQ RN50

----------------------------------------------------------------------

GRAPHIC BASIC - FILE HANDLING      19/11/19   R65 ASSEMBLER  PAGE 44

6611  4BC5- CA                 DEX
6612  4BC6- D0 F8              BNE RN45
6613  4BC8- F0 EE              BEQ RN30        ALL TRIED, FORGET IT
6614  4BCA- A5 A9      RN50    LDA PC
6615  4BCC- 85 B4              STA SAVPC
6616  4BCE- A5 AA              LDA PC+1
6617  4BD0- 85 B5              STA SAVPC+1
6618  4BD2- 20 0D 27           JSR FETCH
6619  4BD5- B0 E4              BCS RN35
6620  4BD7- 20 4F 28           JSR FETCHI
6621  4BDA- 20 10 4C           JSR FINUM
6622  4BDD- A5 B4              LDA SAVPC
6623  4BDF- 85 A9              STA PC
6624  4BE1- A5 B5              LDA SAVPC+1
6625  4BE3- 85 AA              STA PC+1
6626  4BE5- A0 00              LDY =0
6627  4BE7- A2 00              LDX =0
6628                   *
6629  4BE9- BD 01 01   RN60    LDA $101,X
6630  4BEC- F0 0F              BEQ RN70
6631  4BEE- 48                 PHA
6632  4BEF- 20 0D 27           JSR FETCH
6633  4BF2- 90 03              BCC RN65
6634  4BF4- 20 47 4C           JSR MOVUP
6635  4BF7- 68         RN65    PLA
6636  4BF8- 91 A9              STA (PC),Y
6637  4BFA- E8                 INX
6638  4BFB- D0 EC              BNE RN60
6639                   *
6640  4BFD- 20 0D 27  RN70    JSR FETCH
6641  4C00- B0 08      RN75    BCS RN80
6642  4C02- 20 69 4C   RN78    JSR MOVDWN
6643  4C05- 20 13 27           JSR FETCH1
6644  4C08- 90 F8              BCC RN78
6645  4C0A- C9 2C      RN80    CMP =','
6646  4C0C- F0 BC              BEQ RN50
6647  4C0E- D0 AB              BNE RN35
6648                   *
6649                   *
6650                   * FIND OLD # IN BUFFER, GENERATE A NEW
6651                   * LINE #
6652                   *
6653  4C10- 20 97 4C   FINUM   JSR SETFAC
6654  4C13- A9 00              LDA =<BUFFER
6655  4C15- 85 5A              STA TEMP8
6656  4C17- A9 C0              LDA =>BUFFER
6657  4C19- 85 5B              STA TEMP8+1
6658  4C1B- A0 01      FN10    LDY =1
6659  4C1D- B1 5A              LDA (TEMP8),Y
6660  4C1F- C5 06              CMP INTEG+1

----------------------------------------------------------------------

GRAPHIC BASIC - FILE HANDLING      19/11/19   R65 ASSEMBLER  PAGE 45

6661  4C21- F0 15              BEQ FN50
6662  4C23- C9 FF              CMP =$FF
6663  4C25- D0 18              BNE FN60
6664  4C27- 85 98              STA MANT
6665  4C29- 85 97              STA MANT-1
6666  4C2B- A5 97      FN20    LDA MANT-1
6667  4C2D- 85 99              STA MANT+1
6668  4C2F- A2 90              LDX =$90
6669  4C31- 38                 SEC
6670  4C32- 20 4D 35           JSR FLOAT
6671  4C35- 4C 59 47           JMP OUTCON
6672                   *
6673  4C38- 88         FN50    DEY
6674  4C39- B1 5A              LDA (TEMP8),Y
6675  4C3B- C5 05              CMP INTEG
6676  4C3D- F0 EC              BEQ FN20
6677  4C3F- 20 A0 4C   FN60    JSR ADDSTP
6678  4C42- 20 B7 4C           JSR BUPX2
6679  4C45- D0 D4              BNE FN10
6680                   *
6681                   *
6682                   * MOVE TEXT UP ONE CHAR
6683                   *
6684  4C47- 20 86 4C   MOVUP   JSR SETPTR
6685  4C4A- A0 00      MU10    LDY =0
6686  4C4C- B1 58              LDA (TEMP1),Y
6687  4C4E- C8                 INY
6688  4C4F- 91 58              STA (TEMP1),Y
6689  4C51- 20 AC 4C           JSR CMPX
6690  4C54- D0 08              BNE MU40
6691  4C56- E6 63              INC STVAR
6692  4C58- D0 02              BNE MU20
6693  4C5A- E6 64              INC STVAR+1
6694                   *
6695  4C5C- 88         MU20    DEY
6696  4C5D- 60                 RTS
6697  4C5E- A4 58      MU40    LDY TEMP1
6698  4C60- D0 02              BNE MU60
6699  4C62- C6 59              DEC TEMP1+1
6700  4C64- C6 58      MU60    DEC TEMP1
6701  4C66- 4C 4A 4C           JMP MU10
6702                   *
6703                   *
6704                   * MOVE TEXT DOWN ONE CHAR
6705                   *
6706  4C69- 20 86 4C   MOVDWN  JSR SETPTR
6707  4C6C- A0 01      MD10    LDY =1
6708  4C6E- B1 5A              LDA (TEMP8),Y
6709  4C70- 88                 DEY
6710  4C71- 91 5A              STA (TEMP8),Y

----------------------------------------------------------------------

GRAPHIC BASIC - FILE HANDLING      19/11/19   R65 ASSEMBLER  PAGE 46

6711  4C73- 20 AC 4C           JSR CMPX
6712  4C76- F0 05              BEQ MD30
6713  4C78- 20 BA 4C   MD20    JSR BUPX1
6714  4C7B- D0 EF              BNE MD10
6715  4C7D- A4 63      MD30    LDY STVAR
6716  4C7F- D0 02              BNE MD35
6717  4C81- C6 64              DEC STVAR+1
6718  4C83- C6 63      MD35    DEC STVAR
6719  4C85- 60         MD40    RTS
6720                   *
6721                   *
6722                   * SET POINTER FOR MOVE
6723                   *
6724  4C86- A5 63      SETPTR  LDA STVAR
6725  4C88- 85 58              STA TEMP1
6726  4C8A- A5 64              LDA STVAR+1
6727  4C8C- 85 59              STA TEMP1+1
6728  4C8E- A5 A9              LDA PC
6729  4C90- 85 5A              STA TEMP8
6730  4C92- A5 AA              LDA PC+1
6731  4C94- 85 5B              STA TEMP8+1
6732  4C96- 60                 RTS
6733                   *
6734                   *
6735                   * SETUP MANT TO GENERATE NEW LINE #'S
6736                   *
6737  4C97- A5 B0      SETFAC  LDA BEGIN
6738  4C99- 85 97              STA MANT-1
6739  4C9B- A5 B1              LDA BEGIN+1
6740  4C9D- 85 98              STA MANT
6741  4C9F- 60                 RTS
6742                   *
6743                   *
6744                   * ADD STEP TO MANT
6745                   *
6746  4CA0- A5 97      ADDSTP  LDA MANT-1
6747  4CA2- 18                 CLC
6748  4CA3- 65 B2              ADC STEP
6749  4CA5- 85 97              STA MANT-1
6750  4CA7- 90 02              BCC ARTS
6751  4CA9- E6 98              INC MANT
6752  4CAB- 60         ARTS    RTS
6753                   *
6754                   *
6755                   * COMPARE THE TWO INDICES
6756                   * Z-FLAG SET OF EQUAL
6757                   *
6758  4CAC- A5 58      CMPX    LDA TEMP1
6759  4CAE- C5 5A              CMP TEMP8
6760  4CB0- D0 04              BNE CRTS

----------------------------------------------------------------------

GRAPHIC BASIC - FILE HANDLING      19/11/19   R65 ASSEMBLER  PAGE 47

6761  4CB2- A5 59              LDA TEMP1+1
6762  4CB4- C5 5B              CMP TEMP8+1
6763  4CB6- 60         CRTS    RTS
6764                   *
6765                   *
6766                   * INCREMENT TEMP8 1 OR 2
6767                   *
6768  4CB7- 20 BA 4C   BUPX2   JSR BUPX1
6769  4CBA- E6 5A      BUPX1   INC TEMP8
6770  4CBC- D0 02              BNE BRTS
6771  4CBE- E6 5B              INC TEMP8+1
6772  4CC0- 60         BRTS    RTS
6773                   *
6774                   *
6775                   * GET A CHAR, SET Z FLAG
6776                   *
6777  4CC1- A0 00      GRAB    LDY =0
6778  4CC3- E6 A9              INC PC
6779  4CC5- D0 02              BNE GR10
6780  4CC7- E6 AA              INC PC+1
6781  4CC9- B1 A9      GR10    LDA (PC),Y
6782  4CCB- 60                 RTS
6783                   *
6784                   *
6785                   * TABLE OF TOKENS
6786                   *
6787  4CCC- B4         TOKEN   BYT $B4         THEN
6788  4CCD- 89                 BYT $89         GOTO
6789  4CCE- 8D                 BYT $8D         GOSUB
6790  4CCF- 8C                 BYT $8C         RESTORE
6791                   *
6792                           TIT GRAPHIC BASIC - GRAPHPACK
6793                           PAG

----------------------------------------------------------------------

GRAPHIC BASIC - GRAPHPACK          19/11/19   R65 ASSEMBLER  PAGE 48

6794                   *
6795                   **************************
6796                   * R65 SYSTEM GRAPHPACK 2 *
6797                   **************************
6798                   *
6799                   * VERSION FOR R65 GRAPHIC BASIC V6.2
6800                   *
6801                   * SUBROUTINES FOR GRAPHIC DISPLAY ON THE R65
6802                   * VIDEO INTERFACE
6803                   *
6804                   * INIT          INITIALIZE GRAPHIC DISPLAY AND
6805                   *               CRT MEMORY
6806                   * CLEAR         CLEAR GRAPHIC DISPLAY AND SET
6807                   *               GRAPHIC CURSOR TO (0/0)
6808                   * MOVE (X,Y)    MOVE GRAPHIC CURSOR TP (X,Y)
6809                   * PLOT (X,Y)    PLOT A DOT AT (X,Y) AND MOVE
6810                   *               GRAPHICS CURSOR
6811                   * DRAW (X,Y)    DRAW A STRAIGHT LINE FROM THE
6812                   *               CURRENT POSITION OF THE GRAPHIC
6813                   *               CURSOR TO (X,Y) AND MOVE THE
6814                   *               GRAPHIC CURSOR
6815                   * CHAR (A)      SET STANDARD UPPER CASE ASCII
6816                   *               CHAR IN A TO CURRENT POSITION
6817                   *               OF THE GRAPHIC CURSOR, INCRE-
6818                   *               MENT THE X-POSITION BY 8
6819                   *               8*8 MATRIX IS USED
6820                   *
6821                   * COORDINATES:
6822                   *
6823                   * THE (0/0) IS IN THE UPPER LEFT, INCREMENTING
6824                   * X TO THE RIGHT, INCREMENTING Y DOWN. IN GRAPHI
6825                   * BASIC, INCREMENTING Y GOES UP
6826                   *
6827                   * 0 <= X <= 223         0 <= Y <= 117
6828                   *
6829                   * COORDINATES, WHICH EXCEED THE LIMITS, ARE
6830                   * TRUNCATED TO THE MAXIMAL VALUE
6831                   *
6832                   *
6833                   * PLOT MODE FLAG: (PRESET TO 0 BY INIT)
6834                   * BIT 7:        0 PLOT WHITE
6835                   *               1 PLOT BLACK
6836                   * BIT 6:        0 NORMAL DRAWING MODE
6837                   *                1 EXCLUSIVE OR DRAWING
6838                   *
6839                   *
6840                   *
6841                   *
6842                   *
6843                   VIPNT2  EQU $EB         SECOND VIDEO POINTER

----------------------------------------------------------------------

GRAPHIC BASIC - GRAPHPACK          19/11/19   R65 ASSEMBLER  PAGE 49

6844                   *
6845                   *
6846                   * CALLS TO SYSTEM SUBROUTINES
6847                   *****************************
6848                   *
6849  4CD0- 4C 45 E2   FILL    JMP $E245
6850                   *
6851                   *
6852                   * INIT
6853                   ******
6854                   * CONFIGURE VIDEO MEMORY FOR SWAPPED ALPHA
6855                   * AND GRAPHICS DISPLAY, SET THE GRAPHIC
6856                   * CURSOR TP (0/0)AND CLEAR THE GRAPHIC MEMORY
6857                   *
6858                   *
6859  4CD3- 20 1E E0   INITP   JSR IGRAPH
6860                   *
6861  4CD6- A9 07              LDA =$07
6862  4CD8- 85 B8              STA GRPAGE
6863  4CDA- A9 00              LDA =0
6864  4CDC- 85 AB              STA PLMODE      CLEAR MODE FLAGS
6865                   *
6866                   *
6867                   * CLEAR
6868                   *******
6869                   * CLEAR GRAPHIC DISPLAY AND MOVE GRAPHIC
6870                   * CURSOR TO (0/0)
6871                   *
6872  4CDE- AD 80 17   CLEARP  LDA VFLAG
6873  4CE1- 29 20              AND =$20
6874  4CE3- D0 01              BNE *+3
6875  4CE5- 60                 RTS
6876  4CE6- A5 B8              LDA GRPAGE
6877  4CE8- A8                 TAY
6878  4CE9- 18                 CLC
6879  4CEA- 69 0C              ADC =$C         12 PAGES GRAPHIC
6880  4CEC- A2 E8              LDX =$E8
6881  4CEE- 86 EB              STX VIPNT2
6882  4CF0- 85 EC              STA VIPNT2+1
6883  4CF2- A9 00              LDA =0
6884  4CF4- AA                 TAX
6885  4CF5- 20 D0 4C           JSR FILL
6886  4CF8- A0 75              LDY =117
6887  4CFA- A2 00              LDX =0
6888  4CFC- 84 AF              STY YCURS
6889  4CFE- 86 AE             STX XCURS
6890  4D00- 60                 RTS
6891                   *
6892                   *
6893                   * MOVE (X,Y)

----------------------------------------------------------------------

GRAPHIC BASIC - GRAPHPACK          19/11/19   R65 ASSEMBLER  PAGE 50

6894                   ************
6895                   * MOVE GRAPHIC CURSOR TO X,Y. TEST DISPLAY
6896                   * LIMITS
6897                   *
6898  4D01- 20 09 4D   MOVEP   JSR LIMIT
6899  4D04- 86 AE              STX XCURS
6900  4D06- 84 AF              STY YCURS
6901  4D08- 60                 RTS
6902                   *
6903                   *
6904  4D09- E0 E0      LIMIT   CPX =224
6905  4D0B- 90 02              BCC *+4
6906  4D0D- A2 DF              LDX =223
6907  4D0F- C0 76              CPY =118
6908  4D11- 90 02              BCC *+4
6909  4D13- A0 75              LDY =117
6910  4D15- 60                 RTS
6911                   *
6912                   *
6913                   * PLOT (X,Y)
6914                   ************
6915                   * MOVE GRAPHIC CURSOR TO (X,Y), TEST DISPLAY
6916                   * LIMITS AND SET THE DOT AT (X,Y)
6917                   *
6918  4D16- 20 01 4D   PLOTP   JSR MOVEP
6919  4D19- 8E AE 03           STX GRX
6920  4D1C- 8C AF 03           STY GRY
6921  4D1F- A5 AB              LDA PLMODE
6922  4D21- 8D B0 03           STA GRC
6923  4D24- 4C 15 C8           JMP EPLOT
6924                   *
6925                   *
6926                   * DRAW (X,Y)
6927                   ************
6928                   * DRAW A LINE FROM CURRENT POSITION OF THE
6929                   * GRAPHIC CURSOR TO (X,Y). SET GRAPHIC
6930                   * CURSOR TO X,Y.
6931                   *
6932  4D27- A5 AE      DRAWP   LDA XCURS       OLD CURSOR TO GRX,GRY
6933  4D29- 8D AE 03           STA GRX
6934  4D2C- A5 AF              LDA YCURS
6935  4D2E- 8D AF 03           STA GRY
6936                   *
6937  4D31- 20 01 4D           JSR MOVEP
6938  4D34- A5 AB              LDA PLMODE
6939  4D36- 8D B0 03           STA GRC
6940  4D39- 8A                 TXA
6941  4D3A- CD AE 03           CMP GRX         SAME X?
6942  4D3D- D0 1E              BNE DRAW2
6943                   *

----------------------------------------------------------------------

GRAPHIC BASIC - GRAPHPACK          19/11/19   R65 ASSEMBLER  PAGE 51

6944  4D3F- 98                 TYA
6945  4D40- 38                 SEC
6946  4D41- ED AF 03           SBC GRY
6947  4D44- 90 09              BCC DRAW1       SKIP IF NEW Y LOWER
6948                   *
6949  4D46- 8D B1 03           STA GRN         NUMBER OF POINTS
6950  4D49- EE B1 03           INC GRN
6951  4D4C- 4C 21 C8           JMP EDRAWY
6952                   *
6953  4D4F- 49 FF      DRAW1   EOR =$FF
6954  4D51- 18                 CLC
6955  4D52- 69 02              ADC =2
6956  4D54- 8D B1 03           STA GRN
6957  4D57- 8C AF 03           STY GRY
6958  4D5A- 4C 21 C8           JMP EDRAWY
6959                   *
6960  4D5D- 98         DRAW2   TYA
6961  4D5E- CD AF 03           CMP GRY         SAME Y
6962  4D61- D0 1E              BNE DRAW4
6963  4D63- 8A                 TXA
6964  4D64- 38                 SEC
6965  4D65- ED AE 03           SBC GRX
6966  4D68- 90 09              BCC DRAW3       SKIP,IF NEW X LOWER
6967                   *
6968  4D6A- EE B1 03           INC GRN
6969  4D6D- 8D B1 03           STA GRN
6970  4D70- 4C 1E C8           JMP EDRAWX
6971                   *
6972  4D73- 49 FF      DRAW3   EOR =$FF
6973  4D75- 18                 CLC
6974  4D76- 69 02              ADC =2
6975  4D78- 8D B1 03           STA GRN
6976  4D7B- 8E AE 03           STX GRX
6977  4D7E- 4C 1E C8           JMP EDRAWX
6978                   *
6979  4D81- A9 00      DRAW4   LDA =0
6980  4D83- 85 B1              STA XINCR+1
6981  4D85- 85 B3              STA YINCR+1
6982  4D87- 8A                 TXA             BOTH X AND Y DIFF
6983  4D88- 38                 SEC
6984  4D89- ED AE 03           SBC GRX
6985  4D8C- 85 B0              STA XINCR
6986  4D8E- B0 02              BCS DRAW5
6987  4D90- C6 B1              DEC XINCR+1
6988  4D92- 98         DRAW5   TYA
6989  4D93- 38                 SEC
6990  4D94- ED AF 03           SBC GRY
6991  4D97- 85 B2              STA YINCR
6992  4D99- B0 02              BCS DRAW6
6993  4D9B- C6 B3              DEC YINCR+1

----------------------------------------------------------------------

GRAPHIC BASIC - GRAPHPACK          19/11/19   R65 ASSEMBLER  PAGE 52

6994  4D9D- A9 80      DRAW6   LDA =$80        ROUNDING POSITIONS
6995  4D9F- 85 B4              STA XLOW
6996  4DA1- 85 B5              STA YLOW
6997  4DA3- A9 00              LDA =0
6998  4DA5- 8D B1 03           STA GRN
6999  4DA8- AD AE 03           LDA GRX
7000  4DAB- 85 84              STA TEMP6
7001  4DAD- AD AF 03           LDA GRY
7002  4DB0- 85 85              STA TEMP6+1
7003  4DB2- 20 15 C8           JSR EPLOT       PLOT FIRST DOT
7004  4DB5- 18         DRAW7   CLC
7005  4DB6- A5 B4              LDA XLOW
7006  4DB8- 65 B0              ADC XINCR
7007  4DBA- 85 B4              STA XLOW
7008  4DBC- AD AE 03           LDA GRX
7009  4DBF- 65 B1              ADC XINCR+1
7010  4DC1- 8D AE 03           STA GRX
7011  4DC4- 18                 CLC
7012  4DC5- A5 B5              LDA YLOW
7013  4DC7- 65 B2              ADC YINCR
7014  4DC9- 85 B5              STA YLOW
7015  4DCB- AD AF 03           LDA GRY
7016  4DCE- 65 B3              ADC YINCR+1
7017  4DD0- 8D AF 03           STA GRY
7018                   *
7019  4DD3- AD AE 03           LDA GRX         PLOT ONLY IF CHANGE
7020  4DD6- C5 84              CMP TEMP6
7021  4DD8- D0 07              BNE DRAW8
7022  4DDA- AD AF 03           LDA GRY
7023  4DDD- C5 85              CMP TEMP6+1
7024  4DDF- F0 0D              BEQ DRAW9       BOTH EQUAL, DON'T PLOT
7025                   *
7026  4DE1- AD AE 03   DRAW8   LDA GRX
7027  4DE4- 85 84              STA TEMP6
7028  4DE6- AD AF 03           LDA GRY
7029  4DE9- 85 85              STA TEMP6+1
7030  4DEB- 20 15 C8           JSR EPLOT       PLOT NEXT 256 DOTS
7031                   *
7032  4DEE- CE B1 03   DRAW9   DEC GRN
7033  4DF1- D0 C2              BNE DRAW7
7034                   *
7035  4DF3- 60                 RTS
7036                   *
7037                   *
7038                   * CHAR0 (A)
7039                   ***********
7040                   * SET STANDARD UPPER CASE ASCII CHAR I A
7041                   * TO THE CURRENT POSITION OF THE GRAPHIC
7042                   * CURSOR, THEN MOVE 8 POSITIONS RIGHT
7043                   *

----------------------------------------------------------------------

GRAPHIC BASIC - GRAPHPACK          19/11/19   R65 ASSEMBLER  PAGE 53

7044  4DF4- A6 AE      CHAR0   LDX XCURS
7045  4DF6- E0 D8              CPX =216
7046  4DF8- 90 02              BCC *+4
7047  4DFA- A2 D7              LDX =215
7048  4DFC- A4 AF              LDY YCURS
7049  4DFE- C0 6E             CPY =110
7050  4E00- 90 02              BCC *+4
7051  4E02- A0 6D              LDY =109
7052                   *
7053  4E04- 8E AE 03           STX GRX
7054  4E07- 8C AF 03           STY GRY
7055  4E0A- 8D B0 03           STA GRC
7056  4E0D- 8A                 TXA
7057  4E0E- 18                 CLC
7058  4E0F- 69 08              ADC =8
7059  4E11- C9 D8              CMP =216
7060  4E13- 90 02              BCC *+4
7061  4E15- A9 D7              LDA =215
7062  4E17- 85 AE              STA XCURS
7063  4E19- 4C 18 C8           JMP EPLOTCH
7064                   *
7065                   *
7066                   * NLOAD
7067                   *******
7068                   * NEW LOAD - ALSO LOADS PROGRAM FROM OPEN
7069                   * SEQUENTIAL FILE, IF CALLED LOAD #D1;
7070                   * WHERE D1 IS A FILE OPEN FOR READ
7071                   *
7072  4E1C- C9 23      NLOAD   CMP ='#'        IS IT A OPEN DEVICE?
7073  4E1E- F0 03              BEQ *+5
7074  4E20- 4C F3 41           JMP LOAD        NO, LOAD BINARY FILE
7075                   *
7076  4E23- 20 13 27           JSR FETCH1
7077  4E26- 20 AB 45           JSR SETINP      SET INPUT DEVICE
7078  4E29- A9 2C      NLOAD1  LDA =$2C
7079  4E2B- 85 06              STA INTEG+1
7080  4E2D- 20 FD 30           JSR INPUT2
7081  4E30- A5 07              LDA INBUFF      LOAD FIRST CHARACTER
7082  4E32- F0 19              BEQ NLOADE      SKIP, IF EMPTY
7083  4E34- A2 07              LDX =<INBUFF
7084  4E36- A0 00              LDY =>INBUFF
7085  4E38- 86 A9              STX PC
7086  4E3A- 84 AA              STY PC+1
7087  4E3C- 20 13 27           JSR FETCH1
7088  4E3F- 20 A4 23           JSR INSL0
7089  4E42- A9 2E              LDA ='.'        HEART BEAT
7090  4E44- 20 BC 2F           JSR OUTCHR
7091  4E47- 20 43 24           JSR ADLNP0
7092  4E4A- 4C 29 4E           JMP NLOAD1      NEXT LINE
7093                   *

----------------------------------------------------------------------

GRAPHIC BASIC - GRAPHPACK          19/11/19   R65 ASSEMBLER  PAGE 54

7094                   *
7095  4E4D- 20 BA 30   NLOADE  JSR GETEND      RESET INPUT DEVICE
7096  4E50- A9 00              LDA =0          CLOSE ALL OPEN FILES
7097  4E52- 20 3B 45           JSR CLOSEBS     AND RETURN
7098  4E55- 4C 7B 23           JMP WARMST
7099                   *
7100                   *
7101  4E58-                    END
LABELS=029D
ERRORS=02
RECORDS=35
