----------------------------------------------------------------------

GRAPHIC BASIC - GRAPHPACK          07/01/82   R65 ASSEMBLER  PAGE 01

0001                   * BASIC1:A ORIGINAL 7/1/1982, RECOVERED 3/2018
0002                   *
0003                   ******************************************
0004                   * R65 EXTENDED GRAPHIC BASIC VERSION 6.1 *
0005                   ******************************************
0006                   *
0007                           TIT GRAPHIC BASIC - VARIABLES
0008                   *
0009                   * PAGE ZERO VARIABLES
0010                   *
0011                           ORG 0
0012                   *
0013  0000-            OUTDEV  BSS 1   OUTPUT DEVICE NO (CRT=0)
0014  0001-            NUMPAD  BSS 1   NO OF PAD CHAR,CURR.DEV
0015  0002-            POS     BSS 1   POSITION IN LN, CURR.DEV.
0016                   *
0017  0003-            INBNUM  BSS 2   INPUT BUFFER NUMBER
0018  0005-            INTEG   BSS 2   INTEGER
0019  0007-            INBUFF  BSS 58  INPUT BUFFER
0020  0041-            CHRSAV  BSS 2   CHAR SAVE AND COMPARE
0021  0043-            INPNT   BSS 1   INPUT BUFFER POINTER
0022                   *
0023  0044-                    BSS 1
0024  0045-            RESTYP  BSS 2   CURRENT RESULT TYPE
0025  0047-            TEMP2   BSS 1   TEMPORARY
0026  0048-            FLAG1   BSS 1   ARRAY FLAG
0027  0049-            READFL  BSS 1   READ FLAG
0028  004A-                    BSS 1
0029  004B-                    BSS 1
0030  004C-            STRSTP  BSS 2   STRING STACK POINTER
0031  004E-                    BSS 1
0032  004F-            STRST   BSS 9   STRING STACK (3 LEVELS)
0033  0058-            TEMP1   BSS 2
0034  005A-            TEMP8   BSS 2
0035  005C-            TEMP9   BSS 5
0036                   *
0037  0061-            STPROG  BSS 2   START OF USER PROG
0038  0063-            STVAR   BSS 2   START OF VARIABLE TABLE
0039  0065-            EOVAR   BSS 2   END OF VARIABLE TABLE
0040  0067-            STSPAC  BSS 2   START OF AVAILABLE SPACE
0041  0069-            BTSTRG  BSS 2   BOTTOM OF STRINGS
0042  006B-            TPSTRG  BSS 2   TOP OF STRINGS
0043  006D-            TPMEM   BSS 2   TOP OF BASIC MEMORY
0044  006F-            LINE    BSS 2   CURRENT BASIC LINE
0045  0071-            LINSAV  BSS 2   SAVED LINE
0046  0073-            PNTSAV  BSS 2   SAVED BASIC POINTER
0047  0075-            TEMP7   BSS 2
0048  0077-            DATPNT  BSS 2   DATA POINTER
0049  0079-            DTSPNT  BSS 2   DATA STATEMENT PONTER
0050  007B-            VARSYM  BSS 2   CURRENT VARIABLE SYMBOL

----------------------------------------------------------------------

GRAPHIC BASIC - VARIABLES          07/01/82   R65 ASSEMBLER  PAGE 02

0051  007D-            VARSTP  BSS 2   CURRENT VAR STRING P
0052  007F-            TEMP3   BSS 2
0053                   *
0054  0081-                    BSS 1
0055  0082-                    BSS 1
0056  0083-            LOGIC   BSS 1   LOGIC OPERATOR
0057  0084-            TEMP6   BSS 2
0058  0086-            TEMP5   BSS 2
0059  0088-                    BSS 1
0060  0089-            SIZE    BSS 1   VARIABLE SIZE
0061  008A-                    BSS 1   SET TO 4C FOR BFUNC
0062  008B-            PNT1    BSS 2   POINTER
0063  008D-                    BSS 1
0064                   *
0065                   * BLLOCK AREA
0066                   *
0067  008E-            ENDB    BSS 2   END OF BLOCK
0068  0090-            BEGINB  BSS 2   BEGIN OF BLOCK
0069  0092-                    BSS 1
0070  0093-            POINTC  BSS 1   CURRENT DIGITS AFTER DEC.P.
0071  0094-            CURREX  BSS 1   CURRENT EXP IN NUMBER
0072  0095-            TRANSP  BSS 2   TRANSFER POINTER
0073                   *
0074                   * FLP ACCU
0075                   *
0076  0097-            EXP     BSS 1   EXPONENT
0077  0098-            MANT    BSS 4   MANTISSA
0078  009C-            SIGN    BSS 1   SIGN OF MANTISSA
0079                   *
0080  009D-            CURRSG  BSS 1   CURRENT SIGN IN NUMBER
0081  009E-                    BSS 1
0082  009F-            DYADIC  BSS 10  DYADIC HOLDING AREA
0083                   *
0084  00A9-            PC      BSS 2   PROGRAM COUNTER
0085  00AB-            PLMODE  BSS 1   PLOT MODE FLAG
0086  00AC-            GRPNT   BSS 2   GRAPHIC POINTER
0087  00AE-            XCURS   BSS 1   CRAPHICS CUSROR
0088  00AF-            YCURS   BSS 1
0089  00B0-            XINCR   BSS 2   LINE DRAWING INCR
0090  00B2-            YINCR   BSS 2
0091  00B4-            XLOW    BSS 1   LINE DRAWING ROUND REG
0092  00B5-            YLOW    BSS 1
0093  00B6-            GRCNT   BSS 1   GRAPHIC COUNTER
0094  00B7-            LENGHT  BSS 1   LINE LENGTH ESTIMATE
0095  00B8-            GRPAGE  BSS 1   GRAPHICS PAGE HIGH PNT
0096  00B9-            PVECT   BSS 2   PRINT VECTOR
0097  00BB-            POSTB   BSS 4   POSITION REGISTER SAVE
0098  00BF-            SAVEXY  BSS 2   REGISTER SAVE
0099  00C1-            INPDEV  BSS 1   INPUT DEVICE
0100  00C2-            AUTOIN  BSS 1   AUTO INCREMENT

----------------------------------------------------------------------

GRAPHIC BASIC - VARIABLES          07/01/82   R65 ASSEMBLER  PAGE 03

0101  00C3-            AFILNO  BSS 1   CODE OF ACTIVE FILE
0102  00C4-            IVECT   BSS 2   INPUT VECTOR
0103  00C6-            ISAVXY  BSS 2   SAVE X,Y FOR INCHR
0104  00C8-            FORMCS  BSS 1   SAVED FORMATTING CODE
0105  00C9-            FORMCD  BSS 1   FORMATTYIONG CODE
0106  00CA-            FORMNO  BSS 1   FORMATTING NUMBER
0107  00CB-            FORMFL  BSS 1   FORMATTING FIELD LENGTH
0108  00CC-            FORMCT  BSS 1   FORMATTING COUNTER
0109  00CD-            OUTSAV  BSS 1   FILE NO FOR OUT
0110  00CE-            TEMP4   BSS 3
0111  00D1-            RNDVAL  BSS 5   RANDOM VARIABLE
0112                   *
0113                           PAG

----------------------------------------------------------------------

GRAPHIC BASIC - VARIABLES          07/01/82   R65 ASSEMBLER  PAGE 04

0114                   *
0115                   * JOB MONITOR VARIABLES
0116                   *
0117                   FILFLG  EQU $DA
0118                   FILDRV  EQU $DC
0119                   VIDPNT  EQU $E9
0120                   CURPOS  EQU $EE
0121                   LED     EQU $F1
0122                   FILNAM  EQU $0301
0123                   FILCYC  EQU $0311
0124                   FILSTP  EQU $0312
0125                   FILLOC  EQU $0313
0126                   FILSA   EQU $031A
0127                   FILEA   EQU $031C
0128                   FILNM1  EQU $0320
0129                   FILCY1  EQU $0330
0130                   FILSA1  EQU $0331
0131                   CURSEQ  EQU $0335
0132                   MAXSEQ  EQU $0336
0133                   FILBU1  EQU $0338
0134                   FIDRTB  EQU $0339
0135                   FIDVTB  EQU $0341
0136                   FIRCTB  EQU $0351
0137                   TMSEC   EQU $1747
0138                   VFLAG   EQU $1780
0139                   SFLAG   EQU $1780
0140                   CHARREG EQU $1785
0141                   NUMLIN  EQU $1789
0142                   NUMCHR  EQU $178A
0143                   VAUTOP  EQU $178C
0144                   CNTL30  EQU $17F2
0145                   *
0146  00D6-                    ORG $0380
0147                   *
0148  0380-            FISYTB  BSS 8           SYMBOLIC FLE NAMES
0149                   BUFFER  EQU $0800       BUFFER FOR RENUMBERING
0150                   *
0151                   * INTERFACE CONTROL
0152                   *
0153                   PORTB1  EQU $1400       MEMORY WRITE DISABLE
0154                   MULTA   EQU $14E0       HARDWARE MULTIPLY
0155                   MULTB   EQU $14E1
0156                   MULTR   EQU $14E2
0157                   TAPAOF  EQU $14E5
0158                   TAPBOF  EQU $14E7
0159                   USPAD   EQU $1700
0160                   *
0161                           TIT GRAPHIC BASIC- CONFIGURATION
0162                           PAG

----------------------------------------------------------------------

GRAPHIC BASIC- CONFIGURATION       07/01/82   R65 ASSEMBLER  PAGE 05

0163                   * START OF PROGRAM
0164                   *
0165  0388-                    ORG $2000
0166                   *
0167                   * ENTRY VECTORS:
0168                   *
0169  2000- 4C 4A 29           JMP COLDST
0170  2003- 4C 7B 23           JMP WARMST
0171                   *
0172                   * BASIC USER RAM MEMORY
0173                   *
0174  2006- 00 54      STRRAM  WRD $5400       START OF USER RAM
0175  2008- FF BD      ENDRAM  WRD $BDFF       END OF USER AREA
0176                   *
0177                   *
0178                   * MONITOR SUBROUTINE VECTORS
0179                   ****************************
0180                   * PART 1: MAIN EPROM ROUTINES (NO JMP)
0181                   *
0182                   GETKEY  EQU $E000
0183                   GETCHR  EQU $E003
0184                   GETLIN  EQU $E006
0185                   PRTCHR  EQU $E009
0186                   LOCRM   EQU $E00F
0187                   ICRTAL  EQU $E015
0188                   ICRTGR  EQU $E018
0189                   IGRAPH  EQU $E01E
0190                   PRTRSA  EQU $E836
0191                   *
0192                   PRTTTY  EQU $1EA0
0193                   GETTTY  EQU $1E5A
0194                   RDFILE  EQU $E815
0195                   WRFILE  EQU $E81B
0196                   DELETE  EQU $F00C
0197                   OPEN    EQU $F00F
0198                   CLOSE   EQU $F012
0199                   CLOSAL  EQU $F015
0200                   READCH  EQU $F018
0201                   WRITCH  EQU $F01B
0202                   *
0203                   * PART 2: OTHER EPROM SUBROUTINES
0204                   *
0205  200A- 4C 31 E2   CLRGRA  JMP $E231
0206  200D- 4C 2E E5   GETLIN0 JMP $E52E
0207  2010- 4C BE ED   TDIR    JMP $EDBE
0208  2013- 4C 09 F0   DDIR    JMP $F009
0209  2016- 4C A1 F9   ADAPT   JMP $F9A1
0210  2019- 4C 28 FD   DIRECT  JMP $FD28
0211                   *
0212                   * ALPHAD: GO TO ALPHA DISPLAY, X SAVED

----------------------------------------------------------------------

GRAPHIC BASIC- CONFIGURATION       07/01/82   R65 ASSEMBLER  PAGE 06

0213                   *
0214  201C- AD 80 17   ALPHAD  LDA VFLAG
0215  201F- 29 40              AND =$40
0216  2021- F0 0A              BEQ *+12
0217  2023- 8A                 TXA
0218  2024- 48                 PHA
0219  2025- 20 15 E0           JSR ICRTAL
0220  2028- 20 0F E0           JSR LOCRM
0221  202B- 68                 PLA
0222  202C- AA                 TAX
0223  202D- 60                 RTS
0224                   *
0225                   *
0226                   * BREAK TEST
0227                   *
0228  202E- AD 80 17   BREAKT  LDA SFLAG
0229  2031- 30 01              BMI *+3
0230  2033- 60                 RTS
0231  2034- 29 7F              AND =$7F
0232  2036- 8D 80 17           STA SFLAG
0233  2039- 38                 SEC
0234  203A- 4C 24 27           JMP END+3
0235                   *
0236                           TIT GRAPHIC BASIC - STRING TABLES
0237                           PAG

----------------------------------------------------------------------

GRAPHIC BASIC - STRING TABLES      07/01/82   R65 ASSEMBLER  PAGE 07

0238                   *
0239                   * TABLE OF COMMAND STRINGS
0240                   *
0241  203D- 46 4F 52   COMSTB  BYT 'FORMAT'+128
0241  2040- 4D 41 D4 
0242  2043- 46 4F D2           BYT 'FOR'+128
0243  2046- 4E 45 58           BYT 'NEXT'+128
0243  2049- D4 
0244  204A- 44 41 54           BYT 'DATA'+128
0244  204D- C1 
0245  204E- 45 4E C4           BYT 'END'+128
0246  2051- 49 4E 50           BYT 'INPUT'+128
0246  2054- 55 D4 
0247  2056- 44 49 CD           BYT 'DIM'+128
0248  2059- 52 45 41           BYT 'READ'+128
0248  205C- C4 
0249  205D- 4C 45 D4           BYT 'LET'+128
0250  2060- 47 4F 54           BYT 'GOTO'+128
0250  2063- CF 
0251  2064- 52 55 CE           BYT 'RUN'+128
0252  2067- 49 C6              BYT 'IF'+128
0253  2069- 52 45 53           BYT 'RESTORE'+128
0253  206C- 54 4F 52 
0253  206F- C5 
0254  2070- 47 4F 53           BYT 'GOSUB'+128
0254  2073- 55 C2 
0255  2075- 52 45 54           BYT 'RETURN'+128
0255  2078- 55 52 CE 
0256  207B- 52 45 CD           BYT 'REM'+128
0257  207E- 53 54 4F           BYT 'STOP'+128
0257  2081- D0 
0258  2082- 4F CE              BYT 'ON'+128
0259  2084- 57 41 49           BYT 'WAIT'+128
0259  2087- D4 
0260  2088- 4C 4F 41           BYT 'LOAD'+128
0260  208B- C4 
0261  208C- 53 54 4F           BYT 'STORE'+128
0261  208F- 52 C5 
0262  2091- 52 45 CE           BYT 'REN'+128
0263  2094- 44 45 C6           BYT 'DEF'+128
0264  2097- 50 4F 4B           BYT 'POKE'+128
0264  209A- C5 
0265  209B- 4F 55 D4           BYT 'OUT'+128
0266  209E- 50 52 49           BYT 'PRINT'+128
0266  20A1- 4E D4 
0267  20A3- 43 4F 4E           BYT 'CONT'+128
0267  20A6- D4 
0268  20A7- 4C 49 53           BYT 'LIST'+128
0268  20AA- D4 
0269  20AB- 43 4C D2           BYT 'CLR'+128

----------------------------------------------------------------------

GRAPHIC BASIC - STRING TABLES      07/01/82   R65 ASSEMBLER  PAGE 08

0270  20AE- 4D 45 52           BYT 'MERGE'+128
0270  20B1- 47 C5 
0271  20B3- 53 59 D3           BYT 'SYS'+128
0272  20B6- 4F 50 45           BYT 'OPEN'+128
0272  20B9- CE 
0273  20BA- 43 4C 4F           BYT 'CLOSE'+128
0273  20BD- 53 C5 
0274  20BF- 47 45 D4           BYT 'GET'+128
0275  20C2- 4E 45 D7           BYT 'NEW'+128
0276  20C5- 43 4F 50           BYT 'COPY'+128
0276  20C8- D9 
0277  20C9- 46 49 4C           BYT 'FILES'+128
0277  20CC- 45 D3 
0278  20CE- 50 4C 4F           BYT 'PLOT'+128
0278  20D1- D4 
0279  20D2- 4D 4F 56           BYT 'MOVE'+128
0279  20D5- C5 
0280  20D6- 44 52 41           BYT 'DRAW'+128
0280  20D9- D7 
0281  20DA- 41 55 54           BYT 'AUTO'+128
0281  20DD- CF 
0282  20DE- 44 49 D2           BYT 'DIR'+128
0283  20E1- 53 43 41           BYT 'SCALE'+128
0283  20E4- 4C C5 
0284  20E6- 44 45 4C           BYT 'DELETE'+128
0284  20E9- 45 54 C5 
0285  20EC- 50 41 43           BYT 'PACK'+128
0285  20EF- CB 
0286  20F0- 4D 41 D4           BYT 'MAT'+128
0287  20F3- FF                 BYT $FF
0288  20F4- FF                 BYT $FF
0289                   *
0290                   * TABLE OF OTHER TOKENS
0291                   *
0292  20F5- 54 41 42           BYT 'TAB('+128
0292  20F8- A8 
0293  20F9- 54 CF              BYT 'TO'+128
0294  20FB- 46 CE              BYT 'FN'+128
0295  20FD- 53 50 43          BYT 'SPC('+128
0295  2100- A8 
0296  2101- 54 48 45           BYT 'THEN'+128
0296  2104- CE 
0297  2105- 4E 4F D4           BYT 'NOT'+128
0298  2108- 53 54 45           BYT 'STEP'+128
0298  210B- D0 
0299  210C- AB                 BYT '+'+128
0300  210D- AD                 BYT '-'+128
0301  210E- AA                 BYT '*'+128
0302  210F- AF                 BYT '/'+128
0303  2110- DE                 BYT '^'+128

----------------------------------------------------------------------

GRAPHIC BASIC - STRING TABLES      07/01/82   R65 ASSEMBLER  PAGE 09

0304  2111- 41 4E C4           BYT 'AND'+128
0305  2114- 4F D2              BYT 'OR'+128
0306  2116- BE                 BYT '>'+128
0307  2117- BD                 BYT '='+128
0308  2118- BC                 BYT '<'+128
0309  2119- 53 47 CE           BYT 'SGN'+128
0310  211C- 49 4E D4           BYT 'INT'+128
0311  211F- 41 42 D3           BYT 'ABS'+128
0312  2122- 55 53 D2           BYT 'USR'+128
0313  2125- 53 54 C1           BYT 'STA'+128
0314  2128- 50 4F D3           BYT 'POS'+128
0315  212B- 53 51 D2           BYT 'SQR'+128
0316  212E- 52 4E C4           BYT 'RND'+128
0317  2131- 4C 4F C7           BYT 'LOG'+128
0318  2134- 45 58 D0           BYT 'EXP'+128
0319  2137- 43 4F D3           BYT 'COS'+128
0320  213A- 53 49 CE           BYT 'SIN'+128
0321  213D- 54 41 CE           BYT 'TAN'+128
0322  2140- 41 54 CE           BYT 'ATN'+128
0323  2143- 50 45 45           BYT 'PEEK'+128
0323  2146- CB 
0324  2147- 4C 45 CE           BYT 'LEN'+128
0325  214A- 53 54 52           BYT 'STR$'+128
0325  214D- A4 
0326  214E- 56 41 CC           BYT 'VAL'+128
0327  2151- 41 53 C3           BYT 'ASC'+128
0328  2154- 43 48 52           BYT 'CHR$'+128
0328  2157- A4 
0329  2158- 4C 45 46           BYT 'LEFT$'+128
0329  215B- 54 A4 
0330  215D- 52 49 47           BYT 'RIGHT$'+128
0330  2160- 48 54 A4 
0331  2163- 4D 49 44           BYT 'MID$'+128
0331  2166- A4 
0332  2167- 50 C9              BYT 'PI'+128
0333  2169- 00                 BYT 0
0334                   *
0335                   *
0336                   * COMMAND VECTORS
0337                   *
0338  216A- FC 49      STVECT  WRD FORMAT-1
0339  216C- FC 2F              WRD FOR-1
0340  216E- 6F 32              WRD NEXT-1
0341  2170- E4 27              WRD DATA-1
0342  2172- 20 27              WRD END-1
0343  2174- BA 30              WRD INPUT-1
0344  2176- DF 39              WRD DIM-1
0345  2178- 2D 31              WRD READ-1
0346  217A- 41 2A              WRD LET-1
0347  217C- 92 27              WRD GOTO-1

----------------------------------------------------------------------

GRAPHIC BASIC - STRING TABLES      07/01/82   R65 ASSEMBLER  PAGE 10

0348  217E- 6D 27              WRD RUN-1
0349  2180- 1D 2A              WRD IF-1
0350  2182- 46 27              WRD RESTOR-1
0351  2184- 75 27              WRD GOSUB-1
0352  2186- C4 27              WRD RETURN-1
0353  2188- 30 2A              WRD REMARK-1
0354  218A- 1E 27              WRD STOP-1
0355  218C- 76 30              WRD ON-1
0356  218E- D7 43              WRD WAIT-1
0357  2190- E1 41              WRD LOAD-1
0358  2192- 4B 41              WRD STORE-1
0359  2194- 70 4B              WRD RENUMB-1
0360  2196- 1F 3C              WRD DEF-1
0361  2198- 03 3E              WRD POKE-1
0362  219A- 24 4B              WRD OUT-1
0363  219C- CE 2A              WRD PRINT-1
0364  219E- 03 2A              WRD CONT-1
0365  21A0- D9 25              WRD LIST-1
0366  21A2- 68 27              WRD CLR-1
0367  21A4- 84 4A              WRD MERGE-1
0368  21A6- 3D 3E              WRD SYS-1
0369  21A8- 47 44              WRD OPENBS-1
0370  21AA- 7E 45              WRD CLOSEBS-1
0371  21AC- 99 30              WRD GET-1
0372  21AE- 82 25              WRD NEW-1
0373  21B0- 73 46              WRD COPY-1
0374  21B2- FB 46              WRD FILES-1
0375  21B4- C0 42              WRD PLOT-1
0376  21B6- 58 43              WRD MOVE-1
0377  21B8- 61 43              WRD DRAW-1
0378  21BA- FC 43              WRD AUTO-1
0379  21BC- 94 4A              WRD DIR-1
0380  21BE- B2 27              WRD UNDEFS-1    SCALE
0381  21C0- AC 4A              WRD DELBAS-1
0382  21C2- B2 27              WRD UNDEFS-1    PACK
0383  21C4- B2 27              WRD UNDEFS-1    MAT
0384                   *
0385                   *
0386                   * ERROR STRINGS:
0387                   *
0388  21C6- 4E 4F 20   ERRSTR   BYT 'NO MATCHING FOR'+128
0388  21C9- 4D 41 54 
0388  21CC- 43 48 49 
0388  21CF- 4E 47 20 
0388  21D2- 46 4F D2 
0389  21D5- 53 59 4E           BYT 'SYNTAX'+128
0389  21D8- 54 41 D8 
0390  21DB- 4E 4F 20           BYT 'NO MATCHING GOSUB'+128
0390  21DE- 4D 41 54 
0390  21E1- 43 48 49 

----------------------------------------------------------------------

GRAPHIC BASIC - STRING TABLES      07/01/82   R65 ASSEMBLER  PAGE 11

0390  21E4- 4E 47 20 
0390  21E7- 47 4F 53 
0390  21EA- 55 C2 
0391  21EC- 44 41 54           BYT 'DATA'+128
0391  21EF- C1 
0392  21F0- 51 55 41           BYT 'QUANTITY'+128
0392  21F3- 4E 54 49 
0392  21F6- 54 D9 
0393  21F8- 4F 56 45          BYT 'OVERFLOW'+128
0393  21FB- 52 46 4C 
0393  21FE- 4F D7 
0394  2200- 4F 55 54           BYT 'OUT OF MEMORY'+128
0394  2203- 20 4F 46 
0394  2206- 20 4D 45 
0394  2209- 4D 4F 52 
0394  220C- D9 
0395  220D- 55 4E 44           BYT 'UNDEF STATEMENT'+128
0395  2210- 45 46 20 
0395  2213- 53 54 41 
0395  2216- 54 45 4D 
0395  2219- 45 4E D4 
0396  221C- 55 4E 44           BYT 'UNDEF VARIABLE'+128
0396  221F- 45 46 20 
0396  2222- 56 41 52 
0396  2225- 49 41 42 
0396  2228- 4C C5 
0397  222A- 52 45 44           BYT 'REDIMENSION'+128
0397  222D- 49 4D 45 
0397  2230- 4E 53 49 
0397  2233- 4F CE 
0398  2235- 53 55 42           BYT 'SUBSCRIPT'+128
0398  2238- 53 43 52 
0398  223B- 49 50 D4 
0399  223E- 44 49 56           BYT 'DIVISION BY ZERO'+128
0399  2241- 49 53 49 
0399  2244- 4F 4E 20 
0399  2247- 42 59 20 
0399  224A- 5A 45 52 
0399  224D- CF 
0400  224E- 49 4C 4C           BYT 'ILLEGAL DIRECT'+128
0400  2251- 45 47 41 
0400  2254- 4C 20 44 
0400  2257- 49 52 45 
0400  225A- 43 D4 
0401  225C- 54 59 50           BYT 'TYPE MISSMATCH'+128
0401  225F- 45 20 4D 
0401  2262- 49 53 53 
0401  2265- 4D 41 54 
0401  2268- 43 C8 
0402  226A- 53 54 52           BYT 'STRING TOO LONG'+128

----------------------------------------------------------------------

GRAPHIC BASIC - STRING TABLES      07/01/82   R65 ASSEMBLER  PAGE 12

0402  226D- 49 4E 47 
0402  2270- 20 54 4F 
0402  2273- 4F 20 4C 
0402  2276- 4F 4E C7 
0403  2279- 46 4F 52           BYT 'FORMULA TOO COMPLEX'+128
0403  227C- 4D 55 4C 
0403  227F- 41 20 54 
0403  2282- 4F 4F 20 
0403  2285- 43 4F 4D 
0403  2288- 50 4C 45 
0403  228B- D8 
0404  228C- 43 4F 4E           BYT 'CONTINUE'+128
0404  228F- 54 49 4E 
0404  2292- 55 C5 
0405  2294- 55 4E 44           BYT 'UNDEF FUNCTION'+128
0405  2297- 45 46 20 
0405  229A- 46 55 4E 
0405  229D- 43 54 49 
0405  22A0- 4F CE 
0406                   *
0407                   * MESSAGE STRINGS:
0408                   *
0409  22A2- 20 45 52   ERRORM  BYT ' ERROR',0
0409  22A5- 52 4F 52 
0409  22A8- 00 
0410  22A9- 0D 0A 52           BYT $D,$A,'READY',$D,$A,0
0410  22AC- 45 41 44 
0410  22AF- 59 0D 0A 
0410  22B2- 00 
0411  22B3- 0D 0A 42           BYT $D,$A,'BREAK',0
0411  22B6- 52 45 41 
0411  22B9- 4B 00 
0412  22BB- 20 49 4E           BYT ' IN LINE',0
0412  22BE- 20 4C 49 
0412  22C1- 4E 45 00 
0413                   *
0414                           TIT GRAPHIC BASIC - EDITOR
0415                           PAG

----------------------------------------------------------------------

GRAPHIC BASIC - EDITOR             07/01/82   R65 ASSEMBLER  PAGE 13

0416                   *
0417                   * MKROOM: MAKE ROOM IN MEMORY
0418                   *****************************
0419                   * BEGINB AND ENDB DEFINE THE BLOCK. A MOVE IS
0420                   * DONE BETWEEN ENDB AND BTSTRG, IF ENOUGH
0421                   * FREE SPACE, INSERTION IS NOT DONE IN THIS
0422                   * SUBROUTINE. TEMP1 IS USED, ENDB MUST ALSO
0423                   * BE IN A,Y.
0424                   *
0425  22C4- 20 07 23   MKROOM  JSR TSROOM      ENOUGH EMPTY?
0426  22C7- 85 67              STA STSPAC
0427  22C9- 84 68              STY STSPAC+1
0428  22CB- 38                 SEC             COMPUTE SIZE TO TRANSF
0429  22CC- A5 90              LDA BEGINB
0430  22CE- E5 95              SBC TRANSP
0431  22D0- 85 58              STA TEMP1       SAVE IN Y AND TEMP1
0432  22D2- A8                 TAY
0433  22D3- A5 91              LDA BEGINB+1
0434  22D5- E5 96              SBC TRANSP+1
0435  22D7- AA                 TAX             SAVE IN X
0436  22D8- E8                 INX
0437  22D9- 98                 TYA
0438  22DA- F0 23              BEQ MKRM2       BRANCH IF SIZE LOW = 0
0439  22DC- A5 90              LDA BEGINB      SUBTRACT SIZE LOW FROM
0440  22DE- 38                 SEC             BEGINB AND RESTORE
0441  22DF- E5 58              SBC TEMP1
0442  22E1- 85 90              STA BEGINB
0443  22E3- B0 03              BCS *+5
0444  22E5- C6 91              DEC BEGINB+1
0445  22E7- 38                 SEC
0446  22E8- A5 8E              LDA ENDB        SAME FOR ENDB
0447  22EA- E5 58              SBC TEMP1
0448  22EC- 85 8E              STA ENDB
0449  22EE- B0 08              BCS MKRM1+4
0450  22F0- C6 8F              DEC ENDB+1
0451  22F2- 90 04              BCC MKRM1+4
0452                   *
0453  22F4- B1 90      MKRM1   LDA (BEGINB),Y  TRANSFER PARTIAL PAGE
0454  22F6- 91 8E              STA (ENDB),Y
0455  22F8- 88                 DEY
0456  22F9- D0 F9              BNE MKRM1
0457                   *
0458  22FB- B1 90              LDA (BEGINB),Y  TRANSFER FULL PAGES
0459  22FD- 91 8E              STA (ENDB),Y
0460  22FF- C6 91     MKRM2   DEC BEGINB+1
0461  2301- C6 8F              DEC ENDB+1
0462  2303- CA                 DEX             COUNT FULL PAGES
0463  2304- D0 F2              BNE MKRM1+4
0464  2306- 60                 RTS
0465                   *

----------------------------------------------------------------------

GRAPHIC BASIC - EDITOR             07/01/82   R65 ASSEMBLER  PAGE 14

0466                   *
0467                   * TSROOM: TEST FREE ROOM IN MEMORY
0468                   **********************************
0469                   * INPUT IA A,Y. STRINGS ARE PACKED ONLY IF NOT
0470                   * ENOUGH FREE SPACE. ERROR IF STRINGS PACKED
0471                   * AND STILL A,Y >= BTSTRG. 12 BYTES ON STACK
0472                   * AND SUBROUTINE PKSTRG USED
0473                   *
0474  2307- C4 6A      TSROOM  CPY BTSTRG+1    IF A,Y < BTSTRG
0475  2309- 90 FB              BCC TSROOM-1    THEN RETURN
0476  230B- D0 02              BNE *+4
0477  230D- C5 69              CMP BTSTRG
0478  230F- 90 F5              BCC TSROOM-1
0479                   *
0480  2311- 48                 PHA             ELSE PACK STRINGS
0481  2312- A2 09              LDX =9          SAVE A AND BLOCK AREA
0482  2314- 98                 TYA             AND Y
0483  2315- 48                 PHA
0484  2316- B5 8D              LDA ENDB-1,X
0485  2318- CA                 DEX
0486  2319- 10 FA              BPL *-4
0487                   *
0488  231B- 20 8F 2C           JSR PKSTRG      PACK STRINGS
0489                   *
0490  231E- A0 F7              LDY =$F7        RESTORE BLOCK AREA
0491  2320- 68                 PLA             AND Y
0492  2321- 95 97              STA TRANSP+2,X
0493  2323- E8                 INX
0494  2324- 30 FA              BMI *-4
0495  2326- 68                 PLA
0496  2327- A8                 TAY
0497  2328- 68                 PLA
0498                   *
0499  2329- C4 6A              CPY BTSTRG+1    ERROR,IF STILL A,Y
0500  232B- 90 06              BCC *+8         >= BTSTRG
0501  232D- D0 12              BNE OUTMEM
0502  232F- C5 69              CMP BTSTRG
0503  2331- B0 0E              BCS OUTMEM
0504  2333- 60                 RTS
0505                   *
0506                   *
0507                   * TSSTK: TEST STACK ROOM
0508                   ************************
0509                   * ERROR, IF NOT 2*A+$40 FREE BYTES ON STACK
0510                   *
0511  2334- 0A         TSSTK   ASL A
0512  2335- 69 40              ADC =$40
0513  2337- B0 08              BCS OUTMEM
0514  2339- 85 58              STA TEMP1
0515  233B- BA                 TSX

----------------------------------------------------------------------

GRAPHIC BASIC - EDITOR             07/01/82   R65 ASSEMBLER  PAGE 15

0516  233C- E4 58              CPX TEMP1
0517  233E- 90 01              BCC OUTMEM
0518  2340- 60                 RTS
0519                   *
0520                   *
0521  2341- A2 3A      OUTMEM  LDX =$3A        OUT OF MEMORY ERROR
0522                   *
0523                   *
0524                   * ERROR: PRINT ERROR MESSAGE
0525                   ****************************
0526                   * SAVES LINE FOR CONT, GOES INTO COMMAND MODE
0527                   *
0528  2343- AD 80 17   ERROR   LDA VFLAG       RESET INVERSE VIDEO
0529  2346- 29 67              AND =$67        AND CLEAR DISPLAY FLAG
0530  2348- 8D 80 17           STA VFLAG
0531  234B- A5 00              LDA OUTDEV      CHECK OUTPUT DEVICE
0532  234D- F0 07              BEQ *+9         MUST BE VIDEO
0533  234F- 20 9F 42           JSR RSTDEV
0534  2352- A9 00              LDA =0
0535  2354- 85 00              STA OUTDEV
0536                   *
0537  2356- 20 8E 24           JSR CRLF
0538  2359- 20 D1 45           JSR RSTO1
0539                   *
0540  235C- BD C6 21           LDA ERRSTR,X    PRINT ERROR MESSAGE
0541  235F- 48                 PHA
0542  2360- 29 7F              AND =$7F        MASK OFF BIT 7
0543  2362- 20 B1 2F           JSR OUTCHR
0544  2365- E8                 INX
0545  2366- 68                 PLA
0546  2367- 10 F3              BPL *-11
0547  2369- 20 B6 25           JSR SAVE        SAVE PC AND BASIC LINE
0548  236C- A9 A2              LDA =<ERRORM
0549  236E- A0 22              LDY =>ERRORM
0550  2370- 20 80 28   STOP2   JSR OUTSTR
0551  2373- A4 70              LDY LINE+1      FF MEANS NOT RUNNING
0552  2375- C8                 INY
0553  2376- F0 03              BEQ WARMST
0554  2378- 20 EE 32           JSR OUTLIN      PRINT LINE NO
0555                   *
0556                   *
0557                   * WARMST: WARM START AND COMMAND ENTRY
0558                   **************************************
0559                   *
0560  237B- A9 A9      WARMST  LDA =<(ERRORM+7)
0561  237D- A0 22              LDY =>(ERRORM+7)
0562  237F- 20 80 28           JSR OUTSTR
0563  2382- 20 69 24   WARM1   JSR INLIN       INPUT LINE
0564  2385- 86 A9              STX PC
0565  2387- 84 AA              STY PC+1

----------------------------------------------------------------------

GRAPHIC BASIC - EDITOR             07/01/82   R65 ASSEMBLER  PAGE 16

0566  2389- 20 00 27           JSR FETCH
0567  238C- F0 F4              BEQ WARM1       NEXT LINE IF EMPTY
0568  238E- A2 FF              LDX =$FF        CLEAR RUN FLAG
0569  2390- 86 70              STX LINE+1
0570  2392- 90 0A              BCC INSLIN      NUMBER >> INSERT LINE
0571  2394- 20 AD 24           JSR ANALYZ
0572  2397- A9 00              LDA =0
0573  2399- 85 C2              STA AUTOIN      CLEAR AUTO NUMBERING
0574  239B- 4C DF 26           JMP EXCODE      NO NUMBER >> EXECUTE
0575                   *
0576                   *
0577                   * INSLIN: INSERT LINE
0578                   *********************
0579                   *
0580  239E- 20 44 28   INSLIN  JSR FETCHI      FETCH LINE NUMBER
0581  23A1- 20 AD 24           JSR ANALYZ
0582  23A4- 84 43              STY INPNT       INPUT BUFFER PNT SAVE
0583  23A6- 20 54 25           JSR SEARLN
0584  23A9- 90 44              BCC INSL1+14    SKIP, IF LINE NOT FOUND
0585                   *
0586  23AB- A0 01              LDY =1          CLEAR EXISTING LINE
0587  23AD- B1 95              LDA (TRANSP),Y
0588  23AF- 85 8F              STA ENDB+1
0589  23B1- A5 63              LDA STVAR
0590  23B3- 85 8E              STA ENDB
0591  23B5- A5 96              LDA TRANSP+1
0592  23B7- 85 91              STA BEGINB+1
0593  23B9- A5 95              LDA TRANSP
0594  23BB- 88                 DEY
0595  23BC- F1 95              SBC (TRANSP),Y
0596  23BE- 18                 CLC
0597  23BF- 65 63              ADC STVAR
0598  23C1- 85 63              STA STVAR
0599  23C3- 85 90              STA BEGINB
0600  23C5- A5 64              LDA STVAR+1
0601  23C7- 69 FF              ADC =$FF
0602  23C9- 85 64              STA STVAR+1
0603  23CB- E5 96              SBC TRANSP+1
0604  23CD- AA                 TAX
0605  23CE- 38                 SEC
0606  23CF- A5 95              LDA TRANSP
0607  23D1- E5 63              SBC STVAR
0608  23D3- A8                 TAY
0609  23D4- B0 03              BCS *+5
0610  23D6- E8                 INX
0611  23D7- C6 91              DEC BEGINB+1
0612  23D9- 18                 CLC
0613  23DA- 65 8E              ADC ENDB
0614  23DC- 90 03              BCC *+5
0615  23DE- C6 8F              DEC ENDB+1

----------------------------------------------------------------------

GRAPHIC BASIC - EDITOR             07/01/82   R65 ASSEMBLER  PAGE 17

0616  23E0- 18                 CLC
0617  23E1- B1 8E      INSL1   LDA (ENDB),Y
0618  23E3- 91 90              STA (BEGINB),Y
0619  23E5- C8                 INY
0620  23E6- D0 F9              BNE INSL1
0621  23E8- E6 91              INC BEGINB+1
0622  23EA- E6 8F              INC ENDB+1
0623  23EC- CA                 DEX             COUNT FULL PAGES
0624  23ED- D0 F2              BNE INSL1
0625                   *
0626  23EF- A5 07              LDA INBUFF
0627  23F1- F0 2F              BEQ ADLNPN      SKIP, IF LINE EMPTY
0628  23F3- A5 6D              LDA TPMEM
0629  23F5- A4 6E              LDY TPMEM+1
0630  23F7- 85 69              STA BTSTRG      CLEAR EXISTING STRINGS
0631  23F9- 84 6A              STY BTSTRG+1
0632  23FB- A5 63              LDA STVAR
0633  23FD- 85 90              STA BEGINB
0634  23FF- 65 43             ADC INPNT
0635  2401- 85 8E              STA ENDB
0636  2403- A4 64              LDY STVAR+1
0637  2405- 84 91              STY BEGINB+1
0638  2407- 90 01              BCC *+3
0639  2409- C8                 INY
0640  240A- 84 8F              STY ENDB+1
0641  240C- 20 C4 22           JSR MKROOM      MAKE ROOM FOR LINE
0642  240F- A5 67              LDA STSPAC
0643  2411- A4 68              LDY STSPAC+1
0644  2413- 85 63              STA STVAR       CLEAR VARIABLES
0645  2415- 84 64              STY STVAR+1
0646  2417- A4 43              LDY INPNT
0647  2419- 88                 DEY
0648  241A- B9 03 00           LDA INBNUM,Y    INSERT CODE
0649  241D- 91 95              STA (TRANSP),Y
0650  241F- 88                 DEY
0651  2420- 10 F8              BPL *-6
0652                   *
0653  2422- 20 99 25   ADLNPN  JSR CLR1-3      CLEAR VAR ETC
0654  2425- 20 3C 24           JSR ADLNP0      ADJUST LINE ADDRESSES
0655  2428- A5 C2              LDA AUTOIN
0656  242A- D0 03              BNE *+5
0657  242C- 4C 82 23           JMP WARM1
0658  242F- 18                 CLC
0659  2430- 65 05              ADC INTEG
0660  2432- A4 06              LDY INTEG+1
0661  2434- 90 01              BCC *+3
0662  2436- C8                 INY
0663  2437- AA                 TAX
0664  2438- 98                 TYA
0665  2439- 4C 1B 44           JMP AUTOIN2

----------------------------------------------------------------------

GRAPHIC BASIC - EDITOR             07/01/82   R65 ASSEMBLER  PAGE 18

0666                   *
0667                   *
0668                   * ADLNP0: ADJUST LINE ADDRESSES
0669                   *******************************
0670                   *
0671  243C- A5 61      ADLNP0  LDA STPROG
0672  243E- A4 62              LDY STPROG+1
0673  2440- 85 58              STA TEMP1
0674  2442- 84 59              STY TEMP1+1
0675  2444- 18                 CLC
0676  2445- A0 01              LDY =1
0677  2447- B1 58              LDA (TEMP1),Y
0678  2449- D0 01              BNE *+3         END OF PROGRAM?
0679  244B- 60                 RTS
0680  244C- A0 04              LDY =4
0681  244E- C8                 INY
0682  244F- B1 58              LDA (TEMP1),Y   SEARCH EOL
0683  2451- D0 FB              BNE *-3
0684  2453- C8                 INY
0685  2454- 98                 TYA
0686  2455- 65 58              ADC TEMP1
0687  2457- AA                 TAX
0688  2458- A0 00              LDY =0
0689  245A- 91 58              STA (TEMP1),Y
0690  245C- A5 59              LDA TEMP1+1
0691  245E- 69 00              ADC =0
0692  2460- C8                 INY
0693  2461- 91 58              STA (TEMP1),Y
0694  2463- 86 58              STX TEMP1
0695  2465- 85 59              STA TEMP1+1
0696  2467- D0 DC              BNE ADLNP0+9    ALLWAYS TAKEN
0697                   *
0698                   *
0699                   * INLIN: INPUT LINE FROM KEYBOARD
0700                   *********************************
0701                   * INPUT MUST BE FROM DEVICE 0, R65 LINE EDITOR
0702                   * IS USED, GETLIN AND NUMCHR ARE MONITOR LABELS
0703                   * IF ENTERED WITH CURPOS#0, FIRST PART SAVED
0704                   *
0705  2469- A6 EE      INLIN   LDX CURPOS
0706  246B- 20 0D 20           JSR GETLIN0
0707  246E- A2 00              LDX =0
0708  2470- B1 E9              LDA (VIDPNT),Y
0709  2472- 29 7F              AND =$7F
0710  2474- 95 07              STA INBUFF,X
0711  2476- E8                 INX
0712  2477- C8                 INY
0713  2478- CC 8A 17           CPY NUMCHR
0714  247B- 90 F3              BCC *-11
0715  247D- F0 F1              BEQ *-13

----------------------------------------------------------------------

GRAPHIC BASIC - EDITOR             07/01/82   R65 ASSEMBLER  PAGE 19

0716                   *
0717  247F- CA                 DEX
0718  2480- 30 06              BMI *+8         EMPTY LINE
0719  2482- B5 07              LDA INBUFF,X
0720  2484- C9 20              CMP =$20        INGNORE ENDING BLANKS
0721  2486- F0 F7              BEQ *-7
0722  2488- A0 00              LDY =0
0723  248A- 94 08              STY INBUFF+1,X
0724  248C- A2 06              LDX =<(INBUFF-1)
0725                   *
0726                   *
0727                   * CRLF: EXECUTE A CRLF (X,Y SAVED)
0728                   **********************************
0729                   *
0730  248E- A9 0D      CRLF    LDA =$D
0731  2490- 20 B1 2F           JSR OUTCHR
0732  2493- A9 0A              LDA =$A
0733  2495- 20 B1 2F           JSR OUTCHR
0734  2498- A5 00      PADOUT  LDA OUTDEV
0735  249A- F0 10              BEQ *+18
0736  249C- 8A                 TXA
0737  249D- 48                 PHA
0738  249E- A6 01              LDX NUMPAD
0739  24A0- F0 08              BEQ *+10
0740  24A2- A9 00              LDA =0
0741  24A4- 20 B1 2F           JSR OUTCHR
0742  24A7- CA                 DEX
0743  24A8- D0 FA              BNE *-4
0744  24AA- 68                 PLA
0745  24AB- AA                 TAX
0746  24AC- 60                 RTS
0747                   *
0748                   *
0749                   *
0750                   * ANALYZ: ANALYZE INPUT
0751                   ***********************
0752                   *
0753  24AD- A6 A9      ANALYZ  LDX PC
0754  24AF- A0 04              LDY =4
0755  24B1- 84 47              STY TEMP2       FLAG FOR ",DATA,REM
0756  24B3- B5 00              LDA 0,X         GET CHAR FROM INBUFF
0757  24B5- 20 16 20           JSR ADAPT
0758                   *
0759  24B8- C9 20              CMP =$20
0760  24BA- F0 40              BEQ ANA20       INSERT BLANK AS IT IS
0761  24BC- 85 41              STA CHRSAV
0762  24BE- C9 22              CMP ='"'
0763  24C0- F0 5E              BEQ ANA25+8     STRING
0764  24C2- 24 47              BIT TEMP2
0765  24C4- 70 36              BVS ANA20       IF ",DATA,REM

----------------------------------------------------------------------

GRAPHIC BASIC - EDITOR             07/01/82   R65 ASSEMBLER  PAGE 20

0766  24C6- C9 3F              CMP ='?'
0767  24C8- D0 04              BNE *+6
0768  24CA- A9 99              LDA =$99        CODE FOR PRINT
0769  24CC- D0 2E              BNE ANA20
0770  24CE- C9 30              CMP =$30        NUMBER?
0771  24D0- 90 04              BCC *+6
0772  24D2- C9 3C              CMP =$3C
0773  24D4- 90 26              BCC ANA20
0774                   *
0775  24D6- 84 A7              STY DYADIC+8
0776  24D8- A0 3D              LDY =<COMSTB
0777  24DA- 84 CE              STY TEMP4
0778  24DC- A0 20              LDY =>COMSTB
0779  24DE- 84 CF              STY TEMP4+1
0780  24E0- A0 00              LDY =0
0781  24E2- 84 43              STY INPNT
0782  24E4- 88                 DEY
0783  24E5- 86 A9              STX PC
0784  24E7- CA                 DEX
0785  24E8- C8         ANA10   INY
0786  24E9- E8                 INX
0787  24EA- B5 00              LDA 0,X
0788  24EC- 20 16 20           JSR ADAPT
0789  24EF- 38                 SEC
0790  24F0- F1 CE              SBC (TEMP4),Y   COMPARE WITH TOKEN
0791  24F2- F0 F4              BEQ ANA10
0792  24F4- C9 80              CMP =$80
0793  24F6- D0 2F              BNE ANA30       END MATCH
0794  24F8- 05 43              ORA INPNT
0795  24FA- A4 A7              LDY DYADIC+8
0796                   *
0797  24FC- E8         ANA20   INX
0798  24FD- C8                 INY
0799  24FE- 99 02 00          STA INBUFF-5,Y
0800  2501- B9 02 00           LDA INBUFF-5,Y
0801  2504- F0 38              BEQ ANA35       END MARK
0802  2506- 38                 SEC
0803  2507- E9 3A              SBC =':'
0804  2509- F0 04              BEQ *+6
0805  250B- C9 49              CMP =$49        A=$83: DATA
0806  250D- D0 02              BNE *+4
0807  250F- 85 47              STA TEMP2
0808  2511- 38                 SEC
0809  2512- E9 55              SBC =$55        A=$8F: REM
0810  2514- D0 9D              BNE ANALYZ+6
0811  2516- 85 41              STA CHRSAV
0812  2518- B5 00      ANA25   LDA 0,X         GET WITHOUT ADAPT
0813  251A- F0 E0              BEQ ANA20
0814  251C- C5 41              CMP CHRSAV
0815  251E- F0 DC              BEQ ANA20

----------------------------------------------------------------------

GRAPHIC BASIC - EDITOR             07/01/82   R65 ASSEMBLER  PAGE 21

0816  2520- C8                 INY
0817  2521- 99 02 00           STA INBUFF-5,Y
0818  2524- E8                 INX
0819  2525- D0 F1              BNE ANA25       ALLWAYS TAKEN
0820                   *
0821  2527- A6 A9      ANA30   LDX PC
0822  2529- E6 43              INC INPNT
0823  252B- 88                 DEY
0824  252C- C8                 INY
0825  252D- B1 CE              LDA (TEMP4),Y
0826  252F- 10 FB              BPL *-3
0827  2531- C8                 INY
0828  2532- B1 CE              LDA (TEMP4),Y
0829  2534- D0 10              BNE ANA35+8
0830  2536- B5 00              LDA 0,X
0831  2538- 20 16 20           JSR ADAPT
0832  253B- 4C FA 24           JMP ANA20-2     NOT FOUND IN TABLE
0833                   *
0834  253E- 99 04 00   ANA35   STA INBUFF-3,Y
0835  2541- A9 06              LDA =<INBUFF-1
0836  2543- 85 A9              STA PC
0837  2545- 60                 RTS
0838                   *
0839  2546- 18                 CLC
0840  2547- 98                 TYA
0841  2548- 65 CE              ADC TEMP4
0842  254A- 85 CE              STA TEMP4
0843  254C- 90 02              BCC *+4
0844  254E- E6 CF              INC TEMP4+1
0845  2550- A0 00              LDY =0
0846  2552- F0 96              BEQ ANA10+2     ALLWAYS TAKEN
0847                   *
0848                   *
0849                   * SEARCH LINE: SEARCH BASIC LINE
0850                   ********************************
0851                   * INPUT IS LINE NO IN INTGER, OUTPUT IS ADDRESS
0852                   * IN TRANSP, C=1IFLINE FOUND
0853                   *
0854  2554- A5 61      SEARLN  LDA STPROG
0855  2556- A6 62              LDX STPROG+1
0856                   *
0857  2558- A0 01              LDY =1
0858  255A- 85 95              STA TRANSP
0859  255C- 86 96              STX TRANSP+1
0860  255E- B1 95              LDA (TRANSP),Y
0861  2560- F0 1F              BEQ SEARL9-1    END OF PROGRAM
0862  2562- C8                 INY
0863  2563- C8                 INY
0864  2564- A5 06              LDA INTEG+1
0865  2566- D1 95              CMP (TRANSP),Y

----------------------------------------------------------------------

GRAPHIC BASIC - EDITOR             07/01/82   R65 ASSEMBLER  PAGE 22

0866  2568- 90 18              BCC SEARL9
0867  256A- F0 03              BEQ *+5
0868  256C- 88                 DEY
0869  256D- D0 09              BNE SEARL5
0870  256F- A5 05              LDA INTEG
0871  2571- 88                 DEY
0872  2572- D1 95              CMP (TRANSP),Y
0873  2574- 90 0C              BCC SEARL9
0874  2576- F0 0A              BEQ SEARL9
0875  2578- 88         SEARL5  DEY
0876  2579- B1 95              LDA (TRANSP),Y  GET ADDRESS OF NEXT LINE
0877  257B- AA                 TAX
0878  257C- 88                 DEY
0879  257D- B1 95              LDA (TRANSP),Y
0880  257F- B0 D7              BCS SEARLN+4
0881  2581- 18                 CLC
0882  2582- 60         SEARL9  RTS
0883                   *
0884                           TIT GRAPHIC BASIC - MAIN COMMANDS
0885                           PAG

----------------------------------------------------------------------

GRAPHIC BASIC - MAIN COMMANDS      07/01/82   R65 ASSEMBLER  PAGE 23

0886                   *
0887                   * NEW: COMMAND ROUTINE
0888                   **********************
0889                   *
0890  2583- D0 FB      NEW     BNE *-3         RTS, IF NOT EOLD
0891  2585- A9 00              LDA =0
0892  2587- A8                 TAY
0893  2588- 91 61              STA (STPROG),Y  END OF PROGRAM MARK
0894  258A- C8                 INY
0895  258B- 91 61              STA (STPROG),Y
0896  258D- A5 61              LDA STPROG
0897  258F- 69 02              ADC =2
0898  2591- 85 63              STA STVAR       SET START OF VARIABLES
0899  2593- A5 62              LDA STPROG+1
0900  2595- 69 00              ADC =0
0901  2597- 85 64              STA STVAR+1
0902                   *
0903  2599- 20 CC 25           JSR SETPC
0904                   *
0905  259C- A5 6D      CLR1    LDA TPMEM       CLEAR STRINGS
0906  259E- A4 6E              LDY TPMEM+1
0907  25A0- 85 69              STA BTSTRG
0908  25A2- 84 6A              STY BTSTRG+1
0909                   *
0910  25A4- 20 2B 44           JSR RESGP       RESETGP
0911                   *
0912  25A7- A5 63              LDA STVAR       CLEAR VARIABLES
0913  25A9- A4 64              LDY STVAR+1
0914  25AB- 85 65              STA EOVAR
0915  25AD- 84 66              STY EOVAR+1
0916  25AF- 85 67              STA STSPAC
0917  25B1- 84 68              STY STSPAC+1
0918  25B3- 20 5A 27           JSR RESTOR+19   SET DATA POINTER
0919                   *
0920  25B6- A2 4F      SAVE    LDX =<STRST     RESET STRING STACK
0921  25B8- 86 4C              STX STRSTP
0922  25BA- 68                 PLA             RESET MAIN STACK
0923  25BB- 8D FD 01           STA $1FD
0924  25BE- 68                 PLA
0925  25BF- 8D FE 01           STA $1FE
0926  25C2- A2 FC              LDX =$FC
0927  25C4- 9A                 TXS
0928  25C5- A9 00              LDA =0          CONTINUE NOT LEGAL
0929  25C7- 85 74              STA PNTSAV+1
0930  25C9- 85 48              STA FLAG1
0931  25CB- 60                 RTS
0932                   *
0933                   *
0934                   * SETPC: SET PC TO STPROG-1
0935                   ***************************

----------------------------------------------------------------------

GRAPHIC BASIC - MAIN COMMANDS      07/01/82   R65 ASSEMBLER  PAGE 24

0936                   *
0937  25CC- 18         SETPC   CLC
0938  25CD- A5 61              LDA STPROG
0939  25CF- 69 FF              ADC =$FF
0940  25D1- 85 A9              STA PC
0941  25D3- A5 62              LDA STPROG+1
0942  25D5- 69 FF              ADC =$FF
0943  25D7- 85 AA              STA PC+1
0944  25D9- 60                 RTS
0945                   *
0946                   *
0947                   * LIST: COMMAND ROUTINE
0948                   ***********************
0949                   *
0950  25DA- C9 23      LIST    CMP ='#'
0951  25DC- D0 03              BNE *+5
0952  25DE- 20 55 42           JSR SETDEV
0953  25E1- 20 06 27           JSR FETCH1
0954  25E4- 90 06              BCC *+8         BRANCH, IF NUMBER
0955  25E6- F0 04              BEQ *+6         BRANCH, IF EOL
0956  25E8- C9 B8              CMP =$B8        CODE FOR -
0957  25EA- D0 EB              BNE *-19        RTS, IF NOT
0958                   *
0959  25EC- 20 44 28           JSR FETCHI      GET LINE NO
0960  25EF- 20 54 25           JSR SEARLN
0961  25F2- 20 06 27           JSR FETCH1
0962  25F5- F0 0C              BEQ *+14
0963  25F7- C9 B8              CMP =$B8        CODE FOR -
0964  25F9- D0 DE              BNE LIST-1
0965  25FB- 20 00 27           JSR FETCH
0966  25FE- 20 44 28          JSR FETCHI      GETS SECOND LINE NO
0967  2601- D0 D6              BNE LIST-1      RTS, IF NOT
0968                   *
0969  2603- 68                 PLA
0970  2604- 68                 PLA
0971  2605- A5 05              LDA INTEG
0972  2607- 05 06              ORA INTEG+1
0973  2609- D0 06              BNE LIST2
0974  260B- A9 FF              LDA =$FF
0975  260D- 85 05              STA INTEG       SET LAST LINE TO FFFF
0976  260F- 85 06              STA INTEG+1
0977                   *
0978  2611- A0 01      LIST2   LDY =1
0979  2613- 84 47              STY TEMP2
0980  2615- B1 95              LDA (TRANSP),Y
0981  2617- F0 41              BEQ LIST4       END OF PROGRAM
0982  2619- 20 2E 20           JSR BREAKT      BREAK TEST
0983  261C- 20 8E 24           JSR CRLF
0984  261F- C8                 INY
0985  2620- B1 95              LDA (TRANSP),Y

----------------------------------------------------------------------

GRAPHIC BASIC - MAIN COMMANDS      07/01/82   R65 ASSEMBLER  PAGE 25

0986  2622- AA                 TAX
0987  2623- C8                 INY
0988  2624- B1 95              LDA (TRANSP),Y
0989  2626- C5 06              CMP INTEG+1
0990  2628- D0 04              BNE *+6
0991  262A- E4 05              CPX INTEG
0992  262C- F0 02              BEQ *+4
0993  262E- B0 2A              BCS LIST4
0994  2630- 84 7F              STY TEMP3
0995  2632- 20 F9 32           JSR OUTINT
0996                   *
0997  2635- A9 20              LDA =' '
0998  2637- A4 7F      LIST3   LDY TEMP3
0999  2639- 29 7F              AND =$7F
1000  263B- 20 B1 2F           JSR OUTCHR
1001                    * BASIC2:A ORIGINAL 7/1/1982, RECOVERED 3/2018
1002  263E- C9 22              CMP ='"'
1003  2640- D0 06              BNE *+8
1004  2642- A5 47              LDA TEMP2       SET " FLAG
1005  2644- 49 FF              EOR =$FF
1006  2646- 85 47              STA TEMP2
1007  2648- C8                 INY
1008  2649- B1 95              LDA (TRANSP),Y
1009  264B- D0 1E              BNE LIST7       0 MEANS EOL
1010  264D- A8                 TAY
1011  264E- B1 95              LDA (TRANSP),Y  GET ADDRESS OF NEXT
1012  2650- AA                 TAX             LINE
1013  2651- C8                 INY
1014  2652- B1 95              LDA (TRANSP),Y
1015  2654- 86 95              STX TRANSP
1016  2656- 85 96              STA TRANSP+1
1017  2658- D0 B7              BNE LIST2       ALLWAYS TAKEN
1018  265A- A5 00      LIST4   LDA OUTDEV
1019  265C- F0 03              BEQ *+5
1020  265E- 20 9F 42           JSR RSTDEV
1021  2661- 20 8E 24           JSR CRLF
1022  2664- A9 00              LDA =0
1023  2666- 85 00              STA OUTDEV
1024  2668- 4C 7B 23           JMP WARMST
1025                   *
1026  266B- 10 CE      LIST7   BPL LIST3+4
1027  266D- 24 47              BIT TEMP2
1028  266F- 30 CA              BMI LIST3+4
1029  2671- 38                 SEC
1030  2672- E9 7F              SBC =$7F
1031  2674- AA                 TAX             X=CODE-$7F
1032  2675- 84 7F              STY TEMP3
1033  2677- A9 3D              LDA =<COMSTB
1034  2679- A0 20              LDY =>COMSTB
1035  267B- 85 CE              STA TEMP4

----------------------------------------------------------------------

GRAPHIC BASIC - MAIN COMMANDS      07/01/82   R65 ASSEMBLER  PAGE 26

1036  267D- 84 CF              STY TEMP4+1
1037  267F- A0 FF              LDY =$FF
1038  2681- CA         LIST5   DEX
1039  2682- F0 13              BEQ LIST6
1040  2684- C8                 INY             FIND TOKEN STRING
1041  2685- B1 CE              LDA (TEMP4),Y
1042  2687- 10 FB              BPL *-3
1043  2689- 18                 CLC
1044  268A- 98                 TYA
1045  268B- 65 CE              ADC TEMP4
1046  268D- 85 CE              STA TEMP4
1047  268F- A0 00              LDY =0
1048  2691- 90 EE              BCC LIST5
1049  2693- E6 CF              INC TEMP4+1
1050  2695- D0 EA              BNE LIST5       ALLWAYS TAKEN
1051  2697- C8         LIST6   INY
1052  2698- B1 CE              LDA (TEMP4),Y   PRINT CODE STRING
1053  269A- 30 9B              BMI LIST3
1054  269C- 20 B1 2F           JSR OUTCHR
1055  269F- 4C 97 26           JMP LIST6
1056                   *
1057                   *
1058                   * EXRUN: EXECUTE RUNNING, MAIN LOOP
1059                   ***********************************
1060                   *
1061  26A2- 20 2E 20   EXRUN   JSR BREAKT
1062  26A5- A5 A9              LDA PC
1063  26A7- A4 AA              LDY PC+1
1064  26A9- F0 06              BEQ *+8         SKIP IF DIRECT MODE
1065  26AB- 85 73              STA PNTSAV
1066  26AD- 84 74              STY PNTSAV+1
1067  26AF- A0 00              LDY =0
1068                   *
1069  26B1- B1 A9              LDA (PC),Y
1070  26B3- F0 10              BEQ *+18        SKIP, IF EOL
1071  26B5- C9 3A              CMP =':         MUST BE :
1072  26B7- F0 26              BEQ EXCODE
1073  26B9- C9 21              CMP ='!
1074  26BB- F0 05              BEQ *+7
1075  26BD- A2 0F      SYNERR  LDX =$F         SYNTAX ERROR
1076  26BF- 4C 43 23           JMP ERROR
1077                   *
1078  26C2- 20 31 2A           JSR REMARK
1079  26C5- A0 02              LDY =2
1080  26C7- B1 A9              LDA (PC),Y
1081  26C9- 18                 CLC
1082  26CA- F0 6F              BEQ STOP1       BRANCH, IF END OF PRO-
1083  26CC- C8                 INY             GRAM OR DIRECT MODE
1084  26CD- B1 A9              LDA (PC),Y
1085  26CF- 85 6F              STA LINE

----------------------------------------------------------------------

GRAPHIC BASIC - MAIN COMMANDS      07/01/82   R65 ASSEMBLER  PAGE 27

1086  26D1- C8                 INY
1087  26D2- B1 A9              LDA (PC),Y
1088  26D4- 85 70              STA LINE+1
1089  26D6- 98                 TYA
1090  26D7- 65 A9              ADC PC
1091  26D9- 85 A9              STA PC          ADJUST PC
1092  26DB- 90 02              BCC *+4
1093  26DD- E6 AA              INC PC+1
1094                   *
1095                   *
1096  26DF- 20 00 27   EXCODE  JSR FETCH
1097  26E2- 20 E8 26           JSR EXCOD1
1098  26E5- 4C A2 26           JMP EXRUN
1099                   *
1100                   *
1101                   * EXCODE: GET STATEMENT VECTOR AND EXECUTE
1102                   *
1103  26E8- F0 34      EXCOD1  BEQ FETCHE      RTS, IF EOL
1104  26EA- 38                 SEC
1105  26EB- E9 80              SBC =128
1106  26ED- B0 03              BCS *+5
1107  26EF- 4C 42 2A           JMP LET         MUST BE LET
1108  26F2- C9 30              CMP =$30
1109  26F4- B0 C7              BCS SYNERR      NOT LEGAL STATEMENT
1110  26F6- 0A                 ASL A
1111  26F7- A8                 TAY
1112  26F8- B9 6B 21           LDA STVECT+1,Y  GET VECTOR
1113  26FB- 48                 PHA
1114  26FC- B9 6A 21           LDA STVECT,Y
1115  26FF- 48                PHA             FETCH, THEN EXECUTE CODE
1116                   *
1117                   *
1118                   * FETCH: FETCH NEXT BASIC CHAR
1119                   ******************************
1120                   * INCREMENT PC, FETCH (PC), BLANKS ARE SKIPPED
1121                   * C=0 IF NUMBER
1122                   *
1123  2700- E6 A9      FETCH   INC PC
1124  2702- D0 02              BNE FETCH1
1125  2704- E6 AA              INC PC+1
1126                   *
1127  2706- 84 CE      FETCH1  STY TEMP4       ENTRY WITHOUT INCR PC
1128  2708- A0 00              LDY =0
1129  270A- B1 A9              LDA (PC),Y
1130  270C- 85 F1              STA LED
1131  270E- A4 CE              LDY TEMP4
1132  2710- C9 3A              CMP =$3A        NUMBER TEST
1133  2712- B0 0A              BCS FETCHE
1134  2714- C9 20              CMP =' '        SKIP BLANKS
1135  2716- F0 E8              BEQ FETCH

----------------------------------------------------------------------

GRAPHIC BASIC - MAIN COMMANDS      07/01/82   R65 ASSEMBLER  PAGE 28

1136  2718- 38                 SEC
1137  2719- E9 30              SBC =$30
1138  271B- 38                 SEC
1139  271C- E9 D0              SBC =$D0
1140  271E- 60         FETCHE  RTS
1141                   *
1142                   *
1143                   * STOP: STATEMENT ROUTINE
1144                   *************************
1145                   *
1146  271F- B0 01      STOP    BCS *+3
1147                   *
1148                   *
1149                   * END: STATEMENT ROUTINE
1150                   ************************
1151                   *
1152  2721- 18         END     CLC
1153  2722- D0 FA              BNE FETCHE      RST, IF NOT EOLD
1154  2724- 20 DB 45           JSR RSTALL
1155  2727- A5 A9              LDA PC
1156  2729- A4 AA              LDY PC+1
1157  272B- F0 0C              BEQ STOP1-2     SKIP IN DIRECT MODE
1158  272D- 85 73              STA PNTSAV
1159  272F- 84 74              STY PNTSAV+1
1160  2731- A5 6F              LDA LINE
1161  2733- A4 70              LDY LINE+1
1162  2735- 85 71              STA LINSAV
1163  2737- 84 72              STY LINSAV+1
1164  2739- 68                 PLA             RETURN ONE LEVEL
1165  273A- 68                 PLA
1166  273B- A9 B3      STOP1   LDA =<(ERRORM+17)       BREAK MESSAGE
1167  273D- A0 22              LDY =>(ERRORM+17)
1168  273F- 90 03              BCC *+5
1169  2741- 4C 70 23           JMP STOP2
1170  2744- 4C 7B 23           JMP WARMST
1171                   *
1172                   *
1173                   * RESTORE: STATEMENT ROUTINE
1174                   ****************************
1175                   *
1176  2747- F0 11      RESTOR  BEQ *+19
1177  2749- 20 44 28           JSR FETCHI      GET LINE NO
1178  274C- 20 54 25           JSR SEARLN
1179  274F- B0 03              BCS *+5
1180  2751- 4C B3 27           JMP UNDEFS
1181  2754- A5 95              LDA TRANSP
1182  2756- A4 96              LDY TRANSP+1
1183  2758- B0 05              BCS *+7         ALLWAYS TAKEN
1184                   *
1185  275A- A5 61              LDA STPROG

----------------------------------------------------------------------

GRAPHIC BASIC - MAIN COMMANDS      07/01/82   R65 ASSEMBLER  PAGE 29

1186  275C- A4 62              LDY STPROG+1
1187                   *
1188  275E- 38                 SEC
1189  275F- E9 01              SBC =1
1190  2761- B0 01              BCS *+3
1191  2763- 88                 DEY
1192  2764- 85 77              STA DATPNT
1193  2766- 84 78              STY DATPNT+1
1194  2768- 60                 RTS
1195                   *
1196                   *
1197                   * CLR: STATEMENT ROUTINE
1198                   ************************
1199                   *
1200  2769- D0 FB      CLR     BNE *-3         RTS, IF NOT EOLD
1201  276B- 4C 9C 25           JMP CLR1
1202                   *
1203                   *
1204                   * RUN: STATEMENT ROUTINE
1205                   ************************
1206                   *
1207  276E- D0 03      RUN     BNE *+5
1208  2770- 4C 99 25           JMP CLR1-3      SET PC, CLR AND RUN
1209                   *
1210  2773- 4C E8 41           JMP LOAD9       LOAD NEW USER PROGRAM
1211                   *
1212                   *
1213                   * GOSUB: STATEMENT ROUTINE
1214                   **************************
1215                   *
1216  2776- A9 03      GOSUB   LDA =3
1217  2778- 20 34 23           JSR TSSTK
1218  277B- A5 AA              LDA PC+1
1219  277D- 48                 PHA             SAVE PC ON STACK
1220  277E- A5 A9              LDA PC
1221  2780- 48                 PHA
1222  2781- A5 70              LDA LINE+1      SAVE LINE
1223  2783- 48                 PHA
1224  2784- A5 6F              LDA LINE
1225  2786- 48                 PHA
1226  2787- A9 8D              LDA =$8D        CODE FOR GOSUB
1227  2789- 48                 PHA
1228  278A- 20 06 27           JSR FETCH1
1229  278D- 20 93 27           JSR GOTO
1230  2790- 4C A2 26           JMP EXRUN
1231                   *
1232                   *
1233                   * GOTO: STATEMENT ROUTINE
1234                   *************************
1235                   *

----------------------------------------------------------------------

GRAPHIC BASIC - MAIN COMMANDS      07/01/82   R65 ASSEMBLER  PAGE 30

1236  2793- 20 44 28   GOTO    JSR FETCHI
1237  2796- 20 F7 27           JSR SEEOL
1238  2799- A5 70              LDA LINE+1
1239  279B- C5 06              CMP INTEG+1
1240  279D- B0 0B              BCS GOTO1       SEARCH FROM START
1241                   *
1242  279F- 98                 TYA             SEARCH FOR NEXT LIN
1243  27A0- 38                 SEC
1244  27A1- 65 A9              ADC PC
1245  27A3- A6 AA              LDX PC+1        COMPUTE NEXT LINE
1246  27A5- 90 07              BCC GOTO1+4
1247  27A7- E8                 INX
1248  27A8- B0 04              BCS GOTO1+4
1249                   *
1250  27AA- A5 61      GOTO1   LDA STPROG
1251  27AC- A6 62              LDX STPROG+1
1252  27AE- 20 58 25           JSR SEARLN+4
1253  27B1- B0 05              BCS *+7
1254  27B3- A2 47      UNDEFS  LDX =$47
1255  27B5- 4C 43 23           JMP ERROR       UNDEFINED STATEMENT
1256  27B8- A5 95              LDA TRANSP
1257  27BA- E9 01              SBC =1
1258  27BC- 85 A9              STA PC          SET NEW PC
1259  27BE- A5 96              LDA TRANSP+1
1260  27C0- E9 00              SBC =0
1261  27C2- 85 AA              STA PC+1
1262  27C4- 60                 RTS
1263                   *
1264                   *
1265                   * RETURN: STATEMENT ROUTINE
1266                   ***************************
1267                   *
1268  27C5- D0 FD      RETURN  BNE *-1         RTS, IF NOT EOLL
1269  27C7- A9 FF              LDA =$FF
1270  27C9- 85 7F              STA TEMP3
1271  27CB- 20 16 28           JSR STACK
1272  27CE- 9A                 TXS
1273  27CF- C9 8D              CMP =$8D        CODE FOR GOSUB
1274  27D1- F0 05              BEQ *+7
1275  27D3- A2 15              LDX =$15
1276  27D5- 4C 43 23           JMP ERROR       NO MATCHING GOSUB
1277                   *
1278  27D8- 68                 PLA             GET CODE FOR GOSUB
1279  27D9- 68                 PLA             GET LINE
1280  27DA- 85 6F              STA LINE
1281  27DC- 68                 PLA
1282  27DD- 85 70              STA LINE+1
1283  27DF- 68                 PLA             GET PC FROM STACK
1284  27E0- 85 A9              STA PC
1285  27E2- 68                 PLA

----------------------------------------------------------------------

GRAPHIC BASIC - MAIN COMMANDS      07/01/82   R65 ASSEMBLER  PAGE 31

1286  27E3- 85 AA              STA PC+1        CONTINUE WITH DATA
1287                   *
1288                   *
1289                   * DATA: STATEMENT ROUTINE
1290                   *************************
1291                   * SKIPS RESTOF LINE, OR UP TO NEXT ":"
1292                   *
1293  27E5- 20 F3 27   DATA    JSR SEDPN
1294  27E8- 98                 TYA
1295  27E9- 18                 CLC
1296  27EA- 65 A9              ADC PC
1297  27EC- 85 A9              STA PC
1298  27EE- 90 02              BCC *+4
1299  27F0- E6 AA              INC PC+1
1300  27F2- 60         DATAE   RTS
1301                   *
1302                   *
1303                   * SUBROUTINE TO SEARCH IN LINE
1304                   ******************************
1305                   * SEDPN SEARCHES ":" OR EOLD
1306                   * SEEOL SEARCHES EOL
1307                   * OUTPUT IS Y
1308                   *
1309  27F3- A2 3A      SEDPN   LDX =$3A
1310  27F5- D0 02              BNE *+4
1311  27F7- A2 00      SEEOL   LDX =0
1312  27F9- 86 41              STX CHRSAV
1313  27FB- A0 00              LDY =0
1314  27FD- 84 42              STY CHRSAV+1
1315  27FF- A5 42     SEEOL1  LDA CHRSAV+1
1316  2801- A6 41              LDX CHRSAV
1317  2803- 85 41              STA CHRSAV
1318  2805- 86 42              STX CHRSAV+1
1319  2807- B1 A9              LDA (PC),Y      RTS, IF EOL
1320  2809- F0 E7              BEQ DATAE
1321  280B- C5 42              CMP CHRSAV+1
1322  280D- F0 E3              BEQ DATAE       RTS, IF MATCHING
1323  280F- C8                 INY
1324  2810- C9 22              CMP ='"'        DO NOT SEARCH ":"
1325  2812- F0 EB              BEQ SEEOL1      IN STRING
1326  2814- D0 F1              BNE SEEOL1+8    ALLWAYS TAKEN
1327                   *
1328                   *
1329                   * STACK: PREPARE STACK
1330                   **********************
1331                   * USED IN NEXT AND RETURN
1332                   *
1333  2816- BA         STACK   TSX
1334  2817- E8                 INX
1335  2818- E8                 INX

----------------------------------------------------------------------

GRAPHIC BASIC - MAIN COMMANDS      07/01/82   R65 ASSEMBLER  PAGE 32

1336  2819- E8                 INX
1337  281A- E8                 INX
1338  281B- BD 01 01           LDA $101,X      STACK PAGE
1339  281E- C9 81              CMP =$81
1340  2820- D0 21              BNE STACK4
1341  2822- A5 80              LDA TEMP3+1
1342  2824- D0 0A              BNE *+12
1343  2826- BD 02 01           LDA $102,X
1344  2829- 85 7F              STA TEMP3
1345  282B- BD 03 01           LDA $103,X
1346  282E- 85 80              STA TEMP3+1
1347  2830- DD 03 01           CMP $103,X
1348  2833- D0 07              BNE *+9
1349  2835- A5 7F              LDA TEMP3
1350  2837- DD 02 01           CMP $102,X
1351  283A- F0 07              BEQ STACK4
1352  283C- 8A                 TXA
1353  283D- 18                 CLC
1354  283E- 69 12              ADC =18
1355  2840- AA                 TAX
1356  2841- D0 D8              BNE STACK+5
1357  2843- 60         STACK4  RTS
1358                   *
1359                   *
1360                   * FETCHI: FETCH INTEGER
1361                   ***********************
1362                   *
1363  2844- A2 00      FETCHI  LDX =0
1364  2846- 86 05              STX INTEG
1365  2848- 86 06              STX INTEG+1
1366  284A- B0 F7              BCS STACK4      RTS, IF NOT DIGIT
1367  284C- E9 2F              SBC =$2F        CONVERT TO DIGIT(C=0)
1368  284E- 85 42              STA CHRSAV+1
1369  2850- A5 06              LDA INTEG+1
1370  2852- 85 58              STA TEMP1
1371  2854- C9 19              CMP =$19
1372  2856- 90 03              BCC *+5
1373  2858- 4C BD 26           JMP SYNERR
1374                   *
1375  285B- A5 05              LDA INTEG       INTEG=10*INTEG+DIGIT
1376  285D- 0A                 ASL A
1377  285E- 26 58              ROL TEMP1
1378  2860- 0A                 ASL A
1379  2861- 26 58              ROL TEMP1
1380  2863- 65 05              ADC INTEG
1381  2865- 85 05              STA INTEG
1382  2867- A5 58              LDA TEMP1
1383  2869- 65 06              ADC INTEG+1
1384  286B- 06 05              ASL INTEG
1385  286D- 2A                 ROL A

----------------------------------------------------------------------

GRAPHIC BASIC - MAIN COMMANDS      07/01/82   R65 ASSEMBLER  PAGE 33

1386  286E- 85 06              STA INTEG+1
1387  2870- A5 05              LDA INTEG
1388  2872- 65 42              ADC CHRSAV+1
1389  2874- 85 05              STA INTEG
1390  2876- 90 02              BCC *+4
1391  2878- E6 06              INC INTEG+1
1392  287A- 20 00 27           JSR FETCH
1393  287D- 4C 4A 28           JMP FETCHI+6
1394                   *
1395                   *
1396                   * OUTSTR: PRINT STRING AT A,Y
1397                   *****************************
1398                   * END MARK IS 0
1399                   *
1400  2880- 20 9D 28   OUTSTR  JSR STRSIZ
1401  2883- 20 04 29           JSR PREPST
1402                   *
1403                   * A=NO OF CHARS, TEMP1=START
1404                   *
1405  2886- AA                 TAX
1406  2887- A0 00              LDY =0
1407  2889- E8                 INX
1408  288A- CA                 DEX
1409  288B- F0 B6              BEQ STACK4      RTS, IF X=0
1410  288D- B1 58              LDA (TEMP1),Y
1411  288F- 20 B1 2F           JSR OUTCHR
1412  2892- C8                 INY
1413  2893- C9 0D              CMP =$D         IF CR,PADOUT
1414  2895- D0 F3              BNE *-11
1415  2897- 20 98 24           JSR PADOUT
1416  289A- 4C 8A 28           JMP *-16
1417                   *
1418                   *
1419                   * STRSIZ: STRING SIZE IN A,Y
1420                   ****************************
1421                   *
1422  289D- A2 22      STRSIZ  LDX ='"'
1423  289F- 86 41              STX CHRSAV
1424  28A1- 86 42              STX CHRSAV+1
1425  28A3- 85 A5              STA DYADIC+6
1426  28A5- 84 A6              STY DYADIC+7    SAVE START
1427  28A7- 85 98              STA MANT
1428  28A9- 84 99              STY MANT+1
1429                   *
1430  28AB- A0 FF              LDY =$FF
1431  28AD- C8         STRSI1  INY
1432  28AE- B1 A5              LDA (DYADIC+6),Y
1433  28B0- F0 0C              BEQ STRSI2+4    END MARK
1434  28B2- C5 41              CMP CHRSAV
1435  28B4- F0 04              BEQ STRSI2

----------------------------------------------------------------------

GRAPHIC BASIC - MAIN COMMANDS      07/01/82   R65 ASSEMBLER  PAGE 34

1436  28B6- C5 42              CMP CHRSAV+1
1437  28B8- D0 F3              BNE STRSI1
1438  28BA- C9 22      STRSI2  CMP ='"'
1439  28BC- F0 01              BEQ *+3
1440  28BE- 18                 CLC
1441  28BF- 84 97              STY EXP         SAVE SIZE IN EXP
1442  28C1- 98                 TYA
1443  28C2- 65 A5              ADC DYADIC+6    DYADIC+6=START
1444  28C4- 85 A7              STA DYADIC+8    DYADIC+8=END
1445  28C6- A6 A6              LDX DYADIC+7
1446  28C8- 90 01              BCC *+3
1447  28CA- E8                 INX
1448  28CB- 86 A8              STX DYADIC+9
1449  28CD- A5 A6              LDA DYADIC+7
1450  28CF- D0 0B              BNE STRSI3      SKIP, IF STRING NOT
1451                   *                       IN PAGE 0
1452  28D1- 98                 TYA
1453  28D2- 20 A2 2D           JSR TSTRRM      TEST STRING ROOM
1454  28D5- A6 A5              LDX DYADIC+6
1455  28D7- A4 A6              LDY DYADIC+7
1456  28D9- 20 C2 2D           JSR INSST0      INSERT STRING
1457                   *
1458  28DC- A6 4C      STRSI3  LDX STRSTP
1459  28DE- E0 58              CPX =STRST+9
1460  28E0- D0 05              BNE *+7
1461  28E2- A2 B3              LDX =$B3        FORMULA TOO LONG
1462  28E4- 4C 43 23           JMP ERROR
1463                   *
1464  28E7- A5 97              LDA EXP
1465  28E9- 95 00              STA 0,X         SAVE SIZE
1466  28EB- A5 98              LDA MANT        SAVE START
1467  28ED- 95 01              STA 1,X
1468  28EF- A5 99              LDA MANT+1
1469  28F1- 95 02              STA 2,X
1470  28F3- A0 00              LDY =0
1471  28F5- 86 9A              STX MANT+2      POINTER TO SAVED
1472  28F7- 84 9B              STY MANT+3
1473  28F9- 88                 DEY
1474  28FA- 84 45              STY RESTYP
1475  28FC- 86 4D              STX STRSTP+1
1476  28FE- E8                 INX
1477  28FF- E8                INX
1478  2900- E8                 INX
1479  2901- 86 4C              STX STRSTP
1480  2903- 60                 RTS
1481                   *
1482                   *
1483                   * PREPST: PREPARE STRING FOR OUTPUT
1484                   ***********************************
1485                   *

----------------------------------------------------------------------

GRAPHIC BASIC - MAIN COMMANDS      07/01/82   R65 ASSEMBLER  PAGE 35

1486  2904- A5 9A      PREPST  LDA MANT+2
1487  2906- A4 9B              LDY MANT+3
1488  2908- 85 58              STA TEMP1
1489  290A- 84 59              STY TEMP1+1
1490  290C- 20 39 29           JSR PREPS1
1491  290F- 08                 PHP
1492  2910- A0 00              LDY =0
1493  2912- B1 58              LDA (TEMP1),Y
1494  2914- 48                 PHA             SIZE TO A
1495  2915- C8                 INY
1496  2916- B1 58              LDA (TEMP1),Y
1497  2918- AA                 TAX             ADDRESS LOW TO X
1498  2919- C8                 INY
1499  291A- B1 58              LDA (TEMP1),Y
1500  291C- A8                 TAY             ADDRESS HIGH TO Y
1501  291D- 68                 PLA
1502  291E- 28                 PLP
1503  291F- D0 13              BNE PREPS0
1504  2921- C4 6A              CPY BTSTRG+1
1505  2923- D0 0F              BNE PREPS0      BRANCH, IF NOT STORED
1506  2925- E4 69              CPX BTSTRG      STRING IN STRING AREA
1507  2927- D0 0B              BNE PREPS0
1508  2929- 48                 PHA
1509  292A- 18                 CLC
1510  292B- 65 69              ADC BTSTRG
1511  292D- 85 69              STA BTSTRG
1512  292F- 90 02              BCC *+4
1513  2931- E6 6A              INC BTSTRG+1
1514  2933- 68                 PLA
1515  2934- 86 58      PREPS0  STX TEMP1
1516  2936- 84 59              STY TEMP1+1
1517  2938- 60                 RTS
1518                   *
1519  2939- C4 4E      PREPS1  CPY STRSTP+2
1520  293B- D0 0C              BNE PREPS2
1521  293D- C5 4D              CMP STRSTP+1
1522  293F- D0 08              BNE PREPS2
1523  2941- 85 4C              STA STRSTP
1524  2943- E9 03              SBC =3
1525  2945- 85 4D              STA STRSTP+1
1526  2947- A0 00              LDY =0
1527  2949- 60         PREPS2  RTS
1528                   *
1529                   *
1530                   * COLDST: COLD START
1531                   ********************
1532                   *
1533  294A- A2 FF      COLDST  LDX =$FF
1534  294C- 86 70              STX LINE+1
1535  294E- 86 04              STX INBNUM+1

----------------------------------------------------------------------

GRAPHIC BASIC - MAIN COMMANDS      07/01/82   R65 ASSEMBLER  PAGE 36

1536  2950- 9A                 TXS
1537  2951- 58                 CLI
1538  2952- D8                 CLD
1539  2953- 20 15 F0           JSR CLOSAL
1540  2956- A9 4C              LDA =$4C
1541  2958- 85 8A              STA PNT1-1      VECTOR FOR BFUNC
1542  295A- AD 00 14           LDA PORTB1      WRITE DISABLE BASIC
1543  295D- 29 FF              AND =$FF        DUMMY
1544  295F- 8D 00 14           STA PORTB1      (FIRST 8k)
1545  2962- A9 00              LDA =0
1546  2964- 85 9E              STA CURRSG+1
1547  2966- 85 00              STA OUTDEV
1548  2968- 85 C1              STA INPDEV
1549  296A- 85 C2              STA AUTOIN
1550  296C- 85 4E              STA STRSTP+2
1551  296E- 85 01              STA NUMPAD
1552  2970- 85 02              STA POS
1553  2972- 85 BB              STA POSTB
1554  2974- 85 BC              STA POSTB+1
1555  2976- 85 BD              STA POSTB+2
1556  2978- 85 BE              STA POSTB+3
1557  297A- 48                 PHA
1558  297B- 85 4B              STA STRSTP-1
1559  297D- A9 03              LDA =3
1560  297F- 85 89              STA SIZE
1561  2981- A9 2C              LDA =$2C
1562  2983- 85 06              STA INTEG+1
1563  2985- 20 9F 42           JSR RSTDEV
1564  2988- A2 4F              LDX =STRST      SET STRING STACK POINTER
1565  298A- 86 4C              STX STRSTP
1566                   *
1567  298C- AD 06 20           LDA STRRAM      START OF USER AREA
1568  298F- AE 07 20           LDX STRRAM+1
1569  2992- 85 61              STA STPROG
1570  2994- 86 62              STX STPROG+1
1571  2996- AD 08 20           LDA ENDRAM      END OF USER AREA
1572  2999- AE 09 20           LDX ENDRAM+1
1573  299C- 85 6D              STA TPMEM
1574  299E- 86 6E              STX TPMEM+1
1575  29A0- 85 69              STA BTSTRG
1576  29A2- 86 6A              STX BTSTRG+1
1577  29A4- A0 00              LDY =0
1578  29A6- 98                 TYA
1579  29A7- 91 61              STA (STPROG),Y
1580  29A9- E6 61              INC STPROG
1581  29AB- D0 02              BNE *+4
1582  29AD- E6 62              INC STPROG+1
1583  29AF- A5 61              LDA STPROG
1584  29B1- A4 62              LDY STPROG+1
1585  29B3- 20 07 23           JSR TSROOM

----------------------------------------------------------------------

GRAPHIC BASIC - MAIN COMMANDS      07/01/82   R65 ASSEMBLER  PAGE 37

1586  29B6- 20 8E 24           JSR CRLF
1587  29B9- A9 D3              LDA =<HEADM
1588  29BB- A0 29              LDY =>HEADM
1589  29BD- 20 80 28           JSR OUTSTR
1590  29C0- A5 6D              LDA TPMEM
1591  29C2- 38                 SEC
1592  29C3- E5 61              SBC STPROG
1593  29C5- AA                 TAX
1594  29C6- A5 6E              LDA TPMEM+1
1595  29C8- E5 62              SBC STPROG+1
1596  29CA- 20 F9 32           JSR OUTINT
1597  29CD- 20 85 25           JSR NEW+2
1598  29D0- 4C 7B 23           JMP WARMST
1599                   *
1600  29D3- 0D 0A 0A   HEADM   BYT $D,$A,$A,$A
1600  29D6- 0A 
1601  29D7- 09 2A 2A           BYT 9,'** R65 GRAPHIC BASIC V6.1 **'
1601  29DA- 20 52 36 
1601  29DD- 35 20 47 
1601  29E0- 52 41 50 
1601  29E3- 48 49 43 
1601  29E6- 20 42 41 
1601  29E9- 53 49 43 
1601  29EC- 20 56 36 
1601  29EF- 2E 31 20 
1601  29F2- 2A 2A 
1602  29F4- 0D 0A 0A          BYT $D,$A,$A,'BYTES FREE: ',0
1602  29F7- 42 59 54 
1602  29FA- 45 53 20 
1602  29FD- 46 52 45 
1602  2A00- 45 3A 20 
1602  2A03- 00 
1603                   *
1604                   *
1605                   * CONT: COMMAND ROUTINE
1606                   ***********************
1607                   *
1608  2A04- D0 17      CONT    BNE CONTE       RTS, IF NOT EOL
1609  2A06- A2 C6              LDX =$C6        CONT ERROR?
1610  2A08- A4 74              LDY PNTSAV+1    =0 IF CONT ILL
1611  2A0A- D0 03              BNE *+5
1612  2A0C- 4C 43 23           JMP ERROR
1613  2A0F- A5 73              LDA PNTSAV
1614  2A11- 85 A9              STA PC
1615  2A13- 84 AA              STY PC+1
1616  2A15- A5 71              LDA LINSAV
1617  2A17- A4 72              LDY LINSAV+1
1618  2A19- 85 6F              STA LINE
1619  2A1B- 84 70              STY LINE+1
1620  2A1D- 60         CONTE   RTS

----------------------------------------------------------------------

GRAPHIC BASIC - MAIN COMMANDS      07/01/82   R65 ASSEMBLER  PAGE 38

1621                   *
1622                   *
1623                   * IF: STATEMENT ROUTINE
1624                   ***********************
1625                   *
1626  2A1E- 20 EC 2D   IF      JSR EXPRES
1627  2A21- 20 06 27           JSR FETCH1
1628  2A24- C9 89              CMP =$89        CODE FOR GOTO
1629  2A26- F0 05              BEQ *+7
1630  2A28- A9 B4              LDA =$B4        CODE FOR THEN
1631  2A2A- 20 68 2B           JSR FOLLOW      MUST FOLLOW
1632  2A2D- A5 97              LDA EXP         EXP=0:SKIP REST OF LINE
1633  2A2F- D0 06              BNE *+8
1634                   *
1635                   *
1636                   * REMARK: STATEMENT ROUTINE
1637                   ***************************
1638                   *
1639  2A31- 20 F7 27   REMARK  JSR SEEOL
1640  2A34- 4C E8 27           JMP DATA+3
1641                   *
1642                   * CONTINUE IF
1643                   *
1644  2A37- 20 06 27           JSR FETCH1
1645  2A3A- B0 03              BCS *+5
1646  2A3C- 4C 93 27           JMP GOTO
1647  2A3F- 4C E8 26           JMP EXCOD1
1648                   *
1649                   *
1650                   * LET: STATEMENT ROUTINE
1651                   ************************
1652                   *
1653  2A42- A2 00      LET     LDX =0          VARIABLE CAN BE DEFINED
1654  2A44- 86 CF              STX TEMP4+1
1655  2A46- 20 74 2B           JSR GETVAR
1656  2A49- 85 7F              STA TEMP3       SAVE START
1657  2A4B- 84 80              STY TEMP3+1
1658  2A4D- A9 BF              LDA =$BF        CODE FOR =
1659  2A4F- 20 68 2B           JSR FOLLOW      MUST FOLLOW
1660  2A52- A5 46              LDA RESTYP+1
1661  2A54- 48                 PHA
1662  2A55- A5 45              LDA RESTYP
1663  2A57- 48                 PHA
1664  2A58- 20 EC 2D           JSR EXPRES
1665  2A5B- 68                 PLA
1666  2A5C- 2A                 ROL A           TEST RESULT TYPE
1667  2A5D- 20 DE 2D           JSR TESTTP+1
1668  2A60- D0 18              BNE LET1+3
1669  2A62- 68                 PLA
1670  2A63- 10 12      LET0    BPL LET1

----------------------------------------------------------------------

GRAPHIC BASIC - MAIN COMMANDS      07/01/82   R65 ASSEMBLER  PAGE 39

1671                   *
1672                   * SAVE INTEGER
1673                   *
1674  2A65- 20 EF 34           JSR ROUND
1675  2A68- 20 0B 37           JSR FLPINT
1676  2A6B- A0 00              LDY =0
1677  2A6D- A5 9A              LDA MANT+2
1678  2A6F- 91 7F              STA (TEMP3),Y
1679  2A71- C8                 INY
1680  2A72- A5 9B              LDA MANT+3
1681  2A74- 91 7F              STA (TEMP3),Y
1682  2A76- 60                 RTS
1683                   *
1684                   * SAVE FLP
1685                   *
1686  2A77- 4C C3 34   LET1    JMP SAVFLP
1687                   *
1688                   * SAVE STRING
1689                   *
1690  2A7A- 68                 PLA
1691  2A7B- A0 02              LDY =2
1692  2A7D- B1 9A              LDA (MANT+2),Y
1693  2A7F- C5 6A              CMP BTSTRG+1
1694  2A81- 90 17              BCC LET2        SKIP, IF NOT SAVED S
1695  2A83- D0 07              BNE *+9
1696  2A85- 88                 DEY
1697  2A86- B1 9A              LDA (MANT+2),Y
1698  2A88- C5 69              CMP BTSTRG
1699  2A8A- 90 0E              BCC LET2
1700  2A8C- A4 9B              LDY MANT+3
1701  2A8E- C4 64              CPY STVAR+1
1702  2A90- 90 08              BCC LET2
1703  2A92- D0 0D              BNE LET2+7
1704  2A94- A5 9A              LDA MANT+2
1705  2A96- C5 63              CMP STVAR
1706  2A98- B0 07              BCS LET2+7
1707                   *
1708  2A9A- A5 9A      LET2    LDA MANT+2
1709  2A9C- A4 9B              LDY MANT+3
1710  2A9E- 4C B7 2A           JMP LET3
1711                   *
1712  2AA1- A0 00              LDY =0
1713  2AA3- B1 9A              LDA (MANT+2),Y
1714  2AA5- 20 A2 2D           JSR TSTRRM
1715  2AA8- A5 86              LDA TEMP5
1716  2AAA- A4 87              LDY TEMP5+1
1717  2AAC- 85 A5              STA DYADIC+6
1718  2AAE- 84 A6              STY DYADIC+7
1719  2AB0- 20 B4 2D           JSR INSSTR
1720  2AB3- A9 97              LDA =<EXP

----------------------------------------------------------------------

GRAPHIC BASIC - MAIN COMMANDS      07/01/82   R65 ASSEMBLER  PAGE 40

1721  2AB5- A0 00              LDY =0
1722  2AB7- 85 86      LET3    STA TEMP5
1723  2AB9- 84 87              STY TEMP5+1
1724  2ABB- 20 39 29           JSR PREPS1
1725  2ABE- A0 00              LDY =0
1726  2AC0- B1 86              LDA (TEMP5),Y
1727  2AC2- 91 7F              STA (TEMP3),Y
1728  2AC4- C8                 INY
1729  2AC5- B1 86              LDA (TEMP5),Y
1730  2AC7- 91 7F              STA (TEMP3),Y
1731  2AC9- C8                 INY
1732  2ACA- B1 86              LDA (TEMP5),Y
1733  2ACC- 91 7F              STA (TEMP3),Y
1734  2ACE- 60                 RTS
1735                   *
1736                   *
1737                   * PRINT: STATEMENT ROUTINE
1738                   **************************
1739                   *
1740  2ACF- C9 23      PRINT   CMP ='#'        DEVICE
1741  2AD1- D0 11              BNE PRINT1-3
1742  2AD3- 20 55 42           JSR SETDEV
1743  2AD6- 20 E4 2A           JSR PRINT1-3
1744  2AD9- 20 9F 42           JSR RSTDEV
1745  2ADC- A2 00              LDX =0
1746  2ADE- 86 00              STX OUTDEV
1747  2AE0- 60                 RTS
1748                   *
1749  2AE1- 20 83 28           JSR OUTSTR+3
1750  2AE4- 20 06 27           JSR FETCH1
1751  2AE7- D0 03      PRINT1  BNE *+5
1752  2AE9- 4C 8E 24           JMP CRLF        CRLF, IF EOL
1753  2AEC- C9 21              CMP ='!'        COMMENT?
1754  2AEE- F0 F9              BEQ PRINT1+2    YES, SAME AS EOL
1755  2AF0- C9 B0              CMP =$B0
1756  2AF2- F0 36              BEQ TAB         CODE FOR TAB(
1757  2AF4- C9 B3              CMP =$B3        CODE FOR SPC(
1758  2AF6- F0 32              BEQ TAB
1759  2AF8- C9 2C              CMP =','
1760  2AFA- F0 21              BEQ AUTOTB
1761  2AFC- C9 3B              CMP =';'
1762  2AFE- F0 4A             BEQ TAB1+8
1763  2B00- C9 5B              CMP ='['
1764  2B02- F0 50              BEQ PRINT2
1765  2B04- 20 EC 2D           JSR EXPRES
1766  2B07- 24 45              BIT RESTYP
1767  2B09- 30 D6              BMI PRINT1-6    IF STRING
1768  2B0B- 20 BD 49           JSR FORMOUT
1769  2B0E- 20 80 28           JSR OUTSTR
1770  2B11- A5 CB              LDA FORMFL

----------------------------------------------------------------------

GRAPHIC BASIC - MAIN COMMANDS      07/01/82   R65 ASSEMBLER  PAGE 41

1771  2B13- D0 05              BNE *+7
1772  2B15- A9 20              LDA =' '
1773  2B17- 20 B1 2F           JSR OUTCHR
1774  2B1A- 4C E4 2A           JMP PRINT1-3
1775                   *
1776  2B1D- A5 02      AUTOTB  LDA POS
1777  2B1F- 38                 SEC
1778  2B20- E9 0C              SBC =12
1779  2B22- B0 FC              BCS *-2
1780  2B24- 49 FF              EOR =$FF
1781  2B26- 69 01              ADC =1
1782  2B28- D0 17              BNE TAB1-1      ALLWAYS TAKEN
1783                   *
1784  2B2A- 48         TAB     PHA             SAVE CODE
1785  2B2B- 20 E9 36           JSR NUMEXP
1786  2B2E- C9 29              CMP =')'
1787  2B30- F0 03              BEQ *+5
1788  2B32- 4C BD 26           JMP SYNERR
1789  2B35- 68                 PLA
1790  2B36- C9 B0              CMP =$B0        TAB(
1791  2B38- D0 16              BNE TAB1+14
1792  2B3A- 8A                 TXA
1793  2B3B- E5 02              SBC POS
1794  2B3D- 90 0B              BCC TAB1+8
1795  2B3F- F0 09              BEQ TAB1+8
1796  2B41- AA                 TAX
1797  2B42- A9 20      TAB1    LDA =' '
1798  2B44- 20 B1 2F           JSR OUTCHR
1799  2B47- CA                 DEX
1800  2B48- D0 F8              BNE TAB1
1801  2B4A- 20 00 27           JSR FETCH
1802  2B4D- D0 9D              BNE PRINT1+5
1803  2B4F- 60                 RTS
1804                   *
1805  2B50- E8                 INX
1806  2B51- 4C 47 2B           JMP TAB1+5
1807                   *
1808  2B54- 20 00 27   PRINT2  JSR FETCH       GET FORMAT CODE
1809  2B57- 20 FD 49           JSR FORMAT
1810  2B5A- A9 5D              LDA =']'
1811  2B5C- 20 68 2B           JSR FOLLOW
1812  2B5F- 4C E7 2A           JMP PRINT1
1813                   *
1814                   * FOLLOW: CHAR IN A MUST FOLLOW
1815                   *******************************
1816                   *
1817  2B62- A9 28              LDA ='('        FOLLOW-6: "(" MUST FOLLO
1818  2B64- D0 02              BNE *+4
1819  2B66- A9 29              LDA =')'        FOLLOW-1: ")" MUST FOLLO
1820  2B68- A0 00      FOLLOW  LDY =0

----------------------------------------------------------------------

GRAPHIC BASIC - MAIN COMMANDS      07/01/82   R65 ASSEMBLER  PAGE 42

1821  2B6A- D1 A9              CMP (PC),Y
1822  2B6C- D0 03              BNE *+5
1823  2B6E- 4C 00 27           JMP FETCH
1824  2B71- 4C BD 26           JMP SYNERR
1825                   *
1826                           TIT GRAPHIC BASIC - EXPRESSIONS
1827                           PAG

----------------------------------------------------------------------

GRAPHIC BASIC - EXPRESSIONS        07/01/82   R65 ASSEMBLER  PAGE 43

1828                   *
1829                   * GETVAR: GET VARIABLE
1830                   **********************
1831                   *
1832  2B74- A2 00      GETVAR  LDX =0
1833  2B76- 20 06 27           JSR FETCH1
1834  2B79- 86 44              STX RESTYP-1
1835  2B7B- 85 7B              STA VARSYM
1836  2B7D- 20 06 27           JSR FETCH1      FETCH SAME AGAIN
1837  2B80- 20 50 2C           JSR TLETT
1838  2B83- B0 03              BCS *+5
1839  2B85- 4C BD 26   SYNER1  JMP SYNERR
1840                   *
1841  2B88- A2 00              LDX =0
1842  2B8A- 86 45              STX RESTYP
1843  2B8C- 86 46              STX RESTYP+1
1844  2B8E- 20 00 27           JSR FETCH
1845  2B91- 90 05              BCC *+7         SKIP, IF NUMBER
1846  2B93- 20 50 2C           JSR TLETT
1847  2B96- 90 0B              BCC *+13
1848  2B98- AA                 TAX             SAVE SECOND CHAR IN X
1849  2B99- 20 00 27           JSR FETCH
1850  2B9C- 90 FB              BCC *-3         SKIP NUMBERS
1851  2B9E- 20 50 2C           JSR TLETT       SKIP LETTERS
1852  2BA1- B0 F6              BCS *-8
1853                   *
1854  2BA3- C9 24              CMP ='$'        STRING?
1855  2BA5- D0 06              BNE *+8
1856  2BA7- A9 FF              LDA =$FF
1857  2BA9- 85 45              STA RESTYP
1858  2BAB- D0 10              BNE GETV1       ALLWAYS TAKEN
1859                   *
1860  2BAD- C9 25              CMP ='%'        INTEGER?
1861  2BAF- D0 13              BNE GETV1+7
1862  2BB1- A5 48              LDA FLAG1
1863  2BB3- D0 D0              BNE SYNER1
1864  2BB5- A9 80              LDA =$80
1865  2BB7- 85 46              STA RESTYP+1
1866  2BB9- 05 7B              ORA VARSYM
1867  2BBB- 85 7B              STA VARSYM
1868  2BBD- 8A         GETV1   TXA             GET BACK SECOND CHAR
1869  2BBE- 09 80              ORA =$80
1870  2BC0- AA                 TAX
1871  2BC1- 20 00 27           JSR FETCH
1872                   *
1873  2BC4- 86 7C              STX VARSYM+1
1874  2BC6- 38                 SEC             NEXT CHAR IN A
1875  2BC7- 05 48              ORA FLAG1
1876  2BC9- E9 28              SBC ='('
1877  2BCB- D0 03              BNE *+5

----------------------------------------------------------------------

GRAPHIC BASIC - EXPRESSIONS        07/01/82   R65 ASSEMBLER  PAGE 44

1878  2BCD- 4C EE 39           JMP GETARR      GET ARRAY
1879                   *
1880  2BD0- A9 00              LDA =0
1881  2BD2- 85 48              STA FLAG1
1882  2BD4- A5 63              LDA STVAR
1883  2BD6- A6 64              LDX STVAR+1
1884  2BD8- A0 00              LDY =0
1885  2BDA- 86 96              STX TRANSP+1
1886  2BDC- 85 95      GETV2   STA TRANSP      SEARCH IN VAR TB
1887  2BDE- E4 66              CPX EOVAR+1
1888  2BE0- D0 04              BNE *+6
1889  2BE2- C5 65              CMP EOVAR
1890  2BE4- F0 18              BEQ GETV3       BRANCH, IF END OF TABLE
1891  2BE6- A5 7B              LDA VARSYM
1892  2BE8- D1 95              CMP (TRANSP),Y
1893  2BEA- D0 08              BNE *+10
1894  2BEC- A5 7C              LDA VARSYM+1
1895  2BEE- C8                 INY
1896  2BEF- D1 95              CMP (TRANSP),Y
1897  2BF1- F0 4E              BEQ GETV9       BRANCH, IF FOUND
1898  2BF3- 88                 DEY
1899  2BF4- 18                 CLC
1900  2BF5- A5 95              LDA TRANSP
1901  2BF7- 69 07              ADC =7
1902  2BF9- 90 E1              BCC GETV2
1903  2BFB- E8                 INX
1904  2BFC- D0 DC              BNE GETV2-2
1905                   *
1906  2BFE- A5 CF     GETV3   LDA TEMP4+1
1907  2C00- F0 05              BEQ *+7
1908  2C02- A2 56              LDX =$56
1909  2C04- 4C 43 23           JMP ERROR       UNDEFINED VARIABLE
1910  2C07- A5 65              LDA EOVAR
1911  2C09- A4 66              LDY EOVAR+1
1912  2C0B- 85 95              STA TRANSP
1913  2C0D- 84 96              STY TRANSP+1
1914  2C0F- A5 67              LDA STSPAC
1915  2C11- A4 68              LDY STSPAC+1
1916  2C13- 85 90              STA BEGINB
1917  2C15- 84 91              STY BEGINB+1
1918  2C17- 18                 CLC
1919  2C18- 69 07              ADC =7
1920  2C1A- 90 01              BCC *+3
1921  2C1C- C8                 INY
1922  2C1D- 85 8E              STA ENDB
1923  2C1F- 84 8F              STY ENDB+1
1924  2C21- 20 C4 22           JSR MKROOM
1925  2C24- A5 8E              LDA ENDB        SET END OF VAR TB
1926  2C26- A4 8F              LDY ENDB+1
1927  2C28- C8                 INY

----------------------------------------------------------------------

GRAPHIC BASIC - EXPRESSIONS        07/01/82   R65 ASSEMBLER  PAGE 45

1928  2C29- 85 65              STA EOVAR
1929  2C2B- 84 66              STY EOVAR+1     1+END OF TABLE
1930  2C2D- A0 00              LDY =0
1931  2C2F- A5 7B              LDA VARSYM      SAVE SYMBOL
1932  2C31- 91 95              STA (TRANSP),Y
1933  2C33- C8                 INY
1934  2C34- A5 7C              LDA VARSYM+1
1935  2C36- 91 95              STA (TRANSP),Y
1936  2C38- A9 00              LDA =0
1937  2C3A- C8                 INY
1938  2C3B- 91 95              STA (TRANSP),Y  CLEAR VALUE
1939  2C3D- C0 06              CPY =6
1940  2C3F- D0 F9              BNE *-5
1941                   *
1942  2C41- A5 95      GETV9   LDA TRANSP
1943  2C43- 18                 CLC
1944  2C44- 69 02              ADC =2
1945  2C46- A4 96              LDY TRANSP+1
1946  2C48- 90 01              BCC *+3
1947  2C4A- C8                 INY
1948  2C4B- 85 7D              STA VARSTP
1949  2C4D- 84 7E              STY VARSTP+1
1950  2C4F- 60                 RTS
1951                   *
1952                   * TLETT: TEST LETTER (C=1 IF LETTER)
1953                   ************************************
1954                   *
1955  2C50- C9 41      TLETT   CMP =$41
1956  2C52- 90 05              BCC *+7
1957  2C54- E9 5B              SBC =$5B
1958  2C56- 38                 SEC
1959  2C57- E9 A5              SBC =$A5
1960  2C59- 60                 RTS
1961                   *
1962                   * TSTRR1
1963                   *
1964  2C5A- 46 47      TSTRR1  LSR TEMP2
1965  2C5C- 48                 PHA
1966  2C5D- 49 FF              EOR =$FF
1967  2C5F- 38                 SEC
1968  2C60- 65 69              ADC BTSTRG
1969  2C62- A4 6A              LDY BTSTRG+1
1970  2C64- B0 01              BCS *+3
1971  2C66- 88                 DEY
1972  2C67- C4 68              CPY STSPAC+1
1973  2C69- 90 11              BCC TSTRR2
1974  2C6B- D0 04              BNE *+6
1975  2C6D- C5 67              CMP STSPAC
1976  2C6F- 90 0B              BCC TSTRR2
1977  2C71- 85 69              STA BTSTRG

----------------------------------------------------------------------

GRAPHIC BASIC - EXPRESSIONS        07/01/82   R65 ASSEMBLER  PAGE 46

1978  2C73- 84 6A              STY BTSTRG+1
1979  2C75- 85 6B              STA TPSTRG
1980  2C77- 84 6C              STY TPSTRG+1
1981  2C79- AA                 TAX
1982  2C7A- 68                 PLA
1983  2C7B- 60                 RTS
1984                   *
1985  2C7C- A2 3A      TSTRR2  LDX =$3A
1986  2C7E- A5 47              LDA TEMP2
1987  2C80- 10 03              BPL *+5
1988  2C82- 4C 43 23           JMP ERROR       OUT OF MEMORY
1989  2C85- 20 8F 2C           JSR PKSTRG
1990  2C88- A9 80              LDA =$80
1991  2C8A- 85 47              STA TEMP2
1992  2C8C- 68                 PLA
1993  2C8D- D0 CD              BNE TSTRR1+2
1994                   *
1995                   * PKSTRG: PACK STRINGS
1996                   **********************
1997                   *
1998  2C8F- A6 6D      PKSTRG  LDX TPMEM
1999  2C91- A5 6E              LDA TPMEM+1
2000  2C93- 86 69              STX BTSTRG
2001                    * BASIC3:A ORIGINAL 7/1/1982, RECOVERED 3/2018
2002  2C95- 85 6A              STA BTSTRG+1
2003  2C97- A0 00              LDY =0
2004  2C99- 84 85              STY TEMP6+1
2005  2C9B- A5 67              LDA STSPAC
2006  2C9D- A6 68              LDX STSPAC+1
2007  2C9F- 85 95              STA TRANSP
2008  2CA1- 86 96              STX TRANSP+1
2009  2CA3- A9 4F              LDA =STRST      START OF STRING STACK
2010  2CA5- A2 00              LDX =0
2011  2CA7- 85 58              STA TEMP1
2012  2CA9- 86 59              STX TEMP1+1
2013  2CAB- C5 4C              CMP STRSTP
2014  2CAD- F0 05              BEQ *+7
2015  2CAF- 20 2E 2D           JSR PKSTR3
2016  2CB2- F0 F7              BEQ *-7         DO UNTIL STACK EMPTY
2017  2CB4- A9 07              LDA =7
2018  2CB6- 85 89              STA SIZE
2019  2CB8- A5 63              LDA STVAR
2020  2CBA- A6 64              LDX STVAR+1
2021  2CBC- 85 58              STA TEMP1
2022  2CBE- 86 59              STX TEMP1+1
2023  2CC0- E4 66              CPX EOVAR+1
2024  2CC2- D0 04              BNE *+6
2025  2CC4- C5 65              CMP EOVAR
2026  2CC6- F0 05              BEQ *+7
2027  2CC8- 20 24 2D           JSR PKSTR2

----------------------------------------------------------------------

GRAPHIC BASIC - EXPRESSIONS        07/01/82   R65 ASSEMBLER  PAGE 47

2028  2CCB- F0 F3              BEQ *-11
2029                   *
2030  2CCD- 85 8E              STA ENDB
2031  2CCF- 86 8F              STX ENDB+1
2032  2CD1- A9 03              LDA =3
2033  2CD3- 85 89              STA SIZE
2034  2CD5- A5 8E      PKSTR1  LDA ENDB
2035  2CD7- A6 8F              LDX ENDB+1
2036  2CD9- E4 68              CPX STSPAC+1
2037  2CDB- D0 07              BNE *+9
2038  2CDD- C5 67              CMP STSPAC
2039  2CDF- D0 03              BNE *+5
2040  2CE1- 4C 6D 2D           JMP PKSTR5      DO UNTIL THROUGH ARRAYS
2041                   *
2042  2CE4- 85 58              STA TEMP1
2043  2CE6- 86 59              STX TEMP1+1
2044  2CE8- A0 00              LDY =0
2045  2CEA- B1 58              LDA (TEMP1),Y
2046  2CEC- AA                 TAX             SAVE IN X
2047  2CED- C8                 INY
2048  2CEE- B1 58              LDA (TEMP1),Y
2049  2CF0- 08                 PHP
2050  2CF1- C8                 INY
2051  2CF2- B1 58              LDA (TEMP1),Y
2052  2CF4- 65 8E              ADC ENDB
2053  2CF6- 85 8E              STA ENDB
2054  2CF8- C8                 INY
2055  2CF9- B1 58              LDA (TEMP1),Y
2056  2CFB- 65 8F              ADC ENDB+1
2057  2CFD- 85 8F              STA ENDB+1
2058  2CFF- 28                PLP
2059  2D00- 10 D3              BPL PKSTR1
2060  2D02- 8A                 TXA
2061  2D03- 30 D0              BMI PKSTR1
2062  2D05- C8                 INY
2063  2D06- B1 58              LDA (TEMP1),Y
2064  2D08- 0A                 ASL A
2065  2D09- 69 05              ADC =5
2066  2D0B- A0 00              LDY =0
2067  2D0D- 65 58              ADC TEMP1
2068  2D0F- 85 58              STA TEMP1
2069  2D11- 90 02              BCC *+4
2070  2D13- E6 59              INC TEMP1+1
2071  2D15- A6 59              LDX TEMP1+1
2072  2D17- E4 8F              CPX ENDB+1
2073  2D19- D0 04              BNE *+6
2074  2D1B- C5 8E              CMP ENDB
2075  2D1D- F0 BA              BEQ PKSTR1+4
2076  2D1F- 20 2E 2D           JSR PKSTR3
2077  2D22- F0 F3              BEQ *-11

----------------------------------------------------------------------

GRAPHIC BASIC - EXPRESSIONS        07/01/82   R65 ASSEMBLER  PAGE 48

2078  2D24- B1 58      PKSTR2  LDA (TEMP1),Y
2079  2D26- 30 35              BMI PKSTR4
2080  2D28- C8                 INY
2081  2D29- B1 58              LDA (TEMP1),Y
2082  2D2B- 10 30              BPL PKSTR4
2083  2D2D- C8                 INY
2084                   *
2085  2D2E- B1 58      PKSTR3  LDA (TEMP1),Y
2086  2D30- F0 2B              BEQ PKSTR4
2087  2D32- C8                 INY
2088  2D33- B1 58              LDA (TEMP1),Y
2089  2D35- AA                 TAX
2090  2D36- C8                 INY
2091  2D37- B1 58              LDA (TEMP1),Y
2092  2D39- C5 6A              CMP BTSTRG+1
2093  2D3B- 90 06              BCC *+8
2094  2D3D- D0 1E              BNE PKSTR4
2095  2D3F- E4 69              CPX BTSTRG
2096  2D41- B0 1A              BCS PKSTR4
2097  2D43- C5 96              CMP TRANSP+1
2098  2D45- 90 16              BCC PKSTR4
2099  2D47- D0 04              BNE *+6
2100  2D49- E4 95              CPX TRANSP
2101  2D4B- 90 10              BCC PKSTR4
2102  2D4D- 86 95              STX TRANSP
2103  2D4F- 85 96              STA TRANSP+1
2104  2D51- A5 58              LDA TEMP1
2105  2D53- A6 59              LDX TEMP1+1
2106  2D55- 85 84              STA TEMP6
2107  2D57- 86 85              STX TEMP6+1
2108  2D59- A5 89              LDA SIZE
2109  2D5B- 85 8B              STA PNT1
2110                   *
2111  2D5D- A5 89      PKSTR4  LDA SIZE
2112  2D5F- 18                 CLC
2113  2D60- 65 58              ADC TEMP1
2114  2D62- 85 58              STA TEMP1
2115  2D64- 90 02              BCC *+4
2116  2D66- E6 59              INC TEMP1+1
2117  2D68- A6 59              LDX TEMP1+1
2118  2D6A- A0 00              LDY =0
2119  2D6C- 60                 RTS
2120                   *
2121  2D6D- A6 85      PKSTR5  LDX TEMP6+1
2122  2D6F- F0 F7              BEQ *-7
2123  2D71- A5 8B              LDA PNT1
2124  2D73- E9 03              SBC =3
2125  2D75- 4A                 LSR A
2126  2D76- A8                 TAY
2127  2D77- 85 8B              STA PNT1

----------------------------------------------------------------------

GRAPHIC BASIC - EXPRESSIONS        07/01/82   R65 ASSEMBLER  PAGE 49

2128  2D79- B1 84              LDA (TEMP6),Y
2129  2D7B- 65 95              ADC TRANSP
2130  2D7D- 85 90              STA BEGINB
2131  2D7F- A5 96              LDA TRANSP+1
2132  2D81- 69 00              ADC =0
2133  2D83- 85 91              STA BEGINB+1
2134  2D85- A5 69              LDA BTSTRG
2135  2D87- A6 6A              LDX BTSTRG+1
2136  2D89- 85 8E              STA ENDB
2137  2D8B- 86 8F              STX ENDB+1
2138  2D8D- 20 CB 22           JSR MKROOM+7
2139  2D90- A4 8B              LDY PNT1
2140  2D92- C8                 INY
2141  2D93- A5 8E              LDA ENDB
2142  2D95- 91 84              STA (TEMP6),Y
2143  2D97- AA                 TAX
2144  2D98- E6 8F              INC ENDB+1
2145  2D9A- A5 8F              LDA ENDB+1
2146  2D9C- C8                 INY
2147  2D9D- 91 84              STA (TEMP6),Y
2148  2D9F- 4C 93 2C           JMP PKSTRG+4
2149                   *
2150                   * TSTTTM: TEST STRING ROOM
2151                   **************************
2152                   *
2153  2DA2- A6 9A      TSTRRM  LDX MANT+2
2154  2DA4- A4 9B              LDY MANT+3
2155  2DA6- 86 86              STX TEMP5
2156  2DA8- 84 87              STY TEMP5+1
2157  2DAA- 20 5A 2C           JSR TSTRR1
2158  2DAD- 86 98              STX MANT
2159  2DAF- 84 99              STY MANT+1
2160  2DB1- 85 97              STA EXP
2161  2DB3- 60                 RTS
2162                   *
2163                   * INSSTR: INSERT STRING
2164                   ***********************
2165                   *
2166  2DB4- A0 00      INSSTR  LDY =0
2167  2DB6- B1 A5              LDA (DYADIC+6),Y
2168  2DB8- 48                 PHA             A
2169  2DB9- C8                 INY
2170  2DBA- B1 A5              LDA (DYADIC+6),Y
2171  2DBC- AA                 TAX             X
2172  2DBD- C8                 INY
2173  2DBE- B1 A5              LDA (DYADIC+6),Y
2174  2DC0- A8                 TAY             Y
2175  2DC1- 68                 PLA
2176                   *
2177  2DC2- 86 58      INSST0  STX TEMP1       X,Y=START

----------------------------------------------------------------------

GRAPHIC BASIC - EXPRESSIONS        07/01/82   R65 ASSEMBLER  PAGE 50

2178  2DC4- 84 59              STY TEMP1+1
2179  2DC6- A8                 TAY             A=SIZE
2180  2DC7- F0 0A              BEQ *+12
2181  2DC9- 48                 PHA
2182  2DCA- 88                 DEY
2183  2DCB- B1 58              LDA (TEMP1),Y
2184  2DCD- 91 6B              STA (TPSTRG),Y
2185  2DCF- 98                 TYA
2186  2DD0- D0 F8              BNE *-6
2187  2DD2- 68                 PLA
2188  2DD3- 18                 CLC
2189  2DD4- 65 6B              ADC TPSTRG
2190  2DD6- 85 6B              STA TPSTRG
2191  2DD8- 90 02              BCC *+4
2192  2DDA- E6 6C              INC TPSTRG+1
2193  2DDC- 60                 RTS
2194                   *
2195                   * TESTTP: REST RESULT TYPE
2196                   **************************
2197                   * C=0: MUST BE NUMERIC, C=1 MUST BE STRING
2198                   *
2199  2DDD- 18         TESTTP  CLC
2200  2DDE- 24 45              BIT RESTYP
2201  2DE0- 30 03              BMI *+5
2202  2DE2- B0 03              BCS *+5
2203  2DE4- 60                 RTS
2204  2DE5- B0 FD              BCS *-1
2205  2DE7- A2 96              LDX =$96        TYPE MISSMATCH
2206  2DE9- 4C 43 23           JMP ERROR
2207                   *
2208                   * EXPRESSION
2209                   ************
2210                   *
2211  2DEC- A6 A9      EXPRES  LDX PC          DEC PC BY 1
2212  2DEE- D0 02              BNE *+4
2213  2DF0- C6 AA              DEC PC+1
2214  2DF2- C6 A9              DEC PC
2215  2DF4- A2 00              LDX =0
2216  2DF6- 8A                 TXA
2217  2DF7- 48                 PHA             CURRENT ORDER
2218  2DF8- A9 01              LDA =1
2219  2DFA- 20 34 23           JSR TSSTK
2220  2DFD- 20 12 2F          JSR SIMEXP
2221  2E00- A9 00              LDA =0
2222  2E02- 85 83              STA LOGIC
2223  2E04- 20 06 27           JSR FETCH1
2224  2E07- 38         EXPR1   SEC
2225  2E08- E9 BE              SBC =$BE        CODE FOR >
2226  2E0A- 90 1A              BCC EXPR2       SKIP, IF NOT LOGIC OP
2227  2E0C- C9 03              CMP =$03

----------------------------------------------------------------------

GRAPHIC BASIC - EXPRESSIONS        07/01/82   R65 ASSEMBLER  PAGE 51

2228  2E0E- B0 16              BCS EXPR2
2229                   *
2230  2E10- C9 01              CMP =1
2231  2E12- 2A                 ROL A
2232  2E13- 49 01              EOR =1          >=BIT1. ==BIT2, <=BIT3
2233  2E15- 45 83              EOR LOGIC
2234  2E17- C5 83              CMP LOGIC
2235  2E19- B0 03              BCS *+5
2236  2E1B- 4C BD 26           JMP SYNERR
2237  2E1E- 85 83              STA LOGIC
2238  2E20- 20 00 27           JSR FETCH
2239  2E23- 4C 07 2E           JMP EXPR1
2240                   *
2241  2E26- A6 83      EXPR2   LDX LOGIC
2242  2E28- D0 2C              BNE EXPR3       SKIP, IF LOGIC OP
2243  2E2A- B0 7D              BCS EXPR6
2244  2E2C- 69 07              ADC =7
2245  2E2E- 90 79              BCC EXPR6
2246  2E30- 65 45              ADC RESTYP      C+1
2247  2E32- D0 03              BNE *+5
2248  2E34- 4C D4 2E           JMP STRADD      STRING ADDITION
2249  2E37- 69 FF              ADC =$FF
2250  2E39- 85 58              STA TEMP1
2251  2E3B- 0A                 ASL A
2252  2E3C- 65 58              ADC TEMP1
2253  2E3E- A8                 TAY             Y=3*A
2254  2E3F- 68         EXPR2A  PLA             CURRENT ORDER
2255  2E40- D9 DF 2F           CMP MATHTB,Y    COMPARE WITH NEW ONE
2256  2E43- B0 69              BCS EXPR6+5
2257  2E45- 20 DD 2D           JSR TESTTP      MUST BE NUMERIC
2258  2E48- 48                 PHA
2259  2E49- 20 6F 2E           JSR EXPR4+7
2260  2E4C- 68                 PLA
2261  2E4D- A4 81              LDY TEMP3+2
2262  2E4F- 10 17              BPL EXPR4
2263  2E51- AA                 TAX
2264  2E52- F0 58              BEQ EXPR6+3
2265  2E54- D0 61              BNE EXPR7
2266                   *
2267  2E56- 46 45      EXPR3   LSR RESTYP
2268  2E58- 8A                 TXA
2269  2E59- 2A                 ROL A
2270  2E5A- A6 A9              LDX PC          DECR PC
2271  2E5C- D0 02              BNE *+4
2272  2E5E- C6 AA              DEC PC+1
2273  2E60- C6 A9              DEC PC
2274  2E62- A0 1B              LDY =$1B        MATHOP =
2275  2E64- 85 83              STA LOGIC
2276  2E66- D0 D7              BNE EXPR2A      ALLWAYS TAKEN
2277  2E68- D9 DF 2F   EXPR4   CMP MATHTB,Y

----------------------------------------------------------------------

GRAPHIC BASIC - EXPRESSIONS        07/01/82   R65 ASSEMBLER  PAGE 52

2278  2E6B- B0 4A              BCS EXPR7
2279  2E6D- 90 D9              BCC EXPR2A+9    ALLWAYS TAKEN
2280                   *
2281  2E6F- B9 E1 2F           LDA MATHTB+2,Y
2282  2E72- 48                 PHA
2283  2E73- B9 E0 2F           LDA MATHTB+1,Y
2284  2E76- 48                 PHA
2285  2E77- 20 80 2E           JSR EXPR5
2286  2E7A- A5 83              LDA LOGIC
2287  2E7C- 48                 PHA
2288  2E7D- 4C F6 2D           JMP EXPRES+10
2289                   *
2290  2E80- A5 9C      EXPR5   LDA SIGN
2291  2E82- BE DF 2F           LDX MATHTB,Y
2292  2E85- A8                 TAY
2293  2E86- 68                 PLA
2294  2E87- 85 58              STA TEMP1
2295  2E89- 68                 PLA
2296  2E8A- 85 59              STA TEMP1+1     GET MATHOPT ADDRESS
2297  2E8C- E6 58              INC TEMP1
2298  2E8E- D0 02              BNE *+4
2299  2E90- E6 59              INC TEMP1+1
2300  2E92- 98                 TYA
2301  2E93- 48                 PHA
2302  2E94- 20 EF 34   MATHOP  JSR ROUND
2303  2E97- A5 9B              LDA MANT+3
2304  2E99- 48                 PHA
2305  2E9A- A5 9A              LDA MANT+2
2306  2E9C- 48                 PHA
2307  2E9D- A5 99              LDA MANT+1
2308  2E9F- 48                 PHA
2309  2EA0- A5 98              LDA MANT
2310  2EA2- 48                 PHA
2311  2EA3- A5 97              LDA EXP
2312  2EA5- 48                 PHA
2313  2EA6- 6C 58 00           JMP (TEMP1)     EXECUTE MATHOP
2314                   *
2315  2EA9- A0 FF      EXPR6   LDY =$FF
2316  2EAB- 68                 PLA
2317  2EAC- F0 23              BEQ EXPR8
2318  2EAE- C9 64              CMP =$64        PRIORITY CODE COMPARE
2319  2EB0- F0 03              BEQ *+5
2320  2EB2- 20 DD 2D           JSR TESTTP
2321  2EB5- 84 81              STY TEMP3+2
2322  2EB7- 68         EXPR7   PLA
2323  2EB8- 4A                 LSR A
2324  2EB9- 85 4A              STA READFL+1
2325  2EBB- 68                 PLA
2326  2EBC- 85 9F              STA DYADIC
2327  2EBE- 68                 PLA

----------------------------------------------------------------------

GRAPHIC BASIC - EXPRESSIONS        07/01/82   R65 ASSEMBLER  PAGE 53

2328  2EBF- 85 A0              STA DYADIC+1
2329  2EC1- 68                 PLA
2330  2EC2- 85 A1              STA DYADIC+2
2331  2EC4- 68                 PLA
2332  2EC5- 85 A2              STA DYADIC+3
2333  2EC7- 68                 PLA
2334  2EC8- 85 A3              STA DYADIC+4
2335  2ECA- 68                 PLA
2336  2ECB- 85 A4              STA DYADIC+5
2337  2ECD- 45 9C              EOR SIGN
2338  2ECF- 85 A5              STA DYADIC+6
2339  2ED1- A5 97      EXPR8   LDA EXP
2340  2ED3- 60                 RTS
2341                   *
2342                   * STRADD: STRING ADDITION
2343                   *************************
2344                   *
2345  2ED4- A5 9B      STRADD  LDA MANT+3
2346  2ED6- 48                 PHA
2347  2ED7- A5 9A              LDA MANT+2
2348  2ED9- 48                 PHA
2349  2EDA- 20 12 2F           JSR SIMEXP      GET SECOND STRING
2350  2EDD- 38                 SEC
2351  2EDE- 20 DE 2D           JSR TESTTP+1     MUST BE STRING
2352  2EE1- 68                 PLA
2353  2EE2- 85 A5              STA DYADIC+6
2354  2EE4- 68                 PLA
2355  2EE5- 85 A6              STA DYADIC+7
2356  2EE7- A0 00              LDY =0
2357  2EE9- B1 A5              LDA (DYADIC+6),Y        SIZE OF S1
2358  2EEB- 18                 CLC
2359  2EEC- 71 9A              ADC (MANT+2),Y          SIZE OF S2
2360  2EEE- 90 05              BCC *+7
2361  2EF0- A2 A4              LDX =$A4
2362  2EF2- 4C 43 23           JMP ERROR       STRING TOO LONG
2363  2EF5- 20 A2 2D           JSR TSTRRM
2364  2EF8- 20 B4 2D           JSR INSSTR
2365  2EFB- A5 86              LDA TEMP5
2366  2EFD- A4 87              LDY TEMP5+1
2367  2EFF- 20 08 29          JSR PREPST+4
2368  2F02- 20 C6 2D           JSR INSST0+4
2369  2F05- A5 A5              LDA DYADIC+6
2370  2F07- A4 A6              LDY DYADIC+7
2371  2F09- 20 08 29           JSR PREPST+4
2372  2F0C- 20 DC 28           JSR STRSI3
2373  2F0F- 4C 04 2E           JMP EXPR1-3
2374                   *
2375                   * SIMEXP: SIMPLE EXPRESSION
2376                   ***************************
2377                   *

----------------------------------------------------------------------

GRAPHIC BASIC - EXPRESSIONS        07/01/82   R65 ASSEMBLER  PAGE 54

2378  2F12- A9 00      SIMEXP  LDA =0
2379  2F14- 85 45              STA RESTYP
2380  2F16- 20 00 27           JSR FETCH
2381  2F19- B0 03              BCS *+5         SKIP, IF NOT NUMBER
2382  2F1B- 4C 8C 35   SIMEX1  JMP NUMBER
2383                   *
2384  2F1E- 20 50 2C           JSR TLETT
2385  2F21- B0 62              BCS VARIAB      SKIP, IF VARIABLE
2386  2F23- C9 D8              CMP =$D8        CODE FOR PI
2387  2F25- D0 0F              BNE SIMEX0
2388                   *
2389  2F27- A9 31              LDA =<PI
2390  2F29- A0 2F              LDY =>PI
2391  2F2B- 20 9E 34           JSR GETFLP
2392  2F2E- 4C 00 27           JMP FETCH
2393  2F31- 82 49 0F   PI      BYT $82,$49,$0F,$DA,$A1
2393  2F34- DA A1 
2394                   *
2395  2F36- C9 24      SIMEX0  CMP ='$'        HEX INPUT
2396  2F38- F0 E1              BEQ SIMEX1
2397                   *
2398  2F3A- C9 2E              CMP ='.'
2399  2F3C- F0 DD              BEQ SIMEX1
2400  2F3E- C9 B8              CMP =$B8        CODE FOR -VALUE OF PI
2401  2F40- F0 3C              BEQ SIMEX5
2402  2F42- C9 B7              CMP =$B7        CODE FOR +
2403  2F44- F0 D0              BEQ SIMEXP+4
2404  2F46- C9 22              CMP ='"'
2405  2F48- D0 15              BNE SIMEX2      SKIP, IF NOT STRING
2406                   *
2407  2F4A- A5 A9      EXPSTR  LDA PC          STRING EXPRESSION
2408  2F4C- A4 AA              LDY PC+1
2409  2F4E- 69 00              ADC =0          INCREMENT BY 1 (C=1)
2410  2F50- 90 01              BCC *+3
2411  2F52- C8                 INY
2412  2F53- 20 9D 28           JSR STRSIZ
2413  2F56- A6 A7      UPDPC   LDX DYADIC+8
2414  2F58- A4 A8              LDY DYADIC+9
2415  2F5A- 86 A9              STX PC
2416  2F5C- 84 AA              STY PC+1
2417  2F5E- 60                 RTS
2418                   *
2419  2F5F- C9 B5      SIMEX2  CMP =$B5        CODE FOR NOT
2420  2F61- D0 04              BNE *+6
2421  2F63- A0 18              LDY =$18
2422  2F65- D0 19              BNE SIMEX5+2
2423                   *
2424  2F67- C9 B2              CMP =$B2        CODE FOR FN
2425  2F69- D0 03              BNE *+5
2426  2F6B- 4C 65 3C           JMP FUNC        EXECUTE FUNCTION

----------------------------------------------------------------------

GRAPHIC BASIC - EXPRESSIONS        07/01/82   R65 ASSEMBLER  PAGE 55

2427                   *
2428  2F6E- C9 C1              CMP =$C1        CODE FOR SIGN
2429  2F70- 90 03              BCC *+5
2430  2F72- 4C 47 39           JMP BFUNC       EX BASIC FUNCTION
2431                   *
2432  2F75- 20 62 2B   ARGUM   JSR FOLLOW-6    MUST BE (
2433  2F78- 20 EC 2D           JSR EXPRES
2434  2F7B- 4C 66 2B           JMP FOLLOW-2    MUST BE )
2435                   *
2436  2F7E- A0 15      SIMEX5  LDY =$15        EXECUTE NEGATE
2437  2F80- 68                 PLA
2438  2F81- 68                 PLA
2439  2F82- 4C 49 2E           JMP EXPR2A+10
2440                   *
2441                   * VARIAB: GET VALUE OF VARIABLE
2442                   *******************************
2443                   *
2444  2F85- A2 FF      VARIAB  LDX =$FF        MUST BE DEFINED
2445  2F87- 86 CF              STX TEMP4+1
2446  2F89- 20 74 2B           JSR GETVAR
2447  2F8C- 85 9A              STA MANT+2
2448  2F8E- 84 9B              STY MANT+3
2449  2F90- A5 7B              LDA VARSYM
2450  2F92- A4 7C              LDY VARSYM+1
2451  2F94- A6 45              LDX RESTYP
2452  2F96- F0 01              BEQ *+3
2453  2F98- 60                 RTS             RTS, IF STRING
2454                   *
2455  2F99- A5 46              LDA RESTYP+1
2456  2F9B- 10 0D              BPL *+15        SKIP, IF FLP
2457  2F9D- A0 00              LDY =0
2458  2F9F- B1 9A              LDA (MANT+2),Y
2459  2FA1- AA                 TAX
2460  2FA2- C8                 INY
2461  2FA3- B1 9A              LDA (MANT+2),Y
2462  2FA5- A8                 TAY
2463  2FA6- 8A                 TXA
2464  2FA7- 4C D2 2F           JMP INTFLP
2465                   *
2466  2FAA- A5 9A              LDA MANT+2      GET FLP
2467  2FAC- A4 9B              LDY MANT+3
2468  2FAE- 4C 9E 34           JMP GETFLP
2469                   *
2470                   *
2471                   * OUTCHR: OUTPUT CHAR
2472                   *********************
2473                   *
2474  2FB1- C9 20      OUTCHR  CMP =$20
2475  2FB3- 90 02              BCC *+4
2476  2FB5- E6 02              INC POS

----------------------------------------------------------------------

GRAPHIC BASIC - EXPRESSIONS        07/01/82   R65 ASSEMBLER  PAGE 56

2477  2FB7- C9 0D              CMP =$D
2478  2FB9- D0 06              BNE *+8
2479  2FBB- 48                 PHA
2480  2FBC- A9 00              LDA =0
2481  2FBE- 85 02              STA POS
2482  2FC0- 68                 PLA
2483                   *
2484  2FC1- 48                 PHA
2485  2FC2- 86 BF              STX SAVEXY
2486  2FC4- 84 C0              STY SAVEXY+1
2487  2FC6- 20 CF 2F           JSR PRC1
2488  2FC9- A6 BF              LDX SAVEXY
2489  2FCB- A4 C0              LDY SAVEXY+1
2490  2FCD- 68                 PLA
2491  2FCE- 60                 RTS
2492                   *
2493  2FCF- 6C B9 00   PRC1    JMP (PVECT)
2494                   *
2495                   * INTFLP: INTEGER TO FLP CONVERSION
2496                   ***********************************
2497                   *
2498  2FD2- A2 00      INTFLP  LDX =0
2499  2FD4- 86 45              STX RESTYP
2500  2FD6- 85 98              STA MANT
2501  2FD8- 84 99              STY MANT+1
2502  2FDA- A2 90              LDX =$90
2503  2FDC- 4C 37 35           JMP FLOAT2
2504                   *
2505                   *
2506                   * MATH OPERATION TABLE
2507                   **********************
2508                   * FORMAT: PRIORITY CODE, ADDRESS-1
2509                   *
2510  2FDF- 79         MATHTB  BYT $79
2511  2FE0- 29 33              WRD ADD-1
2512  2FE2- 79                 BYT $79
2513  2FE3- 0B 33              WRD SUBTR-1
2514  2FE5- 7B                 BYT $7B
2515  2FE6- 7A 38              WRD MULT-1
2516  2FE8- 7B                 BYT $7B
2517  2FE9- BF 37              WRD DIVIDE-1
2518  2FEB- 7F                 BYT $7F
2519  2FEC- C2 3E              WRD POWER-1
2520  2FEE- 50                 BYT $50
2521  2FEF- AD 39              WRD AND-1
2522  2FF1- 46                 BYT $46
2523  2FF2- A9 39              WRD OR-1
2524  2FF4- 7D                 BYT $7D
2525  2FF5- AD 36              WRD NEGATE-1
2526  2FF7- 5A                 BYT $5A

----------------------------------------------------------------------

GRAPHIC BASIC - EXPRESSIONS        07/01/82   R65 ASSEMBLER  PAGE 57

2527  2FF8- 37 39              WRD NOT-1
2528  2FFA- 64                 BYT $64
2529  2FFB- 4F 37              WRD TESTEQ-1
2530                   *
2531                   *
2532                           TIT GRAPHIC BASIC - STATEMENTS
2533                           PAG

----------------------------------------------------------------------

GRAPHIC BASIC - STATEMENTS         07/01/82   R65 ASSEMBLER  PAGE 58

2534                   *
2535                   * FOR: STATEMENT ROUTINE
2536                   ************************
2537                   *
2538  2FFD- A9 80      FOR     LDA =128
2539  2FFF- 85 48             STA FLAG1
2540  3001- 20 42 2A           JSR LET
2541  3004- 20 16 28           JSR STACK
2542  3007- D0 05              BNE *+7         SKIP, IF NOT FOR ON ST
2543  3009- 8A                 TXA
2544  300A- 69 0F              ADC =15
2545  300C- AA                 TAX
2546  300D- 9A                 TXS
2547  300E- 68                 PLA             GET RETURN ADDRESS
2548  300F- 68                 PLA
2549  3010- A9 09              LDA =9
2550  3012- 20 34 23           JSR TSSTK       18 BYTES ON STACK?
2551  3015- 20 F3 27           JSR SEDPN       SEARCH EOLL OR ":"
2552  3018- 18                 CLC
2553  3019- 98                 TYA
2554  301A- 65 A9              ADC PC          SAVE ADDRESS OF NEXT
2555  301C- 48                 PHA
2556  301D- A5 AA              LDA PC+1
2557  301F- 69 00              ADC =0
2558  3021- 48                 PHA
2559  3022- A5 70              LDA LINE+1      SAVE CURRENT LINE
2560  3024- 48                 PHA
2561  3025- A5 6F              LDA LINE
2562  3027- 48                 PHA
2563  3028- A9 B1              LDA =$B1        CODE FOR "TO"
2564  302A- 20 68 2B           JSR FOLLOW
2565  302D- 20 DD 2D           JSR TESTTP      MUST BE NUMERIC
2566  3030- 20 EC 2D           JSR EXPRES
2567  3033- 20 DD 2D           JSR TESTTP      MUST BE NUMERIC
2568  3036- A5 9C              LDA SIGN
2569  3038- 09 7F              ORA =$7F
2570  303A- 25 98              AND MANT
2571  303C- 85 98              STA MANT
2572  303E- A9 49              LDA =<FOR1
2573  3040- A0 30              LDY =>FOR1
2574  3042- 85 58              STA TEMP1
2575  3044- 84 59              STY TEMP1+1
2576  3046- 4C 94 2E           JMP MATHOP
2577                   *
2578  3049- A9 72      FOR1    LDA =<VAL1      LOAD 1.0E0
2579  304B- A0 30              LDY =>VAL1
2580  304D- 20 9E 34           JSR GETFLP
2581  3050- 20 06 27           JSR FETCH1
2582  3053- C9 B6              CMP =$B6        STEP?
2583  3055- D0 09              BNE *+11

----------------------------------------------------------------------

GRAPHIC BASIC - STATEMENTS         07/01/82   R65 ASSEMBLER  PAGE 59

2584  3057- 20 00 27           JSR FETCH
2585  305A- 20 EC 2D           JSR EXPRES
2586  305D- 20 DD 2D           JSR TESTTP      MUST BE NUMERIC
2587  3060- 20 1E 35           JSR SGN1
2588  3063- 20 85 2E           JSR EXPR5+5
2589  3066- A5 80              LDA TEMP3+1     STEP TO STACK
2590  3068- 48                 PHA
2591  3069- A5 7F              LDA TEMP3
2592  306B- 48                 PHA
2593  306C- A9 81              LDA =$81        CODE FOR FOR
2594  306E- 48                 PHA
2595  306F- 4C A2 26           JMP EXRUN
2596                   *
2597  3072- 81 00 00   VAL1    BYT $81,0,0,0,0    1.0E0
2597  3075- 00 00 
2598                   *
2599                   *
2600                   * ON: STATEMENT ROUTINE
2601                   ***********************
2602                   *
2603  3077- 20 EC 36   ON      JSR NUMEXP+3
2604  307A- 48                 PHA
2605  307B- C9 8D              CMP =$8D        CODE FOR GOSUB
2606  307D- F0 07              BEQ ON1
2607  307F- C9 89              CMP =$89        CODE FOR GOTO
2608  3081- F0 03              BEQ ON1
2609  3083- 4C BD 26           JMP SYNERR
2610                   *
2611  3086- C6 9B      ON1     DEC MANT+3
2612  3088- D0 04              BNE *+6
2613  308A- 68                 PLA
2614  308B- 4C EB 26           JMP EXCOD1+3
2615                   *
2616  308E- 20 00 27           JSR FETCH
2617  3091- 20 44 28           JSR FETCHI
2618  3094- C9 2C              CMP =','
2619  3096- F0 EE              BEQ ON1
2620  3098- 68                 PLA
2621  3099- 60                 RTS
2622                   *
2623                   *
2624                   * GET: STATEMENT ROUTINE
2625                   ************************
2626                   *
2627  309A- 20 E3 32   GET     JSR ILLDIR      ILLEGAL IN DIRECT MODE
2628  309D- C9 23              CMP ='#'
2629  309F- D0 03              BNE *+5
2630  30A1- 20 EF 45           JSR SETINP      SET INPUT DEVICE
2631                   *
2632  30A4- A2 08              LDX =<(INBUFF+1)

----------------------------------------------------------------------

GRAPHIC BASIC - STATEMENTS         07/01/82   R65 ASSEMBLER  PAGE 60

2633  30A6- A0 00              LDY =0
2634  30A8- 84 08              STY INBUFF+1
2635  30AA- A9 40              LDA =$40
2636  30AC- 20 34 31           JSR READ+6
2637  30AF- A6 C1      GETEND  LDX INPDEV
2638  30B1- F0 07              BEQ *+9
2639  30B3- 20 17 46           JSR RSTIDV
2640  30B6- A2 00              LDX =0
2641  30B8- 86 C1              STX INPDEV
2642  30BA- 60                 RTS
2643                   *
2644                   *
2645                   * INPUT: STATEMENT ROUTINE
2646                   **************************
2647                   *
2648  30BB- C9 23      INPUT   CMP ='#'
2649  30BD- D0 06              BNE *+8
2650  30BF- 20 EF 45           JSR SETINP      SET INPUT DEVICE
2651  30C2- 4C D4 30           JMP INPUT1
2652                   *
2653  30C5- C9 22              CMP ='"'
2654  30C7- D0 0B              BNE INPUT1
2655  30C9- 20 4A 2F           JSR EXPSTR
2656  30CC- A9 3B              LDA =';'
2657  30CE- 20 68 2B           JSR FOLLOW
2658  30D1- 20 83 28           JSR OUTSTR+3
2659                   *
2660  30D4- 20 E3 32   INPUT1  JSR ILLDIR      ILLEGAL IN DIRECT MODE
2661  30D7- A9 2C              LDA =$2C
2662  30D9- 85 06              STA INTEG+1
2663  30DB- 20 F2 30           JSR INPUT2
2664  30DE- A5 07              LDA INBUFF
2665  30E0- F0 08              BEQ *+10        SKIP, IF EMPTY
2666  30E2- A9 00              LDA =0
2667  30E4- 20 34 31           JSR READ+6
2668  30E7- 4C AF 30           JMP GETEND
2669                   *
2670  30EA- A5 C1              LDA INPDEV      IF EMPTY
2671  30EC- D0 ED              BNE INPUT1+7
2672  30EE- 18                 CLC
2673  30EF- 4C 31 27           JMP END+16
2674                   *
2675  30F2- A5 C1      INPUT2  LDA INPDEV
2676  30F4- D0 0D              BNE INPUT3      SKIP, IF NOT DEV 0
2677  30F6- A9 3F              LDA ='?'
2678  30F8- 20 B1 2F           JSR OUTCHR
2679  30FB- A9 20              LDA =' '
2680  30FD- 20 B1 2F          JSR OUTCHR
2681  3100- 4C 69 24           JMP INLIN       GET LINE
2682                   *

----------------------------------------------------------------------

GRAPHIC BASIC - STATEMENTS         07/01/82   R65 ASSEMBLER  PAGE 61

2683  3103- A2 00      INPUT3  LDX =0          GET FROM OTHER DEVICE
2684  3105- 20 1B 46           JSR INCHR
2685  3108- F0 FB              BEQ *-3         IGNORE 0
2686  310A- C9 7F              CMP =$7F        RABOUT?
2687  310C- F0 02              BEQ *+4
2688  310E- C9 5F              CMP =$5F        OR DELETE
2689  3110- D0 07              BNE INPUT4
2690                   *
2691  3112- 8A                 TXA             YES,TEST X
2692  3113- F0 F0              BEQ INPUT3+2
2693  3115- CA                 DEX
2694  3116- 4C 05 31           JMP INPUT3+2
2695                   *
2696  3119- 29 7F      INPUT4  AND =$7F
2697  311B- 95 07              STA INBUFF,X
2698  311D- E8                 INX
2699  311E- E0 38              CPX =56         END OF BUFFER?
2700  3120- F0 05              BEQ *+7
2701  3122- C9 0D              CMP =$D         CARRIAGE RETURN
2702  3124- D0 DF              BNE INPUT3+2
2703                   *
2704  3126- CA                 DEX
2705  3127- A0 00              LDY =0
2706  3129- 94 07              STY INBUFF,X    SET EOL MARK
2707  312B- A2 06              LDX =<(INBUFF-1)
2708  312D- 60                 RTS
2709                   *
2710                   *
2711                   * READ: STATEMENT ROUTINE
2712                   *************************
2713                   *
2714  312E- A6 77      READ    LDX DATPNT
2715  3130- A4 78              LDY DATPNT+1
2716  3132- A9 98              LDA =$98
2717  3134- 85 49              STA READFL
2718  3136- 86 79              STX DTSPNT
2719  3138- 84 7A              STY DTSPNT+1
2720  313A- A2 00              LDX =0
2721  313C- 86 CF              STX TEMP4+1     VARIABLE MUST NOT BE DEF
2722  313E- 20 74 2B           JSR GETVAR
2723  3141- 85 7F              STA TEMP3
2724  3143- 84 80              STY TEMP3+1
2725  3145- A5 A9              LDA PC          SAVE PC
2726  3147- A4 AA              LDY PC+1
2727  3149- 85 05              STA INTEG
2728  314B- 84 06              STY INTEG+1
2729  314D- A6 79              LDX DTSPNT
2730  314F- A4 7A              LDY DTSPNT+1
2731  3151- 86 A9              STX PC
2732  3153- 84 AA              STY PC+1

----------------------------------------------------------------------

GRAPHIC BASIC - STATEMENTS         07/01/82   R65 ASSEMBLER  PAGE 62

2733  3155- 20 06 27           JSR FETCH1
2734  3158- D0 18              BNE READ2       SKIP, IF NOT EOL
2735                   *
2736  315A- 24 49              BIT READFL      IF EOL
2737  315C- 50 0B              BVC *+13
2738  315E- 20 1B 46           JSR INCHR
2739  3161- 85 07              STA INBUFF
2740  3163- A0 00              LDY =0
2741  3165- A2 06              LDX =<(INBUFF-1)
2742  3167- D0 05              BNE READ2-4     ALLWAYS TAKEN
2743                   *
2744  3169- 30 72              BMI READ5
2745  316B- 20 F2 30           JSR INPUT2
2746                   *
2747  316E- 86 A9              STX PC
2748  3170- 84 AA              STY PC+1
2749  3172- 20 00 27   READ2   JSR FETCH
2750  3175- 24 45              BIT RESTYP
2751  3177- 10 33              BPL READ3       SKIP, IF NOT STRING
2752  3179- 24 49              BIT READFL
2753  317B- 50 0B              BVC *+13
2754  317D- A9 00              LDA =0
2755  317F- 85 41              STA CHRSAV
2756  3181- E8                 INX
2757  3182- 86 A9              STX PC
2758  3184- 98                 TYA
2759  3185- 4C 94 31           JMP READ2A
2760                   *
2761  3188- 85 41              STA CHRSAV
2762  318A- C9 22              CMP ='"'
2763  318C- F0 07              BEQ READ2A+1
2764  318E- A9 3A              LDA =':'
2765  3190- 85 41              STA CHRSAV
2766  3192- A9 2C              LDA =','
2767  3194- 18         READ2A  CLC
2768  3195- 85 42              STA CHRSAV+1
2769  3197- A5 A9              LDA PC
2770  3199- A4 AA              LDY PC+1
2771  319B- 69 00              ADC =0
2772  319D- 90 01              BCC *+3
2773  319F- C8                 INY
2774  31A0- 20 A3 28           JSR STRSIZ+6
2775  31A3- 20 56 2F           JSR UPDPC
2776  31A6- 20 7B 2A           JSR LET1+4      SAVE STRING
2777  31A9- 4C B4 31           JMP READ3+8
2778                   *
2779  31AC- 20 8C 35   READ3   JSR NUMBER
2780  31AF- A5 46              LDA RESTYP+1
2781  31B1- 20 63 2A           JSR LET0
2782  31B4- 20 06 27           JSR FETCH1

----------------------------------------------------------------------

GRAPHIC BASIC - STATEMENTS         07/01/82   R65 ASSEMBLER  PAGE 63

2783  31B7- F0 07              BEQ *+9         SKIP IF NOT END OF STMNT
2784  31B9- C9 2C              CMP =','
2785  31BB- F0 03              BEQ *+5
2786  31BD- 4C 42 32           JMP READ7
2787                   *
2788  31C0- A5 A9              LDA PC
2789  31C2- A4 AA              LDY PC+1
2790  31C4- 85 79              STA DTSPNT
2791  31C6- 84 7A              STY DTSPNT+1
2792  31C8- A5 05              LDA INTEG
2793  31CA- A4 06              LDY INTEG+1
2794  31CC- 85 A9              STA PC
2795  31CE- 84 AA              STY PC+1
2796  31D0- 20 06 27           JSR FETCH1
2797  31D3- F0 2C              BEQ READ6       SKIP, IF EOL
2798  31D5- A9 2C              LDA =','
2799  31D7- 20 68 2B           JSR FOLLOW
2800  31DA- 4C 3A 31           JMP READ+12     NEXT VARIABLE
2801                   *
2802  31DD- 20 F3 27   READ5   JSR SEDPN       SEARCH EOL OR ":"
2803  31E0- C8                 INY
2804  31E1- AA                 TAX
2805  31E2- D0 10              BNE *+18
2806  31E4- C8                 INY
2807  31E5- B1 A9              LDA (PC),Y
2808  31E7- F0 72              BEQ DATAER      IF END OF PROGRAM
2809  31E9- C8                 INY
2810  31EA- B1 A9              LDA (PC),Y
2811  31EC- 85 75              STA TEMP7
2812  31EE- C8                 INY
2813  31EF- B1 A9              LDA (PC),Y
2814  31F1- 85 76              STA TEMP7+1
2815  31F3- C8                 INY
2816  31F4- B1 A9              LDA (PC),Y      GET COMMAND CODE
2817  31F6- AA                 TAX
2818  31F7- 20 E8 27           JSR DATA+3
2819  31FA- E0 83              CPX =$83        CODE FOR DATA
2820  31FC- D0 DF              BNE READ5
2821  31FE- 4C 72 31          JMP READ2
2822                   *
2823  3201- A5 79      READ6   LDA DTSPNT
2824  3203- A4 7A              LDY DTSPNT+1
2825  3205- A6 49              LDX READFL
2826  3207- 10 03              BPL *+5
2827  3209- 4C 64 27           JMP RESTOR+29
2828                   *
2829  320C- A0 00              LDY =0
2830  320E- B1 79              LDA (DTSPNT),Y
2831  3210- F0 0B              BEQ *+13        RTS, IF EOL
2832  3212- A5 C1              LDA INPDEV

----------------------------------------------------------------------

GRAPHIC BASIC - STATEMENTS         07/01/82   R65 ASSEMBLER  PAGE 64

2833  3214- D0 07              BNE *+9
2834  3216- A9 1E              LDA =<(*+8)
2835  3218- A0 32              LDY =>(*+6)
2836  321A- 4C 80 28           JMP OUTSTR
2837  321D- 60                 RTS
2838                   *
2839  321E- 3F 45 58           BYT '?EXTRA IGNORED',$D,$A,0
2839  3221- 54 52 41 
2839  3224- 20 49 47 
2839  3227- 4E 4F 52 
2839  322A- 45 44 0D 
2839  322D- 0A 00 
2840  322F- 3F 52 45   REDO    BYT '?REDO FROM START',$D,$A,0
2840  3232- 44 4F 20 
2840  3235- 46 52 4F 
2840  3238- 4D 20 53 
2840  323B- 54 41 52 
2840  323E- 54 0D 0A 
2840  3241- 00 
2841                   *
2842  3242- A5 49      READ7   LDA READFL
2843  3244- F0 11              BEQ *+19
2844  3246- 30 04              BMI *+6
2845  3248- A0 FF              LDY =$FF
2846  324A- D0 04              BNE *+6         ALLWAYS TAKEN
2847  324C- A5 75              LDA TEMP7
2848  324E- A4 76              LDY TEMP7+1
2849  3250- 85 6F              STA LINE
2850  3252- 84 70              STY LINE+1
2851  3254- 4C BD 26           JMP SYNERR
2852                   *
2853  3257- A5 C1              LDA INPDEV
2854  3259- F0 05              BEQ *+7
2855  325B- A2 26      DATAER  LDX =$26         DATA ERROR
2856  325D- 4C 43 23           JMP ERROR
2857  3260- A9 2F              LDA =<REDO
2858  3262- A0 32              LDY =>REDO
2859  3264- 20 80 28           JSR OUTSTR
2860  3267- A5 73              LDA PNTSAV
2861  3269- A4 74              LDY PNTSAV+1
2862  326B- 85 A9              STA PC
2863  326D- 84 AA              STY PC+1
2864  326F- 60                 RTS
2865                   *
2866                   *
2867                   * NEXT: STATEMENT ROUTINE
2868                   *************************
2869                   *
2870  3270- D0 04      NEXT    BNE *+6         SKIP, IF NOT EOL
2871  3272- A0 00              LDY =0

----------------------------------------------------------------------

GRAPHIC BASIC - STATEMENTS         07/01/82   R65 ASSEMBLER  PAGE 65

2872  3274- F0 07              BEQ *+9         ELSE SET Y=0
2873  3276- A9 FF              LDA =$FF        VARIABLE MUST BE DEF
2874  3278- 86 CF              STX TEMP4+1
2875  327A- 20 74 2B           JSR GETVAR
2876  327D- 85 7F              STA TEMP3       SAVE ADDRESS
2877  327F- 84 80              STY TEMP3+1
2878  3281- 20 16 28           JSR STACK
2879  3284- F0 05              BEQ *+7
2880  3286- A2 00              LDX =0
2881  3288- 4C 43 23           JMP ERROR       NO MATCHING FOR
2882                   *
2883  328B- 9A                 TXS
2884  328C- E8                 INX
2885  328D- E8                 INX
2886  328E- E8                 INX
2887  328F- E8                 INX
2888  3290- 8A                 TXA             FLP ADDRESS LOW
2889  3291- E8                 INX
2890  3292- E8                 INX
2891  3293- E8                 INX
2892  3294- E8                 INX
2893  3295- E8                 INX
2894  3296- E8                 INX
2895  3297- 86 5A              STX TEMP1+2
2896  3299- A0 01              LDY =1          FLP ADDRESS HIGH
2897  329B- 20 9E 34           JSR GETFLP
2898  329E- BA                 TSX
2899  329F- BD 09 01           LDA 265,X
2900  32A2- 85 9C              STA SIGN
2901  32A4- A5 7F              LDA TEMP3
2902  32A6- A4 80              LDY TEMP3+1
2903  32A8- 20 27 33           JSR ADD-3
2904  32AB- 20 C3 34           JSR SAVFLP
2905  32AE- A0 01              LDY =1
2906  32B0- 20 4D 35           JSR COMPAR+2
2907  32B3- BA                 TSX
2908  32B4- 38                 SEC
2909  32B5- FD 09 01           SBC 265,X
2910  32B8- F0 17              BEQ *+25
2911  32BA- BD 0F 01           LDA 271,X
2912  32BD- 85 6F              STA LINE
2913  32BF- BD 10 01           LDA 272,X
2914  32C2- 85 70              STA LINE+1
2915  32C4- BD 12 01           LDA 274,X
2916  32C7- 85 A9              STA PC
2917  32C9- BD 11 01           LDA 273,X
2918  32CC- 85 AA              STA PC+1
2919  32CE- 4C A2 26           JMP EXRUN
2920                   *
2921  32D1- 8A                 TXA

----------------------------------------------------------------------

GRAPHIC BASIC - STATEMENTS         07/01/82   R65 ASSEMBLER  PAGE 66

2922  32D2- 69 11              ADC =17         CLEAR STACK
2923  32D4- AA                 TAX
2924  32D5- 9A                 TXS
2925  32D6- 20 06 27           JSR FETCH1
2926  32D9- C9 2C              CMP =','
2927  32DB- D0 F1              BNE *-13
2928  32DD- 20 00 27           JSR FETCH
2929  32E0- 20 76 32           JSR NEXT+6      NO RTS FROM THIS SUBR.
2930                   *
2931                   *
2932                   * ILLDIR: ILLEGAL IN DIRECT MODE
2933                   ********************************
2934                   *
2935  32E3- A6 70      ILLDIR  LDX LINE+1
2936  32E5- E8                 INX
2937  32E6- D0 05              BNE *+7         RTS, IF NOT DIRECT
2938  32E8- A2 88              LDX =$88
2939  32EA- 4C 43 23           JMP ERROR
2940  32ED- 60                 RTS
2941                   *
2942                   *
2943                   * OUTLIN: PRINT LINE NO
2944                   ***********************
2945                   *
2946  32EE- A9 BB      OUTLIN  LDA =<(ERRORM+25)
2947  32F0- A0 22              LDY =>(ERRORM+25)
2948  32F2- 20 80 28           JSR OUTSTR
2949  32F5- A5 70              LDA LINE+1
2950  32F7- A6 6F              LDX LINE
2951                   *
2952                   *
2953                   * OUTINT: PRINT INTEGER IN A,X
2954                   ******************************
2955                   *
2956  32F9- 85 98      OUTINT  STA MANT
2957  32FB- 86 99              STX MANT+1
2958  32FD- A2 90              LDX =$90        EXP FOR FLOAT
2959  32FF- 38                SEC
2960  3300- 20 3C 35           JSR FLOAT
2961  3303- 20 9D 47           JSR OUTCON
2962  3306- 4C 80 28           JMP OUTSTR
2963                   *
2964                           TIT GRAPHIC BASIC - MATH OPERATIONS
2965                           PAG

----------------------------------------------------------------------

GRAPHIC BASIC - MATH OPERATIONS    07/01/82   R65 ASSEMBLER  PAGE 67

2966                   *
2967                   * SUBTR: SUBTRACT FLOATING POINT
2968                   ********************************
2969                   *
2970  3309- 20 7D 34           JSR PREPMO
2971  330C- A5 9C      SUBTR   LDA SIGN
2972  330E- 49 FF              EOR =$FF
2973  3310- 85 9C              STA SIGN
2974  3312- 45 A4              EOR DYADIC+5
2975  3314- 85 A5              STA DYADIC+6
2976  3316- A5 97              LDA EXP
2977  3318- 4C 2A 33           JMP ADD
2978                   *
2979  331B- A9 6D      ADD9    LDA =<OUTCT2
2980  331D- A0 36              LDY =>OUTCT2
2981  331F- 4C 27 33           JMP ADD-3
2982                   *
2983                   *
2984                   * ADD: ADD FLOATING POINT
2985                   *************************
2986                   *
2987  3322- 20 5A 34           JSR ROR2A
2988  3325- 90 3D              BCC ADD2
2989  3327- 20 7D 34           JSR PREPMO
2990  332A- D0 03      ADD     BNE *+5
2991  332C- 4C FF 34           JMP TRANS1      IF ZERO, RES=OTHER ARG
2992  332F- A6 A6              LDX DYADIC+7
2993  3331- 86 8C              STX PNT1+1
2994  3333- A2 9F              LDX =<DYADIC
2995  3335- A5 9F              LDA DYADIC
2996  3337- A8                 TAY
2997  3338- D0 01              BNE *+3
2998  333A- 60                 RTS             RTS, IF OTHER ARG=0
2999                   *
3000  333B- 38                 SEC
3001                    * BASIC4:A ORIGINAL 7/1/1982, RECOVERED 3/2018
3002  333C- E5 97              SBC EXP
3003  333E- F0 24              BEQ ADD2
3004  3340- 90 12              BCC ADD1
3005  3342- 84 97              STY EXP
3006  3344- A4 A4              LDY DYADIC+5
3007  3346- 84 9C              STY SIGN
3008  3348- 49 FF              EOR =$FF
3009  334A- 69 00              ADC =0
3010  334C- A0 00              LDY =0
3011  334E- 84 8C              STY PNT1+1
3012  3350- A2 97              LDX =<EXP
3013  3352- D0 04              BNE *+6
3014  3354- A0 00      ADD1    LDY =0
3015  3356- 84 A6              STY DYADIC+7

----------------------------------------------------------------------

GRAPHIC BASIC - MATH OPERATIONS    07/01/82   R65 ASSEMBLER  PAGE 68

3016  3358- C9 F9              CMP =$F9
3017  335A- 30 C6              BMI ADD-8
3018  335C- A8                 TAY
3019  335D- A5 A6              LDA DYADIC+7
3020  335F- 56 01              LSR 1,X
3021  3361- 20 71 34           JSR ROR4
3022                   *
3023  3364- 24 A5      ADD2    BIT DYADIC+6
3024  3366- 10 57              BPL ADD3        SKIP, IF ADD
3025  3368- A0 97              LDY =<EXP
3026  336A- E0 9F              CPX =<DYADIC
3027  336C- F0 02              BEQ *+4
3028  336E- A0 9F              LDY =<DYADIC
3029  3370- 38                 SEC
3030  3371- 49 FF              EOR =$FF
3031  3373- 65 8C              ADC PNT1+1
3032  3375- 85 A6              STA DYADIC+7
3033  3377- B9 04 00           LDA 4,Y
3034  337A- F5 04              SBC 4,X
3035  337C- 85 9B              STA MANT+3
3036  337E- B9 03 00           LDA 3,Y
3037  3381- F5 03              SBC 3,X
3038  3383- 85 9A              STA MANT+2
3039  3385- B9 02 00           LDA 2,Y
3040  3388- F5 02              SBC 2,X
3041  338A- 85 99              STA MANT+1
3042  338C- B9 01 00           LDA 1,Y
3043  338F- F5 01              SBC 1,X
3044  3391- 85 98              STA MANT
3045                   *
3046  3393- B0 03      NORMAL  BCS *+5
3047  3395- 20 08 34           JSR COMPL
3048  3398- A0 00              LDY =0
3049  339A- 98                 TYA
3050  339B- 18                 CLC
3051  339C- A6 98      NORM1   LDX MANT
3052  339E- D0 4A              BNE ADD4
3053  33A0- A6 99              LDX MANT+1
3054  33A2- 86 98              STX MANT
3055  33A4- A6 9A              LDX MANT+2
3056  33A6- 86 99              STX MANT+1
3057  33A8- A6 9B              LDX MANT+3
3058  33AA- 86 9A              STX MANT+2
3059  33AC- A6 A6              LDX DYADIC+7
3060  33AE- 86 9B              STX MANT+3
3061  33B0- 84 A6              STY DYADIC+7
3062  33B2- 69 08              ADC =8
3063  33B4- C9 20              CMP =32
3064  33B6- D0 E4              BNE NORM1
3065                   *

----------------------------------------------------------------------

GRAPHIC BASIC - MATH OPERATIONS    07/01/82   R65 ASSEMBLER  PAGE 69

3066  33B8- A9 00      UNDERF  LDA =0          UNDERFLOW, SET TO 0
3067  33BA- 85 97              STA EXP
3068  33BC- 85 9C              STA SIGN
3069  33BE- 60                 RTS
3070                   *
3071  33BF- 65 8C      ADD3    ADC PNT1+1
3072  33C1- 85 A6              STA DYADIC+7
3073  33C3- A5 9B              LDA MANT+3
3074  33C5- 65 A3              ADC DYADIC+4
3075  33C7- 85 9B              STA MANT+3
3076  33C9- A5 9A              LDA MANT+2
3077  33CB- 65 A2              ADC DYADIC+3
3078  33CD- 85 9A              STA MANT+2
3079  33CF- A5 99              LDA MANT+1
3080  33D1- 65 A1              ADC DYADIC+2
3081  33D3- 85 99              STA MANT+1
3082  33D5- A5 98              LDA MANT
3083  33D7- 65 A0              ADC DYADIC+1
3084  33D9- 85 98              STA MANT
3085  33DB- 4C F7 33           JMP ADD5
3086                   *
3087  33DE- 69 01              ADC =1          SHIFT MANTISSA
3088  33E0- 06 A6              ASL DYADIC+7
3089  33E2- 26 9B              ROL MANT+3
3090  33E4- 26 9A              ROL MANT+2
3091  33E6- 26 99              ROL MANT+1
3092  33E8- 26 98              ROL MANT
3093  33EA- 10 F2      ADD4    BPL *-12
3094  33EC- 38                 SEC
3095  33ED- E5 97              SBC EXP
3096  33EF- B0 C7              BCS UNDERF
3097  33F1- 49 FF              EOR =$FF
3098  33F3- 69 01              ADC =1
3099  33F5- 85 97              STA EXP
3100  33F7- 90 0E      ADD5    BCC ADDEND
3101  33F9- E6 97              INC EXP
3102  33FB- F0 42              BEQ OVERFL
3103                   *
3104  33FD- 66 98      ROR1    ROR MANT
3105  33FF- 66 99             ROR MANT+1
3106  3401- 66 9A              ROR MANT+2
3107  3403- 66 9B              ROR MANT+3
3108  3405- 66 A6              ROR DYADIC+7
3109  3407- 60         ADDEND  RTS
3110                   *
3111                   * COMPL: COMPLEMENT MANTISSA
3112                   ****************************
3113                   *
3114  3408- A5 9C      COMPL   LDA SIGN
3115  340A- 49 FF              EOR =$FF

----------------------------------------------------------------------

GRAPHIC BASIC - MATH OPERATIONS    07/01/82   R65 ASSEMBLER  PAGE 70

3116  340C- 85 9C              STA SIGN
3117  340E- A5 98              LDA MANT
3118  3410- 49 FF              EOR =$FF
3119  3412- 85 98              STA MANT
3120  3414- A5 99              LDA MANT+1
3121  3416- 49 FF              EOR =$FF
3122  3418- 85 99              STA MANT+1
3123  341A- A5 9A              LDA MANT+2
3124  341C- 49 FF              EOR =$FF
3125  341E- 85 9A              STA MANT+2
3126  3420- A5 9B              LDA MANT+3
3127  3422- 49 FF              EOR =$FF
3128  3424- 85 9B              STA MANT+3
3129  3426- A5 A6              LDA DYADIC+7
3130  3428- 49 FF              EOR =$FF
3131  342A- 85 A6              STA DYADIC+7
3132  342C- E6 A6              INC DYADIC+7
3133  342E- D0 0E              BNE *+16
3134  3430- E6 9B      INCM    INC MANT+3
3135  3432- D0 0A              BNE *+12
3136  3434- E6 9A              INC MANT+2
3137  3436- D0 06              BNE *+8
3138  3438- E6 99              INC MANT+1
3139  343A- D0 02              BNE *+4
3140  343C- E6 98              INC MANT
3141  343E- 60                 RTS
3142                   *
3143                   *
3144  343F- A2 32      OVERFL  LDX =$32        NUM OVERFLOW
3145  3441- 4C 43 23           JMP ERROR
3146                   *
3147                   *
3148                   * ROTATE RIGHT
3149                   **************
3150                   *
3151  3444- A2 5B      ROR2    LDX =<TEMP9-1
3152  3446- B4 04              LDY 4,X
3153  3448- 84 A6              STY DYADIC+7
3154  344A- B4 03              LDY 3,X
3155  344C- 94 04              STY 4,X
3156  344E- B4 02              LDY 2,X
3157  3450- 94 03              STY 3,X
3158  3452- B4 01              LDY 1,X
3159  3454- 94 02              STY 2,X
3160  3456- A4 9E              LDY DYADIC-1
3161  3458- 94 01              STY 1,X
3162  345A- 69 08      ROR2A   ADC =8
3163  345C- 30 E8              BMI ROR2+2
3164  345E- F0 E6              BEQ ROR2+2
3165  3460- E9 08              SBC =8

----------------------------------------------------------------------

GRAPHIC BASIC - MATH OPERATIONS    07/01/82   R65 ASSEMBLER  PAGE 71

3166  3462- A8                 TAY
3167  3463- A5 A6              LDA DYADIC+7
3168  3465- B0 14              BCS ROR5
3169  3467- 16 01      ROR3    ASL 1,X
3170  3469- 90 02              BCC *+4
3171  346B- F6 01              INC 1,X
3172  346D- 76 01              ROR 1,X
3173  346F- 76 01              ROR 1,X
3174  3471- 76 02      ROR4    ROR 2,X
3175  3473- 76 03              ROR 3,X
3176  3475- 76 04              ROR 4,X
3177  3477- 6A                 ROR A
3178  3478- C8                 INY
3179  3479- D0 EC              BNE ROR3
3180  347B- 18         ROR5    CLC
3181  347C- 60                 RTS
3182                   *
3183                   *
3184                   * PREPMO: PREPARE MATH OPERATION
3185                   ********************************
3186                   *
3187  347D- 85 58      PREPMO  STA TEMP1
3188  347F- 84 59              STY TEMP1+1
3189  3481- A0 04              LDY =4
3190  3483- B1 58              LDA (TEMP1),Y
3191  3485- 99 9F 00           STA DYADIC,Y
3192  3488- 88                 DEY
3193  3489- D0 F8              BNE *-6         LOOP UNTIL DONE
3194  348B- 45 9C              EOR SIGN
3195  348D- 85 A5              STA DYADIC+6
3196  348F- A5 A0              LDA DYADIC+1
3197  3491- 85 A4              STA DYADIC+5
3198  3493- 09 80              ORA =$80
3199  3495- 85 A0              STA DYADIC+1
3200  3497- B1 58              LDA (TEMP1),Y
3201  3499- 85 9F              STA DYADIC
3202  349B- A5 97              LDA EXP
3203  349D- 60                 RTS
3204                   *
3205                   *
3206                   * GETFLP: GET FLP FROM A,Y
3207                   **************************
3208                   *
3209  349E- 85 58      GETFLP  STA TEMP1
3210  34A0- 84 59              STY TEMP1+1
3211  34A2- A0 04              LDY =4
3212  34A4- B1 58              LDA (TEMP1),Y
3213  34A6- 85 9B              STA MANT+3
3214  34A8- 88                 DEY
3215  34A9- B1 58              LDA (TEMP1),Y

----------------------------------------------------------------------

GRAPHIC BASIC - MATH OPERATIONS    07/01/82   R65 ASSEMBLER  PAGE 72

3216  34AB- 85 9A              STA MANT+2
3217  34AD- 88                 DEY
3218  34AE- B1 58              LDA (TEMP1),Y
3219  34B0- 85 99              STA MANT+1
3220  34B2- 88                 DEY
3221  34B3- B1 58              LDA (TEMP1),Y
3222  34B5- 85 9C              STA SIGN
3223  34B7- 09 80              ORA =$80
3224  34B9- 85 98              STA MANT
3225  34BB- 88                 DEY
3226  34BC- B1 58              LDA (TEMP1),Y
3227  34BE- 85 97              STA EXP
3228  34C0- 84 A6              STY DYADIC+7
3229  34C2- 60                 RTS
3230                   *
3231                   *
3232                   * SAVFLP: SAVE FLP NUMBER
3233                   *************************
3234                   *
3235  34C3- A6 7F      SAVFLP  LDX TEMP3
3236  34C5- A4 80              LDY TEMP3+1
3237  34C7- 20 EF 34           JSR ROUND
3238  34CA- 86 58              STX TEMP1
3239  34CC- 84 59              STY TEMP1+1
3240  34CE- A0 04              LDY =4
3241  34D0- A5 9B              LDA MANT+3
3242  34D2- 91 58              STA (TEMP1),Y
3243  34D4- 88                 DEY
3244  34D5- A5 9A              LDA MANT+2
3245  34D7- 91 58              STA (TEMP1),Y
3246  34D9- 88                 DEY
3247  34DA- A5 99              LDA MANT+1
3248  34DC- 91 58              STA (TEMP1),Y
3249  34DE- 88                 DEY
3250  34DF- A5 9C              LDA SIGN
3251  34E1- 09 7F              ORA =$7F
3252  34E3- 25 98              AND MANT
3253  34E5- 91 58              STA (TEMP1),Y
3254  34E7- 88                 DEY
3255  34E8- A5 97              LDA EXP
3256  34EA- 91 58              STA (TEMP1),Y
3257  34EC- 84 A6              STY DYADIC+7
3258  34EE- 60                 RTS
3259                   *
3260                   * ROUND: ROUND MANTISSA TO 32 BITS
3261                   **********************************
3262                   *
3263  34EF- A5 97      ROUND   LDA EXP
3264  34F1- F0 FB              BEQ *-3         RTS, IF ZERO
3265  34F3- 06 A6              ASL DYADIC+7

----------------------------------------------------------------------

GRAPHIC BASIC - MATH OPERATIONS    07/01/82   R65 ASSEMBLER  PAGE 73

3266  34F5- 90 F7              BCC *-7
3267  34F7- 20 30 34           JSR INCM
3268  34FA- D0 F2              BNE *-12
3269  34FC- 4C F9 33           JMP ROR1-4
3270                   *
3271                   * TRANS1: DYADIC TO FLP ACCU
3272                   ****************************
3273                   *
3274  34FF- A5 A4     TRANS1  LDA DYADIC+5
3275  3501- 85 9C              STA SIGN
3276  3503- A2 05              LDX =5
3277  3505- B5 9E              LDA DYADIC-1,X
3278  3507- 95 96              STA EXP-1,X
3279  3509- CA                 DEX
3280  350A- D0 F9              BNE *-5
3281  350C- 86 A6              STX DYADIC+7
3282  350E- 60                 RTS
3283                   *
3284                   * TRANS2: FLP ACCU TO DYADIC
3285                   ****************************
3286                   *
3287  350F- 20 EF 34   TRANS2  JSR ROUND
3288  3512- A2 06              LDX =6
3289  3514- B5 96              LDA EXP-1,X
3290  3516- 95 9E              STA DYADIC-1,X
3291  3518- CA                 DEX
3292  3519- D0 F9              BNE *-5
3293  351B- 86 A6              STX DYADIC+7
3294  351D- 60                 RTS
3295                   *
3296                   * SGN1: SET ACCU FROM SIGN
3297                   **************************
3298                   * A=1 IF SIGN+, A=FF IF SIGN-, A=0 IF EXP=0
3299                   *
3300  351E- A5 97      SGN1    LDA EXP
3301  3520- F0 09              BEQ *+11        RTS, IF EXP=0
3302  3522- A5 9C              LDA SIGN
3303  3524- 2A                 ROL A
3304  3525- A9 FF              LDA =$FF
3305  3527- B0 02              BCS *+4
3306  3529- A9 01              LDA =1
3307  352B- 60                 RTS
3308                   *
3309                   * SGN: BASIC FUNCTION
3310                   *********************
3311                   *
3312  352C- 20 1E 35   SGN     JSR SGN1
3313  352F- 85 98      FLOAT1  STA MANT        FLOAT 1 BYTE
3314  3531- A9 00              LDA =0
3315  3533- 85 99              STA MANT+1

----------------------------------------------------------------------

GRAPHIC BASIC - MATH OPERATIONS    07/01/82   R65 ASSEMBLER  PAGE 74

3316  3535- A2 88              LDX =$88        EXP FOR FLOAT
3317  3537- A5 98      FLOAT2  LDA MANT        FLOAT 2 BYTES
3318  3539- 49 FF              EOR =$FF
3319  353B- 2A                 ROL A           SIGN INTO C
3320  353C- A9 00      FLOAT   LDA =0
3321  353E- 85 9B              STA MANT+3
3322  3540- 85 9A              STA MANT+2
3323  3542- 86 97              STX EXP
3324  3544- 85 A6              STA DYADIC+7
3325  3546- 85 9C              STA SIGN
3326  3548- 4C 93 33           JMP NORMAL
3327                   *
3328                   *
3329                   * COMPAR: COMPARE FLP NUMBERS
3330                   *****************************
3331                   *
3332  354B- 85 5A      COMPAR  STA TEMP8
3333  354D- 84 5B              STY TEMP8+1
3334  354F- A0 00              LDY =0
3335  3551- B1 5A              LDA (TEMP8),Y
3336  3553- C8                 INY
3337  3554- AA                 TAX
3338  3555- F0 C7              BEQ SGN1
3339  3557- B1 5A              LDA (TEMP8),Y
3340  3559- 45 9C              EOR SIGN
3341  355B- 30 C5              BMI SGN1+4
3342  355D- E4 97              CPX EXP
3343  355F- D0 22              BNE COMPR1
3344  3561- B1 5A              LDA (TEMP8),Y
3345  3563- 09 80              ORA =$80
3346  3565- C5 98              CMP MANT
3347  3567- D0 1A              BNE COMPR1
3348  3569- C8                 INY
3349  356A- B1 5A              LDA (TEMP8),Y
3350  356C- C5 99              CMP MANT+1
3351  356E- D0 13              BNE COMPR1
3352  3570- C8                 INY
3353  3571- B1 5A              LDA (TEMP8),Y
3354  3573- C5 9A              CMP MANT+2
3355  3575- D0 0C              BNE COMPR1
3356  3577- C8                 INY
3357  3578- A9 7F              LDA =$7F
3358  357A- C5 A6              CMP DYADIC+7    TO C
3359  357C- B1 5A              LDA (TEMP8),Y
3360  357E- E5 9B              SBC MANT+3
3361  3580- D0 01              BNE COMPR1
3362  3582- 60                 RTS
3363                   *
3364  3583- A5 9C      COMPR1  LDA SIGN
3365  3585- 90 02              BCC *+4

----------------------------------------------------------------------

GRAPHIC BASIC - MATH OPERATIONS    07/01/82   R65 ASSEMBLER  PAGE 75

3366  3587- 49 FF              EOR =$FF
3367  3589- 4C 24 35           JMP SGN1+6
3368                   *
3369                   *
3370                   * NUMBER: FLP CONSTANT INPUT IN EXPRES
3371                   **************************************
3372                   *
3373  358C- 90 08      NUMBER  BCC *+10
3374  358E- C9 24              CMP ='$'        HEX?
3375  3590- D0 03              BNE *+5
3376  3592- 4C 3B 4A           JMP NUMBHEX
3377  3595- 38                 SEC
3378                   *
3379  3596- A0 00              LDY =0          CLEAR WORK AREA
3380  3598- A2 0A              LDX =10
3381  359A- 94 93              STY EXP-4,X
3382  359C- CA                 DEX
3383  359D- 10 FB              BPL *-3
3384  359F- 90 0F              BCC NUMB0+3     IF FIST DIGIT=NUMBER
3385                   *
3386  35A1- C9 2D              CMP ='-'
3387  35A3- D0 04              BNE *+6
3388  35A5- 86 9D              STX CURRSG      SET CURRENT SIGN TO FF
3389  35A7- F0 04              BEQ NUMB0       ALLWAYS TAKEN
3390  35A9- C9 2B              CMP ='+'
3391  35AB- D0 05              BNE *+7
3392  35AD- 20 00 27   NUMB0   JSR FETCH
3393  35B0- 90 63              BCC NUMB5
3394  35B2- C9 2E              CMP ='.'
3395  35B4- F0 30              BEQ NUMB3
3396  35B6- C9 45              CMP ='E'
3397  35B8- D0 38              BNE NUMB4
3398                   *
3399  35BA- 20 00 27           JSR FETCH       EXPONTENT
3400  35BD- 90 19              BCC NUMB2+3
3401  35BF- C9 B8              CMP =$B8        CODE FOR -
3402  35C1- F0 0E              BEQ NUMB1
3403  35C3- C9 2D              CMP ='-'
3404  35C5- F0 0A              BEQ NUMB1
3405  35C7- C9 B7              CMP =$B7        CODE FOR +
3406  35C9- F0 0A              BEQ NUMB2
3407  35CB- C9 2B              CMP ='+'
3408  35CD- F0 06              BEQ NUMB2
3409  35CF- D0 07              BNE NUMB2+3     IF NOT DIGIT OR SIGN
3410                   *
3411  35D1- A9 80      NUMB1   LDA =$80        IF EXP -
3412  35D3- 85 96              STA EXP-1
3413                   *
3414  35D5- 20 00 27   NUMB2   JSR FETCH       IF EXP +
3415  35D8- 90 62              BCC NUMB7       BRANCH, IF NUMBER

----------------------------------------------------------------------

GRAPHIC BASIC - MATH OPERATIONS    07/01/82   R65 ASSEMBLER  PAGE 76

3416  35DA- 24 96              BIT EXP-1
3417  35DC- 10 14              BPL NUMB4       BRANCH, IF POS
3418  35DE- A9 00              LDA =0
3419  35E0- 38                 SEC
3420  35E1- E5 94              SBC CURREX      ELSE COMPLEMENT CURREX
3421  35E3- 4C F4 35           JMP NUMB4+2
3422                   *
3423  35E6- A9 80      NUMB3   LDA =$80        DECIMAL POINT
3424  35E8- 46 95              LSR TRANSP
3425  35EA- 05 95              ORA TRANSP
3426  35EC- 85 95              STA TRANSP
3427  35EE- 24 95              BIT TRANSP
3428  35F0- 50 BB              BVC NUMB0       CONTINUE, IF FIRST POINT
3429                   *
3430  35F2- A5 94      NUMB4   LDA CURREX      END OF NUMBER
3431  35F4- 38                 SEC
3432  35F5- E5 93              SBC POINTC
3433  35F7- 85 94              STA CURREX
3434  35F9- F0 12              BEQ *+20        SKIP, IF RESULTING
3435  35FB- 10 09              BPL *+11        EXP=0 OR POSITIVE
3436  35FD- 20 D8 36          JSR DIVTEN      ELSE DIVIDE BY TEN
3437  3600- E6 94              INC CURREX
3438  3602- D0 F9              BNE *-5
3439  3604- F0 07              BEQ *+9         ALLWAYS TAKEN
3440                   *
3441  3606- 20 B9 36           JSR MULTEN
3442  3609- C6 94              DEC CURREX
3443  360B- D0 F9              BNE *-5
3444                   *
3445  360D- A5 9D              LDA CURRSG
3446  360F- 30 01              BMI *+3
3447  3611- 60                 RTS
3448                   *
3449  3612- 4C AE 36           JMP NEGATE
3450                   *
3451  3615- 48         NUMB5   PHA             DIGIT ENTRY, SAVE IT
3452  3616- 24 95              BIT TRANSP      AFTER DECIMAL POINT?
3453  3618- 10 02              BPL *+4
3454  361A- E6 93              INC POINTC
3455  361C- 20 B9 36           JSR MULTEN
3456  361F- 68                 PLA
3457  3620- 38                 SEC
3458  3621- E9 30              SBC =$30        CONVERT ASCII TO NUMBER
3459  3623- 20 29 36           JSR NUMB6
3460  3626- 4C AD 35           JMP NUMB0
3461                   *
3462  3629- 48         NUMB6   PHA             SAVE CONVERTED TOGIT
3463  362A- 20 0F 35           JSR TRANS2      CURRENT RES TO DYADIC
3464  362D- 68                 PLA
3465  362E- 20 2F 35           JSR FLOAT1      FLOAT DIGIT

----------------------------------------------------------------------

GRAPHIC BASIC - MATH OPERATIONS    07/01/82   R65 ASSEMBLER  PAGE 77

3466  3631- A5 A4              LDA DYADIC+5
3467  3633- 45 9C              EOR SIGN
3468  3635- 85 A5              STA DYADIC+6
3469  3637- A6 97              LDX EXP
3470  3639- 4C 2A 33           JMP ADD         AND ADD TO CURRENT RESUL
3471                   *
3472  363C- A5 94      NUMB7   LDA CURREX      EXPONENT DIGIT
3473  363E- C9 0C              CMP =12
3474  3640- 90 09              BCC *+11
3475  3642- 24 96              BIT TRANSP+1
3476  3644- 30 03              BMI *+5
3477  3646- 4C 3F 34           JMP OVERFL
3478                   *
3479  3649- A9 0B              LDA =11
3480  364B- 0A                 ASL A           MULTIPLY BY TEN
3481  364C- 0A                 ASL A
3482  364D- 18                 CLC
3483  364E- 65 94              ADC CURREX
3484  3650- 0A                 ASL A
3485  3651- 18                 CLC
3486  3652- A0 00              LDY =0
3487  3654- 71 A9              ADC (PC),Y
3488  3656- 38                 SEC
3489  3657- E9 30              SBC =$30        CONVERT ASCII TO NUMBER
3490  3659- 85 94              STA CURREX
3491  365B- 4C D5 35           JMP NUMB2
3492                   *
3493                   *
3494  365E- 9B 3E BC   OUTCT1  BYT $9B,$3E,$BC,$1F,$FD
3494  3661- 1F FD 
3495  3663- 9E 6E 6B           BYT $9E,$6E,$6B,$27,$FE
3495  3666- 27 FE 
3496  3668- 9E 6E 6B           BYT $9E,$6E,$6B,$28,$00
3496  366B- 28 00 
3497                   *
3498  366D- 80 00 00   OUTCT2  BYT $80,$00,$00,$00,$00
3498  3670- 00 00 
3499  3672- FA 0A 1F           BYT $FA,$0A,$1F,$00,$00
3499  3675- 00 00 
3500  3677- 98 96 80           BYT $98,$96,$80,$FF,$F0
3500  367A- FF F0 
3501  367C- BD C0 00           BYT $BD,$C0,$00,$01,$86
3501  367F- 01 86 
3502  3681- A0 FF FF           BYT $A0,$FF,$FF,$D8,$F0
3502  3684- D8 F0 
3503  3686- 00 00 03           BYT $00,$00,$03,$E8,$FF
3503  3689- E8 FF 
3504  368B- FF FF 9C           BYT $FF,$FF,$9C,$00,$00
3504  368E- 00 00 
3505  3690- 00 0A FF           BYT $00,$0A,$FF,$FF,$FF

----------------------------------------------------------------------

GRAPHIC BASIC - MATH OPERATIONS    07/01/82   R65 ASSEMBLER  PAGE 78

3505  3693- FF FF 
3506  3695- FF FF DF           BYT $FF,$FF,$DF,$0A,$80
3506  3698- 0A 80 
3507  369A- 00 03 4B           BYT $00,$03,$4B,$C0,$FF
3507  369D- C0 FF 
3508  369F- FF 73 60           BYT $FF,$73,$60,$00,$00
3508  36A2- 00 00 
3509  36A4- 0E 10 FF           BYT $0E,$10,$FF,$FF,$FD
3509  36A7- FF FD 
3510  36A9- A8 00 00           BYT $A8,$00,$00,$00,$3C
3510  36AC- 00 3C 
3511                   *
3512                   * NEGATE: NEGATE FLP ACCU
3513                   *************************
3514                   *
3515  36AE- A5 97      NEGATE  LDA EXP
3516  36B0- F0 06              BEQ *+8         RTS, IF ZERO
3517  36B2- A5 9C              LDA SIGN
3518  36B4- 49 FF              EOR =$FF
3519  36B6- 85 9C              STA SIGN
3520  36B8- 60                 RTS
3521                   *
3522                   * MULTEN: MULTIPLY BY TEN
3523                   *************************
3524                   *
3525  36B9- 20 0F 35   MULTEN  JSR TRANS2
3526  36BC- AA                 TAX
3527  36BD- F0 10              BEQ *+18        RTS
3528  36BF- 18                 CLC
3529  36C0- 69 02              ADC =2          *4
3530  36C2- B0 0C              BCS *+14        OVERFLOW
3531  36C4- A2 00              LDX =0
3532  36C6- 86 A5              STX DYADIC+6
3533  36C8- 20 37 33           JSR ADD+13      4+1=5
3534  36CB- E6 97              INC EXP         2*5=10
3535  36CD- F0 01              BEQ *+3         OVERFLOW
3536  36CF- 60                 RTS
3537  36D0- 4C 3F 34           JMP OVERFL
3538                   *
3539                   * DIVTEN: DIVIDE BY TEN
3540                   ***********************
3541                   *
3542  36D3- 84 20 00           BYT $84,$20,0,0,0       10.0
3542  36D6- 00 00 
3543  36D8- 20 0F 35   DIVTEN  JSR TRANS2
3544  36DB- A9 D3              LDA =<(DIVTEN-5)
3545  36DD- A0 36              LDY =>(DIVTEN-5)
3546  36DF- A2 00              LDX =0
3547  36E1- 86 A5              STX DYADIC+6
3548  36E3- 20 9E 34           JSR GETFLP

----------------------------------------------------------------------

GRAPHIC BASIC - MATH OPERATIONS    07/01/82   R65 ASSEMBLER  PAGE 79

3549  36E6- 4C C0 37           JMP DIVIDE
3550                   *
3551                   * NUMEXP: NUMERIC EXPRESSION
3552                   ****************************
3553                   *
3554  36E9- 20 00 27   NUMEXP  JSR FETCH
3555  36EC- 20 EC 2D           JSR EXPRES
3556  36EF- 20 DD 2D           JSR TESTTP      MUST BE NUMERIC
3557  36F2- 20 07 37           JSR FLPINT-4
3558  36F5- A6 9A              LDX MANT+2
3559  36F7- D0 05              BNE *+7
3560  36F9- A6 9B              LDX MANT+3
3561  36FB- 4C 06 27           JMP FETCH1
3562  36FE- A2 2A     QERR    LDX =$2A        QUANTITY ERROR
3563  3700- 4C 43 23           JMP ERROR
3564                   *
3565                   * FLPINT: FLP TO INTEGER CONVERSION
3566                   ***********************************
3567                   *
3568  3703- 90 80 00   FLPINF  BYT $90,$80,0,0
3568  3706- 00 
3569                   *
3570  3707- A5 9C              LDA SIGN
3571  3709- 30 0D              BMI *+15
3572  370B- A5 97      FLPINT  LDA EXP
3573  370D- C9 90              CMP =$90
3574  370F- 90 09              BCC *+11
3575  3711- A9 03              LDA =<FLPINF
3576  3713- A0 37              LDY =>FLPINF
3577  3715- 20 4B 35           JSR COMPAR
3578  3718- D0 E4              BNE QERR        QUANT ERROR, TOO LARGE
3579                   *
3580  371A- A5 97      FLPIN1  LDA EXP
3581  371C- F0 28              BEQ FLPIN2
3582  371E- 38                 SEC
3583  371F- E9 A0              SBC =$A0
3584  3721- 24 9C              BIT SIGN
3585  3723- 10 09              BPL *+11
3586  3725- AA                 TAX
3587  3726- A9 FF              LDA =$FF
3588  3728- 85 9E              STA DYADIC-1
3589  372A- 20 0E 34           JSR COMPL+6
3590  372D- 8A                 TXA
3591  372E- A2 97              LDX =<EXP
3592  3730- C9 F9              CMP =$F9
3593  3732- 10 06              BPL *+8
3594  3734- 20 5A 34           JSR ROR2A
3595  3737- 84 9E              STY DYADIC-1
3596  3739- 60                 RTS
3597                   *

----------------------------------------------------------------------

GRAPHIC BASIC - MATH OPERATIONS    07/01/82   R65 ASSEMBLER  PAGE 80

3598  373A- A8                 TAY
3599  373B- A5 9C              LDA SIGN
3600  373D- 2A                 ROL A
3601  373E- 66 98              ROR MANT
3602  3740- 20 71 34           JSR ROR4
3603  3743- 84 9E              STY DYADIC-1
3604  3745- 60                 RTS
3605                   *
3606  3746- 85 98      FLPIN2  STA MANT
3607  3748- 85 99              STA MANT+1
3608  374A- 85 9A              STA MANT+2
3609  374C- 85 9B              STA MANT+3
3610  374E- A8                 TAY
3611  374F- 60                 RTS
3612                   *
3613                   * TESTEQ: EQUAL, LESS AND GREATER TEST
3614                   **************************************
3615                   *
3616  3750- 20 DE 2D   TESTEQ  JSR TESTTP+1
3617  3753- B0 13              BCS TESTE1
3618  3755- A5 A4              LDA DYADIC+5    NUMERIC COMPARE
3619  3757- 09 7F              ORA =$7F
3620  3759- 25 A0              AND DYADIC+1
3621  375B- 85 A0              STA DYADIC+1
3622  375D- A9 9F              LDA =<DYADIC
3623  375F- A0 00              LDY =>DYADIC
3624  3761- 20 4B 35           JSR COMPAR
3625  3764- AA                 TAX
3626  3765- 4C 9B 37           JMP TESTE2+6
3627                   *
3628  3768- A9 00      TESTE1  LDA =0          STRING COMPAR
3629  376A- 85 45              STA RESTYP
3630  376C- C6 83              DEC LOGIC
3631  376E- 20 04 29           JSR PREPST
3632  3771- 85 97              STA EXP
3633  3773- 86 98              STX MANT
3634  3775- 84 99              STY MANT+1
3635  3777- A5 A2              LDA DYADIC+3
3636  3779- A4 A3              LDY DYADIC+4
3637  377B- 20 08 29           JSR PREPST+4
3638  377E- 86 A2              STX DYADIC+3
3639  3780- 84 A3              STY DYADIC+4
3640  3782- AA                 TAX
3641  3783- 38                 SEC
3642  3784- E5 97              SBC EXP
3643  3786- F0 08              BEQ *+10
3644  3788- A9 01              LDA =1
3645  378A- 90 04              BCC *+6
3646  378C- A6 97              LDX EXP
3647  378E- A9 FF              LDA =$FF

----------------------------------------------------------------------

GRAPHIC BASIC - MATH OPERATIONS    07/01/82   R65 ASSEMBLER  PAGE 81

3648  3790- 85 9C              STA SIGN
3649  3792- A0 FF              LDY =$FF
3650  3794- E8                 INX
3651  3795- C8         TESTE2  INY
3652  3796- CA                 DEX
3653  3797- D0 07              BNE *+9
3654  3799- A6 9C              LDX SIGN
3655  379B- 30 0F              BMI TESTE3
3656  379D- 18                 CLC
3657  379E- 90 0C              BCC TESTE3      ALLWAYS TAKEN
3658  37A0- B1 A2              LDA (DYADIC+3),Y
3659  37A2- D1 98              CMP (MANT),Y
3660  37A4- F0 EF              BEQ TESTE2
3661  37A6- A2 FF              LDX =$FF
3662  37A8- B0 02              BCS TESTE3
3663  37AA- A2 01              LDX =1
3664  37AC- E8         TESTE3  INX
3665  37AD- 8A                 TXA
3666  37AE- 2A                 ROL A
3667  37AF- 25 4A              AND READFL+1
3668  37B1- F0 02              BEQ *+4
3669  37B3- A9 FF              LDA =$FF
3670  37B5- 4C 2F 35           JMP FLOAT1
3671                   *
3672                   * DIVIDE: FLOATING POINT DIVIDE
3673                   *******************************
3674                   *
3675  37B8- A2 78      DIVZ    LDX =$78        DIVISION BY ZERO
3676  37BA- 4C 43 23           JMP ERROR
3677                   *
3678  37BD- 20 7D 34           JSR PREPMO
3679  37C0- F0 F6      DIVIDE  BEQ DIVZ
3680  37C2- 20 EF 34           JSR ROUND
3681  37C5- A9 00              LDA =0          COMPL EXPONENT
3682  37C7- 38                 SEC
3683  37C8- E5 97              SBC EXP
3684  37CA- 85 97              STA EXP
3685  37CC- 20 4B 38           JSR MULEXP      COMPUTE RESULTING EXP
3686  37CF- E6 97              INC EXP
3687  37D1- F0 75              BEQ OVERF1      OVERFLOW
3688  37D3- A2 FC              LDX =$FC
3689  37D5- A9 01              LDA =1
3690  37D7- A4 A0      DIVID0  LDY DYADIC+1
3691  37D9- C4 98              CPY MANT
3692  37DB- D0 10              BNE DIVID1
3693  37DD- A4 A1              LDY DYADIC+2
3694  37DF- C4 99              CPY MANT+1
3695  37E1- D0 0A              BNE DIVID1
3696  37E3- A4 A2              LDY DYADIC+3
3697  37E5- C4 9A              CPY MANT+2

----------------------------------------------------------------------

GRAPHIC BASIC - MATH OPERATIONS    07/01/82   R65 ASSEMBLER  PAGE 82

3698  37E7- D0 04              BNE DIVID1
3699  37E9- A4 A3              LDY DYADIC+4
3700  37EB- C4 9B              CPY MANT+3
3701  37ED- 08         DIVID1  PHP
3702  37EE- 2A                 ROL A
3703  37EF- 90 09              BCC *+11
3704  37F1- E8                 INX
3705  37F2- 95 5F              STA TEMP9+3,X
3706  37F4- F0 32              BEQ DIVID3
3707  37F6- 10 34              BPL DIVID3+4
3708  37F8- A9 01              LDA =1
3709  37FA- 28                 PLP
3710  37FB- B0 0E              BCS *+16
3711  37FD- 06 A3      DIVID2  ASL DYADIC+4
3712  37FF- 26 A2             ROL DYADIC+3
3713  3801- 26 A1              ROL DYADIC+2
3714  3803- 26 A0              ROL DYADIC+1
3715  3805- B0 E6              BCS DIVID1
3716  3807- 30 CE              BMI DIVID0
3717  3809- 10 E2              BPL DIVID1
3718  380B- A8                 TAY
3719  380C- A5 A3              LDA DYADIC+4
3720  380E- E5 9B              SBC MANT+3
3721  3810- 85 A3              STA DYADIC+4
3722  3812- A5 A2              LDA DYADIC+3
3723  3814- E5 9A              SBC MANT+2
3724  3816- 85 A2              STA DYADIC+3
3725  3818- A5 A1              LDA DYADIC+2
3726  381A- E5 99              SBC MANT+1
3727  381C- 85 A1              STA DYADIC+2
3728  381E- A5 A0              LDA DYADIC+1
3729  3820- E5 98              SBC MANT
3730  3822- 85 A0              STA DYADIC+1
3731  3824- 98                 TYA
3732  3825- 4C FD 37           JMP DIVID2
3733  3828- A9 40      DIVID3  LDA =$40
3734  382A- D0 CE              BNE DIVID2-3    ALLWAYS TAKEN
3735                   *
3736  382C- 0A                 ASL A
3737  382D- 0A                 ASL A
3738  382E- 0A                 ASL A
3739  382F- 0A                 ASL A
3740  3830- 0A                 ASL A
3741  3831- 0A                 ASL A
3742  3832- 85 A6              STA DYADIC+7
3743  3834- 28                 PLP
3744  3835- A5 5C      MULEND  LDA TEMP9
3745  3837- 85 98              STA MANT
3746  3839- A5 5D              LDA TEMP9+1
3747  383B- 85 99              STA MANT+1

----------------------------------------------------------------------

GRAPHIC BASIC - MATH OPERATIONS    07/01/82   R65 ASSEMBLER  PAGE 83

3748  383D- A5 5E              LDA TEMP9+2
3749  383F- 85 9A              STA MANT+2
3750  3841- A5 5F              LDA TEMP9+3
3751  3843- 85 9B              STA MANT+3
3752  3845- 4C 98 33           JMP NORMAL+5
3753                   *
3754  3848- 4C 3F 34   OVERF1  JMP OVERFL
3755                   *
3756  384B- A5 9F      MULEXP  LDA DYADIC
3757  384D- F0 20              BEQ MULEX1
3758  384F- 18                 CLC
3759  3850- 65 97              ADC EXP
3760  3852- 90 05              BCC *+7
3761  3854- 30 F2              BMI OVERF1
3762  3856- 18                 CLC
3763  3857- 90 02              BCC *+4         ALLWAYS TAKEN
3764                   *
3765  3859- 10 14              BPL MULEX1
3766  385B- 69 80              ADC =128
3767  385D- 85 97              STA EXP
3768  385F- D0 03              BNE *+5
3769  3861- 85 9C              STA SIGN
3770  3863- 60                 RTS
3771                   *
3772  3864- A5 A5              LDA DYADIC+6
3773  3866- 85 9C              STA SIGN
3774  3868- 60                 RTS
3775                   *
3776  3869- A5 9C              LDA SIGN
3777  386B- 49 FF              EOR =$FF
3778  386D- 30 D9              BMI OVERF1
3779  386F- 68         MULEX1  PLA
3780  3870- 68                 PLA
3781  3871- A9 00              LDA =0
3782  3873- 85 97              STA EXP
3783  3875- 85 9C              STA SIGN
3784  3877- 60                 RTS
3785                   *
3786                   * MULT: FLOATING POINT MULTIPLICATION
3787                   *************************************
3788                   *
3789  3878- 20 7D 34           JSR PREPMO
3790  387B- F0 FA      MULT    BEQ *-4         RTS, IF ZERO
3791  387D- 20 4B 38           JSR MULEXP
3792  3880- A9 00              LDA =0          CLEAR WORK AREA
3793  3882- 85 5C              STA TEMP9
3794  3884- 85 5D              STA TEMP9+1
3795  3886- 85 5E              STA TEMP9+2
3796  3888- 85 5F              STA TEMP9+3
3797  388A- A5 A6              LDA DYADIC+7

----------------------------------------------------------------------

GRAPHIC BASIC - MATH OPERATIONS    07/01/82   R65 ASSEMBLER  PAGE 84

3798  388C- 20 A6 38           JSR MULBYT
3799  388F- A5 9B              LDA MANT+3
3800  3891- 20 A6 38           JSR MULBYT
3801  3894- A5 9A              LDA MANT+2
3802  3896- 20 A6 38           JSR MULBYT
3803  3899- A5 99              LDA MANT+1
3804  389B- 20 A6 38           JSR MULBYT
3805  389E- A5 98              LDA MANT
3806  38A0- 20 A6 38           JSR MULBYT
3807  38A3- 4C 35 38           JMP MULEND
3808                   *
3809                   * MULBYT: MULTIPLY 1*5 BYTES
3810                   ****************************
3811                   * HARDWARE 8*8 MULTIPLY USED
3812                   *
3813  38A6- A4 5F      MULBYT  LDY TEMP9+3
3814  38A8- 84 A6              STY DYADIC+7
3815  38AA- A4 5E              LDY TEMP9+2
3816  38AC- 84 5F              STY TEMP9+3
3817  38AE- A4 5D              LDY TEMP9+1
3818  38B0- 84 5E              STY TEMP9+2
3819  38B2- A4 5C              LDY TEMP9
3820  38B4- 84 5D              STY TEMP9+1
3821  38B6- A0 00              LDY =0
3822  38B8- 84 5C              STY TEMP9
3823                   *
3824  38BA- C9 00              CMP =0          TEST ACCU
3825  38BC- D0 02              BNE *+4
3826  38BE- 58         MULBT9  CLI
3827  38BF- 60                 RTS
3828                   *
3829  38C0- 78                 SEI
3830  38C1- A0 04              LDY =4
3831  38C3- 8D E0 14           STA MULTA
3832  38C6- A5 A3              LDA DYADIC+4
3833  38C8- 8D E1 14           STA MULTB
3834  38CB- A5 A6              LDA DYADIC+7
3835  38CD- 18                 CLC
3836  38CE- 6D E2 14           ADC MULTR
3837  38D1- 85 A6              STA DYADIC+7
3838  38D3- A5 5F              LDA TEMP9+3
3839  38D5- 6D E3 14           ADC MULTR+1
3840  38D8- 85 5F              STA TEMP9+3
3841  38DA- 90 09              BCC MULBT2      SKIP, IF NO CARRY
3842                   *
3843  38DC- 98         MULBT1  TYA
3844  38DD- AA                 TAX
3845  38DE- CA                 DEX
3846  38DF- F0 04              BEQ *+6
3847  38E1- F6 5B              INC TEMP9-1,X

----------------------------------------------------------------------

GRAPHIC BASIC - MATH OPERATIONS    07/01/82   R65 ASSEMBLER  PAGE 85

3848  38E3- F0 F9              BEQ *-5
3849                   *
3850  38E5- 88         MULBT2  DEY
3851  38E6- F0 D6              BEQ MULBT9
3852  38E8- B9 9F 00           LDA DYADIC,Y
3853  38EB- 8D E1 14           STA MULTB
3854  38EE- B9 5C 00           LDA TEMP9,Y
3855  38F1- 18                 CLC
3856  38F2- 6D E2 14           ADC MULTR
3857  38F5- 99 5C 00           STA TEMP9,Y
3858  38F8- B9 5B 00           LDA TEMP9-1,Y
3859  38FB- 6D E3 14           ADC MULTR+1
3860  38FE- 99 5B 00          STA TEMP9-1,Y
3861  3901- B0 D9              BCS MULBT1
3862  3903- 90 E0              BCC MULBT2      ALLWAYS TAKEN
3863                   *
3864                   * UNDEFINED FUNCTION ERROR
3865                   *
3866  3905- A2 CE      UNDFN   LDX =$CE
3867  3907- 4C 43 23           JMP ERROR
3868                   *
3869                   *
3870                   *
3871                   * BASIC FUNCTION TABLE
3872                   **********************
3873                   *
3874  390A- 2C 35      FUNCTB  WRD SGN
3875  390C- 21 3E              WRD INT
3876  390E- 1E 3E              WRD ABS
3877  3910- 49 41              WRD USR
3878  3912- B9 4A              WRD STA
3879  3914- 05 3C              WRD POSF
3880  3916- B9 3E              WRD SQR
3881  3918- D3 3F              WRD RND
3882  391A- 4A 3E              WRD LOG
3883  391C- 00 3F              WRD EXPF
3884  391E- 2A 40              WRD COS
3885  3920- 31 40              WRD SIN
3886  3922- AC 40              WRD TAN
3887  3924- DC 40              WRD ATN
3888  3926- E1 3D              WRD PEEK
3889  3928- 86 3D              WRD LEN
3890  392A- DC 3C              WRD STR
3891  392C- A8 3D              WRD VAL
3892  392E- 9B 3D              WRD ASC
3893  3930- ED 3C              WRD CHR
3894  3932- 01 3D              WRD LEFT
3895  3934- 2D 3D              WRD RIGHT
3896  3936- 38 3D              WRD MID
3897                   *

----------------------------------------------------------------------

GRAPHIC BASIC - MATH OPERATIONS    07/01/82   R65 ASSEMBLER  PAGE 86

3898                   * NOT: MATH OPERATION
3899                   *********************
3900                   *
3901  3938- 20 0B 37   NOT     JSR FLPINT
3902  393B- A5 9B              LDA MANT+3
3903  393D- 49 FF              EOR =$FF
3904  393F- A8                 TAY
3905  3940- A5 9A              LDA MANT+2
3906  3942- 49 FF              EOR =$FF
3907  3944- 4C D2 2F           JMP INTFLP
3908                   *
3909                   * BFUNC: BASIC FUNCTION
3910                   ***********************
3911                   *
3912  3947- 0A         BFUNC   ASL A
3913  3948- 48                 PHA             SAVE 2*CODE
3914  3949- AA                 TAX
3915  394A- 20 00 27           JSR FETCH
3916  394D- E0 A9              CPX =$A9
3917  394F- 90 23              BCC BFUNC0      SKIP, IF NOT STR
3918                   *
3919  3951- 20 62 2B           JSR FOLLOW-6    "(" MUST FOLLOW
3920  3954- 20 EC 2D           JSR EXPRES
3921  3957- A9 2C              LDA =','
3922  3959- 20 68 2B           JSR FOLLOW
3923  395C- 38                 SEC
3924  395D- 20 DE 2D           JSR TESTTP+1    MUST BE STRING
3925  3960- 68                 PLA
3926  3961- AA                 TAX
3927  3962- A5 9B              LDA MANT+3
3928  3964- 48                 PHA
3929  3965- A5 9A              LDA MANT+2
3930  3967- 48                 PHA
3931  3968- 8A                 TXA
3932  3969- 48                 PHA             SAVE 2*CODE AGAIN
3933  396A- 20 EC 36           JSR NUMEXP+3    GET SECOND ARG
3934  396D- 68                 PLA
3935  396E- A8                 TAY
3936  396F- 8A                 TXA
3937  3970- 48                 PHA
3938  3971- 4C 9A 39           JMP BFUNC1+5
3939                   *
3940  3974- E0 88      BFUNC0  CPX =$88        IF USR
3941  3976- D0 1D              BNE BFUNC1
3942  3978- 20 62 2B           JSR FOLLOW-6    GET 2 ARGS
3943  397B- 20 EC 2D           JSR EXPRES      ADDRESS
3944  397E- 20 DD 2D           JSR TESTTP
3945  3981- 20 EE 3D           JSR PEEK1       CONVERT TO INTEGER
3946  3984- A9 2C              LDA =','
3947  3986- 20 68 2B           JSR FOLLOW

----------------------------------------------------------------------

GRAPHIC BASIC - MATH OPERATIONS    07/01/82   R65 ASSEMBLER  PAGE 87

3948  3989- 20 EC 2D           JSR EXPRES      GET SECOND ARG
3949  398C- 20 DD 2D           JSR TESTTP      MUST BE NUMERIC
3950  398F- 20 66 2B           JSR FOLLOW-2
3951  3992- 4C 98 39           JMP BFUNC1+3
3952                   *
3953  3995- 20 75 2F   BFUNC1  JSR ARGUM
3954  3998- 68                 PLA
3955  3999- A8                 TAY
3956  399A- B9 88 38           LDA FUNCTB-$82,Y
3957  399D- 85 8B              STA PNT1
3958  399F- B9 89 38           LDA FUNCTB-$81,Y
3959  39A2- 85 8C              STA PNT1+1
3960  39A4- 20 8A 00           JSR PNT1-1      EXECUTE
3961  39A7- 4C DD 2D           JMP TESTTP      MUST BE NUMERIC
3962                   *
3963                   * OR: MATH OPERATION
3964                   ********************
3965                   *
3966  39AA- A0 FF      OR      LDY =$FF
3967  39AC- D0 02              BNE *+4         ALLWAYS TAKEN
3968                   *
3969                   * AND: MATH OPERATION
3970                   *********************
3971                   *
3972  39AE- A0 00      AND     LDY =0
3973  39B0- 84 43              STY INPNT
3974  39B2- 20 0B 37           JSR FLPINT
3975  39B5- A5 9A              LDA MANT+2
3976  39B7- 45 43              EOR INPNT
3977  39B9- 85 41              STA CHRSAV
3978  39BB- A5 9B              LDA MANT+3
3979  39BD- 45 43              EOR INPNT
3980  39BF- 85 42              STA CHRSAV+1
3981  39C1- 20 FF 34           JSR TRANS1
3982  39C4- 20 0B 37           JSR FLPINT
3983  39C7- A5 9B              LDA MANT+3
3984  39C9- 45 43              EOR INPNT
3985  39CB- 25 42              AND CHRSAV+1
3986  39CD- 45 43              EOR INPNT
3987  39CF- A8                 TAY
3988  39D0- A5 9A              LDA MANT+2
3989  39D2- 45 43              EOR INPNT
3990  39D4- 25 41              AND CHRSAV
3991  39D6- 45 43              EOR INPNT
3992  39D8- 4C D2 2F           JMP INTFLP
3993                   *
3994                           TIT GRAPHIC BASIC - ARRAYS
3995                           PAG

----------------------------------------------------------------------

GRAPHIC BASIC - ARRAYS             07/01/82   R65 ASSEMBLER  PAGE 88

3996                   *
3997                   * DIM: STATEMENT ROUTINE
3998                   ************************
3999                   *
4000  39DB- A9 2C              LDA =','
4001                    * BASIC5:A ORIGINAL 7/1/1982, RECOVERED 3/2018
4002  39DD- 20 68 2B           JSR FOLLOW
4003  39E0- A2 00      DIM     LDX =0
4004  39E2- 86 CF              STX TEMP4+1     VARIABLE CAN BE UNDEF
4005  39E4- AA                 TAX
4006  39E5- 20 79 2B           JSR GETVAR+5
4007  39E8- 20 06 27           JSR FETCH1
4008  39EB- D0 EE              BNE DIM-5
4009  39ED- 60                 RTS
4010                   *
4011                   * GETARR: GET ARRAY
4012                   *******************
4013                   *
4014  39EE- A5 CF      GETARR  LDA TEMP4+1
4015  39F0- 48                 PHA
4016  39F1- A5 44              LDA RESTYP-1
4017  39F3- 05 46              ORA RESTYP+1
4018  39F5- 48                 PHA
4019  39F6- A5 45              LDA RESTYP
4020  39F8- 48                 PHA
4021  39F9- A0 00              LDY =0
4022  39FB- 98         GETAR1  TYA
4023  39FC- 48                 PHA
4024  39FD- A5 7C              LDA VARSYM+1
4025  39FF- 48                PHA
4026  3A00- A5 7B              LDA VARSYM
4027  3A02- 48                 PHA
4028  3A03- 20 CA 3B           JSR GETSU       GET SUBSCRIPT
4029  3A06- 68                 PLA
4030  3A07- 85 7B              STA VARSYM
4031  3A09- 68                 PLA
4032  3A0A- 85 7C              STA VARSYM+1
4033  3A0C- 68                 PLA
4034  3A0D- A8                 TAY
4035                   *
4036  3A0E- BA                 TSX
4037  3A0F- BD 02 01           LDA 258,X       RESTYP TO STACK BOT
4038  3A12- 48                 PHA
4039  3A13- BD 01 01           LDA 257,X
4040  3A16- 48                 PHA
4041  3A17- BD 03 01           LDA 259,X
4042  3A1A- 9D 01 01           STA 257,X
4043  3A1D- A5 9A              LDA MANT+2
4044  3A1F- 9D 03 01           STA 259,X       SUBSCRIPT TO TOP
4045  3A22- A5 9B              LDA MANT+3

----------------------------------------------------------------------

GRAPHIC BASIC - ARRAYS             07/01/82   R65 ASSEMBLER  PAGE 89

4046  3A24- 9D 02 01           STA 258,X
4047                   *
4048  3A27- C8                 INY             COUNT SUBSCRIPT
4049  3A28- 20 06 27           JSR FETCH1      MORE SUBSCRIPTS?
4050  3A2B- C9 2C              CMP =','
4051  3A2D- F0 CC              BEQ GETAR1      IF YES, GET THEM
4052                   *
4053  3A2F- 84 43              STY INPNT       SAVE NO OF SUBSCRIPTS
4054  3A31- 20 66 2B           JSR FOLLOW-2    ) MUST FOLLOW
4055  3A34- 68                 PLA
4056  3A35- 85 45              STA RESTYP
4057  3A37- 68                 PLA
4058  3A38- 85 46              STA RESTYP+1
4059  3A3A- 29 7F              AND =$7F
4060  3A3C- 85 44              STA RESTYP-1
4061  3A3E- 68                 PLA
4062  3A3F- 85 CF              STA TEMP4+1
4063                   *
4064  3A41- A6 65              LDX EOVAR
4065  3A43- A5 66              LDA EOVAR+1
4066  3A45- 86 95      GETAR2  STX TRANSP      SEARCH SYMBOL
4067  3A47- 85 96              STA TRANSP+1    STARTING FROM EOVAR
4068  3A49- C5 68              CMP STSPAC+1    ENDING WITH STSPAC
4069  3A4B- D0 04              BNE *+6
4070  3A4D- E4 67              CPX STSPAC
4071  3A4F- F0 36              BEQ GETAR4      BRANCH, IF NOT FOUND
4072  3A51- A0 00              LDY =0
4073  3A53- B1 95              LDA (TRANSP),Y
4074  3A55- C8                 INY
4075  3A56- C5 7B              CMP VARSYM
4076  3A58- D0 06              BNE *+8
4077  3A5A- A5 7C              LDA VARSYM+1
4078  3A5C- D1 95              CMP (TRANSP),Y
4079  3A5E- F0 13              BEQ GETAR3      BRANCH, IF FOUND
4080  3A60- C8                 INY
4081  3A61- B1 95              LDA (TRANSP),Y  GET SIZE LOW
4082  3A63- 18                 CLC
4083  3A64- 65 95              ADC TRANSP
4084  3A66- AA                 TAX
4085  3A67- C8                 INY
4086  3A68- B1 95              LDA (TRANSP),Y
4087  3A6A- 65 96              ADC TRANSP+1
4088  3A6C- 90 D7              BCC GETAR2      ALLWAYS TAKEN
4089                   *
4090  3A6E- A2 6F      SUBERR  LDX =$6F        SUBSCRIPT ERROR
4091  3A70- 4C 43 23           JMP ERROR
4092                   *
4093  3A73- A2 64      GETAR3  LDX =$64        IF FOUND
4094  3A75- A5 44              LDA RESTYP-1    REDIMENSION ERROR
4095  3A77- D0 F7              BNE GETAR3-3    YES

----------------------------------------------------------------------

GRAPHIC BASIC - ARRAYS             07/01/82   R65 ASSEMBLER  PAGE 90

4096  3A79- 20 DD 3B           JSR COMPEB
4097  3A7C- A5 43              LDA INPNT
4098  3A7E- A0 04              LDY =4
4099  3A80- D1 95              CMP (TRANSP),Y
4100  3A82- D0 EA              BNE SUBERR      SUBSCRIPT ERROR
4101  3A84- 4C 18 3B           JMP GETAR6
4102                   *
4103  3A87- A5 CF      GETAR4  LDA TEMP4+1     IF NOT FOUND
4104  3A89- F0 03              BEQ *+5
4105  3A8B- 4C 02 2C           JMP GETV3+4     UNDEF VAR ERR
4106                   *
4107  3A8E- 20 DD 3B           JSR COMPEB
4108  3A91- 20 07 23           JSR TSROOM
4109  3A94- A9 00              LDA =0
4110  3A96- A8                 TAY
4111  3A97- 85 A8              STA DYADIC+9
4112  3A99- A2 05              LDX =5
4113  3A9B- A5 7B              LDA VARSYM
4114  3A9D- 91 95              STA (TRANSP),Y
4115  3A9F- 10 01              BPL *+3
4116  3AA1- CA                 DEX
4117  3AA2- C8                 INY
4118  3AA3- A5 7C              LDA VARSYM+1
4119  3AA5- 91 95              STA (TRANSP),Y
4120  3AA7- 10 02              BPL *+4
4121  3AA9- CA                 DEX
4122  3AAA- CA                 DEX
4123  3AAB- 86 A7              STX DYADIC+8    ELEMENT SIZE
4124  3AAD- A5 43              LDA INPNT
4125  3AAF- C8                 INY
4126  3AB0- C8                 INY
4127  3AB1- C8                 INY
4128  3AB2- 91 95              STA (TRANSP),Y
4129  3AB4- A2 0B      GETAR5  LDX =11         DEFAULT DIMENSION
4130  3AB6- A9 00              LDA =0
4131  3AB8- 24 44              BIT RESTYP-1
4132  3ABA- 50 08              BVC *+10        SKIP, IF NOT DIM
4133  3ABC- 68                 PLA
4134  3ABD- 18                 CLC
4135  3ABE- 69 01              ADC =1
4136  3AC0- AA                 TAX
4137  3AC1- 68                 PLA
4138  3AC2- 69 00              ADC =0
4139                   *
4140  3AC4- C8                 INY
4141  3AC5- 91 95              STA (TRANSP),Y
4142  3AC7- C8                 INY
4143  3AC8- 8A                 TXA
4144  3AC9- 91 95              STA (TRANSP),Y
4145  3ACB- 20 7B 3B           JSR GETAR8

----------------------------------------------------------------------

GRAPHIC BASIC - ARRAYS             07/01/82   R65 ASSEMBLER  PAGE 91

4146  3ACE- 86 A7              STX DYADIC+8
4147  3AD0- 84 A8              STY DYADIC+9
4148  3AD2- A4 58              LDY TEMP1
4149  3AD4- C6 43              DEC INPNT
4150  3AD6- D0 DC              BNE GETAR5
4151  3AD8- 65 8F              ADC ENDB+1
4152  3ADA- B0 5D              BCS GETAR7      OUT OF MEMORY
4153  3ADC- 85 8F              STA ENDB+1
4154  3ADE- A8                 TAY
4155  3ADF- 8A                 TXA
4156  3AE0- 65 8E              ADC ENDB
4157  3AE2- 90 03              BCC *+5
4158  3AE4- C8                 INY
4159  3AE5- F0 52              BEQ GETAR7      OUT OF MEMORY
4160  3AE7- 20 07 23           JSR TSROOM
4161  3AEA- 85 67              STA STSPAC
4162  3AEC- 84 68              STY STSPAC+1
4163  3AEE- A9 00              LDA =0
4164  3AF0- E6 A8              INC DYADIC+9
4165  3AF2- A4 A7              LDY DYADIC+8
4166  3AF4- F0 05              BEQ *+7
4167  3AF6- 88                 DEY
4168  3AF7- 91 8E              STA (ENDB),Y
4169  3AF9- D0 FB              BNE *-3
4170  3AFB- C6 8F              DEC ENDB+1
4171  3AFD- C6 A8              DEC DYADIC+9
4172  3AFF- D0 F5             BNE *-9
4173  3B01- E6 8F              INC ENDB+1
4174  3B03- 38                 SEC
4175  3B04- A5 67              LDA STSPAC
4176  3B06- E5 95              SBC TRANSP
4177  3B08- A0 02              LDY =2
4178  3B0A- 91 95              STA (TRANSP),Y
4179  3B0C- A5 68              LDA STSPAC+1
4180  3B0E- C8                 INY
4181  3B0F- E5 96              SBC TRANSP+1
4182  3B11- 91 95              STA (TRANSP),Y
4183  3B13- A5 44              LDA RESTYP-1
4184  3B15- D0 63              BNE GETAR8-1
4185  3B17- C8                 INY
4186  3B18- B1 95      GETAR6  LDA (TRANSP),Y
4187  3B1A- 85 43              STA INPNT
4188  3B1C- A9 00              LDA =0
4189  3B1E- 85 A7              STA DYADIC+8
4190  3B20- 85 A8              STA DYADIC+9
4191  3B22- C8                 INY
4192  3B23- 68                 PLA
4193  3B24- AA                 TAX
4194  3B25- 85 9A              STA MANT+2
4195  3B27- 68                 PLA

----------------------------------------------------------------------

GRAPHIC BASIC - ARRAYS             07/01/82   R65 ASSEMBLER  PAGE 92

4196  3B28- 85 9B              STA MANT+3
4197  3B2A- D1 95              CMP (TRANSP),Y
4198  3B2C- 90 0F              BCC GETAR7+4
4199  3B2E- D0 06              BNE GETAR7-3
4200  3B30- C8                 INY
4201  3B31- 8A                 TXA
4202  3B32- D1 95              CMP (TRANSP),Y
4203  3B34- 90 08              BCC GETAR7+5
4204  3B36- 4C 6E 3A           JMP SUBERR      SUBSCRIPT ERROR
4205                   *
4206  3B39- 58         GETAR7  CLI
4207  3B3A- 4C 41 23           JMP OUTMEM      OUT OF MEMORY
4208                   *
4209  3B3D- C8                 INY
4210  3B3E- A5 A8              LDA DYADIC+9
4211  3B40- 05 A7              ORA DYADIC+8
4212  3B42- 18                 CLC
4213  3B43- F0 0A              BEQ *+12
4214  3B45- 20 7B 3B           JSR GETAR8
4215  3B48- 8A                 TXA
4216  3B49- 65 9A              ADC MANT+2
4217  3B4B- AA                 TAX
4218  3B4C- 98                 TYA
4219  3B4D- A4 58              LDY TEMP1
4220  3B4F- 65 9B              ADC MANT+3
4221  3B51- 86 A7              STX DYADIC+8
4222  3B53- C6 43              DEC INPNT
4223  3B55- D0 C9              BNE GETAR6+8
4224  3B57- 85 A8              STA DYADIC+9
4225  3B59- A2 05              LDX =5
4226  3B5B- A5 7B              LDA VARSYM
4227  3B5D- 10 01              BPL *+3
4228  3B5F- CA                 DEX
4229  3B60- A5 7C              LDA VARSYM+1
4230  3B62- 10 02              BPL *+4
4231  3B64- CA                 DEX
4232  3B65- CA                 DEX
4233  3B66- 86 5E              STX TEMP9+2
4234  3B68- A9 00              LDA =0
4235  3B6A- 20 84 3B           JSR GETAR8+9
4236  3B6D- 8A                 TXA
4237  3B6E- 65 8E              ADC ENDB
4238  3B70- 85 7D              STA VARSTP
4239  3B72- 98                 TYA
4240  3B73- 65 8F              ADC ENDB+1
4241  3B75- 85 7E              STA VARSTP+1
4242  3B77- A8                 TAY
4243  3B78- A5 7D              LDA VARSTP
4244  3B7A- 60                 RTS
4245                   *

----------------------------------------------------------------------

GRAPHIC BASIC - ARRAYS             07/01/82   R65 ASSEMBLER  PAGE 93

4246                   *
4247  3B7B- 84 58      GETAR8  STY TEMP1       SAVE POINTER
4248  3B7D- B1 95              LDA (TRANSP),Y
4249  3B7F- 85 5E              STA TEMP9+2
4250  3B81- 88                 DEY
4251  3B82- B1 95              LDA (TRANSP),Y
4252  3B84- 85 5F              STA TEMP9+3
4253  3B86- A5 A7              LDA DYADIC+8
4254  3B88- 78                 SEI
4255  3B89- 8D E0 14           STA MULTA
4256  3B8C- A5 5E              LDA TEMP9+2
4257  3B8E- 8D E1 14           STA MULTB
4258  3B91- AE E2 14           LDX MULTR
4259  3B94- AD E3 14           LDA MULTR+1
4260  3B97- A4 5F              LDY TEMP9+3
4261  3B99- 8C E1 14           STY MULTB
4262  3B9C- 18                 CLC
4263  3B9D- 6D E2 14           ADC MULTR
4264  3BA0- B0 97              BCS GETAR7      OUT OF MEMORY
4265  3BA2- A8                 TAY
4266  3BA3- AD E3 14           LDA MULTR+1
4267  3BA6- D0 91              BNE GETAR7      OUT OF MEMORY
4268  3BA8- 58                 CLI
4269  3BA9- A5 A8              LDA DYADIC+9
4270  3BAB- F0 1A              BEQ GETSU-3     RTS, IF ZERO
4271  3BAD- 78                 SEI
4272  3BAE- 8D E0 14           STA MULTA
4273  3BB1- A5 5F              LDA TEMP9+3
4274  3BB3- D0 84              BNE GETAR7      OUT OF MEMORY
4275  3BB5- A5 5E              LDA TEMP9+2
4276  3BB7- 8D E1 14           STA MULTB
4277  3BBA- 98                 TYA
4278  3BBB- 18                 CLC
4279  3BBC- 6D E2 14           ADC MULTR
4280  3BBF- B0 DF              BCS *-31        OUT OF MEMORY
4281  3BC1- A8                 TAY
4282  3BC2- AD E3 14           LDA MULTR+1
4283  3BC5- D0 EC              BNE *-18        OUT OF MEMORY
4284  3BC7- 98                 TYA
4285  3BC8- 58                 CLI
4286  3BC9- 60                 RTS
4287                   *
4288                   * GETSU: GET ONE SUBSCRIPT
4289                   **************************
4290                   *
4291  3BCA- 20 00 27   GETSU   JSR FETCH
4292  3BCD- 20 EC 2D           JSR EXPRES
4293  3BD0- 20 DD 2D           JSR TESTTP
4294  3BD3- A5 9C              LDA MANT+4
4295  3BD5- 30 03              BMI *+5

----------------------------------------------------------------------

GRAPHIC BASIC - ARRAYS             07/01/82   R65 ASSEMBLER  PAGE 94

4296  3BD7- 4C 0B 37           JMP FLPINT
4297  3BDA- 4C FE 36           JMP QERR
4298                   *
4299                   * COMPEB: COMPUTE ENDB
4300                   **********************
4301                   *
4302  3BDD- A5 43      COMPEB  LDA INPNT       NO OF SUBSCRIPTS
4303  3BDF- 0A                 ASL A
4304  3BE0- 69 05              ADC =5          *2, + 5
4305  3BE2- 65 95              ADC TRANSP
4306  3BE4- A4 96              LDY TRANSP+1
4307  3BE6- 90 01              BCC *+3
4308  3BE8- C8                 INY
4309  3BE9- 85 8E              STA ENDB
4310  3BEB- 84 8F              STY ENDB+1
4311  3BED- 60                 RTS
4312                   *
4313                           TIT GRAPHIC BASIC - FUNCTIONS
4314                           PAG

----------------------------------------------------------------------

GRAPHIC BASIC - FUNCTIONS          07/01/82   R65 ASSEMBLER  PAGE 95

4315                   *
4316                   * FRE: COMPUTE FREE SPACE IN MEMORY
4317                   ***********************************
4318                   *
4319  3BEE- A5 45      FRE     LDA RESTYP
4320  3BF0- F0 03              BEQ *+5
4321  3BF2- 20 04 29           JSR PREPST
4322  3BF5- 20 8F 2C           JSR PKSTRG
4323  3BF8- 38                 SEC
4324  3BF9- A5 69              LDA BTSTRG
4325  3BFB- E5 67              SBC STSPAC
4326  3BFD- A8                 TAY
4327  3BFE- A5 6A             LDA BTSTRG+1
4328  3C00- E5 68              SBC STSPAC+1
4329  3C02- 4C D2 2F           JMP INTFLP
4330                   *
4331                   * POS: BASIC FUNCTION
4332                   *********************
4333                   *
4334  3C05- 20 EF 36   POSF    JSR NUMEXP+6
4335  3C08- E0 04              CPX =4
4336  3C0A- 90 03              BCC *+5
4337  3C0C- 4C 7A 3D           JMP QERR1
4338  3C0F- E4 00              CPX OUTDEV
4339  3C11- D0 07              BNE POSF2
4340  3C13- A4 02      POSF1   LDY POS
4341  3C15- A9 00              LDA =0
4342  3C17- 4C D2 2F           JMP INTFLP
4343  3C1A- B5 BB      POSF2   LDA POSTB,X
4344  3C1C- A8                 TAY
4345  3C1D- 4C 15 3C           JMP POSF1+2
4346                   *
4347                   * DEF: STATEMENT ROUTINE
4348                   ************************
4349                   *
4350  3C20- 20 4E 3C   DEF     JSR DEF1
4351  3C23- 20 E3 32           JSR ILLDIR
4352  3C26- 20 62 2B           JSR FOLLOW-6    ( MUST FOLLOW
4353  3C29- A9 80              LDA =128
4354  3C2B- 85 48              STA FLAG1
4355  3C2D- 20 74 2B           JSR GETVAR
4356  3C30- 20 DD 2D           JSR TESTTP      MUST BE NUMERIC
4357  3C33- 20 66 2B           JSR FOLLOW-2    ) MUST FOLLOW
4358  3C36- A9 BF              LDA =$BF        CODE FOR =
4359  3C38- 20 68 2B           JSR FOLLOW
4360  3C3B- 48                 PHA
4361  3C3C- A5 7E              LDA VARSTP+1
4362  3C3E- 48                 PHA
4363  3C3F- A5 7D              LDA VARSTP
4364  3C41- 48                 PHA

----------------------------------------------------------------------

GRAPHIC BASIC - FUNCTIONS          07/01/82   R65 ASSEMBLER  PAGE 96

4365  3C42- A5 AA              LDA PC+1
4366  3C44- 48                 PHA
4367  3C45- A5 A9              LDA PC
4368  3C47- 48                 PHA
4369  3C48- 20 E5 27           JSR DATA        ADVANCE IN LINE
4370  3C4B- 4C C6 3C           JMP DEF2
4371                   *
4372  3C4E- A9 00      DEF1    LDA =0  MUST NOT BE DEFINED
4373  3C50- 85 CF              STA TEMP4+1
4374  3C52- A9 B2              LDA =$B2        CODE FOR FN
4375  3C54- 20 68 2B           JSR FOLLOW
4376  3C57- 09 80              ORA =$80
4377  3C59- 85 48              STA FLAG1
4378  3C5B- 20 7B 2B           JSR GETVAR+7
4379  3C5E- 85 84              STA TEMP6
4380  3C60- 84 85              STY TEMP6+1
4381  3C62- 4C DD 2D           JMP TESTTP      MUST BE NUMERIC
4382                   *
4383                   *
4384                   * FUNC: BASIC USER DEFINED FUNCTION
4385                   ***********************************
4386                   *
4387  3C65- 20 4E 3C   FUNC    JSR DEF1
4388  3C68- A5 85              LDA TEMP6+1     SAVE FUNCTION
4389  3C6A- 48                 PHA             VARIABLE NAME ON STACK
4390  3C6B- A5 84              LDA TEMP6
4391  3C6D- 48                 PHA
4392  3C6E- 20 75 2F           JSR ARGUM
4393  3C71- 20 DD 2D           JSR TESTTP      MUST BE NUMERIC
4394  3C74- 68                 PLA
4395  3C75- 85 84              STA TEMP6
4396  3C77- 68                 PLA
4397  3C78- 85 85              STA TEMP6+1
4398  3C7A- A0 02              LDY =2
4399  3C7C- B1 84              LDA (TEMP6),Y
4400  3C7E- D0 03              BNE *+5
4401  3C80- 4C 05 39           JMP UNDFN       UNDEFINED FUNCTION
4402  3C83- 85 7D              STA VARSTP
4403  3C85- AA                 TAX
4404  3C86- C8                 INY
4405  3C87- B1 84              LDA (TEMP6),Y
4406  3C89- 85 7E              STA VARSTP+1
4407  3C8B- C8                 INY
4408  3C8C- B1 7D              LDA (VARSTP),Y
4409  3C8E- 48                 PHA
4410  3C8F- 88                 DEY
4411  3C90- 10 FA              BPL *-4
4412  3C92- A4 7E              LDY VARSTP+1
4413  3C94- 20 C7 34           JSR SAVFLP+4
4414  3C97- A5 AA              LDA PC+1

----------------------------------------------------------------------

GRAPHIC BASIC - FUNCTIONS          07/01/82   R65 ASSEMBLER  PAGE 97

4415  3C99- 48                 PHA
4416  3C9A- A5 A9              LDA PC
4417  3C9C- 48                 PHA
4418  3C9D- B1 84              LDA (TEMP6),Y
4419  3C9F- 85 A9              STA PC
4420  3CA1- C8                 INY
4421  3CA2- B1 84              LDA (TEMP6),Y
4422  3CA4- 85 AA              STA PC+1
4423  3CA6- A5 7E              LDA VARSTP+1
4424  3CA8- 48                 PHA
4425  3CA9- A5 7D              LDA VARSTP
4426  3CAB- 48                 PHA
4427  3CAC- 20 EC 2D           JSR EXPRES
4428  3CAF- 20 DD 2D           JSR TESTTP
4429  3CB2- 68                 PLA
4430  3CB3- 85 84              STA TEMP6
4431  3CB5- 68                 PLA
4432  3CB6- 85 85              STA TEMP6+1
4433  3CB8- 20 06 27           JSR FETCH1
4434  3CBB- F0 03              BEQ *+5
4435  3CBD- 4C BD 26           JMP SYNERR
4436  3CC0- 68                 PLA
4437  3CC1- 85 A9              STA PC
4438  3CC3- 68                 PLA
4439  3CC4- 85 AA              STA PC+1
4440                   *
4441  3CC6- A0 00      DEF2    LDY =0
4442  3CC8- 68                 PLA
4443  3CC9- 91 84              STA (TEMP6),Y
4444  3CCB- 68                 PLA
4445  3CCC- C8                 INY
4446  3CCD- 91 84              STA (TEMP6),Y
4447  3CCF- 68                 PLA
4448  3CD0- C8                 INY
4449  3CD1- 91 84              STA (TEMP6),Y
4450  3CD3- 68                 PLA
4451  3CD4- C8                 INY
4452  3CD5- 91 84              STA (TEMP6),Y
4453  3CD7- 68                 PLA
4454  3CD8- C8                 INY
4455  3CD9- 91 84              STA (TEMP6),Y
4456  3CDB- 60                 RTS
4457                   *
4458                   * STR$: BASIC FUNCTION
4459                   **********************
4460                   *
4461  3CDC- 20 DD 2D   STR     JSR TESTTP      ARGUMENT NUMERIC
4462  3CDF- A0 00              LDY =0
4463  3CE1- 20 BF 49           JSR FORMOUT+2
4464  3CE4- 68                 PLA

----------------------------------------------------------------------

GRAPHIC BASIC - FUNCTIONS          07/01/82   R65 ASSEMBLER  PAGE 98

4465  3CE5- 68                 PLA
4466  3CE6- A9 FF              LDA =255
4467  3CE8- A0 00              LDY =0
4468  3CEA- 4C 9D 28           JMP STRSIZ
4469                   *
4470                   * CHR$: BASIC FUNCTION
4471                   **********************
4472                   *
4473  3CED- 20 F2 36   CHR     JSR NUMEXP+9
4474  3CF0- 8A                 TXA
4475  3CF1- 48                 PHA
4476  3CF2- A9 01              LDA =1
4477  3CF4- 20 AA 2D           JSR TSTRRM+8
4478  3CF7- 68                 PLA
4479  3CF8- A0 00              LDY =0
4480  3CFA- 91 98              STA (MANT),Y
4481  3CFC- 68                 PLA
4482  3CFD- 68                 PLA
4483  3CFE- 4C DC 28          JMP STRSI3
4484                   *
4485                   * LEFT$: BASIC FUNCTION
4486                   ***********************
4487                   *
4488  3D01- 20 62 3D   LEFT    JSR MID1
4489  3D04- D1 86              CMP (TEMP5),Y
4490  3D06- 98                 TYA
4491  3D07- 90 04              BCC *+6
4492  3D09- B1 86              LDA (TEMP5),Y
4493  3D0B- AA                 TAX
4494  3D0C- 98                 TYA
4495  3D0D- 48                 PHA
4496  3D0E- 8A         LEFT1   TXA
4497  3D0F- 48                 PHA
4498  3D10- 20 AA 2D           JSR TSTRRM+8
4499  3D13- A5 86              LDA TEMP5
4500  3D15- A4 87              LDY TEMP5+1
4501  3D17- 20 08 29           JSR PREPST+4
4502  3D1A- 68                 PLA
4503  3D1B- A8                 TAY
4504  3D1C- 68                 PLA
4505  3D1D- 18                 CLC
4506  3D1E- 65 58              ADC TEMP1
4507  3D20- 85 58              STA TEMP1
4508  3D22- 90 02              BCC *+4
4509  3D24- E6 59              INC TEMP1+1
4510  3D26- 98                 TYA
4511  3D27- 20 C6 2D           JSR INSST0+4
4512  3D2A- 4C DC 28           JMP STRSI3
4513                   *
4514                   * RIGHT$: BASIC FUNCTION

----------------------------------------------------------------------

GRAPHIC BASIC - FUNCTIONS          07/01/82   R65 ASSEMBLER  PAGE 99

4515                   ************************
4516                   *
4517  3D2D- 20 62 3D   RIGHT   JSR MID1
4518  3D30- 18                 CLC
4519  3D31- F1 86              SBC (TEMP5),Y
4520  3D33- 49 FF              EOR =$FF
4521  3D35- 4C 07 3D           JMP LEFT+6
4522                   *
4523                   * MID$ BASIC FUNCTION
4524                   *********************
4525                   *
4526  3D38- A9 FF      MID     LDA =$FF
4527  3D3A- 85 9B              STA MANT+3
4528  3D3C- 20 06 27           JSR FETCH1
4529  3D3F- C9 29              CMP =')'
4530  3D41- F0 08              BEQ *+10
4531  3D43- A9 2C              LDA =','
4532  3D45- 20 68 2B           JSR FOLLOW
4533  3D48- 20 EC 36           JSR NUMEXP+3
4534                   *
4535  3D4B- 20 62 3D           JSR MID1
4536  3D4E- CA                 DEX
4537  3D4F- 8A                 TXA
4538  3D50- 48                 PHA
4539  3D51- 18                 CLC
4540  3D52- A2 00              LDX =0
4541  3D54- F1 86              SBC (TEMP5),Y
4542  3D56- B0 B6              BCS LEFT1
4543  3D58- 49 FF              EOR =$FF
4544  3D5A- C5 9B              CMP MANT+3
4545  3D5C- 90 B1              BCC LEFT1+1
4546  3D5E- A5 9B              LDA MANT+3
4547  3D60- B0 AD              BCS LEFT1+1     ALLWAYS TAKEN
4548                   *
4549  3D62- 20 66 2B   MID1    JSR FOLLOW-2    ) MUST FOLLOW
4550  3D65- 68                 PLA
4551  3D66- 85 8B              STA PNT1
4552  3D68- 68                 PLA
4553  3D69- 85 8C              STA PNT1+1
4554  3D6B- 68                 PLA
4555  3D6C- 68                 PLA
4556  3D6D- 68                 PLA
4557  3D6E- AA                 TAX
4558  3D6F- 68                 PLA
4559  3D70- 85 86              STA TEMP5
4560  3D72- 68                 PLA
4561  3D73- 85 87              STA TEMP5+1
4562  3D75- A0 00              LDY =0
4563  3D77- 8A                 TXA
4564  3D78- D0 03              BNE *+5

----------------------------------------------------------------------

GRAPHIC BASIC - FUNCTIONS          07/01/82   R65 ASSEMBLER  PAGE 00

4565  3D7A- 4C FE 36   QERR1   JMP QERR
4566  3D7D- E6 8B              INC PNT1        PREPARE RETURN
4567  3D7F- D0 02              BNE *+4
4568  3D81- E6 8C              INC PNT1+1
4569  3D83- 6C 8B 00           JMP (PNT1)      SIMULATE RTS
4570                   *
4571                   * LEN:  BASIC FUNCTION
4572                   **********************
4573                   *
4574  3D86- 20 8E 3D   LEN     JSR LEN1
4575  3D89- A9 00              LDA =0
4576  3D8B- 4C D2 2F           JMP INTFLP
4577                   *
4578  3D8E- 38         LEN1    SEC
4579  3D8F- 20 DE 2D           JSR TESTTP+1    ARGUMENT STRING
4580  3D92- 20 04 29           JSR PREPST
4581  3D95- A2 00              LDX =0
4582  3D97- 86 45              STX RESTYP
4583  3D99- A8                 TAY
4584  3D9A- 60                 RTS
4585                   *
4586                   * ASC: BASIC FUNCTION
4587                   *********************
4588                   *
4589  3D9B- 20 8E 3D   ASC     JSR LEN1
4590  3D9E- F0 DA              BEQ QERR1       QUANTITY ERROR, IF 0
4591  3DA0- A0 00              LDY =0
4592  3DA2- B1 58              LDA (TEMP1),Y
4593  3DA4- A8                 TAY
4594  3DA5- 4C 89 3D           JMP LEN+3
4595                   *
4596                   * VAL: BASIC FUNCTION
4597                   *********************
4598                   *
4599  3DA8- 20 8E 3D   VAL     JSR LEN1
4600  3DAB- D0 03              BNE *+5
4601  3DAD- 4C B8 33           JMP ADD3-7      SET RESULT TO 0
4602  3DB0- A6 A9              LDX PC
4603  3DB2- A4 AA              LDY PC+1
4604  3DB4- 86 A7              STX DYADIC+8
4605  3DB6- 84 A8              STY DYADIC+9
4606  3DB8- A6 58              LDX TEMP1
4607  3DBA- 86 A9              STX PC
4608  3DBC- 18                 CLC
4609  3DBD- 65 58              ADC TEMP1
4610  3DBF- 85 5A              STA TEMP8
4611  3DC1- A6 59              LDX TEMP1+1
4612  3DC3- 86 AA              STX PC+1
4613  3DC5- 90 01              BCC *+3
4614  3DC7- E8                 INX

----------------------------------------------------------------------

GRAPHIC BASIC - FUNCTIONS          07/01/82   R65 ASSEMBLER  PAGE 01

4615  3DC8- 86 5B              STX TEMP8+1
4616  3DCA- A0 00              LDY =0
4617  3DCC- B1 5A              LDA (TEMP8),Y
4618  3DCE- 48                 PHA
4619  3DCF- A9 00              LDA =0
4620  3DD1- 91 5A              STA (TEMP8),Y
4621  3DD3- 20 06 27           JSR FETCH1
4622  3DD6- 20 8C 35           JSR NUMBER
4623  3DD9- 68                 PLA
4624  3DDA- A0 00              LDY =0
4625  3DDC- 91 5A              STA (TEMP8),Y   RESTORE END MARK
4626  3DDE- 4C 56 2F           JMP UPDPC
4627                   *
4628                   * PEEK: BASIC FUNCTION
4629                   **********************
4630                   *
4631  3DE1- 20 EE 3D   PEEK    JSR PEEK1
4632  3DE4- A0 00              LDY =0
4633  3DE6- B1 05              LDA (INTEG),Y
4634  3DE8- A8                 TAY
4635  3DE9- A9 00              LDA =0
4636  3DEB- 4C D2 2F           JMP INTFLP
4637                   *
4638  3DEE- A5 9C      PEEK1   LDA SIGN
4639  3DF0- 30 88              BMI QERR1
4640  3DF2- A5 97              LDA EXP
4641  3DF4- C9 91              CMP =$91
4642  3DF6- B0 82              BCS QERR1
4643  3DF8- 20 1A 37           JSR FLPIN1
4644  3DFB- A5 9B              LDA MANT+3
4645  3DFD- A4 9A              LDY MANT+2
4646  3DFF- 84 06             STY INTEG+1
4647  3E01- 85 05              STA INTEG
4648  3E03- 60                 RTS
4649                   *
4650                   * POKE: STATEMENT ROUTINE
4651                   *************************
4652                   *
4653  3E04- 20 0D 3E   POKE    JSR POKE1
4654  3E07- 8A                 TXA
4655  3E08- A0 00              LDY =0
4656  3E0A- 91 05              STA (INTEG),Y
4657  3E0C- 60                 RTS
4658                   *
4659  3E0D- 20 EC 2D   POKE1   JSR EXPRES
4660  3E10- 20 DD 2D           JSR TESTTP
4661  3E13- 20 EE 3D           JSR PEEK1
4662  3E16- A9 2C              LDA =','
4663  3E18- 20 68 2B           JSR FOLLOW
4664  3E1B- 4C EC 36           JMP NUMEXP+3

----------------------------------------------------------------------

GRAPHIC BASIC - FUNCTIONS          07/01/82   R65 ASSEMBLER  PAGE 02

4665                   *
4666                   * ABS: BASIC FUNCTION
4667                   *********************
4668                   *
4669  3E1E- 46 9C      ABS     LSR SIGN
4670  3E20- 60                 RTS
4671                   *
4672                   * INT: BASIC FUNCTION
4673                   *********************
4674                   *
4675  3E21- A5 97      INT     LDA EXP
4676  3E23- C9 A0              CMP =$A0
4677  3E25- B0 F9              BCS *-5         RTS, IF >1E9
4678  3E27- 20 1A 37           JSR FLPIN1
4679  3E2A- 84 A6              STY DYADIC+7
4680  3E2C- A5 9C              LDA SIGN
4681  3E2E- 84 9C              STY SIGN
4682  3E30- 49 80              EOR =$80
4683  3E32- 2A                 ROL A
4684  3E33- A9 A0              LDA =$A0
4685  3E35- 85 97              STA EXP
4686  3E37- A5 9B              LDA MANT+3
4687  3E39- 85 41              STA CHRSAV
4688  3E3B- 4C 93 33           JMP NORMAL
4689                   *
4690                   * SYS: STATEMENT ROUTINE
4691                   ************************
4692                   *
4693  3E3E- 20 EC 2D   SYS     JSR EXPRES
4694  3E41- 20 DD 2D           JSR TESTTP
4695  3E44- 20 EE 3D           JSR PEEK1
4696  3E47- 6C 05 00           JMP (INTEG)
4697                   *
4698                   * LOG: BASIC FUNCTION
4699                   *********************
4700                   *
4701  3E4A- 20 1E 35   LOG     JSR SGN1
4702  3E4D- F0 02              BEQ *+4
4703  3E4F- 10 03              BPL *+5
4704  3E51- 4C FE 36           JMP QERR        QUANTITY ERROR
4705  3E54- A5 97              LDA EXP
4706  3E56- E9 7F              SBC =127
4707  3E58- 48                 PHA
4708  3E59- A9 80              LDA =128
4709  3E5B- 85 97              STA EXP
4710  3E5D- A9 A5              LDA =<LOG2
4711  3E5F- A0 3E              LDY =>LOG2
4712  3E61- 20 27 33           JSR ADD-3
4713  3E64- A9 AA              LDA =<(LOG2+5)
4714  3E66- A0 3E              LDY =>(LOG2+5)

----------------------------------------------------------------------

GRAPHIC BASIC - FUNCTIONS          07/01/82   R65 ASSEMBLER  PAGE 03

4715  3E68- 20 BD 37           JSR DIVIDE-3
4716  3E6B- A9 8B              LDA =<LOG1
4717  3E6D- A0 3E              LDY =>LOG1
4718  3E6F- 20 09 33           JSR SUBTR-3
4719  3E72- A9 90              LDA =<(LOG1+5)
4720  3E74- A0 3E              LDY =>(LOG1+5)
4721  3E76- 20 53 3F           JSR ITERAT
4722  3E79- A9 AF              LDA =<(LOG2+10)
4723  3E7B- A0 3E              LDY =>(LOG2+10)
4724  3E7D- 20 27 33           JSR ADD-3
4725  3E80- 68                 PLA
4726  3E81- 20 29 36           JSR NUMB6
4727  3E84- A9 B4              LDA =<(LOG2+15)
4728  3E86- A0 3E              LDY =>(LOG2+15)
4729  3E88- 4C 78 38           JMP MULT-3
4730                   *
4731  3E8B- 81 00 00   LOG1    BYT $81,0,0,0,0
4731  3E8E- 00 00 
4732  3E90- 03                 BYT 3
4733  3E91- 7F 5E 56           BYT $7F,$5E,$56,$CB,$79
4733  3E94- CB 79 
4734  3E96- 80 13 9B           BYT $80,$13,$9B,$0B,$64
4734  3E99- 0B 64 
4735  3E9B- 80 76 38           BYT $80,$76,$38,$93,$16
4735  3E9E- 93 16 
4736  3EA0- 82 38 AA           BYT $82,$38,$AA,$3B,$20
4736  3EA3- 3B 20 
4737  3EA5- 80 35 04   LOG2    BYT $80,$35,$04,$F3,$34
4737  3EA8- F3 34 
4738  3EAA- 81 35 04           BYT $81,$35,$04,$F3,$34
4738  3EAD- F3 34 
4739  3EAF- 80 80 00           BYT $80,$80,$00,$00,$00
4739  3EB2- 00 00 
4740  3EB4- 80 31 72           BYT $80,$31,$72,$17,$F8
4740  3EB7- 17 F8 
4741                   *
4742                   * SQR: BASIC FUNCTION
4743                   *********************
4744                   *
4745  3EB9- 20 0F 35   SQR     JSR TRANS2
4746  3EBC- A9 6D              LDA =<OUTCT2    0.5
4747  3EBE- A0 36              LDY =>OUTCT2
4748  3EC0- 20 9E 34           JSR GETFLP
4749                   *
4750                   * POWER: MATH OPERATION
4751                   ***********************
4752                   *
4753  3EC3- F0 3B      POWER   BEQ EXPF
4754  3EC5- A5 9F              LDA DYADIC
4755  3EC7- D0 03              BNE *+5

----------------------------------------------------------------------

GRAPHIC BASIC - FUNCTIONS          07/01/82   R65 ASSEMBLER  PAGE 04

4756  3EC9- 4C BA 33           JMP ADD3-5
4757  3ECC- A2 84              LDX =<TEMP6
4758  3ECE- A0 00              LDY =>TEMP6
4759  3ED0- 20 C7 34           JSR SAVFLP+4
4760  3ED3- A5 A4              LDA DYADIC+5
4761  3ED5- 10 0F              BPL *+17
4762  3ED7- 20 21 3E           JSR INT
4763  3EDA- A9 84              LDA =<TEMP6
4764  3EDC- A0 00              LDY =>TEMP6
4765  3EDE- 20 4B 35           JSR COMPAR
4766  3EE1- D0 03              BNE *+5
4767  3EE3- 98                 TYA
4768  3EE4- A4 41              LDY CHRSAV
4769  3EE6- 20 01 35           JSR TRANS1+2
4770  3EE9- 98                 TYA
4771  3EEA- 48                 PHA
4772  3EEB- 20 4A 3E           JSR LOG
4773  3EEE- A9 84              LDA =<TEMP6
4774  3EF0- A0 00              LDY =>TEMP6
4775  3EF2- 20 78 38           JSR MULT-3
4776  3EF5- 20 00 3F           JSR EXPF
4777  3EF8- 68                 PLA
4778  3EF9- 4A                 LSR A
4779  3EFA- B0 01              BCS *+3
4780  3EFC- 60                 RTS
4781  3EFD- 4C AE 36          JMP NEGATE
4782                   *
4783                   * EXP: BASIC FUNCTION
4784                   *********************
4785                   *
4786  3F00- A9 A5      EXPF    LDA =<EXP1
4787  3F02- A0 3F              LDY =>EXP1
4788  3F04- 20 78 38           JSR MULT-3
4789  3F07- A5 A6              LDA DYADIC+7
4790  3F09- 69 50              ADC =80
4791  3F0B- 90 03              BCC *+5
4792  3F0D- 20 F7 34           JSR ROUND+8
4793  3F10- 85 8C              STA PNT1+1
4794  3F12- 20 12 35           JSR TRANS2+3
4795  3F15- A5 97              LDA EXP
4796  3F17- C9 88              CMP =136
4797  3F19- 90 03              BCC *+5
4798  3F1B- 20 69 38           JSR MULEX1-6
4799  3F1E- 20 21 3E           JSR INT
4800  3F21- A5 41              LDA CHRSAV
4801  3F23- 18                 CLC
4802  3F24- 69 81              ADC =129
4803  3F26- F0 F3              BEQ *-11
4804  3F28- 38                 SEC
4805  3F29- E9 01              SBC =1

----------------------------------------------------------------------

GRAPHIC BASIC - FUNCTIONS          07/01/82   R65 ASSEMBLER  PAGE 05

4806  3F2B- 48                 PHA
4807  3F2C- A2 05              LDX =5
4808  3F2E- B5 9F              LDA DYADIC,X
4809  3F30- B4 97              LDY EXP,X
4810  3F32- 95 97              STA EXP,X
4811  3F34- 94 9F              STY DYADIC,X
4812  3F36- CA                 DEX
4813  3F37- 10 F5              BPL *-9
4814  3F39- A5 8C              LDA PNT1+1
4815  3F3B- 85 A6              STA DYADIC+7
4816  3F3D- 20 0C 33           JSR SUBTR
4817  3F40- 20 AE 36           JSR NEGATE
4818  3F43- A9 AA              LDA =<(EXP1+5)
4819  3F45- A0 3F              LDY =>(EXP1+5)
4820  3F47- 20 6D 3F           JSR ITERA1
4821  3F4A- A9 00              LDA =0
4822  3F4C- 85 A5              STA DYADIC+6
4823  3F4E- 68                 PLA
4824  3F4F- 20 4D 38           JSR MULEXP+2
4825  3F52- 60                 RTS
4826                   *
4827                   * ITERAT: FUNCTION ITERATION
4828                   ****************************
4829                   *
4830  3F53- 85 A7      ITERAT  STA DYADIC+8
4831  3F55- 84 A8              STY DYADIC+9
4832  3F57- A2 8D              LDX =<(ENDB-1)
4833  3F59- A0 00              LDY =0
4834  3F5B- 20 C7 34           JSR SAVFLP+4
4835  3F5E- A9 8D              LDA =<(ENDB-1)
4836  3F60- 20 78 38           JSR MULT-3
4837  3F63- 20 71 3F           JSR ITERA1+4
4838  3F66- A9 8D              LDA =<(ENDB-1)
4839  3F68- A0 00              LDY =0
4840  3F6A- 4C 78 38           JMP MULT-3
4841                   *
4842  3F6D- 85 A7      ITERA1  STA DYADIC+8
4843  3F6F- 84 A8              STY DYADIC+9
4844  3F71- A2 92              LDX =<(POINTC-1)
4845  3F73- A0 00              LDY =0
4846  3F75- 20 C7 34           JSR SAVFLP+4
4847  3F78- B1 A7              LDA (DYADIC+8),Y
4848  3F7A- 85 9D              STA CURRSG
4849  3F7C- A4 A7              LDY DYADIC+8
4850  3F7E- C8                 INY
4851  3F7F- 98                 TYA
4852  3F80- D0 02              BNE *+4
4853  3F82- E6 A8              INC DYADIC+9
4854  3F84- 85 A7              STA DYADIC+8
4855  3F86- A4 A8              LDY DYADIC+9

----------------------------------------------------------------------

GRAPHIC BASIC - FUNCTIONS          07/01/82   R65 ASSEMBLER  PAGE 06

4856  3F88- 20 78 38   ITERA2  JSR MULT-3
4857  3F8B- A5 A7              LDA DYADIC+8
4858  3F8D- A4 A8              LDY DYADIC+9
4859  3F8F- 18                 CLC
4860  3F90- 69 05              ADC =5
4861  3F92- 90 01              BCC *+3
4862  3F94- C8                 INY
4863  3F95- 85 A7              STA DYADIC+8
4864  3F97- 84 A8              STY DYADIC+9
4865  3F99- 20 27 33           JSR ADD-3
4866  3F9C- A9 92              LDA =(POINTC-1)
4867  3F9E- A0 00              LDY =0
4868  3FA0- C6 9D              DEC CURRSG
4869  3FA2- D0 E4              BNE ITERA2
4870  3FA4- 60                 RTS
4871                   *
4872  3FA5- 81 38 AA   EXP1    BYT $81,$38,$AA,$3B,$29
4872  3FA8- 3B 29 
4873  3FAA- 07                 BYT $07
4874  3FAB- 71 34 58           BYT $71,$34,$58,$3F,$56
4874  3FAE- 3F 56 
4875  3FB0- 74 16 7E           BYT $74,$16,$7E,$B3,$1B
4875  3FB3- B3 1B 
4876  3FB5- 77 2F EE           BYT $77,$2F,$EE,$E3,$85
4876  3FB8- E3 85 
4877  3FBA- 7A 1D 84           BYT $7A,$1D,$84,$1C,$2A
4877  3FBD- 1C 2A 
4878  3FBF- 7C 63 59           BYT $7C,$63,$59,$58,$0A
4878  3FC2- 58 0A 
4879  3FC4- 7E 75 FD           BYT $7E,$75,$FD,$E7,$C6
4879  3FC7- E7 C6 
4880  3FC9- 80 31 72           BYT $80,$31,$72,$18,$10
4880  3FCC- 18 10 
4881  3FCE- 81 00 00           BYT $81,$00,$00,$00,$00
4881  3FD1- 00 00 
4882                   *
4883                   * RND: BASIC FUNCTION
4884                   *********************
4885                   *
4886  3FD3- 20 1E 35   RND     JSR SGN1
4887  3FD6- 30 17              BMI RND2
4888  3FD8- F0 41              BEQ RND1
4889                   *
4890  3FDA- A9 D1              LDA =<RNDVAL
4891  3FDC- A0 00              LDY =>RNDVAL
4892  3FDE- 20 78 38           JSR MULT-3
4893  3FE1- A9 22              LDA =<RND3
4894  3FE3- A0 40              LDY =>RND3
4895  3FE5- 20 78 38           JSR MULT-3
4896  3FE8- A9 26              LDA =<(RND3+4)

----------------------------------------------------------------------

GRAPHIC BASIC - FUNCTIONS          07/01/82   R65 ASSEMBLER  PAGE 07

4897  3FEA- A0 40              LDY =>(RND3+4)
4898  3FEC- 20 27 33           JSR ADD-3
4899  3FEF- A5 9B      RND2    LDA MANT+3
4900  3FF1- A6 98              LDX MANT
4901  3FF3- 6D 06 17           ADC $1706       ADD REAL RANDOM
4902  3FF6- 86 9B              STX MANT+3
4903  3FF8- 85 98              STA MANT
4904  3FFA- A6 99              LDX MANT+1
4905  3FFC- A5 9A              LDA MANT+2
4906  3FFE- 6D 06 17          ADC $1706       ADD REAL RANDOOM
4907  4001- 85 99              STA MANT+1
4908  4003- 86 9A              STX MANT+2
4909  4005- A9 00              LDA =0
4910  4007- 85 9C              STA SIGN
4911  4009- A5 97              LDA EXP
4912  400B- 85 A6              STA DYADIC+7
4913  400D- A9 80              LDA =128
4914  400F- 85 97              STA EXP
4915  4011- 20 98 33           JSR NORMAL+5
4916  4014- A2 D1              LDX =<RNDVAL
4917  4016- A0 00              LDY =>RNDVAL
4918  4018- 4C C7 34           JMP SAVFLP+4
4919                   *
4920  401B- A9 D1      RND1    LDA =<RNDVAL
4921  401D- A0 00              LDY =>RNDVAL
4922  401F- 4C 9E 34           JMP GETFLP
4923                   *
4924  4022- 98 35 44   RND3    BYT $98,$35,$44,$7A
4924  4025- 7A 
4925  4026- 68 28 B1           BYT $68,$28,$B1,$46
4925  4029- 46 
4926                   *
4927                   * COS: BASIC FUNCTION
4928                   *********************
4929                   *
4930  402A- A9 7E      COS     LDA =<SIN1
4931  402C- A0 40              LDY =>SIN1
4932  402E- 20 27 33           JSR ADD-3
4933                   *
4934                   * SIN: BASIC FUNCTION
4935                   *********************
4936                   *
4937  4031- 20 0F 35   SIN     JSR TRANS2
4938  4034- A9 83              LDA =<(SIN1+5)
4939  4036- A0 40              LDY =>(SIN1+5)
4940  4038- A6 A4              LDX DYADIC+5
4941  403A- 20 E1 36           JSR DIVTEN+9
4942  403D- 20 0F 35           JSR TRANS2
4943  4040- 20 21 3E           JSR INT
4944  4043- A9 00              LDA =0

----------------------------------------------------------------------

GRAPHIC BASIC - FUNCTIONS          07/01/82   R65 ASSEMBLER  PAGE 08

4945  4045- 85 A5              STA DYADIC+6
4946  4047- 20 0C 33           JSR SUBTR
4947  404A- A9 88              LDA =<(SIN1+10)
4948  404C- A0 40              LDY =>(SIN1+10)
4949  404E- 20 09 33           JSR SUBTR-3
4950  4051- A5 9C              LDA SIGN
4951  4053- 48                 PHA
4952  4054- 10 11              BPL SIN0
4953  4056- A9 6D              LDA =<OUTCT2
4954  4058- A0 36              LDY =>OUTCT2
4955  405A- 20 27 33           JSR ADD-3
4956  405D- A5 9C              LDA SIGN
4957  405F- 30 09              BMI SIN0+3
4958  4061- A5 4A              LDA READFL+1
4959  4063- 49 FF              EOR =$FF
4960  4065- 85 4A              STA READFL+1
4961  4067- 20 AE 36   SIN0    JSR NEGATE
4962  406A- A9 88              LDA =<(SIN1+10)
4963  406C- A0 40              LDY =>(SIN1+10)
4964  406E- 20 27 33           JSR ADD-3
4965  4071- 68                 PLA
4966  4072- 10 03              BPL *+5
4967  4074- 20 AE 36           JSR NEGATE
4968  4077- A9 8D              LDA =<(SIN1+15)
4969  4079- A0 40              LDY =>(SIN1+15)
4970  407B- 4C 53 3F           JMP ITERAT
4971                   *
4972  407E- 81 49 0F   SIN1    BYT $81,$49,$0F,$DA,$A2
4972  4081- DA A2 
4973  4083- 83 49 0F           BYT $83,$49,$0F,$DA,$A2
4973  4086- DA A2 
4974  4088- 7F 00 00           BYT $7F,$00,$00,$00,$00
4974  408B- 00 00 
4975  408D- 05                 BYT 05
4976  408E- 84 E6 1A           BYT $84,$E6,$1A,$2D,$1B
4976  4091- 2D 1B 
4977  4093- 86 28 07           BYT $86,$28,$07,$FB,$F8
4977  4096- FB F8 
4978  4098- 87 99 68           BYT $87,$99,$68,$89,$01
4978  409B- 89 01 
4979  409D- 87 23 35           BYT $87,$23,$35,$DF,$E1
4979  40A0- DF E1 
4980  40A2- 86 A5 5D           BYT $86,$A5,$5D,$E7,$28
4980  40A5- E7 28 
4981  40A7- 83 49 0F           BYT $83,$49,$0F,$DA,$A2
4981  40AA- DA A2 
4982                   *
4983                   * TAN: BASIC FUNCTION
4984                   *********************
4985                   *

----------------------------------------------------------------------

GRAPHIC BASIC - FUNCTIONS          07/01/82   R65 ASSEMBLER  PAGE 09

4986  40AC- A2 8D      TAN     LDX =<(ENDB-1)
4987  40AE- A0 00              LDY =0
4988  40B0- 20 C7 34           JSR SAVFLP+4
4989  40B3- A9 00              LDA =0
4990  40B5- 85 4A              STA READFL+1
4991  40B7- 20 31 40           JSR SIN
4992  40BA- A2 84              LDX =<TEMP6
4993  40BC- A0 00              LDY =0
4994  40BE- 20 C7 34           JSR SAVFLP+4
4995  40C1- A9 8D              LDA =<(ENDB-1)
4996  40C3- A0 00              LDY =0
4997  40C5- 20 9E 34           JSR GETFLP
4998  40C8- A9 00              LDA =0
4999  40CA- 85 9C              STA SIGN
5000  40CC- A5 4A              LDA READFL+1
5001                    * BASIC6:A ORIGINAL 7/1/1982, RECOVERED 3/2018
5002  40CE- 20 D8 40           JSR TAN1
5003  40D1- A9 84              LDA =<TEMP6
5004  40D3- A0 00              LDY =0
5005  40D5- 4C BD 37           JMP DIVIDE-3
5006  40D8- 48         TAN1    PHA
5007  40D9- 4C 67 40           JMP SIN0
5008                   *
5009                   * ATN: BASIC FUNCTION
5010                   *********************
5011                   *
5012  40DC- A5 9C      ATN     LDA SIGN
5013  40DE- 48                 PHA
5014  40DF- 10 03              BPL *+5
5015  40E1- 20 AE 36           JSR NEGATE
5016  40E4- A5 97              LDA EXP
5017  40E6- 48                 PHA
5018  40E7- C9 81              CMP =$81
5019  40E9- 90 07              BCC *+9
5020  40EB- A9 8B              LDA =<LOG1
5021  40ED- A0 3E              LDY =>LOG1
5022  40EF- 20 BD 37           JSR DIVIDE-3
5023  40F2- A9 0C              LDA =<ATN1
5024  40F4- A0 41              LDY =>ATN1
5025  40F6- 20 53 3F           JSR ITERAT
5026  40F9- 68                 PLA
5027  40FA- C9 81              CMP =129
5028  40FC- 90 07              BCC *+9
5029  40FE- A9 7E             LDA =<SIN1
5030  4100- A0 40              LDY =>SIN1
5031  4102- 20 09 33           JSR SUBTR-3
5032  4105- 68                 PLA
5033  4106- 10 03              BPL *+5
5034  4108- 4C AE 36           JMP NEGATE
5035  410B- 60                 RTS

----------------------------------------------------------------------

GRAPHIC BASIC - FUNCTIONS          07/01/82   R65 ASSEMBLER  PAGE 10

5036                   *
5037  410C- 0B         ATN1    BYT $0B
5038  410D- 76 B3 83           BYT $76,$B3,$83,$BD,$D3
5038  4110- BD D3 
5039  4112- 79 E1 F4           BYT $79,$E1,$F4,$A6,$F5
5039  4115- A6 F5 
5040  4117- 7B 83 FC           BYT $7B,$83,$FC,$B0,$10
5040  411A- B0 10 
5041  411C- 7C 0C 1F           BYT $7C,$0C,$1F,$67,$CA
5041  411F- 67 CA 
5042  4121- 7C DE 53           BYT $7C,$DE,$53,$CB,$C1
5042  4124- CB C1 
5043  4126- 7D 14 64           BYT $7D,$14,$64,$70,$4C
5043  4129- 70 4C 
5044  412B- 7D B7 EA           BYT $7D,$B7,$EA,$51,$7A
5044  412E- 51 7A 
5045  4130- 7D 63 30           BYT $7D,$63,$30,$88,$7E
5045  4133- 88 7E 
5046  4135- 7E 92 44           BYT $7E,$92,$44,$99,$3A
5046  4138- 99 3A 
5047  413A- 7E 4C CC           BYT $7E,$4C,$CC,$91,$C7
5047  413D- 91 C7 
5048  413F- 7F AA AA           BYT $7F,$AA,$AA,$AA,$13
5048  4142- AA 13 
5049  4144- 81 00 00           BYT $81,$00,$00,$00,$00
5049  4147- 00 00 
5050                   *
5051                   * USR: BASIC FUNCTION
5052                   *********************
5053                   *
5054  4149- 6C 05 00   USR     JMP (INTEG)
5055                   *
5056                           TIT GRAPHIC BASIC - STATEMENTS
5057                   *
5058                   * STORE: STATEMENT ROUTINE
5059                   **************************
5060                   *
5061  414C- 20 83 41   STORE   JSR GETBFN      GET FILE NAME, DRIVE
5062  414F- A5 61              LDA STPROG
5063  4151- A6 62              LDX STPROG+1
5064  4153- 8D 1A 03           STA FILSA
5065  4156- 8E 1B 03           STX FILSA+1
5066  4159- A5 63              LDA STVAR
5067  415B- A6 64              LDX STVAR+1
5068  415D- 8D 1C 03           STA FILEA
5069  4160- 8E 1D 03           STX FILEA+1
5070  4163- 20 54 47           JSR GETBCD
5071  4166- 8D 13 03           STA FILLOC
5072  4169- 8C 14 03           STY FILLOC+1
5073  416C- A9 42              LDA ='B'

----------------------------------------------------------------------

GRAPHIC BASIC - STATEMENTS         07/01/82   R65 ASSEMBLER  PAGE 11

5074  416E- 8D 12 03           STA FILSTP
5075  4171- A9 00              LDA =0
5076  4173- 85 DA              STA FILFLG
5077  4175- 20 06 27           JSR FETCH1
5078  4178- D0 4E              BNE SYNER2      NOT END OF LINE
5079  417A- 20 1B E8           JSR WRFILE
5080  417D- F0 03              BEQ *+5
5081  417F- 4C 43 45   FILERR1 JMP FILERR
5082  4182- 60                 RTS
5083                   *
5084  4183- 20 06 27   GETBFN  JSR FETCH1
5085  4186- F0 40              BEQ SYNER2      END OF LINE
5086  4188- 20 EC 2D   GETBF1  JSR EXPRES
5087  418B- 38                 SEC
5088  418C- 20 DE 2D           JSR TESTTP+1    MUST BE STRING
5089  418F- 20 04 29           JSR PREPST      A=SIZE, TEMP1=START
5090                   *
5091  4192- 85 7F              STA TEMP3
5092  4194- A8                 TAY
5093  4195- F0 40              BEQ GETBF5
5094  4197- A0 00              LDY =0
5095  4199- 8C 11 03           STY FILCYC
5096  419C- 8C 30 03           STY FILCY1
5097  419F- B1 58      GETBF2  LDA (TEMP1),Y
5098  41A1- C4 7F              CPY TEMP3
5099  41A3- 90 02              BCC *+4         IF STRING TOO SHORT
5100  41A5- A9 20              LDA =$20
5101  41A7- 99 01 03           STA FILNAM,Y
5102  41AA- 99 20 03           STA FILNM1,Y
5103  41AD- C8                 INY
5104  41AE- C0 10              CPY =$10
5105  41B0- 90 ED              BCC GETBF2
5106  41B2- 20 06 27           JSR FETCH1
5107  41B5- C9 2E              CMP ='.'
5108  41B7- D0 09              BNE GETBF3
5109  41B9- 20 E9 36           JSR NUMEXP      GET EXTENSION
5110  41BC- 8E 11 03           STX FILCYC
5111  41BF- 8E 30 03           STX FILCY1
5112  41C2- 20 4A 42   GETBF3  JSR DEFARG2
5113  41C5- 85 DC              STA FILDRV
5114  41C7- 60                 RTS
5115                   *
5116  41C8- 4C BD 26   SYNER2  JMP SYNERR      SYNTAX ERROR
5117                   *
5118  41CB- 20 06 27   GETBF4  JSR FETCH1      DEFAULT NO NAME
5119  41CE- F0 07              BEQ GETBF5
5120  41D0- C9 2C              CMP =','
5121  41D2- F0 03              BEQ GETBF5
5122  41D4- 4C 88 41           JMP GETBF1
5123                   *

----------------------------------------------------------------------

GRAPHIC BASIC - STATEMENTS         07/01/82   R65 ASSEMBLER  PAGE 12

5124  41D7- A9 00      GETBF5  LDA =0
5125  41D9- 8D 01 03           STA FILNAM
5126  41DC- 8D 20 03           STA FILNM1
5127  41DF- 4C C2 41           JMP GETBF3
5128                   *
5129                   * LOAD: STATEMENT ROUTINE
5130                   *************************
5131                   *
5132  41E2- 20 E8 41   LOAD    JSR LOAD9
5133  41E5- 4C 7B 23           JMP WARMST
5134                   *
5135  41E8- 20 CB 41   LOAD9   JSR GETBF4
5136                   *
5137  41EB- A5 61      LOAD1   LDA STPROG
5138  41ED- A6 62              LDX STPROG+1
5139  41EF- 8D 31 03           STA FILSA1
5140  41F2- 8E 32 03           STX FILSA1+1
5141  41F5- A9 00              LDA =0
5142  41F7- 85 DA              STA FILFLG
5143  41F9- 20 15 E8           JSR RDFILE
5144  41FC- D0 81              BNE FILERR1
5145  41FE- AD 12 03          LDA FILSTP
5146  4201- C9 42              CMP ='B'
5147  4203- F0 05              BEQ *+7
5148  4205- A2 1D              LDX =29
5149  4207- 4C 52 45           JMP FERROR
5150  420A- AD 1C 03           LDA FILEA
5151  420D- AE 1D 03           LDX FILEA+1
5152  4210- 85 63              STA STVAR
5153  4212- 86 64              STX STVAR+1
5154  4214- 20 8E 24           JSR CRLF
5155  4217- 20 3C 24           JSR ADLNP0
5156  421A- A5 58              LDA TEMP1
5157  421C- A6 59              LDX TEMP1+1
5158  421E- 18                 CLC
5159  421F- 69 03              ADC =3
5160  4221- 90 01              BCC *+3
5161  4223- E8                 INX
5162  4224- 85 63              STA STVAR
5163  4226- 86 64              STX STVAR+1
5164  4228- 4C 99 25           JMP CLR1-3
5165                   *
5166                   * DEFARG: GET ARGUMENT OR DEFAULT=0
5167                   ***********************************
5168                   * OUTPUT IS IN A,Y AND INTEG
5169                   * DEFARG GETS 16 BIT INTEGER
5170                   * DEFARG2 GETS 8 BIT INTEGER
5171                   *
5172  422B- 20 06 27   DEFARG  JSR FETCH1
5173  422E- C9 2C              CMP =','

----------------------------------------------------------------------

GRAPHIC BASIC - STATEMENTS         07/01/82   R65 ASSEMBLER  PAGE 13

5174  4230- D0 10              BNE DEFARG1
5175  4232- 20 00 27           JSR FETCH
5176  4235- C9 2C              CMP =','
5177  4237- F0 09              BEQ DEFARG1
5178  4239- 20 EC 2D           JSR EXPRES
5179  423C- 20 DD 2D           JSR TESTTP
5180  423F- 4C EE 3D           JMP PEEK1
5181                   *
5182  4242- A9 00      DEFARG1 LDA =0
5183  4244- A8                 TAY
5184  4245- 85 05              STA INTEG
5185  4247- 84 06              STY INTEG+1
5186  4249- 60                 RTS
5187                   *
5188  424A- 20 2B 42   DEFARG2 JSR DEFARG
5189  424D- C0 00              CPY =0
5190  424F- F0 03              BEQ *+5
5191  4251- 4C FE 36           JMP QERR
5192  4254- 60                 RTS
5193                   *
5194                   *
5195                   * SETDEV: SET OUTPUT DEVICE
5196                   ***************************
5197                   *
5198  4255- 20 E9 36   SETDEV  JSR NUMEXP
5199  4258- E0 03              CPX =3
5200  425A- D0 06              BNE SETDV0
5201  425C- 20 A0 43           JSR PLMD
5202  425F- A2 03              LDX =3
5203  4261- 18                 CLC
5204  4262- B0 1F      SETDV0  BCS SETDV2
5205  4264- A9 3B              LDA =';'
5206  4266- 20 68 2B           JSR FOLLOW
5207  4269- A5 02              LDA POS
5208  426B- 85 BB              STA POSTB
5209  426D- BD B5 42   SETDV1  LDA DEVTB,X
5210  4270- 85 B9              STA PVECT
5211  4272- BD B9 42           LDA DEVTB+4,X
5212  4275- 85 BA              STA PVECT+1
5213  4277- 86 00              STX OUTDEV
5214  4279- BD BD 42           LDA DEVTB+8,X
5215  427C- 85 01              STA NUMPAD
5216  427E- B5 BB              LDA POSTB,X
5217  4280- 85 02              STA POS
5218  4282- 60                 RTS
5219                   *
5220                   * SET FILE OUTPUT
5221                   *****************
5222                   *
5223  4283- 86 00      SETDV2  STX OUTDEV

----------------------------------------------------------------------

GRAPHIC BASIC - STATEMENTS         07/01/82   R65 ASSEMBLER  PAGE 14

5224  4285- A9 3B              LDA =';'
5225  4287- 20 68 2B           JSR FOLLOW
5226  428A- A5 02              LDA POS
5227  428C- 85 BB              STA POSTB
5228  428E- A9 C3              LDA =<OUTFIL
5229  4290- 85 B9              STA PVECT
5230  4292- A9 45              LDA =>OUTFIL
5231  4294- 85 BA              STA PVECT+1
5232  4296- A9 00              LDA =0
5233  4298- 85 01              STA NUMPAD
5234  429A- 85 02              STA POS
5235  429C- 4C BA 45           JMP SETDV3
5236                   *
5237                   * RSTDEV: RESET OUTPUT DEVICE
5238                   *****************************
5239                   *
5240  429F- 8A         RSTDEV  TXA
5241  42A0- 48                 PHA
5242  42A1- A6 00              LDX OUTDEV
5243  42A3- E0 04              CPX =4          SKIP, IF FILE
5244  42A5- B0 04              BCS *+6
5245  42A7- A5 02              LDA POS
5246  42A9- 95 BB              STA POSTB,X
5247  42AB- A2 00              LDX =0
5248  42AD- 86 AB              STX PLMODE
5249  42AF- 20 6D 42           JSR SETDV1
5250  42B2- 68                 PLA
5251  42B3- AA                 TAX
5252  42B4- 60                 RTS
5253                   *
5254                   *
5255  42B5- 09 36 A0   DEVTB   BYT <PRTCHR,<PRTRSA,<PRTTTY,<CHAR
5255  42B8- B4 
5256  42B9- E0 E8 1E           BYT >PRTCHR,>PRTRSA,>PRTTTY,>CHAR
5256  42BC- 43 
5257  42BD- 00 00 02           BYT 0,0,2,0
5257  42C0- 00 
5258                   *
5259                   * PLOT
5260                   ******
5261                   *
5262  42C1- C9 A2      PLOT    CMP =$A2        PLOT NEW
5263  42C3- D0 0A              BNE PLOT0
5264  42C5- A9 00              LDA =0
5265  42C7- 85 AB              STA PLMODE
5266  42C9- 20 0F 4D           JSR INITP
5267  42CC- 4C 00 43           JMP PLOT3+4
5268                   *
5269  42CF- C9 9C      PLOT0   CMP =$9C        PLOT CLEAR
5270  42D1- D0 06              BNE PLOT1

----------------------------------------------------------------------

GRAPHIC BASIC - STATEMENTS         07/01/82   R65 ASSEMBLER  PAGE 15

5271  42D3- 20 1A 4D           JSR CLEARP
5272  42D6- 4C 00 27           JMP FETCH
5273                   *
5274  42D9- C9 84      PLOT1   CMP =$84        PLOT END
5275  42DB- D0 18              BNE PLOT2
5276  42DD- AD 80 17           LDA VFLAG
5277  42E0- 29 DF              AND =$DF
5278  42E2- 8D 80 17           STA VFLAG
5279  42E5- A9 29              LDA =$29
5280  42E7- 8D 89 17           STA NUMLIN
5281  42EA- 20 15 E0           JSR ICRTAL
5282  42ED- A9 11              LDA =$11        CLEAR DISPLAY
5283  42EF- 20 09 E0           JSR PRTCHR
5284  42F2- 4C 00 27           JMP FETCH
5285                   *
5286  42F5- C9 90      PLOT2   CMP =$90        PLOT STOP
5287  42F7- D0 03              BNE PLOT3
5288  42F9- 4C EA 42           JMP PLOT2-11
5289                   *
5290  42FC- C9 9A      PLOT3   CMP =$9A        PLOT CONT
5291  42FE- D0 06             BNE PLOT4
5292  4300- 20 18 E0           JSR ICRTGR
5293  4303- 4C 00 27           JMP FETCH
5294                   *
5295  4306- C9 92      PLOT4   CMP =$92        PLOT WAIT
5296  4308- D0 0C              BNE PLOT5
5297  430A- A9 01              LDA =1
5298  430C- 8D 36 03           STA MAXSEQ
5299  430F- A9 0F              LDA =$F
5300  4311- 85 B8              STA GRPAGE
5301  4313- 4C D3 42           JMP PLOT0+4
5302                   *
5303  4316- C9 82      PLOT5   CMP =$82        PLOT NEXT
5304  4318- D0 06              BNE PLOT5A
5305  431A- 20 D0 4E           JSR PNEXT
5306  431D- 4C 00 27           JMP FETCH
5307                   *
5308  4320- C9 83      PLOT5A  CMP =$83        PLOT DATA
5309  4322- D0 28              BNE PLOT6
5310  4324- 20 00 27           JSR FETCH
5311  4327- A2 FF              LDX =$FF
5312  4329- 86 CF              STX TEMP4+1
5313  432B- 20 74 2B           JSR GETVAR
5314  432E- 85 B0              STA XINCR
5315  4330- 84 B1              STY XINCR+1
5316  4332- A5 45              LDA RESTYP
5317  4334- 30 11              BMI PLOT5B
5318  4336- A5 46              LDA RESTYP+1
5319  4338- 10 0D              BPL PLOT5B
5320  433A- 20 A0 43           JSR PLMD

----------------------------------------------------------------------

GRAPHIC BASIC - STATEMENTS         07/01/82   R65 ASSEMBLER  PAGE 16

5321  433D- 20 41 4E           JSR CHAR1
5322  4340- A9 00              LDA =0
5323  4342- 85 AB              STA PLMODE
5324  4344- 4C 06 27           JMP FETCH1
5325                   *
5326  4347- A2 96      PLOT5B  LDX =$96
5327  4349- 4C 43 23           JMP ERROR
5328                   *
5329  434C- 20 6B 43   PLOT6   JSR PLOTAR      PLOT X,Y
5330  434F- 20 52 4D           JSR PLOTP
5331  4352- A9 00              LDA =0
5332  4354- 85 AB              STA PLMODE
5333  4356- 4C 06 27           JMP FETCH1
5334                   *
5335                   * MOVE:
5336                   *******
5337                   *
5338  4359- 20 6B 43   MOVE    JSR PLOTAR
5339  435C- 20 3D 4D           JSR MOVEP
5340  435F- 4C 52 43           JMP PLOT6+6
5341                   *
5342                   * DRAW:
5343                   *******
5344                   *
5345  4362- 20 6B 43   DRAW    JSR PLOTAR
5346  4365- 20 90 4D           JSR DRAWP
5347  4368- 4C 52 43           JMP PLOT6+6
5348                   *
5349                   * PLOTAR: PLOT ARGUMENTS
5350                   ************************
5351                   *
5352  436B- 20 85 43   PLOTAR  JSR PLOTA1
5353  436E- 48                 PHA
5354  436F- A9 2C              LDA =','
5355  4371- 20 68 2B           JSR FOLLOW
5356  4374- 20 85 43           JSR PLOTA1
5357  4377- 49 FF              EOR =$FF
5358  4379- 38                 SEC
5359  437A- 69 75              ADC =117
5360  437C- 48                 PHA
5361  437D- 20 A0 43           JSR PLMD
5362  4380- 68                 PLA
5363  4381- A8                 TAY
5364  4382- 68                 PLA
5365  4383- AA                 TAX
5366  4384- 60                 RTS
5367                   *
5368  4385- 20 EC 2D   PLOTA1  JSR EXPRES
5369  4388- 20 DD 2D           JSR TESTTP
5370  438B- A5 9C              LDA SIGN

----------------------------------------------------------------------

GRAPHIC BASIC - STATEMENTS         07/01/82   R65 ASSEMBLER  PAGE 17

5371  438D- 10 03              BPL *+5
5372  438F- A9 00              LDA =0
5373  4391- 60                 RTS
5374                   *
5375  4392- A5 97              LDA EXP
5376  4394- C9 89              CMP =$89
5377  4396- 90 03              BCC *+5
5378  4398- A9 FF              LDA =$FF
5379  439A- 60                 RTS
5380                   *
5381  439B- 20 F2 36           JSR NUMEXP+9
5382  439E- 8A                 TXA
5383  439F- 60                 RTS
5384                   *
5385                   * PLMD: GET PLOT MODE
5386                   *********************
5387                   *
5388  43A0- 20 06 27   PLMD    JSR FETCH1
5389  43A3- C9 2C              CMP =','
5390  43A5- D0 0C              BNE PLMD1
5391  43A7- 20 E9 36           JSR NUMEXP
5392  43AA- 8A                 TXA
5393  43AB- 0A                 ASL A
5394  43AC- 0A                 ASL A
5395  43AD- 0A                 ASL A
5396  43AE- 0A                 ASL A
5397  43AF- 0A                 ASL A
5398  43B0- 0A                 ASL A
5399  43B1- 85 AB              STA PLMODE
5400  43B3- 60         PLMD1   RTS
5401                   *
5402                   * CHAR: PRINT ON GRAPHICS DISPLAY
5403                   *********************************
5404                   *
5405  43B4- 29 7F      CHAR    AND =$7F
5406  43B6- C9 20              CMP =$20
5407  43B8- 90 09              BCC CHARA       CONTROL
5408  43BA- C9 60              CMP =$60
5409  43BC- 90 02              BCC *+4
5410  43BE- E9 20              SBC =$20
5411  43C0- 4C 2D 4E           JMP CHARP
5412                   *
5413  43C3- C9 0D      CHARA   CMP =$D         CARRIAGE RETURN
5414  43C5- D0 05              BNE CHARB
5415  43C7- A2 00              LDX =0
5416  43C9- 86 AE              STX XCURS
5417  43CB- 60                 RTS
5418                   *
5419  43CC- C9 0A      CHARB   CMP =$A         LINE FEED
5420  43CE- D0 FB              BNE CHARB-1     RTS, IF OTHER

----------------------------------------------------------------------

GRAPHIC BASIC - STATEMENTS         07/01/82   R65 ASSEMBLER  PAGE 18

5421  43D0- A5 AF              LDA YCURS
5422  43D2- 18                 CLC
5423  43D3- 69 09              ADC =9
5424  43D5- 85 AF              STA YCURS
5425  43D7- 60                 RTS
5426                   *
5427                   * WAIT: STATEMENT ROUTINE
5428                   *************************
5429                   *
5430  43D8- 20 EC 2D   WAIT    JSR EXPRES
5431  43DB- 20 DD 2D           JSR TESTTP
5432  43DE- 20 07 37           JSR FLPINT-4
5433  43E1- A6 9B              LDX MANT+3
5434  43E3- A4 9A              LDY MANT+2
5435  43E5- 4C EA 43           JMP WAIT1+2
5436                   *
5437  43E8- A2 FF      WAIT1   LDX =$FF
5438  43EA- 8E 47 17           STX TMSEC
5439  43ED- 20 2E 20           JSR BREAKT
5440  43F0- AE 47 17           LDX TMSEC
5441  43F3- 10 F8              BPL *-6
5442  43F5- 88                 DEY
5443  43F6- C0 FF              CPY =$FF
5444  43F8- D0 EE              BNE WAIT1
5445  43FA- 4C 06 27           JMP FETCH1
5446                   *
5447                   *
5448                   *
5449                   * AUTO: SET AUTO LINE MODE
5450                   **************************
5451                   *
5452  43FD- A2 00      AUTO    LDX =0          DEFAULT LINE NO
5453  43FF- 86 06             STX INTEG+1
5454  4401- A2 0A              LDX =10
5455  4403- 86 05              STX INTEG
5456  4405- B0 03              BCS *+5         SKIP, IF NO NUMBER
5457  4407- 20 44 28           JSR FETCHI
5458                   *
5459  440A- A2 0A              LDX =10         DEFAULT INCREMENT
5460  440C- C9 2C              CMP =','
5461  440E- D0 03              BNE *+5
5462  4410- 20 E9 36           JSR NUMEXP      GET INCREMENT
5463                   *
5464  4413- 86 C2              STX AUTOIN
5465  4415- 68                 PLA
5466  4416- 68                 PLA
5467  4417- A5 06              LDA INTEG+1
5468  4419- A6 05              LDX INTEG
5469  441B- 20 F9 32   AUTOIN2 JSR OUTINT
5470  441E- A9 20              LDA =' '

----------------------------------------------------------------------

GRAPHIC BASIC - STATEMENTS         07/01/82   R65 ASSEMBLER  PAGE 19

5471  4420- 20 B1 2F           JSR OUTCHR
5472  4423- A2 00              LDX =0
5473  4425- 20 6B 24           JSR INLIN+2
5474  4428- 4C 85 23           JMP WARM1+3
5475                   *
5476                           TIT GRAPHIC BASIC - FILE HANDLING
5477                           PAG

----------------------------------------------------------------------

GRAPHIC BASIC - FILE HANDLING      07/01/82   R65 ASSEMBLER  PAGE 20

5478                   *
5479                   * RESGP: RESET OPEN FILES, AUTOIN AND TAPES
5480                   *******************************************
5481                   * CALLED IN COLDSTART, NEW AND CLR
5482                   *
5483  442B- AD E5 14   RESGP   LDA TAPAOF      STOP TAPE A
5484  442E- AD E7 14           LDA TAPBOF      STOP TAPE 2
5485  4431- 20 17 46           JSR RSTIDV
5486  4434- A9 00              LDA =0
5487  4436- 85 C8              STA FORMCS      CLEAR FORMATTING
5488  4438- 85 CB              STA FORMFL
5489  443A- 85 C3              STA AFILNO      NO ACTIVE FILE
5490  443C- A0 07              LDY =7
5491  443E- 99 39 03           STA FIDRTB,Y    NO OPEN FILE
5492  4441- 99 80 03           STA FISYTB,Y
5493  4444- 88                 DEY
5494  4445- 10 F7              BPL *-7
5495  4447- 60                 RTS
5496                   *
5497                   * OPEN: OPEN A FILE
5498                   *******************
5499                   *
5500  4448- 20 EC 36   OPENBS  JSR NUMEXP+3    GET FILE NUMBER
5501  444B- 8A                 TXA
5502  444C- C9 04              CMP =4          MUST BE >=4
5503  444E- B0 05              BCS *+7
5504  4450- A2 07      FNERR   LDX =7          FILE NUMBER ERROR
5505  4452- 4C 52 45   FERR1   JMP FERROR
5506                   *
5507  4455- 85 C3              STA AFILNO
5508  4457- 20 A0 44           JSR SRFILN      SHOULD NOT BE IN TABLE
5509  445A- D0 04              BNE *+6
5510  445C- A2 00              LDX =0          DOUBLE FILE NO ERROR
5511  445E- F0 F2              BEQ FERR1
5512                   *
5513  4460- A9 2C              LDA =','
5514  4462- 20 68 2B           JSR FOLLOW
5515  4465- 20 CB 41           JSR GETBF4      GET FILE NAME
5516                   *
5517  4468- A6 DC              LDX FILDRV      GETD DRIVE CODE
5518  446A- E0 04              CPX =4          DEFAULT =0
5519  446C- 90 04              BCC *+6         MUST BE <4
5520  446E- A2 15              LDX =21         DRIVE NO ERROR
5521  4470- D0 E0              BNE FERR1
5522                   *
5523  4472- 20 4A 42   OPEN1   JSR DEFARG2     GET DIRECTION CODE
5524  4475- C9 02              CMP =2          DEFAULT 0
5525  4477- 90 04              BCC *+6
5526  4479- A9 33              LDA =51         FILE DIRECTION ERROR
5527  447B- D0 D5              BNE FERR1

----------------------------------------------------------------------

GRAPHIC BASIC - FILE HANDLING      07/01/82   R65 ASSEMBLER  PAGE 21

5528                   *
5529  447D- 0A                 ASL A
5530  447E- 0A                 ASL A
5531  447F- 0A                 ASL A
5532  4480- 0A                 ASL A
5533  4481- 0A                 ASL A
5534  4482- 85 DA              STA FILFLG
5535                   *
5536  4484- 20 54 47           JSR GETBCD      GET LOCATION, IF THERE
5537  4487- 8D 13 03           STA FILLOC
5538  448A- 8C 14 03           STY FILLOC+1
5539  448D- A9 44              LDA ='D'
5540  448F- 8D 12 03           STA FILSTP
5541  4492- 20 0F F0           JSR OPEN        OPEN FILE
5542  4495- F0 03              BEQ *+5
5543  4497- 4C 43 45           JMP FILERR
5544  449A- A5 C3              LDA AFILNO
5545  449C- 99 80 03           STA FISYTB,Y    STORE SYMBOLIC NAME
5546  449F- 60                 RTS
5547                   *
5548                   * SRFILN: SEARCH FILE NUMBER
5549                   ****************************
5550                   * Z=1 IF FOUND, Y GIVES ENTRY NUMBER, FILE
5551                   * NO TO SEARCH MUST BE IN A, A AND X SAVED
5552                   *
5553  44A0- A0 07      SRFILN  LDY =7
5554  44A2- D9 80 03           CMP FISYTB,Y
5555  44A5- F0 03              BEQ *+5
5556  44A7- 88                 DEY
5557  44A8- 10 F8              BPL *-6
5558  44AA- 60                 RTS
5559                   *
5560                   *
5561                   * ERROR STRINGS FOR FILE ERRORS
5562                   *******************************
5563                   *
5564  44AB- 44 4F 55   FERSTR  BYT 'DOUBLE '
5564  44AE- 42 4C 45 
5564  44B1- 20 
5565  44B2- 46 49 4C           BYT 'FILE NO'+128
5565  44B5- 45 20 4E 
5565  44B8- CF 
5566  44B9- 44 4F 55           BYT 'DOUBLE '
5566  44BC- 42 4C 45 
5566  44BF- 20 
5567  44C0- 44 52 49           BYT 'DRIVE NO'+128
5567  44C3- 56 45 20 
5567  44C6- 4E CF 
5568  44C8- 46 49 4C           BYT 'FILETYPE'+128
5568  44CB- 45 54 59 

----------------------------------------------------------------------

GRAPHIC BASIC - FILE HANDLING      07/01/82   R65 ASSEMBLER  PAGE 22

5568  44CE- 50 C5 
5569  44D0- 54 4F 4F           BYT 'TOO MANY FILES'+128
5569  44D3- 20 4D 41 
5569  44D6- 4E 59 20 
5569  44D9- 46 49 4C 
5569  44DC- 45 D3 
5570  44DE- 46 49 4C           BYT 'FILE DIRECTION'+128
5570  44E1- 45 20 44 
5570  44E4- 49 52 45 
5570  44E7- 43 54 49 
5570  44EA- 4F CE 
5571  44EC- 46 49 4C           BYT 'FILE NOT FOUND'+128
5571  44EF- 45 20 4E 
5571  44F2- 4F 54 20 
5571  44F5- 46 4F 55 
5571  44F8- 4E C4 
5572  44FA- 46 49 4C          BYT 'FILE READ'+128
5572  44FD- 45 20 52 
5572  4500- 45 41 C4 
5573  4503- 44 49 53           BYT 'DISK NOT READY'+128
5573  4506- 4B 20 4E 
5573  4509- 4F 54 20 
5573  450C- 52 45 41 
5573  450F- 44 D9 
5574  4511- 44 49 52           BYT 'DIRECTORY FULL'+128
5574  4514- 45 43 54 
5574  4517- 4F 52 59 
5574  451A- 20 46 55 
5574  451D- 4C CC 
5575  451F- 44 49 53           BYT 'DISK FULL OR TAPE BUSY'+128
5575  4522- 4B 20 46 
5575  4525- 55 4C 4C 
5575  4528- 20 4F 52 
5575  452B- 20 54 41 
5575  452E- 50 45 20 
5575  4531- 42 55 53 
5575  4534- D9 
5576                   *
5577                   * CONVERSION TABLE FOR SYSTEM FILE ERRORS
5578                   *
5579  4535- 4F 4F 4F   FERTB   BYT 79,79,79,79,29,65,88,102
5579  4538- 4F 1D 41 
5579  453B- 58 66 
5580  453D- 25 33 07           BYT 37,51,07,116,116
5580  4540- 74 74 
5581                   *
5582                   * SYSTEM FILE ERROR
5583                   *******************
5584                   *
5585  4542- 98                 TYA

----------------------------------------------------------------------

GRAPHIC BASIC - FILE HANDLING      07/01/82   R65 ASSEMBLER  PAGE 23

5586  4543- C9 09      FILERR  CMP =9
5587  4545- 90 02              BCC *+4
5588  4547- E9 1A              SBC =$1A
5589  4549- C9 0E              CMP =14
5590  454B- B0 2E              BCS FILERR2
5591  454D- A8                 TAY
5592  454E- B9 34 45           LDA FERTB-1,Y
5593  4551- AA                 TAX
5594                   *
5595                   * FILE ERROR HANDLING
5596                   *********************
5597                   *
5598  4552- AD 80 17   FERROR  LDA VFLAG
5599  4555- 29 67              AND =$67
5600  4557- 8D 80 17           STA VFLAG
5601  455A- A5 00              LDA OUTDEV
5602  455C- F0 07              BEQ *+9
5603  455E- 20 9F 42           JSR RSTDEV
5604  4561- A9 00              LDA =0
5605  4563- 85 00              STA OUTDEV
5606                   *
5607  4565- 20 8E 24           JSR CRLF
5608  4568- 20 D1 45           JSR RSTO1
5609                   *
5610  456B- BD AB 44           LDA FERSTR,X
5611  456E- 48                 PHA
5612  456F- 29 7F              AND =$7F
5613  4571- 20 B1 2F           JSR OUTCHR
5614  4574- E8                 INX
5615  4575- 68                 PLA
5616  4576- 10 F3              BPL *-11
5617  4578- 4C 69 23           JMP STOP2-7
5618                   *
5619  457B- A2 58      FILERR2 LDX =88
5620  457D- D0 D3              BNE FERROR
5621                   *
5622                   * CLOSE: CLOSE OPEN FILE
5623                   ************************
5624                   * IF NO ARGUMENTS GIVEN: CLOSE ALL FILES
5625                   *
5626  457F- D0 0E      CLOSEBS BNE CLOSE1
5627  4581- A0 07              LDY =7
5628  4583- B9 80 03           LDA FISYTB,Y
5629  4586- F0 03              BEQ *+5
5630  4588- 20 A7 45           JSR CLOSE2
5631  458B- 88                 DEY
5632  458C- 10 F5              BPL CLOSEBS+4
5633  458E- 60                 RTS
5634                   *
5635  458F- 20 06 27   CLOSE1  JSR FETCH1

----------------------------------------------------------------------

GRAPHIC BASIC - FILE HANDLING      07/01/82   R65 ASSEMBLER  PAGE 24

5636  4592- 20 EC 36           JSR NUMEXP+3
5637  4595- 8A                 TXA
5638  4596- C9 04              CMP =4
5639  4598- B0 03              BCS *+5
5640  459A- 4C 50 44           JMP FNERR       FILE NUMBER ERROR
5641                   *
5642  459D- 20 A0 44           JSR SRFILN
5643  45A0- F0 05              BEQ CLOSE2
5644  45A2- A2 41      NFERR   LDX =65
5645  45A4- 4C 52 45           JMP FERROR
5646                   *
5647  45A7- 84 C3      CLOSE2  STY AFILNO
5648  45A9- 98                 TYA
5649  45AA- AA                 TAX
5650  45AB- 20 12 F0           JSR CLOSE
5651  45AE- D0 92              BNE FILERR-1
5652  45B0- A9 00              LDA =0
5653  45B2- A4 C3              LDY AFILNO
5654  45B4- 99 80 03           STA FISYTB,Y
5655  45B7- 85 C3              STA AFILNO
5656  45B9- 60                 RTS
5657                   *
5658                   * SET FILE OUTPUT
5659                   *****************
5660                   *
5661  45BA- 8A         SETDV3  TXA
5662  45BB- 20 A0 44           JSR SRFILN
5663  45BE- D0 E2              BNE NFERR
5664  45C0- 84 C3              STY AFILNO
5665  45C2- 60                 RTS
5666                   *
5667                   * OUTFIL: PRINT TO A FILE
5668                   *************************
5669                   *
5670  45C3- A6 C3      OUTFIL  LDX AFILNO
5671  45C5- A0 00              LDY =0
5672  45C7- 84 DA              STY FILFLG
5673  45C9- 20 1B F0           JSR WRITCH
5674  45CC- F0 F4              BEQ OUTFIL-1    RTS, IF OK
5675  45CE- 4C 42 45           JMP FILERR-1
5676                   *
5677                   *
5678                   * RSTO1: RESET INPUT DEVICE AND GRAPHICS
5679                   ****************************************
5680                   * X SAVED
5681                   *
5682  45D1- 8A         RSTO1   TXA
5683  45D2- 48                 PHA
5684  45D3- 20 AF 30           JSR GETEND      RESET INPUT DEVICE
5685  45D6- 68                 PLA

----------------------------------------------------------------------

GRAPHIC BASIC - FILE HANDLING      07/01/82   R65 ASSEMBLER  PAGE 25

5686  45D7- AA                 TAX
5687  45D8- 4C 1C 20           JMP ALPHAD
5688                   *
5689                   * RSTALL: RESTET INPUT,OUTPUT AND GRAPHICS
5690                   ******************************************
5691                   *
5692  45DB- 08         RSTALL  PHP             SAVE STATUS
5693  45DC- A5 00              LDA OUTDEV
5694  45DE- F0 07              BEQ *+9
5695  45E0- 20 9F 42           JSR RSTDEV
5696  45E3- A9 00              LDA =0
5697  45E5- 85 00              STA OUTDEV
5698  45E7- 20 AF 30           JSR GETEND
5699  45EA- 20 1C 20           JSR ALPHAD
5700  45ED- 28                 PLP
5701  45EE- 60                 RTS
5702                   *
5703                   * SETINP: SETINPUT DEVICE
5704                   *************************
5705                   *
5706  45EF- 20 E9 36   SETINP  JSR NUMEXP
5707  45F2- 86 C1              STX INPDEV
5708  45F4- E0 04              CPX =4
5709  45F6- 90 05              BCC *+7
5710  45F8- 20 BA 45           JSR SETDV3
5711  45FB- A2 04              LDX =4
5712  45FD- A9 3B              LDA =';'
5713  45FF- 20 68 2B          JSR FOLLOW
5714  4602- BD 0D 46   SETIN1  LDA INVTB,X     SET VECTOR FOR INCHR
5715  4605- 85 C4              STA IVECT
5716  4607- BD 12 46           LDA INVTB+5,X
5717  460A- 85 C5              STA IVECT+1
5718  460C- 60                 RTS
5719                   *
5720  460D- 00 2C 5A   INVTB   BYT <GETKEY,<TSTKEY,<GETTTY
5721  4610- 37 66              BYT <GETGRA,<INFIL
5722  4612- E0 46 1E           BYT >GETKEY,>TSTKEY,>GETTTY
5723  4615- 46 46              BYT >GETGRA,>INFIL
5724                   *
5725                   * RSTIDV: RESET INPUT DEVICE
5726                   ****************************
5727                   *
5728  4617- A2 00      RSTIDV  LDX =0
5729  4619- F0 E7              BEQ SETIN1
5730                   *
5731                   * INCHR INPUT A CHAR
5732                   ********************
5733                   *
5734  461B- 86 C6      INCHR   STX ISAVXY
5735  461D- 84 C7              STY ISAVXY+1

----------------------------------------------------------------------

GRAPHIC BASIC - FILE HANDLING      07/01/82   R65 ASSEMBLER  PAGE 26

5736  461F- 20 29 46           JSR INCH1
5737  4622- A6 C6              LDX ISAVXY
5738  4624- A4 C7              LDY ISAVXY+1
5739  4626- 29 7F              AND =$7F
5740  4628- 60                 RTS
5741                   *
5742  4629- 6C C4 00   INCH1   JMP (IVECT)
5743                   *
5744                   * TSTKEY: TEST KEY
5745                   ******************
5746                   * RESTURN A=0 IF NO KEY PRESSES, ELSE KEY
5747                   *
5748  462C- AD 85 17   TSTKEY  LDA CHARREG
5749  462F- F0 05              BEQ *+7
5750  4631- A2 00              LDX =0
5751  4633- 8E 85 17           STX CHARREG
5752  4636- 60                 RTS
5753                   *
5754                   *
5755                   * GETGRA: GET KEY AND PRINT TO GRAPHICS
5756                   ***************************************
5757                   *
5758  4637- 20 00 E0   GETGRA  JSR GETKEY
5759  463A- 48                 PHA
5760  463B- C9 7F              CMP =$7F
5761  463D- F0 09              BEQ *+11
5762  463F- C9 5F              CMP =$5F
5763  4641- F0 05              BEQ *+7
5764  4643- 20 B4 43           JSR CHAR
5765  4646- 68                 PLA
5766  4647- 60                 RTS
5767                   *
5768  4648- A5 AE              LDA XCURS
5769  464A- 38                 SEC
5770  464B- E9 06              SBC =6
5771  464D- B0 02              BCS *+4
5772  464F- A9 00              LDA =0
5773  4651- 85 AE              STA XCURS
5774  4653- 48                 PHA             SAVE XCURS
5775  4654- A9 80              LDA =$80
5776  4656- 85 AB              STA PLMODE
5777  4658- A9 5C              LDA =$5C
5778  465A- 20 B4 43           JSR CHAR
5779  465D- A9 00              LDA =0
5780  465F- 85 AB              STA PLMODE
5781  4661- 68                 PLA
5782  4662- 85 AE              STA XCURS
5783  4664- 68                 PLA
5784  4665- 60                 RTS
5785                   *

----------------------------------------------------------------------

GRAPHIC BASIC - FILE HANDLING      07/01/82   R65 ASSEMBLER  PAGE 27

5786                   * INFIL: INPUT FROM FILE
5787                   ************************
5788                   *
5789  4666- A6 C3      INFIL   LDX AFILNO
5790  4668- A9 00              LDA =0
5791  466A- 85 DA              STA FILFLG
5792  466C- 20 18 F0           JSR READCH
5793  466F- F0 F4              BEQ INFIL-1     RTS, IF OK
5794  4671- 4C 42 45           JMP FILERR-1
5795                   *
5796                   *
5797                   * COPY: COPY FROM ANY DEVICE TO ANY DEVICE
5798                   ******************************************
5799                   * DEVICE CAN BE SYMBOLIC FILE OR PHYSICAL
5800                   * DEVICE (I/O CODES 0-3)
5801                   *
5802  4674- 20 EC 36   COPY    JSR NUMEXP+3    GET INPUT DEVICE
5803  4677- 86 C1              STX INPDEV
5804  4679- E0 04              CPX =4
5805  467B- 90 05              BCC *+7
5806  467D- 20 BA 45           JSR SETDV3
5807  4680- A2 04              LDX =4
5808  4682- A9 2C              LDA =','
5809  4684- 20 FF 45           JSR SETIN1-3    SET DEVICE
5810  4687- 20 06 27           JSR FETCH1
5811  468A- 20 EC 36           JSR NUMEXP+3
5812  468D- E0 03              CPX =3
5813  468F- B0 06              BCS *+8
5814  4691- 20 69 42           JSR SETDV1-4
5815  4694- 4C 9C 46           JMP COPY1
5816                   *
5817  4697- 86 00              STX OUTDEV
5818  4699- 20 8A 42           JSR SETDV2+7
5819                   *
5820  469C- A5 C1      COPY1   LDA INPDEV
5821  469E- C5 00              CMP OUTDEV
5822  46A0- D0 03              BNE *+5
5823  46A2- 4C 50 44           JMP FNERR
5824                   *
5825  46A5- 20 4A 42           JSR DEFARG2
5826  46A8- C9 00              CMP =0           TERMINATOR
5827  46AA- D0 02              BNE *+4
5828  46AC- A9 1F              LDA =$1F
5829  46AE- 85 B7              STA LENGHT
5830                   *
5831  46B0- A5 C1      COPY2   LDA INPDEV
5832  46B2- C9 04              CMP =4
5833  46B4- 90 07              BCC COPY3
5834  46B6- 20 A0 44           JSR SRFILN
5835  46B9- D0 3E              BNE COPY6

----------------------------------------------------------------------

GRAPHIC BASIC - FILE HANDLING      07/01/82   R65 ASSEMBLER  PAGE 28

5836  46BB- 84 C3              STY AFILNO
5837                   *
5838  46BD- 20 1B 46   COPY3   JSR INCHR
5839  46C0- C9 1F              CMP =$1F
5840  46C2- F0 26              BEQ COPY5
5841  46C4- C5 B7              CMP LENGHT
5842  46C6- F0 22              BEQ COPY5
5843                   *
5844  46C8- A6 00              LDX OUTDEV
5845  46CA- E0 04              CPX =4
5846  46CC- 90 0A              BCC COPY4
5847  46CE- 48                 PHA
5848  46CF- 8A                 TXA
5849  46D0- 20 A0 44           JSR SRFILN
5850  46D3- D0 23              BNE COPY6-1
5851  46D5- 84 C3              STY AFILNO
5852  46D7- 68                 PLA
5853                   *
5854  46D8- 20 B1 2F   COPY4   JSR OUTCHR
5855  46DB- C9 0D              CMP =$D
5856  46DD- D0 05              BNE *+7
5857  46DF- A9 0A              LDA =$A
5858  46E1- 20 B1 2F           JSR OUTCHR
5859  46E4- 20 2E 20           JSR BREAKT
5860  46E7- 4C B0 46           JMP COPY2
5861                   *
5862  46EA- A5 00      COPY5   LDA OUTDEV
5863  46EC- F0 07              BEQ *+9
5864  46EE- 20 9F 42           JSR RSTDEV
5865  46F1- A9 00              LDA =0
5866  46F3- 85 00              STA OUTDEV
5867  46F5- 4C AF 30           JMP GETEND
5868                   *
5869  46F8- 68                 PLA
5870  46F9- 4C 50 44   COPY6   JMP FNERR
5871                   *
5872                   * FILES: PRINT OPEN FILES TO DISPLAY
5873                   ************************************
5874                   *
5875  46FC- A9 3C      FILES   LDA =<FILEM
5876  46FE- A0 47             LDY =>FILEM
5877  4700- 20 80 28           JSR OUTSTR
5878                   *
5879  4703- A0 07      FILE1   LDY =7
5880  4705- B9 80 03           LDA FISYTB,Y
5881  4708- F0 03              BEQ *+5
5882  470A- 20 11 47           JSR FILE2
5883  470D- 88                 DEY
5884  470E- 10 F5              BPL FILE1+2
5885  4710- 60                 RTS

----------------------------------------------------------------------

GRAPHIC BASIC - FILE HANDLING      07/01/82   R65 ASSEMBLER  PAGE 29

5886                   *
5887  4711- 20 2D 47   FILE2   JSR FILE3       PRINT SYMBOLIC NAME
5888  4714- B9 41 03           LDA FIDVTB,Y
5889  4717- 20 2D 47           JSR FILE3       PRINT DEVICE
5890  471A- B9 39 03           LDA FIDRTB,Y
5891  471D- 0A                 ASL A
5892  471E- A9 00              LDA =0
5893  4720- 2A                 ROL A
5894  4721- 20 2D 47           JSR FILE3       PRINT R/W DIRECTION
5895  4724- B9 51 03           LDA FIRCTB,Y
5896  4727- 20 2D 47           JSR FILE3
5897  472A- 4C 8E 24           JMP CRLF
5898                   *
5899  472D- AA         FILE3   TAX
5900  472E- 98                 TYA
5901  472F- 48                 PHA
5902  4730- A9 00              LDA =0
5903  4732- 20 F9 32           JSR OUTINT
5904  4735- 68                 PLA
5905  4736- A8                 TAY
5906  4737- A9 09              LDA =9
5907  4739- 4C B1 2F           JMP OUTCHR
5908                   *
5909  473C- 0D 0A 4D   FILEM   BYT $D,$A,'MO',9,'DRIVE'
5909  473F- 4F 09 44 
5909  4742- 52 49 56 
5909  4745- 45 
5910  4746- 09 44 49           BYT 9,'DIR',9,'RECORD'
5910  4749- 52 09 52 
5910  474C- 45 43 4F 
5910  474F- 52 44 
5911  4751- 0D 0A 00           BYT $D,$A,0
5912                   *
5913                   *
5914                   * GETBCD: GET BASIC ARGUMENT, CONVERT TO
5915                   ****************************************
5916                   * 4 DIGIT BCD NUMBER IN A,Y
5917                   *
5918  4754- 20 2B 42   GETBCD  JSR DEFARG
5919  4757- A9 00              LDA =0
5920  4759- 85 98              STA MANT
5921  475B- 85 99              STA MANT+1
5922  475D- A2 0F              LDX =15
5923  475F- 06 05      GETBCD1 ASL INTEG
5924  4761- 26 06              ROL INTEG+1
5925  4763- 90 10              BCC GETBCD2
5926  4765- F8                 SED
5927  4766- A5 98              LDA MANT
5928  4768- 7D 7D 47           ADC GETBCD3,X
5929  476B- 85 98              STA MANT

----------------------------------------------------------------------

GRAPHIC BASIC - FILE HANDLING      07/01/82   R65 ASSEMBLER  PAGE 30

5930  476D- A5 99              LDA MANT+1
5931  476F- 7D 8D 47           ADC GETBCD3+16,X
5932  4772- 85 99              STA MANT+1
5933  4774- D8                 CLD
5934  4775- CA         GETBCD2 DEX
5935  4776- 10 E7              BPL GETBCD1
5936  4778- A5 98              LDA MANT
5937  477A- A4 99              LDY MANT+1
5938  477C- 60                 RTS
5939                   *
5940  477D- 00 01 03   GETBCD3 BYT 0,1,3
5941  4780- 07 15 31           BYT 7,$15,$31
5942  4783- 63 27 55           BYT $63,$27,$55
5943  4786- 11 23 47           BYT $11,$23,$47
5944  4789- 95 91 83           BYT $95,$91,$83
5945  478C- 67                 BYT $67
5946                   *
5947  478D- 00 00 00           BYT 0,0,0
5948  4790- 00 00 00           BYT 0,0,0
5949  4793- 00 01 02           BYT 0,1,2
5950  4796- 05 10 20           BYT 5,$10,$20
5951  4799- 40 81 63           BYT $40,$81,$63
5952  479C- 32                 BYT $32
5953                   *
5954                   *
5955                   *
5956                   * OUTCON: OUTPUT CONVERSION (WITH FORMATTING)
5957                   *********************************************
5958                   *
5959  479D- A0 01      OUTCON  LDY =1          START OF STRING
5960  479F- A9 00              LDA =0
5961  47A1- 85 C9              STA FORMCD      TEST FORMATTING CODE
5962  47A3- C9 03              CMP =3          HEX FORMATTING
5963  47A5- D0 57              BNE FORM4       SKIP, IF NOT
5964                   *
5965  47A7- A9 24              LDA ='$'
5966  47A9- 99 FF 00           STA 255,Y
5967  47AC- 84 A7              STY DYADIC+8
5968  47AE- A9 F9              LDA =<HEXMAX
5969  47B0- A0 47              LDY =>HEXMAX
5970  47B2- 20 4B 35           JSR COMPAR      TEST MAX VALUE
5971  47B5- 30 03              BMI *+5
5972  47B7- 4C FE 36           JMP QERR
5973                   *
5974  47BA- 20 1A 37           JSR FLPIN1
5975  47BD- A2 07              LDX =7
5976  47BF- 86 84              STX TEMP6
5977  47C1- A0 03      FORM1   LDY =3
5978  47C3- 06 9B              ASL MANT+3
5979  47C5- 26 9A              ROL MANT+2

----------------------------------------------------------------------

GRAPHIC BASIC - FILE HANDLING      07/01/82   R65 ASSEMBLER  PAGE 31

5980  47C7- 26 99              ROL MANT+1
5981  47C9- 26 98              ROL MANT
5982  47CB- 2A                 ROL A
5983  47CC- 88                 DEY
5984  47CD- 10 F4              BPL FORM1+2
5985  47CF- 29 0F              AND =$F
5986  47D1- D0 0A              BNE FORM2
5987  47D3- 24 84              BIT TEMP6
5988  47D5- 30 06              BMI FORM2
5989  47D7- E4 CA              CPX FORMNO
5990  47D9- 90 02              BCC FORM2
5991  47DB- B0 14              BCS FORM3
5992                   *
5993  47DD- C9 0A      FORM2   CMP =$A         CONVERT TO HEX DIGIT
5994  47DF- 18                 CLC
5995  47E0- 30 02              BMI *+4
5996  47E2- 69 07              ADC =7
5997  47E4- 69 30              ADC =$30
5998  47E6- E6 A7              INC DYADIC+8
5999  47E8- A4 A7              LDY DYADIC+8
6000  47EA- 99 FF 00           STA 255,Y
6001                    * BASIC7:A ORIGINAL 7/1/1982, RECOVERED 3/2018
6002  47ED- A9 80              LDA =$80
6003  47EF- 85 84              STA TEMP6
6004  47F1- CA         FORM3   DEX
6005  47F2- 10 CD              BPL FORM1
6006  47F4- A4 A7              LDY DYADIC+8
6007  47F6- 4C B1 49           JMP OUTZER+3
6008                   *
6009  47F9- 9F 7F FF   HEXMAX  BYT $9F,$7F,$FF,$FF,$FF
6009  47FC- FF FF 
6010                   *
6011                   * OUTPUT, IF NOT HEX
6012                   *
6013  47FE- A9 20     FORM4   LDA =' '
6014  4800- 24 9C              BIT SIGN
6015  4802- 10 02              BPL *+4
6016  4804- A9 2D              LDA ='-'
6017  4806- 99 FF 00           STA 255,Y
6018  4809- 85 9C              STA SIGN
6019  480B- 84 A7              STY DYADIC+8
6020  480D- C8                 INY
6021  480E- A9 F8              LDA =$F8
6022  4810- 85 93              STA POINTC
6023  4812- A6 97              LDX EXP
6024  4814- F0 3A              BEQ OUTCN3
6025                   *
6026  4816- A9 00              LDA =0
6027  4818- E0 80              CPX =$80
6028  481A- F0 02              BEQ *+4

----------------------------------------------------------------------

GRAPHIC BASIC - FILE HANDLING      07/01/82   R65 ASSEMBLER  PAGE 32

6029  481C- B0 09              BCS *+11
6030                   *
6031  481E- A9 68              LDA =<(OUTCT1+10)
6032  4820- A0 36              LDY =>(OUTCT1+10)
6033  4822- 20 78 38           JSR MULT-3      MULTIPLY BY 1.0E9
6034  4825- A9 F7              LDA =$F7
6035                   *
6036  4827- 85 93              STA POINTC
6037  4829- A9 63      OUTCN0  LDA =<(OUTCT1+5)
6038  482B- A0 36              LDY =>(OUTCT1+5)
6039  482D- 20 4B 35           JSR COMPAR
6040  4830- F0 1E              BEQ OUTCN3
6041  4832- 10 12              BPL OUTCN1      TOO BIG FOR INT
6042  4834- A9 5E              LDA =<OUTCT1
6043  4836- A0 36              LDY =>OUTCT1
6044  4838- 20 4B 35           JSR COMPAR
6045  483B- F0 02              BEQ *+4
6046  483D- 10 0E              BPL OUTCN1+7
6047  483F- 20 B9 36           JSR MULTEN      TOO SMALL FOR INT
6048  4842- C6 93              DEC POINTC
6049  4844- D0 EE              BNE *-16
6050                   *
6051  4846- 20 D8 36   OUTCN1  JSR DIVTEN
6052  4849- E6 93              INC POINTC
6053  484B- D0 DC              BNE OUTCN0      ALLWAYS TAKEN
6054                   *
6055  484D- 20 1B 33           JSR ADD9
6056  4850- A6 C9      OUTCN3  LDX FORMCD      TEST FORMATTING CODE
6057  4852- F0 46              BEQ FORM8       SKIP, IF AUTO FORMAT
6058  4854- A9 08              LDA =8
6059  4856- CA                 DEX
6060  4857- F0 05              BEQ FORM5       SKIP, IF E-FORMAT
6061  4859- A9 00              LDA =0
6062  485B- 38                 SEC
6063  485C- E5 93              SBC POINTC
6064  485E- 38         FORM5   SEC
6065  485F- E5 CA              SBC FORMNO      COMPUTE NEW ROUNDING
6066  4861- 30 37              BMI FORM8
6067  4863- F0 35              BEQ FORM8
6068  4865- C9 0A              CMP =$A
6069  4867- B0 31              BCS FORM8
6070  4869- 85 CC              STA FORMCT      ROUNDING IS .5*10^FORMCT
6071  486B- A2 84              LDX =<TEMP6
6072  486D- A0 00              LDY =>TEMP6
6073  486F- 20 C7 34           JSR SAVFLP+4
6074  4872- A9 6D              LDA =<OUTCT2
6075  4874- A0 36              LDY =>OUTCT2
6076  4876- 20 9E 34           JSR GETFLP
6077  4879- 20 B9 36   FORM6   JSR MULTEN
6078  487C- C6 CC              DEC FORMCT

----------------------------------------------------------------------

GRAPHIC BASIC - FILE HANDLING      07/01/82   R65 ASSEMBLER  PAGE 33

6079  487E- D0 F9              BNE FORM6
6080                   *
6081  4880- A9 84              LDA =<TEMP6
6082  4882- A0 00              LDY =>TEMP6
6083  4884- 20 27 33           JSR ADD-3       ADD ROUNDING
6084  4887- A9 63              LDA =<(OUTCT1+5)
6085  4889- A0 36              LDY =>(OUTCT1+5)
6086  488B- 20 4B 35           JSR COMPAR
6087  488E- F0 0A              BEQ FORM8
6088  4890- 30 08              BMI FORM8
6089  4892- 20 D8 36           JSR DIVTEN
6090  4895- E6 93              INC POINTC
6091  4897- 20 1B 33           JSR ADD9
6092                   *
6093  489A- 20 1A 37   FORM8   JSR FLPIN1
6094  489D- A2 01              LDX =1
6095  489F- A5 93              LDA POINTC
6096  48A1- 18                 CLC
6097  48A2- 69 0A              ADC =10
6098  48A4- A4 C9              LDY FORMCD
6099  48A6- F0 05              BEQ FORM7
6100  48A8- 88                 DEY
6101  48A9- F0 15              BEQ EXPOUT      EXPOUT, IF E-FORMAT
6102  48AB- D0 03              BNE FORM7+3
6103                   *
6104  48AD- A8         FORM7   TAY             IN AUTO FORMAT
6105  48AE- 30 10              BMI EXPOUT      EXPOUT, IF <0.01
6106                   *
6107  48B0- C9 0B              CMP =11         IN AUTO AND F=FORMAT
6108  48B2- 10 0D              BPL EXPOUT+1    EXPOUT, IF TOO BIG
6109                   *
6110  48B4- 18         FIXOUT  CLC
6111  48B5- 69 FF              ADC =255
6112  48B7- C9 F5              CMP =$F5        CORRECTION FOR UNDER-
6113  48B9- 10 02              BPL *+4         FLOW IN FIXOUT
6114  48BB- A2 F5              LDX =$F5
6115  48BD- AA                 TAX             DECIMAL POINT TO X
6116  48BE- A9 02              LDA =2          DUMMY EXPONTENT
6117                   *
6118  48C0- 38         EXPOUT  SEC
6119  48C1- E9 02              SBC =2
6120  48C3- 85 94              STA CURREX      PRINTED EXPONENT
6121  48C5- 86 93              STX POINTC      DECIMAL POINT OFFSET
6122  48C7- 8A                 TXA
6123  48C8- F0 02              BEQ *+4
6124  48CA- 10 1C              BPL OUTCN2
6125                   *
6126  48CC- A4 A7              LDY DYADIC+8
6127  48CE- A9 30              LDA ='0'
6128  48D0- C8                 INY

----------------------------------------------------------------------

GRAPHIC BASIC - FILE HANDLING      07/01/82   R65 ASSEMBLER  PAGE 34

6129  48D1- 99 FF 00           STA 255,Y
6130  48D4- A9 2E              LDA ='.'
6131  48D6- C8                 INY
6132  48D7- 99 FF 00           STA 255,Y
6133  48DA- 8A                 TXA
6134  48DB- F0 09              BEQ OUTCN2-2
6135  48DD- A9 30              LDA ='0'
6136  48DF- C8                 INY
6137  48E0- 99 FF 00           STA 255,Y
6138  48E3- E8                 INX
6139  48E4- D0 F9              BNE *-5
6140                   *
6141  48E6- 84 A7              STY DYADIC+8
6142  48E8- A0 00      OUTCN2  LDY =0
6143  48EA- A2 80              LDX =128
6144  48EC- A5 9B              LDA MANT+3
6145  48EE- 18                 CLC
6146  48EF- 79 75 36           ADC OUTCT2+8,Y
6147  48F2- 85 9B              STA MANT+3
6148  48F4- A5 9A              LDA MANT+2
6149  48F6- 79 74 36           ADC OUTCT2+7,Y
6150  48F9- 85 9A              STA MANT+2
6151  48FB- A5 99              LDA MANT+1
6152  48FD- 79 73 36          ADC OUTCT2+6,Y
6153  4900- 85 99              STA MANT+1
6154  4902- A5 98              LDA MANT
6155  4904- 79 72 36           ADC OUTCT2+5,Y
6156  4907- 85 98              STA MANT
6157  4909- E8                 INX
6158  490A- B0 04              BCS *+6
6159  490C- 10 DE              BPL OUTCN2+4
6160  490E- 30 02              BMI *+4
6161  4910- 30 DA              BMI OUTCN2+4
6162  4912- 8A                 TXA
6163  4913- 90 04              BCC *+6
6164  4915- 49 FF              EOR =$FF
6165  4917- 69 0A              ADC =$0A
6166  4919- 69 2F              ADC =$2F
6167  491B- C8                 INY
6168  491C- C8                 INY
6169  491D- C8                 INY
6170  491E- C8                 INY
6171  491F- 84 7D              STY VARSTP
6172  4921- A4 A7              LDY DYADIC+8
6173  4923- C8                 INY
6174  4924- AA                 TAX
6175  4925- 29 7F              AND =$7F
6176  4927- 99 FF 00           STA 255,Y
6177  492A- C6 93              DEC POINTC
6178  492C- D0 06              BNE *+8

----------------------------------------------------------------------

GRAPHIC BASIC - FILE HANDLING      07/01/82   R65 ASSEMBLER  PAGE 35

6179  492E- A9 2E              LDA ='.'
6180  4930- C8                 INY
6181  4931- 99 FF 00           STA 255,Y
6182  4934- 84 A7              STY DYADIC+8
6183                   *
6184  4936- A4 7D              LDY VARSTP
6185  4938- 8A                 TXA
6186  4939- 49 FF              EOR =$FF
6187  493B- 29 80              AND =$80
6188  493D- AA                 TAX
6189  493E- C0 24              CPY =$24
6190  4940- F0 0A              BEQ OUTCN4
6191  4942- A5 93              LDA POINTC
6192  4944- C9 F6              CMP =$F6
6193  4946- 30 04              BMI OUTCN4
6194  4948- C0 3C              CPY =$3C
6195  494A- D0 A0              BNE OUTCN2+4
6196                   *
6197  494C- A4 A7      OUTCN4  LDY DYADIC+8    GET END OF STRING
6198  494E- A6 C9              LDX FORMCD
6199  4950- F0 1E              BEQ FORM10
6200  4952- 98                 TYA
6201  4953- 18                 CLC
6202  4954- 65 93              ADC POINTC
6203  4956- 18                 CLC
6204  4957- 65 CA              ADC FORMNO
6205  4959- C5 A7              CMP DYADIC+8
6206  495B- B0 01              BCS *+3
6207  495D- A8                 TAY
6208  495E- B9 FF 00           LDA 255,Y       DO NOT PRINT
6209  4961- C9 2E              CMP ='.'        ENDING POINT
6210  4963- D0 01              BNE *+3
6211  4965- 88                 DEY
6212  4966- CA                 DEX
6213  4967- D0 14              BNE FORM11
6214                   *
6215  4969- A9 2B              LDA ='+'
6216  496B- A6 94              LDX CURREX
6217  496D- 4C 83 49           JMP FORM12
6218                   *
6219  4970- B9 FF 00   FORM10  LDA 255,Y
6220  4973- 88                 DEY
6221  4974- C9 30              CMP ='0'
6222  4976- F0 F8              BEQ *-6
6223  4978- C9 2E              CMP ='.'
6224  497A- F0 01              BEQ *+3
6225  497C- C8                 INY
6226  497D- A9 2B      FORM11  LDA ='+'
6227  497F- A6 94              LDX CURREX
6228  4981- F0 2E              BEQ OUTZER+3

----------------------------------------------------------------------

GRAPHIC BASIC - FILE HANDLING      07/01/82   R65 ASSEMBLER  PAGE 36

6229                   *
6230  4983- 10 08      FORM12  BPL *+10
6231  4985- A9 00              LDA =0
6232  4987- 38                 SEC
6233  4988- E5 94              SBC CURREX
6234  498A- AA                 TAX
6235  498B- A9 2D              LDA ='-'
6236  498D- 99 01 01           STA 257,Y
6237  4990- A9 45              LDA ='E'
6238  4992- 99 00 01           STA 256,Y
6239  4995- 8A                 TXA
6240  4996- A2 2F              LDX =$2F
6241  4998- 38                 SEC
6242  4999- E8                 INX
6243  499A- E9 0A              SBC =10
6244  499C- B0 FB              BCS *-3
6245  499E- 69 3A              ADC =$3A
6246  49A0- 99 03 01           STA 259,Y
6247  49A3- 8A                 TXA
6248  49A4- 99 02 01           STA 258,Y
6249  49A7- C8                 INY
6250  49A8- C8                 INY
6251  49A9- C8                 INY
6252  49AA- C8                 INY
6253  49AB- 4C B1 49           JMP OUTZER+3
6254                   *
6255  49AE- 99 FF 00   OUTZER  STA 255,Y
6256  49B1- A9 00              LDA =0
6257  49B3- 99 00 01           STA 256,Y
6258  49B6- 98                 TYA
6259  49B7- AA                 TAX
6260  49B8- A9 00              LDA =0
6261  49BA- A0 01              LDY =1
6262  49BC- 60                 RTS
6263                   *
6264                   *
6265                   * FORMOUT: FORMATTED OUTPUT
6266                   ***************************
6267                   *
6268  49BD- A0 01      FORMOUT LDY =1
6269  49BF- 98                 TYA
6270  49C0- 48                 PHA
6271  49C1- A5 C8              LDA FORMCS
6272  49C3- 20 A1 47           JSR OUTCON+4
6273  49C6- 68                 PLA
6274  49C7- D0 02              BNE *+4
6275  49C9- E8                 INX
6276  49CA- 88                 DEY
6277  49CB- 84 85              STY TEMP6+1
6278  49CD- A8                 TAY

----------------------------------------------------------------------

GRAPHIC BASIC - FILE HANDLING      07/01/82   R65 ASSEMBLER  PAGE 37

6279  49CE- 88                 DEY
6280  49CF- 84 84              STY TEMP6
6281  49D1- 8A                 TXA
6282  49D2- 38                 SEC
6283  49D3- E5 CB              SBC FORMFL
6284  49D5- B0 21              BCS OUTEND
6285                   *
6286  49D7- 49 FF              EOR =$FF
6287  49D9- 85 A7              STA DYADIC+8
6288  49DB- 38                 SEC
6289  49DC- 65 84              ADC TEMP6
6290  49DE- 85 86              STA TEMP6+2
6291  49E0- A5 85              LDA TEMP6+1
6292  49E2- 69 00              ADC =0
6293  49E4- 85 87              STA TEMP6+3
6294  49E6- 8A                 TXA
6295  49E7- A8                 TAY
6296  49E8- B1 84              LDA (TEMP6),Y
6297  49EA- 91 86              STA (TEMP6+2),Y
6298  49EC- 88                 DEY
6299  49ED- 10 F9              BPL *-5
6300                   *
6301  49EF- A4 A7              LDY DYADIC+8
6302  49F1- A9 20              LDA =$20
6303  49F3- 91 84              STA (TEMP6),Y
6304  49F5- 88                 DEY
6305  49F6- 10 FB              BPL *-3
6306  49F8- A9 00      OUTEND  LDA =0
6307  49FA- A0 01              LDY =1
6308  49FC- 60                 RTS
6309                   *
6310                   *
6311                   * FORMAT: SET FORMATTING
6312                   ************************
6313                   *
6314  49FD- 20 50 2C  FORMAT  JSR TLETT
6315  4A00- B0 03              BCS *+5
6316  4A02- 4C BD 26           JMP SYNERR      MUST BE LETTER
6317                   *
6318  4A05- C9 41              CMP ='A'        AUTO FORMAT
6319  4A07- D0 04              BNE FORMAT1
6320                   *
6321  4A09- A9 00              LDA =0
6322  4A0B- F0 06              BEQ FORMAT2
6323                   *
6324  4A0D- C9 46      FORMAT1 CMP ='F'        F-FORMAT
6325  4A0F- D0 1A              BNE FORMAT3
6326  4A11- A9 02              LDA =2
6327  4A13- 85 C8      FORMAT2 STA FORMCS
6328  4A15- 20 E9 36           JSR NUMEXP

----------------------------------------------------------------------

GRAPHIC BASIC - FILE HANDLING      07/01/82   R65 ASSEMBLER  PAGE 38

6329  4A18- E0 10              CPX =16
6330  4A1A- B0 09              BCS QERR2
6331  4A1C- 86 CB              STX FORMFL
6332  4A1E- 20 4A 42           JSR DEFARG2
6333  4A21- C9 09              CMP =9
6334  4A23- 90 03              BCC *+5
6335  4A25- 4C FE 36   QERR2   JMP QERR
6336  4A28- 85 CA              STA FORMNO
6337  4A2A- 60                 RTS
6338                   *
6339  4A2B- C9 45      FORMAT3 CMP ='E'        E-FORMAT
6340  4A2D- D0 04              BNE FORMAT4
6341  4A2F- A9 01              LDA =1
6342  4A31- D0 E0              BNE FORMAT2
6343                   *
6344  4A33- C9 48      FORMAT4 CMP ='H'        HEX-FORMAT
6345  4A35- D0 CB              BNE FORMAT+5    SYNTAX ERROR
6346  4A37- A9 03              LDA =3
6347  4A39- D0 D8              BNE FORMAT2
6348                   *
6349                   *
6350                   * HEX INPUT
6351                   ***********
6352                   *
6353  4A3B- A9 00      NUMBHEX LDA =0
6354  4A3D- 85 98              STA MANT
6355  4A3F- 85 99              STA MANT+1
6356  4A41- 85 9A              STA MANT+2
6357  4A43- 85 9B              STA MANT+3
6358  4A45- 20 00 27   NUMBH0  JSR FETCH
6359  4A48- 90 0B              BCC NUMBH1      SKIP, IF NUMBER
6360  4A4A- C9 41              CMP ='A'
6361  4A4C- 90 23              BCC NUMBH3
6362  4A4E- C9 47              CMP ='G'
6363  4A50- B0 1F              BCS NUMBH3
6364  4A52- 18                 CLC
6365  4A53- 69 09              ADC =9
6366  4A55- 29 0F      NUMBH1  AND =$F
6367  4A57- 0A                 ASL A
6368  4A58- 0A                 ASL A
6369  4A59- 0A                 ASL A
6370  4A5A- 0A                 ASL A
6371  4A5B- A0 03              LDY =3
6372  4A5D- 0A         NUMBH2  ASL A
6373  4A5E- 26 9B              ROL MANT+3
6374  4A60- 26 9A              ROL MANT+2
6375  4A62- 26 99              ROL MANT+1
6376  4A64- 26 98              ROL MANT
6377  4A66- 10 03              BPL *+5
6378  4A68- 4C FE 36           JMP QERR        INPUT TOO LARGE

----------------------------------------------------------------------

GRAPHIC BASIC - FILE HANDLING      07/01/82   R65 ASSEMBLER  PAGE 39

6379  4A6B- 88                 DEY
6380  4A6C- 10 EF              BPL NUMBH2
6381  4A6E- 4C 45 4A           JMP NUMBH0
6382                   *
6383  4A71- A2 00      NUMBH3  LDX =0
6384  4A73- 86 45              STX RESTYP
6385  4A75- 86 A6              STX DYADIC+7
6386  4A77- 86 9C              STX SIGN
6387  4A79- A2 A0              LDX =$A0
6388  4A7B- A5 98              LDA MANT
6389  4A7D- 49 FF              EOR =$FF
6390  4A7F- 2A                 ROL A
6391  4A80- 86 97              STX EXP
6392  4A82- 4C 93 33           JMP NORMAL
6393                   *
6394                   *
6395                   * MERGE: MERGE PROGRAM TO OLD ONE
6396                   *********************************
6397                   *
6398  4A85- 20 CB 41   MERGE   JSR GETBF4      GET NAME ETC.
6399  4A88- A5 63              LDA STVAR
6400  4A8A- A6 64              LDX STVAR+1
6401  4A8C- 38                 SEC
6402  4A8D- E9 03              SBC =3
6403  4A8F- B0 01              BCS *+3
6404  4A91- CA                 DEX
6405  4A92- 4C EF 41           JMP LOAD1+4
6406                   *
6407                   * DIR: PRINT DIRECTORY
6408                   **********************
6409                   *
6410  4A95- A2 00      DIR     LDX =0
6411  4A97- B0 03              BCS *+5
6412  4A99- 20 EC 36           JSR NUMEXP+3
6413  4A9C- 86 DC              STX FILDRV
6414  4A9E- A9 00              LDA =0
6415  4AA0- 85 DA              STA FILFLG
6416  4AA2- 8A                 TXA
6417  4AA3- 29 02              AND =2
6418  4AA5- D0 03              BNE *+5
6419  4AA7- 4C 13 20           JMP DDIR
6420  4AAA- 4C 10 20           JMP TDIR
6421                   *
6422                   *
6423                   * DELETE: DELETE DISK FILE
6424                   **************************
6425                   *
6426  4AAD- 20 CB 41   DELBAS  JSR GETBF4
6427  4AB0- 20 0C F0           JSR DELETE
6428  4AB3- F0 03              BEQ *+5

----------------------------------------------------------------------

GRAPHIC BASIC - FILE HANDLING      07/01/82   R65 ASSEMBLER  PAGE 40

6429  4AB5- 4C 43 45           JMP FILERR
6430  4AB8- 60                 RTS
6431                   *
6432                   * STA: STATUS FUNCTION
6433                   **********************
6434                   *
6435  4AB9- 20 EF 36   STA     JSR NUMEXP+6    CONVERT TO BYTE
6436  4ABC- E0 03              CPX =3
6437  4ABE- D0 34              BNE STA1
6438                   *
6439  4AC0- A6 AE              LDX XCURS
6440  4AC2- A4 AF              LDY YCURS
6441  4AC4- A9 1C              LDA =28
6442  4AC6- 78                 SEI
6443  4AC7- 8D E0 14           STA MULTA
6444  4ACA- 8C E1 14           STY MULTB
6445  4ACD- 8A                 TXA
6446  4ACE- 4A                 LSR A
6447  4ACF- 4A                 LSR A
6448  4AD0- 4A                 LSR A
6449  4AD1- 18                 CLC
6450  4AD2- 6D E2 14           ADC MULTR
6451  4AD5- 85 AC              STA GRPNT
6452  4AD7- AD E3 14           LDA MULTR+1
6453  4ADA- 58                 CLI
6454  4ADB- 69 C3              ADC =$C3
6455  4ADD- 85 AD              STA GRPNT+1
6456  4ADF- 8A                 TXA
6457  4AE0- 29 07              AND =7
6458  4AE2- AA                 TAX
6459  4AE3- BD F1 4E           LDA GRMASK,X
6460  4AE6- A2 00              LDX =0
6461  4AE8- 21 AC              AND (GRPNT,X)
6462  4AEA- F0 02              BEQ *+4
6463  4AEC- A9 01              LDA =1
6464  4AEE- A8                 TAY
6465  4AEF- A9 00      STA6    LDA =0
6466  4AF1- 4C D2 2F           JMP INTFLP
6467                   *
6468  4AF4- B0 1B      STA1    BCS STA5
6469  4AF6- CA                 DEX
6470  4AF7- 10 03              BPL STA2
6471  4AF9- 4C EE 3B           JMP FRE
6472                   *
6473  4AFC- D0 0D      STA2    BNE STA3
6474  4AFE- 38                 SEC
6475  4AFF- A5 63             LDA STVAR
6476  4B01- E5 61              SBC STPROG
6477  4B03- A8                 TAY
6478  4B04- A5 64              LDA STVAR+1

----------------------------------------------------------------------

GRAPHIC BASIC - FILE HANDLING      07/01/82   R65 ASSEMBLER  PAGE 41

6479  4B06- E5 62              SBC STPROG+1
6480  4B08- 4C D2 2F           JMP INTFLP
6481                   *
6482  4B0B- AC 80 17   STA3    LDY VFLAG
6483  4B0E- 4C EF 4A           JMP STA6
6484                   *
6485  4B11- 8A         STA5    TXA
6486  4B12- 20 A0 44           JSR SRFILN
6487  4B15- F0 04              BEQ *+6
6488  4B17- A0 00              LDY =0
6489  4B19- F0 D4              BEQ STA6
6490                   *
6491  4B1B- B9 39 03           LDA FIDRTB,Y
6492  4B1E- 0A                 ASL A
6493  4B1F- 2A                 ROL A
6494  4B20- A8                 TAY
6495  4B21- C8                 INY
6496  4B22- 4C EF 4A           JMP STA6
6497                   *
6498                   * OUT: SET OUTPUT DEVICE
6499                   ************************
6500                   *
6501  4B25- C9 00      OUT     CMP =0
6502  4B27- D0 17              BNE OUT2
6503  4B29- AD 80 17           LDA VFLAG
6504  4B2C- 29 7F              AND =$7F
6505  4B2E- 8D 80 17           STA VFLAG
6506  4B31- A2 01              LDX =1
6507  4B33- BD B5 42   OUT1    LDA DEVTB,X
6508  4B36- 8D 8C 17           STA VAUTOP
6509  4B39- BD B9 42           LDA DEVTB+4,X
6510  4B3C- 8D 8D 17           STA VAUTOP+1
6511  4B3F- 60                 RTS
6512                   *
6513  4B40- 20 EC 36   OUT2    JSR NUMEXP+3
6514  4B43- E0 00              CPX =0
6515  4B45- F0 E2              BEQ OUT+4
6516  4B47- AD 80 17           LDA VFLAG
6517  4B4A- 09 08              ORA =8
6518  4B4C- 8D 80 17           STA VFLAG
6519  4B4F- E0 04              CPX =4
6520  4B51- 90 E0              BCC OUT1
6521                   *
6522  4B53- A9 6C              LDA =<OUT4
6523  4B55- 8D 8C 17           STA VAUTOP
6524  4B58- A9 4B              LDA =>OUT4
6525  4B5A- 8D 8D 17           STA VAUTOP+1
6526  4B5D- 8A                 TXA
6527  4B5E- 20 A0 44           JSR SRFILN
6528  4B61- F0 06              BEQ *+8

----------------------------------------------------------------------

GRAPHIC BASIC - FILE HANDLING      07/01/82   R65 ASSEMBLER  PAGE 42

6529  4B63- 20 29 4B           JSR OUT+4
6530  4B66- 4C A2 45           JMP NFERR
6531                   *
6532  4B69- 84 CD              STY OUTSAV
6533  4B6B- 60                 RTS
6534                   *
6535  4B6C- A6 CD      OUT4    LDX OUTSAV
6536  4B6E- 4C C5 45           JMP OUTFIL+2
6537                   *
6538                   *
6539                   * RENUMBERING
6540                   *************
6541                   *
6542                   LINBUF  EQU BUFFER-2
6543                   SAVPC   EQU XLOW
6544                   BEGIN   EQU XINCR
6545                   STEP    EQU YINCR
6546                   *
6547                   * START OF PROGRAM
6548                   *
6549  4B71- A2 0A      RENUMB  LDX =10         SET DEFAULT LINE #
6550  4B73- 86 05              STX INTEG
6551  4B75- A2 00              LDX =0
6552  4B77- 86 06              STX INTEG+1
6553  4B79- B0 03              BCS *+5
6554  4B7B- 20 44 28           JSR FETCHI
6555  4B7E- A6 05              LDX INTEG
6556  4B80- 86 B0              STX BEGIN
6557  4B82- A6 06              LDX INTEG+1
6558  4B84- 86 B1              STX BEGIN+1
6559  4B86- A2 0A              LDX =10         DEFAULT STEP SIZE
6560  4B88- C9 2C              CMP =','
6561  4B8A- D0 03              BNE *+5
6562  4B8C- 20 E9 36           JSR NUMEXP
6563  4B8F- 86 B2              STX STEP
6564  4B91- 20 99 25           JSR CLR1-3
6565                   *
6566                   *
6567                   * FILL BUFFER WITH OLD LINE #'S AND
6568                   * RENUMBER THE BEGINNING ONLY
6569                   *
6570  4B94- A9 FE      COPNUM  LDA =<LINBUF
6571  4B96- 85 5A              STA TEMP8
6572  4B98- A9 07              LDA =>LINBUF
6573  4B9A- 85 5B              STA TEMP8+1
6574  4B9C- A5 61              LDA STPROG      BEGIN OF TEXT
6575  4B9E- 85 58              STA TEMP1
6576  4BA0- A5 62              LDA STPROG+1
6577  4BA2- 85 59              STA TEMP1+1
6578  4BA4- 20 D3 4C           JSR SETFAC      SET NEW LINE # CNTR

----------------------------------------------------------------------

GRAPHIC BASIC - FILE HANDLING      07/01/82   R65 ASSEMBLER  PAGE 43

6579                   *
6580  4BA7- A0 03      COP10   LDY =3
6581  4BA9- B1 58      COP20   LDA (TEMP1),Y
6582  4BAB- 91 5A              STA (TEMP8),Y
6583  4BAD- B9 95 00           LDA MANT-3,Y
6584  4BB0- 91 58              STA (TEMP1),Y
6585  4BB2- 88                 DEY
6586  4BB3- C0 01              CPY =1
6587  4BB5- D0 F2              BNE COP20
6588  4BB7- B1 58              LDA (TEMP1),Y
6589  4BB9- F0 10              BEQ COP80
6590  4BBB- 20 F3 4C           JSR BUPX2
6591  4BBE- AA                 TAX
6592  4BBF- 88                 DEY
6593  4BC0- B1 58              LDA (TEMP1),Y
6594  4BC2- 85 58              STA TEMP1
6595  4BC4- 86 59              STX TEMP1+1
6596  4BC6- 20 DC 4C           JSR ADDSTP
6597  4BC9- D0 DC              BNE COP10
6598                   *
6599  4BCB- A9 FF      COP80   LDA =$FF
6600  4BCD- C8                 INY
6601  4BCE- 91 5A              STA (TEMP8),Y
6602  4BD0- C8                 INY
6603  4BD1- 91 5B              STA (TEMP8+1),Y
6604                   *
6605  4BD3- A5 61      RENN    LDA STPROG
6606  4BD5- 85 A9              STA PC
6607  4BD7- A5 62              LDA STPROG+1
6608  4BD9- 85 AA              STA PC+1
6609  4BDB- D0 03              BNE RN15
6610  4BDD- 20 FD 4C   RN10    JSR GRAB
6611  4BE0- 20 FD 4C   RN15    JSR GRAB
6612  4BE3- D0 09              BNE RN20
6613  4BE5- 20 99 25           JSR CLR1-3
6614  4BE8- 20 3C 24           JSR ADLNP0
6615  4BEB- 4C 7B 23           JMP WARMST
6616  4BEE- 20 FD 4C   RN20    JSR GRAB
6617  4BF1- 20 FD 4C           JSR GRAB
6618  4BF4- 20 FD 4C   RN30    JSR GRAB
6619  4BF7- AA         RN35    TAX
6620  4BF8- F0 E3              BEQ RN10        EOL?
6621                   *
6622  4BFA- A2 04      RN40    LDX =4
6623  4BFC- DD 07 4D   RN45    CMP TOKEN-1,X
6624  4BFF- F0 05             BEQ RN50
6625  4C01- CA                 DEX
6626  4C02- D0 F8              BNE RN45
6627  4C04- F0 EE              BEQ RN30        ALL TRIED, FORGET IT
6628  4C06- A5 A9      RN50    LDA PC

----------------------------------------------------------------------

GRAPHIC BASIC - FILE HANDLING      07/01/82   R65 ASSEMBLER  PAGE 44

6629  4C08- 85 B4              STA SAVPC
6630  4C0A- A5 AA              LDA PC+1
6631  4C0C- 85 B5              STA SAVPC+1
6632  4C0E- 20 00 27           JSR FETCH
6633  4C11- B0 E4              BCS RN35
6634  4C13- 20 44 28           JSR FETCHI
6635  4C16- 20 4C 4C           JSR FINUM
6636  4C19- A5 B4              LDA SAVPC
6637  4C1B- 85 A9              STA PC
6638  4C1D- A5 B5              LDA SAVPC+1
6639  4C1F- 85 AA              STA PC+1
6640  4C21- A0 00              LDY =0
6641  4C23- A2 00              LDX =0
6642                   *
6643  4C25- BD 01 01   RN60    LDA $101,X
6644  4C28- F0 0F              BEQ RN70
6645  4C2A- 48                 PHA
6646  4C2B- 20 00 27           JSR FETCH
6647  4C2E- 90 03              BCC RN65
6648  4C30- 20 83 4C           JSR MOVUP
6649  4C33- 68         RN65    PLA
6650  4C34- 91 A9              STA (PC),Y
6651  4C36- E8                 INX
6652  4C37- D0 EC              BNE RN60
6653                   *
6654  4C39- 20 00 27   RN70    JSR FETCH
6655  4C3C- B0 08      RN75    BCS RN80
6656  4C3E- 20 A5 4C   RN78    JSR MOVDWN
6657  4C41- 20 06 27           JSR FETCH1
6658  4C44- 90 F8              BCC RN78
6659  4C46- C9 2C      RN80    CMP =','
6660  4C48- F0 BC              BEQ RN50
6661  4C4A- D0 AB              BNE RN35
6662                   *
6663                   *
6664                   * FIND OLD # IN BUFFER, GENERATE A NEW
6665                   * LINE #
6666                   *
6667  4C4C- 20 D3 4C   FINUM   JSR SETFAC
6668  4C4F- A9 00              LDA =<BUFFER
6669  4C51- 85 5A              STA TEMP8
6670  4C53- A9 08              LDA =>BUFFER
6671  4C55- 85 5B              STA TEMP8+1
6672  4C57- A0 01      FN10    LDY =1
6673  4C59- B1 5A              LDA (TEMP8),Y
6674  4C5B- C5 06              CMP INTEG+1
6675  4C5D- F0 15              BEQ FN50
6676  4C5F- C9 FF              CMP =$FF
6677  4C61- D0 18              BNE FN60
6678  4C63- 85 98              STA MANT

----------------------------------------------------------------------

GRAPHIC BASIC - FILE HANDLING      07/01/82   R65 ASSEMBLER  PAGE 45

6679  4C65- 85 97              STA MANT-1
6680  4C67- A5 97      FN20    LDA MANT-1
6681  4C69- 85 99              STA MANT+1
6682  4C6B- A2 90              LDX =$90
6683  4C6D- 38                 SEC
6684  4C6E- 20 3C 35           JSR FLOAT
6685  4C71- 4C 9D 47           JMP OUTCON
6686                   *
6687  4C74- 88         FN50    DEY
6688  4C75- B1 5A              LDA (TEMP8),Y
6689  4C77- C5 05              CMP INTEG
6690  4C79- F0 EC              BEQ FN20
6691  4C7B- 20 DC 4C   FN60    JSR ADDSTP
6692  4C7E- 20 F3 4C           JSR BUPX2
6693  4C81- D0 D4              BNE FN10
6694                   *
6695                   *
6696                   * MOVE TEXT UP ONE CHAR
6697                   *
6698  4C83- 20 C2 4C   MOVUP   JSR SETPTR
6699  4C86- A0 00      MU10    LDY =0
6700  4C88- B1 58              LDA (TEMP1),Y
6701  4C8A- C8                 INY
6702  4C8B- 91 58              STA (TEMP1),Y
6703  4C8D- 20 E8 4C           JSR CMPX
6704  4C90- D0 08              BNE MU40
6705  4C92- E6 63              INC STVAR
6706  4C94- D0 02              BNE MU20
6707  4C96- E6 64              INC STVAR+1
6708                   *
6709  4C98- 88         MU20    DEY
6710  4C99- 60                 RTS
6711  4C9A- A4 58      MU40    LDY TEMP1
6712  4C9C- D0 02              BNE MU60
6713  4C9E- C6 59              DEC TEMP1+1
6714  4CA0- C6 58      MU60    DEC TEMP1
6715  4CA2- 4C 86 4C           JMP MU10
6716                   *
6717                   *
6718                   * MOVE TEXT DOWN ONE CHAR
6719                   *
6720  4CA5- 20 C2 4C   MOVDWN  JSR SETPTR
6721  4CA8- A0 01      MD10    LDY =1
6722  4CAA- B1 5A              LDA (TEMP8),Y
6723  4CAC- 88                 DEY
6724  4CAD- 91 5A              STA (TEMP8),Y
6725  4CAF- 20 E8 4C           JSR CMPX
6726  4CB2- F0 05              BEQ MD30
6727  4CB4- 20 F6 4C   MD20    JSR BUPX1
6728  4CB7- D0 EF              BNE MD10

----------------------------------------------------------------------

GRAPHIC BASIC - FILE HANDLING      07/01/82   R65 ASSEMBLER  PAGE 46

6729  4CB9- A4 63      MD30    LDY STVAR
6730  4CBB- D0 02              BNE MD35
6731  4CBD- C6 64              DEC STVAR+1
6732  4CBF- C6 63      MD35    DEC STVAR
6733  4CC1- 60         MD40    RTS
6734                   *
6735                   *
6736                   * SET POINTER FOR MOVE
6737                   *
6738  4CC2- A5 63      SETPTR  LDA STVAR
6739  4CC4- 85 58              STA TEMP1
6740  4CC6- A5 64              LDA STVAR+1
6741  4CC8- 85 59              STA TEMP1+1
6742  4CCA- A5 A9              LDA PC
6743  4CCC- 85 5A              STA TEMP8
6744  4CCE- A5 AA              LDA PC+1
6745  4CD0- 85 5B              STA TEMP8+1
6746  4CD2- 60                 RTS
6747                   *
6748                   *
6749                   * SETUP MANT TO GENERATE NEW LINE #'S
6750                   *
6751  4CD3- A5 B0      SETFAC  LDA BEGIN
6752  4CD5- 85 97              STA MANT-1
6753  4CD7- A5 B1              LDA BEGIN+1
6754  4CD9- 85 98              STA MANT
6755  4CDB- 60                 RTS
6756                   *
6757                   *
6758                   * ADD STEP TO MANT
6759                   *
6760  4CDC- A5 97      ADDSTP  LDA MANT-1
6761  4CDE- 18                 CLC
6762  4CDF- 65 B2              ADC STEP
6763  4CE1- 85 97              STA MANT-1
6764  4CE3- 90 02              BCC ARTS
6765  4CE5- E6 98              INC MANT
6766  4CE7- 60         ARTS    RTS
6767                   *
6768                   *
6769                   * COMPARE THE TWO INDICES
6770                   * Z-FLAG SET OF EQUAL
6771                   *
6772  4CE8- A5 58      CMPX    LDA TEMP1
6773  4CEA- C5 5A              CMP TEMP8
6774  4CEC- D0 04              BNE CRTS
6775  4CEE- A5 59              LDA TEMP1+1
6776  4CF0- C5 5B              CMP TEMP8+1
6777  4CF2- 60         CRTS    RTS
6778                   *

----------------------------------------------------------------------

GRAPHIC BASIC - FILE HANDLING      07/01/82   R65 ASSEMBLER  PAGE 47

6779                   *
6780                   * INCREMENT TEMP8 1 OR 2
6781                   *
6782  4CF3- 20 F6 4C   BUPX2   JSR BUPX1
6783  4CF6- E6 5A      BUPX1   INC TEMP8
6784  4CF8- D0 02              BNE BRTS
6785  4CFA- E6 5B              INC TEMP8+1
6786  4CFC- 60         BRTS    RTS
6787                   *
6788                   *
6789                   * GET A CHAR, SET Z FLAG
6790                   *
6791  4CFD- A0 00      GRAB    LDY =0
6792  4CFF- E6 A9             INC PC
6793  4D01- D0 02              BNE GR10
6794  4D03- E6 AA              INC PC+1
6795  4D05- B1 A9      GR10    LDA (PC),Y
6796  4D07- 60                 RTS
6797                   *
6798                   *
6799                   * TABLE OF TOKENS
6800                   *
6801  4D08- B4         TOKEN   BYT $B4         THEN
6802  4D09- 89                 BYT $89         GOTO
6803  4D0A- 8D                 BYT $8D         GOSUB
6804  4D0B- 8C                 BYT $8C         RESTORE
6805                   *
6806                           TIT GRAPHIC BASIC - GRAPHPACK
6807                           PAG

----------------------------------------------------------------------

GRAPHIC BASIC - GRAPHPACK          07/01/82   R65 ASSEMBLER  PAGE 48

6808                   *
6809                   **************************
6810                   * R65 SYSTEM GRAPHPACK 2 *
6811                   **************************
6812                   *
6813                   * VERSION FOR R65 GRAPHIC BASIC V6.2
6814                   *
6815                   * SUBROUTINES FOR GRAPHIC DISPLAY ON THE R65
6816                   * VIDEO INTERFACE
6817                   *
6818                   * INIT          INITIALIZE GRAPHIC DISPLAY AND
6819                   *               CRT MEMORY
6820                   * CLEAR         CLEAR GRAPHIC DISPLAY AND SET
6821                   *               GRAPHIC CURSOR TO (0/0)
6822                   * MOVE (X,Y)    MOVE GRAPHIC CURSOR TP (X,Y)
6823                   * PLOT (X,Y)    PLOT A DOT AT (X,Y) AND MOVE
6824                   *               GRAPHICS CURSOR
6825                   * DRAW (X,Y)    DRAW A STRAIGHT LINE FROM THE
6826                   *               CURRENT POSITION OF THE GRAPHIC
6827                   *               CURSOR TO (X,Y) AND MOVE THE
6828                   *               GRAPHIC CURSOR
6829                   * CHAR (A)      SET STANDARD UPPER CASE ASCII
6830                   *               CHAR IN A TO CURRENT POSITION
6831                   *               OF THE GRAPHIC CURSOR, INCRE-
6832                   *               MENT THE X-POSITION BY 8
6833                   *               8*8 MATRIX IS USED
6834                   *
6835                   * COORDINATES:
6836                   *
6837                   * THE (0/0) IS IN THE UPPER LEFT, INCREMENTING
6838                   * X TO THE RIGHT, INCREMENTING Y DOWN. IN GRAPHI
6839                   * BASIC, INCREMENTING Y GOES UP
6840                   *
6841                   * 0 <= X <= 223         0 <= Y <= 117
6842                   *
6843                   * COORDINATES, WHICH EXCEED THE LIMITS, ARE
6844                   * TRUNCATED TO THE MAXIMAL VALUE
6845                   *
6846                   *
6847                   * PLOT MODE FLAG: (PRESET TO 0 BY INIT)
6848                   * BIT 7:        0 PLOT WHITE
6849                   *               1 PLOT BLACK
6850                   * BIT 6:        0 NORMAL DRAWING MODE
6851                   *                1 EXCLUSIVE OR DRAWING
6852                   *
6853                   *
6854                   *
6855                   *
6856                   *
6857                   VIPNT2  EQU $EB         SECOND VIDEO POINTER

----------------------------------------------------------------------

GRAPHIC BASIC - GRAPHPACK          07/01/82   R65 ASSEMBLER  PAGE 49

6858                   *
6859                   *
6860                   * CALLS TO SYSTEM SUBROUTINES
6861                   *****************************
6862                   *
6863  4D0C- 4C 45 E2   FILL    JMP $E245
6864                   *
6865                   *
6866                   * INIT
6867                   ******
6868                   * CONFIGURE VIDEO MEMORY FOR SWAPPED ALPHA
6869                   * AND GRAPHICS DISPLAY, SET THE GRAPHIC
6870                   * CURSOR TP (0/0)AND CLEAR THE GRAPHIC MEMORY
6871                   *
6872                   *
6873  4D0F- 20 1E E0   INITP   JSR IGRAPH
6874                   *
6875  4D12- A9 07              LDA =$07
6876  4D14- 85 B8              STA GRPAGE
6877  4D16- A9 00              LDA =0
6878  4D18- 85 AB              STA PLMODE      CLEAR MODE FLAGS
6879                   *
6880                   *
6881                   * CLEAR
6882                   *******
6883                   * CLEAR GRAPHIC DISPLAY AND MOVE GRAPHIC
6884                   * CURSOR TO (0/0)
6885                   *
6886  4D1A- AD 80 17   CLEARP  LDA VFLAG
6887  4D1D- 29 20              AND =$20
6888  4D1F- D0 01              BNE *+3
6889  4D21- 60                 RTS
6890  4D22- A5 B8              LDA GRPAGE
6891  4D24- A8                 TAY
6892  4D25- 18                 CLC
6893  4D26- 69 0C              ADC =$C         12 PAGES GRAPHIC
6894  4D28- A2 E8              LDX =$E8
6895  4D2A- 86 EB              STX VIPNT2
6896  4D2C- 85 EC              STA VIPNT2+1
6897  4D2E- A9 00              LDA =0
6898  4D30- AA                 TAX
6899  4D31- 20 0C 4D           JSR FILL
6900  4D34- A0 75              LDY =117
6901  4D36- A2 00              LDX =0
6902  4D38- 84 AF              STY YCURS
6903  4D3A- 86 AE              STX XCURS
6904  4D3C- 60                 RTS
6905                   *
6906                   *
6907                   * MOVE (X,Y)

----------------------------------------------------------------------

GRAPHIC BASIC - GRAPHPACK          07/01/82   R65 ASSEMBLER  PAGE 50

6908                   ************
6909                   * MOVE GRAPHIC SURSOR TO X,Y. TEST DISPLAY
6910                   * LIMITS
6911                   *
6912  4D3D- 20 45 4D   MOVEP   JSR LIMIT
6913  4D40- 86 AE              STX XCURS
6914  4D42- 84 AF              STY YCURS
6915  4D44- 60                 RTS
6916                   *
6917                   *
6918  4D45- E0 E0      LIMIT   CPX =224
6919  4D47- 90 02              BCC *+4
6920  4D49- A2 DF              LDX =223
6921  4D4B- C0 76              CPY =118
6922  4D4D- 90 02              BCC *+4
6923  4D4F- A0 00              LDY =0
6924  4D51- 60                 RTS
6925                   *
6926                   *
6927                   * PLOT (X,Y)
6928                   ************
6929                   * MOVE GRAPHIC CURSOR TO (X,Y), TEST DISPLAY
6930                   * LIMITS AND SET THE DOT AT (X,Y)
6931                   *
6932  4D52- 20 3D 4D   PLOTP   JSR MOVEP
6933                   *
6934  4D55- A9 1C      PLOT11  LDA =28         Y*28
6935  4D57- 78                 SEI
6936  4D58- 8D E0 14           STA MULTA
6937                   *
6938  4D5B- 8C E1 14   PLOT12  STY MULTB
6939  4D5E- 8A                 TXA
6940  4D5F- 4A                 LSR A
6941  4D60- 4A                 LSR A
6942  4D61- 4A                 LSR A           A=X/8
6943  4D62- 18                 CLC
6944  4D63- 6D E2 14           ADC MULTR
6945  4D66- 85 AC              STA GRPNT       GRPNT=GRPAGE+28*Y+X/8
6946  4D68- AD E3 14           LDA MULTR+1
6947  4D6B- 58                 CLI
6948  4D6C- 65 B8              ADC GRPAGE
6949  4D6E- 85 AD              STA GRPNT+1
6950  4D70- 8A                 TXA
6951  4D71- 29 07              AND =7
6952  4D73- AA                 TAX
6953  4D74- BD F1 4E           LDA GRMASK,X
6954  4D77- A2 00              LDX =0
6955  4D79- 24 AB              BIT PLMODE
6956  4D7B- 70 0E              BVS PLOT14
6957  4D7D- 30 05              BMI PLOT13

----------------------------------------------------------------------

GRAPHIC BASIC - GRAPHPACK          07/01/82   R65 ASSEMBLER  PAGE 51

6958  4D7F- 01 AC              ORA (GRPNT,X)
6959  4D81- 95 AC              STA GRPNT,X
6960  4D83- 60                 RTS
6961                   *
6962  4D84- 49 FF      PLOT13  EOR =$FF
6963  4D86- 21 AC              AND (GRPNT,X)
6964  4D88- 81 AC              STA (GRPNT,X)
6965  4D8A- 60                 RTS
6966                   *
6967  4D8B- 41 AC      PLOT14  EOR (GRPNT,X)
6968  4D8D- 81 AC              STA (GRPNT,X)
6969  4D8F- 60                 RTS
6970                   *
6971                   *
6972                   * DRAW (X,Y)
6973                   ************
6974                   * DRAW A LINE FROM CURRENT POSITION OF THE
6975                   * GRAPHIC CURSOR TO (X,Y). SET GRAPHIC CUR-
6976                   * SOR TO X,Y. X AND Y ARE SAVED, IF IN LIMITS.
6977                   *
6978  4D90- 20 45 4D   DRAWP   JSR LIMIT
6979  4D93- 8A                 TXA
6980  4D94- 38                 SEC
6981  4D95- E5 AE              SBC XCURS
6982  4D97- 85 B0              STA XINCR
6983  4D99- 85 B7              STA LENGHT
6984  4D9B- A9 00              LDA =0          MOVE CARRY
6985  4D9D- E9 00              SBC =0
6986  4D9F- 85 B1              STA XINCR+1
6987  4DA1- F0 07              BEQ DRAW1       LENGHT=ABS(XINCR)
6988  4DA3- A9 00              LDA =0
6989  4DA5- 38                 SEC
6990  4DA6- E5 B7              SBC LENGHT
6991  4DA8- 85 B7              STA LENGHT
6992                   *
6993  4DAA- 98         DRAW1   TYA
6994  4DAB- 38                 SEC
6995  4DAC- E5 AF              SBC YCURS
6996  4DAE- 85 B2              STA YINCR
6997  4DB0- A9 00              LDA =0          MOVE CARRY
6998  4DB2- E9 00              SBC =0
6999  4DB4- 85 B3              STA YINCR+1
7000                   *
7001                    * BASIC8:A ORIGINAL 7/1/1982, RECOVERED 3/2018
7002  4DB6- A9 FF              LDA =$FF
7003  4DB8- 85 B6              STA GRCNT
7004  4DBA- A5 B2              LDA YINCR
7005  4DBC- 10 05              BPL *+7
7006  4DBE- A9 00              LDA =0
7007  4DC0- 38                 SEC

----------------------------------------------------------------------

GRAPHIC BASIC - GRAPHPACK          07/01/82   R65 ASSEMBLER  PAGE 52

7008  4DC1- E5 B2              SBC YINCR
7009  4DC3- C5 B7              CMP LENGHT      LENGHT=ABS(YINCR)
7010  4DC5- 90 02              BCC *+4
7011  4DC7- 85 B7              STA LENGHT
7012  4DC9- A2 07              LDX =7
7013  4DCB- A5 B7              LDA LENGHT
7014  4DCD- DD F0 4E   DRAW2   CMP GRMASK-1,X  COMPUTE NEXT POWER OF 2
7015  4DD0- 90 05              BCC DRAW3
7016  4DD2- CA                 DEX
7017  4DD3- D0 F8              BNE DRAW2
7018                   *
7019  4DD5- F0 0D              BEQ DRAW4       ALLWAYS TAKEN
7020                   *
7021  4DD7- 06 B0      DRAW3   ASL XINCR       DOUBLE INCREMENTS
7022  4DD9- 26 B1              ROL XINCR+1
7023  4DDB- 06 B2              ASL YINCR
7024  4DDD- 26 B3              ROL YINCR+1
7025  4DDF- 46 B6              LSR GRCNT       AND HALF NO OF POINTS
7026  4DE1- CA                 DEX
7027  4DE2- D0 F3              BNE DRAW3
7028                   *
7029  4DE4- E6 B6      DRAW4   INC GRCNT
7030                   *
7031  4DE6- A9 80              LDA =$80        ROUND
7032  4DE8- 85 B4              STA XLOW
7033  4DEA- 85 B5              STA YLOW
7034                   *
7035  4DEC- A6 AE              LDX XCURS
7036  4DEE- A4 AF              LDY YCURS
7037  4DF0- 20 55 4D           JSR PLOT11      PLOT START POINT
7038                   *
7039  4DF3- 18         DRAWLP  CLC             DRAW LOOP
7040  4DF4- A5 B4              LDA XLOW        COMPUTE NEX X
7041  4DF6- 65 B0              ADC XINCR
7042  4DF8- 85 B4              STA XLOW
7043  4DFA- A5 AE              LDA XCURS
7044  4DFC- 65 B1              ADC XINCR+1
7045  4DFE- C5 AE             CMP XCURS
7046  4E00- F0 19              BEQ DRAW6
7047  4E02- 85 AE              STA XCURS
7048  4E04- AA                 TAX
7049                   *
7050  4E05- 18                 CLC
7051  4E06- A5 B5              LDA YLOW
7052  4E08- 65 B2              ADC YINCR
7053  4E0A- 85 B5              STA YLOW
7054  4E0C- A5 AF              LDA YCURS
7055  4E0E- 65 B3              ADC YINCR+1
7056  4E10- 85 AF      DRAW5   STA YCURS
7057  4E12- A8                 TAY             AND MOVE TO Y

----------------------------------------------------------------------

GRAPHIC BASIC - GRAPHPACK          07/01/82   R65 ASSEMBLER  PAGE 53

7058                   *
7059  4E13- 20 5B 4D           JSR PLOT12      PLOT THE DOT
7060  4E16- C6 B6              DEC GRCNT
7061  4E18- D0 D9              BNE DRAWLP
7062  4E1A- 60                 RTS
7063                   *
7064  4E1B- AA         DRAW6   TAX
7065  4E1C- 18                 CLC
7066  4E1D- A5 B5              LDA YLOW
7067  4E1F- 65 B2              ADC YINCR
7068  4E21- 85 B5              STA YLOW
7069  4E23- A5 AF              LDA YCURS
7070  4E25- 65 B3              ADC YINCR+1
7071  4E27- C5 AF              CMP YCURS
7072  4E29- D0 E5              BNE DRAW5
7073  4E2B- F0 E9              BEQ DRAW5+6     ALLWAYS TAKEN
7074                   *
7075                   *
7076                   * CHAR (A)
7077                   **********
7078                   * SET STANDARD UPPER CASE ASCII CHAR I A
7079                   * TO THE CURRENT POSITION OF THE GRAPHIC
7080                   * CURSOR, THEN MOVE 8 POSITIONS RIGHT
7081                   *
7082  4E2D- A2 4E      CHARP   LDX =>CHARTB    COMPUTE TABLE POINTER
7083  4E2F- 86 B1              STX XINCR+1
7084  4E31- 0A                 ASL A
7085  4E32- 0A                 ASL A
7086  4E33- 0A                 ASL A           8*ASCII CODE
7087  4E34- 90 02              BCC *+4
7088  4E36- E6 B1              INC XINCR+1
7089  4E38- 18                 CLC             ADD BASE
7090  4E39- 69 F9              ADC =<CHARTB
7091  4E3B- 85 B0              STA XINCR
7092  4E3D- 90 02              BCC *+4
7093  4E3F- E6 B1              INC XINCR+1
7094                   *
7095                   * CHAR1: ENTRY FOR ADDITIONAL SYMBOLS
7096                   *
7097  4E41- A6 AE      CHAR1   LDX XCURS
7098  4E43- E0 D8              CPX =216
7099  4E45- 90 02              BCC *+4
7100  4E47- A2 D8              LDX =216
7101  4E49- A4 AF              LDY YCURS
7102  4E4B- C0 08              CPY =8
7103  4E4D- B0 02              BCS *+4
7104  4E4F- A0 08              LDY =8
7105                   *
7106  4E51- 8A                 TXA             ADD 6 TO XCURS
7107  4E52- 18                 CLC

----------------------------------------------------------------------

GRAPHIC BASIC - GRAPHPACK          07/01/82   R65 ASSEMBLER  PAGE 54

7108  4E53- 69 06              ADC =6
7109  4E55- 85 AE              STA XCURS
7110                   *
7111  4E57- A9 1C              LDA =28         COMPUTE CRT POINTER
7112  4E59- 78                 SEI
7113  4E5A- 8D E0 14           STA MULTA
7114  4E5D- 8C E1 14           STY MULTB
7115  4E60- 8A                 TXA
7116  4E61- 4A                 LSR A
7117  4E62- 4A                 LSR A
7118  4E63- 4A                 LSR A
7119  4E64- 18                 CLC
7120  4E65- 6D E2 14           ADC MULTR
7121  4E68- 85 AC              STA GRPNT
7122  4E6A- AD E3 14           LDA MULTR+1
7123  4E6D- 58                 CLI
7124  4E6E- 65 B8              ADC GRPAGE
7125  4E70- 85 AD              STA GRPNT+1
7126  4E72- 8A                 TXA
7127  4E73- 29 07              AND =7
7128  4E75- 49 07              EOR =7
7129  4E77- 85 B4              STA XLOW        XLOW=X BIT OFFSET
7130                   *
7131  4E79- A2 07              LDX =7
7132  4E7B- 86 B6              STX GRCNT
7133                   *
7134  4E7D- A9 00      CHAR2   LDA =0          LINE LOOP TOP
7135  4E7F- 85 B2              STA YINCR
7136  4E81- A4 B6              LDY GRCNT
7137  4E83- B1 B0              LDA (XINCR),Y
7138  4E85- A4 B4              LDY XLOW
7139  4E87- 0A         CHAR3   ASL A           SHIFT LOOP
7140  4E88- 26 B2              ROL YINCR
7141  4E8A- 88                 DEY
7142  4E8B- 10 FA              BPL CHAR3
7143                   *
7144  4E8D- A0 01              LDY =1
7145  4E8F- 24 AB              BIT PLMODE
7146  4E91- 70 10              BVS CHAR3A
7147  4E93- 30 1C              BMI CHAR4
7148  4E95- 11 AC              ORA (GRPNT),Y  PLOT NORMAL MODE
7149  4E97- 91 AC              STA (GRPNT),Y
7150  4E99- 88                 DEY
7151  4E9A- A5 B2              LDA YINCR
7152  4E9C- 11 AC              ORA (GRPNT),Y
7153  4E9E- 91 AC              STA (GRPNT),Y
7154  4EA0- 4C C0 4E           JMP CHAR5
7155                   *
7156  4EA3- 51 AC      CHAR3A  EOR (GRPNT),Y
7157  4EA5- 91 AC              STA (GRPNT),Y

----------------------------------------------------------------------

GRAPHIC BASIC - GRAPHPACK          07/01/82   R65 ASSEMBLER  PAGE 55

7158  4EA7- 88                 DEY
7159  4EA8- A5 B2              LDA YINCR
7160  4EAA- 51 AC              EOR (GRPNT),Y
7161  4EAC- 91 AC              STA (GRPNT),Y
7162  4EAE- 4C C0 4E           JMP CHAR5
7163                   *
7164  4EB1- 49 FF      CHAR4   EOR =$FF        PLOT INVERSE MODE
7165  4EB3- 31 AC              AND (GRPNT),Y
7166  4EB5- 91 AC              STA (GRPNT),Y
7167  4EB7- 88                 DEY
7168  4EB8- A5 B2              LDA YINCR
7169  4EBA- 49 FF              EOR =$FF
7170  4EBC- 31 AC              AND (GRPNT),Y
7171  4EBE- 91 AC              STA (GRPNT),Y
7172                   *
7173  4EC0- A5 AC      CHAR5   LDA GRPNT       COMPUTE NEXT CRT POINTER
7174  4EC2- 38                 SEC
7175  4EC3- E9 1C              SBC =28
7176  4EC5- 85 AC              STA GRPNT
7177  4EC7- B0 02              BCS *+4
7178  4EC9- C6 AD              DEC GRPNT+1
7179                   *
7180  4ECB- C6 B6              DEC GRCNT       COUNT LINE
7181  4ECD- 10 AE              BPL CHAR2
7182  4ECF- 60                 RTS
7183                   *
7184                   * PLOT NEXT
7185                   ***********
7186                   * COPY NEW BUFFER AREA TO VIDEO MEMORY
7187                   *
7188  4ED0- A9 00      PNEXT   LDA =0
7189  4ED2- 85 B0              STA XINCR
7190  4ED4- 85 B2              STA YINCR
7191  4ED6- A9 13              LDA =$13
7192  4ED8- 85 B1              STA XINCR+1
7193  4EDA- A9 CF              LDA =$CF
7194  4EDC- 85 B3              STA YINCR+1
7195  4EDE- A2 0D              LDX =13
7196  4EE0- A0 00      PNEXT1  LDY =0
7197  4EE2- B1 B0      PNEXT2  LDA (XINCR),Y
7198  4EE4- 91 B2              STA (YINCR),Y
7199  4EE6- 88                 DEY
7200  4EE7- D0 F9              BNE PNEXT2
7201  4EE9- C6 B1              DEC XINCR+1
7202  4EEB- C6 B3              DEC YINCR+1
7203  4EED- CA                 DEX
7204  4EEE- D0 F0              BNE PNEXT1
7205  4EF0- 60                 RTS
7206                   *
7207  4EF1- 80 40 20   GRMASK  BYT $80,$40,$20

----------------------------------------------------------------------

GRAPHIC BASIC - GRAPHPACK          07/01/82   R65 ASSEMBLER  PAGE 56

7208  4EF4- 10 08 04           BYT $10,$08,$04
7209  4EF7- 02 01              BYT $02,$01
7210                   *
7211                   *
7212                   * CHAR TABLE
7213                   ************
7214                   *
7215  4EF9- 0E 11 07   CHARTB  BYT $0E,$11,$07         @
7216  4EFC- 15 17 10           BYT $15,$17,$10
7217  4EFF- 0E 00             BYT $0E,$00
7218  4F01- 0E 11 11           BYT $0E,$11,$11         A
7219  4F04- 1F 11 11           BYT $1F,$11,$11
7220  4F07- 11 00              BYT $11,$00
7221  4F09- 1E 11 11           BYT $1E,$11,$11         B
7222  4F0C- 1E 11 11           BYT $1E,$11,$11
7223  4F0F- 1E 00              BYT $1E,$00
7224  4F11- 0E 11 10           BYT $0E,$11,$10         C
7225  4F14- 10 10 11           BYT $10,$10,$11
7226  4F17- 0E 00              BYT $0E,$00
7227  4F19- 1C 12 11   ASCD    BYT $1C,$12,$11         D
7228  4F1C- 11 11 12           BYT $11,$11,$12
7229  4F1F- 1C 00              BYT $1C,$00
7230  4F21- 1F 10 10           BYT $1F,$10,$10         E
7231  4F24- 1E 10 10           BYT $1E,$10,$10
7232  4F27- 1F 00              BYT $1F,$00
7233  4F29- 1F 10 10           BYT $1F,$10,$10         F
7234  4F2C- 1E 10 10           BYT $1E,$10,$10
7235  4F2F- 10 00              BYT $10,$00
7236  4F31- 0E 11 10           BYT $0E,$11,$10         G
7237  4F34- 13 11 11           BYT $13,$11,$11
7238  4F37- 0F 00              BYT $0F,$00
7239  4F39- 11 11 11   ASCH    BYT $11,$11,$11         H
7240  4F3C- 11 11 11           BYT $11,$11,$11
7241  4F3F- 11 00              BYT $11,$00
7242  4F41- 0E 04 04           BYT $0E,$04,$04         I
7243  4F44- 04 04 04           BYT $04,$04,$04
7244  4F47- 0E 00              BYT $0E,$00
7245  4F49- 07 02 02           BYT $07,$02,$02         J
7246  4F4C- 02 12 12           BYT $02,$12,$12
7247  4F4F- 0C 00              BYT $0C,$00
7248  4F51- 11 12 14           BYT $11,$12,$14         K
7249  4F54- 18 14 12           BYT $18,$14,$12
7250  4F57- 11 00              BYT $11,$00
7251  4F59- 10 10 10   ASCL    BYT $10,$10,$10         L
7252  4F5C- 10 10 10           BYT $10,$10,$10
7253  4F5F- 1F 00              BYT $1F,$00
7254  4F61- 11 1B 15           BYT $11,$1B,$15         M
7255  4F64- 15 11 11           BYT $15,$11,$11
7256  4F67- 11 00              BYT $11,$00
7257  4F69- 11 19 19           BYT $11,$19,$19         N

----------------------------------------------------------------------

GRAPHIC BASIC - GRAPHPACK          07/01/82   R65 ASSEMBLER  PAGE 57

7258  4F6C- 15 13 13           BYT $15,$13,$13
7259  4F6F- 11 00              BYT $11,$00
7260  4F71- 0E 11 11           BYT $0E,$11,$11         O
7261  4F74- 11 11 11           BYT $11,$11,$11
7262  4F77- 0E 00              BYT $0E,$00
7263  4F79- 1E 11 11   ASCP    BYT $1E,$11,$11         P
7264  4F7C- 1E 10 10           BYT $1E,$10,$10
7265  4F7F- 10 00              BYT $10,$00
7266  4F81- 0E 11 11           BYT $0E,$11,$11         Q
7267  4F84- 11 15 13           BYT $11,$15,$13
7268  4F87- 0D 00              BYT $0D,$00
7269  4F89- 1E 11 11           BYT $1E,$11,$11         R
7270  4F8C- 1E 14 12           BYT $1E,$14,$12
7271  4F8F- 11 00              BYT $11,$00
7272  4F91- 0F 10 10           BYT $0F,$10,$10         S
7273  4F94- 0E 11 11           BYT $0E,$11,$11
7274  4F97- 1E 00              BYT $1E,$00
7275  4F99- 1F 04 04   ASCT    BYT $1F,$04,$04         T
7276  4F9C- 04 04 04           BYT $04,$04,$04
7277  4F9F- 04 00              BYT $04,$00
7278  4FA1- 11 11 11           BYT $11,$11,$11         U
7279  4FA4- 11 11 11           BYT $11,$11,$11
7280  4FA7- 0E 00              BYT $0E,$00
7281  4FA9- 11 11 11           BYT $11,$11,$11         V
7282  4FAC- 0A 0A 04           BYT $0A,$0A,$04
7283  4FAF- 04 00              BYT $04,$00
7284  4FB1- 11 11 11           BYT $11,$11,$11         W
7285  4FB4- 15 15 1B           BYT $15,$15,$1B
7286  4FB7- 11 00              BYT $11,$00
7287  4FB9- 11 11 0A   ASCX    BYT $11,$11,$0A         X
7288  4FBC- 04 0A 11           BYT $04,$0A,$11
7289  4FBF- 11 00              BYT $11,$00
7290  4FC1- 11 11 11           BYT $11,$11,$11         Y
7291  4FC4- 0E 04 04           BYT $0E,$04,$04
7292  4FC7- 04 00              BYT $04,$00
7293  4FC9- 1F 01 02           BYT $1F,$01,$02         Z
7294  4FCC- 04 08 10           BYT $04,$08,$10
7295  4FCF- 1F 00              BYT $1F,$00
7296  4FD1- 1C 10 10           BYT $1C,$10,$10         [
7297  4FD4- 10 10 10           BYT $10,$10,$10
7298  4FD7- 1C 00              BYT $1C,$00
7299  4FD9- FF FF FF   ASCSLA  BYT $FF,$FF,$FF
7300  4FDC- FF FF FF           BYT $FF,$FF,$FF
7301  4FDF- FF FF              BYT $FF,$FF
7302  4FE1- 07 01 01           BYT $07,$01,$01         ]
7303  4FE4- 01 01 01           BYT $01,$01,$01
7304  4FE7- 07 00              BYT $07,$00
7305  4FE9- 04 0E 15           BYT $04,$0E,$15         ^
7306  4FEC- 04 04 04           BYT $04,$04,$04
7307  4FEF- 04 00              BYT $04,$00

----------------------------------------------------------------------

GRAPHIC BASIC - GRAPHPACK          07/01/82   R65 ASSEMBLER  PAGE 58

7308  4FF1- 00 00 00           BYT $00,$00,$00         _
7309  4FF4- 00 00 00           BYT $00,$00,$00
7310  4FF7- 00 1F              BYT $00,$1F
7311  4FF9- 00 00 00   ASCBLA  BYT $00,$00,$00
7312  4FFC- 00 00 00           BYT $00,$00,$00
7313  4FFF- 00 00             BYT $00,$00
7314  5001- 04 04 04           BYT $04,$04,$04         !
7315  5004- 04 04 00           BYT $04,$04,$00
7316  5007- 04 00              BYT $04,$00
7317  5009- 0A 0A 0A           BYT $0A,$0A,$0A         "
7318  500C- 00 00 00           BYT $00,$00,$00
7319  500F- 00 00              BYT $00,$00
7320  5011- 0A 0A 1F           BYT $0A,$0A,$1F         #
7321  5014- 0A 1F 0A           BYT $0A,$1F,$0A
7322  5017- 0A 00              BYT $0A,$00
7323  5019- 04 0F 14   ASCDOL  BYT $04,$0F,$14         $
7324  501C- 0E 05 1E           BYT $0E,$05,$1E
7325  501F- 04 00              BYT $04,$00
7326  5021- 19 19 02           BYT $19,$19,$02         %
7327  5024- 04 08 13           BYT $04,$08,$13
7328  5027- 13 00              BYT $13,$00
7329  5029- 04 0A 0A           BYT $04,$0A,$0A         &
7330  502C- 0C 15 12           BYT $0C,$15,$12
7331  502F- 0D 00              BYT $0D,$00
7332  5031- 04 08 10           BYT $04,$08,$10         '
7333  5034- 00 00 00           BYT $00,$00,$00
7334  5037- 00 00              BYT $00,$00
7335  5039- 02 04 08   ASCBRA  BYT $02,$04,$08         (
7336  503C- 08 08 04           BYT $08,$08,$04
7337  503F- 02 00              BYT $02,$00
7338  5041- 08 04 02           BYT $08,$04,$02         )
7339  5044- 02 02 04           BYT $02,$02,$04
7340  5047- 08 00              BYT $08,$00
7341  5049- 00 04 15           BYT $00,$04,$15         *
7342  504C- 0E 15 04           BYT $0E,$15,$04
7343  504F- 00 00              BYT $00,$00
7344  5051- 00 04 04           BYT $00,$04,$04         +
7345  5054- 1F 04 04           BYT $1F,$04,$04
7346  5057- 00 00              BYT $00,$00
7347  5059- 00 00 00   ASCCOM  BYT $00,$00,$00         ,
7348  505C- 00 00 08           BYT $00,$00,$08
7349  505F- 08 10              BYT $08,$10
7350  5061- 00 00 00           BYT $00,$00,$00         -
7351  5064- 1F 00 00           BYT $1F,$00,$00
7352  5067- 00 00              BYT $00,$00
7353  5069- 00 00 00           BYT $00,$00,$00         .
7354  506C- 00 00 00           BYT $00,$00,$00
7355  506F- 10 00              BYT $10,$00
7356  5071- 01 01 12           BYT $01,$01,$12         /
7357  5074- 04 08 10           BYT $04,$08,$10

----------------------------------------------------------------------

GRAPHIC BASIC - GRAPHPACK          07/01/82   R65 ASSEMBLER  PAGE 59

7358  5077- 10 00              BYT $10,$00
7359  5079- 0E 11 13   ASC0    BYT $0E,$11,$13         0
7360  507C- 15 19 11           BYT $15,$19,$11
7361  507F- 0E 00              BYT $0E,$00
7362  5081- 04 0C 14           BYT $04,$0C,$14         1
7363  5084- 04 04 04           BYT $04,$04,$04
7364  5087- 0E 00              BYT $0E,$00
7365  5089- 0E 11 01           BYT $0E,$11,$01         2
7366  508C- 02 0C 10           BYT $02,$0C,$10
7367  508F- 1F 00              BYT $1F,$00
7368  5091- 1E 01 02           BYT $1E,$01,$02         3
7369  5094- 04 02 01           BYT $04,$02,$01
7370  5097- 1E 00              BYT $1E,$00
7371  5099- 02 06 0A   ASC4    BYT $02,$06,$0A         4
7372  509C- 12 1F 02           BYT $12,$1F,$02
7373  509F- 02 00              BYT $02,$00
7374  50A1- 1F 10 1E           BYT $1F,$10,$1E         5
7375  50A4- 01 01 11           BYT $01,$01,$11
7376  50A7- 0E 00              BYT $0E,$00
7377  50A9- 07 08 10           BYT $07,$08,$10         6
7378  50AC- 1E 11 11           BYT $1E,$11,$11
7379  50AF- 0E 00              BYT $0E,$00
7380  50B1- 1F 01 02           BYT $1F,$01,$02         7
7381  50B4- 04 08 08           BYT $04,$08,$08
7382  50B7- 08 00              BYT $08,$00
7383  50B9- 0E 11 11   ASC8    BYT $0E,$11,$11         8
7384  50BC- 0E 11 11           BYT $0E,$11,$11
7385  50BF- 0E 00              BYT $0E,$00
7386  50C1- 0E 11 11           BYT $0E,$11,$11         9
7387  50C4- 0F 01 02           BYT $0F,$01,$02
7388  50C7- 1C 00              BYT $1C,$00
7389  50C9- 00 00 00           BYT $00,$00,$00         10
7390  50CC- 04 00 00           BYT $04,$00,$00
7391  50CF- 04 00              BYT $04,$00
7392  50D1- 00 00 00           BYT $00,$00,$00         :
7393  50D4- 08 00 08           BYT $08,$00,$08
7394  50D7- 08 10              BYT $08,$10
7395  50D9- 03 04 08   ASCLES  BYT $03,$04,$08         <
7396  50DC- 10 08 04           BYT $10,$08,$04
7397  50DF- 03 00              BYT $03,$00
7398  50E1- 00 00 1F           BYT $00,$00,$1F         =
7399  50E4- 00 1F 00           BYT $00,$1F,$00
7400  50E7- 00 00              BYT $00,$00
7401  50E9- 18 04 02           BYT $18,$04,$02         >
7402  50EC- 01 02 04           BYT $01,$02,$04
7403  50EF- 18 00              BYT $18,$00
7404  50F1- 1E 11 01           BYT $1E,$11,$01         ?
7405  50F4- 02 04 00           BYT $02,$04,$00
7406  50F7- 04 00              BYT $04,$00
7407                   *

----------------------------------------------------------------------

GRAPHIC BASIC - GRAPHPACK          07/01/82   R65 ASSEMBLER  PAGE 60

7408  50F9-                    END
LABELS=02AB
ERRORS=00
RECORDS=17

----------------------------------------------------------------------

GRAPHIC BASIC - GRAPHPACK          07/01/82   R65 ASSEMBLER  PAGE 61

CROSS REFERENCE MAP:

ABS      3E1E    390E 
ADAPT    2016    24B5 24EC 2538 
ADD      332A    2FE0 32A8 3318 331F 335A 3639 36C8 3E61 3E7D 3F99 3FEC 
                 402E 405A 406E 4884 
ADDEND   3407    33F7 
ADDSTP   4CDC    4BC6 4C7B 
ADD1     3354    3340 
ADD2     3364    3325 333E 
ADD3     33BF    3366 3DAD 3EC9 
ADD4     33EA    339E 
ADD5     33F7    33DB 
ADD9     331B    484D 4897 
ADLNPN   2422    23F1 
ADLNP0   243C    2425 2467 4217 4BE8 
AFILNO   00C3    443A 4455 449A 45A7 45B2 45B7 45C0 45C3 4666 46BB 46D5 
ALPHAD   201C    45D8 45EA 
ANALYZ   24AD    2394 23A1 2514 
ANA10    24E8    24F2 2552 
ANA20    24FC    24BA 24C4 24CC 24D4 251A 251E 253B 
ANA25    2518    24C0 2525 
ANA30    2527    24F6 
ANA35    253E    2504 2534 
AND      39AE    2FEF 
ARGUM    2F75    3995 3C6E 
ARTS     4CE7    4CE3 
ASC      3D9B    392E 
ASCBLA   4FF9    
ASCBRA   5039    
ASCCOM   5059    
ASCD     4F19    
ASCDOL   5019    
ASCH     4F39    
ASCL     4F59    
ASCLES   50D9    
ASCP     4F79    
ASCSLA   4FD9    
ASCT     4F99    
ASCX     4FB9    
ASC0     5079    
ASC4     5099    
ASC8     50B9    
ATN      40DC    3924 
ATN1     410C    40F2 40F4 
AUTO     43FD    21BA 
AUTOIN   00C2    2399 2428 296A 4413 
AUTOIN2  441B    2439 
AUTOTB   2B1D    2AFA 
BEGIN    00B0    4B80 4B84 4CD3 4CD7 

----------------------------------------------------------------------

GRAPHIC BASIC - GRAPHPACK          07/01/82   R65 ASSEMBLER  PAGE 62

BEGINB   0090    22CC 22D3 22DC 22E1 22E5 22F4 22FB 22FF 23B7 23C3 23D7 
                 23E3 23E8 23FD 2405 2C13 2C15 2D7D 2D83 
BFUNC    3947    2F72 
BFUNC0   3974    394F 
BFUNC1   3995    3971 3976 3992 
BREAKT   202E    2619 26A2 43ED 46E4 
BRTS     4CFC    4CF8 
BTSTRG   0069    2307 230D 2329 232F 23F7 23F9 25A0 25A2 2921 2925 292B 
                 292D 2931 29A0 29A2 2A7F 2A88 2C60 2C62 2C71 2C73 2C93 
                 2C95 2D39 2D3F 2D85 2D87 3BF9 3BFE 
BUFFER   0800    4B71 4C4F 4C53 
BUPX1    4CF6    4CB4 4CF3 
BUPX2    4CF3    4BBB 4C7E 
CHAR     43B4    42B5 42B9 4643 465A 
CHARA    43C3    43B8 
CHARB    43CC    43C5 43CE 
CHARP    4E2D    43C0 
CHARREG  1785    462C 4633 
CHARTB   4EF9    4E2D 4E39 
CHAR1    4E41    433D 
CHAR2    4E7D    4ECD 
CHAR3    4E87    4E8B 
CHAR3A   4EA3    4E91 
CHAR4    4EB1    4E93 
CHAR5    4EC0    4EA0 4EAE 
CHR      3CED    3930 
CHRSAV   0041    24BC 2516 251C 27F9 27FD 27FF 2801 2803 2805 280B 284E 
                 2872 289F 28A1 28B2 28B6 317F 3188 3190 3195 39B9 39BF 
                 39CB 39D4 3E39 3EE4 3F21 
CLEARP   4D1A    42D3 
CLOSAL   F015    2953 
CLOSE    F012    45AB 
CLOSEBS  457F    21AA 458C 
CLOSE1   458F    457F 
CLOSE2   45A7    4588 45A0 
CLR      2769    21A2 
CLRGRA   200A    
CLR1     259C    2422 276B 2770 4228 4B91 4BE5 
CMPX     4CE8    4C8D 4CAF 
CNTL30   17F2    
COLDST   294A    2000 
COMPAR   354B    32B0 3715 3761 3EDE 47B2 482D 4838 488B 
COMPEB   3BDD    3A79 3A8E 
COMPL    3408    3395 372A 
COMPR1   3583    355F 3567 356E 3575 3580 
COMSTB   203D    24D8 24DC 2677 2679 
CONT     2A04    219E 
CONTE    2A1D    2A04 
COPNUM   4B94    
COPY     4674    21B0 

----------------------------------------------------------------------

GRAPHIC BASIC - GRAPHPACK          07/01/82   R65 ASSEMBLER  PAGE 63

COPY1    469C    4694 
COPY2    46B0    46E7 
COPY3    46BD    46B4 
COPY4    46D8    46CC 
COPY5    46EA    46C2 46C6 
COPY6    46F9    46B9 46D3 
COP10    4BA7    4BC9 
COP20    4BA9    4BB5 
COP80    4BCB    4BB9 
COS      402A    391E 
CRLF     248E    2356 261C 2661 29B6 2AE9 4214 4565 472A 
CRTS     4CF2    4CEC 
CURPOS   00EE    2469 
CURREX   0094    35E1 35F2 35F7 3600 3609 363C 364E 3659 48C3 496B 497F 
                 4988 
CURRSG   009D    2964 35A5 360D 3F7A 3FA0 
CURSEQ   0335    
DATA     27E5    2170 2A34 31F7 3C48 
DATAE    27F2    2809 280D 
DATAER   325B    31E7 
DATPNT   0077    2764 2766 312E 3130 
DDIR     2013    4AA7 
DEF      3C20    2196 
DEFARG   422B    424A 4754 
DEFARG1  4242    4230 4237 
DEFARG2  424A    41C2 4472 46A5 4A1E 
DEF1     3C4E    3C20 3C65 
DEF2     3CC6    3C4B 
DELBAS   4AAD    21C0 
DELETE   F00C    4AB0 
DEVTB    42B5    426D 4272 4279 4B33 4B39 
DIM      39E0    2176 39EB 
DIR      4A95    21BC 
DIRECT   2019    
DIVIDE   37C0    2FE9 36E6 3E68 40D5 40EF 
DIVID0   37D7    3807 
DIVID1   37ED    37DB 37E1 37E7 3805 3809 
DIVID2   37FD    3825 382A 
DIVID3   3828    37F4 37F6 
DIVTEN   36D8    35FD 36DB 36DD 403A 4846 4892 
DIVZ     37B8    37C0 
DRAW     4362    21B8 
DRAWLP   4DF3    4E18 
DRAWP    4D90    4365 
DRAW1    4DAA    4DA1 
DRAW2    4DCD    4DD3 
DRAW3    4DD7    4DD0 4DE2 
DRAW4    4DE4    4DD5 
DRAW5    4E10    4E29 4E2B 
DRAW6    4E1B    4E00 

----------------------------------------------------------------------

GRAPHIC BASIC - GRAPHPACK          07/01/82   R65 ASSEMBLER  PAGE 64

DTSPNT   0079    3136 3138 314D 314F 31C4 31C6 3201 3203 320E 
DYADIC   009F    24D6 24FA 28A3 28A5 28AE 28C2 28C4 28C6 28CB 28CD 28D5 
                 28D7 2AAC 2AAE 2DB6 2DBA 2DBE 2EBC 2EBF 2EC2 2EC5 2EC8 
                 2ECB 2ECF 2EE2 2EE5 2EE9 2F05 2F07 2F56 2F58 3312 3314 
                 332F 3333 3335 3344 3356 335D 3364 336A 336E 3375 33AC 
                 33B0 33C1 33C5 33CB 33D1 33D7 33E0 3405 3426 342A 342C 
                 3448 3456 3463 3485 348D 348F 3491 3495 3499 34C0 34EC 
                 34F3 34FF 3505 350C 3516 351B 3544 357A 3631 3635 36C6 
                 36E1 3728 3737 3743 3755 3759 375B 375D 375F 3777 3779 
                 377E 3780 37A0 37D7 37DD 37E3 37E9 37FD 37FF 3801 3803 
                 380C 3810 3812 3816 3818 381C 381E 3822 3832 384B 3864 
                 388A 38A8 38C6 38CB 38D1 38E8 3A97 3AAB 3ACE 3AD0 3AF0 
                 3AF2 3AFD 3B1E 3B20 3B3E 3B40 
END      2721    203A 2172 30EF 
ENDB     008E    22E8 22EC 22F0 22F6 22FD 2301 2316 23AF 23B3 23DA 23DE 
                 23E1 23EA 2401 240A 2C1D 2C1F 2C24 2C26 2CCD 2CCF 2CD5 
                 2CD7 2CF4 2CF6 2CFB 2CFD 2D17 2D1B 2D89 2D8B 2D93 2D98 
                 2D9A 3AD8 3ADC 3AE0 3AF7 3AFB 3B01 3B6E 3B73 3BE9 3BEB 
                 3F57 3F5E 3F66 40AC 40C1 
ENDRAM   2008    2996 2999 
EOVAR    0065    25AB 25AD 2BDE 2BE2 2C07 2C09 2C29 2C2B 2CC0 2CC4 3A41 
                 3A43 
ERROR    2343    26BF 27B5 27D5 28E4 2A0C 2C04 2C82 2DE9 2EF2 325D 3288 
                 32EA 3441 3700 37BA 3907 3A70 4349 
ERRORM   22A2    236C 236E 237B 237D 273B 273D 32EE 32F0 
ERRSTR   21C6    235C 
EXCODE   26DF    239B 26B7 
EXCOD1   26E8    26E2 2A3F 308B 
EXP      0097    28BF 28E7 2A2D 2AB3 2DB1 2EA3 2ED1 3316 333C 3342 3350 
                 3368 33BA 33ED 33F5 33F9 349B 34BE 34E8 34EF 3507 3514 
                 351E 3542 355D 359A 35D3 35DA 3637 36AE 36CB 370B 371A 
                 372E 3771 3784 378C 37C8 37CA 37CF 3850 385D 3873 3DF2 
                 3E21 3E35 3E54 3E5B 3F15 3F30 3F32 4009 400F 40E4 4392 
                 4812 4A80 
EXPF     3F00    391C 3EC3 3EF5 
EXPOUT   48C0    48A9 48AE 48B2 
EXPRES   2DEC    2A1E 2A58 2B04 2E7D 2F78 3030 305A 36EC 3954 397B 3989 
                 3BCD 3CAC 3E0D 3E3E 4188 4239 4385 43D8 
EXPR1    2E07    2E23 2F0F 
EXPR2    2E26    2E0A 2E0E 
EXPR2A   2E3F    2E66 2E6D 2F82 
EXPR3    2E56    2E28 
EXPR4    2E68    2E49 2E4F 
EXPR5    2E80    2E77 3063 
EXPR6    2EA9    2E2A 2E2E 2E43 2E52 
EXPR7    2EB7    2E54 2E6B 
EXPR8    2ED1    2EAC 
EXPSTR   2F4A    30C9 
EXP1     3FA5    3F00 3F02 3F43 3F45 
EXRUN    26A2    26E5 2790 306F 32CE 

----------------------------------------------------------------------

GRAPHIC BASIC - GRAPHPACK          07/01/82   R65 ASSEMBLER  PAGE 65

FERROR   4552    4207 4452 457D 45A4 
FERR1    4452    445E 4470 447B 
FERSTR   44AB    456B 
FERTB    4535    454E 
FETCH    2700    2389 25FB 26DF 2716 287A 2B4A 2B54 2B6E 2B8E 2B99 2BC1 
                 2E20 2F16 2F2E 3057 308E 3172 32DD 35AD 35BA 35D5 36E9 
                 394A 3BCA 4232 42D6 42F2 4303 431D 4324 4A45 4C0E 4C2B 
                 4C39 
FETCHE   271E    26E8 2712 2722 
FETCHI   2844    239E 25EC 25FE 2749 2793 287D 3091 4407 4B7B 4C13 
FETCH1   2706    25E1 25F2 2702 278A 2A21 2A37 2AE4 2B76 2B7D 2E04 3050 
                 3155 31B4 31D0 32D6 36FB 39E8 3A28 3CB8 3D3C 3DD3 4175 
                 4183 41B2 41CB 422B 4344 4356 43A0 43FA 458F 4687 4C41 
FIDRTB   0339    443E 471A 4B1B 
FIDVTB   0341    4714 
FILBU1   0338    
FILCYC   0311    4199 41BC 
FILCY1   0330    419C 41BF 
FILDRV   00DC    41C5 4468 4A9C 
FILEA    031C    415D 4160 420A 420D 
FILEM    473C    46FC 46FE 
FILERR   4543    417F 4497 45AE 45CE 4671 4AB5 
FILERR1  417F    41FC 
FILERR2  457B    454B 
FILES    46FC    21B2 
FILE1    4703    470E 
FILE2    4711    470A 
FILE3    472D    4711 4717 4721 4727 
FILFLG   00DA    4173 41F7 4482 45C7 466A 4AA0 
FILL     4D0C    4D31 
FILLOC   0313    4166 4169 4487 448A 
FILNAM   0301    41A7 41D9 
FILNM1   0320    41AA 41DC 
FILSA    031A    4153 4156 
FILSA1   0331    41EF 41F2 
FILSTP   0312    416E 41FE 448F 
FINUM    4C4C    4C16 
FIRCTB   0351    4724 
FISYTB   0380    4441 449C 44A2 4583 45B4 4705 
FIXOUT   48B4    
FLAG1    0048    25C9 2BB1 2BC7 2BD2 2FFF 3C2B 3C59 
FLOAT    353C    3300 4C6E 
FLOAT1   352F    362E 37B5 
FLOAT2   3537    2FDC 
FLPINF   3703    3711 3713 
FLPINT   370B    2A68 36F2 3938 39B2 39C4 3BD7 43DE 
FLPIN1   371A    3DF8 3E27 47BA 489A 
FLPIN2   3746    371C 
FNERR    4450    459A 46A2 46F9 
FN10     4C57    4C81 

----------------------------------------------------------------------

GRAPHIC BASIC - GRAPHPACK          07/01/82   R65 ASSEMBLER  PAGE 66

FN20     4C67    4C79 
FN50     4C74    4C5D 
FN60     4C7B    4C61 
FOLLOW   2B68    2A2A 2A4F 2B5C 2F75 2F7B 302A 30CE 31D7 3951 3959 3978 
                 3986 398F 39DD 3A31 3C26 3C33 3C38 3C54 3D45 3D62 3E18 
                 4266 4287 4371 4462 45FF 
FOR      2FFD    216C 
FORMAT   49FD    216A 2B57 4A35 
FORMAT1  4A0D    4A07 
FORMAT2  4A13    4A0B 4A31 4A39 
FORMAT3  4A2B    4A0F 
FORMAT4  4A33    4A2D 
FORMCD   00C9    47A1 4850 48A4 494E 
FORMCS   00C8    4436 49C1 4A13 
FORMCT   00CC    4869 487C 
FORMFL   00CB    2B11 4438 49D3 4A1C 
FORMNO   00CA    47D7 485F 4957 4A28 
FORMOUT  49BD    2B0B 3CE1 
FORM1    47C1    47CD 47F2 
FORM10   4970    4950 
FORM11   497D    4967 
FORM12   4983    496D 
FORM2    47DD    47D1 47D5 47D9 
FORM3    47F1    47DB 
FORM4    47FE    47A5 
FORM5    485E    4857 
FORM6    4879    487E 
FORM7    48AD    48A6 48AB 
FORM8    489A    4852 4861 4863 4867 488E 4890 
FOR1     3049    303E 3040 
FRE      3BEE    4AF9 
FUNC     3C65    2F6B 
FUNCTB   390A    399A 399F 
GET      309A    21AC 
GETARR   39EE    2BCD 
GETAR1   39FB    3A2D 
GETAR2   3A45    3A6C 
GETAR3   3A73    3A5E 3A77 
GETAR4   3A87    3A4F 
GETAR5   3AB4    3AD6 
GETAR6   3B18    3A84 3B55 
GETAR7   3B39    3ADA 3AE5 3B2C 3B2E 3B34 3BA0 3BA6 3BB3 
GETAR8   3B7B    3ACB 3B15 3B45 3B6A 
GETBCD   4754    4163 4484 
GETBCD1  475F    4776 
GETBCD2  4775    4763 
GETBCD3  477D    4768 476F 
GETBFN   4183    414C 
GETBF1   4188    41D4 
GETBF2   419F    41B0 

----------------------------------------------------------------------

GRAPHIC BASIC - GRAPHPACK          07/01/82   R65 ASSEMBLER  PAGE 67

GETBF3   41C2    41B7 41DF 
GETBF4   41CB    41E8 4465 4A85 4AAD 
GETBF5   41D7    4195 41CE 41D2 
GETCHR   E003    
GETEND   30AF    30E7 45D3 45E7 46F5 
GETFLP   349E    2F2B 2FAE 304D 329B 36E3 3EC0 401F 40C5 4876 
GETGRA   4637    4610 4615 
GETKEY   E000    460D 4612 4637 
GETLIN   E006    
GETLIN0  200D    246B 
GETSU    3BCA    3A03 3BAB 
GETTTY   1E5A    460D 4612 
GETVAR   2B74    2A46 2F89 313E 327A 39E5 3C2D 3C5B 432B 
GETV1    2BBD    2BAB 2BAF 
GETV2    2BDC    2BF9 2BFC 
GETV3    2BFE    2BE4 3A8B 
GETV9    2C41    2BF1 
GOSUB    2776    2184 
GOTO     2793    217C 278D 2A3C 
GOTO1    27AA    279D 27A5 27A8 
GRAB     4CFD    4BDD 4BE0 4BEE 4BF1 4BF4 
GRCNT    00B6    4DB8 4DDF 4DE4 4E16 4E7B 4E81 4ECB 
GRMASK   4EF1    4AE3 4D74 4DCD 
GRPAGE   00B8    4311 4D14 4D22 4D6C 4E6E 
GRPNT    00AC    4AD5 4ADD 4AE8 4D66 4D6E 4D7F 4D81 4D86 4D88 4D8B 4D8D 
                 4E68 4E70 4E95 4E97 4E9C 4E9E 4EA3 4EA5 4EAA 4EAC 4EB3 
                 4EB5 4EBC 4EBE 4EC0 4EC5 4EC9 
GR10     4D05    4D01 
HEADM    29D3    29B9 29BB 
HEXMAX   47F9    47AE 47B0 
ICRTAL   E015    2025 42EA 
ICRTGR   E018    4300 
IF       2A1E    2180 
IGRAPH   E01E    4D0F 
ILLDIR   32E3    309A 30D4 3C23 
INBNUM   0003    241A 294E 
INBUFF   0007    23EF 2474 2482 248A 248C 24FE 2501 2521 253E 2541 30A4 
                 30A8 30DE 311B 3129 312B 3161 3165 
INCHR    461B    3105 315E 46BD 
INCH1    4629    461F 
INCM     3430    34F7 
INFIL    4666    4610 4615 466F 
INITP    4D0F    42C9 
INLIN    2469    2382 3100 4425 
INPDEV   00C1    2968 30AF 30B8 30EA 30F2 3212 3257 45F2 4677 469C 46B0 
INPNT    0043    23A4 23FF 2417 24E2 24F8 2529 39B0 39B7 39BD 39C9 39CD 
                 39D2 39D6 3A2F 3A7C 3AAD 3AD4 3B1A 3B53 3BDD 
INPUT    30BB    2174 
INPUT1   30D4    30C2 30C7 30EC 
INPUT2   30F2    30DB 316B 

----------------------------------------------------------------------

GRAPHIC BASIC - GRAPHPACK          07/01/82   R65 ASSEMBLER  PAGE 68

INPUT3   3103    30F4 3113 3116 3124 
INPUT4   3119    3110 
INSLIN   239E    2392 
INSL1    23E1    23A9 23E6 23ED 
INSSTR   2DB4    2AB0 2EF8 
INSST0   2DC2    28D9 2F02 3D27 
INT      3E21    390C 3ED7 3F1E 4040 
INTEG    0005    2430 2432 2564 256F 2605 2607 260D 260F 2626 262A 279B 
                 2846 2848 2850 285B 2863 2865 2869 286B 286E 2870 2874 
                 2878 2983 30D9 3149 314B 31C8 31CA 3DE6 3DFF 3E01 3E0A 
                 3E47 4149 4245 4247 43FF 4403 4417 4419 475F 4761 4B73 
                 4B77 4B7E 4B82 4C5B 4C77 
INTFLP   2FD2    2FA7 3944 39D8 3C02 3C17 3D8B 3DEB 4AF1 4B08 
INVTB    460D    4602 4607 
ISAVXY   00C6    461B 461D 4622 4624 
ITERAT   3F53    3E76 407B 40F6 
ITERA1   3F6D    3F47 3F63 
ITERA2   3F88    3FA2 
IVECT    00C4    4605 460A 4629 
LED      00F1    270C 
LEFT     3D01    3932 3D35 
LEFT1    3D0E    3D56 3D5C 3D60 
LEN      3D86    3928 3DA5 
LENGHT   00B7    46AE 46C4 4D99 4DA6 4DA8 4DC3 4DC7 4DCB 
LEN1     3D8E    3D86 3D9B 3DA8 
LET      2A42    217A 26EF 3001 
LET0     2A63    31B1 
LET1     2A77    2A60 2A63 31A6 
LET2     2A9A    2A81 2A8A 2A90 2A92 2A98 
LET3     2AB7    2A9E 
LIMIT    4D45    4D3D 4D90 
LINBUF   07FE    4B94 4B98 
LINE     006F    2373 2390 26CF 26D4 2731 2733 2781 2784 2799 27DA 27DD 
                 294C 2A19 2A1B 3022 3025 3250 3252 32BD 32C2 32E3 32F5 
                 32F7 
LINSAV   0071    2735 2737 2A15 2A17 
LIST     25DA    21A0 25F9 2601 
LIST2    2611    2609 2658 
LIST3    2637    266B 266F 269A 
LIST4    265A    2617 262E 
LIST5    2681    2691 2695 
LIST6    2697    2682 269F 
LIST7    266B    264B 
LOAD     41E2    2190 
LOAD1    41EB    4A92 
LOAD9    41E8    2773 41E2 
LOCRM    E00F    2028 
LOG      3E4A    391A 3EEB 
LOGIC    0083    2E02 2E15 2E17 2E1E 2E26 2E64 2E7A 376C 
LOG1     3E8B    3E6B 3E6D 3E72 3E74 40EB 40ED 

----------------------------------------------------------------------

GRAPHIC BASIC - GRAPHPACK          07/01/82   R65 ASSEMBLER  PAGE 69

LOG2     3EA5    3E5D 3E5F 3E64 3E66 3E79 3E7B 3E84 3E86 
MANT     0098    28A7 28A9 28EB 28EF 28F5 28F7 2904 2906 2A6D 2A72 2A7D 
                 2A86 2A8C 2A94 2A9A 2A9C 2AA3 2DA2 2DA4 2DAD 2DAF 2E97 
                 2E9A 2E9D 2EA0 2ED4 2ED7 2EEC 2F8C 2F8E 2F9F 2FA3 2FAA 
                 2FAC 2FD6 2FD8 303A 303C 3086 32F9 32FB 337C 3383 338A 
                 3391 339C 33A0 33A2 33A4 33A6 33A8 33AA 33AE 33C3 33C7 
                 33C9 33CD 33CF 33D3 33D5 33D9 33E2 33E4 33E6 33E8 33FD 
                 33FF 3401 3403 340E 3412 3414 3418 341A 341E 3420 3424 
                 3430 3434 3438 343C 34A6 34AB 34B0 34B9 34D0 34D5 34DA 
                 34E3 352F 3533 3537 353E 3540 3565 356C 3573 357E 36F5 
                 36F9 373E 3746 3748 374A 374C 3773 3775 37A2 37D9 37DF 
                 37E5 37EB 380E 3814 381A 3820 3837 383B 383F 3843 388F 
                 3894 3899 389E 393B 3940 3962 
MATHOP   2E94    3046 
MATHTB   2FDF    2E40 2E68 2E6F 2E73 2E82 
MAXSEQ   0336    430C 
MD10     4CA8    4CB7 
MD20     4CB4    
MD30     4CB9    4CB2 
MD35     4CBF    4CBB 
MD40     4CC1    
MERGE    4A85    21A4 
MID      3D38    3936 
MID1     3D62    3D01 3D2D 3D4B 
MKRM1    22F4    22EE 22F2 22F9 2304 
MKRM2    22FF    22DA 
MKROOM   22C4    240C 2C21 2D8D 
MOVDWN   4CA5    4C3E 
MOVE     4359    21B6 
MOVEP    4D3D    435C 4D52 
MOVUP    4C83    4C30 
MULBT1   38DC    3901 
MULBT2   38E5    38DA 3903 
MULBT9   38BE    38E6 
MULBYT   38A6    388C 3891 3896 389B 38A0 
MULEND   3835    38A3 
MULEXP   384B    37CC 387D 3F4F 
MULEX1   386F    384D 3859 3F1B 
MULT     387B    2FE6 3E88 3EF2 3F04 3F60 3F6A 3F88 3FDE 3FE5 4822 
MULTA    14E0    38C3 3B89 3BAE 4AC7 4D58 4E5A 
MULTB    14E1    38C8 38EB 3B8E 3B99 3BB7 4ACA 4D5B 4E5D 
MULTEN   36B9    3606 361C 483F 4879 
MULTR    14E2    38CE 38D5 38F2 38FB 3B91 3B94 3B9D 3BA3 3BBC 3BC2 4AD2 
                 4AD7 4D63 4D68 4E65 4E6A 
MU10     4C86    4CA2 
MU20     4C98    4C94 
MU40     4C9A    4C90 
MU60     4CA0    4C9C 
NEGATE   36AE    2FF5 3612 3EFD 3F40 4067 4074 40E1 4108 
NEW      2583    21AE 29CD 

----------------------------------------------------------------------

GRAPHIC BASIC - GRAPHPACK          07/01/82   R65 ASSEMBLER  PAGE 70

NEXT     3270    216E 32E0 
NFERR    45A2    45BE 4B66 
NORMAL   3393    3548 3845 3E3B 4011 4A82 
NORM1    339C    33B6 
NOT      3938    2FF8 
NUMBER   358C    2F1B 31AC 3DD6 
NUMBHEX  4A3B    3592 
NUMBH0   4A45    4A6E 
NUMBH1   4A55    4A48 
NUMBH2   4A5D    4A6C 
NUMBH3   4A71    4A4C 4A50 
NUMB0    35AD    359F 35A7 35F0 3626 
NUMB1    35D1    35C1 35C5 
NUMB2    35D5    35BD 35C9 35CD 35CF 365B 
NUMB3    35E6    35B4 
NUMB4    35F2    35B8 35DC 35E3 
NUMB5    3615    35B0 
NUMB6    3629    3623 3E81 
NUMB7    363C    35D8 
NUMCHR   178A    2478 
NUMEXP   36E9    2B2B 3077 396A 3C05 3CED 3D48 3E1B 41B9 4255 439B 43A7 
                 4410 4448 4592 45EF 4674 468A 4A15 4A99 4AB9 4B40 4B8C 
NUMLIN   1789    42E7 
NUMPAD   0001    249E 296E 427C 4298 
ON       3077    218C 
ON1      3086    307D 3081 3096 
OPEN     F00F    4492 
OPENBS   4448    21A8 
OPEN1    4472    
OR       39AA    2FF2 
OUT      4B25    219A 4B45 4B63 
OUTCHR   2FB1    2362 2490 2495 24A4 263B 269C 288F 2B17 2B44 30F8 30FD 
                 4420 4571 46D8 46E1 4739 
OUTCN0   4829    484B 
OUTCN1   4846    4832 483D 
OUTCN2   48E8    48CA 48DB 490C 4910 494A 
OUTCN3   4850    4814 4830 
OUTCN4   494C    4940 4946 
OUTCON   479D    3303 49C3 4C71 
OUTCT1   365E    481E 4820 4829 482B 4834 4836 4887 4889 
OUTCT2   366D    331B 331D 3EBC 3EBE 4056 4058 4872 4874 48EF 48F6 48FD 
                 4904 
OUTDEV   0000    234B 2354 2498 265A 2666 2966 2ADE 3C0F 4277 4283 42A1 
                 455A 4563 45DC 45E5 4697 469E 46C8 46EA 46F3 
OUTEND   49F8    49D5 
OUTFIL   45C3    428E 4292 45CC 4B6E 
OUTINT   32F9    2632 29CA 441B 4732 
OUTLIN   32EE    2378 
OUTMEM   2341    232D 2331 2337 233E 3B3A 
OUTSAV   00CD    4B69 4B6C 

----------------------------------------------------------------------

GRAPHIC BASIC - GRAPHPACK          07/01/82   R65 ASSEMBLER  PAGE 71

OUTSTR   2880    2370 237F 29BD 2AE1 2B0E 30D1 321A 3264 32F2 3306 4700 
OUTZER   49AE    47F6 4981 49AB 
OUT1     4B33    4B51 
OUT2     4B40    4B27 
OUT4     4B6C    4B53 4B58 
OVERFL   343F    33FB 3646 36D0 3848 
OVERF1   3848    37D1 3854 386D 
PADOUT   2498    2897 
PC       00A9    2385 2387 24AD 24E5 2527 2543 25D1 25D7 26A5 26A7 26B1 
                 26C7 26CD 26D2 26D7 26D9 26DD 2700 2704 270A 2727 2729 
                 277B 277E 27A1 27A3 27BC 27C2 27E0 27E3 27EA 27EC 27F0 
                 2807 2A11 2A13 2B6A 2DEC 2DF0 2DF2 2E5A 2E5E 2E60 2F4A 
                 2F4C 2F5A 2F5C 301A 301D 3145 3147 3151 3153 316E 3170 
                 3182 3197 3199 31C0 31C2 31CC 31CE 31E5 31EA 31EF 31F4 
                 326B 326D 32C7 32CC 3654 3C42 3C45 3C97 3C9A 3C9F 3CA4 
                 3CC1 3CC4 3DB0 3DB2 3DBA 3DC3 4BD5 4BD9 4C06 4C0A 4C1B 
                 4C1F 4C34 4CCA 4CCE 4CFF 4D03 4D05 
PEEK     3DE1    3926 
PEEK1    3DEE    3981 3DE1 3E13 3E44 423F 
PI       2F31    2F27 2F29 
PKSTRG   2C8F    231B 2C85 2D9F 3BF5 
PKSTR1   2CD5    2D00 2D03 2D1D 
PKSTR2   2D24    2CC8 
PKSTR3   2D2E    2CAF 2D1F 
PKSTR4   2D5D    2D26 2D2B 2D30 2D3D 2D41 2D45 2D4B 
PKSTR5   2D6D    2CE1 
PLMD     43A0    425C 433A 437D 
PLMD1    43B3    43A5 
PLMODE   00AB    42AD 42C7 4342 4354 43B1 4656 465F 4D18 4D79 4E8F 
PLOT     42C1    21B4 
PLOTAR   436B    434C 4359 4362 
PLOTA1   4385    436B 4374 
PLOTP    4D52    434F 
PLOT0    42CF    42C3 4313 
PLOT1    42D9    42D1 
PLOT11   4D55    4DF0 
PLOT12   4D5B    4E13 
PLOT13   4D84    4D7D 
PLOT14   4D8B    4D7B 
PLOT2    42F5    42DB 42F9 
PLOT3    42FC    42CC 42F7 
PLOT4    4306    42FE 
PLOT5    4316    4308 
PLOT5A   4320    4318 
PLOT5B   4347    4334 4338 
PLOT6    434C    4322 435F 4368 
PNEXT    4ED0    431A 
PNEXT1   4EE0    4EEE 
PNEXT2   4EE2    4EE7 
PNTSAV   0073    25C7 26AB 26AD 272D 272F 2A08 2A0F 3267 3269 

----------------------------------------------------------------------

GRAPHIC BASIC - GRAPHPACK          07/01/82   R65 ASSEMBLER  PAGE 72

PNT1     008B    2958 2D5B 2D71 2D77 2D90 3331 334E 3373 33BF 399D 39A2 
                 39A4 3D66 3D69 3D7D 3D81 3D83 3F10 3F39 
POINTC   0093    35F5 361A 3F71 3F9C 4810 4827 4842 4849 485C 4895 489F 
                 48C5 492A 4942 4954 
POKE     3E04    2198 
POKE1    3E0D    3E04 
PORTB1   1400    295A 295F 
POS      0002    2970 2B1D 2B3B 2FB5 2FBE 3C13 4269 4280 428A 429A 42A7 
POSF     3C05    3914 
POSF1    3C13    3C1D 
POSF2    3C1A    3C11 
POSTB    00BB    2972 2974 2976 2978 3C1A 426B 427E 428C 42A9 
POWER    3EC3    2FEC 
PRC1     2FCF    2FC6 
PREPMO   347D    3309 3327 37BD 3878 
PREPST   2904    2883 2EFF 2F09 376E 377B 3BF2 3D17 3D92 418F 
PREPS0   2934    291F 2923 2927 
PREPS1   2939    290C 2ABB 
PREPS2   2949    293B 293F 
PRINT    2ACF    219C 
PRINT1   2AE7    2AD1 2AD6 2AEE 2B09 2B1A 2B4D 2B5F 
PRINT2   2B54    2B02 
PRTCHR   E009    42B5 42B9 42EF 
PRTRSA   E836    42B5 42B9 
PRTTTY   1EA0    42B5 42B9 
PVECT    00B9    2FCF 4270 4275 4290 4294 
QERR     36FE    3718 3BDA 3D7A 3E51 4251 47B7 4A25 4A68 
QERR1    3D7A    3C0C 3D9E 3DF0 3DF6 
QERR2    4A25    4A1A 
RDFILE   E815    41F9 
READ     312E    2178 30AC 30E4 31DA 
READCH   F018    466C 
READFL   0049    2EB9 3134 315A 3179 3205 3242 37AF 4061 4065 40B5 40CC 
READ2    3172    3158 3167 31FE 
READ2A   3194    3185 318C 
READ3    31AC    3177 31A9 
READ5    31DD    3169 31FC 
READ6    3201    31D3 
READ7    3242    31BD 
REDO     322F    3260 3262 
REMARK   2A31    2188 26C2 
RENN     4BD3    
RENUMB   4B71    2194 
RESGP    442B    25A4 
RESTOR   2747    2182 25B3 3209 
RESTYP   0045    28FA 2A52 2A55 2B07 2B79 2B8A 2B8C 2BA9 2BB7 2DDE 2E30 
                 2E56 2F14 2F94 2F99 2FD4 3175 31AF 376A 39F1 39F3 39F6 
                 3A35 3A38 3A3C 3A75 3AB8 3B13 3BEE 3D97 4332 4336 4A73 
RETURN   27C5    2186 
RIGHT    3D2D    3934 

----------------------------------------------------------------------

GRAPHIC BASIC - GRAPHPACK          07/01/82   R65 ASSEMBLER  PAGE 73

RND      3FD3    3918 
RNDVAL   00D1    3FDA 3FDC 4014 4016 401B 401D 
RND1     401B    3FD8 
RND2     3FEF    3FD6 
RND3     4022    3FE1 3FE3 3FE8 3FEA 
RN10     4BDD    4BF8 
RN15     4BE0    4BDB 
RN20     4BEE    4BE3 
RN30     4BF4    4C04 
RN35     4BF7    4C11 4C4A 
RN40     4BFA    
RN45     4BFC    4C02 
RN50     4C06    4BFF 4C48 
RN60     4C25    4C37 
RN65     4C33    4C2E 
RN70     4C39    4C28 
RN75     4C3C    
RN78     4C3E    4C44 
RN80     4C46    4C3C 
ROR1     33FD    34FC 
ROR2     3444    345C 345E 
ROR2A    345A    3322 3734 
ROR3     3467    3479 
ROR4     3471    3361 3740 
ROR5     347B    3465 
ROUND    34EF    2A65 2E94 34C7 350F 37C2 3F0D 
RSTALL   45DB    2724 
RSTDEV   429F    234F 265E 2985 2AD9 455E 45E0 46EE 
RSTIDV   4617    30B3 4431 
RSTO1    45D1    2359 4568 
RUN      276E    217E 
SAVE     25B6    2369 
SAVEXY   00BF    2FC2 2FC4 2FC9 2FCB 
SAVFLP   34C3    2A77 32AB 3C94 3ED0 3F5B 3F75 4018 40B0 40BE 486F 
SAVPC    00B4    4C08 4C0C 4C19 4C1D 
SEARLN   2554    23A6 257F 25EF 274C 27AE 
SEARL5   2578    256D 
SEARL9   2582    2560 2568 2574 2576 
SEDPN    27F3    27E5 3015 31DD 
SEEOL    27F7    2796 2A31 
SEEOL1   27FF    2812 2814 
SETDEV   4255    25DE 2AD3 
SETDV0   4262    425A 
SETDV1   426D    42AF 4691 
SETDV2   4283    4262 4699 
SETDV3   45BA    429C 45F8 467D 
SETFAC   4CD3    4BA4 4C4C 
SETINP   45EF    30A1 30BF 
SETIN1   4602    4619 4684 
SETPC    25CC    2599 

----------------------------------------------------------------------

GRAPHIC BASIC - GRAPHPACK          07/01/82   R65 ASSEMBLER  PAGE 74

SETPTR   4CC2    4C83 4CA5 
SFLAG    1780    202E 2036 
SGN      352C    390A 
SGN1     351E    3060 352C 3555 355B 3589 3E4A 3FD3 
SIGN     009C    2E80 2ECD 3036 32A2 330C 3310 3346 33BC 3408 340C 348B 
                 34B5 34DF 3501 3522 3546 3559 3583 3633 36B2 36B6 3707 
                 3721 373B 3790 3799 3861 3866 3869 3875 3DEE 3E1E 3E2C 
                 3E2E 4007 4051 405D 40CA 40DC 438B 4800 4809 4A77 
SIMEXP   2F12    2DFD 2EDA 2F44 
SIMEX0   2F36    2F25 
SIMEX1   2F1B    2F38 2F3C 
SIMEX2   2F5F    2F48 
SIMEX5   2F7E    2F40 2F65 
SIN      4031    3920 40B7 
SIN0     4067    4054 405F 40D9 
SIN1     407E    402A 402C 4034 4036 404A 404C 406A 406C 4077 4079 40FE 
                 4100 
SIZE     0089    297F 2CB6 2CD3 2D59 2D5D 
SQR      3EB9    3916 
SRFILN   44A0    4457 459D 45BB 46B6 46D0 4B12 4B5E 
STA      4AB9    3912 
STACK    2816    27CB 2841 3004 3281 
STACK4   2843    2820 283A 284A 288B 
STA1     4AF4    4ABE 
STA2     4AFC    4AF7 
STA3     4B0B    4AFC 
STA5     4B11    4AF4 
STA6     4AEF    4B0E 4B19 4B22 
STEP     00B2    4B8F 4CDF 
STOP     271F    218A 
STOP1    273B    26CA 272B 
STOP2    2370    2741 4578 
STORE    414C    2192 
STPROG   0061    243C 243E 2554 2556 2588 258B 258D 2593 25CD 25D3 275A 
                 275C 27AA 27AC 2992 2994 29A7 29A9 29AD 29AF 29B1 29C3 
                 29C8 414F 4151 41EB 41ED 4B01 4B06 4B9C 4BA0 4BD3 4BD7 
STR      3CDC    392A 
STRADD   2ED4    2E34 
STRRAM   2006    298C 298F 
STRSIZ   289D    2880 2F53 31A0 3CEA 
STRSI1   28AD    28B8 
STRSI2   28BA    28B0 28B4 
STRSI3   28DC    28CF 2F0C 3CFE 3D2A 
STRST    004F    25B6 28DE 2988 2CA3 
STRSTP   004C    25B8 28DC 28FC 2901 2939 293D 2941 2945 296C 297B 298A 
                 2CAB 
STSPAC   0067    22C7 22C9 240F 2411 25AF 25B1 2C0F 2C11 2C67 2C6D 2C9B 
                 2C9D 2CD9 2CDD 3A49 3A4D 3AEA 3AEC 3B04 3B0C 3BFB 3C00 
STVAR    0063    23B1 23BF 23C1 23C5 23C9 23D1 23FB 2403 2413 2415 2591 
                 2597 25A7 25A9 2A8E 2A96 2BD4 2BD6 2CB8 2CBA 4159 415B 

----------------------------------------------------------------------

GRAPHIC BASIC - GRAPHPACK          07/01/82   R65 ASSEMBLER  PAGE 75

                 4210 4212 4224 4226 4A88 4A8A 4AFF 4B04 4C92 4C96 4CB9 
                 4CBD 4CBF 4CC2 4CC6 
STVECT   216A    26F8 26FC 
SUBERR   3A6E    3A82 3B36 
SUBTR    330C    2FE3 3E6F 3F3D 4047 404E 4102 
SYNERR   26BD    26F4 2858 2B32 2B71 2B85 2E1B 3083 3254 3CBD 41C8 4A02 
SYNER1   2B85    2BB3 
SYNER2   41C8    4178 4186 
SYS      3E3E    21A6 
TAB      2B2A    2AF2 2AF6 
TAB1     2B42    2AFE 2B28 2B38 2B3D 2B3F 2B48 2B51 
TAN      40AC    3922 
TAN1     40D8    40CE 
TAPAOF   14E5    442B 
TAPBOF   14E7    442E 
TDIR     2010    4AAA 
TEMP1    0058    22D0 22DF 22EA 2339 233C 2440 2442 2447 244F 2455 245A 
                 245C 2461 2463 2465 2852 285E 2861 2867 288D 2908 290A 
                 2912 2916 291A 2934 2936 2CA7 2CA9 2CBC 2CBE 2CE4 2CE6 
                 2CEA 2CEE 2CF2 2CF9 2D06 2D0D 2D0F 2D13 2D15 2D24 2D29 
                 2D2E 2D33 2D37 2D51 2D53 2D60 2D62 2D66 2D68 2DC2 2DC4 
                 2DCB 2E39 2E3C 2E87 2E8A 2E8C 2E90 2EA6 3042 3044 3297 
                 347D 347F 3483 3497 349E 34A0 34A4 34A9 34AE 34B3 34BC 
                 34CA 34CC 34D2 34D7 34DC 34E5 34EA 3AD2 3B4D 3B7B 3D1E 
                 3D20 3D24 3DA2 3DB8 3DBD 3DC1 419F 421A 421C 4B9E 4BA2 
                 4BA9 4BB0 4BB7 4BC0 4BC2 4BC4 4C88 4C8B 4C9A 4C9E 4CA0 
                 4CC4 4CC8 4CE8 4CEE 
TEMP2    0047    24B1 24C2 250F 2613 2642 2646 266D 2C5A 2C7E 2C8A 
TEMP3    007F    2630 2637 2675 27C9 2822 2829 282E 2835 2A49 2A4B 2A6F 
                 2A74 2AC2 2AC7 2ACC 2E4D 2EB5 3066 3069 3141 3143 327D 
                 327F 32A4 32A6 34C3 34C5 4192 41A1 
TEMP4    00CE    24DA 24DE 24F0 252D 2532 2548 254A 254E 267B 267D 2685 
                 268B 268D 2693 2698 2706 270E 2A44 2BFE 2F87 313C 3278 
                 39E2 39EE 3A3F 3A87 3C50 4329 
TEMP5    0086    2AA8 2AAA 2AB7 2AB9 2AC0 2AC5 2ACA 2DA6 2DA8 2EFB 2EFD 
                 3D04 3D09 3D13 3D15 3D31 3D54 3D70 3D73 
TEMP6    0084    2C99 2D55 2D57 2D6D 2D79 2D95 2D9D 3C5E 3C60 3C68 3C6B 
                 3C75 3C78 3C7C 3C87 3C9D 3CA2 3CB3 3CB6 3CC9 3CCD 3CD1 
                 3CD5 3CD9 3ECC 3ECE 3EDA 3EDC 3EEE 3EF0 40BA 40D1 47BF 
                 47D3 47EF 486B 486D 4880 4882 49CB 49CF 49DC 49DE 49E0 
                 49E4 49E8 49EA 49F3 
TEMP7    0075    31EC 31F1 324C 324E 
TEMP8    005A    354B 354D 3551 3557 3561 356A 3571 357C 3DBF 3DC8 3DCC 
                 3DD1 3DDC 4B96 4B9A 4BAB 4BCE 4BD1 4C51 4C55 4C59 4C75 
                 4CAA 4CAD 4CCC 4CD0 4CEA 4CF0 4CF6 4CFA 
TEMP9    005C    3444 37F2 3835 3839 383D 3841 3882 3884 3886 3888 38A6 
                 38AA 38AC 38AE 38B0 38B2 38B4 38B8 38D3 38D8 38E1 38EE 
                 38F5 38F8 38FE 3B66 3B7F 3B84 3B8C 3B97 3BB1 3BB5 
TESTEQ   3750    2FFB 
TESTE1   3768    3753 

----------------------------------------------------------------------

GRAPHIC BASIC - GRAPHPACK          07/01/82   R65 ASSEMBLER  PAGE 76

TESTE2   3795    3765 37A4 
TESTE3   37AC    379B 379E 37A8 
TESTTP   2DDD    2A5D 2E45 2EB2 2EDE 302D 3033 305D 36EF 3750 395D 397E 
                 398C 39A7 3BD0 3C30 3C62 3C71 3CAF 3CDC 3D8F 3E10 3E41 
                 418C 423C 4388 43DB 
TLETT    2C50    2B80 2B93 2B9E 2F1E 49FD 
TMSEC    1747    43EA 43F0 
TOKEN    4D08    4BFC 
TPMEM    006D    23F3 23F5 259C 259E 299C 299E 29C0 29C6 2C8F 2C91 
TPSTRG   006B    2C75 2C77 2DCD 2DD4 2DD6 2DDA 
TRANSP   0095    22CE 22D5 2321 23AD 23B5 23B9 23BC 23CB 23CF 241D 255A 
                 255C 255E 2566 2572 2579 257D 2615 2620 2624 2649 264E 
                 2652 2654 2656 2754 2756 27B8 27BE 2BDA 2BDC 2BE8 2BEF 
                 2BF5 2C0B 2C0D 2C31 2C36 2C3B 2C41 2C46 2C9F 2CA1 2D43 
                 2D49 2D4D 2D4F 2D7B 2D7F 35E8 35EA 35EC 35EE 3616 3642 
                 3A45 3A47 3A53 3A5C 3A61 3A64 3A68 3A6A 3A80 3A9D 3AA5 
                 3AB2 3AC5 3AC9 3B06 3B0A 3B0F 3B11 3B18 3B2A 3B32 3B7D 
                 3B82 3BE2 3BE4 
TRANS1   34FF    332C 39C1 3EE6 
TRANS2   350F    362A 36B9 36D8 3EB9 3F12 4031 403D 
TSROOM   2307    22C4 2309 230F 29B3 3A91 3AE7 
TSSTK    2334    2778 2DFA 3012 
TSTKEY   462C    460D 4612 
TSTRRM   2DA2    28D2 2AA5 2EF5 3CF4 3D10 
TSTRR1   2C5A    2C8D 2DAA 
TSTRR2   2C7C    2C69 2C6F 
UNDEFS   27B3    21BE 21C2 21C4 2751 
UNDERF   33B8    33EF 
UNDFN    3905    3C80 
UPDPC    2F56    31A3 3DDE 
USPAD    1700    
USR      4149    3910 
VAL      3DA8    392C 
VAL1     3072    3049 304B 
VARIAB   2F85    2F21 
VARSTP   007D    2C4B 2C4D 3B70 3B75 3B78 3C3C 3C3F 3C83 3C89 3C8C 3C92 
                 3CA6 3CA9 491F 4936 
VARSYM   007B    2B7B 2BB9 2BBB 2BC4 2BE6 2BEC 2C2F 2C34 2F90 2F92 39FD 
                 3A00 3A07 3A0A 3A56 3A5A 3A9B 3AA3 3B5B 3B60 
VAUTOP   178C    4B36 4B3C 4B55 4B5A 
VFLAG    1780    201C 2343 2348 42DD 42E2 4552 4557 4B0B 4B29 4B2E 4B47 
                 4B4C 4D1A 
VIDPNT   00E9    2470 
VIPNT2   00EB    4D2A 4D2C 
WAIT     43D8    218E 
WAIT1    43E8    43E5 43F8 
WARMST   237B    2003 2376 2668 2744 29D0 41E5 4BEB 
WARM1    2382    238C 242C 4428 
WRFILE   E81B    417A 
WRITCH   F01B    45C9 

----------------------------------------------------------------------

GRAPHIC BASIC - GRAPHPACK          07/01/82   R65 ASSEMBLER  PAGE 77

XCURS    00AE    43C9 4648 4651 4662 4AC0 4D3A 4D40 4D95 4DEC 4DFA 4DFE 
                 4E02 4E41 4E55 
XINCR    00B0    432E 4330 4B71 4D97 4D9F 4DD7 4DD9 4DF6 4DFC 4E2F 4E36 
                 4E3B 4E3F 4E83 4ED2 4ED8 4EE2 4EE9 
XLOW     00B4    4B71 4DE8 4DF4 4DF8 4E77 4E85 
YCURS    00AF    43D0 43D5 4AC2 4D38 4D42 4DAC 4DEE 4E0C 4E10 4E23 4E27 
                 4E49 
YINCR    00B2    4B71 4DAE 4DB4 4DBA 4DC1 4DDB 4DDD 4E08 4E0E 4E1F 4E25 
                 4E7F 4E88 4E9A 4EA8 4EB8 4ED4 4EDC 4EE4 4EEB 
YLOW     00B5    4DEA 4E06 4E0A 4E1D 4E21 

